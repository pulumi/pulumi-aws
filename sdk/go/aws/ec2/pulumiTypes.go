// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type AmiCopyEbsBlockDevice struct {
	// Boolean controlling whether the EBS volumes created to
	// support each created instance will be deleted once that instance is terminated.
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// The path at which the device is exposed to created instances.
	DeviceName *string `pulumi:"deviceName"`
	// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
	Encrypted *bool `pulumi:"encrypted"`
	// Number of I/O operations per second the
	// created volumes will support.
	Iops *int `pulumi:"iops"`
	// The id of an EBS snapshot that will be used to initialize the created
	// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
	// snapshot.
	SnapshotId *string `pulumi:"snapshotId"`
	// The size of created volumes in GiB.
	// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
	// as the selected snapshot.
	VolumeSize *int `pulumi:"volumeSize"`
	// The type of EBS volume to create. Can be one of "standard" (the
	// default), "io1" or "gp2".
	VolumeType *string `pulumi:"volumeType"`
}

// AmiCopyEbsBlockDeviceInput is an input type that accepts AmiCopyEbsBlockDeviceArgs and AmiCopyEbsBlockDeviceOutput values.
// You can construct a concrete instance of `AmiCopyEbsBlockDeviceInput` via:
//
// 		 AmiCopyEbsBlockDeviceArgs{...}
//
type AmiCopyEbsBlockDeviceInput interface {
	pulumi.Input

	ToAmiCopyEbsBlockDeviceOutput() AmiCopyEbsBlockDeviceOutput
	ToAmiCopyEbsBlockDeviceOutputWithContext(context.Context) AmiCopyEbsBlockDeviceOutput
}

type AmiCopyEbsBlockDeviceArgs struct {
	// Boolean controlling whether the EBS volumes created to
	// support each created instance will be deleted once that instance is terminated.
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// The path at which the device is exposed to created instances.
	DeviceName pulumi.StringPtrInput `pulumi:"deviceName"`
	// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	// Number of I/O operations per second the
	// created volumes will support.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// The id of an EBS snapshot that will be used to initialize the created
	// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
	// snapshot.
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
	// The size of created volumes in GiB.
	// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
	// as the selected snapshot.
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
	// The type of EBS volume to create. Can be one of "standard" (the
	// default), "io1" or "gp2".
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (AmiCopyEbsBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiCopyEbsBlockDevice)(nil)).Elem()
}

func (i AmiCopyEbsBlockDeviceArgs) ToAmiCopyEbsBlockDeviceOutput() AmiCopyEbsBlockDeviceOutput {
	return i.ToAmiCopyEbsBlockDeviceOutputWithContext(context.Background())
}

func (i AmiCopyEbsBlockDeviceArgs) ToAmiCopyEbsBlockDeviceOutputWithContext(ctx context.Context) AmiCopyEbsBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiCopyEbsBlockDeviceOutput)
}

// AmiCopyEbsBlockDeviceArrayInput is an input type that accepts AmiCopyEbsBlockDeviceArray and AmiCopyEbsBlockDeviceArrayOutput values.
// You can construct a concrete instance of `AmiCopyEbsBlockDeviceArrayInput` via:
//
// 		 AmiCopyEbsBlockDeviceArray{ AmiCopyEbsBlockDeviceArgs{...} }
//
type AmiCopyEbsBlockDeviceArrayInput interface {
	pulumi.Input

	ToAmiCopyEbsBlockDeviceArrayOutput() AmiCopyEbsBlockDeviceArrayOutput
	ToAmiCopyEbsBlockDeviceArrayOutputWithContext(context.Context) AmiCopyEbsBlockDeviceArrayOutput
}

type AmiCopyEbsBlockDeviceArray []AmiCopyEbsBlockDeviceInput

func (AmiCopyEbsBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiCopyEbsBlockDevice)(nil)).Elem()
}

func (i AmiCopyEbsBlockDeviceArray) ToAmiCopyEbsBlockDeviceArrayOutput() AmiCopyEbsBlockDeviceArrayOutput {
	return i.ToAmiCopyEbsBlockDeviceArrayOutputWithContext(context.Background())
}

func (i AmiCopyEbsBlockDeviceArray) ToAmiCopyEbsBlockDeviceArrayOutputWithContext(ctx context.Context) AmiCopyEbsBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiCopyEbsBlockDeviceArrayOutput)
}

type AmiCopyEbsBlockDeviceOutput struct{ *pulumi.OutputState }

func (AmiCopyEbsBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiCopyEbsBlockDevice)(nil)).Elem()
}

func (o AmiCopyEbsBlockDeviceOutput) ToAmiCopyEbsBlockDeviceOutput() AmiCopyEbsBlockDeviceOutput {
	return o
}

func (o AmiCopyEbsBlockDeviceOutput) ToAmiCopyEbsBlockDeviceOutputWithContext(ctx context.Context) AmiCopyEbsBlockDeviceOutput {
	return o
}

// Boolean controlling whether the EBS volumes created to
// support each created instance will be deleted once that instance is terminated.
func (o AmiCopyEbsBlockDeviceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AmiCopyEbsBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// The path at which the device is exposed to created instances.
func (o AmiCopyEbsBlockDeviceOutput) DeviceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiCopyEbsBlockDevice) *string { return v.DeviceName }).(pulumi.StringPtrOutput)
}

// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
func (o AmiCopyEbsBlockDeviceOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AmiCopyEbsBlockDevice) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// Number of I/O operations per second the
// created volumes will support.
func (o AmiCopyEbsBlockDeviceOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AmiCopyEbsBlockDevice) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// The id of an EBS snapshot that will be used to initialize the created
// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
// snapshot.
func (o AmiCopyEbsBlockDeviceOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiCopyEbsBlockDevice) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

// The size of created volumes in GiB.
// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
// as the selected snapshot.
func (o AmiCopyEbsBlockDeviceOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AmiCopyEbsBlockDevice) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// The type of EBS volume to create. Can be one of "standard" (the
// default), "io1" or "gp2".
func (o AmiCopyEbsBlockDeviceOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiCopyEbsBlockDevice) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type AmiCopyEbsBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (AmiCopyEbsBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiCopyEbsBlockDevice)(nil)).Elem()
}

func (o AmiCopyEbsBlockDeviceArrayOutput) ToAmiCopyEbsBlockDeviceArrayOutput() AmiCopyEbsBlockDeviceArrayOutput {
	return o
}

func (o AmiCopyEbsBlockDeviceArrayOutput) ToAmiCopyEbsBlockDeviceArrayOutputWithContext(ctx context.Context) AmiCopyEbsBlockDeviceArrayOutput {
	return o
}

func (o AmiCopyEbsBlockDeviceArrayOutput) Index(i pulumi.IntInput) AmiCopyEbsBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AmiCopyEbsBlockDevice {
		return vs[0].([]AmiCopyEbsBlockDevice)[vs[1].(int)]
	}).(AmiCopyEbsBlockDeviceOutput)
}

type AmiCopyEphemeralBlockDevice struct {
	// The path at which the device is exposed to created instances.
	DeviceName *string `pulumi:"deviceName"`
	// A name for the ephemeral device, of the form "ephemeralN" where
	// *N* is a volume number starting from zero.
	VirtualName *string `pulumi:"virtualName"`
}

// AmiCopyEphemeralBlockDeviceInput is an input type that accepts AmiCopyEphemeralBlockDeviceArgs and AmiCopyEphemeralBlockDeviceOutput values.
// You can construct a concrete instance of `AmiCopyEphemeralBlockDeviceInput` via:
//
// 		 AmiCopyEphemeralBlockDeviceArgs{...}
//
type AmiCopyEphemeralBlockDeviceInput interface {
	pulumi.Input

	ToAmiCopyEphemeralBlockDeviceOutput() AmiCopyEphemeralBlockDeviceOutput
	ToAmiCopyEphemeralBlockDeviceOutputWithContext(context.Context) AmiCopyEphemeralBlockDeviceOutput
}

type AmiCopyEphemeralBlockDeviceArgs struct {
	// The path at which the device is exposed to created instances.
	DeviceName pulumi.StringPtrInput `pulumi:"deviceName"`
	// A name for the ephemeral device, of the form "ephemeralN" where
	// *N* is a volume number starting from zero.
	VirtualName pulumi.StringPtrInput `pulumi:"virtualName"`
}

func (AmiCopyEphemeralBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiCopyEphemeralBlockDevice)(nil)).Elem()
}

func (i AmiCopyEphemeralBlockDeviceArgs) ToAmiCopyEphemeralBlockDeviceOutput() AmiCopyEphemeralBlockDeviceOutput {
	return i.ToAmiCopyEphemeralBlockDeviceOutputWithContext(context.Background())
}

func (i AmiCopyEphemeralBlockDeviceArgs) ToAmiCopyEphemeralBlockDeviceOutputWithContext(ctx context.Context) AmiCopyEphemeralBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiCopyEphemeralBlockDeviceOutput)
}

// AmiCopyEphemeralBlockDeviceArrayInput is an input type that accepts AmiCopyEphemeralBlockDeviceArray and AmiCopyEphemeralBlockDeviceArrayOutput values.
// You can construct a concrete instance of `AmiCopyEphemeralBlockDeviceArrayInput` via:
//
// 		 AmiCopyEphemeralBlockDeviceArray{ AmiCopyEphemeralBlockDeviceArgs{...} }
//
type AmiCopyEphemeralBlockDeviceArrayInput interface {
	pulumi.Input

	ToAmiCopyEphemeralBlockDeviceArrayOutput() AmiCopyEphemeralBlockDeviceArrayOutput
	ToAmiCopyEphemeralBlockDeviceArrayOutputWithContext(context.Context) AmiCopyEphemeralBlockDeviceArrayOutput
}

type AmiCopyEphemeralBlockDeviceArray []AmiCopyEphemeralBlockDeviceInput

func (AmiCopyEphemeralBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiCopyEphemeralBlockDevice)(nil)).Elem()
}

func (i AmiCopyEphemeralBlockDeviceArray) ToAmiCopyEphemeralBlockDeviceArrayOutput() AmiCopyEphemeralBlockDeviceArrayOutput {
	return i.ToAmiCopyEphemeralBlockDeviceArrayOutputWithContext(context.Background())
}

func (i AmiCopyEphemeralBlockDeviceArray) ToAmiCopyEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) AmiCopyEphemeralBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiCopyEphemeralBlockDeviceArrayOutput)
}

type AmiCopyEphemeralBlockDeviceOutput struct{ *pulumi.OutputState }

func (AmiCopyEphemeralBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiCopyEphemeralBlockDevice)(nil)).Elem()
}

func (o AmiCopyEphemeralBlockDeviceOutput) ToAmiCopyEphemeralBlockDeviceOutput() AmiCopyEphemeralBlockDeviceOutput {
	return o
}

func (o AmiCopyEphemeralBlockDeviceOutput) ToAmiCopyEphemeralBlockDeviceOutputWithContext(ctx context.Context) AmiCopyEphemeralBlockDeviceOutput {
	return o
}

// The path at which the device is exposed to created instances.
func (o AmiCopyEphemeralBlockDeviceOutput) DeviceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiCopyEphemeralBlockDevice) *string { return v.DeviceName }).(pulumi.StringPtrOutput)
}

// A name for the ephemeral device, of the form "ephemeralN" where
// *N* is a volume number starting from zero.
func (o AmiCopyEphemeralBlockDeviceOutput) VirtualName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiCopyEphemeralBlockDevice) *string { return v.VirtualName }).(pulumi.StringPtrOutput)
}

type AmiCopyEphemeralBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (AmiCopyEphemeralBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiCopyEphemeralBlockDevice)(nil)).Elem()
}

func (o AmiCopyEphemeralBlockDeviceArrayOutput) ToAmiCopyEphemeralBlockDeviceArrayOutput() AmiCopyEphemeralBlockDeviceArrayOutput {
	return o
}

func (o AmiCopyEphemeralBlockDeviceArrayOutput) ToAmiCopyEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) AmiCopyEphemeralBlockDeviceArrayOutput {
	return o
}

func (o AmiCopyEphemeralBlockDeviceArrayOutput) Index(i pulumi.IntInput) AmiCopyEphemeralBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AmiCopyEphemeralBlockDevice {
		return vs[0].([]AmiCopyEphemeralBlockDevice)[vs[1].(int)]
	}).(AmiCopyEphemeralBlockDeviceOutput)
}

type AmiEbsBlockDevice struct {
	// Boolean controlling whether the EBS volumes created to
	// support each created instance will be deleted once that instance is terminated.
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// The path at which the device is exposed to created instances.
	DeviceName string `pulumi:"deviceName"`
	// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
	Encrypted *bool `pulumi:"encrypted"`
	// Number of I/O operations per second the
	// created volumes will support.
	Iops *int `pulumi:"iops"`
	// The id of an EBS snapshot that will be used to initialize the created
	// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
	// snapshot.
	SnapshotId *string `pulumi:"snapshotId"`
	// The size of created volumes in GiB.
	// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
	// as the selected snapshot.
	VolumeSize *int `pulumi:"volumeSize"`
	// The type of EBS volume to create. Can be one of "standard" (the
	// default), "io1" or "gp2".
	VolumeType *string `pulumi:"volumeType"`
}

// AmiEbsBlockDeviceInput is an input type that accepts AmiEbsBlockDeviceArgs and AmiEbsBlockDeviceOutput values.
// You can construct a concrete instance of `AmiEbsBlockDeviceInput` via:
//
// 		 AmiEbsBlockDeviceArgs{...}
//
type AmiEbsBlockDeviceInput interface {
	pulumi.Input

	ToAmiEbsBlockDeviceOutput() AmiEbsBlockDeviceOutput
	ToAmiEbsBlockDeviceOutputWithContext(context.Context) AmiEbsBlockDeviceOutput
}

type AmiEbsBlockDeviceArgs struct {
	// Boolean controlling whether the EBS volumes created to
	// support each created instance will be deleted once that instance is terminated.
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// The path at which the device is exposed to created instances.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	// Number of I/O operations per second the
	// created volumes will support.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// The id of an EBS snapshot that will be used to initialize the created
	// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
	// snapshot.
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
	// The size of created volumes in GiB.
	// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
	// as the selected snapshot.
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
	// The type of EBS volume to create. Can be one of "standard" (the
	// default), "io1" or "gp2".
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (AmiEbsBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiEbsBlockDevice)(nil)).Elem()
}

func (i AmiEbsBlockDeviceArgs) ToAmiEbsBlockDeviceOutput() AmiEbsBlockDeviceOutput {
	return i.ToAmiEbsBlockDeviceOutputWithContext(context.Background())
}

func (i AmiEbsBlockDeviceArgs) ToAmiEbsBlockDeviceOutputWithContext(ctx context.Context) AmiEbsBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiEbsBlockDeviceOutput)
}

// AmiEbsBlockDeviceArrayInput is an input type that accepts AmiEbsBlockDeviceArray and AmiEbsBlockDeviceArrayOutput values.
// You can construct a concrete instance of `AmiEbsBlockDeviceArrayInput` via:
//
// 		 AmiEbsBlockDeviceArray{ AmiEbsBlockDeviceArgs{...} }
//
type AmiEbsBlockDeviceArrayInput interface {
	pulumi.Input

	ToAmiEbsBlockDeviceArrayOutput() AmiEbsBlockDeviceArrayOutput
	ToAmiEbsBlockDeviceArrayOutputWithContext(context.Context) AmiEbsBlockDeviceArrayOutput
}

type AmiEbsBlockDeviceArray []AmiEbsBlockDeviceInput

func (AmiEbsBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiEbsBlockDevice)(nil)).Elem()
}

func (i AmiEbsBlockDeviceArray) ToAmiEbsBlockDeviceArrayOutput() AmiEbsBlockDeviceArrayOutput {
	return i.ToAmiEbsBlockDeviceArrayOutputWithContext(context.Background())
}

func (i AmiEbsBlockDeviceArray) ToAmiEbsBlockDeviceArrayOutputWithContext(ctx context.Context) AmiEbsBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiEbsBlockDeviceArrayOutput)
}

type AmiEbsBlockDeviceOutput struct{ *pulumi.OutputState }

func (AmiEbsBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiEbsBlockDevice)(nil)).Elem()
}

func (o AmiEbsBlockDeviceOutput) ToAmiEbsBlockDeviceOutput() AmiEbsBlockDeviceOutput {
	return o
}

func (o AmiEbsBlockDeviceOutput) ToAmiEbsBlockDeviceOutputWithContext(ctx context.Context) AmiEbsBlockDeviceOutput {
	return o
}

// Boolean controlling whether the EBS volumes created to
// support each created instance will be deleted once that instance is terminated.
func (o AmiEbsBlockDeviceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AmiEbsBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// The path at which the device is exposed to created instances.
func (o AmiEbsBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v AmiEbsBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
func (o AmiEbsBlockDeviceOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AmiEbsBlockDevice) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// Number of I/O operations per second the
// created volumes will support.
func (o AmiEbsBlockDeviceOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AmiEbsBlockDevice) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// The id of an EBS snapshot that will be used to initialize the created
// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
// snapshot.
func (o AmiEbsBlockDeviceOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiEbsBlockDevice) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

// The size of created volumes in GiB.
// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
// as the selected snapshot.
func (o AmiEbsBlockDeviceOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AmiEbsBlockDevice) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// The type of EBS volume to create. Can be one of "standard" (the
// default), "io1" or "gp2".
func (o AmiEbsBlockDeviceOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiEbsBlockDevice) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type AmiEbsBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (AmiEbsBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiEbsBlockDevice)(nil)).Elem()
}

func (o AmiEbsBlockDeviceArrayOutput) ToAmiEbsBlockDeviceArrayOutput() AmiEbsBlockDeviceArrayOutput {
	return o
}

func (o AmiEbsBlockDeviceArrayOutput) ToAmiEbsBlockDeviceArrayOutputWithContext(ctx context.Context) AmiEbsBlockDeviceArrayOutput {
	return o
}

func (o AmiEbsBlockDeviceArrayOutput) Index(i pulumi.IntInput) AmiEbsBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AmiEbsBlockDevice {
		return vs[0].([]AmiEbsBlockDevice)[vs[1].(int)]
	}).(AmiEbsBlockDeviceOutput)
}

type AmiEphemeralBlockDevice struct {
	// The path at which the device is exposed to created instances.
	DeviceName string `pulumi:"deviceName"`
	// A name for the ephemeral device, of the form "ephemeralN" where
	// *N* is a volume number starting from zero.
	VirtualName string `pulumi:"virtualName"`
}

// AmiEphemeralBlockDeviceInput is an input type that accepts AmiEphemeralBlockDeviceArgs and AmiEphemeralBlockDeviceOutput values.
// You can construct a concrete instance of `AmiEphemeralBlockDeviceInput` via:
//
// 		 AmiEphemeralBlockDeviceArgs{...}
//
type AmiEphemeralBlockDeviceInput interface {
	pulumi.Input

	ToAmiEphemeralBlockDeviceOutput() AmiEphemeralBlockDeviceOutput
	ToAmiEphemeralBlockDeviceOutputWithContext(context.Context) AmiEphemeralBlockDeviceOutput
}

type AmiEphemeralBlockDeviceArgs struct {
	// The path at which the device is exposed to created instances.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// A name for the ephemeral device, of the form "ephemeralN" where
	// *N* is a volume number starting from zero.
	VirtualName pulumi.StringInput `pulumi:"virtualName"`
}

func (AmiEphemeralBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiEphemeralBlockDevice)(nil)).Elem()
}

func (i AmiEphemeralBlockDeviceArgs) ToAmiEphemeralBlockDeviceOutput() AmiEphemeralBlockDeviceOutput {
	return i.ToAmiEphemeralBlockDeviceOutputWithContext(context.Background())
}

func (i AmiEphemeralBlockDeviceArgs) ToAmiEphemeralBlockDeviceOutputWithContext(ctx context.Context) AmiEphemeralBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiEphemeralBlockDeviceOutput)
}

// AmiEphemeralBlockDeviceArrayInput is an input type that accepts AmiEphemeralBlockDeviceArray and AmiEphemeralBlockDeviceArrayOutput values.
// You can construct a concrete instance of `AmiEphemeralBlockDeviceArrayInput` via:
//
// 		 AmiEphemeralBlockDeviceArray{ AmiEphemeralBlockDeviceArgs{...} }
//
type AmiEphemeralBlockDeviceArrayInput interface {
	pulumi.Input

	ToAmiEphemeralBlockDeviceArrayOutput() AmiEphemeralBlockDeviceArrayOutput
	ToAmiEphemeralBlockDeviceArrayOutputWithContext(context.Context) AmiEphemeralBlockDeviceArrayOutput
}

type AmiEphemeralBlockDeviceArray []AmiEphemeralBlockDeviceInput

func (AmiEphemeralBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiEphemeralBlockDevice)(nil)).Elem()
}

func (i AmiEphemeralBlockDeviceArray) ToAmiEphemeralBlockDeviceArrayOutput() AmiEphemeralBlockDeviceArrayOutput {
	return i.ToAmiEphemeralBlockDeviceArrayOutputWithContext(context.Background())
}

func (i AmiEphemeralBlockDeviceArray) ToAmiEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) AmiEphemeralBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiEphemeralBlockDeviceArrayOutput)
}

type AmiEphemeralBlockDeviceOutput struct{ *pulumi.OutputState }

func (AmiEphemeralBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiEphemeralBlockDevice)(nil)).Elem()
}

func (o AmiEphemeralBlockDeviceOutput) ToAmiEphemeralBlockDeviceOutput() AmiEphemeralBlockDeviceOutput {
	return o
}

func (o AmiEphemeralBlockDeviceOutput) ToAmiEphemeralBlockDeviceOutputWithContext(ctx context.Context) AmiEphemeralBlockDeviceOutput {
	return o
}

// The path at which the device is exposed to created instances.
func (o AmiEphemeralBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v AmiEphemeralBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

// A name for the ephemeral device, of the form "ephemeralN" where
// *N* is a volume number starting from zero.
func (o AmiEphemeralBlockDeviceOutput) VirtualName() pulumi.StringOutput {
	return o.ApplyT(func(v AmiEphemeralBlockDevice) string { return v.VirtualName }).(pulumi.StringOutput)
}

type AmiEphemeralBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (AmiEphemeralBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiEphemeralBlockDevice)(nil)).Elem()
}

func (o AmiEphemeralBlockDeviceArrayOutput) ToAmiEphemeralBlockDeviceArrayOutput() AmiEphemeralBlockDeviceArrayOutput {
	return o
}

func (o AmiEphemeralBlockDeviceArrayOutput) ToAmiEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) AmiEphemeralBlockDeviceArrayOutput {
	return o
}

func (o AmiEphemeralBlockDeviceArrayOutput) Index(i pulumi.IntInput) AmiEphemeralBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AmiEphemeralBlockDevice {
		return vs[0].([]AmiEphemeralBlockDevice)[vs[1].(int)]
	}).(AmiEphemeralBlockDeviceOutput)
}

type AmiFromInstanceEbsBlockDevice struct {
	// Boolean controlling whether the EBS volumes created to
	// support each created instance will be deleted once that instance is terminated.
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// The path at which the device is exposed to created instances.
	DeviceName *string `pulumi:"deviceName"`
	// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
	Encrypted *bool `pulumi:"encrypted"`
	// Number of I/O operations per second the
	// created volumes will support.
	Iops *int `pulumi:"iops"`
	// The id of an EBS snapshot that will be used to initialize the created
	// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
	// snapshot.
	SnapshotId *string `pulumi:"snapshotId"`
	// The size of created volumes in GiB.
	// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
	// as the selected snapshot.
	VolumeSize *int `pulumi:"volumeSize"`
	// The type of EBS volume to create. Can be one of "standard" (the
	// default), "io1" or "gp2".
	VolumeType *string `pulumi:"volumeType"`
}

// AmiFromInstanceEbsBlockDeviceInput is an input type that accepts AmiFromInstanceEbsBlockDeviceArgs and AmiFromInstanceEbsBlockDeviceOutput values.
// You can construct a concrete instance of `AmiFromInstanceEbsBlockDeviceInput` via:
//
// 		 AmiFromInstanceEbsBlockDeviceArgs{...}
//
type AmiFromInstanceEbsBlockDeviceInput interface {
	pulumi.Input

	ToAmiFromInstanceEbsBlockDeviceOutput() AmiFromInstanceEbsBlockDeviceOutput
	ToAmiFromInstanceEbsBlockDeviceOutputWithContext(context.Context) AmiFromInstanceEbsBlockDeviceOutput
}

type AmiFromInstanceEbsBlockDeviceArgs struct {
	// Boolean controlling whether the EBS volumes created to
	// support each created instance will be deleted once that instance is terminated.
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// The path at which the device is exposed to created instances.
	DeviceName pulumi.StringPtrInput `pulumi:"deviceName"`
	// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	// Number of I/O operations per second the
	// created volumes will support.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// The id of an EBS snapshot that will be used to initialize the created
	// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
	// snapshot.
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
	// The size of created volumes in GiB.
	// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
	// as the selected snapshot.
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
	// The type of EBS volume to create. Can be one of "standard" (the
	// default), "io1" or "gp2".
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (AmiFromInstanceEbsBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiFromInstanceEbsBlockDevice)(nil)).Elem()
}

func (i AmiFromInstanceEbsBlockDeviceArgs) ToAmiFromInstanceEbsBlockDeviceOutput() AmiFromInstanceEbsBlockDeviceOutput {
	return i.ToAmiFromInstanceEbsBlockDeviceOutputWithContext(context.Background())
}

func (i AmiFromInstanceEbsBlockDeviceArgs) ToAmiFromInstanceEbsBlockDeviceOutputWithContext(ctx context.Context) AmiFromInstanceEbsBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiFromInstanceEbsBlockDeviceOutput)
}

// AmiFromInstanceEbsBlockDeviceArrayInput is an input type that accepts AmiFromInstanceEbsBlockDeviceArray and AmiFromInstanceEbsBlockDeviceArrayOutput values.
// You can construct a concrete instance of `AmiFromInstanceEbsBlockDeviceArrayInput` via:
//
// 		 AmiFromInstanceEbsBlockDeviceArray{ AmiFromInstanceEbsBlockDeviceArgs{...} }
//
type AmiFromInstanceEbsBlockDeviceArrayInput interface {
	pulumi.Input

	ToAmiFromInstanceEbsBlockDeviceArrayOutput() AmiFromInstanceEbsBlockDeviceArrayOutput
	ToAmiFromInstanceEbsBlockDeviceArrayOutputWithContext(context.Context) AmiFromInstanceEbsBlockDeviceArrayOutput
}

type AmiFromInstanceEbsBlockDeviceArray []AmiFromInstanceEbsBlockDeviceInput

func (AmiFromInstanceEbsBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiFromInstanceEbsBlockDevice)(nil)).Elem()
}

func (i AmiFromInstanceEbsBlockDeviceArray) ToAmiFromInstanceEbsBlockDeviceArrayOutput() AmiFromInstanceEbsBlockDeviceArrayOutput {
	return i.ToAmiFromInstanceEbsBlockDeviceArrayOutputWithContext(context.Background())
}

func (i AmiFromInstanceEbsBlockDeviceArray) ToAmiFromInstanceEbsBlockDeviceArrayOutputWithContext(ctx context.Context) AmiFromInstanceEbsBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiFromInstanceEbsBlockDeviceArrayOutput)
}

type AmiFromInstanceEbsBlockDeviceOutput struct{ *pulumi.OutputState }

func (AmiFromInstanceEbsBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiFromInstanceEbsBlockDevice)(nil)).Elem()
}

func (o AmiFromInstanceEbsBlockDeviceOutput) ToAmiFromInstanceEbsBlockDeviceOutput() AmiFromInstanceEbsBlockDeviceOutput {
	return o
}

func (o AmiFromInstanceEbsBlockDeviceOutput) ToAmiFromInstanceEbsBlockDeviceOutputWithContext(ctx context.Context) AmiFromInstanceEbsBlockDeviceOutput {
	return o
}

// Boolean controlling whether the EBS volumes created to
// support each created instance will be deleted once that instance is terminated.
func (o AmiFromInstanceEbsBlockDeviceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AmiFromInstanceEbsBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// The path at which the device is exposed to created instances.
func (o AmiFromInstanceEbsBlockDeviceOutput) DeviceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiFromInstanceEbsBlockDevice) *string { return v.DeviceName }).(pulumi.StringPtrOutput)
}

// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
func (o AmiFromInstanceEbsBlockDeviceOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AmiFromInstanceEbsBlockDevice) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// Number of I/O operations per second the
// created volumes will support.
func (o AmiFromInstanceEbsBlockDeviceOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AmiFromInstanceEbsBlockDevice) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// The id of an EBS snapshot that will be used to initialize the created
// EBS volumes. If set, the `volumeSize` attribute must be at least as large as the referenced
// snapshot.
func (o AmiFromInstanceEbsBlockDeviceOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiFromInstanceEbsBlockDevice) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

// The size of created volumes in GiB.
// If `snapshotId` is set and `volumeSize` is omitted then the volume will have the same size
// as the selected snapshot.
func (o AmiFromInstanceEbsBlockDeviceOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AmiFromInstanceEbsBlockDevice) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// The type of EBS volume to create. Can be one of "standard" (the
// default), "io1" or "gp2".
func (o AmiFromInstanceEbsBlockDeviceOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiFromInstanceEbsBlockDevice) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type AmiFromInstanceEbsBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (AmiFromInstanceEbsBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiFromInstanceEbsBlockDevice)(nil)).Elem()
}

func (o AmiFromInstanceEbsBlockDeviceArrayOutput) ToAmiFromInstanceEbsBlockDeviceArrayOutput() AmiFromInstanceEbsBlockDeviceArrayOutput {
	return o
}

func (o AmiFromInstanceEbsBlockDeviceArrayOutput) ToAmiFromInstanceEbsBlockDeviceArrayOutputWithContext(ctx context.Context) AmiFromInstanceEbsBlockDeviceArrayOutput {
	return o
}

func (o AmiFromInstanceEbsBlockDeviceArrayOutput) Index(i pulumi.IntInput) AmiFromInstanceEbsBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AmiFromInstanceEbsBlockDevice {
		return vs[0].([]AmiFromInstanceEbsBlockDevice)[vs[1].(int)]
	}).(AmiFromInstanceEbsBlockDeviceOutput)
}

type AmiFromInstanceEphemeralBlockDevice struct {
	// The path at which the device is exposed to created instances.
	DeviceName *string `pulumi:"deviceName"`
	// A name for the ephemeral device, of the form "ephemeralN" where
	// *N* is a volume number starting from zero.
	VirtualName *string `pulumi:"virtualName"`
}

// AmiFromInstanceEphemeralBlockDeviceInput is an input type that accepts AmiFromInstanceEphemeralBlockDeviceArgs and AmiFromInstanceEphemeralBlockDeviceOutput values.
// You can construct a concrete instance of `AmiFromInstanceEphemeralBlockDeviceInput` via:
//
// 		 AmiFromInstanceEphemeralBlockDeviceArgs{...}
//
type AmiFromInstanceEphemeralBlockDeviceInput interface {
	pulumi.Input

	ToAmiFromInstanceEphemeralBlockDeviceOutput() AmiFromInstanceEphemeralBlockDeviceOutput
	ToAmiFromInstanceEphemeralBlockDeviceOutputWithContext(context.Context) AmiFromInstanceEphemeralBlockDeviceOutput
}

type AmiFromInstanceEphemeralBlockDeviceArgs struct {
	// The path at which the device is exposed to created instances.
	DeviceName pulumi.StringPtrInput `pulumi:"deviceName"`
	// A name for the ephemeral device, of the form "ephemeralN" where
	// *N* is a volume number starting from zero.
	VirtualName pulumi.StringPtrInput `pulumi:"virtualName"`
}

func (AmiFromInstanceEphemeralBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiFromInstanceEphemeralBlockDevice)(nil)).Elem()
}

func (i AmiFromInstanceEphemeralBlockDeviceArgs) ToAmiFromInstanceEphemeralBlockDeviceOutput() AmiFromInstanceEphemeralBlockDeviceOutput {
	return i.ToAmiFromInstanceEphemeralBlockDeviceOutputWithContext(context.Background())
}

func (i AmiFromInstanceEphemeralBlockDeviceArgs) ToAmiFromInstanceEphemeralBlockDeviceOutputWithContext(ctx context.Context) AmiFromInstanceEphemeralBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiFromInstanceEphemeralBlockDeviceOutput)
}

// AmiFromInstanceEphemeralBlockDeviceArrayInput is an input type that accepts AmiFromInstanceEphemeralBlockDeviceArray and AmiFromInstanceEphemeralBlockDeviceArrayOutput values.
// You can construct a concrete instance of `AmiFromInstanceEphemeralBlockDeviceArrayInput` via:
//
// 		 AmiFromInstanceEphemeralBlockDeviceArray{ AmiFromInstanceEphemeralBlockDeviceArgs{...} }
//
type AmiFromInstanceEphemeralBlockDeviceArrayInput interface {
	pulumi.Input

	ToAmiFromInstanceEphemeralBlockDeviceArrayOutput() AmiFromInstanceEphemeralBlockDeviceArrayOutput
	ToAmiFromInstanceEphemeralBlockDeviceArrayOutputWithContext(context.Context) AmiFromInstanceEphemeralBlockDeviceArrayOutput
}

type AmiFromInstanceEphemeralBlockDeviceArray []AmiFromInstanceEphemeralBlockDeviceInput

func (AmiFromInstanceEphemeralBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiFromInstanceEphemeralBlockDevice)(nil)).Elem()
}

func (i AmiFromInstanceEphemeralBlockDeviceArray) ToAmiFromInstanceEphemeralBlockDeviceArrayOutput() AmiFromInstanceEphemeralBlockDeviceArrayOutput {
	return i.ToAmiFromInstanceEphemeralBlockDeviceArrayOutputWithContext(context.Background())
}

func (i AmiFromInstanceEphemeralBlockDeviceArray) ToAmiFromInstanceEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) AmiFromInstanceEphemeralBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiFromInstanceEphemeralBlockDeviceArrayOutput)
}

type AmiFromInstanceEphemeralBlockDeviceOutput struct{ *pulumi.OutputState }

func (AmiFromInstanceEphemeralBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AmiFromInstanceEphemeralBlockDevice)(nil)).Elem()
}

func (o AmiFromInstanceEphemeralBlockDeviceOutput) ToAmiFromInstanceEphemeralBlockDeviceOutput() AmiFromInstanceEphemeralBlockDeviceOutput {
	return o
}

func (o AmiFromInstanceEphemeralBlockDeviceOutput) ToAmiFromInstanceEphemeralBlockDeviceOutputWithContext(ctx context.Context) AmiFromInstanceEphemeralBlockDeviceOutput {
	return o
}

// The path at which the device is exposed to created instances.
func (o AmiFromInstanceEphemeralBlockDeviceOutput) DeviceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiFromInstanceEphemeralBlockDevice) *string { return v.DeviceName }).(pulumi.StringPtrOutput)
}

// A name for the ephemeral device, of the form "ephemeralN" where
// *N* is a volume number starting from zero.
func (o AmiFromInstanceEphemeralBlockDeviceOutput) VirtualName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AmiFromInstanceEphemeralBlockDevice) *string { return v.VirtualName }).(pulumi.StringPtrOutput)
}

type AmiFromInstanceEphemeralBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (AmiFromInstanceEphemeralBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AmiFromInstanceEphemeralBlockDevice)(nil)).Elem()
}

func (o AmiFromInstanceEphemeralBlockDeviceArrayOutput) ToAmiFromInstanceEphemeralBlockDeviceArrayOutput() AmiFromInstanceEphemeralBlockDeviceArrayOutput {
	return o
}

func (o AmiFromInstanceEphemeralBlockDeviceArrayOutput) ToAmiFromInstanceEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) AmiFromInstanceEphemeralBlockDeviceArrayOutput {
	return o
}

func (o AmiFromInstanceEphemeralBlockDeviceArrayOutput) Index(i pulumi.IntInput) AmiFromInstanceEphemeralBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AmiFromInstanceEphemeralBlockDevice {
		return vs[0].([]AmiFromInstanceEphemeralBlockDevice)[vs[1].(int)]
	}).(AmiFromInstanceEphemeralBlockDeviceOutput)
}

type DefaultNetworkAclEgress struct {
	// The action to take.
	Action string `pulumi:"action"`
	// The CIDR block to match. This must be a
	// valid network mask.
	CidrBlock *string `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort int `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	IcmpCode *int `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType *int `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	Ipv6CidrBlock *string `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all'
	// protocol, you must specify a from and to port of 0.
	Protocol string `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo int `pulumi:"ruleNo"`
	// The to port to match.
	ToPort int `pulumi:"toPort"`
}

// DefaultNetworkAclEgressInput is an input type that accepts DefaultNetworkAclEgressArgs and DefaultNetworkAclEgressOutput values.
// You can construct a concrete instance of `DefaultNetworkAclEgressInput` via:
//
// 		 DefaultNetworkAclEgressArgs{...}
//
type DefaultNetworkAclEgressInput interface {
	pulumi.Input

	ToDefaultNetworkAclEgressOutput() DefaultNetworkAclEgressOutput
	ToDefaultNetworkAclEgressOutputWithContext(context.Context) DefaultNetworkAclEgressOutput
}

type DefaultNetworkAclEgressArgs struct {
	// The action to take.
	Action pulumi.StringInput `pulumi:"action"`
	// The CIDR block to match. This must be a
	// valid network mask.
	CidrBlock pulumi.StringPtrInput `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort pulumi.IntInput `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	IcmpCode pulumi.IntPtrInput `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType pulumi.IntPtrInput `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	Ipv6CidrBlock pulumi.StringPtrInput `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all'
	// protocol, you must specify a from and to port of 0.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo pulumi.IntInput `pulumi:"ruleNo"`
	// The to port to match.
	ToPort pulumi.IntInput `pulumi:"toPort"`
}

func (DefaultNetworkAclEgressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultNetworkAclEgress)(nil)).Elem()
}

func (i DefaultNetworkAclEgressArgs) ToDefaultNetworkAclEgressOutput() DefaultNetworkAclEgressOutput {
	return i.ToDefaultNetworkAclEgressOutputWithContext(context.Background())
}

func (i DefaultNetworkAclEgressArgs) ToDefaultNetworkAclEgressOutputWithContext(ctx context.Context) DefaultNetworkAclEgressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultNetworkAclEgressOutput)
}

// DefaultNetworkAclEgressArrayInput is an input type that accepts DefaultNetworkAclEgressArray and DefaultNetworkAclEgressArrayOutput values.
// You can construct a concrete instance of `DefaultNetworkAclEgressArrayInput` via:
//
// 		 DefaultNetworkAclEgressArray{ DefaultNetworkAclEgressArgs{...} }
//
type DefaultNetworkAclEgressArrayInput interface {
	pulumi.Input

	ToDefaultNetworkAclEgressArrayOutput() DefaultNetworkAclEgressArrayOutput
	ToDefaultNetworkAclEgressArrayOutputWithContext(context.Context) DefaultNetworkAclEgressArrayOutput
}

type DefaultNetworkAclEgressArray []DefaultNetworkAclEgressInput

func (DefaultNetworkAclEgressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultNetworkAclEgress)(nil)).Elem()
}

func (i DefaultNetworkAclEgressArray) ToDefaultNetworkAclEgressArrayOutput() DefaultNetworkAclEgressArrayOutput {
	return i.ToDefaultNetworkAclEgressArrayOutputWithContext(context.Background())
}

func (i DefaultNetworkAclEgressArray) ToDefaultNetworkAclEgressArrayOutputWithContext(ctx context.Context) DefaultNetworkAclEgressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultNetworkAclEgressArrayOutput)
}

type DefaultNetworkAclEgressOutput struct{ *pulumi.OutputState }

func (DefaultNetworkAclEgressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultNetworkAclEgress)(nil)).Elem()
}

func (o DefaultNetworkAclEgressOutput) ToDefaultNetworkAclEgressOutput() DefaultNetworkAclEgressOutput {
	return o
}

func (o DefaultNetworkAclEgressOutput) ToDefaultNetworkAclEgressOutputWithContext(ctx context.Context) DefaultNetworkAclEgressOutput {
	return o
}

// The action to take.
func (o DefaultNetworkAclEgressOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v DefaultNetworkAclEgress) string { return v.Action }).(pulumi.StringOutput)
}

// The CIDR block to match. This must be a
// valid network mask.
func (o DefaultNetworkAclEgressOutput) CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultNetworkAclEgress) *string { return v.CidrBlock }).(pulumi.StringPtrOutput)
}

// The from port to match.
func (o DefaultNetworkAclEgressOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultNetworkAclEgress) int { return v.FromPort }).(pulumi.IntOutput)
}

// The ICMP type code to be used. Default 0.
func (o DefaultNetworkAclEgressOutput) IcmpCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DefaultNetworkAclEgress) *int { return v.IcmpCode }).(pulumi.IntPtrOutput)
}

// The ICMP type to be used. Default 0.
func (o DefaultNetworkAclEgressOutput) IcmpType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DefaultNetworkAclEgress) *int { return v.IcmpType }).(pulumi.IntPtrOutput)
}

// The IPv6 CIDR block.
func (o DefaultNetworkAclEgressOutput) Ipv6CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultNetworkAclEgress) *string { return v.Ipv6CidrBlock }).(pulumi.StringPtrOutput)
}

// The protocol to match. If using the -1 'all'
// protocol, you must specify a from and to port of 0.
func (o DefaultNetworkAclEgressOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v DefaultNetworkAclEgress) string { return v.Protocol }).(pulumi.StringOutput)
}

// The rule number. Used for ordering.
func (o DefaultNetworkAclEgressOutput) RuleNo() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultNetworkAclEgress) int { return v.RuleNo }).(pulumi.IntOutput)
}

// The to port to match.
func (o DefaultNetworkAclEgressOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultNetworkAclEgress) int { return v.ToPort }).(pulumi.IntOutput)
}

type DefaultNetworkAclEgressArrayOutput struct{ *pulumi.OutputState }

func (DefaultNetworkAclEgressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultNetworkAclEgress)(nil)).Elem()
}

func (o DefaultNetworkAclEgressArrayOutput) ToDefaultNetworkAclEgressArrayOutput() DefaultNetworkAclEgressArrayOutput {
	return o
}

func (o DefaultNetworkAclEgressArrayOutput) ToDefaultNetworkAclEgressArrayOutputWithContext(ctx context.Context) DefaultNetworkAclEgressArrayOutput {
	return o
}

func (o DefaultNetworkAclEgressArrayOutput) Index(i pulumi.IntInput) DefaultNetworkAclEgressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DefaultNetworkAclEgress {
		return vs[0].([]DefaultNetworkAclEgress)[vs[1].(int)]
	}).(DefaultNetworkAclEgressOutput)
}

type DefaultNetworkAclIngress struct {
	// The action to take.
	Action string `pulumi:"action"`
	// The CIDR block to match. This must be a
	// valid network mask.
	CidrBlock *string `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort int `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	IcmpCode *int `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType *int `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	Ipv6CidrBlock *string `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all'
	// protocol, you must specify a from and to port of 0.
	Protocol string `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo int `pulumi:"ruleNo"`
	// The to port to match.
	ToPort int `pulumi:"toPort"`
}

// DefaultNetworkAclIngressInput is an input type that accepts DefaultNetworkAclIngressArgs and DefaultNetworkAclIngressOutput values.
// You can construct a concrete instance of `DefaultNetworkAclIngressInput` via:
//
// 		 DefaultNetworkAclIngressArgs{...}
//
type DefaultNetworkAclIngressInput interface {
	pulumi.Input

	ToDefaultNetworkAclIngressOutput() DefaultNetworkAclIngressOutput
	ToDefaultNetworkAclIngressOutputWithContext(context.Context) DefaultNetworkAclIngressOutput
}

type DefaultNetworkAclIngressArgs struct {
	// The action to take.
	Action pulumi.StringInput `pulumi:"action"`
	// The CIDR block to match. This must be a
	// valid network mask.
	CidrBlock pulumi.StringPtrInput `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort pulumi.IntInput `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	IcmpCode pulumi.IntPtrInput `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType pulumi.IntPtrInput `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	Ipv6CidrBlock pulumi.StringPtrInput `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all'
	// protocol, you must specify a from and to port of 0.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo pulumi.IntInput `pulumi:"ruleNo"`
	// The to port to match.
	ToPort pulumi.IntInput `pulumi:"toPort"`
}

func (DefaultNetworkAclIngressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultNetworkAclIngress)(nil)).Elem()
}

func (i DefaultNetworkAclIngressArgs) ToDefaultNetworkAclIngressOutput() DefaultNetworkAclIngressOutput {
	return i.ToDefaultNetworkAclIngressOutputWithContext(context.Background())
}

func (i DefaultNetworkAclIngressArgs) ToDefaultNetworkAclIngressOutputWithContext(ctx context.Context) DefaultNetworkAclIngressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultNetworkAclIngressOutput)
}

// DefaultNetworkAclIngressArrayInput is an input type that accepts DefaultNetworkAclIngressArray and DefaultNetworkAclIngressArrayOutput values.
// You can construct a concrete instance of `DefaultNetworkAclIngressArrayInput` via:
//
// 		 DefaultNetworkAclIngressArray{ DefaultNetworkAclIngressArgs{...} }
//
type DefaultNetworkAclIngressArrayInput interface {
	pulumi.Input

	ToDefaultNetworkAclIngressArrayOutput() DefaultNetworkAclIngressArrayOutput
	ToDefaultNetworkAclIngressArrayOutputWithContext(context.Context) DefaultNetworkAclIngressArrayOutput
}

type DefaultNetworkAclIngressArray []DefaultNetworkAclIngressInput

func (DefaultNetworkAclIngressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultNetworkAclIngress)(nil)).Elem()
}

func (i DefaultNetworkAclIngressArray) ToDefaultNetworkAclIngressArrayOutput() DefaultNetworkAclIngressArrayOutput {
	return i.ToDefaultNetworkAclIngressArrayOutputWithContext(context.Background())
}

func (i DefaultNetworkAclIngressArray) ToDefaultNetworkAclIngressArrayOutputWithContext(ctx context.Context) DefaultNetworkAclIngressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultNetworkAclIngressArrayOutput)
}

type DefaultNetworkAclIngressOutput struct{ *pulumi.OutputState }

func (DefaultNetworkAclIngressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultNetworkAclIngress)(nil)).Elem()
}

func (o DefaultNetworkAclIngressOutput) ToDefaultNetworkAclIngressOutput() DefaultNetworkAclIngressOutput {
	return o
}

func (o DefaultNetworkAclIngressOutput) ToDefaultNetworkAclIngressOutputWithContext(ctx context.Context) DefaultNetworkAclIngressOutput {
	return o
}

// The action to take.
func (o DefaultNetworkAclIngressOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v DefaultNetworkAclIngress) string { return v.Action }).(pulumi.StringOutput)
}

// The CIDR block to match. This must be a
// valid network mask.
func (o DefaultNetworkAclIngressOutput) CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultNetworkAclIngress) *string { return v.CidrBlock }).(pulumi.StringPtrOutput)
}

// The from port to match.
func (o DefaultNetworkAclIngressOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultNetworkAclIngress) int { return v.FromPort }).(pulumi.IntOutput)
}

// The ICMP type code to be used. Default 0.
func (o DefaultNetworkAclIngressOutput) IcmpCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DefaultNetworkAclIngress) *int { return v.IcmpCode }).(pulumi.IntPtrOutput)
}

// The ICMP type to be used. Default 0.
func (o DefaultNetworkAclIngressOutput) IcmpType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DefaultNetworkAclIngress) *int { return v.IcmpType }).(pulumi.IntPtrOutput)
}

// The IPv6 CIDR block.
func (o DefaultNetworkAclIngressOutput) Ipv6CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultNetworkAclIngress) *string { return v.Ipv6CidrBlock }).(pulumi.StringPtrOutput)
}

// The protocol to match. If using the -1 'all'
// protocol, you must specify a from and to port of 0.
func (o DefaultNetworkAclIngressOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v DefaultNetworkAclIngress) string { return v.Protocol }).(pulumi.StringOutput)
}

// The rule number. Used for ordering.
func (o DefaultNetworkAclIngressOutput) RuleNo() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultNetworkAclIngress) int { return v.RuleNo }).(pulumi.IntOutput)
}

// The to port to match.
func (o DefaultNetworkAclIngressOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultNetworkAclIngress) int { return v.ToPort }).(pulumi.IntOutput)
}

type DefaultNetworkAclIngressArrayOutput struct{ *pulumi.OutputState }

func (DefaultNetworkAclIngressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultNetworkAclIngress)(nil)).Elem()
}

func (o DefaultNetworkAclIngressArrayOutput) ToDefaultNetworkAclIngressArrayOutput() DefaultNetworkAclIngressArrayOutput {
	return o
}

func (o DefaultNetworkAclIngressArrayOutput) ToDefaultNetworkAclIngressArrayOutputWithContext(ctx context.Context) DefaultNetworkAclIngressArrayOutput {
	return o
}

func (o DefaultNetworkAclIngressArrayOutput) Index(i pulumi.IntInput) DefaultNetworkAclIngressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DefaultNetworkAclIngress {
		return vs[0].([]DefaultNetworkAclIngress)[vs[1].(int)]
	}).(DefaultNetworkAclIngressOutput)
}

type DefaultRouteTableRoute struct {
	// The CIDR block of the route.
	CidrBlock *string `pulumi:"cidrBlock"`
	// Identifier of a VPC Egress Only Internet Gateway.
	EgressOnlyGatewayId *string `pulumi:"egressOnlyGatewayId"`
	// Identifier of a VPC internet gateway or a virtual private gateway.
	GatewayId *string `pulumi:"gatewayId"`
	// Identifier of an EC2 instance.
	InstanceId *string `pulumi:"instanceId"`
	// The Ipv6 CIDR block of the route
	Ipv6CidrBlock *string `pulumi:"ipv6CidrBlock"`
	// Identifier of a VPC NAT gateway.
	NatGatewayId *string `pulumi:"natGatewayId"`
	// Identifier of an EC2 network interface.
	NetworkInterfaceId *string `pulumi:"networkInterfaceId"`
	// Identifier of an EC2 Transit Gateway.
	TransitGatewayId *string `pulumi:"transitGatewayId"`
	// Identifier of a VPC peering connection.
	VpcPeeringConnectionId *string `pulumi:"vpcPeeringConnectionId"`
}

// DefaultRouteTableRouteInput is an input type that accepts DefaultRouteTableRouteArgs and DefaultRouteTableRouteOutput values.
// You can construct a concrete instance of `DefaultRouteTableRouteInput` via:
//
// 		 DefaultRouteTableRouteArgs{...}
//
type DefaultRouteTableRouteInput interface {
	pulumi.Input

	ToDefaultRouteTableRouteOutput() DefaultRouteTableRouteOutput
	ToDefaultRouteTableRouteOutputWithContext(context.Context) DefaultRouteTableRouteOutput
}

type DefaultRouteTableRouteArgs struct {
	// The CIDR block of the route.
	CidrBlock pulumi.StringPtrInput `pulumi:"cidrBlock"`
	// Identifier of a VPC Egress Only Internet Gateway.
	EgressOnlyGatewayId pulumi.StringPtrInput `pulumi:"egressOnlyGatewayId"`
	// Identifier of a VPC internet gateway or a virtual private gateway.
	GatewayId pulumi.StringPtrInput `pulumi:"gatewayId"`
	// Identifier of an EC2 instance.
	InstanceId pulumi.StringPtrInput `pulumi:"instanceId"`
	// The Ipv6 CIDR block of the route
	Ipv6CidrBlock pulumi.StringPtrInput `pulumi:"ipv6CidrBlock"`
	// Identifier of a VPC NAT gateway.
	NatGatewayId pulumi.StringPtrInput `pulumi:"natGatewayId"`
	// Identifier of an EC2 network interface.
	NetworkInterfaceId pulumi.StringPtrInput `pulumi:"networkInterfaceId"`
	// Identifier of an EC2 Transit Gateway.
	TransitGatewayId pulumi.StringPtrInput `pulumi:"transitGatewayId"`
	// Identifier of a VPC peering connection.
	VpcPeeringConnectionId pulumi.StringPtrInput `pulumi:"vpcPeeringConnectionId"`
}

func (DefaultRouteTableRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultRouteTableRoute)(nil)).Elem()
}

func (i DefaultRouteTableRouteArgs) ToDefaultRouteTableRouteOutput() DefaultRouteTableRouteOutput {
	return i.ToDefaultRouteTableRouteOutputWithContext(context.Background())
}

func (i DefaultRouteTableRouteArgs) ToDefaultRouteTableRouteOutputWithContext(ctx context.Context) DefaultRouteTableRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultRouteTableRouteOutput)
}

// DefaultRouteTableRouteArrayInput is an input type that accepts DefaultRouteTableRouteArray and DefaultRouteTableRouteArrayOutput values.
// You can construct a concrete instance of `DefaultRouteTableRouteArrayInput` via:
//
// 		 DefaultRouteTableRouteArray{ DefaultRouteTableRouteArgs{...} }
//
type DefaultRouteTableRouteArrayInput interface {
	pulumi.Input

	ToDefaultRouteTableRouteArrayOutput() DefaultRouteTableRouteArrayOutput
	ToDefaultRouteTableRouteArrayOutputWithContext(context.Context) DefaultRouteTableRouteArrayOutput
}

type DefaultRouteTableRouteArray []DefaultRouteTableRouteInput

func (DefaultRouteTableRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultRouteTableRoute)(nil)).Elem()
}

func (i DefaultRouteTableRouteArray) ToDefaultRouteTableRouteArrayOutput() DefaultRouteTableRouteArrayOutput {
	return i.ToDefaultRouteTableRouteArrayOutputWithContext(context.Background())
}

func (i DefaultRouteTableRouteArray) ToDefaultRouteTableRouteArrayOutputWithContext(ctx context.Context) DefaultRouteTableRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultRouteTableRouteArrayOutput)
}

type DefaultRouteTableRouteOutput struct{ *pulumi.OutputState }

func (DefaultRouteTableRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultRouteTableRoute)(nil)).Elem()
}

func (o DefaultRouteTableRouteOutput) ToDefaultRouteTableRouteOutput() DefaultRouteTableRouteOutput {
	return o
}

func (o DefaultRouteTableRouteOutput) ToDefaultRouteTableRouteOutputWithContext(ctx context.Context) DefaultRouteTableRouteOutput {
	return o
}

// The CIDR block of the route.
func (o DefaultRouteTableRouteOutput) CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultRouteTableRoute) *string { return v.CidrBlock }).(pulumi.StringPtrOutput)
}

// Identifier of a VPC Egress Only Internet Gateway.
func (o DefaultRouteTableRouteOutput) EgressOnlyGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultRouteTableRoute) *string { return v.EgressOnlyGatewayId }).(pulumi.StringPtrOutput)
}

// Identifier of a VPC internet gateway or a virtual private gateway.
func (o DefaultRouteTableRouteOutput) GatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultRouteTableRoute) *string { return v.GatewayId }).(pulumi.StringPtrOutput)
}

// Identifier of an EC2 instance.
func (o DefaultRouteTableRouteOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultRouteTableRoute) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

// The Ipv6 CIDR block of the route
func (o DefaultRouteTableRouteOutput) Ipv6CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultRouteTableRoute) *string { return v.Ipv6CidrBlock }).(pulumi.StringPtrOutput)
}

// Identifier of a VPC NAT gateway.
func (o DefaultRouteTableRouteOutput) NatGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultRouteTableRoute) *string { return v.NatGatewayId }).(pulumi.StringPtrOutput)
}

// Identifier of an EC2 network interface.
func (o DefaultRouteTableRouteOutput) NetworkInterfaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultRouteTableRoute) *string { return v.NetworkInterfaceId }).(pulumi.StringPtrOutput)
}

// Identifier of an EC2 Transit Gateway.
func (o DefaultRouteTableRouteOutput) TransitGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultRouteTableRoute) *string { return v.TransitGatewayId }).(pulumi.StringPtrOutput)
}

// Identifier of a VPC peering connection.
func (o DefaultRouteTableRouteOutput) VpcPeeringConnectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultRouteTableRoute) *string { return v.VpcPeeringConnectionId }).(pulumi.StringPtrOutput)
}

type DefaultRouteTableRouteArrayOutput struct{ *pulumi.OutputState }

func (DefaultRouteTableRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultRouteTableRoute)(nil)).Elem()
}

func (o DefaultRouteTableRouteArrayOutput) ToDefaultRouteTableRouteArrayOutput() DefaultRouteTableRouteArrayOutput {
	return o
}

func (o DefaultRouteTableRouteArrayOutput) ToDefaultRouteTableRouteArrayOutputWithContext(ctx context.Context) DefaultRouteTableRouteArrayOutput {
	return o
}

func (o DefaultRouteTableRouteArrayOutput) Index(i pulumi.IntInput) DefaultRouteTableRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DefaultRouteTableRoute {
		return vs[0].([]DefaultRouteTableRoute)[vs[1].(int)]
	}).(DefaultRouteTableRouteOutput)
}

type DefaultSecurityGroupEgress struct {
	CidrBlocks []string `pulumi:"cidrBlocks"`
	// The description of the security group
	Description    *string  `pulumi:"description"`
	FromPort       int      `pulumi:"fromPort"`
	Ipv6CidrBlocks []string `pulumi:"ipv6CidrBlocks"`
	PrefixListIds  []string `pulumi:"prefixListIds"`
	Protocol       string   `pulumi:"protocol"`
	SecurityGroups []string `pulumi:"securityGroups"`
	Self           *bool    `pulumi:"self"`
	ToPort         int      `pulumi:"toPort"`
}

// DefaultSecurityGroupEgressInput is an input type that accepts DefaultSecurityGroupEgressArgs and DefaultSecurityGroupEgressOutput values.
// You can construct a concrete instance of `DefaultSecurityGroupEgressInput` via:
//
// 		 DefaultSecurityGroupEgressArgs{...}
//
type DefaultSecurityGroupEgressInput interface {
	pulumi.Input

	ToDefaultSecurityGroupEgressOutput() DefaultSecurityGroupEgressOutput
	ToDefaultSecurityGroupEgressOutputWithContext(context.Context) DefaultSecurityGroupEgressOutput
}

type DefaultSecurityGroupEgressArgs struct {
	CidrBlocks pulumi.StringArrayInput `pulumi:"cidrBlocks"`
	// The description of the security group
	Description    pulumi.StringPtrInput   `pulumi:"description"`
	FromPort       pulumi.IntInput         `pulumi:"fromPort"`
	Ipv6CidrBlocks pulumi.StringArrayInput `pulumi:"ipv6CidrBlocks"`
	PrefixListIds  pulumi.StringArrayInput `pulumi:"prefixListIds"`
	Protocol       pulumi.StringInput      `pulumi:"protocol"`
	SecurityGroups pulumi.StringArrayInput `pulumi:"securityGroups"`
	Self           pulumi.BoolPtrInput     `pulumi:"self"`
	ToPort         pulumi.IntInput         `pulumi:"toPort"`
}

func (DefaultSecurityGroupEgressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultSecurityGroupEgress)(nil)).Elem()
}

func (i DefaultSecurityGroupEgressArgs) ToDefaultSecurityGroupEgressOutput() DefaultSecurityGroupEgressOutput {
	return i.ToDefaultSecurityGroupEgressOutputWithContext(context.Background())
}

func (i DefaultSecurityGroupEgressArgs) ToDefaultSecurityGroupEgressOutputWithContext(ctx context.Context) DefaultSecurityGroupEgressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultSecurityGroupEgressOutput)
}

// DefaultSecurityGroupEgressArrayInput is an input type that accepts DefaultSecurityGroupEgressArray and DefaultSecurityGroupEgressArrayOutput values.
// You can construct a concrete instance of `DefaultSecurityGroupEgressArrayInput` via:
//
// 		 DefaultSecurityGroupEgressArray{ DefaultSecurityGroupEgressArgs{...} }
//
type DefaultSecurityGroupEgressArrayInput interface {
	pulumi.Input

	ToDefaultSecurityGroupEgressArrayOutput() DefaultSecurityGroupEgressArrayOutput
	ToDefaultSecurityGroupEgressArrayOutputWithContext(context.Context) DefaultSecurityGroupEgressArrayOutput
}

type DefaultSecurityGroupEgressArray []DefaultSecurityGroupEgressInput

func (DefaultSecurityGroupEgressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultSecurityGroupEgress)(nil)).Elem()
}

func (i DefaultSecurityGroupEgressArray) ToDefaultSecurityGroupEgressArrayOutput() DefaultSecurityGroupEgressArrayOutput {
	return i.ToDefaultSecurityGroupEgressArrayOutputWithContext(context.Background())
}

func (i DefaultSecurityGroupEgressArray) ToDefaultSecurityGroupEgressArrayOutputWithContext(ctx context.Context) DefaultSecurityGroupEgressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultSecurityGroupEgressArrayOutput)
}

type DefaultSecurityGroupEgressOutput struct{ *pulumi.OutputState }

func (DefaultSecurityGroupEgressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultSecurityGroupEgress)(nil)).Elem()
}

func (o DefaultSecurityGroupEgressOutput) ToDefaultSecurityGroupEgressOutput() DefaultSecurityGroupEgressOutput {
	return o
}

func (o DefaultSecurityGroupEgressOutput) ToDefaultSecurityGroupEgressOutputWithContext(ctx context.Context) DefaultSecurityGroupEgressOutput {
	return o
}

func (o DefaultSecurityGroupEgressOutput) CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DefaultSecurityGroupEgress) []string { return v.CidrBlocks }).(pulumi.StringArrayOutput)
}

// The description of the security group
func (o DefaultSecurityGroupEgressOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultSecurityGroupEgress) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DefaultSecurityGroupEgressOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultSecurityGroupEgress) int { return v.FromPort }).(pulumi.IntOutput)
}

func (o DefaultSecurityGroupEgressOutput) Ipv6CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DefaultSecurityGroupEgress) []string { return v.Ipv6CidrBlocks }).(pulumi.StringArrayOutput)
}

func (o DefaultSecurityGroupEgressOutput) PrefixListIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DefaultSecurityGroupEgress) []string { return v.PrefixListIds }).(pulumi.StringArrayOutput)
}

func (o DefaultSecurityGroupEgressOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v DefaultSecurityGroupEgress) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o DefaultSecurityGroupEgressOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DefaultSecurityGroupEgress) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

func (o DefaultSecurityGroupEgressOutput) Self() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DefaultSecurityGroupEgress) *bool { return v.Self }).(pulumi.BoolPtrOutput)
}

func (o DefaultSecurityGroupEgressOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultSecurityGroupEgress) int { return v.ToPort }).(pulumi.IntOutput)
}

type DefaultSecurityGroupEgressArrayOutput struct{ *pulumi.OutputState }

func (DefaultSecurityGroupEgressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultSecurityGroupEgress)(nil)).Elem()
}

func (o DefaultSecurityGroupEgressArrayOutput) ToDefaultSecurityGroupEgressArrayOutput() DefaultSecurityGroupEgressArrayOutput {
	return o
}

func (o DefaultSecurityGroupEgressArrayOutput) ToDefaultSecurityGroupEgressArrayOutputWithContext(ctx context.Context) DefaultSecurityGroupEgressArrayOutput {
	return o
}

func (o DefaultSecurityGroupEgressArrayOutput) Index(i pulumi.IntInput) DefaultSecurityGroupEgressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DefaultSecurityGroupEgress {
		return vs[0].([]DefaultSecurityGroupEgress)[vs[1].(int)]
	}).(DefaultSecurityGroupEgressOutput)
}

type DefaultSecurityGroupIngress struct {
	CidrBlocks []string `pulumi:"cidrBlocks"`
	// The description of the security group
	Description    *string  `pulumi:"description"`
	FromPort       int      `pulumi:"fromPort"`
	Ipv6CidrBlocks []string `pulumi:"ipv6CidrBlocks"`
	PrefixListIds  []string `pulumi:"prefixListIds"`
	Protocol       string   `pulumi:"protocol"`
	SecurityGroups []string `pulumi:"securityGroups"`
	Self           *bool    `pulumi:"self"`
	ToPort         int      `pulumi:"toPort"`
}

// DefaultSecurityGroupIngressInput is an input type that accepts DefaultSecurityGroupIngressArgs and DefaultSecurityGroupIngressOutput values.
// You can construct a concrete instance of `DefaultSecurityGroupIngressInput` via:
//
// 		 DefaultSecurityGroupIngressArgs{...}
//
type DefaultSecurityGroupIngressInput interface {
	pulumi.Input

	ToDefaultSecurityGroupIngressOutput() DefaultSecurityGroupIngressOutput
	ToDefaultSecurityGroupIngressOutputWithContext(context.Context) DefaultSecurityGroupIngressOutput
}

type DefaultSecurityGroupIngressArgs struct {
	CidrBlocks pulumi.StringArrayInput `pulumi:"cidrBlocks"`
	// The description of the security group
	Description    pulumi.StringPtrInput   `pulumi:"description"`
	FromPort       pulumi.IntInput         `pulumi:"fromPort"`
	Ipv6CidrBlocks pulumi.StringArrayInput `pulumi:"ipv6CidrBlocks"`
	PrefixListIds  pulumi.StringArrayInput `pulumi:"prefixListIds"`
	Protocol       pulumi.StringInput      `pulumi:"protocol"`
	SecurityGroups pulumi.StringArrayInput `pulumi:"securityGroups"`
	Self           pulumi.BoolPtrInput     `pulumi:"self"`
	ToPort         pulumi.IntInput         `pulumi:"toPort"`
}

func (DefaultSecurityGroupIngressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultSecurityGroupIngress)(nil)).Elem()
}

func (i DefaultSecurityGroupIngressArgs) ToDefaultSecurityGroupIngressOutput() DefaultSecurityGroupIngressOutput {
	return i.ToDefaultSecurityGroupIngressOutputWithContext(context.Background())
}

func (i DefaultSecurityGroupIngressArgs) ToDefaultSecurityGroupIngressOutputWithContext(ctx context.Context) DefaultSecurityGroupIngressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultSecurityGroupIngressOutput)
}

// DefaultSecurityGroupIngressArrayInput is an input type that accepts DefaultSecurityGroupIngressArray and DefaultSecurityGroupIngressArrayOutput values.
// You can construct a concrete instance of `DefaultSecurityGroupIngressArrayInput` via:
//
// 		 DefaultSecurityGroupIngressArray{ DefaultSecurityGroupIngressArgs{...} }
//
type DefaultSecurityGroupIngressArrayInput interface {
	pulumi.Input

	ToDefaultSecurityGroupIngressArrayOutput() DefaultSecurityGroupIngressArrayOutput
	ToDefaultSecurityGroupIngressArrayOutputWithContext(context.Context) DefaultSecurityGroupIngressArrayOutput
}

type DefaultSecurityGroupIngressArray []DefaultSecurityGroupIngressInput

func (DefaultSecurityGroupIngressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultSecurityGroupIngress)(nil)).Elem()
}

func (i DefaultSecurityGroupIngressArray) ToDefaultSecurityGroupIngressArrayOutput() DefaultSecurityGroupIngressArrayOutput {
	return i.ToDefaultSecurityGroupIngressArrayOutputWithContext(context.Background())
}

func (i DefaultSecurityGroupIngressArray) ToDefaultSecurityGroupIngressArrayOutputWithContext(ctx context.Context) DefaultSecurityGroupIngressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DefaultSecurityGroupIngressArrayOutput)
}

type DefaultSecurityGroupIngressOutput struct{ *pulumi.OutputState }

func (DefaultSecurityGroupIngressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DefaultSecurityGroupIngress)(nil)).Elem()
}

func (o DefaultSecurityGroupIngressOutput) ToDefaultSecurityGroupIngressOutput() DefaultSecurityGroupIngressOutput {
	return o
}

func (o DefaultSecurityGroupIngressOutput) ToDefaultSecurityGroupIngressOutputWithContext(ctx context.Context) DefaultSecurityGroupIngressOutput {
	return o
}

func (o DefaultSecurityGroupIngressOutput) CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DefaultSecurityGroupIngress) []string { return v.CidrBlocks }).(pulumi.StringArrayOutput)
}

// The description of the security group
func (o DefaultSecurityGroupIngressOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DefaultSecurityGroupIngress) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DefaultSecurityGroupIngressOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultSecurityGroupIngress) int { return v.FromPort }).(pulumi.IntOutput)
}

func (o DefaultSecurityGroupIngressOutput) Ipv6CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DefaultSecurityGroupIngress) []string { return v.Ipv6CidrBlocks }).(pulumi.StringArrayOutput)
}

func (o DefaultSecurityGroupIngressOutput) PrefixListIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DefaultSecurityGroupIngress) []string { return v.PrefixListIds }).(pulumi.StringArrayOutput)
}

func (o DefaultSecurityGroupIngressOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v DefaultSecurityGroupIngress) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o DefaultSecurityGroupIngressOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DefaultSecurityGroupIngress) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

func (o DefaultSecurityGroupIngressOutput) Self() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DefaultSecurityGroupIngress) *bool { return v.Self }).(pulumi.BoolPtrOutput)
}

func (o DefaultSecurityGroupIngressOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v DefaultSecurityGroupIngress) int { return v.ToPort }).(pulumi.IntOutput)
}

type DefaultSecurityGroupIngressArrayOutput struct{ *pulumi.OutputState }

func (DefaultSecurityGroupIngressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DefaultSecurityGroupIngress)(nil)).Elem()
}

func (o DefaultSecurityGroupIngressArrayOutput) ToDefaultSecurityGroupIngressArrayOutput() DefaultSecurityGroupIngressArrayOutput {
	return o
}

func (o DefaultSecurityGroupIngressArrayOutput) ToDefaultSecurityGroupIngressArrayOutputWithContext(ctx context.Context) DefaultSecurityGroupIngressArrayOutput {
	return o
}

func (o DefaultSecurityGroupIngressArrayOutput) Index(i pulumi.IntInput) DefaultSecurityGroupIngressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DefaultSecurityGroupIngress {
		return vs[0].([]DefaultSecurityGroupIngress)[vs[1].(int)]
	}).(DefaultSecurityGroupIngressOutput)
}

type FleetLaunchTemplateConfig struct {
	// Nested argument containing EC2 Launch Template to use. Defined below.
	LaunchTemplateSpecification FleetLaunchTemplateConfigLaunchTemplateSpecification `pulumi:"launchTemplateSpecification"`
	// Nested argument(s) containing parameters to override the same parameters in the Launch Template. Defined below.
	Overrides []FleetLaunchTemplateConfigOverride `pulumi:"overrides"`
}

// FleetLaunchTemplateConfigInput is an input type that accepts FleetLaunchTemplateConfigArgs and FleetLaunchTemplateConfigOutput values.
// You can construct a concrete instance of `FleetLaunchTemplateConfigInput` via:
//
// 		 FleetLaunchTemplateConfigArgs{...}
//
type FleetLaunchTemplateConfigInput interface {
	pulumi.Input

	ToFleetLaunchTemplateConfigOutput() FleetLaunchTemplateConfigOutput
	ToFleetLaunchTemplateConfigOutputWithContext(context.Context) FleetLaunchTemplateConfigOutput
}

type FleetLaunchTemplateConfigArgs struct {
	// Nested argument containing EC2 Launch Template to use. Defined below.
	LaunchTemplateSpecification FleetLaunchTemplateConfigLaunchTemplateSpecificationInput `pulumi:"launchTemplateSpecification"`
	// Nested argument(s) containing parameters to override the same parameters in the Launch Template. Defined below.
	Overrides FleetLaunchTemplateConfigOverrideArrayInput `pulumi:"overrides"`
}

func (FleetLaunchTemplateConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfig)(nil)).Elem()
}

func (i FleetLaunchTemplateConfigArgs) ToFleetLaunchTemplateConfigOutput() FleetLaunchTemplateConfigOutput {
	return i.ToFleetLaunchTemplateConfigOutputWithContext(context.Background())
}

func (i FleetLaunchTemplateConfigArgs) ToFleetLaunchTemplateConfigOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetLaunchTemplateConfigOutput)
}

func (i FleetLaunchTemplateConfigArgs) ToFleetLaunchTemplateConfigPtrOutput() FleetLaunchTemplateConfigPtrOutput {
	return i.ToFleetLaunchTemplateConfigPtrOutputWithContext(context.Background())
}

func (i FleetLaunchTemplateConfigArgs) ToFleetLaunchTemplateConfigPtrOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetLaunchTemplateConfigOutput).ToFleetLaunchTemplateConfigPtrOutputWithContext(ctx)
}

// FleetLaunchTemplateConfigPtrInput is an input type that accepts FleetLaunchTemplateConfigArgs, FleetLaunchTemplateConfigPtr and FleetLaunchTemplateConfigPtrOutput values.
// You can construct a concrete instance of `FleetLaunchTemplateConfigPtrInput` via:
//
// 		 FleetLaunchTemplateConfigArgs{...}
//
//  or:
//
// 		 nil
//
type FleetLaunchTemplateConfigPtrInput interface {
	pulumi.Input

	ToFleetLaunchTemplateConfigPtrOutput() FleetLaunchTemplateConfigPtrOutput
	ToFleetLaunchTemplateConfigPtrOutputWithContext(context.Context) FleetLaunchTemplateConfigPtrOutput
}

type fleetLaunchTemplateConfigPtrType FleetLaunchTemplateConfigArgs

func FleetLaunchTemplateConfigPtr(v *FleetLaunchTemplateConfigArgs) FleetLaunchTemplateConfigPtrInput {
	return (*fleetLaunchTemplateConfigPtrType)(v)
}

func (*fleetLaunchTemplateConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetLaunchTemplateConfig)(nil)).Elem()
}

func (i *fleetLaunchTemplateConfigPtrType) ToFleetLaunchTemplateConfigPtrOutput() FleetLaunchTemplateConfigPtrOutput {
	return i.ToFleetLaunchTemplateConfigPtrOutputWithContext(context.Background())
}

func (i *fleetLaunchTemplateConfigPtrType) ToFleetLaunchTemplateConfigPtrOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetLaunchTemplateConfigPtrOutput)
}

type FleetLaunchTemplateConfigOutput struct{ *pulumi.OutputState }

func (FleetLaunchTemplateConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfig)(nil)).Elem()
}

func (o FleetLaunchTemplateConfigOutput) ToFleetLaunchTemplateConfigOutput() FleetLaunchTemplateConfigOutput {
	return o
}

func (o FleetLaunchTemplateConfigOutput) ToFleetLaunchTemplateConfigOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigOutput {
	return o
}

func (o FleetLaunchTemplateConfigOutput) ToFleetLaunchTemplateConfigPtrOutput() FleetLaunchTemplateConfigPtrOutput {
	return o.ToFleetLaunchTemplateConfigPtrOutputWithContext(context.Background())
}

func (o FleetLaunchTemplateConfigOutput) ToFleetLaunchTemplateConfigPtrOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigPtrOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfig) *FleetLaunchTemplateConfig {
		return &v
	}).(FleetLaunchTemplateConfigPtrOutput)
}

// Nested argument containing EC2 Launch Template to use. Defined below.
func (o FleetLaunchTemplateConfigOutput) LaunchTemplateSpecification() FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfig) FleetLaunchTemplateConfigLaunchTemplateSpecification {
		return v.LaunchTemplateSpecification
	}).(FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput)
}

// Nested argument(s) containing parameters to override the same parameters in the Launch Template. Defined below.
func (o FleetLaunchTemplateConfigOutput) Overrides() FleetLaunchTemplateConfigOverrideArrayOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfig) []FleetLaunchTemplateConfigOverride { return v.Overrides }).(FleetLaunchTemplateConfigOverrideArrayOutput)
}

type FleetLaunchTemplateConfigPtrOutput struct{ *pulumi.OutputState }

func (FleetLaunchTemplateConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetLaunchTemplateConfig)(nil)).Elem()
}

func (o FleetLaunchTemplateConfigPtrOutput) ToFleetLaunchTemplateConfigPtrOutput() FleetLaunchTemplateConfigPtrOutput {
	return o
}

func (o FleetLaunchTemplateConfigPtrOutput) ToFleetLaunchTemplateConfigPtrOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigPtrOutput {
	return o
}

func (o FleetLaunchTemplateConfigPtrOutput) Elem() FleetLaunchTemplateConfigOutput {
	return o.ApplyT(func(v *FleetLaunchTemplateConfig) FleetLaunchTemplateConfig { return *v }).(FleetLaunchTemplateConfigOutput)
}

// Nested argument containing EC2 Launch Template to use. Defined below.
func (o FleetLaunchTemplateConfigPtrOutput) LaunchTemplateSpecification() FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfig) FleetLaunchTemplateConfigLaunchTemplateSpecification {
		return v.LaunchTemplateSpecification
	}).(FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput)
}

// Nested argument(s) containing parameters to override the same parameters in the Launch Template. Defined below.
func (o FleetLaunchTemplateConfigPtrOutput) Overrides() FleetLaunchTemplateConfigOverrideArrayOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfig) []FleetLaunchTemplateConfigOverride { return v.Overrides }).(FleetLaunchTemplateConfigOverrideArrayOutput)
}

type FleetLaunchTemplateConfigLaunchTemplateSpecification struct {
	// ID of the launch template.
	LaunchTemplateId *string `pulumi:"launchTemplateId"`
	// Name of the launch template.
	LaunchTemplateName *string `pulumi:"launchTemplateName"`
	// Version number of the launch template.
	Version string `pulumi:"version"`
}

// FleetLaunchTemplateConfigLaunchTemplateSpecificationInput is an input type that accepts FleetLaunchTemplateConfigLaunchTemplateSpecificationArgs and FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput values.
// You can construct a concrete instance of `FleetLaunchTemplateConfigLaunchTemplateSpecificationInput` via:
//
// 		 FleetLaunchTemplateConfigLaunchTemplateSpecificationArgs{...}
//
type FleetLaunchTemplateConfigLaunchTemplateSpecificationInput interface {
	pulumi.Input

	ToFleetLaunchTemplateConfigLaunchTemplateSpecificationOutput() FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput
	ToFleetLaunchTemplateConfigLaunchTemplateSpecificationOutputWithContext(context.Context) FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput
}

type FleetLaunchTemplateConfigLaunchTemplateSpecificationArgs struct {
	// ID of the launch template.
	LaunchTemplateId pulumi.StringPtrInput `pulumi:"launchTemplateId"`
	// Name of the launch template.
	LaunchTemplateName pulumi.StringPtrInput `pulumi:"launchTemplateName"`
	// Version number of the launch template.
	Version pulumi.StringInput `pulumi:"version"`
}

func (FleetLaunchTemplateConfigLaunchTemplateSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfigLaunchTemplateSpecification)(nil)).Elem()
}

func (i FleetLaunchTemplateConfigLaunchTemplateSpecificationArgs) ToFleetLaunchTemplateConfigLaunchTemplateSpecificationOutput() FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput {
	return i.ToFleetLaunchTemplateConfigLaunchTemplateSpecificationOutputWithContext(context.Background())
}

func (i FleetLaunchTemplateConfigLaunchTemplateSpecificationArgs) ToFleetLaunchTemplateConfigLaunchTemplateSpecificationOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput)
}

type FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput struct{ *pulumi.OutputState }

func (FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfigLaunchTemplateSpecification)(nil)).Elem()
}

func (o FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput) ToFleetLaunchTemplateConfigLaunchTemplateSpecificationOutput() FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput {
	return o
}

func (o FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput) ToFleetLaunchTemplateConfigLaunchTemplateSpecificationOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput {
	return o
}

// ID of the launch template.
func (o FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput) LaunchTemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigLaunchTemplateSpecification) *string { return v.LaunchTemplateId }).(pulumi.StringPtrOutput)
}

// Name of the launch template.
func (o FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput) LaunchTemplateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigLaunchTemplateSpecification) *string { return v.LaunchTemplateName }).(pulumi.StringPtrOutput)
}

// Version number of the launch template.
func (o FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigLaunchTemplateSpecification) string { return v.Version }).(pulumi.StringOutput)
}

type FleetLaunchTemplateConfigOverride struct {
	// Availability Zone in which to launch the instances.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// Instance type.
	InstanceType *string `pulumi:"instanceType"`
	// Maximum price per unit hour that you are willing to pay for a Spot Instance.
	MaxPrice *string `pulumi:"maxPrice"`
	// Priority for the launch template override. If `onDemandOptions` `allocationStrategy` is set to `prioritized`, EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity. The highest priority is launched first. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority. Valid values are whole numbers starting at 0.
	Priority *float64 `pulumi:"priority"`
	// ID of the subnet in which to launch the instances.
	SubnetId *string `pulumi:"subnetId"`
	// Number of units provided by the specified instance type.
	WeightedCapacity *float64 `pulumi:"weightedCapacity"`
}

// FleetLaunchTemplateConfigOverrideInput is an input type that accepts FleetLaunchTemplateConfigOverrideArgs and FleetLaunchTemplateConfigOverrideOutput values.
// You can construct a concrete instance of `FleetLaunchTemplateConfigOverrideInput` via:
//
// 		 FleetLaunchTemplateConfigOverrideArgs{...}
//
type FleetLaunchTemplateConfigOverrideInput interface {
	pulumi.Input

	ToFleetLaunchTemplateConfigOverrideOutput() FleetLaunchTemplateConfigOverrideOutput
	ToFleetLaunchTemplateConfigOverrideOutputWithContext(context.Context) FleetLaunchTemplateConfigOverrideOutput
}

type FleetLaunchTemplateConfigOverrideArgs struct {
	// Availability Zone in which to launch the instances.
	AvailabilityZone pulumi.StringPtrInput `pulumi:"availabilityZone"`
	// Instance type.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// Maximum price per unit hour that you are willing to pay for a Spot Instance.
	MaxPrice pulumi.StringPtrInput `pulumi:"maxPrice"`
	// Priority for the launch template override. If `onDemandOptions` `allocationStrategy` is set to `prioritized`, EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity. The highest priority is launched first. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority. Valid values are whole numbers starting at 0.
	Priority pulumi.Float64PtrInput `pulumi:"priority"`
	// ID of the subnet in which to launch the instances.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// Number of units provided by the specified instance type.
	WeightedCapacity pulumi.Float64PtrInput `pulumi:"weightedCapacity"`
}

func (FleetLaunchTemplateConfigOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfigOverride)(nil)).Elem()
}

func (i FleetLaunchTemplateConfigOverrideArgs) ToFleetLaunchTemplateConfigOverrideOutput() FleetLaunchTemplateConfigOverrideOutput {
	return i.ToFleetLaunchTemplateConfigOverrideOutputWithContext(context.Background())
}

func (i FleetLaunchTemplateConfigOverrideArgs) ToFleetLaunchTemplateConfigOverrideOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetLaunchTemplateConfigOverrideOutput)
}

// FleetLaunchTemplateConfigOverrideArrayInput is an input type that accepts FleetLaunchTemplateConfigOverrideArray and FleetLaunchTemplateConfigOverrideArrayOutput values.
// You can construct a concrete instance of `FleetLaunchTemplateConfigOverrideArrayInput` via:
//
// 		 FleetLaunchTemplateConfigOverrideArray{ FleetLaunchTemplateConfigOverrideArgs{...} }
//
type FleetLaunchTemplateConfigOverrideArrayInput interface {
	pulumi.Input

	ToFleetLaunchTemplateConfigOverrideArrayOutput() FleetLaunchTemplateConfigOverrideArrayOutput
	ToFleetLaunchTemplateConfigOverrideArrayOutputWithContext(context.Context) FleetLaunchTemplateConfigOverrideArrayOutput
}

type FleetLaunchTemplateConfigOverrideArray []FleetLaunchTemplateConfigOverrideInput

func (FleetLaunchTemplateConfigOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FleetLaunchTemplateConfigOverride)(nil)).Elem()
}

func (i FleetLaunchTemplateConfigOverrideArray) ToFleetLaunchTemplateConfigOverrideArrayOutput() FleetLaunchTemplateConfigOverrideArrayOutput {
	return i.ToFleetLaunchTemplateConfigOverrideArrayOutputWithContext(context.Background())
}

func (i FleetLaunchTemplateConfigOverrideArray) ToFleetLaunchTemplateConfigOverrideArrayOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetLaunchTemplateConfigOverrideArrayOutput)
}

type FleetLaunchTemplateConfigOverrideOutput struct{ *pulumi.OutputState }

func (FleetLaunchTemplateConfigOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetLaunchTemplateConfigOverride)(nil)).Elem()
}

func (o FleetLaunchTemplateConfigOverrideOutput) ToFleetLaunchTemplateConfigOverrideOutput() FleetLaunchTemplateConfigOverrideOutput {
	return o
}

func (o FleetLaunchTemplateConfigOverrideOutput) ToFleetLaunchTemplateConfigOverrideOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigOverrideOutput {
	return o
}

// Availability Zone in which to launch the instances.
func (o FleetLaunchTemplateConfigOverrideOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigOverride) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

// Instance type.
func (o FleetLaunchTemplateConfigOverrideOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigOverride) *string { return v.InstanceType }).(pulumi.StringPtrOutput)
}

// Maximum price per unit hour that you are willing to pay for a Spot Instance.
func (o FleetLaunchTemplateConfigOverrideOutput) MaxPrice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigOverride) *string { return v.MaxPrice }).(pulumi.StringPtrOutput)
}

// Priority for the launch template override. If `onDemandOptions` `allocationStrategy` is set to `prioritized`, EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity. The highest priority is launched first. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority. Valid values are whole numbers starting at 0.
func (o FleetLaunchTemplateConfigOverrideOutput) Priority() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigOverride) *float64 { return v.Priority }).(pulumi.Float64PtrOutput)
}

// ID of the subnet in which to launch the instances.
func (o FleetLaunchTemplateConfigOverrideOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigOverride) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// Number of units provided by the specified instance type.
func (o FleetLaunchTemplateConfigOverrideOutput) WeightedCapacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FleetLaunchTemplateConfigOverride) *float64 { return v.WeightedCapacity }).(pulumi.Float64PtrOutput)
}

type FleetLaunchTemplateConfigOverrideArrayOutput struct{ *pulumi.OutputState }

func (FleetLaunchTemplateConfigOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FleetLaunchTemplateConfigOverride)(nil)).Elem()
}

func (o FleetLaunchTemplateConfigOverrideArrayOutput) ToFleetLaunchTemplateConfigOverrideArrayOutput() FleetLaunchTemplateConfigOverrideArrayOutput {
	return o
}

func (o FleetLaunchTemplateConfigOverrideArrayOutput) ToFleetLaunchTemplateConfigOverrideArrayOutputWithContext(ctx context.Context) FleetLaunchTemplateConfigOverrideArrayOutput {
	return o
}

func (o FleetLaunchTemplateConfigOverrideArrayOutput) Index(i pulumi.IntInput) FleetLaunchTemplateConfigOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FleetLaunchTemplateConfigOverride {
		return vs[0].([]FleetLaunchTemplateConfigOverride)[vs[1].(int)]
	}).(FleetLaunchTemplateConfigOverrideOutput)
}

type FleetOnDemandOptions struct {
	// How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`. Default: `lowestPrice`.
	AllocationStrategy *string `pulumi:"allocationStrategy"`
}

// FleetOnDemandOptionsInput is an input type that accepts FleetOnDemandOptionsArgs and FleetOnDemandOptionsOutput values.
// You can construct a concrete instance of `FleetOnDemandOptionsInput` via:
//
// 		 FleetOnDemandOptionsArgs{...}
//
type FleetOnDemandOptionsInput interface {
	pulumi.Input

	ToFleetOnDemandOptionsOutput() FleetOnDemandOptionsOutput
	ToFleetOnDemandOptionsOutputWithContext(context.Context) FleetOnDemandOptionsOutput
}

type FleetOnDemandOptionsArgs struct {
	// How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`. Default: `lowestPrice`.
	AllocationStrategy pulumi.StringPtrInput `pulumi:"allocationStrategy"`
}

func (FleetOnDemandOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetOnDemandOptions)(nil)).Elem()
}

func (i FleetOnDemandOptionsArgs) ToFleetOnDemandOptionsOutput() FleetOnDemandOptionsOutput {
	return i.ToFleetOnDemandOptionsOutputWithContext(context.Background())
}

func (i FleetOnDemandOptionsArgs) ToFleetOnDemandOptionsOutputWithContext(ctx context.Context) FleetOnDemandOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetOnDemandOptionsOutput)
}

func (i FleetOnDemandOptionsArgs) ToFleetOnDemandOptionsPtrOutput() FleetOnDemandOptionsPtrOutput {
	return i.ToFleetOnDemandOptionsPtrOutputWithContext(context.Background())
}

func (i FleetOnDemandOptionsArgs) ToFleetOnDemandOptionsPtrOutputWithContext(ctx context.Context) FleetOnDemandOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetOnDemandOptionsOutput).ToFleetOnDemandOptionsPtrOutputWithContext(ctx)
}

// FleetOnDemandOptionsPtrInput is an input type that accepts FleetOnDemandOptionsArgs, FleetOnDemandOptionsPtr and FleetOnDemandOptionsPtrOutput values.
// You can construct a concrete instance of `FleetOnDemandOptionsPtrInput` via:
//
// 		 FleetOnDemandOptionsArgs{...}
//
//  or:
//
// 		 nil
//
type FleetOnDemandOptionsPtrInput interface {
	pulumi.Input

	ToFleetOnDemandOptionsPtrOutput() FleetOnDemandOptionsPtrOutput
	ToFleetOnDemandOptionsPtrOutputWithContext(context.Context) FleetOnDemandOptionsPtrOutput
}

type fleetOnDemandOptionsPtrType FleetOnDemandOptionsArgs

func FleetOnDemandOptionsPtr(v *FleetOnDemandOptionsArgs) FleetOnDemandOptionsPtrInput {
	return (*fleetOnDemandOptionsPtrType)(v)
}

func (*fleetOnDemandOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetOnDemandOptions)(nil)).Elem()
}

func (i *fleetOnDemandOptionsPtrType) ToFleetOnDemandOptionsPtrOutput() FleetOnDemandOptionsPtrOutput {
	return i.ToFleetOnDemandOptionsPtrOutputWithContext(context.Background())
}

func (i *fleetOnDemandOptionsPtrType) ToFleetOnDemandOptionsPtrOutputWithContext(ctx context.Context) FleetOnDemandOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetOnDemandOptionsPtrOutput)
}

type FleetOnDemandOptionsOutput struct{ *pulumi.OutputState }

func (FleetOnDemandOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetOnDemandOptions)(nil)).Elem()
}

func (o FleetOnDemandOptionsOutput) ToFleetOnDemandOptionsOutput() FleetOnDemandOptionsOutput {
	return o
}

func (o FleetOnDemandOptionsOutput) ToFleetOnDemandOptionsOutputWithContext(ctx context.Context) FleetOnDemandOptionsOutput {
	return o
}

func (o FleetOnDemandOptionsOutput) ToFleetOnDemandOptionsPtrOutput() FleetOnDemandOptionsPtrOutput {
	return o.ToFleetOnDemandOptionsPtrOutputWithContext(context.Background())
}

func (o FleetOnDemandOptionsOutput) ToFleetOnDemandOptionsPtrOutputWithContext(ctx context.Context) FleetOnDemandOptionsPtrOutput {
	return o.ApplyT(func(v FleetOnDemandOptions) *FleetOnDemandOptions {
		return &v
	}).(FleetOnDemandOptionsPtrOutput)
}

// How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`. Default: `lowestPrice`.
func (o FleetOnDemandOptionsOutput) AllocationStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetOnDemandOptions) *string { return v.AllocationStrategy }).(pulumi.StringPtrOutput)
}

type FleetOnDemandOptionsPtrOutput struct{ *pulumi.OutputState }

func (FleetOnDemandOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetOnDemandOptions)(nil)).Elem()
}

func (o FleetOnDemandOptionsPtrOutput) ToFleetOnDemandOptionsPtrOutput() FleetOnDemandOptionsPtrOutput {
	return o
}

func (o FleetOnDemandOptionsPtrOutput) ToFleetOnDemandOptionsPtrOutputWithContext(ctx context.Context) FleetOnDemandOptionsPtrOutput {
	return o
}

func (o FleetOnDemandOptionsPtrOutput) Elem() FleetOnDemandOptionsOutput {
	return o.ApplyT(func(v *FleetOnDemandOptions) FleetOnDemandOptions { return *v }).(FleetOnDemandOptionsOutput)
}

// How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`. Default: `lowestPrice`.
func (o FleetOnDemandOptionsPtrOutput) AllocationStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetOnDemandOptions) *string { return v.AllocationStrategy }).(pulumi.StringPtrOutput)
}

type FleetSpotOptions struct {
	// How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`. Default: `lowestPrice`.
	AllocationStrategy *string `pulumi:"allocationStrategy"`
	// Behavior when a Spot Instance is interrupted. Valid values: `hibernate`, `stop`, `terminate`. Default: `terminate`.
	InstanceInterruptionBehavior *string `pulumi:"instanceInterruptionBehavior"`
	// Number of Spot pools across which to allocate your target Spot capacity. Valid only when Spot `allocationStrategy` is set to `lowestPrice`. Default: `1`.
	InstancePoolsToUseCount *int `pulumi:"instancePoolsToUseCount"`
}

// FleetSpotOptionsInput is an input type that accepts FleetSpotOptionsArgs and FleetSpotOptionsOutput values.
// You can construct a concrete instance of `FleetSpotOptionsInput` via:
//
// 		 FleetSpotOptionsArgs{...}
//
type FleetSpotOptionsInput interface {
	pulumi.Input

	ToFleetSpotOptionsOutput() FleetSpotOptionsOutput
	ToFleetSpotOptionsOutputWithContext(context.Context) FleetSpotOptionsOutput
}

type FleetSpotOptionsArgs struct {
	// How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`. Default: `lowestPrice`.
	AllocationStrategy pulumi.StringPtrInput `pulumi:"allocationStrategy"`
	// Behavior when a Spot Instance is interrupted. Valid values: `hibernate`, `stop`, `terminate`. Default: `terminate`.
	InstanceInterruptionBehavior pulumi.StringPtrInput `pulumi:"instanceInterruptionBehavior"`
	// Number of Spot pools across which to allocate your target Spot capacity. Valid only when Spot `allocationStrategy` is set to `lowestPrice`. Default: `1`.
	InstancePoolsToUseCount pulumi.IntPtrInput `pulumi:"instancePoolsToUseCount"`
}

func (FleetSpotOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetSpotOptions)(nil)).Elem()
}

func (i FleetSpotOptionsArgs) ToFleetSpotOptionsOutput() FleetSpotOptionsOutput {
	return i.ToFleetSpotOptionsOutputWithContext(context.Background())
}

func (i FleetSpotOptionsArgs) ToFleetSpotOptionsOutputWithContext(ctx context.Context) FleetSpotOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetSpotOptionsOutput)
}

func (i FleetSpotOptionsArgs) ToFleetSpotOptionsPtrOutput() FleetSpotOptionsPtrOutput {
	return i.ToFleetSpotOptionsPtrOutputWithContext(context.Background())
}

func (i FleetSpotOptionsArgs) ToFleetSpotOptionsPtrOutputWithContext(ctx context.Context) FleetSpotOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetSpotOptionsOutput).ToFleetSpotOptionsPtrOutputWithContext(ctx)
}

// FleetSpotOptionsPtrInput is an input type that accepts FleetSpotOptionsArgs, FleetSpotOptionsPtr and FleetSpotOptionsPtrOutput values.
// You can construct a concrete instance of `FleetSpotOptionsPtrInput` via:
//
// 		 FleetSpotOptionsArgs{...}
//
//  or:
//
// 		 nil
//
type FleetSpotOptionsPtrInput interface {
	pulumi.Input

	ToFleetSpotOptionsPtrOutput() FleetSpotOptionsPtrOutput
	ToFleetSpotOptionsPtrOutputWithContext(context.Context) FleetSpotOptionsPtrOutput
}

type fleetSpotOptionsPtrType FleetSpotOptionsArgs

func FleetSpotOptionsPtr(v *FleetSpotOptionsArgs) FleetSpotOptionsPtrInput {
	return (*fleetSpotOptionsPtrType)(v)
}

func (*fleetSpotOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetSpotOptions)(nil)).Elem()
}

func (i *fleetSpotOptionsPtrType) ToFleetSpotOptionsPtrOutput() FleetSpotOptionsPtrOutput {
	return i.ToFleetSpotOptionsPtrOutputWithContext(context.Background())
}

func (i *fleetSpotOptionsPtrType) ToFleetSpotOptionsPtrOutputWithContext(ctx context.Context) FleetSpotOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetSpotOptionsPtrOutput)
}

type FleetSpotOptionsOutput struct{ *pulumi.OutputState }

func (FleetSpotOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetSpotOptions)(nil)).Elem()
}

func (o FleetSpotOptionsOutput) ToFleetSpotOptionsOutput() FleetSpotOptionsOutput {
	return o
}

func (o FleetSpotOptionsOutput) ToFleetSpotOptionsOutputWithContext(ctx context.Context) FleetSpotOptionsOutput {
	return o
}

func (o FleetSpotOptionsOutput) ToFleetSpotOptionsPtrOutput() FleetSpotOptionsPtrOutput {
	return o.ToFleetSpotOptionsPtrOutputWithContext(context.Background())
}

func (o FleetSpotOptionsOutput) ToFleetSpotOptionsPtrOutputWithContext(ctx context.Context) FleetSpotOptionsPtrOutput {
	return o.ApplyT(func(v FleetSpotOptions) *FleetSpotOptions {
		return &v
	}).(FleetSpotOptionsPtrOutput)
}

// How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`. Default: `lowestPrice`.
func (o FleetSpotOptionsOutput) AllocationStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetSpotOptions) *string { return v.AllocationStrategy }).(pulumi.StringPtrOutput)
}

// Behavior when a Spot Instance is interrupted. Valid values: `hibernate`, `stop`, `terminate`. Default: `terminate`.
func (o FleetSpotOptionsOutput) InstanceInterruptionBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetSpotOptions) *string { return v.InstanceInterruptionBehavior }).(pulumi.StringPtrOutput)
}

// Number of Spot pools across which to allocate your target Spot capacity. Valid only when Spot `allocationStrategy` is set to `lowestPrice`. Default: `1`.
func (o FleetSpotOptionsOutput) InstancePoolsToUseCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FleetSpotOptions) *int { return v.InstancePoolsToUseCount }).(pulumi.IntPtrOutput)
}

type FleetSpotOptionsPtrOutput struct{ *pulumi.OutputState }

func (FleetSpotOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetSpotOptions)(nil)).Elem()
}

func (o FleetSpotOptionsPtrOutput) ToFleetSpotOptionsPtrOutput() FleetSpotOptionsPtrOutput {
	return o
}

func (o FleetSpotOptionsPtrOutput) ToFleetSpotOptionsPtrOutputWithContext(ctx context.Context) FleetSpotOptionsPtrOutput {
	return o
}

func (o FleetSpotOptionsPtrOutput) Elem() FleetSpotOptionsOutput {
	return o.ApplyT(func(v *FleetSpotOptions) FleetSpotOptions { return *v }).(FleetSpotOptionsOutput)
}

// How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`. Default: `lowestPrice`.
func (o FleetSpotOptionsPtrOutput) AllocationStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetSpotOptions) *string { return v.AllocationStrategy }).(pulumi.StringPtrOutput)
}

// Behavior when a Spot Instance is interrupted. Valid values: `hibernate`, `stop`, `terminate`. Default: `terminate`.
func (o FleetSpotOptionsPtrOutput) InstanceInterruptionBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetSpotOptions) *string { return v.InstanceInterruptionBehavior }).(pulumi.StringPtrOutput)
}

// Number of Spot pools across which to allocate your target Spot capacity. Valid only when Spot `allocationStrategy` is set to `lowestPrice`. Default: `1`.
func (o FleetSpotOptionsPtrOutput) InstancePoolsToUseCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FleetSpotOptions) *int { return v.InstancePoolsToUseCount }).(pulumi.IntPtrOutput)
}

type FleetTargetCapacitySpecification struct {
	// Default target capacity type. Valid values: `on-demand`, `spot`.
	DefaultTargetCapacityType string `pulumi:"defaultTargetCapacityType"`
	// The number of On-Demand units to request.
	OnDemandTargetCapacity *int `pulumi:"onDemandTargetCapacity"`
	// The number of Spot units to request.
	SpotTargetCapacity *int `pulumi:"spotTargetCapacity"`
	// The number of units to request, filled using `defaultTargetCapacityType`.
	TotalTargetCapacity int `pulumi:"totalTargetCapacity"`
}

// FleetTargetCapacitySpecificationInput is an input type that accepts FleetTargetCapacitySpecificationArgs and FleetTargetCapacitySpecificationOutput values.
// You can construct a concrete instance of `FleetTargetCapacitySpecificationInput` via:
//
// 		 FleetTargetCapacitySpecificationArgs{...}
//
type FleetTargetCapacitySpecificationInput interface {
	pulumi.Input

	ToFleetTargetCapacitySpecificationOutput() FleetTargetCapacitySpecificationOutput
	ToFleetTargetCapacitySpecificationOutputWithContext(context.Context) FleetTargetCapacitySpecificationOutput
}

type FleetTargetCapacitySpecificationArgs struct {
	// Default target capacity type. Valid values: `on-demand`, `spot`.
	DefaultTargetCapacityType pulumi.StringInput `pulumi:"defaultTargetCapacityType"`
	// The number of On-Demand units to request.
	OnDemandTargetCapacity pulumi.IntPtrInput `pulumi:"onDemandTargetCapacity"`
	// The number of Spot units to request.
	SpotTargetCapacity pulumi.IntPtrInput `pulumi:"spotTargetCapacity"`
	// The number of units to request, filled using `defaultTargetCapacityType`.
	TotalTargetCapacity pulumi.IntInput `pulumi:"totalTargetCapacity"`
}

func (FleetTargetCapacitySpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetTargetCapacitySpecification)(nil)).Elem()
}

func (i FleetTargetCapacitySpecificationArgs) ToFleetTargetCapacitySpecificationOutput() FleetTargetCapacitySpecificationOutput {
	return i.ToFleetTargetCapacitySpecificationOutputWithContext(context.Background())
}

func (i FleetTargetCapacitySpecificationArgs) ToFleetTargetCapacitySpecificationOutputWithContext(ctx context.Context) FleetTargetCapacitySpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetTargetCapacitySpecificationOutput)
}

func (i FleetTargetCapacitySpecificationArgs) ToFleetTargetCapacitySpecificationPtrOutput() FleetTargetCapacitySpecificationPtrOutput {
	return i.ToFleetTargetCapacitySpecificationPtrOutputWithContext(context.Background())
}

func (i FleetTargetCapacitySpecificationArgs) ToFleetTargetCapacitySpecificationPtrOutputWithContext(ctx context.Context) FleetTargetCapacitySpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetTargetCapacitySpecificationOutput).ToFleetTargetCapacitySpecificationPtrOutputWithContext(ctx)
}

// FleetTargetCapacitySpecificationPtrInput is an input type that accepts FleetTargetCapacitySpecificationArgs, FleetTargetCapacitySpecificationPtr and FleetTargetCapacitySpecificationPtrOutput values.
// You can construct a concrete instance of `FleetTargetCapacitySpecificationPtrInput` via:
//
// 		 FleetTargetCapacitySpecificationArgs{...}
//
//  or:
//
// 		 nil
//
type FleetTargetCapacitySpecificationPtrInput interface {
	pulumi.Input

	ToFleetTargetCapacitySpecificationPtrOutput() FleetTargetCapacitySpecificationPtrOutput
	ToFleetTargetCapacitySpecificationPtrOutputWithContext(context.Context) FleetTargetCapacitySpecificationPtrOutput
}

type fleetTargetCapacitySpecificationPtrType FleetTargetCapacitySpecificationArgs

func FleetTargetCapacitySpecificationPtr(v *FleetTargetCapacitySpecificationArgs) FleetTargetCapacitySpecificationPtrInput {
	return (*fleetTargetCapacitySpecificationPtrType)(v)
}

func (*fleetTargetCapacitySpecificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetTargetCapacitySpecification)(nil)).Elem()
}

func (i *fleetTargetCapacitySpecificationPtrType) ToFleetTargetCapacitySpecificationPtrOutput() FleetTargetCapacitySpecificationPtrOutput {
	return i.ToFleetTargetCapacitySpecificationPtrOutputWithContext(context.Background())
}

func (i *fleetTargetCapacitySpecificationPtrType) ToFleetTargetCapacitySpecificationPtrOutputWithContext(ctx context.Context) FleetTargetCapacitySpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetTargetCapacitySpecificationPtrOutput)
}

type FleetTargetCapacitySpecificationOutput struct{ *pulumi.OutputState }

func (FleetTargetCapacitySpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetTargetCapacitySpecification)(nil)).Elem()
}

func (o FleetTargetCapacitySpecificationOutput) ToFleetTargetCapacitySpecificationOutput() FleetTargetCapacitySpecificationOutput {
	return o
}

func (o FleetTargetCapacitySpecificationOutput) ToFleetTargetCapacitySpecificationOutputWithContext(ctx context.Context) FleetTargetCapacitySpecificationOutput {
	return o
}

func (o FleetTargetCapacitySpecificationOutput) ToFleetTargetCapacitySpecificationPtrOutput() FleetTargetCapacitySpecificationPtrOutput {
	return o.ToFleetTargetCapacitySpecificationPtrOutputWithContext(context.Background())
}

func (o FleetTargetCapacitySpecificationOutput) ToFleetTargetCapacitySpecificationPtrOutputWithContext(ctx context.Context) FleetTargetCapacitySpecificationPtrOutput {
	return o.ApplyT(func(v FleetTargetCapacitySpecification) *FleetTargetCapacitySpecification {
		return &v
	}).(FleetTargetCapacitySpecificationPtrOutput)
}

// Default target capacity type. Valid values: `on-demand`, `spot`.
func (o FleetTargetCapacitySpecificationOutput) DefaultTargetCapacityType() pulumi.StringOutput {
	return o.ApplyT(func(v FleetTargetCapacitySpecification) string { return v.DefaultTargetCapacityType }).(pulumi.StringOutput)
}

// The number of On-Demand units to request.
func (o FleetTargetCapacitySpecificationOutput) OnDemandTargetCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FleetTargetCapacitySpecification) *int { return v.OnDemandTargetCapacity }).(pulumi.IntPtrOutput)
}

// The number of Spot units to request.
func (o FleetTargetCapacitySpecificationOutput) SpotTargetCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FleetTargetCapacitySpecification) *int { return v.SpotTargetCapacity }).(pulumi.IntPtrOutput)
}

// The number of units to request, filled using `defaultTargetCapacityType`.
func (o FleetTargetCapacitySpecificationOutput) TotalTargetCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v FleetTargetCapacitySpecification) int { return v.TotalTargetCapacity }).(pulumi.IntOutput)
}

type FleetTargetCapacitySpecificationPtrOutput struct{ *pulumi.OutputState }

func (FleetTargetCapacitySpecificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetTargetCapacitySpecification)(nil)).Elem()
}

func (o FleetTargetCapacitySpecificationPtrOutput) ToFleetTargetCapacitySpecificationPtrOutput() FleetTargetCapacitySpecificationPtrOutput {
	return o
}

func (o FleetTargetCapacitySpecificationPtrOutput) ToFleetTargetCapacitySpecificationPtrOutputWithContext(ctx context.Context) FleetTargetCapacitySpecificationPtrOutput {
	return o
}

func (o FleetTargetCapacitySpecificationPtrOutput) Elem() FleetTargetCapacitySpecificationOutput {
	return o.ApplyT(func(v *FleetTargetCapacitySpecification) FleetTargetCapacitySpecification { return *v }).(FleetTargetCapacitySpecificationOutput)
}

// Default target capacity type. Valid values: `on-demand`, `spot`.
func (o FleetTargetCapacitySpecificationPtrOutput) DefaultTargetCapacityType() pulumi.StringOutput {
	return o.ApplyT(func(v FleetTargetCapacitySpecification) string { return v.DefaultTargetCapacityType }).(pulumi.StringOutput)
}

// The number of On-Demand units to request.
func (o FleetTargetCapacitySpecificationPtrOutput) OnDemandTargetCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FleetTargetCapacitySpecification) *int { return v.OnDemandTargetCapacity }).(pulumi.IntPtrOutput)
}

// The number of Spot units to request.
func (o FleetTargetCapacitySpecificationPtrOutput) SpotTargetCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FleetTargetCapacitySpecification) *int { return v.SpotTargetCapacity }).(pulumi.IntPtrOutput)
}

// The number of units to request, filled using `defaultTargetCapacityType`.
func (o FleetTargetCapacitySpecificationPtrOutput) TotalTargetCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v FleetTargetCapacitySpecification) int { return v.TotalTargetCapacity }).(pulumi.IntOutput)
}

type InstanceCreditSpecification struct {
	// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
	CpuCredits *string `pulumi:"cpuCredits"`
}

// InstanceCreditSpecificationInput is an input type that accepts InstanceCreditSpecificationArgs and InstanceCreditSpecificationOutput values.
// You can construct a concrete instance of `InstanceCreditSpecificationInput` via:
//
// 		 InstanceCreditSpecificationArgs{...}
//
type InstanceCreditSpecificationInput interface {
	pulumi.Input

	ToInstanceCreditSpecificationOutput() InstanceCreditSpecificationOutput
	ToInstanceCreditSpecificationOutputWithContext(context.Context) InstanceCreditSpecificationOutput
}

type InstanceCreditSpecificationArgs struct {
	// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
	CpuCredits pulumi.StringPtrInput `pulumi:"cpuCredits"`
}

func (InstanceCreditSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceCreditSpecification)(nil)).Elem()
}

func (i InstanceCreditSpecificationArgs) ToInstanceCreditSpecificationOutput() InstanceCreditSpecificationOutput {
	return i.ToInstanceCreditSpecificationOutputWithContext(context.Background())
}

func (i InstanceCreditSpecificationArgs) ToInstanceCreditSpecificationOutputWithContext(ctx context.Context) InstanceCreditSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceCreditSpecificationOutput)
}

func (i InstanceCreditSpecificationArgs) ToInstanceCreditSpecificationPtrOutput() InstanceCreditSpecificationPtrOutput {
	return i.ToInstanceCreditSpecificationPtrOutputWithContext(context.Background())
}

func (i InstanceCreditSpecificationArgs) ToInstanceCreditSpecificationPtrOutputWithContext(ctx context.Context) InstanceCreditSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceCreditSpecificationOutput).ToInstanceCreditSpecificationPtrOutputWithContext(ctx)
}

// InstanceCreditSpecificationPtrInput is an input type that accepts InstanceCreditSpecificationArgs, InstanceCreditSpecificationPtr and InstanceCreditSpecificationPtrOutput values.
// You can construct a concrete instance of `InstanceCreditSpecificationPtrInput` via:
//
// 		 InstanceCreditSpecificationArgs{...}
//
//  or:
//
// 		 nil
//
type InstanceCreditSpecificationPtrInput interface {
	pulumi.Input

	ToInstanceCreditSpecificationPtrOutput() InstanceCreditSpecificationPtrOutput
	ToInstanceCreditSpecificationPtrOutputWithContext(context.Context) InstanceCreditSpecificationPtrOutput
}

type instanceCreditSpecificationPtrType InstanceCreditSpecificationArgs

func InstanceCreditSpecificationPtr(v *InstanceCreditSpecificationArgs) InstanceCreditSpecificationPtrInput {
	return (*instanceCreditSpecificationPtrType)(v)
}

func (*instanceCreditSpecificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceCreditSpecification)(nil)).Elem()
}

func (i *instanceCreditSpecificationPtrType) ToInstanceCreditSpecificationPtrOutput() InstanceCreditSpecificationPtrOutput {
	return i.ToInstanceCreditSpecificationPtrOutputWithContext(context.Background())
}

func (i *instanceCreditSpecificationPtrType) ToInstanceCreditSpecificationPtrOutputWithContext(ctx context.Context) InstanceCreditSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceCreditSpecificationPtrOutput)
}

type InstanceCreditSpecificationOutput struct{ *pulumi.OutputState }

func (InstanceCreditSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceCreditSpecification)(nil)).Elem()
}

func (o InstanceCreditSpecificationOutput) ToInstanceCreditSpecificationOutput() InstanceCreditSpecificationOutput {
	return o
}

func (o InstanceCreditSpecificationOutput) ToInstanceCreditSpecificationOutputWithContext(ctx context.Context) InstanceCreditSpecificationOutput {
	return o
}

func (o InstanceCreditSpecificationOutput) ToInstanceCreditSpecificationPtrOutput() InstanceCreditSpecificationPtrOutput {
	return o.ToInstanceCreditSpecificationPtrOutputWithContext(context.Background())
}

func (o InstanceCreditSpecificationOutput) ToInstanceCreditSpecificationPtrOutputWithContext(ctx context.Context) InstanceCreditSpecificationPtrOutput {
	return o.ApplyT(func(v InstanceCreditSpecification) *InstanceCreditSpecification {
		return &v
	}).(InstanceCreditSpecificationPtrOutput)
}

// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
func (o InstanceCreditSpecificationOutput) CpuCredits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceCreditSpecification) *string { return v.CpuCredits }).(pulumi.StringPtrOutput)
}

type InstanceCreditSpecificationPtrOutput struct{ *pulumi.OutputState }

func (InstanceCreditSpecificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceCreditSpecification)(nil)).Elem()
}

func (o InstanceCreditSpecificationPtrOutput) ToInstanceCreditSpecificationPtrOutput() InstanceCreditSpecificationPtrOutput {
	return o
}

func (o InstanceCreditSpecificationPtrOutput) ToInstanceCreditSpecificationPtrOutputWithContext(ctx context.Context) InstanceCreditSpecificationPtrOutput {
	return o
}

func (o InstanceCreditSpecificationPtrOutput) Elem() InstanceCreditSpecificationOutput {
	return o.ApplyT(func(v *InstanceCreditSpecification) InstanceCreditSpecification { return *v }).(InstanceCreditSpecificationOutput)
}

// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
func (o InstanceCreditSpecificationPtrOutput) CpuCredits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceCreditSpecification) *string { return v.CpuCredits }).(pulumi.StringPtrOutput)
}

type InstanceEbsBlockDevice struct {
	// Whether the volume should be destroyed
	// on instance termination (Default: `true`).
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// The name of the device to mount.
	DeviceName string `pulumi:"deviceName"`
	// Enables [EBS
	// encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
	// on the volume (Default: `false`). Cannot be used with `snapshotId`. Must be configured to perform drift detection.
	Encrypted *bool `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This must be set with a `volumeType` of `"io1"`.
	Iops *int `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The Snapshot ID to mount.
	SnapshotId *string `pulumi:"snapshotId"`
	VolumeId   *string `pulumi:"volumeId"`
	// The size of the volume in gibibytes (GiB).
	VolumeSize *int `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`,
	// or `"io1"`. (Default: `"gp2"`).
	VolumeType *string `pulumi:"volumeType"`
}

// InstanceEbsBlockDeviceInput is an input type that accepts InstanceEbsBlockDeviceArgs and InstanceEbsBlockDeviceOutput values.
// You can construct a concrete instance of `InstanceEbsBlockDeviceInput` via:
//
// 		 InstanceEbsBlockDeviceArgs{...}
//
type InstanceEbsBlockDeviceInput interface {
	pulumi.Input

	ToInstanceEbsBlockDeviceOutput() InstanceEbsBlockDeviceOutput
	ToInstanceEbsBlockDeviceOutputWithContext(context.Context) InstanceEbsBlockDeviceOutput
}

type InstanceEbsBlockDeviceArgs struct {
	// Whether the volume should be destroyed
	// on instance termination (Default: `true`).
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// The name of the device to mount.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// Enables [EBS
	// encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
	// on the volume (Default: `false`). Cannot be used with `snapshotId`. Must be configured to perform drift detection.
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This must be set with a `volumeType` of `"io1"`.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	// The Snapshot ID to mount.
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
	VolumeId   pulumi.StringPtrInput `pulumi:"volumeId"`
	// The size of the volume in gibibytes (GiB).
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`,
	// or `"io1"`. (Default: `"gp2"`).
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (InstanceEbsBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceEbsBlockDevice)(nil)).Elem()
}

func (i InstanceEbsBlockDeviceArgs) ToInstanceEbsBlockDeviceOutput() InstanceEbsBlockDeviceOutput {
	return i.ToInstanceEbsBlockDeviceOutputWithContext(context.Background())
}

func (i InstanceEbsBlockDeviceArgs) ToInstanceEbsBlockDeviceOutputWithContext(ctx context.Context) InstanceEbsBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceEbsBlockDeviceOutput)
}

// InstanceEbsBlockDeviceArrayInput is an input type that accepts InstanceEbsBlockDeviceArray and InstanceEbsBlockDeviceArrayOutput values.
// You can construct a concrete instance of `InstanceEbsBlockDeviceArrayInput` via:
//
// 		 InstanceEbsBlockDeviceArray{ InstanceEbsBlockDeviceArgs{...} }
//
type InstanceEbsBlockDeviceArrayInput interface {
	pulumi.Input

	ToInstanceEbsBlockDeviceArrayOutput() InstanceEbsBlockDeviceArrayOutput
	ToInstanceEbsBlockDeviceArrayOutputWithContext(context.Context) InstanceEbsBlockDeviceArrayOutput
}

type InstanceEbsBlockDeviceArray []InstanceEbsBlockDeviceInput

func (InstanceEbsBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceEbsBlockDevice)(nil)).Elem()
}

func (i InstanceEbsBlockDeviceArray) ToInstanceEbsBlockDeviceArrayOutput() InstanceEbsBlockDeviceArrayOutput {
	return i.ToInstanceEbsBlockDeviceArrayOutputWithContext(context.Background())
}

func (i InstanceEbsBlockDeviceArray) ToInstanceEbsBlockDeviceArrayOutputWithContext(ctx context.Context) InstanceEbsBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceEbsBlockDeviceArrayOutput)
}

type InstanceEbsBlockDeviceOutput struct{ *pulumi.OutputState }

func (InstanceEbsBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceEbsBlockDevice)(nil)).Elem()
}

func (o InstanceEbsBlockDeviceOutput) ToInstanceEbsBlockDeviceOutput() InstanceEbsBlockDeviceOutput {
	return o
}

func (o InstanceEbsBlockDeviceOutput) ToInstanceEbsBlockDeviceOutputWithContext(ctx context.Context) InstanceEbsBlockDeviceOutput {
	return o
}

// Whether the volume should be destroyed
// on instance termination (Default: `true`).
func (o InstanceEbsBlockDeviceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceEbsBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// The name of the device to mount.
func (o InstanceEbsBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceEbsBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

// Enables [EBS
// encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
// on the volume (Default: `false`). Cannot be used with `snapshotId`. Must be configured to perform drift detection.
func (o InstanceEbsBlockDeviceOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceEbsBlockDevice) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// The amount of provisioned
// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
// This must be set with a `volumeType` of `"io1"`.
func (o InstanceEbsBlockDeviceOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceEbsBlockDevice) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
func (o InstanceEbsBlockDeviceOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceEbsBlockDevice) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// The Snapshot ID to mount.
func (o InstanceEbsBlockDeviceOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceEbsBlockDevice) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

func (o InstanceEbsBlockDeviceOutput) VolumeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceEbsBlockDevice) *string { return v.VolumeId }).(pulumi.StringPtrOutput)
}

// The size of the volume in gibibytes (GiB).
func (o InstanceEbsBlockDeviceOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceEbsBlockDevice) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// The type of volume. Can be `"standard"`, `"gp2"`,
// or `"io1"`. (Default: `"gp2"`).
func (o InstanceEbsBlockDeviceOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceEbsBlockDevice) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type InstanceEbsBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (InstanceEbsBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceEbsBlockDevice)(nil)).Elem()
}

func (o InstanceEbsBlockDeviceArrayOutput) ToInstanceEbsBlockDeviceArrayOutput() InstanceEbsBlockDeviceArrayOutput {
	return o
}

func (o InstanceEbsBlockDeviceArrayOutput) ToInstanceEbsBlockDeviceArrayOutputWithContext(ctx context.Context) InstanceEbsBlockDeviceArrayOutput {
	return o
}

func (o InstanceEbsBlockDeviceArrayOutput) Index(i pulumi.IntInput) InstanceEbsBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceEbsBlockDevice {
		return vs[0].([]InstanceEbsBlockDevice)[vs[1].(int)]
	}).(InstanceEbsBlockDeviceOutput)
}

type InstanceEphemeralBlockDevice struct {
	// The name of the block device to mount on the instance.
	DeviceName string `pulumi:"deviceName"`
	// Suppresses the specified device included in the AMI's block device mapping.
	NoDevice *bool `pulumi:"noDevice"`
	// The [Instance Store Device
	// Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
	// (e.g. `"ephemeral0"`).
	VirtualName *string `pulumi:"virtualName"`
}

// InstanceEphemeralBlockDeviceInput is an input type that accepts InstanceEphemeralBlockDeviceArgs and InstanceEphemeralBlockDeviceOutput values.
// You can construct a concrete instance of `InstanceEphemeralBlockDeviceInput` via:
//
// 		 InstanceEphemeralBlockDeviceArgs{...}
//
type InstanceEphemeralBlockDeviceInput interface {
	pulumi.Input

	ToInstanceEphemeralBlockDeviceOutput() InstanceEphemeralBlockDeviceOutput
	ToInstanceEphemeralBlockDeviceOutputWithContext(context.Context) InstanceEphemeralBlockDeviceOutput
}

type InstanceEphemeralBlockDeviceArgs struct {
	// The name of the block device to mount on the instance.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// Suppresses the specified device included in the AMI's block device mapping.
	NoDevice pulumi.BoolPtrInput `pulumi:"noDevice"`
	// The [Instance Store Device
	// Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
	// (e.g. `"ephemeral0"`).
	VirtualName pulumi.StringPtrInput `pulumi:"virtualName"`
}

func (InstanceEphemeralBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceEphemeralBlockDevice)(nil)).Elem()
}

func (i InstanceEphemeralBlockDeviceArgs) ToInstanceEphemeralBlockDeviceOutput() InstanceEphemeralBlockDeviceOutput {
	return i.ToInstanceEphemeralBlockDeviceOutputWithContext(context.Background())
}

func (i InstanceEphemeralBlockDeviceArgs) ToInstanceEphemeralBlockDeviceOutputWithContext(ctx context.Context) InstanceEphemeralBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceEphemeralBlockDeviceOutput)
}

// InstanceEphemeralBlockDeviceArrayInput is an input type that accepts InstanceEphemeralBlockDeviceArray and InstanceEphemeralBlockDeviceArrayOutput values.
// You can construct a concrete instance of `InstanceEphemeralBlockDeviceArrayInput` via:
//
// 		 InstanceEphemeralBlockDeviceArray{ InstanceEphemeralBlockDeviceArgs{...} }
//
type InstanceEphemeralBlockDeviceArrayInput interface {
	pulumi.Input

	ToInstanceEphemeralBlockDeviceArrayOutput() InstanceEphemeralBlockDeviceArrayOutput
	ToInstanceEphemeralBlockDeviceArrayOutputWithContext(context.Context) InstanceEphemeralBlockDeviceArrayOutput
}

type InstanceEphemeralBlockDeviceArray []InstanceEphemeralBlockDeviceInput

func (InstanceEphemeralBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceEphemeralBlockDevice)(nil)).Elem()
}

func (i InstanceEphemeralBlockDeviceArray) ToInstanceEphemeralBlockDeviceArrayOutput() InstanceEphemeralBlockDeviceArrayOutput {
	return i.ToInstanceEphemeralBlockDeviceArrayOutputWithContext(context.Background())
}

func (i InstanceEphemeralBlockDeviceArray) ToInstanceEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) InstanceEphemeralBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceEphemeralBlockDeviceArrayOutput)
}

type InstanceEphemeralBlockDeviceOutput struct{ *pulumi.OutputState }

func (InstanceEphemeralBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceEphemeralBlockDevice)(nil)).Elem()
}

func (o InstanceEphemeralBlockDeviceOutput) ToInstanceEphemeralBlockDeviceOutput() InstanceEphemeralBlockDeviceOutput {
	return o
}

func (o InstanceEphemeralBlockDeviceOutput) ToInstanceEphemeralBlockDeviceOutputWithContext(ctx context.Context) InstanceEphemeralBlockDeviceOutput {
	return o
}

// The name of the block device to mount on the instance.
func (o InstanceEphemeralBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceEphemeralBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

// Suppresses the specified device included in the AMI's block device mapping.
func (o InstanceEphemeralBlockDeviceOutput) NoDevice() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceEphemeralBlockDevice) *bool { return v.NoDevice }).(pulumi.BoolPtrOutput)
}

// The [Instance Store Device
// Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
// (e.g. `"ephemeral0"`).
func (o InstanceEphemeralBlockDeviceOutput) VirtualName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceEphemeralBlockDevice) *string { return v.VirtualName }).(pulumi.StringPtrOutput)
}

type InstanceEphemeralBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (InstanceEphemeralBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceEphemeralBlockDevice)(nil)).Elem()
}

func (o InstanceEphemeralBlockDeviceArrayOutput) ToInstanceEphemeralBlockDeviceArrayOutput() InstanceEphemeralBlockDeviceArrayOutput {
	return o
}

func (o InstanceEphemeralBlockDeviceArrayOutput) ToInstanceEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) InstanceEphemeralBlockDeviceArrayOutput {
	return o
}

func (o InstanceEphemeralBlockDeviceArrayOutput) Index(i pulumi.IntInput) InstanceEphemeralBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceEphemeralBlockDevice {
		return vs[0].([]InstanceEphemeralBlockDevice)[vs[1].(int)]
	}).(InstanceEphemeralBlockDeviceOutput)
}

type InstanceMetadataOptions struct {
	// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
	HttpEndpoint *string `pulumi:"httpEndpoint"`
	// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
	HttpPutResponseHopLimit *int `pulumi:"httpPutResponseHopLimit"`
	// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
	HttpTokens *string `pulumi:"httpTokens"`
}

// InstanceMetadataOptionsInput is an input type that accepts InstanceMetadataOptionsArgs and InstanceMetadataOptionsOutput values.
// You can construct a concrete instance of `InstanceMetadataOptionsInput` via:
//
// 		 InstanceMetadataOptionsArgs{...}
//
type InstanceMetadataOptionsInput interface {
	pulumi.Input

	ToInstanceMetadataOptionsOutput() InstanceMetadataOptionsOutput
	ToInstanceMetadataOptionsOutputWithContext(context.Context) InstanceMetadataOptionsOutput
}

type InstanceMetadataOptionsArgs struct {
	// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
	HttpEndpoint pulumi.StringPtrInput `pulumi:"httpEndpoint"`
	// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
	HttpPutResponseHopLimit pulumi.IntPtrInput `pulumi:"httpPutResponseHopLimit"`
	// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
	HttpTokens pulumi.StringPtrInput `pulumi:"httpTokens"`
}

func (InstanceMetadataOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMetadataOptions)(nil)).Elem()
}

func (i InstanceMetadataOptionsArgs) ToInstanceMetadataOptionsOutput() InstanceMetadataOptionsOutput {
	return i.ToInstanceMetadataOptionsOutputWithContext(context.Background())
}

func (i InstanceMetadataOptionsArgs) ToInstanceMetadataOptionsOutputWithContext(ctx context.Context) InstanceMetadataOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMetadataOptionsOutput)
}

func (i InstanceMetadataOptionsArgs) ToInstanceMetadataOptionsPtrOutput() InstanceMetadataOptionsPtrOutput {
	return i.ToInstanceMetadataOptionsPtrOutputWithContext(context.Background())
}

func (i InstanceMetadataOptionsArgs) ToInstanceMetadataOptionsPtrOutputWithContext(ctx context.Context) InstanceMetadataOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMetadataOptionsOutput).ToInstanceMetadataOptionsPtrOutputWithContext(ctx)
}

// InstanceMetadataOptionsPtrInput is an input type that accepts InstanceMetadataOptionsArgs, InstanceMetadataOptionsPtr and InstanceMetadataOptionsPtrOutput values.
// You can construct a concrete instance of `InstanceMetadataOptionsPtrInput` via:
//
// 		 InstanceMetadataOptionsArgs{...}
//
//  or:
//
// 		 nil
//
type InstanceMetadataOptionsPtrInput interface {
	pulumi.Input

	ToInstanceMetadataOptionsPtrOutput() InstanceMetadataOptionsPtrOutput
	ToInstanceMetadataOptionsPtrOutputWithContext(context.Context) InstanceMetadataOptionsPtrOutput
}

type instanceMetadataOptionsPtrType InstanceMetadataOptionsArgs

func InstanceMetadataOptionsPtr(v *InstanceMetadataOptionsArgs) InstanceMetadataOptionsPtrInput {
	return (*instanceMetadataOptionsPtrType)(v)
}

func (*instanceMetadataOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceMetadataOptions)(nil)).Elem()
}

func (i *instanceMetadataOptionsPtrType) ToInstanceMetadataOptionsPtrOutput() InstanceMetadataOptionsPtrOutput {
	return i.ToInstanceMetadataOptionsPtrOutputWithContext(context.Background())
}

func (i *instanceMetadataOptionsPtrType) ToInstanceMetadataOptionsPtrOutputWithContext(ctx context.Context) InstanceMetadataOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMetadataOptionsPtrOutput)
}

type InstanceMetadataOptionsOutput struct{ *pulumi.OutputState }

func (InstanceMetadataOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMetadataOptions)(nil)).Elem()
}

func (o InstanceMetadataOptionsOutput) ToInstanceMetadataOptionsOutput() InstanceMetadataOptionsOutput {
	return o
}

func (o InstanceMetadataOptionsOutput) ToInstanceMetadataOptionsOutputWithContext(ctx context.Context) InstanceMetadataOptionsOutput {
	return o
}

func (o InstanceMetadataOptionsOutput) ToInstanceMetadataOptionsPtrOutput() InstanceMetadataOptionsPtrOutput {
	return o.ToInstanceMetadataOptionsPtrOutputWithContext(context.Background())
}

func (o InstanceMetadataOptionsOutput) ToInstanceMetadataOptionsPtrOutputWithContext(ctx context.Context) InstanceMetadataOptionsPtrOutput {
	return o.ApplyT(func(v InstanceMetadataOptions) *InstanceMetadataOptions {
		return &v
	}).(InstanceMetadataOptionsPtrOutput)
}

// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
func (o InstanceMetadataOptionsOutput) HttpEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceMetadataOptions) *string { return v.HttpEndpoint }).(pulumi.StringPtrOutput)
}

// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
func (o InstanceMetadataOptionsOutput) HttpPutResponseHopLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceMetadataOptions) *int { return v.HttpPutResponseHopLimit }).(pulumi.IntPtrOutput)
}

// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
func (o InstanceMetadataOptionsOutput) HttpTokens() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceMetadataOptions) *string { return v.HttpTokens }).(pulumi.StringPtrOutput)
}

type InstanceMetadataOptionsPtrOutput struct{ *pulumi.OutputState }

func (InstanceMetadataOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceMetadataOptions)(nil)).Elem()
}

func (o InstanceMetadataOptionsPtrOutput) ToInstanceMetadataOptionsPtrOutput() InstanceMetadataOptionsPtrOutput {
	return o
}

func (o InstanceMetadataOptionsPtrOutput) ToInstanceMetadataOptionsPtrOutputWithContext(ctx context.Context) InstanceMetadataOptionsPtrOutput {
	return o
}

func (o InstanceMetadataOptionsPtrOutput) Elem() InstanceMetadataOptionsOutput {
	return o.ApplyT(func(v *InstanceMetadataOptions) InstanceMetadataOptions { return *v }).(InstanceMetadataOptionsOutput)
}

// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
func (o InstanceMetadataOptionsPtrOutput) HttpEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceMetadataOptions) *string { return v.HttpEndpoint }).(pulumi.StringPtrOutput)
}

// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
func (o InstanceMetadataOptionsPtrOutput) HttpPutResponseHopLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceMetadataOptions) *int { return v.HttpPutResponseHopLimit }).(pulumi.IntPtrOutput)
}

// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
func (o InstanceMetadataOptionsPtrOutput) HttpTokens() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceMetadataOptions) *string { return v.HttpTokens }).(pulumi.StringPtrOutput)
}

type InstanceNetworkInterface struct {
	// Whether or not to delete the network interface on instance termination. Defaults to `false`. Currently, the only valid value is `false`, as this is only supported when creating new network interfaces when launching an instance.
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// The integer index of the network interface attachment. Limited by instance type.
	DeviceIndex int `pulumi:"deviceIndex"`
	// The ID of the network interface to attach.
	NetworkInterfaceId string `pulumi:"networkInterfaceId"`
}

// InstanceNetworkInterfaceInput is an input type that accepts InstanceNetworkInterfaceArgs and InstanceNetworkInterfaceOutput values.
// You can construct a concrete instance of `InstanceNetworkInterfaceInput` via:
//
// 		 InstanceNetworkInterfaceArgs{...}
//
type InstanceNetworkInterfaceInput interface {
	pulumi.Input

	ToInstanceNetworkInterfaceOutput() InstanceNetworkInterfaceOutput
	ToInstanceNetworkInterfaceOutputWithContext(context.Context) InstanceNetworkInterfaceOutput
}

type InstanceNetworkInterfaceArgs struct {
	// Whether or not to delete the network interface on instance termination. Defaults to `false`. Currently, the only valid value is `false`, as this is only supported when creating new network interfaces when launching an instance.
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// The integer index of the network interface attachment. Limited by instance type.
	DeviceIndex pulumi.IntInput `pulumi:"deviceIndex"`
	// The ID of the network interface to attach.
	NetworkInterfaceId pulumi.StringInput `pulumi:"networkInterfaceId"`
}

func (InstanceNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceNetworkInterface)(nil)).Elem()
}

func (i InstanceNetworkInterfaceArgs) ToInstanceNetworkInterfaceOutput() InstanceNetworkInterfaceOutput {
	return i.ToInstanceNetworkInterfaceOutputWithContext(context.Background())
}

func (i InstanceNetworkInterfaceArgs) ToInstanceNetworkInterfaceOutputWithContext(ctx context.Context) InstanceNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceNetworkInterfaceOutput)
}

// InstanceNetworkInterfaceArrayInput is an input type that accepts InstanceNetworkInterfaceArray and InstanceNetworkInterfaceArrayOutput values.
// You can construct a concrete instance of `InstanceNetworkInterfaceArrayInput` via:
//
// 		 InstanceNetworkInterfaceArray{ InstanceNetworkInterfaceArgs{...} }
//
type InstanceNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToInstanceNetworkInterfaceArrayOutput() InstanceNetworkInterfaceArrayOutput
	ToInstanceNetworkInterfaceArrayOutputWithContext(context.Context) InstanceNetworkInterfaceArrayOutput
}

type InstanceNetworkInterfaceArray []InstanceNetworkInterfaceInput

func (InstanceNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceNetworkInterface)(nil)).Elem()
}

func (i InstanceNetworkInterfaceArray) ToInstanceNetworkInterfaceArrayOutput() InstanceNetworkInterfaceArrayOutput {
	return i.ToInstanceNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i InstanceNetworkInterfaceArray) ToInstanceNetworkInterfaceArrayOutputWithContext(ctx context.Context) InstanceNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceNetworkInterfaceArrayOutput)
}

type InstanceNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (InstanceNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceNetworkInterface)(nil)).Elem()
}

func (o InstanceNetworkInterfaceOutput) ToInstanceNetworkInterfaceOutput() InstanceNetworkInterfaceOutput {
	return o
}

func (o InstanceNetworkInterfaceOutput) ToInstanceNetworkInterfaceOutputWithContext(ctx context.Context) InstanceNetworkInterfaceOutput {
	return o
}

// Whether or not to delete the network interface on instance termination. Defaults to `false`. Currently, the only valid value is `false`, as this is only supported when creating new network interfaces when launching an instance.
func (o InstanceNetworkInterfaceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceNetworkInterface) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// The integer index of the network interface attachment. Limited by instance type.
func (o InstanceNetworkInterfaceOutput) DeviceIndex() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceNetworkInterface) int { return v.DeviceIndex }).(pulumi.IntOutput)
}

// The ID of the network interface to attach.
func (o InstanceNetworkInterfaceOutput) NetworkInterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceNetworkInterface) string { return v.NetworkInterfaceId }).(pulumi.StringOutput)
}

type InstanceNetworkInterfaceArrayOutput struct{ *pulumi.OutputState }

func (InstanceNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceNetworkInterface)(nil)).Elem()
}

func (o InstanceNetworkInterfaceArrayOutput) ToInstanceNetworkInterfaceArrayOutput() InstanceNetworkInterfaceArrayOutput {
	return o
}

func (o InstanceNetworkInterfaceArrayOutput) ToInstanceNetworkInterfaceArrayOutputWithContext(ctx context.Context) InstanceNetworkInterfaceArrayOutput {
	return o
}

func (o InstanceNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) InstanceNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceNetworkInterface {
		return vs[0].([]InstanceNetworkInterface)[vs[1].(int)]
	}).(InstanceNetworkInterfaceOutput)
}

type InstanceRootBlockDevice struct {
	// Whether the volume should be destroyed
	// on instance termination (Default: `true`).
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// Enable volume encryption. (Default: `false`). Must be configured to perform drift detection.
	Encrypted *bool `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This is only valid for `volumeType` of `"io1"`, and must be specified if
	// using that type
	Iops *int `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	VolumeId *string `pulumi:"volumeId"`
	// The size of the volume in gibibytes (GiB).
	VolumeSize *int `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`, `"io1"`, `"sc1"`, or `"st1"`. (Default: `"standard"`).
	VolumeType *string `pulumi:"volumeType"`
}

// InstanceRootBlockDeviceInput is an input type that accepts InstanceRootBlockDeviceArgs and InstanceRootBlockDeviceOutput values.
// You can construct a concrete instance of `InstanceRootBlockDeviceInput` via:
//
// 		 InstanceRootBlockDeviceArgs{...}
//
type InstanceRootBlockDeviceInput interface {
	pulumi.Input

	ToInstanceRootBlockDeviceOutput() InstanceRootBlockDeviceOutput
	ToInstanceRootBlockDeviceOutputWithContext(context.Context) InstanceRootBlockDeviceOutput
}

type InstanceRootBlockDeviceArgs struct {
	// Whether the volume should be destroyed
	// on instance termination (Default: `true`).
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// Enable volume encryption. (Default: `false`). Must be configured to perform drift detection.
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This is only valid for `volumeType` of `"io1"`, and must be specified if
	// using that type
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	VolumeId pulumi.StringPtrInput `pulumi:"volumeId"`
	// The size of the volume in gibibytes (GiB).
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`, `"io1"`, `"sc1"`, or `"st1"`. (Default: `"standard"`).
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (InstanceRootBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceRootBlockDevice)(nil)).Elem()
}

func (i InstanceRootBlockDeviceArgs) ToInstanceRootBlockDeviceOutput() InstanceRootBlockDeviceOutput {
	return i.ToInstanceRootBlockDeviceOutputWithContext(context.Background())
}

func (i InstanceRootBlockDeviceArgs) ToInstanceRootBlockDeviceOutputWithContext(ctx context.Context) InstanceRootBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceRootBlockDeviceOutput)
}

func (i InstanceRootBlockDeviceArgs) ToInstanceRootBlockDevicePtrOutput() InstanceRootBlockDevicePtrOutput {
	return i.ToInstanceRootBlockDevicePtrOutputWithContext(context.Background())
}

func (i InstanceRootBlockDeviceArgs) ToInstanceRootBlockDevicePtrOutputWithContext(ctx context.Context) InstanceRootBlockDevicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceRootBlockDeviceOutput).ToInstanceRootBlockDevicePtrOutputWithContext(ctx)
}

// InstanceRootBlockDevicePtrInput is an input type that accepts InstanceRootBlockDeviceArgs, InstanceRootBlockDevicePtr and InstanceRootBlockDevicePtrOutput values.
// You can construct a concrete instance of `InstanceRootBlockDevicePtrInput` via:
//
// 		 InstanceRootBlockDeviceArgs{...}
//
//  or:
//
// 		 nil
//
type InstanceRootBlockDevicePtrInput interface {
	pulumi.Input

	ToInstanceRootBlockDevicePtrOutput() InstanceRootBlockDevicePtrOutput
	ToInstanceRootBlockDevicePtrOutputWithContext(context.Context) InstanceRootBlockDevicePtrOutput
}

type instanceRootBlockDevicePtrType InstanceRootBlockDeviceArgs

func InstanceRootBlockDevicePtr(v *InstanceRootBlockDeviceArgs) InstanceRootBlockDevicePtrInput {
	return (*instanceRootBlockDevicePtrType)(v)
}

func (*instanceRootBlockDevicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceRootBlockDevice)(nil)).Elem()
}

func (i *instanceRootBlockDevicePtrType) ToInstanceRootBlockDevicePtrOutput() InstanceRootBlockDevicePtrOutput {
	return i.ToInstanceRootBlockDevicePtrOutputWithContext(context.Background())
}

func (i *instanceRootBlockDevicePtrType) ToInstanceRootBlockDevicePtrOutputWithContext(ctx context.Context) InstanceRootBlockDevicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceRootBlockDevicePtrOutput)
}

type InstanceRootBlockDeviceOutput struct{ *pulumi.OutputState }

func (InstanceRootBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceRootBlockDevice)(nil)).Elem()
}

func (o InstanceRootBlockDeviceOutput) ToInstanceRootBlockDeviceOutput() InstanceRootBlockDeviceOutput {
	return o
}

func (o InstanceRootBlockDeviceOutput) ToInstanceRootBlockDeviceOutputWithContext(ctx context.Context) InstanceRootBlockDeviceOutput {
	return o
}

func (o InstanceRootBlockDeviceOutput) ToInstanceRootBlockDevicePtrOutput() InstanceRootBlockDevicePtrOutput {
	return o.ToInstanceRootBlockDevicePtrOutputWithContext(context.Background())
}

func (o InstanceRootBlockDeviceOutput) ToInstanceRootBlockDevicePtrOutputWithContext(ctx context.Context) InstanceRootBlockDevicePtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDevice) *InstanceRootBlockDevice {
		return &v
	}).(InstanceRootBlockDevicePtrOutput)
}

// Whether the volume should be destroyed
// on instance termination (Default: `true`).
func (o InstanceRootBlockDeviceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// Enable volume encryption. (Default: `false`). Must be configured to perform drift detection.
func (o InstanceRootBlockDeviceOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDevice) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// The amount of provisioned
// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
// This is only valid for `volumeType` of `"io1"`, and must be specified if
// using that type
func (o InstanceRootBlockDeviceOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDevice) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
func (o InstanceRootBlockDeviceOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDevice) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

func (o InstanceRootBlockDeviceOutput) VolumeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDevice) *string { return v.VolumeId }).(pulumi.StringPtrOutput)
}

// The size of the volume in gibibytes (GiB).
func (o InstanceRootBlockDeviceOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDevice) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// The type of volume. Can be `"standard"`, `"gp2"`, `"io1"`, `"sc1"`, or `"st1"`. (Default: `"standard"`).
func (o InstanceRootBlockDeviceOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDevice) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type InstanceRootBlockDevicePtrOutput struct{ *pulumi.OutputState }

func (InstanceRootBlockDevicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceRootBlockDevice)(nil)).Elem()
}

func (o InstanceRootBlockDevicePtrOutput) ToInstanceRootBlockDevicePtrOutput() InstanceRootBlockDevicePtrOutput {
	return o
}

func (o InstanceRootBlockDevicePtrOutput) ToInstanceRootBlockDevicePtrOutputWithContext(ctx context.Context) InstanceRootBlockDevicePtrOutput {
	return o
}

func (o InstanceRootBlockDevicePtrOutput) Elem() InstanceRootBlockDeviceOutput {
	return o.ApplyT(func(v *InstanceRootBlockDevice) InstanceRootBlockDevice { return *v }).(InstanceRootBlockDeviceOutput)
}

// Whether the volume should be destroyed
// on instance termination (Default: `true`).
func (o InstanceRootBlockDevicePtrOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// Enable volume encryption. (Default: `false`). Must be configured to perform drift detection.
func (o InstanceRootBlockDevicePtrOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDevice) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// The amount of provisioned
// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
// This is only valid for `volumeType` of `"io1"`, and must be specified if
// using that type
func (o InstanceRootBlockDevicePtrOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDevice) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
func (o InstanceRootBlockDevicePtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDevice) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

func (o InstanceRootBlockDevicePtrOutput) VolumeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDevice) *string { return v.VolumeId }).(pulumi.StringPtrOutput)
}

// The size of the volume in gibibytes (GiB).
func (o InstanceRootBlockDevicePtrOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDevice) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// The type of volume. Can be `"standard"`, `"gp2"`, `"io1"`, `"sc1"`, or `"st1"`. (Default: `"standard"`).
func (o InstanceRootBlockDevicePtrOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceRootBlockDevice) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type LaunchConfigurationEbsBlockDevice struct {
	DeleteOnTermination *bool   `pulumi:"deleteOnTermination"`
	DeviceName          string  `pulumi:"deviceName"`
	Encrypted           *bool   `pulumi:"encrypted"`
	Iops                *int    `pulumi:"iops"`
	NoDevice            *bool   `pulumi:"noDevice"`
	SnapshotId          *string `pulumi:"snapshotId"`
	VolumeSize          *int    `pulumi:"volumeSize"`
	VolumeType          *string `pulumi:"volumeType"`
}

// LaunchConfigurationEbsBlockDeviceInput is an input type that accepts LaunchConfigurationEbsBlockDeviceArgs and LaunchConfigurationEbsBlockDeviceOutput values.
// You can construct a concrete instance of `LaunchConfigurationEbsBlockDeviceInput` via:
//
// 		 LaunchConfigurationEbsBlockDeviceArgs{...}
//
type LaunchConfigurationEbsBlockDeviceInput interface {
	pulumi.Input

	ToLaunchConfigurationEbsBlockDeviceOutput() LaunchConfigurationEbsBlockDeviceOutput
	ToLaunchConfigurationEbsBlockDeviceOutputWithContext(context.Context) LaunchConfigurationEbsBlockDeviceOutput
}

type LaunchConfigurationEbsBlockDeviceArgs struct {
	DeleteOnTermination pulumi.BoolPtrInput   `pulumi:"deleteOnTermination"`
	DeviceName          pulumi.StringInput    `pulumi:"deviceName"`
	Encrypted           pulumi.BoolPtrInput   `pulumi:"encrypted"`
	Iops                pulumi.IntPtrInput    `pulumi:"iops"`
	NoDevice            pulumi.BoolPtrInput   `pulumi:"noDevice"`
	SnapshotId          pulumi.StringPtrInput `pulumi:"snapshotId"`
	VolumeSize          pulumi.IntPtrInput    `pulumi:"volumeSize"`
	VolumeType          pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (LaunchConfigurationEbsBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchConfigurationEbsBlockDevice)(nil)).Elem()
}

func (i LaunchConfigurationEbsBlockDeviceArgs) ToLaunchConfigurationEbsBlockDeviceOutput() LaunchConfigurationEbsBlockDeviceOutput {
	return i.ToLaunchConfigurationEbsBlockDeviceOutputWithContext(context.Background())
}

func (i LaunchConfigurationEbsBlockDeviceArgs) ToLaunchConfigurationEbsBlockDeviceOutputWithContext(ctx context.Context) LaunchConfigurationEbsBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchConfigurationEbsBlockDeviceOutput)
}

// LaunchConfigurationEbsBlockDeviceArrayInput is an input type that accepts LaunchConfigurationEbsBlockDeviceArray and LaunchConfigurationEbsBlockDeviceArrayOutput values.
// You can construct a concrete instance of `LaunchConfigurationEbsBlockDeviceArrayInput` via:
//
// 		 LaunchConfigurationEbsBlockDeviceArray{ LaunchConfigurationEbsBlockDeviceArgs{...} }
//
type LaunchConfigurationEbsBlockDeviceArrayInput interface {
	pulumi.Input

	ToLaunchConfigurationEbsBlockDeviceArrayOutput() LaunchConfigurationEbsBlockDeviceArrayOutput
	ToLaunchConfigurationEbsBlockDeviceArrayOutputWithContext(context.Context) LaunchConfigurationEbsBlockDeviceArrayOutput
}

type LaunchConfigurationEbsBlockDeviceArray []LaunchConfigurationEbsBlockDeviceInput

func (LaunchConfigurationEbsBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchConfigurationEbsBlockDevice)(nil)).Elem()
}

func (i LaunchConfigurationEbsBlockDeviceArray) ToLaunchConfigurationEbsBlockDeviceArrayOutput() LaunchConfigurationEbsBlockDeviceArrayOutput {
	return i.ToLaunchConfigurationEbsBlockDeviceArrayOutputWithContext(context.Background())
}

func (i LaunchConfigurationEbsBlockDeviceArray) ToLaunchConfigurationEbsBlockDeviceArrayOutputWithContext(ctx context.Context) LaunchConfigurationEbsBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchConfigurationEbsBlockDeviceArrayOutput)
}

type LaunchConfigurationEbsBlockDeviceOutput struct{ *pulumi.OutputState }

func (LaunchConfigurationEbsBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchConfigurationEbsBlockDevice)(nil)).Elem()
}

func (o LaunchConfigurationEbsBlockDeviceOutput) ToLaunchConfigurationEbsBlockDeviceOutput() LaunchConfigurationEbsBlockDeviceOutput {
	return o
}

func (o LaunchConfigurationEbsBlockDeviceOutput) ToLaunchConfigurationEbsBlockDeviceOutputWithContext(ctx context.Context) LaunchConfigurationEbsBlockDeviceOutput {
	return o
}

func (o LaunchConfigurationEbsBlockDeviceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationEbsBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

func (o LaunchConfigurationEbsBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v LaunchConfigurationEbsBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

func (o LaunchConfigurationEbsBlockDeviceOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationEbsBlockDevice) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

func (o LaunchConfigurationEbsBlockDeviceOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationEbsBlockDevice) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o LaunchConfigurationEbsBlockDeviceOutput) NoDevice() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationEbsBlockDevice) *bool { return v.NoDevice }).(pulumi.BoolPtrOutput)
}

func (o LaunchConfigurationEbsBlockDeviceOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationEbsBlockDevice) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

func (o LaunchConfigurationEbsBlockDeviceOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationEbsBlockDevice) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

func (o LaunchConfigurationEbsBlockDeviceOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationEbsBlockDevice) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type LaunchConfigurationEbsBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (LaunchConfigurationEbsBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchConfigurationEbsBlockDevice)(nil)).Elem()
}

func (o LaunchConfigurationEbsBlockDeviceArrayOutput) ToLaunchConfigurationEbsBlockDeviceArrayOutput() LaunchConfigurationEbsBlockDeviceArrayOutput {
	return o
}

func (o LaunchConfigurationEbsBlockDeviceArrayOutput) ToLaunchConfigurationEbsBlockDeviceArrayOutputWithContext(ctx context.Context) LaunchConfigurationEbsBlockDeviceArrayOutput {
	return o
}

func (o LaunchConfigurationEbsBlockDeviceArrayOutput) Index(i pulumi.IntInput) LaunchConfigurationEbsBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LaunchConfigurationEbsBlockDevice {
		return vs[0].([]LaunchConfigurationEbsBlockDevice)[vs[1].(int)]
	}).(LaunchConfigurationEbsBlockDeviceOutput)
}

type LaunchConfigurationEphemeralBlockDevice struct {
	DeviceName  string `pulumi:"deviceName"`
	VirtualName string `pulumi:"virtualName"`
}

// LaunchConfigurationEphemeralBlockDeviceInput is an input type that accepts LaunchConfigurationEphemeralBlockDeviceArgs and LaunchConfigurationEphemeralBlockDeviceOutput values.
// You can construct a concrete instance of `LaunchConfigurationEphemeralBlockDeviceInput` via:
//
// 		 LaunchConfigurationEphemeralBlockDeviceArgs{...}
//
type LaunchConfigurationEphemeralBlockDeviceInput interface {
	pulumi.Input

	ToLaunchConfigurationEphemeralBlockDeviceOutput() LaunchConfigurationEphemeralBlockDeviceOutput
	ToLaunchConfigurationEphemeralBlockDeviceOutputWithContext(context.Context) LaunchConfigurationEphemeralBlockDeviceOutput
}

type LaunchConfigurationEphemeralBlockDeviceArgs struct {
	DeviceName  pulumi.StringInput `pulumi:"deviceName"`
	VirtualName pulumi.StringInput `pulumi:"virtualName"`
}

func (LaunchConfigurationEphemeralBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchConfigurationEphemeralBlockDevice)(nil)).Elem()
}

func (i LaunchConfigurationEphemeralBlockDeviceArgs) ToLaunchConfigurationEphemeralBlockDeviceOutput() LaunchConfigurationEphemeralBlockDeviceOutput {
	return i.ToLaunchConfigurationEphemeralBlockDeviceOutputWithContext(context.Background())
}

func (i LaunchConfigurationEphemeralBlockDeviceArgs) ToLaunchConfigurationEphemeralBlockDeviceOutputWithContext(ctx context.Context) LaunchConfigurationEphemeralBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchConfigurationEphemeralBlockDeviceOutput)
}

// LaunchConfigurationEphemeralBlockDeviceArrayInput is an input type that accepts LaunchConfigurationEphemeralBlockDeviceArray and LaunchConfigurationEphemeralBlockDeviceArrayOutput values.
// You can construct a concrete instance of `LaunchConfigurationEphemeralBlockDeviceArrayInput` via:
//
// 		 LaunchConfigurationEphemeralBlockDeviceArray{ LaunchConfigurationEphemeralBlockDeviceArgs{...} }
//
type LaunchConfigurationEphemeralBlockDeviceArrayInput interface {
	pulumi.Input

	ToLaunchConfigurationEphemeralBlockDeviceArrayOutput() LaunchConfigurationEphemeralBlockDeviceArrayOutput
	ToLaunchConfigurationEphemeralBlockDeviceArrayOutputWithContext(context.Context) LaunchConfigurationEphemeralBlockDeviceArrayOutput
}

type LaunchConfigurationEphemeralBlockDeviceArray []LaunchConfigurationEphemeralBlockDeviceInput

func (LaunchConfigurationEphemeralBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchConfigurationEphemeralBlockDevice)(nil)).Elem()
}

func (i LaunchConfigurationEphemeralBlockDeviceArray) ToLaunchConfigurationEphemeralBlockDeviceArrayOutput() LaunchConfigurationEphemeralBlockDeviceArrayOutput {
	return i.ToLaunchConfigurationEphemeralBlockDeviceArrayOutputWithContext(context.Background())
}

func (i LaunchConfigurationEphemeralBlockDeviceArray) ToLaunchConfigurationEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) LaunchConfigurationEphemeralBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchConfigurationEphemeralBlockDeviceArrayOutput)
}

type LaunchConfigurationEphemeralBlockDeviceOutput struct{ *pulumi.OutputState }

func (LaunchConfigurationEphemeralBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchConfigurationEphemeralBlockDevice)(nil)).Elem()
}

func (o LaunchConfigurationEphemeralBlockDeviceOutput) ToLaunchConfigurationEphemeralBlockDeviceOutput() LaunchConfigurationEphemeralBlockDeviceOutput {
	return o
}

func (o LaunchConfigurationEphemeralBlockDeviceOutput) ToLaunchConfigurationEphemeralBlockDeviceOutputWithContext(ctx context.Context) LaunchConfigurationEphemeralBlockDeviceOutput {
	return o
}

func (o LaunchConfigurationEphemeralBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v LaunchConfigurationEphemeralBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

func (o LaunchConfigurationEphemeralBlockDeviceOutput) VirtualName() pulumi.StringOutput {
	return o.ApplyT(func(v LaunchConfigurationEphemeralBlockDevice) string { return v.VirtualName }).(pulumi.StringOutput)
}

type LaunchConfigurationEphemeralBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (LaunchConfigurationEphemeralBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchConfigurationEphemeralBlockDevice)(nil)).Elem()
}

func (o LaunchConfigurationEphemeralBlockDeviceArrayOutput) ToLaunchConfigurationEphemeralBlockDeviceArrayOutput() LaunchConfigurationEphemeralBlockDeviceArrayOutput {
	return o
}

func (o LaunchConfigurationEphemeralBlockDeviceArrayOutput) ToLaunchConfigurationEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) LaunchConfigurationEphemeralBlockDeviceArrayOutput {
	return o
}

func (o LaunchConfigurationEphemeralBlockDeviceArrayOutput) Index(i pulumi.IntInput) LaunchConfigurationEphemeralBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LaunchConfigurationEphemeralBlockDevice {
		return vs[0].([]LaunchConfigurationEphemeralBlockDevice)[vs[1].(int)]
	}).(LaunchConfigurationEphemeralBlockDeviceOutput)
}

type LaunchConfigurationRootBlockDevice struct {
	DeleteOnTermination *bool   `pulumi:"deleteOnTermination"`
	Encrypted           *bool   `pulumi:"encrypted"`
	Iops                *int    `pulumi:"iops"`
	VolumeSize          *int    `pulumi:"volumeSize"`
	VolumeType          *string `pulumi:"volumeType"`
}

// LaunchConfigurationRootBlockDeviceInput is an input type that accepts LaunchConfigurationRootBlockDeviceArgs and LaunchConfigurationRootBlockDeviceOutput values.
// You can construct a concrete instance of `LaunchConfigurationRootBlockDeviceInput` via:
//
// 		 LaunchConfigurationRootBlockDeviceArgs{...}
//
type LaunchConfigurationRootBlockDeviceInput interface {
	pulumi.Input

	ToLaunchConfigurationRootBlockDeviceOutput() LaunchConfigurationRootBlockDeviceOutput
	ToLaunchConfigurationRootBlockDeviceOutputWithContext(context.Context) LaunchConfigurationRootBlockDeviceOutput
}

type LaunchConfigurationRootBlockDeviceArgs struct {
	DeleteOnTermination pulumi.BoolPtrInput   `pulumi:"deleteOnTermination"`
	Encrypted           pulumi.BoolPtrInput   `pulumi:"encrypted"`
	Iops                pulumi.IntPtrInput    `pulumi:"iops"`
	VolumeSize          pulumi.IntPtrInput    `pulumi:"volumeSize"`
	VolumeType          pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (LaunchConfigurationRootBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchConfigurationRootBlockDevice)(nil)).Elem()
}

func (i LaunchConfigurationRootBlockDeviceArgs) ToLaunchConfigurationRootBlockDeviceOutput() LaunchConfigurationRootBlockDeviceOutput {
	return i.ToLaunchConfigurationRootBlockDeviceOutputWithContext(context.Background())
}

func (i LaunchConfigurationRootBlockDeviceArgs) ToLaunchConfigurationRootBlockDeviceOutputWithContext(ctx context.Context) LaunchConfigurationRootBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchConfigurationRootBlockDeviceOutput)
}

func (i LaunchConfigurationRootBlockDeviceArgs) ToLaunchConfigurationRootBlockDevicePtrOutput() LaunchConfigurationRootBlockDevicePtrOutput {
	return i.ToLaunchConfigurationRootBlockDevicePtrOutputWithContext(context.Background())
}

func (i LaunchConfigurationRootBlockDeviceArgs) ToLaunchConfigurationRootBlockDevicePtrOutputWithContext(ctx context.Context) LaunchConfigurationRootBlockDevicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchConfigurationRootBlockDeviceOutput).ToLaunchConfigurationRootBlockDevicePtrOutputWithContext(ctx)
}

// LaunchConfigurationRootBlockDevicePtrInput is an input type that accepts LaunchConfigurationRootBlockDeviceArgs, LaunchConfigurationRootBlockDevicePtr and LaunchConfigurationRootBlockDevicePtrOutput values.
// You can construct a concrete instance of `LaunchConfigurationRootBlockDevicePtrInput` via:
//
// 		 LaunchConfigurationRootBlockDeviceArgs{...}
//
//  or:
//
// 		 nil
//
type LaunchConfigurationRootBlockDevicePtrInput interface {
	pulumi.Input

	ToLaunchConfigurationRootBlockDevicePtrOutput() LaunchConfigurationRootBlockDevicePtrOutput
	ToLaunchConfigurationRootBlockDevicePtrOutputWithContext(context.Context) LaunchConfigurationRootBlockDevicePtrOutput
}

type launchConfigurationRootBlockDevicePtrType LaunchConfigurationRootBlockDeviceArgs

func LaunchConfigurationRootBlockDevicePtr(v *LaunchConfigurationRootBlockDeviceArgs) LaunchConfigurationRootBlockDevicePtrInput {
	return (*launchConfigurationRootBlockDevicePtrType)(v)
}

func (*launchConfigurationRootBlockDevicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchConfigurationRootBlockDevice)(nil)).Elem()
}

func (i *launchConfigurationRootBlockDevicePtrType) ToLaunchConfigurationRootBlockDevicePtrOutput() LaunchConfigurationRootBlockDevicePtrOutput {
	return i.ToLaunchConfigurationRootBlockDevicePtrOutputWithContext(context.Background())
}

func (i *launchConfigurationRootBlockDevicePtrType) ToLaunchConfigurationRootBlockDevicePtrOutputWithContext(ctx context.Context) LaunchConfigurationRootBlockDevicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchConfigurationRootBlockDevicePtrOutput)
}

type LaunchConfigurationRootBlockDeviceOutput struct{ *pulumi.OutputState }

func (LaunchConfigurationRootBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchConfigurationRootBlockDevice)(nil)).Elem()
}

func (o LaunchConfigurationRootBlockDeviceOutput) ToLaunchConfigurationRootBlockDeviceOutput() LaunchConfigurationRootBlockDeviceOutput {
	return o
}

func (o LaunchConfigurationRootBlockDeviceOutput) ToLaunchConfigurationRootBlockDeviceOutputWithContext(ctx context.Context) LaunchConfigurationRootBlockDeviceOutput {
	return o
}

func (o LaunchConfigurationRootBlockDeviceOutput) ToLaunchConfigurationRootBlockDevicePtrOutput() LaunchConfigurationRootBlockDevicePtrOutput {
	return o.ToLaunchConfigurationRootBlockDevicePtrOutputWithContext(context.Background())
}

func (o LaunchConfigurationRootBlockDeviceOutput) ToLaunchConfigurationRootBlockDevicePtrOutputWithContext(ctx context.Context) LaunchConfigurationRootBlockDevicePtrOutput {
	return o.ApplyT(func(v LaunchConfigurationRootBlockDevice) *LaunchConfigurationRootBlockDevice {
		return &v
	}).(LaunchConfigurationRootBlockDevicePtrOutput)
}
func (o LaunchConfigurationRootBlockDeviceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationRootBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

func (o LaunchConfigurationRootBlockDeviceOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationRootBlockDevice) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

func (o LaunchConfigurationRootBlockDeviceOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationRootBlockDevice) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o LaunchConfigurationRootBlockDeviceOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationRootBlockDevice) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

func (o LaunchConfigurationRootBlockDeviceOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationRootBlockDevice) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type LaunchConfigurationRootBlockDevicePtrOutput struct{ *pulumi.OutputState }

func (LaunchConfigurationRootBlockDevicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchConfigurationRootBlockDevice)(nil)).Elem()
}

func (o LaunchConfigurationRootBlockDevicePtrOutput) ToLaunchConfigurationRootBlockDevicePtrOutput() LaunchConfigurationRootBlockDevicePtrOutput {
	return o
}

func (o LaunchConfigurationRootBlockDevicePtrOutput) ToLaunchConfigurationRootBlockDevicePtrOutputWithContext(ctx context.Context) LaunchConfigurationRootBlockDevicePtrOutput {
	return o
}

func (o LaunchConfigurationRootBlockDevicePtrOutput) Elem() LaunchConfigurationRootBlockDeviceOutput {
	return o.ApplyT(func(v *LaunchConfigurationRootBlockDevice) LaunchConfigurationRootBlockDevice { return *v }).(LaunchConfigurationRootBlockDeviceOutput)
}

func (o LaunchConfigurationRootBlockDevicePtrOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationRootBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

func (o LaunchConfigurationRootBlockDevicePtrOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationRootBlockDevice) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

func (o LaunchConfigurationRootBlockDevicePtrOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationRootBlockDevice) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o LaunchConfigurationRootBlockDevicePtrOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationRootBlockDevice) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

func (o LaunchConfigurationRootBlockDevicePtrOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchConfigurationRootBlockDevice) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type LaunchTemplateBlockDeviceMapping struct {
	// The name of the device to mount.
	DeviceName *string `pulumi:"deviceName"`
	// Configure EBS volume properties.
	Ebs *LaunchTemplateBlockDeviceMappingEbs `pulumi:"ebs"`
	// Suppresses the specified device included in the AMI's block device mapping.
	NoDevice *string `pulumi:"noDevice"`
	// The [Instance Store Device
	// Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
	// (e.g. `"ephemeral0"`).
	VirtualName *string `pulumi:"virtualName"`
}

// LaunchTemplateBlockDeviceMappingInput is an input type that accepts LaunchTemplateBlockDeviceMappingArgs and LaunchTemplateBlockDeviceMappingOutput values.
// You can construct a concrete instance of `LaunchTemplateBlockDeviceMappingInput` via:
//
// 		 LaunchTemplateBlockDeviceMappingArgs{...}
//
type LaunchTemplateBlockDeviceMappingInput interface {
	pulumi.Input

	ToLaunchTemplateBlockDeviceMappingOutput() LaunchTemplateBlockDeviceMappingOutput
	ToLaunchTemplateBlockDeviceMappingOutputWithContext(context.Context) LaunchTemplateBlockDeviceMappingOutput
}

type LaunchTemplateBlockDeviceMappingArgs struct {
	// The name of the device to mount.
	DeviceName pulumi.StringPtrInput `pulumi:"deviceName"`
	// Configure EBS volume properties.
	Ebs LaunchTemplateBlockDeviceMappingEbsPtrInput `pulumi:"ebs"`
	// Suppresses the specified device included in the AMI's block device mapping.
	NoDevice pulumi.StringPtrInput `pulumi:"noDevice"`
	// The [Instance Store Device
	// Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
	// (e.g. `"ephemeral0"`).
	VirtualName pulumi.StringPtrInput `pulumi:"virtualName"`
}

func (LaunchTemplateBlockDeviceMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateBlockDeviceMapping)(nil)).Elem()
}

func (i LaunchTemplateBlockDeviceMappingArgs) ToLaunchTemplateBlockDeviceMappingOutput() LaunchTemplateBlockDeviceMappingOutput {
	return i.ToLaunchTemplateBlockDeviceMappingOutputWithContext(context.Background())
}

func (i LaunchTemplateBlockDeviceMappingArgs) ToLaunchTemplateBlockDeviceMappingOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateBlockDeviceMappingOutput)
}

// LaunchTemplateBlockDeviceMappingArrayInput is an input type that accepts LaunchTemplateBlockDeviceMappingArray and LaunchTemplateBlockDeviceMappingArrayOutput values.
// You can construct a concrete instance of `LaunchTemplateBlockDeviceMappingArrayInput` via:
//
// 		 LaunchTemplateBlockDeviceMappingArray{ LaunchTemplateBlockDeviceMappingArgs{...} }
//
type LaunchTemplateBlockDeviceMappingArrayInput interface {
	pulumi.Input

	ToLaunchTemplateBlockDeviceMappingArrayOutput() LaunchTemplateBlockDeviceMappingArrayOutput
	ToLaunchTemplateBlockDeviceMappingArrayOutputWithContext(context.Context) LaunchTemplateBlockDeviceMappingArrayOutput
}

type LaunchTemplateBlockDeviceMappingArray []LaunchTemplateBlockDeviceMappingInput

func (LaunchTemplateBlockDeviceMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateBlockDeviceMapping)(nil)).Elem()
}

func (i LaunchTemplateBlockDeviceMappingArray) ToLaunchTemplateBlockDeviceMappingArrayOutput() LaunchTemplateBlockDeviceMappingArrayOutput {
	return i.ToLaunchTemplateBlockDeviceMappingArrayOutputWithContext(context.Background())
}

func (i LaunchTemplateBlockDeviceMappingArray) ToLaunchTemplateBlockDeviceMappingArrayOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateBlockDeviceMappingArrayOutput)
}

type LaunchTemplateBlockDeviceMappingOutput struct{ *pulumi.OutputState }

func (LaunchTemplateBlockDeviceMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateBlockDeviceMapping)(nil)).Elem()
}

func (o LaunchTemplateBlockDeviceMappingOutput) ToLaunchTemplateBlockDeviceMappingOutput() LaunchTemplateBlockDeviceMappingOutput {
	return o
}

func (o LaunchTemplateBlockDeviceMappingOutput) ToLaunchTemplateBlockDeviceMappingOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingOutput {
	return o
}

// The name of the device to mount.
func (o LaunchTemplateBlockDeviceMappingOutput) DeviceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMapping) *string { return v.DeviceName }).(pulumi.StringPtrOutput)
}

// Configure EBS volume properties.
func (o LaunchTemplateBlockDeviceMappingOutput) Ebs() LaunchTemplateBlockDeviceMappingEbsPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMapping) *LaunchTemplateBlockDeviceMappingEbs { return v.Ebs }).(LaunchTemplateBlockDeviceMappingEbsPtrOutput)
}

// Suppresses the specified device included in the AMI's block device mapping.
func (o LaunchTemplateBlockDeviceMappingOutput) NoDevice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMapping) *string { return v.NoDevice }).(pulumi.StringPtrOutput)
}

// The [Instance Store Device
// Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
// (e.g. `"ephemeral0"`).
func (o LaunchTemplateBlockDeviceMappingOutput) VirtualName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMapping) *string { return v.VirtualName }).(pulumi.StringPtrOutput)
}

type LaunchTemplateBlockDeviceMappingArrayOutput struct{ *pulumi.OutputState }

func (LaunchTemplateBlockDeviceMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateBlockDeviceMapping)(nil)).Elem()
}

func (o LaunchTemplateBlockDeviceMappingArrayOutput) ToLaunchTemplateBlockDeviceMappingArrayOutput() LaunchTemplateBlockDeviceMappingArrayOutput {
	return o
}

func (o LaunchTemplateBlockDeviceMappingArrayOutput) ToLaunchTemplateBlockDeviceMappingArrayOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingArrayOutput {
	return o
}

func (o LaunchTemplateBlockDeviceMappingArrayOutput) Index(i pulumi.IntInput) LaunchTemplateBlockDeviceMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LaunchTemplateBlockDeviceMapping {
		return vs[0].([]LaunchTemplateBlockDeviceMapping)[vs[1].(int)]
	}).(LaunchTemplateBlockDeviceMappingOutput)
}

type LaunchTemplateBlockDeviceMappingEbs struct {
	// Whether the volume should be destroyed on instance termination (Default: `false`). See [Preserving Amazon EBS Volumes on Instance Termination](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#preserving-volumes-on-termination) for more information.
	DeleteOnTermination *string `pulumi:"deleteOnTermination"`
	// Enables [EBS encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
	// on the volume (Default: `false`). Cannot be used with `snapshotId`.
	Encrypted *string `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This must be set with a `volumeType` of `"io1"`.
	Iops *int `pulumi:"iops"`
	// The ARN of the AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating the encrypted volume.
	// `encrypted` must be set to `true` when this is set.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The Snapshot ID to mount.
	SnapshotId *string `pulumi:"snapshotId"`
	// The size of the volume in gigabytes.
	VolumeSize *int `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`, or `"io1"`. (Default: `"standard"`).
	VolumeType *string `pulumi:"volumeType"`
}

// LaunchTemplateBlockDeviceMappingEbsInput is an input type that accepts LaunchTemplateBlockDeviceMappingEbsArgs and LaunchTemplateBlockDeviceMappingEbsOutput values.
// You can construct a concrete instance of `LaunchTemplateBlockDeviceMappingEbsInput` via:
//
// 		 LaunchTemplateBlockDeviceMappingEbsArgs{...}
//
type LaunchTemplateBlockDeviceMappingEbsInput interface {
	pulumi.Input

	ToLaunchTemplateBlockDeviceMappingEbsOutput() LaunchTemplateBlockDeviceMappingEbsOutput
	ToLaunchTemplateBlockDeviceMappingEbsOutputWithContext(context.Context) LaunchTemplateBlockDeviceMappingEbsOutput
}

type LaunchTemplateBlockDeviceMappingEbsArgs struct {
	// Whether the volume should be destroyed on instance termination (Default: `false`). See [Preserving Amazon EBS Volumes on Instance Termination](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#preserving-volumes-on-termination) for more information.
	DeleteOnTermination pulumi.StringPtrInput `pulumi:"deleteOnTermination"`
	// Enables [EBS encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
	// on the volume (Default: `false`). Cannot be used with `snapshotId`.
	Encrypted pulumi.StringPtrInput `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This must be set with a `volumeType` of `"io1"`.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// The ARN of the AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating the encrypted volume.
	// `encrypted` must be set to `true` when this is set.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	// The Snapshot ID to mount.
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
	// The size of the volume in gigabytes.
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`, or `"io1"`. (Default: `"standard"`).
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (LaunchTemplateBlockDeviceMappingEbsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateBlockDeviceMappingEbs)(nil)).Elem()
}

func (i LaunchTemplateBlockDeviceMappingEbsArgs) ToLaunchTemplateBlockDeviceMappingEbsOutput() LaunchTemplateBlockDeviceMappingEbsOutput {
	return i.ToLaunchTemplateBlockDeviceMappingEbsOutputWithContext(context.Background())
}

func (i LaunchTemplateBlockDeviceMappingEbsArgs) ToLaunchTemplateBlockDeviceMappingEbsOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingEbsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateBlockDeviceMappingEbsOutput)
}

func (i LaunchTemplateBlockDeviceMappingEbsArgs) ToLaunchTemplateBlockDeviceMappingEbsPtrOutput() LaunchTemplateBlockDeviceMappingEbsPtrOutput {
	return i.ToLaunchTemplateBlockDeviceMappingEbsPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateBlockDeviceMappingEbsArgs) ToLaunchTemplateBlockDeviceMappingEbsPtrOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingEbsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateBlockDeviceMappingEbsOutput).ToLaunchTemplateBlockDeviceMappingEbsPtrOutputWithContext(ctx)
}

// LaunchTemplateBlockDeviceMappingEbsPtrInput is an input type that accepts LaunchTemplateBlockDeviceMappingEbsArgs, LaunchTemplateBlockDeviceMappingEbsPtr and LaunchTemplateBlockDeviceMappingEbsPtrOutput values.
// You can construct a concrete instance of `LaunchTemplateBlockDeviceMappingEbsPtrInput` via:
//
// 		 LaunchTemplateBlockDeviceMappingEbsArgs{...}
//
//  or:
//
// 		 nil
//
type LaunchTemplateBlockDeviceMappingEbsPtrInput interface {
	pulumi.Input

	ToLaunchTemplateBlockDeviceMappingEbsPtrOutput() LaunchTemplateBlockDeviceMappingEbsPtrOutput
	ToLaunchTemplateBlockDeviceMappingEbsPtrOutputWithContext(context.Context) LaunchTemplateBlockDeviceMappingEbsPtrOutput
}

type launchTemplateBlockDeviceMappingEbsPtrType LaunchTemplateBlockDeviceMappingEbsArgs

func LaunchTemplateBlockDeviceMappingEbsPtr(v *LaunchTemplateBlockDeviceMappingEbsArgs) LaunchTemplateBlockDeviceMappingEbsPtrInput {
	return (*launchTemplateBlockDeviceMappingEbsPtrType)(v)
}

func (*launchTemplateBlockDeviceMappingEbsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateBlockDeviceMappingEbs)(nil)).Elem()
}

func (i *launchTemplateBlockDeviceMappingEbsPtrType) ToLaunchTemplateBlockDeviceMappingEbsPtrOutput() LaunchTemplateBlockDeviceMappingEbsPtrOutput {
	return i.ToLaunchTemplateBlockDeviceMappingEbsPtrOutputWithContext(context.Background())
}

func (i *launchTemplateBlockDeviceMappingEbsPtrType) ToLaunchTemplateBlockDeviceMappingEbsPtrOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingEbsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateBlockDeviceMappingEbsPtrOutput)
}

type LaunchTemplateBlockDeviceMappingEbsOutput struct{ *pulumi.OutputState }

func (LaunchTemplateBlockDeviceMappingEbsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateBlockDeviceMappingEbs)(nil)).Elem()
}

func (o LaunchTemplateBlockDeviceMappingEbsOutput) ToLaunchTemplateBlockDeviceMappingEbsOutput() LaunchTemplateBlockDeviceMappingEbsOutput {
	return o
}

func (o LaunchTemplateBlockDeviceMappingEbsOutput) ToLaunchTemplateBlockDeviceMappingEbsOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingEbsOutput {
	return o
}

func (o LaunchTemplateBlockDeviceMappingEbsOutput) ToLaunchTemplateBlockDeviceMappingEbsPtrOutput() LaunchTemplateBlockDeviceMappingEbsPtrOutput {
	return o.ToLaunchTemplateBlockDeviceMappingEbsPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateBlockDeviceMappingEbsOutput) ToLaunchTemplateBlockDeviceMappingEbsPtrOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingEbsPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbs) *LaunchTemplateBlockDeviceMappingEbs {
		return &v
	}).(LaunchTemplateBlockDeviceMappingEbsPtrOutput)
}

// Whether the volume should be destroyed on instance termination (Default: `false`). See [Preserving Amazon EBS Volumes on Instance Termination](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#preserving-volumes-on-termination) for more information.
func (o LaunchTemplateBlockDeviceMappingEbsOutput) DeleteOnTermination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbs) *string { return v.DeleteOnTermination }).(pulumi.StringPtrOutput)
}

// Enables [EBS encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
// on the volume (Default: `false`). Cannot be used with `snapshotId`.
func (o LaunchTemplateBlockDeviceMappingEbsOutput) Encrypted() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbs) *string { return v.Encrypted }).(pulumi.StringPtrOutput)
}

// The amount of provisioned
// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
// This must be set with a `volumeType` of `"io1"`.
func (o LaunchTemplateBlockDeviceMappingEbsOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbs) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// The ARN of the AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating the encrypted volume.
// `encrypted` must be set to `true` when this is set.
func (o LaunchTemplateBlockDeviceMappingEbsOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbs) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// The Snapshot ID to mount.
func (o LaunchTemplateBlockDeviceMappingEbsOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbs) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

// The size of the volume in gigabytes.
func (o LaunchTemplateBlockDeviceMappingEbsOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbs) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// The type of volume. Can be `"standard"`, `"gp2"`, or `"io1"`. (Default: `"standard"`).
func (o LaunchTemplateBlockDeviceMappingEbsOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbs) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type LaunchTemplateBlockDeviceMappingEbsPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateBlockDeviceMappingEbsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateBlockDeviceMappingEbs)(nil)).Elem()
}

func (o LaunchTemplateBlockDeviceMappingEbsPtrOutput) ToLaunchTemplateBlockDeviceMappingEbsPtrOutput() LaunchTemplateBlockDeviceMappingEbsPtrOutput {
	return o
}

func (o LaunchTemplateBlockDeviceMappingEbsPtrOutput) ToLaunchTemplateBlockDeviceMappingEbsPtrOutputWithContext(ctx context.Context) LaunchTemplateBlockDeviceMappingEbsPtrOutput {
	return o
}

func (o LaunchTemplateBlockDeviceMappingEbsPtrOutput) Elem() LaunchTemplateBlockDeviceMappingEbsOutput {
	return o.ApplyT(func(v *LaunchTemplateBlockDeviceMappingEbs) LaunchTemplateBlockDeviceMappingEbs { return *v }).(LaunchTemplateBlockDeviceMappingEbsOutput)
}

// Whether the volume should be destroyed on instance termination (Default: `false`). See [Preserving Amazon EBS Volumes on Instance Termination](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#preserving-volumes-on-termination) for more information.
func (o LaunchTemplateBlockDeviceMappingEbsPtrOutput) DeleteOnTermination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbs) *string { return v.DeleteOnTermination }).(pulumi.StringPtrOutput)
}

// Enables [EBS encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
// on the volume (Default: `false`). Cannot be used with `snapshotId`.
func (o LaunchTemplateBlockDeviceMappingEbsPtrOutput) Encrypted() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbs) *string { return v.Encrypted }).(pulumi.StringPtrOutput)
}

// The amount of provisioned
// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
// This must be set with a `volumeType` of `"io1"`.
func (o LaunchTemplateBlockDeviceMappingEbsPtrOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbs) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// The ARN of the AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating the encrypted volume.
// `encrypted` must be set to `true` when this is set.
func (o LaunchTemplateBlockDeviceMappingEbsPtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbs) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// The Snapshot ID to mount.
func (o LaunchTemplateBlockDeviceMappingEbsPtrOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbs) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

// The size of the volume in gigabytes.
func (o LaunchTemplateBlockDeviceMappingEbsPtrOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbs) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// The type of volume. Can be `"standard"`, `"gp2"`, or `"io1"`. (Default: `"standard"`).
func (o LaunchTemplateBlockDeviceMappingEbsPtrOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateBlockDeviceMappingEbs) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type LaunchTemplateCapacityReservationSpecification struct {
	// Indicates the instance's Capacity Reservation preferences. Can be `open` or `none`. (Default `none`).
	CapacityReservationPreference *string `pulumi:"capacityReservationPreference"`
	// Used to target a specific Capacity Reservation:
	CapacityReservationTarget *LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget `pulumi:"capacityReservationTarget"`
}

// LaunchTemplateCapacityReservationSpecificationInput is an input type that accepts LaunchTemplateCapacityReservationSpecificationArgs and LaunchTemplateCapacityReservationSpecificationOutput values.
// You can construct a concrete instance of `LaunchTemplateCapacityReservationSpecificationInput` via:
//
// 		 LaunchTemplateCapacityReservationSpecificationArgs{...}
//
type LaunchTemplateCapacityReservationSpecificationInput interface {
	pulumi.Input

	ToLaunchTemplateCapacityReservationSpecificationOutput() LaunchTemplateCapacityReservationSpecificationOutput
	ToLaunchTemplateCapacityReservationSpecificationOutputWithContext(context.Context) LaunchTemplateCapacityReservationSpecificationOutput
}

type LaunchTemplateCapacityReservationSpecificationArgs struct {
	// Indicates the instance's Capacity Reservation preferences. Can be `open` or `none`. (Default `none`).
	CapacityReservationPreference pulumi.StringPtrInput `pulumi:"capacityReservationPreference"`
	// Used to target a specific Capacity Reservation:
	CapacityReservationTarget LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrInput `pulumi:"capacityReservationTarget"`
}

func (LaunchTemplateCapacityReservationSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateCapacityReservationSpecification)(nil)).Elem()
}

func (i LaunchTemplateCapacityReservationSpecificationArgs) ToLaunchTemplateCapacityReservationSpecificationOutput() LaunchTemplateCapacityReservationSpecificationOutput {
	return i.ToLaunchTemplateCapacityReservationSpecificationOutputWithContext(context.Background())
}

func (i LaunchTemplateCapacityReservationSpecificationArgs) ToLaunchTemplateCapacityReservationSpecificationOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCapacityReservationSpecificationOutput)
}

func (i LaunchTemplateCapacityReservationSpecificationArgs) ToLaunchTemplateCapacityReservationSpecificationPtrOutput() LaunchTemplateCapacityReservationSpecificationPtrOutput {
	return i.ToLaunchTemplateCapacityReservationSpecificationPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateCapacityReservationSpecificationArgs) ToLaunchTemplateCapacityReservationSpecificationPtrOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCapacityReservationSpecificationOutput).ToLaunchTemplateCapacityReservationSpecificationPtrOutputWithContext(ctx)
}

// LaunchTemplateCapacityReservationSpecificationPtrInput is an input type that accepts LaunchTemplateCapacityReservationSpecificationArgs, LaunchTemplateCapacityReservationSpecificationPtr and LaunchTemplateCapacityReservationSpecificationPtrOutput values.
// You can construct a concrete instance of `LaunchTemplateCapacityReservationSpecificationPtrInput` via:
//
// 		 LaunchTemplateCapacityReservationSpecificationArgs{...}
//
//  or:
//
// 		 nil
//
type LaunchTemplateCapacityReservationSpecificationPtrInput interface {
	pulumi.Input

	ToLaunchTemplateCapacityReservationSpecificationPtrOutput() LaunchTemplateCapacityReservationSpecificationPtrOutput
	ToLaunchTemplateCapacityReservationSpecificationPtrOutputWithContext(context.Context) LaunchTemplateCapacityReservationSpecificationPtrOutput
}

type launchTemplateCapacityReservationSpecificationPtrType LaunchTemplateCapacityReservationSpecificationArgs

func LaunchTemplateCapacityReservationSpecificationPtr(v *LaunchTemplateCapacityReservationSpecificationArgs) LaunchTemplateCapacityReservationSpecificationPtrInput {
	return (*launchTemplateCapacityReservationSpecificationPtrType)(v)
}

func (*launchTemplateCapacityReservationSpecificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateCapacityReservationSpecification)(nil)).Elem()
}

func (i *launchTemplateCapacityReservationSpecificationPtrType) ToLaunchTemplateCapacityReservationSpecificationPtrOutput() LaunchTemplateCapacityReservationSpecificationPtrOutput {
	return i.ToLaunchTemplateCapacityReservationSpecificationPtrOutputWithContext(context.Background())
}

func (i *launchTemplateCapacityReservationSpecificationPtrType) ToLaunchTemplateCapacityReservationSpecificationPtrOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCapacityReservationSpecificationPtrOutput)
}

type LaunchTemplateCapacityReservationSpecificationOutput struct{ *pulumi.OutputState }

func (LaunchTemplateCapacityReservationSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateCapacityReservationSpecification)(nil)).Elem()
}

func (o LaunchTemplateCapacityReservationSpecificationOutput) ToLaunchTemplateCapacityReservationSpecificationOutput() LaunchTemplateCapacityReservationSpecificationOutput {
	return o
}

func (o LaunchTemplateCapacityReservationSpecificationOutput) ToLaunchTemplateCapacityReservationSpecificationOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationOutput {
	return o
}

func (o LaunchTemplateCapacityReservationSpecificationOutput) ToLaunchTemplateCapacityReservationSpecificationPtrOutput() LaunchTemplateCapacityReservationSpecificationPtrOutput {
	return o.ToLaunchTemplateCapacityReservationSpecificationPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateCapacityReservationSpecificationOutput) ToLaunchTemplateCapacityReservationSpecificationPtrOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCapacityReservationSpecification) *LaunchTemplateCapacityReservationSpecification {
		return &v
	}).(LaunchTemplateCapacityReservationSpecificationPtrOutput)
}

// Indicates the instance's Capacity Reservation preferences. Can be `open` or `none`. (Default `none`).
func (o LaunchTemplateCapacityReservationSpecificationOutput) CapacityReservationPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCapacityReservationSpecification) *string {
		return v.CapacityReservationPreference
	}).(pulumi.StringPtrOutput)
}

// Used to target a specific Capacity Reservation:
func (o LaunchTemplateCapacityReservationSpecificationOutput) CapacityReservationTarget() LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCapacityReservationSpecification) *LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget {
		return v.CapacityReservationTarget
	}).(LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput)
}

type LaunchTemplateCapacityReservationSpecificationPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateCapacityReservationSpecificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateCapacityReservationSpecification)(nil)).Elem()
}

func (o LaunchTemplateCapacityReservationSpecificationPtrOutput) ToLaunchTemplateCapacityReservationSpecificationPtrOutput() LaunchTemplateCapacityReservationSpecificationPtrOutput {
	return o
}

func (o LaunchTemplateCapacityReservationSpecificationPtrOutput) ToLaunchTemplateCapacityReservationSpecificationPtrOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationPtrOutput {
	return o
}

func (o LaunchTemplateCapacityReservationSpecificationPtrOutput) Elem() LaunchTemplateCapacityReservationSpecificationOutput {
	return o.ApplyT(func(v *LaunchTemplateCapacityReservationSpecification) LaunchTemplateCapacityReservationSpecification {
		return *v
	}).(LaunchTemplateCapacityReservationSpecificationOutput)
}

// Indicates the instance's Capacity Reservation preferences. Can be `open` or `none`. (Default `none`).
func (o LaunchTemplateCapacityReservationSpecificationPtrOutput) CapacityReservationPreference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCapacityReservationSpecification) *string {
		return v.CapacityReservationPreference
	}).(pulumi.StringPtrOutput)
}

// Used to target a specific Capacity Reservation:
func (o LaunchTemplateCapacityReservationSpecificationPtrOutput) CapacityReservationTarget() LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCapacityReservationSpecification) *LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget {
		return v.CapacityReservationTarget
	}).(LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput)
}

type LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget struct {
	// The ID of the Capacity Reservation to target.
	CapacityReservationId *string `pulumi:"capacityReservationId"`
}

// LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetInput is an input type that accepts LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs and LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput values.
// You can construct a concrete instance of `LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetInput` via:
//
// 		 LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs{...}
//
type LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetInput interface {
	pulumi.Input

	ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput() LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput
	ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutputWithContext(context.Context) LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput
}

type LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs struct {
	// The ID of the Capacity Reservation to target.
	CapacityReservationId pulumi.StringPtrInput `pulumi:"capacityReservationId"`
}

func (LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget)(nil)).Elem()
}

func (i LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput() LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput {
	return i.ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutputWithContext(context.Background())
}

func (i LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput)
}

func (i LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput() LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput {
	return i.ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput).ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutputWithContext(ctx)
}

// LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrInput is an input type that accepts LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs, LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtr and LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput values.
// You can construct a concrete instance of `LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrInput` via:
//
// 		 LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs{...}
//
//  or:
//
// 		 nil
//
type LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrInput interface {
	pulumi.Input

	ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput() LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput
	ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutputWithContext(context.Context) LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput
}

type launchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrType LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs

func LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtr(v *LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetArgs) LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrInput {
	return (*launchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrType)(v)
}

func (*launchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget)(nil)).Elem()
}

func (i *launchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrType) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput() LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput {
	return i.ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutputWithContext(context.Background())
}

func (i *launchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrType) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput)
}

type LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput struct{ *pulumi.OutputState }

func (LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget)(nil)).Elem()
}

func (o LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput() LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput {
	return o
}

func (o LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput {
	return o
}

func (o LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput() LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput {
	return o.ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget) *LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget {
		return &v
	}).(LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput)
}

// The ID of the Capacity Reservation to target.
func (o LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput) CapacityReservationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget) *string {
		return v.CapacityReservationId
	}).(pulumi.StringPtrOutput)
}

type LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget)(nil)).Elem()
}

func (o LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput() LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput {
	return o
}

func (o LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput) ToLaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutputWithContext(ctx context.Context) LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput {
	return o
}

func (o LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput) Elem() LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput {
	return o.ApplyT(func(v *LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget) LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget {
		return *v
	}).(LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput)
}

// The ID of the Capacity Reservation to target.
func (o LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput) CapacityReservationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCapacityReservationSpecificationCapacityReservationTarget) *string {
		return v.CapacityReservationId
	}).(pulumi.StringPtrOutput)
}

type LaunchTemplateCpuOptions struct {
	// The number of CPU cores for the instance.
	CoreCount *int `pulumi:"coreCount"`
	// The number of threads per CPU core. To disable Intel Hyper-Threading Technology for the instance, specify a value of 1.
	// Otherwise, specify the default value of 2.
	ThreadsPerCore *int `pulumi:"threadsPerCore"`
}

// LaunchTemplateCpuOptionsInput is an input type that accepts LaunchTemplateCpuOptionsArgs and LaunchTemplateCpuOptionsOutput values.
// You can construct a concrete instance of `LaunchTemplateCpuOptionsInput` via:
//
// 		 LaunchTemplateCpuOptionsArgs{...}
//
type LaunchTemplateCpuOptionsInput interface {
	pulumi.Input

	ToLaunchTemplateCpuOptionsOutput() LaunchTemplateCpuOptionsOutput
	ToLaunchTemplateCpuOptionsOutputWithContext(context.Context) LaunchTemplateCpuOptionsOutput
}

type LaunchTemplateCpuOptionsArgs struct {
	// The number of CPU cores for the instance.
	CoreCount pulumi.IntPtrInput `pulumi:"coreCount"`
	// The number of threads per CPU core. To disable Intel Hyper-Threading Technology for the instance, specify a value of 1.
	// Otherwise, specify the default value of 2.
	ThreadsPerCore pulumi.IntPtrInput `pulumi:"threadsPerCore"`
}

func (LaunchTemplateCpuOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateCpuOptions)(nil)).Elem()
}

func (i LaunchTemplateCpuOptionsArgs) ToLaunchTemplateCpuOptionsOutput() LaunchTemplateCpuOptionsOutput {
	return i.ToLaunchTemplateCpuOptionsOutputWithContext(context.Background())
}

func (i LaunchTemplateCpuOptionsArgs) ToLaunchTemplateCpuOptionsOutputWithContext(ctx context.Context) LaunchTemplateCpuOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCpuOptionsOutput)
}

func (i LaunchTemplateCpuOptionsArgs) ToLaunchTemplateCpuOptionsPtrOutput() LaunchTemplateCpuOptionsPtrOutput {
	return i.ToLaunchTemplateCpuOptionsPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateCpuOptionsArgs) ToLaunchTemplateCpuOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateCpuOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCpuOptionsOutput).ToLaunchTemplateCpuOptionsPtrOutputWithContext(ctx)
}

// LaunchTemplateCpuOptionsPtrInput is an input type that accepts LaunchTemplateCpuOptionsArgs, LaunchTemplateCpuOptionsPtr and LaunchTemplateCpuOptionsPtrOutput values.
// You can construct a concrete instance of `LaunchTemplateCpuOptionsPtrInput` via:
//
// 		 LaunchTemplateCpuOptionsArgs{...}
//
//  or:
//
// 		 nil
//
type LaunchTemplateCpuOptionsPtrInput interface {
	pulumi.Input

	ToLaunchTemplateCpuOptionsPtrOutput() LaunchTemplateCpuOptionsPtrOutput
	ToLaunchTemplateCpuOptionsPtrOutputWithContext(context.Context) LaunchTemplateCpuOptionsPtrOutput
}

type launchTemplateCpuOptionsPtrType LaunchTemplateCpuOptionsArgs

func LaunchTemplateCpuOptionsPtr(v *LaunchTemplateCpuOptionsArgs) LaunchTemplateCpuOptionsPtrInput {
	return (*launchTemplateCpuOptionsPtrType)(v)
}

func (*launchTemplateCpuOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateCpuOptions)(nil)).Elem()
}

func (i *launchTemplateCpuOptionsPtrType) ToLaunchTemplateCpuOptionsPtrOutput() LaunchTemplateCpuOptionsPtrOutput {
	return i.ToLaunchTemplateCpuOptionsPtrOutputWithContext(context.Background())
}

func (i *launchTemplateCpuOptionsPtrType) ToLaunchTemplateCpuOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateCpuOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCpuOptionsPtrOutput)
}

type LaunchTemplateCpuOptionsOutput struct{ *pulumi.OutputState }

func (LaunchTemplateCpuOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateCpuOptions)(nil)).Elem()
}

func (o LaunchTemplateCpuOptionsOutput) ToLaunchTemplateCpuOptionsOutput() LaunchTemplateCpuOptionsOutput {
	return o
}

func (o LaunchTemplateCpuOptionsOutput) ToLaunchTemplateCpuOptionsOutputWithContext(ctx context.Context) LaunchTemplateCpuOptionsOutput {
	return o
}

func (o LaunchTemplateCpuOptionsOutput) ToLaunchTemplateCpuOptionsPtrOutput() LaunchTemplateCpuOptionsPtrOutput {
	return o.ToLaunchTemplateCpuOptionsPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateCpuOptionsOutput) ToLaunchTemplateCpuOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateCpuOptionsPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCpuOptions) *LaunchTemplateCpuOptions {
		return &v
	}).(LaunchTemplateCpuOptionsPtrOutput)
}

// The number of CPU cores for the instance.
func (o LaunchTemplateCpuOptionsOutput) CoreCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCpuOptions) *int { return v.CoreCount }).(pulumi.IntPtrOutput)
}

// The number of threads per CPU core. To disable Intel Hyper-Threading Technology for the instance, specify a value of 1.
// Otherwise, specify the default value of 2.
func (o LaunchTemplateCpuOptionsOutput) ThreadsPerCore() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCpuOptions) *int { return v.ThreadsPerCore }).(pulumi.IntPtrOutput)
}

type LaunchTemplateCpuOptionsPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateCpuOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateCpuOptions)(nil)).Elem()
}

func (o LaunchTemplateCpuOptionsPtrOutput) ToLaunchTemplateCpuOptionsPtrOutput() LaunchTemplateCpuOptionsPtrOutput {
	return o
}

func (o LaunchTemplateCpuOptionsPtrOutput) ToLaunchTemplateCpuOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateCpuOptionsPtrOutput {
	return o
}

func (o LaunchTemplateCpuOptionsPtrOutput) Elem() LaunchTemplateCpuOptionsOutput {
	return o.ApplyT(func(v *LaunchTemplateCpuOptions) LaunchTemplateCpuOptions { return *v }).(LaunchTemplateCpuOptionsOutput)
}

// The number of CPU cores for the instance.
func (o LaunchTemplateCpuOptionsPtrOutput) CoreCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCpuOptions) *int { return v.CoreCount }).(pulumi.IntPtrOutput)
}

// The number of threads per CPU core. To disable Intel Hyper-Threading Technology for the instance, specify a value of 1.
// Otherwise, specify the default value of 2.
func (o LaunchTemplateCpuOptionsPtrOutput) ThreadsPerCore() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCpuOptions) *int { return v.ThreadsPerCore }).(pulumi.IntPtrOutput)
}

type LaunchTemplateCreditSpecification struct {
	// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
	CpuCredits *string `pulumi:"cpuCredits"`
}

// LaunchTemplateCreditSpecificationInput is an input type that accepts LaunchTemplateCreditSpecificationArgs and LaunchTemplateCreditSpecificationOutput values.
// You can construct a concrete instance of `LaunchTemplateCreditSpecificationInput` via:
//
// 		 LaunchTemplateCreditSpecificationArgs{...}
//
type LaunchTemplateCreditSpecificationInput interface {
	pulumi.Input

	ToLaunchTemplateCreditSpecificationOutput() LaunchTemplateCreditSpecificationOutput
	ToLaunchTemplateCreditSpecificationOutputWithContext(context.Context) LaunchTemplateCreditSpecificationOutput
}

type LaunchTemplateCreditSpecificationArgs struct {
	// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
	CpuCredits pulumi.StringPtrInput `pulumi:"cpuCredits"`
}

func (LaunchTemplateCreditSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateCreditSpecification)(nil)).Elem()
}

func (i LaunchTemplateCreditSpecificationArgs) ToLaunchTemplateCreditSpecificationOutput() LaunchTemplateCreditSpecificationOutput {
	return i.ToLaunchTemplateCreditSpecificationOutputWithContext(context.Background())
}

func (i LaunchTemplateCreditSpecificationArgs) ToLaunchTemplateCreditSpecificationOutputWithContext(ctx context.Context) LaunchTemplateCreditSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCreditSpecificationOutput)
}

func (i LaunchTemplateCreditSpecificationArgs) ToLaunchTemplateCreditSpecificationPtrOutput() LaunchTemplateCreditSpecificationPtrOutput {
	return i.ToLaunchTemplateCreditSpecificationPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateCreditSpecificationArgs) ToLaunchTemplateCreditSpecificationPtrOutputWithContext(ctx context.Context) LaunchTemplateCreditSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCreditSpecificationOutput).ToLaunchTemplateCreditSpecificationPtrOutputWithContext(ctx)
}

// LaunchTemplateCreditSpecificationPtrInput is an input type that accepts LaunchTemplateCreditSpecificationArgs, LaunchTemplateCreditSpecificationPtr and LaunchTemplateCreditSpecificationPtrOutput values.
// You can construct a concrete instance of `LaunchTemplateCreditSpecificationPtrInput` via:
//
// 		 LaunchTemplateCreditSpecificationArgs{...}
//
//  or:
//
// 		 nil
//
type LaunchTemplateCreditSpecificationPtrInput interface {
	pulumi.Input

	ToLaunchTemplateCreditSpecificationPtrOutput() LaunchTemplateCreditSpecificationPtrOutput
	ToLaunchTemplateCreditSpecificationPtrOutputWithContext(context.Context) LaunchTemplateCreditSpecificationPtrOutput
}

type launchTemplateCreditSpecificationPtrType LaunchTemplateCreditSpecificationArgs

func LaunchTemplateCreditSpecificationPtr(v *LaunchTemplateCreditSpecificationArgs) LaunchTemplateCreditSpecificationPtrInput {
	return (*launchTemplateCreditSpecificationPtrType)(v)
}

func (*launchTemplateCreditSpecificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateCreditSpecification)(nil)).Elem()
}

func (i *launchTemplateCreditSpecificationPtrType) ToLaunchTemplateCreditSpecificationPtrOutput() LaunchTemplateCreditSpecificationPtrOutput {
	return i.ToLaunchTemplateCreditSpecificationPtrOutputWithContext(context.Background())
}

func (i *launchTemplateCreditSpecificationPtrType) ToLaunchTemplateCreditSpecificationPtrOutputWithContext(ctx context.Context) LaunchTemplateCreditSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateCreditSpecificationPtrOutput)
}

type LaunchTemplateCreditSpecificationOutput struct{ *pulumi.OutputState }

func (LaunchTemplateCreditSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateCreditSpecification)(nil)).Elem()
}

func (o LaunchTemplateCreditSpecificationOutput) ToLaunchTemplateCreditSpecificationOutput() LaunchTemplateCreditSpecificationOutput {
	return o
}

func (o LaunchTemplateCreditSpecificationOutput) ToLaunchTemplateCreditSpecificationOutputWithContext(ctx context.Context) LaunchTemplateCreditSpecificationOutput {
	return o
}

func (o LaunchTemplateCreditSpecificationOutput) ToLaunchTemplateCreditSpecificationPtrOutput() LaunchTemplateCreditSpecificationPtrOutput {
	return o.ToLaunchTemplateCreditSpecificationPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateCreditSpecificationOutput) ToLaunchTemplateCreditSpecificationPtrOutputWithContext(ctx context.Context) LaunchTemplateCreditSpecificationPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCreditSpecification) *LaunchTemplateCreditSpecification {
		return &v
	}).(LaunchTemplateCreditSpecificationPtrOutput)
}

// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
func (o LaunchTemplateCreditSpecificationOutput) CpuCredits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCreditSpecification) *string { return v.CpuCredits }).(pulumi.StringPtrOutput)
}

type LaunchTemplateCreditSpecificationPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateCreditSpecificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateCreditSpecification)(nil)).Elem()
}

func (o LaunchTemplateCreditSpecificationPtrOutput) ToLaunchTemplateCreditSpecificationPtrOutput() LaunchTemplateCreditSpecificationPtrOutput {
	return o
}

func (o LaunchTemplateCreditSpecificationPtrOutput) ToLaunchTemplateCreditSpecificationPtrOutputWithContext(ctx context.Context) LaunchTemplateCreditSpecificationPtrOutput {
	return o
}

func (o LaunchTemplateCreditSpecificationPtrOutput) Elem() LaunchTemplateCreditSpecificationOutput {
	return o.ApplyT(func(v *LaunchTemplateCreditSpecification) LaunchTemplateCreditSpecification { return *v }).(LaunchTemplateCreditSpecificationOutput)
}

// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
func (o LaunchTemplateCreditSpecificationPtrOutput) CpuCredits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateCreditSpecification) *string { return v.CpuCredits }).(pulumi.StringPtrOutput)
}

type LaunchTemplateElasticGpuSpecification struct {
	// The [Elastic GPU Type](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-gpus.html#elastic-gpus-basics)
	Type string `pulumi:"type"`
}

// LaunchTemplateElasticGpuSpecificationInput is an input type that accepts LaunchTemplateElasticGpuSpecificationArgs and LaunchTemplateElasticGpuSpecificationOutput values.
// You can construct a concrete instance of `LaunchTemplateElasticGpuSpecificationInput` via:
//
// 		 LaunchTemplateElasticGpuSpecificationArgs{...}
//
type LaunchTemplateElasticGpuSpecificationInput interface {
	pulumi.Input

	ToLaunchTemplateElasticGpuSpecificationOutput() LaunchTemplateElasticGpuSpecificationOutput
	ToLaunchTemplateElasticGpuSpecificationOutputWithContext(context.Context) LaunchTemplateElasticGpuSpecificationOutput
}

type LaunchTemplateElasticGpuSpecificationArgs struct {
	// The [Elastic GPU Type](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-gpus.html#elastic-gpus-basics)
	Type pulumi.StringInput `pulumi:"type"`
}

func (LaunchTemplateElasticGpuSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateElasticGpuSpecification)(nil)).Elem()
}

func (i LaunchTemplateElasticGpuSpecificationArgs) ToLaunchTemplateElasticGpuSpecificationOutput() LaunchTemplateElasticGpuSpecificationOutput {
	return i.ToLaunchTemplateElasticGpuSpecificationOutputWithContext(context.Background())
}

func (i LaunchTemplateElasticGpuSpecificationArgs) ToLaunchTemplateElasticGpuSpecificationOutputWithContext(ctx context.Context) LaunchTemplateElasticGpuSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateElasticGpuSpecificationOutput)
}

// LaunchTemplateElasticGpuSpecificationArrayInput is an input type that accepts LaunchTemplateElasticGpuSpecificationArray and LaunchTemplateElasticGpuSpecificationArrayOutput values.
// You can construct a concrete instance of `LaunchTemplateElasticGpuSpecificationArrayInput` via:
//
// 		 LaunchTemplateElasticGpuSpecificationArray{ LaunchTemplateElasticGpuSpecificationArgs{...} }
//
type LaunchTemplateElasticGpuSpecificationArrayInput interface {
	pulumi.Input

	ToLaunchTemplateElasticGpuSpecificationArrayOutput() LaunchTemplateElasticGpuSpecificationArrayOutput
	ToLaunchTemplateElasticGpuSpecificationArrayOutputWithContext(context.Context) LaunchTemplateElasticGpuSpecificationArrayOutput
}

type LaunchTemplateElasticGpuSpecificationArray []LaunchTemplateElasticGpuSpecificationInput

func (LaunchTemplateElasticGpuSpecificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateElasticGpuSpecification)(nil)).Elem()
}

func (i LaunchTemplateElasticGpuSpecificationArray) ToLaunchTemplateElasticGpuSpecificationArrayOutput() LaunchTemplateElasticGpuSpecificationArrayOutput {
	return i.ToLaunchTemplateElasticGpuSpecificationArrayOutputWithContext(context.Background())
}

func (i LaunchTemplateElasticGpuSpecificationArray) ToLaunchTemplateElasticGpuSpecificationArrayOutputWithContext(ctx context.Context) LaunchTemplateElasticGpuSpecificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateElasticGpuSpecificationArrayOutput)
}

type LaunchTemplateElasticGpuSpecificationOutput struct{ *pulumi.OutputState }

func (LaunchTemplateElasticGpuSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateElasticGpuSpecification)(nil)).Elem()
}

func (o LaunchTemplateElasticGpuSpecificationOutput) ToLaunchTemplateElasticGpuSpecificationOutput() LaunchTemplateElasticGpuSpecificationOutput {
	return o
}

func (o LaunchTemplateElasticGpuSpecificationOutput) ToLaunchTemplateElasticGpuSpecificationOutputWithContext(ctx context.Context) LaunchTemplateElasticGpuSpecificationOutput {
	return o
}

// The [Elastic GPU Type](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-gpus.html#elastic-gpus-basics)
func (o LaunchTemplateElasticGpuSpecificationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LaunchTemplateElasticGpuSpecification) string { return v.Type }).(pulumi.StringOutput)
}

type LaunchTemplateElasticGpuSpecificationArrayOutput struct{ *pulumi.OutputState }

func (LaunchTemplateElasticGpuSpecificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateElasticGpuSpecification)(nil)).Elem()
}

func (o LaunchTemplateElasticGpuSpecificationArrayOutput) ToLaunchTemplateElasticGpuSpecificationArrayOutput() LaunchTemplateElasticGpuSpecificationArrayOutput {
	return o
}

func (o LaunchTemplateElasticGpuSpecificationArrayOutput) ToLaunchTemplateElasticGpuSpecificationArrayOutputWithContext(ctx context.Context) LaunchTemplateElasticGpuSpecificationArrayOutput {
	return o
}

func (o LaunchTemplateElasticGpuSpecificationArrayOutput) Index(i pulumi.IntInput) LaunchTemplateElasticGpuSpecificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LaunchTemplateElasticGpuSpecification {
		return vs[0].([]LaunchTemplateElasticGpuSpecification)[vs[1].(int)]
	}).(LaunchTemplateElasticGpuSpecificationOutput)
}

type LaunchTemplateElasticInferenceAccelerator struct {
	// Accelerator type.
	Type string `pulumi:"type"`
}

// LaunchTemplateElasticInferenceAcceleratorInput is an input type that accepts LaunchTemplateElasticInferenceAcceleratorArgs and LaunchTemplateElasticInferenceAcceleratorOutput values.
// You can construct a concrete instance of `LaunchTemplateElasticInferenceAcceleratorInput` via:
//
// 		 LaunchTemplateElasticInferenceAcceleratorArgs{...}
//
type LaunchTemplateElasticInferenceAcceleratorInput interface {
	pulumi.Input

	ToLaunchTemplateElasticInferenceAcceleratorOutput() LaunchTemplateElasticInferenceAcceleratorOutput
	ToLaunchTemplateElasticInferenceAcceleratorOutputWithContext(context.Context) LaunchTemplateElasticInferenceAcceleratorOutput
}

type LaunchTemplateElasticInferenceAcceleratorArgs struct {
	// Accelerator type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (LaunchTemplateElasticInferenceAcceleratorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateElasticInferenceAccelerator)(nil)).Elem()
}

func (i LaunchTemplateElasticInferenceAcceleratorArgs) ToLaunchTemplateElasticInferenceAcceleratorOutput() LaunchTemplateElasticInferenceAcceleratorOutput {
	return i.ToLaunchTemplateElasticInferenceAcceleratorOutputWithContext(context.Background())
}

func (i LaunchTemplateElasticInferenceAcceleratorArgs) ToLaunchTemplateElasticInferenceAcceleratorOutputWithContext(ctx context.Context) LaunchTemplateElasticInferenceAcceleratorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateElasticInferenceAcceleratorOutput)
}

func (i LaunchTemplateElasticInferenceAcceleratorArgs) ToLaunchTemplateElasticInferenceAcceleratorPtrOutput() LaunchTemplateElasticInferenceAcceleratorPtrOutput {
	return i.ToLaunchTemplateElasticInferenceAcceleratorPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateElasticInferenceAcceleratorArgs) ToLaunchTemplateElasticInferenceAcceleratorPtrOutputWithContext(ctx context.Context) LaunchTemplateElasticInferenceAcceleratorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateElasticInferenceAcceleratorOutput).ToLaunchTemplateElasticInferenceAcceleratorPtrOutputWithContext(ctx)
}

// LaunchTemplateElasticInferenceAcceleratorPtrInput is an input type that accepts LaunchTemplateElasticInferenceAcceleratorArgs, LaunchTemplateElasticInferenceAcceleratorPtr and LaunchTemplateElasticInferenceAcceleratorPtrOutput values.
// You can construct a concrete instance of `LaunchTemplateElasticInferenceAcceleratorPtrInput` via:
//
// 		 LaunchTemplateElasticInferenceAcceleratorArgs{...}
//
//  or:
//
// 		 nil
//
type LaunchTemplateElasticInferenceAcceleratorPtrInput interface {
	pulumi.Input

	ToLaunchTemplateElasticInferenceAcceleratorPtrOutput() LaunchTemplateElasticInferenceAcceleratorPtrOutput
	ToLaunchTemplateElasticInferenceAcceleratorPtrOutputWithContext(context.Context) LaunchTemplateElasticInferenceAcceleratorPtrOutput
}

type launchTemplateElasticInferenceAcceleratorPtrType LaunchTemplateElasticInferenceAcceleratorArgs

func LaunchTemplateElasticInferenceAcceleratorPtr(v *LaunchTemplateElasticInferenceAcceleratorArgs) LaunchTemplateElasticInferenceAcceleratorPtrInput {
	return (*launchTemplateElasticInferenceAcceleratorPtrType)(v)
}

func (*launchTemplateElasticInferenceAcceleratorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateElasticInferenceAccelerator)(nil)).Elem()
}

func (i *launchTemplateElasticInferenceAcceleratorPtrType) ToLaunchTemplateElasticInferenceAcceleratorPtrOutput() LaunchTemplateElasticInferenceAcceleratorPtrOutput {
	return i.ToLaunchTemplateElasticInferenceAcceleratorPtrOutputWithContext(context.Background())
}

func (i *launchTemplateElasticInferenceAcceleratorPtrType) ToLaunchTemplateElasticInferenceAcceleratorPtrOutputWithContext(ctx context.Context) LaunchTemplateElasticInferenceAcceleratorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateElasticInferenceAcceleratorPtrOutput)
}

type LaunchTemplateElasticInferenceAcceleratorOutput struct{ *pulumi.OutputState }

func (LaunchTemplateElasticInferenceAcceleratorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateElasticInferenceAccelerator)(nil)).Elem()
}

func (o LaunchTemplateElasticInferenceAcceleratorOutput) ToLaunchTemplateElasticInferenceAcceleratorOutput() LaunchTemplateElasticInferenceAcceleratorOutput {
	return o
}

func (o LaunchTemplateElasticInferenceAcceleratorOutput) ToLaunchTemplateElasticInferenceAcceleratorOutputWithContext(ctx context.Context) LaunchTemplateElasticInferenceAcceleratorOutput {
	return o
}

func (o LaunchTemplateElasticInferenceAcceleratorOutput) ToLaunchTemplateElasticInferenceAcceleratorPtrOutput() LaunchTemplateElasticInferenceAcceleratorPtrOutput {
	return o.ToLaunchTemplateElasticInferenceAcceleratorPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateElasticInferenceAcceleratorOutput) ToLaunchTemplateElasticInferenceAcceleratorPtrOutputWithContext(ctx context.Context) LaunchTemplateElasticInferenceAcceleratorPtrOutput {
	return o.ApplyT(func(v LaunchTemplateElasticInferenceAccelerator) *LaunchTemplateElasticInferenceAccelerator {
		return &v
	}).(LaunchTemplateElasticInferenceAcceleratorPtrOutput)
}

// Accelerator type.
func (o LaunchTemplateElasticInferenceAcceleratorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LaunchTemplateElasticInferenceAccelerator) string { return v.Type }).(pulumi.StringOutput)
}

type LaunchTemplateElasticInferenceAcceleratorPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateElasticInferenceAcceleratorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateElasticInferenceAccelerator)(nil)).Elem()
}

func (o LaunchTemplateElasticInferenceAcceleratorPtrOutput) ToLaunchTemplateElasticInferenceAcceleratorPtrOutput() LaunchTemplateElasticInferenceAcceleratorPtrOutput {
	return o
}

func (o LaunchTemplateElasticInferenceAcceleratorPtrOutput) ToLaunchTemplateElasticInferenceAcceleratorPtrOutputWithContext(ctx context.Context) LaunchTemplateElasticInferenceAcceleratorPtrOutput {
	return o
}

func (o LaunchTemplateElasticInferenceAcceleratorPtrOutput) Elem() LaunchTemplateElasticInferenceAcceleratorOutput {
	return o.ApplyT(func(v *LaunchTemplateElasticInferenceAccelerator) LaunchTemplateElasticInferenceAccelerator {
		return *v
	}).(LaunchTemplateElasticInferenceAcceleratorOutput)
}

// Accelerator type.
func (o LaunchTemplateElasticInferenceAcceleratorPtrOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LaunchTemplateElasticInferenceAccelerator) string { return v.Type }).(pulumi.StringOutput)
}

type LaunchTemplateHibernationOptions struct {
	// If set to `true`, the launched EC2 instance will hibernation enabled.
	Configured bool `pulumi:"configured"`
}

// LaunchTemplateHibernationOptionsInput is an input type that accepts LaunchTemplateHibernationOptionsArgs and LaunchTemplateHibernationOptionsOutput values.
// You can construct a concrete instance of `LaunchTemplateHibernationOptionsInput` via:
//
// 		 LaunchTemplateHibernationOptionsArgs{...}
//
type LaunchTemplateHibernationOptionsInput interface {
	pulumi.Input

	ToLaunchTemplateHibernationOptionsOutput() LaunchTemplateHibernationOptionsOutput
	ToLaunchTemplateHibernationOptionsOutputWithContext(context.Context) LaunchTemplateHibernationOptionsOutput
}

type LaunchTemplateHibernationOptionsArgs struct {
	// If set to `true`, the launched EC2 instance will hibernation enabled.
	Configured pulumi.BoolInput `pulumi:"configured"`
}

func (LaunchTemplateHibernationOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateHibernationOptions)(nil)).Elem()
}

func (i LaunchTemplateHibernationOptionsArgs) ToLaunchTemplateHibernationOptionsOutput() LaunchTemplateHibernationOptionsOutput {
	return i.ToLaunchTemplateHibernationOptionsOutputWithContext(context.Background())
}

func (i LaunchTemplateHibernationOptionsArgs) ToLaunchTemplateHibernationOptionsOutputWithContext(ctx context.Context) LaunchTemplateHibernationOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateHibernationOptionsOutput)
}

func (i LaunchTemplateHibernationOptionsArgs) ToLaunchTemplateHibernationOptionsPtrOutput() LaunchTemplateHibernationOptionsPtrOutput {
	return i.ToLaunchTemplateHibernationOptionsPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateHibernationOptionsArgs) ToLaunchTemplateHibernationOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateHibernationOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateHibernationOptionsOutput).ToLaunchTemplateHibernationOptionsPtrOutputWithContext(ctx)
}

// LaunchTemplateHibernationOptionsPtrInput is an input type that accepts LaunchTemplateHibernationOptionsArgs, LaunchTemplateHibernationOptionsPtr and LaunchTemplateHibernationOptionsPtrOutput values.
// You can construct a concrete instance of `LaunchTemplateHibernationOptionsPtrInput` via:
//
// 		 LaunchTemplateHibernationOptionsArgs{...}
//
//  or:
//
// 		 nil
//
type LaunchTemplateHibernationOptionsPtrInput interface {
	pulumi.Input

	ToLaunchTemplateHibernationOptionsPtrOutput() LaunchTemplateHibernationOptionsPtrOutput
	ToLaunchTemplateHibernationOptionsPtrOutputWithContext(context.Context) LaunchTemplateHibernationOptionsPtrOutput
}

type launchTemplateHibernationOptionsPtrType LaunchTemplateHibernationOptionsArgs

func LaunchTemplateHibernationOptionsPtr(v *LaunchTemplateHibernationOptionsArgs) LaunchTemplateHibernationOptionsPtrInput {
	return (*launchTemplateHibernationOptionsPtrType)(v)
}

func (*launchTemplateHibernationOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateHibernationOptions)(nil)).Elem()
}

func (i *launchTemplateHibernationOptionsPtrType) ToLaunchTemplateHibernationOptionsPtrOutput() LaunchTemplateHibernationOptionsPtrOutput {
	return i.ToLaunchTemplateHibernationOptionsPtrOutputWithContext(context.Background())
}

func (i *launchTemplateHibernationOptionsPtrType) ToLaunchTemplateHibernationOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateHibernationOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateHibernationOptionsPtrOutput)
}

type LaunchTemplateHibernationOptionsOutput struct{ *pulumi.OutputState }

func (LaunchTemplateHibernationOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateHibernationOptions)(nil)).Elem()
}

func (o LaunchTemplateHibernationOptionsOutput) ToLaunchTemplateHibernationOptionsOutput() LaunchTemplateHibernationOptionsOutput {
	return o
}

func (o LaunchTemplateHibernationOptionsOutput) ToLaunchTemplateHibernationOptionsOutputWithContext(ctx context.Context) LaunchTemplateHibernationOptionsOutput {
	return o
}

func (o LaunchTemplateHibernationOptionsOutput) ToLaunchTemplateHibernationOptionsPtrOutput() LaunchTemplateHibernationOptionsPtrOutput {
	return o.ToLaunchTemplateHibernationOptionsPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateHibernationOptionsOutput) ToLaunchTemplateHibernationOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateHibernationOptionsPtrOutput {
	return o.ApplyT(func(v LaunchTemplateHibernationOptions) *LaunchTemplateHibernationOptions {
		return &v
	}).(LaunchTemplateHibernationOptionsPtrOutput)
}

// If set to `true`, the launched EC2 instance will hibernation enabled.
func (o LaunchTemplateHibernationOptionsOutput) Configured() pulumi.BoolOutput {
	return o.ApplyT(func(v LaunchTemplateHibernationOptions) bool { return v.Configured }).(pulumi.BoolOutput)
}

type LaunchTemplateHibernationOptionsPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateHibernationOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateHibernationOptions)(nil)).Elem()
}

func (o LaunchTemplateHibernationOptionsPtrOutput) ToLaunchTemplateHibernationOptionsPtrOutput() LaunchTemplateHibernationOptionsPtrOutput {
	return o
}

func (o LaunchTemplateHibernationOptionsPtrOutput) ToLaunchTemplateHibernationOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateHibernationOptionsPtrOutput {
	return o
}

func (o LaunchTemplateHibernationOptionsPtrOutput) Elem() LaunchTemplateHibernationOptionsOutput {
	return o.ApplyT(func(v *LaunchTemplateHibernationOptions) LaunchTemplateHibernationOptions { return *v }).(LaunchTemplateHibernationOptionsOutput)
}

// If set to `true`, the launched EC2 instance will hibernation enabled.
func (o LaunchTemplateHibernationOptionsPtrOutput) Configured() pulumi.BoolOutput {
	return o.ApplyT(func(v LaunchTemplateHibernationOptions) bool { return v.Configured }).(pulumi.BoolOutput)
}

type LaunchTemplateIamInstanceProfile struct {
	// The Amazon Resource Name (ARN) of the instance profile.
	Arn *string `pulumi:"arn"`
	// The name of the instance profile.
	Name *string `pulumi:"name"`
}

// LaunchTemplateIamInstanceProfileInput is an input type that accepts LaunchTemplateIamInstanceProfileArgs and LaunchTemplateIamInstanceProfileOutput values.
// You can construct a concrete instance of `LaunchTemplateIamInstanceProfileInput` via:
//
// 		 LaunchTemplateIamInstanceProfileArgs{...}
//
type LaunchTemplateIamInstanceProfileInput interface {
	pulumi.Input

	ToLaunchTemplateIamInstanceProfileOutput() LaunchTemplateIamInstanceProfileOutput
	ToLaunchTemplateIamInstanceProfileOutputWithContext(context.Context) LaunchTemplateIamInstanceProfileOutput
}

type LaunchTemplateIamInstanceProfileArgs struct {
	// The Amazon Resource Name (ARN) of the instance profile.
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// The name of the instance profile.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LaunchTemplateIamInstanceProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateIamInstanceProfile)(nil)).Elem()
}

func (i LaunchTemplateIamInstanceProfileArgs) ToLaunchTemplateIamInstanceProfileOutput() LaunchTemplateIamInstanceProfileOutput {
	return i.ToLaunchTemplateIamInstanceProfileOutputWithContext(context.Background())
}

func (i LaunchTemplateIamInstanceProfileArgs) ToLaunchTemplateIamInstanceProfileOutputWithContext(ctx context.Context) LaunchTemplateIamInstanceProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateIamInstanceProfileOutput)
}

func (i LaunchTemplateIamInstanceProfileArgs) ToLaunchTemplateIamInstanceProfilePtrOutput() LaunchTemplateIamInstanceProfilePtrOutput {
	return i.ToLaunchTemplateIamInstanceProfilePtrOutputWithContext(context.Background())
}

func (i LaunchTemplateIamInstanceProfileArgs) ToLaunchTemplateIamInstanceProfilePtrOutputWithContext(ctx context.Context) LaunchTemplateIamInstanceProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateIamInstanceProfileOutput).ToLaunchTemplateIamInstanceProfilePtrOutputWithContext(ctx)
}

// LaunchTemplateIamInstanceProfilePtrInput is an input type that accepts LaunchTemplateIamInstanceProfileArgs, LaunchTemplateIamInstanceProfilePtr and LaunchTemplateIamInstanceProfilePtrOutput values.
// You can construct a concrete instance of `LaunchTemplateIamInstanceProfilePtrInput` via:
//
// 		 LaunchTemplateIamInstanceProfileArgs{...}
//
//  or:
//
// 		 nil
//
type LaunchTemplateIamInstanceProfilePtrInput interface {
	pulumi.Input

	ToLaunchTemplateIamInstanceProfilePtrOutput() LaunchTemplateIamInstanceProfilePtrOutput
	ToLaunchTemplateIamInstanceProfilePtrOutputWithContext(context.Context) LaunchTemplateIamInstanceProfilePtrOutput
}

type launchTemplateIamInstanceProfilePtrType LaunchTemplateIamInstanceProfileArgs

func LaunchTemplateIamInstanceProfilePtr(v *LaunchTemplateIamInstanceProfileArgs) LaunchTemplateIamInstanceProfilePtrInput {
	return (*launchTemplateIamInstanceProfilePtrType)(v)
}

func (*launchTemplateIamInstanceProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateIamInstanceProfile)(nil)).Elem()
}

func (i *launchTemplateIamInstanceProfilePtrType) ToLaunchTemplateIamInstanceProfilePtrOutput() LaunchTemplateIamInstanceProfilePtrOutput {
	return i.ToLaunchTemplateIamInstanceProfilePtrOutputWithContext(context.Background())
}

func (i *launchTemplateIamInstanceProfilePtrType) ToLaunchTemplateIamInstanceProfilePtrOutputWithContext(ctx context.Context) LaunchTemplateIamInstanceProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateIamInstanceProfilePtrOutput)
}

type LaunchTemplateIamInstanceProfileOutput struct{ *pulumi.OutputState }

func (LaunchTemplateIamInstanceProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateIamInstanceProfile)(nil)).Elem()
}

func (o LaunchTemplateIamInstanceProfileOutput) ToLaunchTemplateIamInstanceProfileOutput() LaunchTemplateIamInstanceProfileOutput {
	return o
}

func (o LaunchTemplateIamInstanceProfileOutput) ToLaunchTemplateIamInstanceProfileOutputWithContext(ctx context.Context) LaunchTemplateIamInstanceProfileOutput {
	return o
}

func (o LaunchTemplateIamInstanceProfileOutput) ToLaunchTemplateIamInstanceProfilePtrOutput() LaunchTemplateIamInstanceProfilePtrOutput {
	return o.ToLaunchTemplateIamInstanceProfilePtrOutputWithContext(context.Background())
}

func (o LaunchTemplateIamInstanceProfileOutput) ToLaunchTemplateIamInstanceProfilePtrOutputWithContext(ctx context.Context) LaunchTemplateIamInstanceProfilePtrOutput {
	return o.ApplyT(func(v LaunchTemplateIamInstanceProfile) *LaunchTemplateIamInstanceProfile {
		return &v
	}).(LaunchTemplateIamInstanceProfilePtrOutput)
}

// The Amazon Resource Name (ARN) of the instance profile.
func (o LaunchTemplateIamInstanceProfileOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateIamInstanceProfile) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The name of the instance profile.
func (o LaunchTemplateIamInstanceProfileOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateIamInstanceProfile) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type LaunchTemplateIamInstanceProfilePtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateIamInstanceProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateIamInstanceProfile)(nil)).Elem()
}

func (o LaunchTemplateIamInstanceProfilePtrOutput) ToLaunchTemplateIamInstanceProfilePtrOutput() LaunchTemplateIamInstanceProfilePtrOutput {
	return o
}

func (o LaunchTemplateIamInstanceProfilePtrOutput) ToLaunchTemplateIamInstanceProfilePtrOutputWithContext(ctx context.Context) LaunchTemplateIamInstanceProfilePtrOutput {
	return o
}

func (o LaunchTemplateIamInstanceProfilePtrOutput) Elem() LaunchTemplateIamInstanceProfileOutput {
	return o.ApplyT(func(v *LaunchTemplateIamInstanceProfile) LaunchTemplateIamInstanceProfile { return *v }).(LaunchTemplateIamInstanceProfileOutput)
}

// The Amazon Resource Name (ARN) of the instance profile.
func (o LaunchTemplateIamInstanceProfilePtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateIamInstanceProfile) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The name of the instance profile.
func (o LaunchTemplateIamInstanceProfilePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateIamInstanceProfile) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type LaunchTemplateInstanceMarketOptions struct {
	// The market type. Can be `spot`.
	MarketType *string `pulumi:"marketType"`
	// The options for [Spot Instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html)
	SpotOptions *LaunchTemplateInstanceMarketOptionsSpotOptions `pulumi:"spotOptions"`
}

// LaunchTemplateInstanceMarketOptionsInput is an input type that accepts LaunchTemplateInstanceMarketOptionsArgs and LaunchTemplateInstanceMarketOptionsOutput values.
// You can construct a concrete instance of `LaunchTemplateInstanceMarketOptionsInput` via:
//
// 		 LaunchTemplateInstanceMarketOptionsArgs{...}
//
type LaunchTemplateInstanceMarketOptionsInput interface {
	pulumi.Input

	ToLaunchTemplateInstanceMarketOptionsOutput() LaunchTemplateInstanceMarketOptionsOutput
	ToLaunchTemplateInstanceMarketOptionsOutputWithContext(context.Context) LaunchTemplateInstanceMarketOptionsOutput
}

type LaunchTemplateInstanceMarketOptionsArgs struct {
	// The market type. Can be `spot`.
	MarketType pulumi.StringPtrInput `pulumi:"marketType"`
	// The options for [Spot Instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html)
	SpotOptions LaunchTemplateInstanceMarketOptionsSpotOptionsPtrInput `pulumi:"spotOptions"`
}

func (LaunchTemplateInstanceMarketOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateInstanceMarketOptions)(nil)).Elem()
}

func (i LaunchTemplateInstanceMarketOptionsArgs) ToLaunchTemplateInstanceMarketOptionsOutput() LaunchTemplateInstanceMarketOptionsOutput {
	return i.ToLaunchTemplateInstanceMarketOptionsOutputWithContext(context.Background())
}

func (i LaunchTemplateInstanceMarketOptionsArgs) ToLaunchTemplateInstanceMarketOptionsOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateInstanceMarketOptionsOutput)
}

func (i LaunchTemplateInstanceMarketOptionsArgs) ToLaunchTemplateInstanceMarketOptionsPtrOutput() LaunchTemplateInstanceMarketOptionsPtrOutput {
	return i.ToLaunchTemplateInstanceMarketOptionsPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateInstanceMarketOptionsArgs) ToLaunchTemplateInstanceMarketOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateInstanceMarketOptionsOutput).ToLaunchTemplateInstanceMarketOptionsPtrOutputWithContext(ctx)
}

// LaunchTemplateInstanceMarketOptionsPtrInput is an input type that accepts LaunchTemplateInstanceMarketOptionsArgs, LaunchTemplateInstanceMarketOptionsPtr and LaunchTemplateInstanceMarketOptionsPtrOutput values.
// You can construct a concrete instance of `LaunchTemplateInstanceMarketOptionsPtrInput` via:
//
// 		 LaunchTemplateInstanceMarketOptionsArgs{...}
//
//  or:
//
// 		 nil
//
type LaunchTemplateInstanceMarketOptionsPtrInput interface {
	pulumi.Input

	ToLaunchTemplateInstanceMarketOptionsPtrOutput() LaunchTemplateInstanceMarketOptionsPtrOutput
	ToLaunchTemplateInstanceMarketOptionsPtrOutputWithContext(context.Context) LaunchTemplateInstanceMarketOptionsPtrOutput
}

type launchTemplateInstanceMarketOptionsPtrType LaunchTemplateInstanceMarketOptionsArgs

func LaunchTemplateInstanceMarketOptionsPtr(v *LaunchTemplateInstanceMarketOptionsArgs) LaunchTemplateInstanceMarketOptionsPtrInput {
	return (*launchTemplateInstanceMarketOptionsPtrType)(v)
}

func (*launchTemplateInstanceMarketOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateInstanceMarketOptions)(nil)).Elem()
}

func (i *launchTemplateInstanceMarketOptionsPtrType) ToLaunchTemplateInstanceMarketOptionsPtrOutput() LaunchTemplateInstanceMarketOptionsPtrOutput {
	return i.ToLaunchTemplateInstanceMarketOptionsPtrOutputWithContext(context.Background())
}

func (i *launchTemplateInstanceMarketOptionsPtrType) ToLaunchTemplateInstanceMarketOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateInstanceMarketOptionsPtrOutput)
}

type LaunchTemplateInstanceMarketOptionsOutput struct{ *pulumi.OutputState }

func (LaunchTemplateInstanceMarketOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateInstanceMarketOptions)(nil)).Elem()
}

func (o LaunchTemplateInstanceMarketOptionsOutput) ToLaunchTemplateInstanceMarketOptionsOutput() LaunchTemplateInstanceMarketOptionsOutput {
	return o
}

func (o LaunchTemplateInstanceMarketOptionsOutput) ToLaunchTemplateInstanceMarketOptionsOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsOutput {
	return o
}

func (o LaunchTemplateInstanceMarketOptionsOutput) ToLaunchTemplateInstanceMarketOptionsPtrOutput() LaunchTemplateInstanceMarketOptionsPtrOutput {
	return o.ToLaunchTemplateInstanceMarketOptionsPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateInstanceMarketOptionsOutput) ToLaunchTemplateInstanceMarketOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptions) *LaunchTemplateInstanceMarketOptions {
		return &v
	}).(LaunchTemplateInstanceMarketOptionsPtrOutput)
}

// The market type. Can be `spot`.
func (o LaunchTemplateInstanceMarketOptionsOutput) MarketType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptions) *string { return v.MarketType }).(pulumi.StringPtrOutput)
}

// The options for [Spot Instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html)
func (o LaunchTemplateInstanceMarketOptionsOutput) SpotOptions() LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptions) *LaunchTemplateInstanceMarketOptionsSpotOptions {
		return v.SpotOptions
	}).(LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput)
}

type LaunchTemplateInstanceMarketOptionsPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateInstanceMarketOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateInstanceMarketOptions)(nil)).Elem()
}

func (o LaunchTemplateInstanceMarketOptionsPtrOutput) ToLaunchTemplateInstanceMarketOptionsPtrOutput() LaunchTemplateInstanceMarketOptionsPtrOutput {
	return o
}

func (o LaunchTemplateInstanceMarketOptionsPtrOutput) ToLaunchTemplateInstanceMarketOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsPtrOutput {
	return o
}

func (o LaunchTemplateInstanceMarketOptionsPtrOutput) Elem() LaunchTemplateInstanceMarketOptionsOutput {
	return o.ApplyT(func(v *LaunchTemplateInstanceMarketOptions) LaunchTemplateInstanceMarketOptions { return *v }).(LaunchTemplateInstanceMarketOptionsOutput)
}

// The market type. Can be `spot`.
func (o LaunchTemplateInstanceMarketOptionsPtrOutput) MarketType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptions) *string { return v.MarketType }).(pulumi.StringPtrOutput)
}

// The options for [Spot Instance](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html)
func (o LaunchTemplateInstanceMarketOptionsPtrOutput) SpotOptions() LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptions) *LaunchTemplateInstanceMarketOptionsSpotOptions {
		return v.SpotOptions
	}).(LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput)
}

type LaunchTemplateInstanceMarketOptionsSpotOptions struct {
	// The required duration in minutes. This value must be a multiple of 60.
	BlockDurationMinutes *int `pulumi:"blockDurationMinutes"`
	// The behavior when a Spot Instance is interrupted. Can be `hibernate`,
	// `stop`, or `terminate`. (Default: `terminate`).
	InstanceInterruptionBehavior *string `pulumi:"instanceInterruptionBehavior"`
	// The maximum hourly price you're willing to pay for the Spot Instances.
	MaxPrice *string `pulumi:"maxPrice"`
	// The Spot Instance request type. Can be `one-time`, or `persistent`.
	SpotInstanceType *string `pulumi:"spotInstanceType"`
	// The end date of the request.
	ValidUntil *string `pulumi:"validUntil"`
}

// LaunchTemplateInstanceMarketOptionsSpotOptionsInput is an input type that accepts LaunchTemplateInstanceMarketOptionsSpotOptionsArgs and LaunchTemplateInstanceMarketOptionsSpotOptionsOutput values.
// You can construct a concrete instance of `LaunchTemplateInstanceMarketOptionsSpotOptionsInput` via:
//
// 		 LaunchTemplateInstanceMarketOptionsSpotOptionsArgs{...}
//
type LaunchTemplateInstanceMarketOptionsSpotOptionsInput interface {
	pulumi.Input

	ToLaunchTemplateInstanceMarketOptionsSpotOptionsOutput() LaunchTemplateInstanceMarketOptionsSpotOptionsOutput
	ToLaunchTemplateInstanceMarketOptionsSpotOptionsOutputWithContext(context.Context) LaunchTemplateInstanceMarketOptionsSpotOptionsOutput
}

type LaunchTemplateInstanceMarketOptionsSpotOptionsArgs struct {
	// The required duration in minutes. This value must be a multiple of 60.
	BlockDurationMinutes pulumi.IntPtrInput `pulumi:"blockDurationMinutes"`
	// The behavior when a Spot Instance is interrupted. Can be `hibernate`,
	// `stop`, or `terminate`. (Default: `terminate`).
	InstanceInterruptionBehavior pulumi.StringPtrInput `pulumi:"instanceInterruptionBehavior"`
	// The maximum hourly price you're willing to pay for the Spot Instances.
	MaxPrice pulumi.StringPtrInput `pulumi:"maxPrice"`
	// The Spot Instance request type. Can be `one-time`, or `persistent`.
	SpotInstanceType pulumi.StringPtrInput `pulumi:"spotInstanceType"`
	// The end date of the request.
	ValidUntil pulumi.StringPtrInput `pulumi:"validUntil"`
}

func (LaunchTemplateInstanceMarketOptionsSpotOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateInstanceMarketOptionsSpotOptions)(nil)).Elem()
}

func (i LaunchTemplateInstanceMarketOptionsSpotOptionsArgs) ToLaunchTemplateInstanceMarketOptionsSpotOptionsOutput() LaunchTemplateInstanceMarketOptionsSpotOptionsOutput {
	return i.ToLaunchTemplateInstanceMarketOptionsSpotOptionsOutputWithContext(context.Background())
}

func (i LaunchTemplateInstanceMarketOptionsSpotOptionsArgs) ToLaunchTemplateInstanceMarketOptionsSpotOptionsOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsSpotOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateInstanceMarketOptionsSpotOptionsOutput)
}

func (i LaunchTemplateInstanceMarketOptionsSpotOptionsArgs) ToLaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput() LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput {
	return i.ToLaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateInstanceMarketOptionsSpotOptionsArgs) ToLaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateInstanceMarketOptionsSpotOptionsOutput).ToLaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutputWithContext(ctx)
}

// LaunchTemplateInstanceMarketOptionsSpotOptionsPtrInput is an input type that accepts LaunchTemplateInstanceMarketOptionsSpotOptionsArgs, LaunchTemplateInstanceMarketOptionsSpotOptionsPtr and LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput values.
// You can construct a concrete instance of `LaunchTemplateInstanceMarketOptionsSpotOptionsPtrInput` via:
//
// 		 LaunchTemplateInstanceMarketOptionsSpotOptionsArgs{...}
//
//  or:
//
// 		 nil
//
type LaunchTemplateInstanceMarketOptionsSpotOptionsPtrInput interface {
	pulumi.Input

	ToLaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput() LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput
	ToLaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutputWithContext(context.Context) LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput
}

type launchTemplateInstanceMarketOptionsSpotOptionsPtrType LaunchTemplateInstanceMarketOptionsSpotOptionsArgs

func LaunchTemplateInstanceMarketOptionsSpotOptionsPtr(v *LaunchTemplateInstanceMarketOptionsSpotOptionsArgs) LaunchTemplateInstanceMarketOptionsSpotOptionsPtrInput {
	return (*launchTemplateInstanceMarketOptionsSpotOptionsPtrType)(v)
}

func (*launchTemplateInstanceMarketOptionsSpotOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateInstanceMarketOptionsSpotOptions)(nil)).Elem()
}

func (i *launchTemplateInstanceMarketOptionsSpotOptionsPtrType) ToLaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput() LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput {
	return i.ToLaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutputWithContext(context.Background())
}

func (i *launchTemplateInstanceMarketOptionsSpotOptionsPtrType) ToLaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput)
}

type LaunchTemplateInstanceMarketOptionsSpotOptionsOutput struct{ *pulumi.OutputState }

func (LaunchTemplateInstanceMarketOptionsSpotOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateInstanceMarketOptionsSpotOptions)(nil)).Elem()
}

func (o LaunchTemplateInstanceMarketOptionsSpotOptionsOutput) ToLaunchTemplateInstanceMarketOptionsSpotOptionsOutput() LaunchTemplateInstanceMarketOptionsSpotOptionsOutput {
	return o
}

func (o LaunchTemplateInstanceMarketOptionsSpotOptionsOutput) ToLaunchTemplateInstanceMarketOptionsSpotOptionsOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsSpotOptionsOutput {
	return o
}

func (o LaunchTemplateInstanceMarketOptionsSpotOptionsOutput) ToLaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput() LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput {
	return o.ToLaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateInstanceMarketOptionsSpotOptionsOutput) ToLaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsSpotOptions) *LaunchTemplateInstanceMarketOptionsSpotOptions {
		return &v
	}).(LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput)
}

// The required duration in minutes. This value must be a multiple of 60.
func (o LaunchTemplateInstanceMarketOptionsSpotOptionsOutput) BlockDurationMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsSpotOptions) *int { return v.BlockDurationMinutes }).(pulumi.IntPtrOutput)
}

// The behavior when a Spot Instance is interrupted. Can be `hibernate`,
// `stop`, or `terminate`. (Default: `terminate`).
func (o LaunchTemplateInstanceMarketOptionsSpotOptionsOutput) InstanceInterruptionBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsSpotOptions) *string { return v.InstanceInterruptionBehavior }).(pulumi.StringPtrOutput)
}

// The maximum hourly price you're willing to pay for the Spot Instances.
func (o LaunchTemplateInstanceMarketOptionsSpotOptionsOutput) MaxPrice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsSpotOptions) *string { return v.MaxPrice }).(pulumi.StringPtrOutput)
}

// The Spot Instance request type. Can be `one-time`, or `persistent`.
func (o LaunchTemplateInstanceMarketOptionsSpotOptionsOutput) SpotInstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsSpotOptions) *string { return v.SpotInstanceType }).(pulumi.StringPtrOutput)
}

// The end date of the request.
func (o LaunchTemplateInstanceMarketOptionsSpotOptionsOutput) ValidUntil() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsSpotOptions) *string { return v.ValidUntil }).(pulumi.StringPtrOutput)
}

type LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateInstanceMarketOptionsSpotOptions)(nil)).Elem()
}

func (o LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput) ToLaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput() LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput {
	return o
}

func (o LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput) ToLaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput {
	return o
}

func (o LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput) Elem() LaunchTemplateInstanceMarketOptionsSpotOptionsOutput {
	return o.ApplyT(func(v *LaunchTemplateInstanceMarketOptionsSpotOptions) LaunchTemplateInstanceMarketOptionsSpotOptions {
		return *v
	}).(LaunchTemplateInstanceMarketOptionsSpotOptionsOutput)
}

// The required duration in minutes. This value must be a multiple of 60.
func (o LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput) BlockDurationMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsSpotOptions) *int { return v.BlockDurationMinutes }).(pulumi.IntPtrOutput)
}

// The behavior when a Spot Instance is interrupted. Can be `hibernate`,
// `stop`, or `terminate`. (Default: `terminate`).
func (o LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput) InstanceInterruptionBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsSpotOptions) *string { return v.InstanceInterruptionBehavior }).(pulumi.StringPtrOutput)
}

// The maximum hourly price you're willing to pay for the Spot Instances.
func (o LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput) MaxPrice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsSpotOptions) *string { return v.MaxPrice }).(pulumi.StringPtrOutput)
}

// The Spot Instance request type. Can be `one-time`, or `persistent`.
func (o LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput) SpotInstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsSpotOptions) *string { return v.SpotInstanceType }).(pulumi.StringPtrOutput)
}

// The end date of the request.
func (o LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput) ValidUntil() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateInstanceMarketOptionsSpotOptions) *string { return v.ValidUntil }).(pulumi.StringPtrOutput)
}

type LaunchTemplateLicenseSpecification struct {
	// ARN of the license configuration.
	LicenseConfigurationArn string `pulumi:"licenseConfigurationArn"`
}

// LaunchTemplateLicenseSpecificationInput is an input type that accepts LaunchTemplateLicenseSpecificationArgs and LaunchTemplateLicenseSpecificationOutput values.
// You can construct a concrete instance of `LaunchTemplateLicenseSpecificationInput` via:
//
// 		 LaunchTemplateLicenseSpecificationArgs{...}
//
type LaunchTemplateLicenseSpecificationInput interface {
	pulumi.Input

	ToLaunchTemplateLicenseSpecificationOutput() LaunchTemplateLicenseSpecificationOutput
	ToLaunchTemplateLicenseSpecificationOutputWithContext(context.Context) LaunchTemplateLicenseSpecificationOutput
}

type LaunchTemplateLicenseSpecificationArgs struct {
	// ARN of the license configuration.
	LicenseConfigurationArn pulumi.StringInput `pulumi:"licenseConfigurationArn"`
}

func (LaunchTemplateLicenseSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateLicenseSpecification)(nil)).Elem()
}

func (i LaunchTemplateLicenseSpecificationArgs) ToLaunchTemplateLicenseSpecificationOutput() LaunchTemplateLicenseSpecificationOutput {
	return i.ToLaunchTemplateLicenseSpecificationOutputWithContext(context.Background())
}

func (i LaunchTemplateLicenseSpecificationArgs) ToLaunchTemplateLicenseSpecificationOutputWithContext(ctx context.Context) LaunchTemplateLicenseSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateLicenseSpecificationOutput)
}

// LaunchTemplateLicenseSpecificationArrayInput is an input type that accepts LaunchTemplateLicenseSpecificationArray and LaunchTemplateLicenseSpecificationArrayOutput values.
// You can construct a concrete instance of `LaunchTemplateLicenseSpecificationArrayInput` via:
//
// 		 LaunchTemplateLicenseSpecificationArray{ LaunchTemplateLicenseSpecificationArgs{...} }
//
type LaunchTemplateLicenseSpecificationArrayInput interface {
	pulumi.Input

	ToLaunchTemplateLicenseSpecificationArrayOutput() LaunchTemplateLicenseSpecificationArrayOutput
	ToLaunchTemplateLicenseSpecificationArrayOutputWithContext(context.Context) LaunchTemplateLicenseSpecificationArrayOutput
}

type LaunchTemplateLicenseSpecificationArray []LaunchTemplateLicenseSpecificationInput

func (LaunchTemplateLicenseSpecificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateLicenseSpecification)(nil)).Elem()
}

func (i LaunchTemplateLicenseSpecificationArray) ToLaunchTemplateLicenseSpecificationArrayOutput() LaunchTemplateLicenseSpecificationArrayOutput {
	return i.ToLaunchTemplateLicenseSpecificationArrayOutputWithContext(context.Background())
}

func (i LaunchTemplateLicenseSpecificationArray) ToLaunchTemplateLicenseSpecificationArrayOutputWithContext(ctx context.Context) LaunchTemplateLicenseSpecificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateLicenseSpecificationArrayOutput)
}

type LaunchTemplateLicenseSpecificationOutput struct{ *pulumi.OutputState }

func (LaunchTemplateLicenseSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateLicenseSpecification)(nil)).Elem()
}

func (o LaunchTemplateLicenseSpecificationOutput) ToLaunchTemplateLicenseSpecificationOutput() LaunchTemplateLicenseSpecificationOutput {
	return o
}

func (o LaunchTemplateLicenseSpecificationOutput) ToLaunchTemplateLicenseSpecificationOutputWithContext(ctx context.Context) LaunchTemplateLicenseSpecificationOutput {
	return o
}

// ARN of the license configuration.
func (o LaunchTemplateLicenseSpecificationOutput) LicenseConfigurationArn() pulumi.StringOutput {
	return o.ApplyT(func(v LaunchTemplateLicenseSpecification) string { return v.LicenseConfigurationArn }).(pulumi.StringOutput)
}

type LaunchTemplateLicenseSpecificationArrayOutput struct{ *pulumi.OutputState }

func (LaunchTemplateLicenseSpecificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateLicenseSpecification)(nil)).Elem()
}

func (o LaunchTemplateLicenseSpecificationArrayOutput) ToLaunchTemplateLicenseSpecificationArrayOutput() LaunchTemplateLicenseSpecificationArrayOutput {
	return o
}

func (o LaunchTemplateLicenseSpecificationArrayOutput) ToLaunchTemplateLicenseSpecificationArrayOutputWithContext(ctx context.Context) LaunchTemplateLicenseSpecificationArrayOutput {
	return o
}

func (o LaunchTemplateLicenseSpecificationArrayOutput) Index(i pulumi.IntInput) LaunchTemplateLicenseSpecificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LaunchTemplateLicenseSpecification {
		return vs[0].([]LaunchTemplateLicenseSpecification)[vs[1].(int)]
	}).(LaunchTemplateLicenseSpecificationOutput)
}

type LaunchTemplateMetadataOptions struct {
	// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
	HttpEndpoint *string `pulumi:"httpEndpoint"`
	// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
	HttpPutResponseHopLimit *int `pulumi:"httpPutResponseHopLimit"`
	// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
	HttpTokens *string `pulumi:"httpTokens"`
}

// LaunchTemplateMetadataOptionsInput is an input type that accepts LaunchTemplateMetadataOptionsArgs and LaunchTemplateMetadataOptionsOutput values.
// You can construct a concrete instance of `LaunchTemplateMetadataOptionsInput` via:
//
// 		 LaunchTemplateMetadataOptionsArgs{...}
//
type LaunchTemplateMetadataOptionsInput interface {
	pulumi.Input

	ToLaunchTemplateMetadataOptionsOutput() LaunchTemplateMetadataOptionsOutput
	ToLaunchTemplateMetadataOptionsOutputWithContext(context.Context) LaunchTemplateMetadataOptionsOutput
}

type LaunchTemplateMetadataOptionsArgs struct {
	// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
	HttpEndpoint pulumi.StringPtrInput `pulumi:"httpEndpoint"`
	// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
	HttpPutResponseHopLimit pulumi.IntPtrInput `pulumi:"httpPutResponseHopLimit"`
	// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
	HttpTokens pulumi.StringPtrInput `pulumi:"httpTokens"`
}

func (LaunchTemplateMetadataOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateMetadataOptions)(nil)).Elem()
}

func (i LaunchTemplateMetadataOptionsArgs) ToLaunchTemplateMetadataOptionsOutput() LaunchTemplateMetadataOptionsOutput {
	return i.ToLaunchTemplateMetadataOptionsOutputWithContext(context.Background())
}

func (i LaunchTemplateMetadataOptionsArgs) ToLaunchTemplateMetadataOptionsOutputWithContext(ctx context.Context) LaunchTemplateMetadataOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateMetadataOptionsOutput)
}

func (i LaunchTemplateMetadataOptionsArgs) ToLaunchTemplateMetadataOptionsPtrOutput() LaunchTemplateMetadataOptionsPtrOutput {
	return i.ToLaunchTemplateMetadataOptionsPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateMetadataOptionsArgs) ToLaunchTemplateMetadataOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateMetadataOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateMetadataOptionsOutput).ToLaunchTemplateMetadataOptionsPtrOutputWithContext(ctx)
}

// LaunchTemplateMetadataOptionsPtrInput is an input type that accepts LaunchTemplateMetadataOptionsArgs, LaunchTemplateMetadataOptionsPtr and LaunchTemplateMetadataOptionsPtrOutput values.
// You can construct a concrete instance of `LaunchTemplateMetadataOptionsPtrInput` via:
//
// 		 LaunchTemplateMetadataOptionsArgs{...}
//
//  or:
//
// 		 nil
//
type LaunchTemplateMetadataOptionsPtrInput interface {
	pulumi.Input

	ToLaunchTemplateMetadataOptionsPtrOutput() LaunchTemplateMetadataOptionsPtrOutput
	ToLaunchTemplateMetadataOptionsPtrOutputWithContext(context.Context) LaunchTemplateMetadataOptionsPtrOutput
}

type launchTemplateMetadataOptionsPtrType LaunchTemplateMetadataOptionsArgs

func LaunchTemplateMetadataOptionsPtr(v *LaunchTemplateMetadataOptionsArgs) LaunchTemplateMetadataOptionsPtrInput {
	return (*launchTemplateMetadataOptionsPtrType)(v)
}

func (*launchTemplateMetadataOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateMetadataOptions)(nil)).Elem()
}

func (i *launchTemplateMetadataOptionsPtrType) ToLaunchTemplateMetadataOptionsPtrOutput() LaunchTemplateMetadataOptionsPtrOutput {
	return i.ToLaunchTemplateMetadataOptionsPtrOutputWithContext(context.Background())
}

func (i *launchTemplateMetadataOptionsPtrType) ToLaunchTemplateMetadataOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateMetadataOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateMetadataOptionsPtrOutput)
}

type LaunchTemplateMetadataOptionsOutput struct{ *pulumi.OutputState }

func (LaunchTemplateMetadataOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateMetadataOptions)(nil)).Elem()
}

func (o LaunchTemplateMetadataOptionsOutput) ToLaunchTemplateMetadataOptionsOutput() LaunchTemplateMetadataOptionsOutput {
	return o
}

func (o LaunchTemplateMetadataOptionsOutput) ToLaunchTemplateMetadataOptionsOutputWithContext(ctx context.Context) LaunchTemplateMetadataOptionsOutput {
	return o
}

func (o LaunchTemplateMetadataOptionsOutput) ToLaunchTemplateMetadataOptionsPtrOutput() LaunchTemplateMetadataOptionsPtrOutput {
	return o.ToLaunchTemplateMetadataOptionsPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateMetadataOptionsOutput) ToLaunchTemplateMetadataOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateMetadataOptionsPtrOutput {
	return o.ApplyT(func(v LaunchTemplateMetadataOptions) *LaunchTemplateMetadataOptions {
		return &v
	}).(LaunchTemplateMetadataOptionsPtrOutput)
}

// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
func (o LaunchTemplateMetadataOptionsOutput) HttpEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateMetadataOptions) *string { return v.HttpEndpoint }).(pulumi.StringPtrOutput)
}

// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
func (o LaunchTemplateMetadataOptionsOutput) HttpPutResponseHopLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateMetadataOptions) *int { return v.HttpPutResponseHopLimit }).(pulumi.IntPtrOutput)
}

// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
func (o LaunchTemplateMetadataOptionsOutput) HttpTokens() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateMetadataOptions) *string { return v.HttpTokens }).(pulumi.StringPtrOutput)
}

type LaunchTemplateMetadataOptionsPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateMetadataOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateMetadataOptions)(nil)).Elem()
}

func (o LaunchTemplateMetadataOptionsPtrOutput) ToLaunchTemplateMetadataOptionsPtrOutput() LaunchTemplateMetadataOptionsPtrOutput {
	return o
}

func (o LaunchTemplateMetadataOptionsPtrOutput) ToLaunchTemplateMetadataOptionsPtrOutputWithContext(ctx context.Context) LaunchTemplateMetadataOptionsPtrOutput {
	return o
}

func (o LaunchTemplateMetadataOptionsPtrOutput) Elem() LaunchTemplateMetadataOptionsOutput {
	return o.ApplyT(func(v *LaunchTemplateMetadataOptions) LaunchTemplateMetadataOptions { return *v }).(LaunchTemplateMetadataOptionsOutput)
}

// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
func (o LaunchTemplateMetadataOptionsPtrOutput) HttpEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateMetadataOptions) *string { return v.HttpEndpoint }).(pulumi.StringPtrOutput)
}

// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
func (o LaunchTemplateMetadataOptionsPtrOutput) HttpPutResponseHopLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateMetadataOptions) *int { return v.HttpPutResponseHopLimit }).(pulumi.IntPtrOutput)
}

// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
func (o LaunchTemplateMetadataOptionsPtrOutput) HttpTokens() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateMetadataOptions) *string { return v.HttpTokens }).(pulumi.StringPtrOutput)
}

type LaunchTemplateMonitoring struct {
	// If `true`, the launched EC2 instance will have detailed monitoring enabled.
	Enabled *bool `pulumi:"enabled"`
}

// LaunchTemplateMonitoringInput is an input type that accepts LaunchTemplateMonitoringArgs and LaunchTemplateMonitoringOutput values.
// You can construct a concrete instance of `LaunchTemplateMonitoringInput` via:
//
// 		 LaunchTemplateMonitoringArgs{...}
//
type LaunchTemplateMonitoringInput interface {
	pulumi.Input

	ToLaunchTemplateMonitoringOutput() LaunchTemplateMonitoringOutput
	ToLaunchTemplateMonitoringOutputWithContext(context.Context) LaunchTemplateMonitoringOutput
}

type LaunchTemplateMonitoringArgs struct {
	// If `true`, the launched EC2 instance will have detailed monitoring enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (LaunchTemplateMonitoringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateMonitoring)(nil)).Elem()
}

func (i LaunchTemplateMonitoringArgs) ToLaunchTemplateMonitoringOutput() LaunchTemplateMonitoringOutput {
	return i.ToLaunchTemplateMonitoringOutputWithContext(context.Background())
}

func (i LaunchTemplateMonitoringArgs) ToLaunchTemplateMonitoringOutputWithContext(ctx context.Context) LaunchTemplateMonitoringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateMonitoringOutput)
}

func (i LaunchTemplateMonitoringArgs) ToLaunchTemplateMonitoringPtrOutput() LaunchTemplateMonitoringPtrOutput {
	return i.ToLaunchTemplateMonitoringPtrOutputWithContext(context.Background())
}

func (i LaunchTemplateMonitoringArgs) ToLaunchTemplateMonitoringPtrOutputWithContext(ctx context.Context) LaunchTemplateMonitoringPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateMonitoringOutput).ToLaunchTemplateMonitoringPtrOutputWithContext(ctx)
}

// LaunchTemplateMonitoringPtrInput is an input type that accepts LaunchTemplateMonitoringArgs, LaunchTemplateMonitoringPtr and LaunchTemplateMonitoringPtrOutput values.
// You can construct a concrete instance of `LaunchTemplateMonitoringPtrInput` via:
//
// 		 LaunchTemplateMonitoringArgs{...}
//
//  or:
//
// 		 nil
//
type LaunchTemplateMonitoringPtrInput interface {
	pulumi.Input

	ToLaunchTemplateMonitoringPtrOutput() LaunchTemplateMonitoringPtrOutput
	ToLaunchTemplateMonitoringPtrOutputWithContext(context.Context) LaunchTemplateMonitoringPtrOutput
}

type launchTemplateMonitoringPtrType LaunchTemplateMonitoringArgs

func LaunchTemplateMonitoringPtr(v *LaunchTemplateMonitoringArgs) LaunchTemplateMonitoringPtrInput {
	return (*launchTemplateMonitoringPtrType)(v)
}

func (*launchTemplateMonitoringPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateMonitoring)(nil)).Elem()
}

func (i *launchTemplateMonitoringPtrType) ToLaunchTemplateMonitoringPtrOutput() LaunchTemplateMonitoringPtrOutput {
	return i.ToLaunchTemplateMonitoringPtrOutputWithContext(context.Background())
}

func (i *launchTemplateMonitoringPtrType) ToLaunchTemplateMonitoringPtrOutputWithContext(ctx context.Context) LaunchTemplateMonitoringPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateMonitoringPtrOutput)
}

type LaunchTemplateMonitoringOutput struct{ *pulumi.OutputState }

func (LaunchTemplateMonitoringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateMonitoring)(nil)).Elem()
}

func (o LaunchTemplateMonitoringOutput) ToLaunchTemplateMonitoringOutput() LaunchTemplateMonitoringOutput {
	return o
}

func (o LaunchTemplateMonitoringOutput) ToLaunchTemplateMonitoringOutputWithContext(ctx context.Context) LaunchTemplateMonitoringOutput {
	return o
}

func (o LaunchTemplateMonitoringOutput) ToLaunchTemplateMonitoringPtrOutput() LaunchTemplateMonitoringPtrOutput {
	return o.ToLaunchTemplateMonitoringPtrOutputWithContext(context.Background())
}

func (o LaunchTemplateMonitoringOutput) ToLaunchTemplateMonitoringPtrOutputWithContext(ctx context.Context) LaunchTemplateMonitoringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateMonitoring) *LaunchTemplateMonitoring {
		return &v
	}).(LaunchTemplateMonitoringPtrOutput)
}

// If `true`, the launched EC2 instance will have detailed monitoring enabled.
func (o LaunchTemplateMonitoringOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LaunchTemplateMonitoring) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type LaunchTemplateMonitoringPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplateMonitoringPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplateMonitoring)(nil)).Elem()
}

func (o LaunchTemplateMonitoringPtrOutput) ToLaunchTemplateMonitoringPtrOutput() LaunchTemplateMonitoringPtrOutput {
	return o
}

func (o LaunchTemplateMonitoringPtrOutput) ToLaunchTemplateMonitoringPtrOutputWithContext(ctx context.Context) LaunchTemplateMonitoringPtrOutput {
	return o
}

func (o LaunchTemplateMonitoringPtrOutput) Elem() LaunchTemplateMonitoringOutput {
	return o.ApplyT(func(v *LaunchTemplateMonitoring) LaunchTemplateMonitoring { return *v }).(LaunchTemplateMonitoringOutput)
}

// If `true`, the launched EC2 instance will have detailed monitoring enabled.
func (o LaunchTemplateMonitoringPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LaunchTemplateMonitoring) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type LaunchTemplateNetworkInterface struct {
	// Associate a public ip address with the network interface.  Boolean value.
	AssociatePublicIpAddress *string `pulumi:"associatePublicIpAddress"`
	// Whether the network interface should be destroyed on instance termination.
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// Description of the network interface.
	Description *string `pulumi:"description"`
	// The integer index of the network interface attachment.
	DeviceIndex *int `pulumi:"deviceIndex"`
	// The number of secondary private IPv4 addresses to assign to a network interface. Conflicts with `ipv4Addresses`
	Ipv4AddressCount *int `pulumi:"ipv4AddressCount"`
	// One or more private IPv4 addresses to associate. Conflicts with `ipv4AddressCount`
	Ipv4Addresses []string `pulumi:"ipv4Addresses"`
	// The number of IPv6 addresses to assign to a network interface. Conflicts with `ipv6Addresses`
	Ipv6AddressCount *int `pulumi:"ipv6AddressCount"`
	// One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. Conflicts with `ipv6AddressCount`
	Ipv6Addresses []string `pulumi:"ipv6Addresses"`
	// The ID of the network interface to attach.
	NetworkInterfaceId *string `pulumi:"networkInterfaceId"`
	// The primary private IPv4 address.
	PrivateIpAddress *string `pulumi:"privateIpAddress"`
	// A list of security group IDs to associate.
	SecurityGroups []string `pulumi:"securityGroups"`
	// The VPC Subnet ID to associate.
	SubnetId *string `pulumi:"subnetId"`
}

// LaunchTemplateNetworkInterfaceInput is an input type that accepts LaunchTemplateNetworkInterfaceArgs and LaunchTemplateNetworkInterfaceOutput values.
// You can construct a concrete instance of `LaunchTemplateNetworkInterfaceInput` via:
//
// 		 LaunchTemplateNetworkInterfaceArgs{...}
//
type LaunchTemplateNetworkInterfaceInput interface {
	pulumi.Input

	ToLaunchTemplateNetworkInterfaceOutput() LaunchTemplateNetworkInterfaceOutput
	ToLaunchTemplateNetworkInterfaceOutputWithContext(context.Context) LaunchTemplateNetworkInterfaceOutput
}

type LaunchTemplateNetworkInterfaceArgs struct {
	// Associate a public ip address with the network interface.  Boolean value.
	AssociatePublicIpAddress pulumi.StringPtrInput `pulumi:"associatePublicIpAddress"`
	// Whether the network interface should be destroyed on instance termination.
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// Description of the network interface.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The integer index of the network interface attachment.
	DeviceIndex pulumi.IntPtrInput `pulumi:"deviceIndex"`
	// The number of secondary private IPv4 addresses to assign to a network interface. Conflicts with `ipv4Addresses`
	Ipv4AddressCount pulumi.IntPtrInput `pulumi:"ipv4AddressCount"`
	// One or more private IPv4 addresses to associate. Conflicts with `ipv4AddressCount`
	Ipv4Addresses pulumi.StringArrayInput `pulumi:"ipv4Addresses"`
	// The number of IPv6 addresses to assign to a network interface. Conflicts with `ipv6Addresses`
	Ipv6AddressCount pulumi.IntPtrInput `pulumi:"ipv6AddressCount"`
	// One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. Conflicts with `ipv6AddressCount`
	Ipv6Addresses pulumi.StringArrayInput `pulumi:"ipv6Addresses"`
	// The ID of the network interface to attach.
	NetworkInterfaceId pulumi.StringPtrInput `pulumi:"networkInterfaceId"`
	// The primary private IPv4 address.
	PrivateIpAddress pulumi.StringPtrInput `pulumi:"privateIpAddress"`
	// A list of security group IDs to associate.
	SecurityGroups pulumi.StringArrayInput `pulumi:"securityGroups"`
	// The VPC Subnet ID to associate.
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
}

func (LaunchTemplateNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateNetworkInterface)(nil)).Elem()
}

func (i LaunchTemplateNetworkInterfaceArgs) ToLaunchTemplateNetworkInterfaceOutput() LaunchTemplateNetworkInterfaceOutput {
	return i.ToLaunchTemplateNetworkInterfaceOutputWithContext(context.Background())
}

func (i LaunchTemplateNetworkInterfaceArgs) ToLaunchTemplateNetworkInterfaceOutputWithContext(ctx context.Context) LaunchTemplateNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateNetworkInterfaceOutput)
}

// LaunchTemplateNetworkInterfaceArrayInput is an input type that accepts LaunchTemplateNetworkInterfaceArray and LaunchTemplateNetworkInterfaceArrayOutput values.
// You can construct a concrete instance of `LaunchTemplateNetworkInterfaceArrayInput` via:
//
// 		 LaunchTemplateNetworkInterfaceArray{ LaunchTemplateNetworkInterfaceArgs{...} }
//
type LaunchTemplateNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToLaunchTemplateNetworkInterfaceArrayOutput() LaunchTemplateNetworkInterfaceArrayOutput
	ToLaunchTemplateNetworkInterfaceArrayOutputWithContext(context.Context) LaunchTemplateNetworkInterfaceArrayOutput
}

type LaunchTemplateNetworkInterfaceArray []LaunchTemplateNetworkInterfaceInput

func (LaunchTemplateNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateNetworkInterface)(nil)).Elem()
}

func (i LaunchTemplateNetworkInterfaceArray) ToLaunchTemplateNetworkInterfaceArrayOutput() LaunchTemplateNetworkInterfaceArrayOutput {
	return i.ToLaunchTemplateNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i LaunchTemplateNetworkInterfaceArray) ToLaunchTemplateNetworkInterfaceArrayOutputWithContext(ctx context.Context) LaunchTemplateNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateNetworkInterfaceArrayOutput)
}

type LaunchTemplateNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (LaunchTemplateNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateNetworkInterface)(nil)).Elem()
}

func (o LaunchTemplateNetworkInterfaceOutput) ToLaunchTemplateNetworkInterfaceOutput() LaunchTemplateNetworkInterfaceOutput {
	return o
}

func (o LaunchTemplateNetworkInterfaceOutput) ToLaunchTemplateNetworkInterfaceOutputWithContext(ctx context.Context) LaunchTemplateNetworkInterfaceOutput {
	return o
}

// Associate a public ip address with the network interface.  Boolean value.
func (o LaunchTemplateNetworkInterfaceOutput) AssociatePublicIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterface) *string { return v.AssociatePublicIpAddress }).(pulumi.StringPtrOutput)
}

// Whether the network interface should be destroyed on instance termination.
func (o LaunchTemplateNetworkInterfaceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterface) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// Description of the network interface.
func (o LaunchTemplateNetworkInterfaceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterface) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The integer index of the network interface attachment.
func (o LaunchTemplateNetworkInterfaceOutput) DeviceIndex() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterface) *int { return v.DeviceIndex }).(pulumi.IntPtrOutput)
}

// The number of secondary private IPv4 addresses to assign to a network interface. Conflicts with `ipv4Addresses`
func (o LaunchTemplateNetworkInterfaceOutput) Ipv4AddressCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterface) *int { return v.Ipv4AddressCount }).(pulumi.IntPtrOutput)
}

// One or more private IPv4 addresses to associate. Conflicts with `ipv4AddressCount`
func (o LaunchTemplateNetworkInterfaceOutput) Ipv4Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterface) []string { return v.Ipv4Addresses }).(pulumi.StringArrayOutput)
}

// The number of IPv6 addresses to assign to a network interface. Conflicts with `ipv6Addresses`
func (o LaunchTemplateNetworkInterfaceOutput) Ipv6AddressCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterface) *int { return v.Ipv6AddressCount }).(pulumi.IntPtrOutput)
}

// One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. Conflicts with `ipv6AddressCount`
func (o LaunchTemplateNetworkInterfaceOutput) Ipv6Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterface) []string { return v.Ipv6Addresses }).(pulumi.StringArrayOutput)
}

// The ID of the network interface to attach.
func (o LaunchTemplateNetworkInterfaceOutput) NetworkInterfaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterface) *string { return v.NetworkInterfaceId }).(pulumi.StringPtrOutput)
}

// The primary private IPv4 address.
func (o LaunchTemplateNetworkInterfaceOutput) PrivateIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterface) *string { return v.PrivateIpAddress }).(pulumi.StringPtrOutput)
}

// A list of security group IDs to associate.
func (o LaunchTemplateNetworkInterfaceOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterface) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

// The VPC Subnet ID to associate.
func (o LaunchTemplateNetworkInterfaceOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateNetworkInterface) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

type LaunchTemplateNetworkInterfaceArrayOutput struct{ *pulumi.OutputState }

func (LaunchTemplateNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateNetworkInterface)(nil)).Elem()
}

func (o LaunchTemplateNetworkInterfaceArrayOutput) ToLaunchTemplateNetworkInterfaceArrayOutput() LaunchTemplateNetworkInterfaceArrayOutput {
	return o
}

func (o LaunchTemplateNetworkInterfaceArrayOutput) ToLaunchTemplateNetworkInterfaceArrayOutputWithContext(ctx context.Context) LaunchTemplateNetworkInterfaceArrayOutput {
	return o
}

func (o LaunchTemplateNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) LaunchTemplateNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LaunchTemplateNetworkInterface {
		return vs[0].([]LaunchTemplateNetworkInterface)[vs[1].(int)]
	}).(LaunchTemplateNetworkInterfaceOutput)
}

type LaunchTemplatePlacement struct {
	// The affinity setting for an instance on a Dedicated Host.
	Affinity *string `pulumi:"affinity"`
	// The Availability Zone for the instance.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// The name of the placement group for the instance.
	GroupName *string `pulumi:"groupName"`
	// The ID of the Dedicated Host for the instance.
	HostId *string `pulumi:"hostId"`
	// Reserved for future use.
	SpreadDomain *string `pulumi:"spreadDomain"`
	// The tenancy of the instance (if the instance is running in a VPC). Can be `default`, `dedicated`, or `host`.
	Tenancy *string `pulumi:"tenancy"`
}

// LaunchTemplatePlacementInput is an input type that accepts LaunchTemplatePlacementArgs and LaunchTemplatePlacementOutput values.
// You can construct a concrete instance of `LaunchTemplatePlacementInput` via:
//
// 		 LaunchTemplatePlacementArgs{...}
//
type LaunchTemplatePlacementInput interface {
	pulumi.Input

	ToLaunchTemplatePlacementOutput() LaunchTemplatePlacementOutput
	ToLaunchTemplatePlacementOutputWithContext(context.Context) LaunchTemplatePlacementOutput
}

type LaunchTemplatePlacementArgs struct {
	// The affinity setting for an instance on a Dedicated Host.
	Affinity pulumi.StringPtrInput `pulumi:"affinity"`
	// The Availability Zone for the instance.
	AvailabilityZone pulumi.StringPtrInput `pulumi:"availabilityZone"`
	// The name of the placement group for the instance.
	GroupName pulumi.StringPtrInput `pulumi:"groupName"`
	// The ID of the Dedicated Host for the instance.
	HostId pulumi.StringPtrInput `pulumi:"hostId"`
	// Reserved for future use.
	SpreadDomain pulumi.StringPtrInput `pulumi:"spreadDomain"`
	// The tenancy of the instance (if the instance is running in a VPC). Can be `default`, `dedicated`, or `host`.
	Tenancy pulumi.StringPtrInput `pulumi:"tenancy"`
}

func (LaunchTemplatePlacementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplatePlacement)(nil)).Elem()
}

func (i LaunchTemplatePlacementArgs) ToLaunchTemplatePlacementOutput() LaunchTemplatePlacementOutput {
	return i.ToLaunchTemplatePlacementOutputWithContext(context.Background())
}

func (i LaunchTemplatePlacementArgs) ToLaunchTemplatePlacementOutputWithContext(ctx context.Context) LaunchTemplatePlacementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplatePlacementOutput)
}

func (i LaunchTemplatePlacementArgs) ToLaunchTemplatePlacementPtrOutput() LaunchTemplatePlacementPtrOutput {
	return i.ToLaunchTemplatePlacementPtrOutputWithContext(context.Background())
}

func (i LaunchTemplatePlacementArgs) ToLaunchTemplatePlacementPtrOutputWithContext(ctx context.Context) LaunchTemplatePlacementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplatePlacementOutput).ToLaunchTemplatePlacementPtrOutputWithContext(ctx)
}

// LaunchTemplatePlacementPtrInput is an input type that accepts LaunchTemplatePlacementArgs, LaunchTemplatePlacementPtr and LaunchTemplatePlacementPtrOutput values.
// You can construct a concrete instance of `LaunchTemplatePlacementPtrInput` via:
//
// 		 LaunchTemplatePlacementArgs{...}
//
//  or:
//
// 		 nil
//
type LaunchTemplatePlacementPtrInput interface {
	pulumi.Input

	ToLaunchTemplatePlacementPtrOutput() LaunchTemplatePlacementPtrOutput
	ToLaunchTemplatePlacementPtrOutputWithContext(context.Context) LaunchTemplatePlacementPtrOutput
}

type launchTemplatePlacementPtrType LaunchTemplatePlacementArgs

func LaunchTemplatePlacementPtr(v *LaunchTemplatePlacementArgs) LaunchTemplatePlacementPtrInput {
	return (*launchTemplatePlacementPtrType)(v)
}

func (*launchTemplatePlacementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplatePlacement)(nil)).Elem()
}

func (i *launchTemplatePlacementPtrType) ToLaunchTemplatePlacementPtrOutput() LaunchTemplatePlacementPtrOutput {
	return i.ToLaunchTemplatePlacementPtrOutputWithContext(context.Background())
}

func (i *launchTemplatePlacementPtrType) ToLaunchTemplatePlacementPtrOutputWithContext(ctx context.Context) LaunchTemplatePlacementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplatePlacementPtrOutput)
}

type LaunchTemplatePlacementOutput struct{ *pulumi.OutputState }

func (LaunchTemplatePlacementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplatePlacement)(nil)).Elem()
}

func (o LaunchTemplatePlacementOutput) ToLaunchTemplatePlacementOutput() LaunchTemplatePlacementOutput {
	return o
}

func (o LaunchTemplatePlacementOutput) ToLaunchTemplatePlacementOutputWithContext(ctx context.Context) LaunchTemplatePlacementOutput {
	return o
}

func (o LaunchTemplatePlacementOutput) ToLaunchTemplatePlacementPtrOutput() LaunchTemplatePlacementPtrOutput {
	return o.ToLaunchTemplatePlacementPtrOutputWithContext(context.Background())
}

func (o LaunchTemplatePlacementOutput) ToLaunchTemplatePlacementPtrOutputWithContext(ctx context.Context) LaunchTemplatePlacementPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacement) *LaunchTemplatePlacement {
		return &v
	}).(LaunchTemplatePlacementPtrOutput)
}

// The affinity setting for an instance on a Dedicated Host.
func (o LaunchTemplatePlacementOutput) Affinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacement) *string { return v.Affinity }).(pulumi.StringPtrOutput)
}

// The Availability Zone for the instance.
func (o LaunchTemplatePlacementOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacement) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

// The name of the placement group for the instance.
func (o LaunchTemplatePlacementOutput) GroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacement) *string { return v.GroupName }).(pulumi.StringPtrOutput)
}

// The ID of the Dedicated Host for the instance.
func (o LaunchTemplatePlacementOutput) HostId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacement) *string { return v.HostId }).(pulumi.StringPtrOutput)
}

// Reserved for future use.
func (o LaunchTemplatePlacementOutput) SpreadDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacement) *string { return v.SpreadDomain }).(pulumi.StringPtrOutput)
}

// The tenancy of the instance (if the instance is running in a VPC). Can be `default`, `dedicated`, or `host`.
func (o LaunchTemplatePlacementOutput) Tenancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacement) *string { return v.Tenancy }).(pulumi.StringPtrOutput)
}

type LaunchTemplatePlacementPtrOutput struct{ *pulumi.OutputState }

func (LaunchTemplatePlacementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplatePlacement)(nil)).Elem()
}

func (o LaunchTemplatePlacementPtrOutput) ToLaunchTemplatePlacementPtrOutput() LaunchTemplatePlacementPtrOutput {
	return o
}

func (o LaunchTemplatePlacementPtrOutput) ToLaunchTemplatePlacementPtrOutputWithContext(ctx context.Context) LaunchTemplatePlacementPtrOutput {
	return o
}

func (o LaunchTemplatePlacementPtrOutput) Elem() LaunchTemplatePlacementOutput {
	return o.ApplyT(func(v *LaunchTemplatePlacement) LaunchTemplatePlacement { return *v }).(LaunchTemplatePlacementOutput)
}

// The affinity setting for an instance on a Dedicated Host.
func (o LaunchTemplatePlacementPtrOutput) Affinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacement) *string { return v.Affinity }).(pulumi.StringPtrOutput)
}

// The Availability Zone for the instance.
func (o LaunchTemplatePlacementPtrOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacement) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

// The name of the placement group for the instance.
func (o LaunchTemplatePlacementPtrOutput) GroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacement) *string { return v.GroupName }).(pulumi.StringPtrOutput)
}

// The ID of the Dedicated Host for the instance.
func (o LaunchTemplatePlacementPtrOutput) HostId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacement) *string { return v.HostId }).(pulumi.StringPtrOutput)
}

// Reserved for future use.
func (o LaunchTemplatePlacementPtrOutput) SpreadDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacement) *string { return v.SpreadDomain }).(pulumi.StringPtrOutput)
}

// The tenancy of the instance (if the instance is running in a VPC). Can be `default`, `dedicated`, or `host`.
func (o LaunchTemplatePlacementPtrOutput) Tenancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplatePlacement) *string { return v.Tenancy }).(pulumi.StringPtrOutput)
}

type LaunchTemplateTagSpecification struct {
	// The type of resource to tag. Valid values are `instance` and `volume`.
	ResourceType *string `pulumi:"resourceType"`
	// A mapping of tags to assign to the resource.
	Tags map[string]interface{} `pulumi:"tags"`
}

// LaunchTemplateTagSpecificationInput is an input type that accepts LaunchTemplateTagSpecificationArgs and LaunchTemplateTagSpecificationOutput values.
// You can construct a concrete instance of `LaunchTemplateTagSpecificationInput` via:
//
// 		 LaunchTemplateTagSpecificationArgs{...}
//
type LaunchTemplateTagSpecificationInput interface {
	pulumi.Input

	ToLaunchTemplateTagSpecificationOutput() LaunchTemplateTagSpecificationOutput
	ToLaunchTemplateTagSpecificationOutputWithContext(context.Context) LaunchTemplateTagSpecificationOutput
}

type LaunchTemplateTagSpecificationArgs struct {
	// The type of resource to tag. Valid values are `instance` and `volume`.
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
	// A mapping of tags to assign to the resource.
	Tags pulumi.MapInput `pulumi:"tags"`
}

func (LaunchTemplateTagSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateTagSpecification)(nil)).Elem()
}

func (i LaunchTemplateTagSpecificationArgs) ToLaunchTemplateTagSpecificationOutput() LaunchTemplateTagSpecificationOutput {
	return i.ToLaunchTemplateTagSpecificationOutputWithContext(context.Background())
}

func (i LaunchTemplateTagSpecificationArgs) ToLaunchTemplateTagSpecificationOutputWithContext(ctx context.Context) LaunchTemplateTagSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateTagSpecificationOutput)
}

// LaunchTemplateTagSpecificationArrayInput is an input type that accepts LaunchTemplateTagSpecificationArray and LaunchTemplateTagSpecificationArrayOutput values.
// You can construct a concrete instance of `LaunchTemplateTagSpecificationArrayInput` via:
//
// 		 LaunchTemplateTagSpecificationArray{ LaunchTemplateTagSpecificationArgs{...} }
//
type LaunchTemplateTagSpecificationArrayInput interface {
	pulumi.Input

	ToLaunchTemplateTagSpecificationArrayOutput() LaunchTemplateTagSpecificationArrayOutput
	ToLaunchTemplateTagSpecificationArrayOutputWithContext(context.Context) LaunchTemplateTagSpecificationArrayOutput
}

type LaunchTemplateTagSpecificationArray []LaunchTemplateTagSpecificationInput

func (LaunchTemplateTagSpecificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateTagSpecification)(nil)).Elem()
}

func (i LaunchTemplateTagSpecificationArray) ToLaunchTemplateTagSpecificationArrayOutput() LaunchTemplateTagSpecificationArrayOutput {
	return i.ToLaunchTemplateTagSpecificationArrayOutputWithContext(context.Background())
}

func (i LaunchTemplateTagSpecificationArray) ToLaunchTemplateTagSpecificationArrayOutputWithContext(ctx context.Context) LaunchTemplateTagSpecificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateTagSpecificationArrayOutput)
}

type LaunchTemplateTagSpecificationOutput struct{ *pulumi.OutputState }

func (LaunchTemplateTagSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchTemplateTagSpecification)(nil)).Elem()
}

func (o LaunchTemplateTagSpecificationOutput) ToLaunchTemplateTagSpecificationOutput() LaunchTemplateTagSpecificationOutput {
	return o
}

func (o LaunchTemplateTagSpecificationOutput) ToLaunchTemplateTagSpecificationOutputWithContext(ctx context.Context) LaunchTemplateTagSpecificationOutput {
	return o
}

// The type of resource to tag. Valid values are `instance` and `volume`.
func (o LaunchTemplateTagSpecificationOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LaunchTemplateTagSpecification) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

// A mapping of tags to assign to the resource.
func (o LaunchTemplateTagSpecificationOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v LaunchTemplateTagSpecification) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

type LaunchTemplateTagSpecificationArrayOutput struct{ *pulumi.OutputState }

func (LaunchTemplateTagSpecificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchTemplateTagSpecification)(nil)).Elem()
}

func (o LaunchTemplateTagSpecificationArrayOutput) ToLaunchTemplateTagSpecificationArrayOutput() LaunchTemplateTagSpecificationArrayOutput {
	return o
}

func (o LaunchTemplateTagSpecificationArrayOutput) ToLaunchTemplateTagSpecificationArrayOutputWithContext(ctx context.Context) LaunchTemplateTagSpecificationArrayOutput {
	return o
}

func (o LaunchTemplateTagSpecificationArrayOutput) Index(i pulumi.IntInput) LaunchTemplateTagSpecificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LaunchTemplateTagSpecification {
		return vs[0].([]LaunchTemplateTagSpecification)[vs[1].(int)]
	}).(LaunchTemplateTagSpecificationOutput)
}

type NetworkAclEgress struct {
	// The action to take.
	Action string `pulumi:"action"`
	// The CIDR block to match. This must be a
	// valid network mask.
	CidrBlock *string `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort int `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	IcmpCode *int `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType *int `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	Ipv6CidrBlock *string `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all'
	// protocol, you must specify a from and to port of 0.
	Protocol string `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo int `pulumi:"ruleNo"`
	// The to port to match.
	ToPort int `pulumi:"toPort"`
}

// NetworkAclEgressInput is an input type that accepts NetworkAclEgressArgs and NetworkAclEgressOutput values.
// You can construct a concrete instance of `NetworkAclEgressInput` via:
//
// 		 NetworkAclEgressArgs{...}
//
type NetworkAclEgressInput interface {
	pulumi.Input

	ToNetworkAclEgressOutput() NetworkAclEgressOutput
	ToNetworkAclEgressOutputWithContext(context.Context) NetworkAclEgressOutput
}

type NetworkAclEgressArgs struct {
	// The action to take.
	Action pulumi.StringInput `pulumi:"action"`
	// The CIDR block to match. This must be a
	// valid network mask.
	CidrBlock pulumi.StringPtrInput `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort pulumi.IntInput `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	IcmpCode pulumi.IntPtrInput `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType pulumi.IntPtrInput `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	Ipv6CidrBlock pulumi.StringPtrInput `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all'
	// protocol, you must specify a from and to port of 0.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo pulumi.IntInput `pulumi:"ruleNo"`
	// The to port to match.
	ToPort pulumi.IntInput `pulumi:"toPort"`
}

func (NetworkAclEgressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclEgress)(nil)).Elem()
}

func (i NetworkAclEgressArgs) ToNetworkAclEgressOutput() NetworkAclEgressOutput {
	return i.ToNetworkAclEgressOutputWithContext(context.Background())
}

func (i NetworkAclEgressArgs) ToNetworkAclEgressOutputWithContext(ctx context.Context) NetworkAclEgressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclEgressOutput)
}

// NetworkAclEgressArrayInput is an input type that accepts NetworkAclEgressArray and NetworkAclEgressArrayOutput values.
// You can construct a concrete instance of `NetworkAclEgressArrayInput` via:
//
// 		 NetworkAclEgressArray{ NetworkAclEgressArgs{...} }
//
type NetworkAclEgressArrayInput interface {
	pulumi.Input

	ToNetworkAclEgressArrayOutput() NetworkAclEgressArrayOutput
	ToNetworkAclEgressArrayOutputWithContext(context.Context) NetworkAclEgressArrayOutput
}

type NetworkAclEgressArray []NetworkAclEgressInput

func (NetworkAclEgressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclEgress)(nil)).Elem()
}

func (i NetworkAclEgressArray) ToNetworkAclEgressArrayOutput() NetworkAclEgressArrayOutput {
	return i.ToNetworkAclEgressArrayOutputWithContext(context.Background())
}

func (i NetworkAclEgressArray) ToNetworkAclEgressArrayOutputWithContext(ctx context.Context) NetworkAclEgressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclEgressArrayOutput)
}

type NetworkAclEgressOutput struct{ *pulumi.OutputState }

func (NetworkAclEgressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclEgress)(nil)).Elem()
}

func (o NetworkAclEgressOutput) ToNetworkAclEgressOutput() NetworkAclEgressOutput {
	return o
}

func (o NetworkAclEgressOutput) ToNetworkAclEgressOutputWithContext(ctx context.Context) NetworkAclEgressOutput {
	return o
}

// The action to take.
func (o NetworkAclEgressOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclEgress) string { return v.Action }).(pulumi.StringOutput)
}

// The CIDR block to match. This must be a
// valid network mask.
func (o NetworkAclEgressOutput) CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclEgress) *string { return v.CidrBlock }).(pulumi.StringPtrOutput)
}

// The from port to match.
func (o NetworkAclEgressOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkAclEgress) int { return v.FromPort }).(pulumi.IntOutput)
}

// The ICMP type code to be used. Default 0.
func (o NetworkAclEgressOutput) IcmpCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkAclEgress) *int { return v.IcmpCode }).(pulumi.IntPtrOutput)
}

// The ICMP type to be used. Default 0.
func (o NetworkAclEgressOutput) IcmpType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkAclEgress) *int { return v.IcmpType }).(pulumi.IntPtrOutput)
}

// The IPv6 CIDR block.
func (o NetworkAclEgressOutput) Ipv6CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclEgress) *string { return v.Ipv6CidrBlock }).(pulumi.StringPtrOutput)
}

// The protocol to match. If using the -1 'all'
// protocol, you must specify a from and to port of 0.
func (o NetworkAclEgressOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclEgress) string { return v.Protocol }).(pulumi.StringOutput)
}

// The rule number. Used for ordering.
func (o NetworkAclEgressOutput) RuleNo() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkAclEgress) int { return v.RuleNo }).(pulumi.IntOutput)
}

// The to port to match.
func (o NetworkAclEgressOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkAclEgress) int { return v.ToPort }).(pulumi.IntOutput)
}

type NetworkAclEgressArrayOutput struct{ *pulumi.OutputState }

func (NetworkAclEgressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclEgress)(nil)).Elem()
}

func (o NetworkAclEgressArrayOutput) ToNetworkAclEgressArrayOutput() NetworkAclEgressArrayOutput {
	return o
}

func (o NetworkAclEgressArrayOutput) ToNetworkAclEgressArrayOutputWithContext(ctx context.Context) NetworkAclEgressArrayOutput {
	return o
}

func (o NetworkAclEgressArrayOutput) Index(i pulumi.IntInput) NetworkAclEgressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAclEgress {
		return vs[0].([]NetworkAclEgress)[vs[1].(int)]
	}).(NetworkAclEgressOutput)
}

type NetworkAclIngress struct {
	// The action to take.
	Action string `pulumi:"action"`
	// The CIDR block to match. This must be a
	// valid network mask.
	CidrBlock *string `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort int `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	IcmpCode *int `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType *int `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	Ipv6CidrBlock *string `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all'
	// protocol, you must specify a from and to port of 0.
	Protocol string `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo int `pulumi:"ruleNo"`
	// The to port to match.
	ToPort int `pulumi:"toPort"`
}

// NetworkAclIngressInput is an input type that accepts NetworkAclIngressArgs and NetworkAclIngressOutput values.
// You can construct a concrete instance of `NetworkAclIngressInput` via:
//
// 		 NetworkAclIngressArgs{...}
//
type NetworkAclIngressInput interface {
	pulumi.Input

	ToNetworkAclIngressOutput() NetworkAclIngressOutput
	ToNetworkAclIngressOutputWithContext(context.Context) NetworkAclIngressOutput
}

type NetworkAclIngressArgs struct {
	// The action to take.
	Action pulumi.StringInput `pulumi:"action"`
	// The CIDR block to match. This must be a
	// valid network mask.
	CidrBlock pulumi.StringPtrInput `pulumi:"cidrBlock"`
	// The from port to match.
	FromPort pulumi.IntInput `pulumi:"fromPort"`
	// The ICMP type code to be used. Default 0.
	IcmpCode pulumi.IntPtrInput `pulumi:"icmpCode"`
	// The ICMP type to be used. Default 0.
	IcmpType pulumi.IntPtrInput `pulumi:"icmpType"`
	// The IPv6 CIDR block.
	Ipv6CidrBlock pulumi.StringPtrInput `pulumi:"ipv6CidrBlock"`
	// The protocol to match. If using the -1 'all'
	// protocol, you must specify a from and to port of 0.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The rule number. Used for ordering.
	RuleNo pulumi.IntInput `pulumi:"ruleNo"`
	// The to port to match.
	ToPort pulumi.IntInput `pulumi:"toPort"`
}

func (NetworkAclIngressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclIngress)(nil)).Elem()
}

func (i NetworkAclIngressArgs) ToNetworkAclIngressOutput() NetworkAclIngressOutput {
	return i.ToNetworkAclIngressOutputWithContext(context.Background())
}

func (i NetworkAclIngressArgs) ToNetworkAclIngressOutputWithContext(ctx context.Context) NetworkAclIngressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclIngressOutput)
}

// NetworkAclIngressArrayInput is an input type that accepts NetworkAclIngressArray and NetworkAclIngressArrayOutput values.
// You can construct a concrete instance of `NetworkAclIngressArrayInput` via:
//
// 		 NetworkAclIngressArray{ NetworkAclIngressArgs{...} }
//
type NetworkAclIngressArrayInput interface {
	pulumi.Input

	ToNetworkAclIngressArrayOutput() NetworkAclIngressArrayOutput
	ToNetworkAclIngressArrayOutputWithContext(context.Context) NetworkAclIngressArrayOutput
}

type NetworkAclIngressArray []NetworkAclIngressInput

func (NetworkAclIngressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclIngress)(nil)).Elem()
}

func (i NetworkAclIngressArray) ToNetworkAclIngressArrayOutput() NetworkAclIngressArrayOutput {
	return i.ToNetworkAclIngressArrayOutputWithContext(context.Background())
}

func (i NetworkAclIngressArray) ToNetworkAclIngressArrayOutputWithContext(ctx context.Context) NetworkAclIngressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkAclIngressArrayOutput)
}

type NetworkAclIngressOutput struct{ *pulumi.OutputState }

func (NetworkAclIngressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkAclIngress)(nil)).Elem()
}

func (o NetworkAclIngressOutput) ToNetworkAclIngressOutput() NetworkAclIngressOutput {
	return o
}

func (o NetworkAclIngressOutput) ToNetworkAclIngressOutputWithContext(ctx context.Context) NetworkAclIngressOutput {
	return o
}

// The action to take.
func (o NetworkAclIngressOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclIngress) string { return v.Action }).(pulumi.StringOutput)
}

// The CIDR block to match. This must be a
// valid network mask.
func (o NetworkAclIngressOutput) CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclIngress) *string { return v.CidrBlock }).(pulumi.StringPtrOutput)
}

// The from port to match.
func (o NetworkAclIngressOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkAclIngress) int { return v.FromPort }).(pulumi.IntOutput)
}

// The ICMP type code to be used. Default 0.
func (o NetworkAclIngressOutput) IcmpCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkAclIngress) *int { return v.IcmpCode }).(pulumi.IntPtrOutput)
}

// The ICMP type to be used. Default 0.
func (o NetworkAclIngressOutput) IcmpType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkAclIngress) *int { return v.IcmpType }).(pulumi.IntPtrOutput)
}

// The IPv6 CIDR block.
func (o NetworkAclIngressOutput) Ipv6CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkAclIngress) *string { return v.Ipv6CidrBlock }).(pulumi.StringPtrOutput)
}

// The protocol to match. If using the -1 'all'
// protocol, you must specify a from and to port of 0.
func (o NetworkAclIngressOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkAclIngress) string { return v.Protocol }).(pulumi.StringOutput)
}

// The rule number. Used for ordering.
func (o NetworkAclIngressOutput) RuleNo() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkAclIngress) int { return v.RuleNo }).(pulumi.IntOutput)
}

// The to port to match.
func (o NetworkAclIngressOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkAclIngress) int { return v.ToPort }).(pulumi.IntOutput)
}

type NetworkAclIngressArrayOutput struct{ *pulumi.OutputState }

func (NetworkAclIngressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkAclIngress)(nil)).Elem()
}

func (o NetworkAclIngressArrayOutput) ToNetworkAclIngressArrayOutput() NetworkAclIngressArrayOutput {
	return o
}

func (o NetworkAclIngressArrayOutput) ToNetworkAclIngressArrayOutputWithContext(ctx context.Context) NetworkAclIngressArrayOutput {
	return o
}

func (o NetworkAclIngressArrayOutput) Index(i pulumi.IntInput) NetworkAclIngressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkAclIngress {
		return vs[0].([]NetworkAclIngress)[vs[1].(int)]
	}).(NetworkAclIngressOutput)
}

type NetworkInterfaceAttachmentType struct {
	AttachmentId *string `pulumi:"attachmentId"`
	// Integer to define the devices index.
	DeviceIndex int `pulumi:"deviceIndex"`
	// ID of the instance to attach to.
	Instance string `pulumi:"instance"`
}

// NetworkInterfaceAttachmentTypeInput is an input type that accepts NetworkInterfaceAttachmentTypeArgs and NetworkInterfaceAttachmentTypeOutput values.
// You can construct a concrete instance of `NetworkInterfaceAttachmentTypeInput` via:
//
// 		 NetworkInterfaceAttachmentTypeArgs{...}
//
type NetworkInterfaceAttachmentTypeInput interface {
	pulumi.Input

	ToNetworkInterfaceAttachmentTypeOutput() NetworkInterfaceAttachmentTypeOutput
	ToNetworkInterfaceAttachmentTypeOutputWithContext(context.Context) NetworkInterfaceAttachmentTypeOutput
}

type NetworkInterfaceAttachmentTypeArgs struct {
	AttachmentId pulumi.StringPtrInput `pulumi:"attachmentId"`
	// Integer to define the devices index.
	DeviceIndex pulumi.IntInput `pulumi:"deviceIndex"`
	// ID of the instance to attach to.
	Instance pulumi.StringInput `pulumi:"instance"`
}

func (NetworkInterfaceAttachmentTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceAttachmentType)(nil)).Elem()
}

func (i NetworkInterfaceAttachmentTypeArgs) ToNetworkInterfaceAttachmentTypeOutput() NetworkInterfaceAttachmentTypeOutput {
	return i.ToNetworkInterfaceAttachmentTypeOutputWithContext(context.Background())
}

func (i NetworkInterfaceAttachmentTypeArgs) ToNetworkInterfaceAttachmentTypeOutputWithContext(ctx context.Context) NetworkInterfaceAttachmentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceAttachmentTypeOutput)
}

// NetworkInterfaceAttachmentTypeArrayInput is an input type that accepts NetworkInterfaceAttachmentTypeArray and NetworkInterfaceAttachmentTypeArrayOutput values.
// You can construct a concrete instance of `NetworkInterfaceAttachmentTypeArrayInput` via:
//
// 		 NetworkInterfaceAttachmentTypeArray{ NetworkInterfaceAttachmentTypeArgs{...} }
//
type NetworkInterfaceAttachmentTypeArrayInput interface {
	pulumi.Input

	ToNetworkInterfaceAttachmentTypeArrayOutput() NetworkInterfaceAttachmentTypeArrayOutput
	ToNetworkInterfaceAttachmentTypeArrayOutputWithContext(context.Context) NetworkInterfaceAttachmentTypeArrayOutput
}

type NetworkInterfaceAttachmentTypeArray []NetworkInterfaceAttachmentTypeInput

func (NetworkInterfaceAttachmentTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceAttachmentType)(nil)).Elem()
}

func (i NetworkInterfaceAttachmentTypeArray) ToNetworkInterfaceAttachmentTypeArrayOutput() NetworkInterfaceAttachmentTypeArrayOutput {
	return i.ToNetworkInterfaceAttachmentTypeArrayOutputWithContext(context.Background())
}

func (i NetworkInterfaceAttachmentTypeArray) ToNetworkInterfaceAttachmentTypeArrayOutputWithContext(ctx context.Context) NetworkInterfaceAttachmentTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceAttachmentTypeArrayOutput)
}

type NetworkInterfaceAttachmentTypeOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceAttachmentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceAttachmentType)(nil)).Elem()
}

func (o NetworkInterfaceAttachmentTypeOutput) ToNetworkInterfaceAttachmentTypeOutput() NetworkInterfaceAttachmentTypeOutput {
	return o
}

func (o NetworkInterfaceAttachmentTypeOutput) ToNetworkInterfaceAttachmentTypeOutputWithContext(ctx context.Context) NetworkInterfaceAttachmentTypeOutput {
	return o
}

func (o NetworkInterfaceAttachmentTypeOutput) AttachmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceAttachmentType) *string { return v.AttachmentId }).(pulumi.StringPtrOutput)
}

// Integer to define the devices index.
func (o NetworkInterfaceAttachmentTypeOutput) DeviceIndex() pulumi.IntOutput {
	return o.ApplyT(func(v NetworkInterfaceAttachmentType) int { return v.DeviceIndex }).(pulumi.IntOutput)
}

// ID of the instance to attach to.
func (o NetworkInterfaceAttachmentTypeOutput) Instance() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceAttachmentType) string { return v.Instance }).(pulumi.StringOutput)
}

type NetworkInterfaceAttachmentTypeArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceAttachmentTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceAttachmentType)(nil)).Elem()
}

func (o NetworkInterfaceAttachmentTypeArrayOutput) ToNetworkInterfaceAttachmentTypeArrayOutput() NetworkInterfaceAttachmentTypeArrayOutput {
	return o
}

func (o NetworkInterfaceAttachmentTypeArrayOutput) ToNetworkInterfaceAttachmentTypeArrayOutputWithContext(ctx context.Context) NetworkInterfaceAttachmentTypeArrayOutput {
	return o
}

func (o NetworkInterfaceAttachmentTypeArrayOutput) Index(i pulumi.IntInput) NetworkInterfaceAttachmentTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfaceAttachmentType {
		return vs[0].([]NetworkInterfaceAttachmentType)[vs[1].(int)]
	}).(NetworkInterfaceAttachmentTypeOutput)
}

type PeeringConnectionOptionsAccepter struct {
	// Allow a local linked EC2-Classic instance to communicate
	// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
	// to the remote VPC. This option is not supported for inter-region VPC peering.
	AllowClassicLinkToRemoteVpc *bool `pulumi:"allowClassicLinkToRemoteVpc"`
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC.
	AllowRemoteVpcDnsResolution *bool `pulumi:"allowRemoteVpcDnsResolution"`
	// Allow a local VPC to communicate with a linked EC2-Classic
	// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
	// connection. This option is not supported for inter-region VPC peering.
	AllowVpcToRemoteClassicLink *bool `pulumi:"allowVpcToRemoteClassicLink"`
}

// PeeringConnectionOptionsAccepterInput is an input type that accepts PeeringConnectionOptionsAccepterArgs and PeeringConnectionOptionsAccepterOutput values.
// You can construct a concrete instance of `PeeringConnectionOptionsAccepterInput` via:
//
// 		 PeeringConnectionOptionsAccepterArgs{...}
//
type PeeringConnectionOptionsAccepterInput interface {
	pulumi.Input

	ToPeeringConnectionOptionsAccepterOutput() PeeringConnectionOptionsAccepterOutput
	ToPeeringConnectionOptionsAccepterOutputWithContext(context.Context) PeeringConnectionOptionsAccepterOutput
}

type PeeringConnectionOptionsAccepterArgs struct {
	// Allow a local linked EC2-Classic instance to communicate
	// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
	// to the remote VPC. This option is not supported for inter-region VPC peering.
	AllowClassicLinkToRemoteVpc pulumi.BoolPtrInput `pulumi:"allowClassicLinkToRemoteVpc"`
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC.
	AllowRemoteVpcDnsResolution pulumi.BoolPtrInput `pulumi:"allowRemoteVpcDnsResolution"`
	// Allow a local VPC to communicate with a linked EC2-Classic
	// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
	// connection. This option is not supported for inter-region VPC peering.
	AllowVpcToRemoteClassicLink pulumi.BoolPtrInput `pulumi:"allowVpcToRemoteClassicLink"`
}

func (PeeringConnectionOptionsAccepterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringConnectionOptionsAccepter)(nil)).Elem()
}

func (i PeeringConnectionOptionsAccepterArgs) ToPeeringConnectionOptionsAccepterOutput() PeeringConnectionOptionsAccepterOutput {
	return i.ToPeeringConnectionOptionsAccepterOutputWithContext(context.Background())
}

func (i PeeringConnectionOptionsAccepterArgs) ToPeeringConnectionOptionsAccepterOutputWithContext(ctx context.Context) PeeringConnectionOptionsAccepterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringConnectionOptionsAccepterOutput)
}

func (i PeeringConnectionOptionsAccepterArgs) ToPeeringConnectionOptionsAccepterPtrOutput() PeeringConnectionOptionsAccepterPtrOutput {
	return i.ToPeeringConnectionOptionsAccepterPtrOutputWithContext(context.Background())
}

func (i PeeringConnectionOptionsAccepterArgs) ToPeeringConnectionOptionsAccepterPtrOutputWithContext(ctx context.Context) PeeringConnectionOptionsAccepterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringConnectionOptionsAccepterOutput).ToPeeringConnectionOptionsAccepterPtrOutputWithContext(ctx)
}

// PeeringConnectionOptionsAccepterPtrInput is an input type that accepts PeeringConnectionOptionsAccepterArgs, PeeringConnectionOptionsAccepterPtr and PeeringConnectionOptionsAccepterPtrOutput values.
// You can construct a concrete instance of `PeeringConnectionOptionsAccepterPtrInput` via:
//
// 		 PeeringConnectionOptionsAccepterArgs{...}
//
//  or:
//
// 		 nil
//
type PeeringConnectionOptionsAccepterPtrInput interface {
	pulumi.Input

	ToPeeringConnectionOptionsAccepterPtrOutput() PeeringConnectionOptionsAccepterPtrOutput
	ToPeeringConnectionOptionsAccepterPtrOutputWithContext(context.Context) PeeringConnectionOptionsAccepterPtrOutput
}

type peeringConnectionOptionsAccepterPtrType PeeringConnectionOptionsAccepterArgs

func PeeringConnectionOptionsAccepterPtr(v *PeeringConnectionOptionsAccepterArgs) PeeringConnectionOptionsAccepterPtrInput {
	return (*peeringConnectionOptionsAccepterPtrType)(v)
}

func (*peeringConnectionOptionsAccepterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringConnectionOptionsAccepter)(nil)).Elem()
}

func (i *peeringConnectionOptionsAccepterPtrType) ToPeeringConnectionOptionsAccepterPtrOutput() PeeringConnectionOptionsAccepterPtrOutput {
	return i.ToPeeringConnectionOptionsAccepterPtrOutputWithContext(context.Background())
}

func (i *peeringConnectionOptionsAccepterPtrType) ToPeeringConnectionOptionsAccepterPtrOutputWithContext(ctx context.Context) PeeringConnectionOptionsAccepterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringConnectionOptionsAccepterPtrOutput)
}

type PeeringConnectionOptionsAccepterOutput struct{ *pulumi.OutputState }

func (PeeringConnectionOptionsAccepterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringConnectionOptionsAccepter)(nil)).Elem()
}

func (o PeeringConnectionOptionsAccepterOutput) ToPeeringConnectionOptionsAccepterOutput() PeeringConnectionOptionsAccepterOutput {
	return o
}

func (o PeeringConnectionOptionsAccepterOutput) ToPeeringConnectionOptionsAccepterOutputWithContext(ctx context.Context) PeeringConnectionOptionsAccepterOutput {
	return o
}

func (o PeeringConnectionOptionsAccepterOutput) ToPeeringConnectionOptionsAccepterPtrOutput() PeeringConnectionOptionsAccepterPtrOutput {
	return o.ToPeeringConnectionOptionsAccepterPtrOutputWithContext(context.Background())
}

func (o PeeringConnectionOptionsAccepterOutput) ToPeeringConnectionOptionsAccepterPtrOutputWithContext(ctx context.Context) PeeringConnectionOptionsAccepterPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsAccepter) *PeeringConnectionOptionsAccepter {
		return &v
	}).(PeeringConnectionOptionsAccepterPtrOutput)
}

// Allow a local linked EC2-Classic instance to communicate
// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
// to the remote VPC. This option is not supported for inter-region VPC peering.
func (o PeeringConnectionOptionsAccepterOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsAccepter) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to resolve public DNS hostnames to
// private IP addresses when queried from instances in the peer VPC.
func (o PeeringConnectionOptionsAccepterOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsAccepter) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to communicate with a linked EC2-Classic
// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
// connection. This option is not supported for inter-region VPC peering.
func (o PeeringConnectionOptionsAccepterOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsAccepter) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type PeeringConnectionOptionsAccepterPtrOutput struct{ *pulumi.OutputState }

func (PeeringConnectionOptionsAccepterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringConnectionOptionsAccepter)(nil)).Elem()
}

func (o PeeringConnectionOptionsAccepterPtrOutput) ToPeeringConnectionOptionsAccepterPtrOutput() PeeringConnectionOptionsAccepterPtrOutput {
	return o
}

func (o PeeringConnectionOptionsAccepterPtrOutput) ToPeeringConnectionOptionsAccepterPtrOutputWithContext(ctx context.Context) PeeringConnectionOptionsAccepterPtrOutput {
	return o
}

func (o PeeringConnectionOptionsAccepterPtrOutput) Elem() PeeringConnectionOptionsAccepterOutput {
	return o.ApplyT(func(v *PeeringConnectionOptionsAccepter) PeeringConnectionOptionsAccepter { return *v }).(PeeringConnectionOptionsAccepterOutput)
}

// Allow a local linked EC2-Classic instance to communicate
// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
// to the remote VPC. This option is not supported for inter-region VPC peering.
func (o PeeringConnectionOptionsAccepterPtrOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsAccepter) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to resolve public DNS hostnames to
// private IP addresses when queried from instances in the peer VPC.
func (o PeeringConnectionOptionsAccepterPtrOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsAccepter) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to communicate with a linked EC2-Classic
// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
// connection. This option is not supported for inter-region VPC peering.
func (o PeeringConnectionOptionsAccepterPtrOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsAccepter) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type PeeringConnectionOptionsRequester struct {
	// Allow a local linked EC2-Classic instance to communicate
	// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
	// to the remote VPC. This option is not supported for inter-region VPC peering.
	AllowClassicLinkToRemoteVpc *bool `pulumi:"allowClassicLinkToRemoteVpc"`
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC.
	AllowRemoteVpcDnsResolution *bool `pulumi:"allowRemoteVpcDnsResolution"`
	// Allow a local VPC to communicate with a linked EC2-Classic
	// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
	// connection. This option is not supported for inter-region VPC peering.
	AllowVpcToRemoteClassicLink *bool `pulumi:"allowVpcToRemoteClassicLink"`
}

// PeeringConnectionOptionsRequesterInput is an input type that accepts PeeringConnectionOptionsRequesterArgs and PeeringConnectionOptionsRequesterOutput values.
// You can construct a concrete instance of `PeeringConnectionOptionsRequesterInput` via:
//
// 		 PeeringConnectionOptionsRequesterArgs{...}
//
type PeeringConnectionOptionsRequesterInput interface {
	pulumi.Input

	ToPeeringConnectionOptionsRequesterOutput() PeeringConnectionOptionsRequesterOutput
	ToPeeringConnectionOptionsRequesterOutputWithContext(context.Context) PeeringConnectionOptionsRequesterOutput
}

type PeeringConnectionOptionsRequesterArgs struct {
	// Allow a local linked EC2-Classic instance to communicate
	// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
	// to the remote VPC. This option is not supported for inter-region VPC peering.
	AllowClassicLinkToRemoteVpc pulumi.BoolPtrInput `pulumi:"allowClassicLinkToRemoteVpc"`
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC.
	AllowRemoteVpcDnsResolution pulumi.BoolPtrInput `pulumi:"allowRemoteVpcDnsResolution"`
	// Allow a local VPC to communicate with a linked EC2-Classic
	// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
	// connection. This option is not supported for inter-region VPC peering.
	AllowVpcToRemoteClassicLink pulumi.BoolPtrInput `pulumi:"allowVpcToRemoteClassicLink"`
}

func (PeeringConnectionOptionsRequesterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringConnectionOptionsRequester)(nil)).Elem()
}

func (i PeeringConnectionOptionsRequesterArgs) ToPeeringConnectionOptionsRequesterOutput() PeeringConnectionOptionsRequesterOutput {
	return i.ToPeeringConnectionOptionsRequesterOutputWithContext(context.Background())
}

func (i PeeringConnectionOptionsRequesterArgs) ToPeeringConnectionOptionsRequesterOutputWithContext(ctx context.Context) PeeringConnectionOptionsRequesterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringConnectionOptionsRequesterOutput)
}

func (i PeeringConnectionOptionsRequesterArgs) ToPeeringConnectionOptionsRequesterPtrOutput() PeeringConnectionOptionsRequesterPtrOutput {
	return i.ToPeeringConnectionOptionsRequesterPtrOutputWithContext(context.Background())
}

func (i PeeringConnectionOptionsRequesterArgs) ToPeeringConnectionOptionsRequesterPtrOutputWithContext(ctx context.Context) PeeringConnectionOptionsRequesterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringConnectionOptionsRequesterOutput).ToPeeringConnectionOptionsRequesterPtrOutputWithContext(ctx)
}

// PeeringConnectionOptionsRequesterPtrInput is an input type that accepts PeeringConnectionOptionsRequesterArgs, PeeringConnectionOptionsRequesterPtr and PeeringConnectionOptionsRequesterPtrOutput values.
// You can construct a concrete instance of `PeeringConnectionOptionsRequesterPtrInput` via:
//
// 		 PeeringConnectionOptionsRequesterArgs{...}
//
//  or:
//
// 		 nil
//
type PeeringConnectionOptionsRequesterPtrInput interface {
	pulumi.Input

	ToPeeringConnectionOptionsRequesterPtrOutput() PeeringConnectionOptionsRequesterPtrOutput
	ToPeeringConnectionOptionsRequesterPtrOutputWithContext(context.Context) PeeringConnectionOptionsRequesterPtrOutput
}

type peeringConnectionOptionsRequesterPtrType PeeringConnectionOptionsRequesterArgs

func PeeringConnectionOptionsRequesterPtr(v *PeeringConnectionOptionsRequesterArgs) PeeringConnectionOptionsRequesterPtrInput {
	return (*peeringConnectionOptionsRequesterPtrType)(v)
}

func (*peeringConnectionOptionsRequesterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringConnectionOptionsRequester)(nil)).Elem()
}

func (i *peeringConnectionOptionsRequesterPtrType) ToPeeringConnectionOptionsRequesterPtrOutput() PeeringConnectionOptionsRequesterPtrOutput {
	return i.ToPeeringConnectionOptionsRequesterPtrOutputWithContext(context.Background())
}

func (i *peeringConnectionOptionsRequesterPtrType) ToPeeringConnectionOptionsRequesterPtrOutputWithContext(ctx context.Context) PeeringConnectionOptionsRequesterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeeringConnectionOptionsRequesterPtrOutput)
}

type PeeringConnectionOptionsRequesterOutput struct{ *pulumi.OutputState }

func (PeeringConnectionOptionsRequesterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeeringConnectionOptionsRequester)(nil)).Elem()
}

func (o PeeringConnectionOptionsRequesterOutput) ToPeeringConnectionOptionsRequesterOutput() PeeringConnectionOptionsRequesterOutput {
	return o
}

func (o PeeringConnectionOptionsRequesterOutput) ToPeeringConnectionOptionsRequesterOutputWithContext(ctx context.Context) PeeringConnectionOptionsRequesterOutput {
	return o
}

func (o PeeringConnectionOptionsRequesterOutput) ToPeeringConnectionOptionsRequesterPtrOutput() PeeringConnectionOptionsRequesterPtrOutput {
	return o.ToPeeringConnectionOptionsRequesterPtrOutputWithContext(context.Background())
}

func (o PeeringConnectionOptionsRequesterOutput) ToPeeringConnectionOptionsRequesterPtrOutputWithContext(ctx context.Context) PeeringConnectionOptionsRequesterPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsRequester) *PeeringConnectionOptionsRequester {
		return &v
	}).(PeeringConnectionOptionsRequesterPtrOutput)
}

// Allow a local linked EC2-Classic instance to communicate
// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
// to the remote VPC. This option is not supported for inter-region VPC peering.
func (o PeeringConnectionOptionsRequesterOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsRequester) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to resolve public DNS hostnames to
// private IP addresses when queried from instances in the peer VPC.
func (o PeeringConnectionOptionsRequesterOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsRequester) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to communicate with a linked EC2-Classic
// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
// connection. This option is not supported for inter-region VPC peering.
func (o PeeringConnectionOptionsRequesterOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsRequester) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type PeeringConnectionOptionsRequesterPtrOutput struct{ *pulumi.OutputState }

func (PeeringConnectionOptionsRequesterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PeeringConnectionOptionsRequester)(nil)).Elem()
}

func (o PeeringConnectionOptionsRequesterPtrOutput) ToPeeringConnectionOptionsRequesterPtrOutput() PeeringConnectionOptionsRequesterPtrOutput {
	return o
}

func (o PeeringConnectionOptionsRequesterPtrOutput) ToPeeringConnectionOptionsRequesterPtrOutputWithContext(ctx context.Context) PeeringConnectionOptionsRequesterPtrOutput {
	return o
}

func (o PeeringConnectionOptionsRequesterPtrOutput) Elem() PeeringConnectionOptionsRequesterOutput {
	return o.ApplyT(func(v *PeeringConnectionOptionsRequester) PeeringConnectionOptionsRequester { return *v }).(PeeringConnectionOptionsRequesterOutput)
}

// Allow a local linked EC2-Classic instance to communicate
// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
// to the remote VPC. This option is not supported for inter-region VPC peering.
func (o PeeringConnectionOptionsRequesterPtrOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsRequester) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to resolve public DNS hostnames to
// private IP addresses when queried from instances in the peer VPC.
func (o PeeringConnectionOptionsRequesterPtrOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsRequester) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to communicate with a linked EC2-Classic
// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
// connection. This option is not supported for inter-region VPC peering.
func (o PeeringConnectionOptionsRequesterPtrOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PeeringConnectionOptionsRequester) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type RouteTableRoute struct {
	// The CIDR block of the route.
	CidrBlock *string `pulumi:"cidrBlock"`
	// Identifier of a VPC Egress Only Internet Gateway.
	EgressOnlyGatewayId *string `pulumi:"egressOnlyGatewayId"`
	// Identifier of a VPC internet gateway or a virtual private gateway.
	GatewayId *string `pulumi:"gatewayId"`
	// Identifier of an EC2 instance.
	InstanceId *string `pulumi:"instanceId"`
	// The Ipv6 CIDR block of the route.
	Ipv6CidrBlock *string `pulumi:"ipv6CidrBlock"`
	// Identifier of a VPC NAT gateway.
	NatGatewayId *string `pulumi:"natGatewayId"`
	// Identifier of an EC2 network interface.
	NetworkInterfaceId *string `pulumi:"networkInterfaceId"`
	// Identifier of an EC2 Transit Gateway.
	TransitGatewayId *string `pulumi:"transitGatewayId"`
	// Identifier of a VPC peering connection.
	VpcPeeringConnectionId *string `pulumi:"vpcPeeringConnectionId"`
}

// RouteTableRouteInput is an input type that accepts RouteTableRouteArgs and RouteTableRouteOutput values.
// You can construct a concrete instance of `RouteTableRouteInput` via:
//
// 		 RouteTableRouteArgs{...}
//
type RouteTableRouteInput interface {
	pulumi.Input

	ToRouteTableRouteOutput() RouteTableRouteOutput
	ToRouteTableRouteOutputWithContext(context.Context) RouteTableRouteOutput
}

type RouteTableRouteArgs struct {
	// The CIDR block of the route.
	CidrBlock pulumi.StringPtrInput `pulumi:"cidrBlock"`
	// Identifier of a VPC Egress Only Internet Gateway.
	EgressOnlyGatewayId pulumi.StringPtrInput `pulumi:"egressOnlyGatewayId"`
	// Identifier of a VPC internet gateway or a virtual private gateway.
	GatewayId pulumi.StringPtrInput `pulumi:"gatewayId"`
	// Identifier of an EC2 instance.
	InstanceId pulumi.StringPtrInput `pulumi:"instanceId"`
	// The Ipv6 CIDR block of the route.
	Ipv6CidrBlock pulumi.StringPtrInput `pulumi:"ipv6CidrBlock"`
	// Identifier of a VPC NAT gateway.
	NatGatewayId pulumi.StringPtrInput `pulumi:"natGatewayId"`
	// Identifier of an EC2 network interface.
	NetworkInterfaceId pulumi.StringPtrInput `pulumi:"networkInterfaceId"`
	// Identifier of an EC2 Transit Gateway.
	TransitGatewayId pulumi.StringPtrInput `pulumi:"transitGatewayId"`
	// Identifier of a VPC peering connection.
	VpcPeeringConnectionId pulumi.StringPtrInput `pulumi:"vpcPeeringConnectionId"`
}

func (RouteTableRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableRoute)(nil)).Elem()
}

func (i RouteTableRouteArgs) ToRouteTableRouteOutput() RouteTableRouteOutput {
	return i.ToRouteTableRouteOutputWithContext(context.Background())
}

func (i RouteTableRouteArgs) ToRouteTableRouteOutputWithContext(ctx context.Context) RouteTableRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableRouteOutput)
}

// RouteTableRouteArrayInput is an input type that accepts RouteTableRouteArray and RouteTableRouteArrayOutput values.
// You can construct a concrete instance of `RouteTableRouteArrayInput` via:
//
// 		 RouteTableRouteArray{ RouteTableRouteArgs{...} }
//
type RouteTableRouteArrayInput interface {
	pulumi.Input

	ToRouteTableRouteArrayOutput() RouteTableRouteArrayOutput
	ToRouteTableRouteArrayOutputWithContext(context.Context) RouteTableRouteArrayOutput
}

type RouteTableRouteArray []RouteTableRouteInput

func (RouteTableRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTableRoute)(nil)).Elem()
}

func (i RouteTableRouteArray) ToRouteTableRouteArrayOutput() RouteTableRouteArrayOutput {
	return i.ToRouteTableRouteArrayOutputWithContext(context.Background())
}

func (i RouteTableRouteArray) ToRouteTableRouteArrayOutputWithContext(ctx context.Context) RouteTableRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableRouteArrayOutput)
}

type RouteTableRouteOutput struct{ *pulumi.OutputState }

func (RouteTableRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableRoute)(nil)).Elem()
}

func (o RouteTableRouteOutput) ToRouteTableRouteOutput() RouteTableRouteOutput {
	return o
}

func (o RouteTableRouteOutput) ToRouteTableRouteOutputWithContext(ctx context.Context) RouteTableRouteOutput {
	return o
}

// The CIDR block of the route.
func (o RouteTableRouteOutput) CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableRoute) *string { return v.CidrBlock }).(pulumi.StringPtrOutput)
}

// Identifier of a VPC Egress Only Internet Gateway.
func (o RouteTableRouteOutput) EgressOnlyGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableRoute) *string { return v.EgressOnlyGatewayId }).(pulumi.StringPtrOutput)
}

// Identifier of a VPC internet gateway or a virtual private gateway.
func (o RouteTableRouteOutput) GatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableRoute) *string { return v.GatewayId }).(pulumi.StringPtrOutput)
}

// Identifier of an EC2 instance.
func (o RouteTableRouteOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableRoute) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

// The Ipv6 CIDR block of the route.
func (o RouteTableRouteOutput) Ipv6CidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableRoute) *string { return v.Ipv6CidrBlock }).(pulumi.StringPtrOutput)
}

// Identifier of a VPC NAT gateway.
func (o RouteTableRouteOutput) NatGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableRoute) *string { return v.NatGatewayId }).(pulumi.StringPtrOutput)
}

// Identifier of an EC2 network interface.
func (o RouteTableRouteOutput) NetworkInterfaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableRoute) *string { return v.NetworkInterfaceId }).(pulumi.StringPtrOutput)
}

// Identifier of an EC2 Transit Gateway.
func (o RouteTableRouteOutput) TransitGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableRoute) *string { return v.TransitGatewayId }).(pulumi.StringPtrOutput)
}

// Identifier of a VPC peering connection.
func (o RouteTableRouteOutput) VpcPeeringConnectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableRoute) *string { return v.VpcPeeringConnectionId }).(pulumi.StringPtrOutput)
}

type RouteTableRouteArrayOutput struct{ *pulumi.OutputState }

func (RouteTableRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteTableRoute)(nil)).Elem()
}

func (o RouteTableRouteArrayOutput) ToRouteTableRouteArrayOutput() RouteTableRouteArrayOutput {
	return o
}

func (o RouteTableRouteArrayOutput) ToRouteTableRouteArrayOutputWithContext(ctx context.Context) RouteTableRouteArrayOutput {
	return o
}

func (o RouteTableRouteArrayOutput) Index(i pulumi.IntInput) RouteTableRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteTableRoute {
		return vs[0].([]RouteTableRoute)[vs[1].(int)]
	}).(RouteTableRouteOutput)
}

type SecurityGroupEgress struct {
	// List of CIDR blocks.
	CidrBlocks []string `pulumi:"cidrBlocks"`
	// Description of this egress rule.
	Description *string `pulumi:"description"`
	// The start port (or ICMP type number if protocol is "icmp")
	FromPort int `pulumi:"fromPort"`
	// List of IPv6 CIDR blocks.
	Ipv6CidrBlocks []string `pulumi:"ipv6CidrBlocks"`
	// List of prefix list IDs (for allowing access to VPC endpoints)
	PrefixListIds []string `pulumi:"prefixListIds"`
	// The protocol. If you select a protocol of
	// "-1" (semantically equivalent to `"all"`, which is not a valid value here), you must specify a "fromPort" and "toPort" equal to 0. If not icmp, tcp, udp, or "-1" use the [protocol number](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)
	Protocol string `pulumi:"protocol"`
	// List of security group Group Names if using
	// EC2-Classic, or Group IDs if using a VPC.
	SecurityGroups []string `pulumi:"securityGroups"`
	// If true, the security group itself will be added as
	// a source to this egress rule.
	Self *bool `pulumi:"self"`
	// The end range port (or ICMP code if protocol is "icmp").
	ToPort int `pulumi:"toPort"`
}

// SecurityGroupEgressInput is an input type that accepts SecurityGroupEgressArgs and SecurityGroupEgressOutput values.
// You can construct a concrete instance of `SecurityGroupEgressInput` via:
//
// 		 SecurityGroupEgressArgs{...}
//
type SecurityGroupEgressInput interface {
	pulumi.Input

	ToSecurityGroupEgressOutput() SecurityGroupEgressOutput
	ToSecurityGroupEgressOutputWithContext(context.Context) SecurityGroupEgressOutput
}

type SecurityGroupEgressArgs struct {
	// List of CIDR blocks.
	CidrBlocks pulumi.StringArrayInput `pulumi:"cidrBlocks"`
	// Description of this egress rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The start port (or ICMP type number if protocol is "icmp")
	FromPort pulumi.IntInput `pulumi:"fromPort"`
	// List of IPv6 CIDR blocks.
	Ipv6CidrBlocks pulumi.StringArrayInput `pulumi:"ipv6CidrBlocks"`
	// List of prefix list IDs (for allowing access to VPC endpoints)
	PrefixListIds pulumi.StringArrayInput `pulumi:"prefixListIds"`
	// The protocol. If you select a protocol of
	// "-1" (semantically equivalent to `"all"`, which is not a valid value here), you must specify a "fromPort" and "toPort" equal to 0. If not icmp, tcp, udp, or "-1" use the [protocol number](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// List of security group Group Names if using
	// EC2-Classic, or Group IDs if using a VPC.
	SecurityGroups pulumi.StringArrayInput `pulumi:"securityGroups"`
	// If true, the security group itself will be added as
	// a source to this egress rule.
	Self pulumi.BoolPtrInput `pulumi:"self"`
	// The end range port (or ICMP code if protocol is "icmp").
	ToPort pulumi.IntInput `pulumi:"toPort"`
}

func (SecurityGroupEgressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupEgress)(nil)).Elem()
}

func (i SecurityGroupEgressArgs) ToSecurityGroupEgressOutput() SecurityGroupEgressOutput {
	return i.ToSecurityGroupEgressOutputWithContext(context.Background())
}

func (i SecurityGroupEgressArgs) ToSecurityGroupEgressOutputWithContext(ctx context.Context) SecurityGroupEgressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupEgressOutput)
}

// SecurityGroupEgressArrayInput is an input type that accepts SecurityGroupEgressArray and SecurityGroupEgressArrayOutput values.
// You can construct a concrete instance of `SecurityGroupEgressArrayInput` via:
//
// 		 SecurityGroupEgressArray{ SecurityGroupEgressArgs{...} }
//
type SecurityGroupEgressArrayInput interface {
	pulumi.Input

	ToSecurityGroupEgressArrayOutput() SecurityGroupEgressArrayOutput
	ToSecurityGroupEgressArrayOutputWithContext(context.Context) SecurityGroupEgressArrayOutput
}

type SecurityGroupEgressArray []SecurityGroupEgressInput

func (SecurityGroupEgressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupEgress)(nil)).Elem()
}

func (i SecurityGroupEgressArray) ToSecurityGroupEgressArrayOutput() SecurityGroupEgressArrayOutput {
	return i.ToSecurityGroupEgressArrayOutputWithContext(context.Background())
}

func (i SecurityGroupEgressArray) ToSecurityGroupEgressArrayOutputWithContext(ctx context.Context) SecurityGroupEgressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupEgressArrayOutput)
}

type SecurityGroupEgressOutput struct{ *pulumi.OutputState }

func (SecurityGroupEgressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupEgress)(nil)).Elem()
}

func (o SecurityGroupEgressOutput) ToSecurityGroupEgressOutput() SecurityGroupEgressOutput {
	return o
}

func (o SecurityGroupEgressOutput) ToSecurityGroupEgressOutputWithContext(ctx context.Context) SecurityGroupEgressOutput {
	return o
}

// List of CIDR blocks.
func (o SecurityGroupEgressOutput) CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityGroupEgress) []string { return v.CidrBlocks }).(pulumi.StringArrayOutput)
}

// Description of this egress rule.
func (o SecurityGroupEgressOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityGroupEgress) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The start port (or ICMP type number if protocol is "icmp")
func (o SecurityGroupEgressOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v SecurityGroupEgress) int { return v.FromPort }).(pulumi.IntOutput)
}

// List of IPv6 CIDR blocks.
func (o SecurityGroupEgressOutput) Ipv6CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityGroupEgress) []string { return v.Ipv6CidrBlocks }).(pulumi.StringArrayOutput)
}

// List of prefix list IDs (for allowing access to VPC endpoints)
func (o SecurityGroupEgressOutput) PrefixListIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityGroupEgress) []string { return v.PrefixListIds }).(pulumi.StringArrayOutput)
}

// The protocol. If you select a protocol of
// "-1" (semantically equivalent to `"all"`, which is not a valid value here), you must specify a "fromPort" and "toPort" equal to 0. If not icmp, tcp, udp, or "-1" use the [protocol number](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)
func (o SecurityGroupEgressOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupEgress) string { return v.Protocol }).(pulumi.StringOutput)
}

// List of security group Group Names if using
// EC2-Classic, or Group IDs if using a VPC.
func (o SecurityGroupEgressOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityGroupEgress) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

// If true, the security group itself will be added as
// a source to this egress rule.
func (o SecurityGroupEgressOutput) Self() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecurityGroupEgress) *bool { return v.Self }).(pulumi.BoolPtrOutput)
}

// The end range port (or ICMP code if protocol is "icmp").
func (o SecurityGroupEgressOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v SecurityGroupEgress) int { return v.ToPort }).(pulumi.IntOutput)
}

type SecurityGroupEgressArrayOutput struct{ *pulumi.OutputState }

func (SecurityGroupEgressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupEgress)(nil)).Elem()
}

func (o SecurityGroupEgressArrayOutput) ToSecurityGroupEgressArrayOutput() SecurityGroupEgressArrayOutput {
	return o
}

func (o SecurityGroupEgressArrayOutput) ToSecurityGroupEgressArrayOutputWithContext(ctx context.Context) SecurityGroupEgressArrayOutput {
	return o
}

func (o SecurityGroupEgressArrayOutput) Index(i pulumi.IntInput) SecurityGroupEgressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityGroupEgress {
		return vs[0].([]SecurityGroupEgress)[vs[1].(int)]
	}).(SecurityGroupEgressOutput)
}

type SecurityGroupIngress struct {
	// List of CIDR blocks.
	CidrBlocks []string `pulumi:"cidrBlocks"`
	// Description of this egress rule.
	Description *string `pulumi:"description"`
	// The start port (or ICMP type number if protocol is "icmp")
	FromPort int `pulumi:"fromPort"`
	// List of IPv6 CIDR blocks.
	Ipv6CidrBlocks []string `pulumi:"ipv6CidrBlocks"`
	// List of prefix list IDs (for allowing access to VPC endpoints)
	PrefixListIds []string `pulumi:"prefixListIds"`
	// The protocol. If you select a protocol of
	// "-1" (semantically equivalent to `"all"`, which is not a valid value here), you must specify a "fromPort" and "toPort" equal to 0. If not icmp, tcp, udp, or "-1" use the [protocol number](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)
	Protocol string `pulumi:"protocol"`
	// List of security group Group Names if using
	// EC2-Classic, or Group IDs if using a VPC.
	SecurityGroups []string `pulumi:"securityGroups"`
	// If true, the security group itself will be added as
	// a source to this egress rule.
	Self *bool `pulumi:"self"`
	// The end range port (or ICMP code if protocol is "icmp").
	ToPort int `pulumi:"toPort"`
}

// SecurityGroupIngressInput is an input type that accepts SecurityGroupIngressArgs and SecurityGroupIngressOutput values.
// You can construct a concrete instance of `SecurityGroupIngressInput` via:
//
// 		 SecurityGroupIngressArgs{...}
//
type SecurityGroupIngressInput interface {
	pulumi.Input

	ToSecurityGroupIngressOutput() SecurityGroupIngressOutput
	ToSecurityGroupIngressOutputWithContext(context.Context) SecurityGroupIngressOutput
}

type SecurityGroupIngressArgs struct {
	// List of CIDR blocks.
	CidrBlocks pulumi.StringArrayInput `pulumi:"cidrBlocks"`
	// Description of this egress rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The start port (or ICMP type number if protocol is "icmp")
	FromPort pulumi.IntInput `pulumi:"fromPort"`
	// List of IPv6 CIDR blocks.
	Ipv6CidrBlocks pulumi.StringArrayInput `pulumi:"ipv6CidrBlocks"`
	// List of prefix list IDs (for allowing access to VPC endpoints)
	PrefixListIds pulumi.StringArrayInput `pulumi:"prefixListIds"`
	// The protocol. If you select a protocol of
	// "-1" (semantically equivalent to `"all"`, which is not a valid value here), you must specify a "fromPort" and "toPort" equal to 0. If not icmp, tcp, udp, or "-1" use the [protocol number](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// List of security group Group Names if using
	// EC2-Classic, or Group IDs if using a VPC.
	SecurityGroups pulumi.StringArrayInput `pulumi:"securityGroups"`
	// If true, the security group itself will be added as
	// a source to this egress rule.
	Self pulumi.BoolPtrInput `pulumi:"self"`
	// The end range port (or ICMP code if protocol is "icmp").
	ToPort pulumi.IntInput `pulumi:"toPort"`
}

func (SecurityGroupIngressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupIngress)(nil)).Elem()
}

func (i SecurityGroupIngressArgs) ToSecurityGroupIngressOutput() SecurityGroupIngressOutput {
	return i.ToSecurityGroupIngressOutputWithContext(context.Background())
}

func (i SecurityGroupIngressArgs) ToSecurityGroupIngressOutputWithContext(ctx context.Context) SecurityGroupIngressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupIngressOutput)
}

// SecurityGroupIngressArrayInput is an input type that accepts SecurityGroupIngressArray and SecurityGroupIngressArrayOutput values.
// You can construct a concrete instance of `SecurityGroupIngressArrayInput` via:
//
// 		 SecurityGroupIngressArray{ SecurityGroupIngressArgs{...} }
//
type SecurityGroupIngressArrayInput interface {
	pulumi.Input

	ToSecurityGroupIngressArrayOutput() SecurityGroupIngressArrayOutput
	ToSecurityGroupIngressArrayOutputWithContext(context.Context) SecurityGroupIngressArrayOutput
}

type SecurityGroupIngressArray []SecurityGroupIngressInput

func (SecurityGroupIngressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupIngress)(nil)).Elem()
}

func (i SecurityGroupIngressArray) ToSecurityGroupIngressArrayOutput() SecurityGroupIngressArrayOutput {
	return i.ToSecurityGroupIngressArrayOutputWithContext(context.Background())
}

func (i SecurityGroupIngressArray) ToSecurityGroupIngressArrayOutputWithContext(ctx context.Context) SecurityGroupIngressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupIngressArrayOutput)
}

type SecurityGroupIngressOutput struct{ *pulumi.OutputState }

func (SecurityGroupIngressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupIngress)(nil)).Elem()
}

func (o SecurityGroupIngressOutput) ToSecurityGroupIngressOutput() SecurityGroupIngressOutput {
	return o
}

func (o SecurityGroupIngressOutput) ToSecurityGroupIngressOutputWithContext(ctx context.Context) SecurityGroupIngressOutput {
	return o
}

// List of CIDR blocks.
func (o SecurityGroupIngressOutput) CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityGroupIngress) []string { return v.CidrBlocks }).(pulumi.StringArrayOutput)
}

// Description of this egress rule.
func (o SecurityGroupIngressOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityGroupIngress) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The start port (or ICMP type number if protocol is "icmp")
func (o SecurityGroupIngressOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v SecurityGroupIngress) int { return v.FromPort }).(pulumi.IntOutput)
}

// List of IPv6 CIDR blocks.
func (o SecurityGroupIngressOutput) Ipv6CidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityGroupIngress) []string { return v.Ipv6CidrBlocks }).(pulumi.StringArrayOutput)
}

// List of prefix list IDs (for allowing access to VPC endpoints)
func (o SecurityGroupIngressOutput) PrefixListIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityGroupIngress) []string { return v.PrefixListIds }).(pulumi.StringArrayOutput)
}

// The protocol. If you select a protocol of
// "-1" (semantically equivalent to `"all"`, which is not a valid value here), you must specify a "fromPort" and "toPort" equal to 0. If not icmp, tcp, udp, or "-1" use the [protocol number](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)
func (o SecurityGroupIngressOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupIngress) string { return v.Protocol }).(pulumi.StringOutput)
}

// List of security group Group Names if using
// EC2-Classic, or Group IDs if using a VPC.
func (o SecurityGroupIngressOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityGroupIngress) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

// If true, the security group itself will be added as
// a source to this egress rule.
func (o SecurityGroupIngressOutput) Self() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SecurityGroupIngress) *bool { return v.Self }).(pulumi.BoolPtrOutput)
}

// The end range port (or ICMP code if protocol is "icmp").
func (o SecurityGroupIngressOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v SecurityGroupIngress) int { return v.ToPort }).(pulumi.IntOutput)
}

type SecurityGroupIngressArrayOutput struct{ *pulumi.OutputState }

func (SecurityGroupIngressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupIngress)(nil)).Elem()
}

func (o SecurityGroupIngressArrayOutput) ToSecurityGroupIngressArrayOutput() SecurityGroupIngressArrayOutput {
	return o
}

func (o SecurityGroupIngressArrayOutput) ToSecurityGroupIngressArrayOutputWithContext(ctx context.Context) SecurityGroupIngressArrayOutput {
	return o
}

func (o SecurityGroupIngressArrayOutput) Index(i pulumi.IntInput) SecurityGroupIngressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityGroupIngress {
		return vs[0].([]SecurityGroupIngress)[vs[1].(int)]
	}).(SecurityGroupIngressOutput)
}

type SpotFleetRequestLaunchSpecification struct {
	Ami                      string                                                    `pulumi:"ami"`
	AssociatePublicIpAddress *bool                                                     `pulumi:"associatePublicIpAddress"`
	AvailabilityZone         *string                                                   `pulumi:"availabilityZone"`
	EbsBlockDevices          []SpotFleetRequestLaunchSpecificationEbsBlockDevice       `pulumi:"ebsBlockDevices"`
	EbsOptimized             *bool                                                     `pulumi:"ebsOptimized"`
	EphemeralBlockDevices    []SpotFleetRequestLaunchSpecificationEphemeralBlockDevice `pulumi:"ephemeralBlockDevices"`
	IamInstanceProfile       *string                                                   `pulumi:"iamInstanceProfile"`
	IamInstanceProfileArn    *string                                                   `pulumi:"iamInstanceProfileArn"`
	InstanceType             string                                                    `pulumi:"instanceType"`
	KeyName                  *string                                                   `pulumi:"keyName"`
	Monitoring               *bool                                                     `pulumi:"monitoring"`
	PlacementGroup           *string                                                   `pulumi:"placementGroup"`
	PlacementTenancy         *string                                                   `pulumi:"placementTenancy"`
	RootBlockDevices         []SpotFleetRequestLaunchSpecificationRootBlockDevice      `pulumi:"rootBlockDevices"`
	// The maximum bid price per unit hour.
	SpotPrice *string `pulumi:"spotPrice"`
	SubnetId  *string `pulumi:"subnetId"`
	// A mapping of tags to assign to the resource.
	Tags                map[string]interface{} `pulumi:"tags"`
	UserData            *string                `pulumi:"userData"`
	VpcSecurityGroupIds []string               `pulumi:"vpcSecurityGroupIds"`
	WeightedCapacity    *string                `pulumi:"weightedCapacity"`
}

// SpotFleetRequestLaunchSpecificationInput is an input type that accepts SpotFleetRequestLaunchSpecificationArgs and SpotFleetRequestLaunchSpecificationOutput values.
// You can construct a concrete instance of `SpotFleetRequestLaunchSpecificationInput` via:
//
// 		 SpotFleetRequestLaunchSpecificationArgs{...}
//
type SpotFleetRequestLaunchSpecificationInput interface {
	pulumi.Input

	ToSpotFleetRequestLaunchSpecificationOutput() SpotFleetRequestLaunchSpecificationOutput
	ToSpotFleetRequestLaunchSpecificationOutputWithContext(context.Context) SpotFleetRequestLaunchSpecificationOutput
}

type SpotFleetRequestLaunchSpecificationArgs struct {
	Ami                      pulumi.StringInput                                                `pulumi:"ami"`
	AssociatePublicIpAddress pulumi.BoolPtrInput                                               `pulumi:"associatePublicIpAddress"`
	AvailabilityZone         pulumi.StringPtrInput                                             `pulumi:"availabilityZone"`
	EbsBlockDevices          SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayInput       `pulumi:"ebsBlockDevices"`
	EbsOptimized             pulumi.BoolPtrInput                                               `pulumi:"ebsOptimized"`
	EphemeralBlockDevices    SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayInput `pulumi:"ephemeralBlockDevices"`
	IamInstanceProfile       pulumi.StringPtrInput                                             `pulumi:"iamInstanceProfile"`
	IamInstanceProfileArn    pulumi.StringPtrInput                                             `pulumi:"iamInstanceProfileArn"`
	InstanceType             pulumi.StringInput                                                `pulumi:"instanceType"`
	KeyName                  pulumi.StringPtrInput                                             `pulumi:"keyName"`
	Monitoring               pulumi.BoolPtrInput                                               `pulumi:"monitoring"`
	PlacementGroup           pulumi.StringPtrInput                                             `pulumi:"placementGroup"`
	PlacementTenancy         pulumi.StringPtrInput                                             `pulumi:"placementTenancy"`
	RootBlockDevices         SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayInput      `pulumi:"rootBlockDevices"`
	// The maximum bid price per unit hour.
	SpotPrice pulumi.StringPtrInput `pulumi:"spotPrice"`
	SubnetId  pulumi.StringPtrInput `pulumi:"subnetId"`
	// A mapping of tags to assign to the resource.
	Tags                pulumi.MapInput         `pulumi:"tags"`
	UserData            pulumi.StringPtrInput   `pulumi:"userData"`
	VpcSecurityGroupIds pulumi.StringArrayInput `pulumi:"vpcSecurityGroupIds"`
	WeightedCapacity    pulumi.StringPtrInput   `pulumi:"weightedCapacity"`
}

func (SpotFleetRequestLaunchSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchSpecification)(nil)).Elem()
}

func (i SpotFleetRequestLaunchSpecificationArgs) ToSpotFleetRequestLaunchSpecificationOutput() SpotFleetRequestLaunchSpecificationOutput {
	return i.ToSpotFleetRequestLaunchSpecificationOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchSpecificationArgs) ToSpotFleetRequestLaunchSpecificationOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchSpecificationOutput)
}

// SpotFleetRequestLaunchSpecificationArrayInput is an input type that accepts SpotFleetRequestLaunchSpecificationArray and SpotFleetRequestLaunchSpecificationArrayOutput values.
// You can construct a concrete instance of `SpotFleetRequestLaunchSpecificationArrayInput` via:
//
// 		 SpotFleetRequestLaunchSpecificationArray{ SpotFleetRequestLaunchSpecificationArgs{...} }
//
type SpotFleetRequestLaunchSpecificationArrayInput interface {
	pulumi.Input

	ToSpotFleetRequestLaunchSpecificationArrayOutput() SpotFleetRequestLaunchSpecificationArrayOutput
	ToSpotFleetRequestLaunchSpecificationArrayOutputWithContext(context.Context) SpotFleetRequestLaunchSpecificationArrayOutput
}

type SpotFleetRequestLaunchSpecificationArray []SpotFleetRequestLaunchSpecificationInput

func (SpotFleetRequestLaunchSpecificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotFleetRequestLaunchSpecification)(nil)).Elem()
}

func (i SpotFleetRequestLaunchSpecificationArray) ToSpotFleetRequestLaunchSpecificationArrayOutput() SpotFleetRequestLaunchSpecificationArrayOutput {
	return i.ToSpotFleetRequestLaunchSpecificationArrayOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchSpecificationArray) ToSpotFleetRequestLaunchSpecificationArrayOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchSpecificationArrayOutput)
}

type SpotFleetRequestLaunchSpecificationOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchSpecification)(nil)).Elem()
}

func (o SpotFleetRequestLaunchSpecificationOutput) ToSpotFleetRequestLaunchSpecificationOutput() SpotFleetRequestLaunchSpecificationOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationOutput) ToSpotFleetRequestLaunchSpecificationOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationOutput) Ami() pulumi.StringOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) string { return v.Ami }).(pulumi.StringOutput)
}

func (o SpotFleetRequestLaunchSpecificationOutput) AssociatePublicIpAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) *bool { return v.AssociatePublicIpAddress }).(pulumi.BoolPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationOutput) EbsBlockDevices() SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) []SpotFleetRequestLaunchSpecificationEbsBlockDevice {
		return v.EbsBlockDevices
	}).(SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput)
}

func (o SpotFleetRequestLaunchSpecificationOutput) EbsOptimized() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) *bool { return v.EbsOptimized }).(pulumi.BoolPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationOutput) EphemeralBlockDevices() SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) []SpotFleetRequestLaunchSpecificationEphemeralBlockDevice {
		return v.EphemeralBlockDevices
	}).(SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput)
}

func (o SpotFleetRequestLaunchSpecificationOutput) IamInstanceProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) *string { return v.IamInstanceProfile }).(pulumi.StringPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationOutput) IamInstanceProfileArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) *string { return v.IamInstanceProfileArn }).(pulumi.StringPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) string { return v.InstanceType }).(pulumi.StringOutput)
}

func (o SpotFleetRequestLaunchSpecificationOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) *string { return v.KeyName }).(pulumi.StringPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationOutput) Monitoring() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) *bool { return v.Monitoring }).(pulumi.BoolPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationOutput) PlacementGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) *string { return v.PlacementGroup }).(pulumi.StringPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationOutput) PlacementTenancy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) *string { return v.PlacementTenancy }).(pulumi.StringPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationOutput) RootBlockDevices() SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) []SpotFleetRequestLaunchSpecificationRootBlockDevice {
		return v.RootBlockDevices
	}).(SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput)
}

// The maximum bid price per unit hour.
func (o SpotFleetRequestLaunchSpecificationOutput) SpotPrice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) *string { return v.SpotPrice }).(pulumi.StringPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// A mapping of tags to assign to the resource.
func (o SpotFleetRequestLaunchSpecificationOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

func (o SpotFleetRequestLaunchSpecificationOutput) UserData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) *string { return v.UserData }).(pulumi.StringPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationOutput) VpcSecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) []string { return v.VpcSecurityGroupIds }).(pulumi.StringArrayOutput)
}

func (o SpotFleetRequestLaunchSpecificationOutput) WeightedCapacity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecification) *string { return v.WeightedCapacity }).(pulumi.StringPtrOutput)
}

type SpotFleetRequestLaunchSpecificationArrayOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchSpecificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotFleetRequestLaunchSpecification)(nil)).Elem()
}

func (o SpotFleetRequestLaunchSpecificationArrayOutput) ToSpotFleetRequestLaunchSpecificationArrayOutput() SpotFleetRequestLaunchSpecificationArrayOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationArrayOutput) ToSpotFleetRequestLaunchSpecificationArrayOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationArrayOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationArrayOutput) Index(i pulumi.IntInput) SpotFleetRequestLaunchSpecificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpotFleetRequestLaunchSpecification {
		return vs[0].([]SpotFleetRequestLaunchSpecification)[vs[1].(int)]
	}).(SpotFleetRequestLaunchSpecificationOutput)
}

type SpotFleetRequestLaunchSpecificationEbsBlockDevice struct {
	DeleteOnTermination *bool   `pulumi:"deleteOnTermination"`
	DeviceName          string  `pulumi:"deviceName"`
	Encrypted           *bool   `pulumi:"encrypted"`
	Iops                *int    `pulumi:"iops"`
	KmsKeyId            *string `pulumi:"kmsKeyId"`
	SnapshotId          *string `pulumi:"snapshotId"`
	VolumeSize          *int    `pulumi:"volumeSize"`
	VolumeType          *string `pulumi:"volumeType"`
}

// SpotFleetRequestLaunchSpecificationEbsBlockDeviceInput is an input type that accepts SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs and SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput values.
// You can construct a concrete instance of `SpotFleetRequestLaunchSpecificationEbsBlockDeviceInput` via:
//
// 		 SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs{...}
//
type SpotFleetRequestLaunchSpecificationEbsBlockDeviceInput interface {
	pulumi.Input

	ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput() SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput
	ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceOutputWithContext(context.Context) SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput
}

type SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs struct {
	DeleteOnTermination pulumi.BoolPtrInput   `pulumi:"deleteOnTermination"`
	DeviceName          pulumi.StringInput    `pulumi:"deviceName"`
	Encrypted           pulumi.BoolPtrInput   `pulumi:"encrypted"`
	Iops                pulumi.IntPtrInput    `pulumi:"iops"`
	KmsKeyId            pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	SnapshotId          pulumi.StringPtrInput `pulumi:"snapshotId"`
	VolumeSize          pulumi.IntPtrInput    `pulumi:"volumeSize"`
	VolumeType          pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchSpecificationEbsBlockDevice)(nil)).Elem()
}

func (i SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs) ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput() SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput {
	return i.ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs) ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput)
}

// SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayInput is an input type that accepts SpotFleetRequestLaunchSpecificationEbsBlockDeviceArray and SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput values.
// You can construct a concrete instance of `SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayInput` via:
//
// 		 SpotFleetRequestLaunchSpecificationEbsBlockDeviceArray{ SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs{...} }
//
type SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayInput interface {
	pulumi.Input

	ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput() SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput
	ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutputWithContext(context.Context) SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput
}

type SpotFleetRequestLaunchSpecificationEbsBlockDeviceArray []SpotFleetRequestLaunchSpecificationEbsBlockDeviceInput

func (SpotFleetRequestLaunchSpecificationEbsBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotFleetRequestLaunchSpecificationEbsBlockDevice)(nil)).Elem()
}

func (i SpotFleetRequestLaunchSpecificationEbsBlockDeviceArray) ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput() SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput {
	return i.ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchSpecificationEbsBlockDeviceArray) ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput)
}

type SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchSpecificationEbsBlockDevice)(nil)).Elem()
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput) ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput() SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput) ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationEbsBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationEbsBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationEbsBlockDevice) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationEbsBlockDevice) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationEbsBlockDevice) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationEbsBlockDevice) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationEbsBlockDevice) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationEbsBlockDevice) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotFleetRequestLaunchSpecificationEbsBlockDevice)(nil)).Elem()
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput) ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput() SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput) ToSpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput) Index(i pulumi.IntInput) SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpotFleetRequestLaunchSpecificationEbsBlockDevice {
		return vs[0].([]SpotFleetRequestLaunchSpecificationEbsBlockDevice)[vs[1].(int)]
	}).(SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput)
}

type SpotFleetRequestLaunchSpecificationEphemeralBlockDevice struct {
	DeviceName  string `pulumi:"deviceName"`
	VirtualName string `pulumi:"virtualName"`
}

// SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceInput is an input type that accepts SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgs and SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput values.
// You can construct a concrete instance of `SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceInput` via:
//
// 		 SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgs{...}
//
type SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceInput interface {
	pulumi.Input

	ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput() SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput
	ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutputWithContext(context.Context) SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput
}

type SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgs struct {
	DeviceName  pulumi.StringInput `pulumi:"deviceName"`
	VirtualName pulumi.StringInput `pulumi:"virtualName"`
}

func (SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchSpecificationEphemeralBlockDevice)(nil)).Elem()
}

func (i SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgs) ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput() SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput {
	return i.ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgs) ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput)
}

// SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayInput is an input type that accepts SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArray and SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput values.
// You can construct a concrete instance of `SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayInput` via:
//
// 		 SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArray{ SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgs{...} }
//
type SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayInput interface {
	pulumi.Input

	ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput() SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput
	ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutputWithContext(context.Context) SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput
}

type SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArray []SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceInput

func (SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotFleetRequestLaunchSpecificationEphemeralBlockDevice)(nil)).Elem()
}

func (i SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArray) ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput() SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput {
	return i.ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArray) ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput)
}

type SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchSpecificationEphemeralBlockDevice)(nil)).Elem()
}

func (o SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput) ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput() SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput) ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationEphemeralBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

func (o SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput) VirtualName() pulumi.StringOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationEphemeralBlockDevice) string { return v.VirtualName }).(pulumi.StringOutput)
}

type SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotFleetRequestLaunchSpecificationEphemeralBlockDevice)(nil)).Elem()
}

func (o SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput) ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput() SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput) ToSpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput) Index(i pulumi.IntInput) SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpotFleetRequestLaunchSpecificationEphemeralBlockDevice {
		return vs[0].([]SpotFleetRequestLaunchSpecificationEphemeralBlockDevice)[vs[1].(int)]
	}).(SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput)
}

type SpotFleetRequestLaunchSpecificationRootBlockDevice struct {
	DeleteOnTermination *bool   `pulumi:"deleteOnTermination"`
	Encrypted           *bool   `pulumi:"encrypted"`
	Iops                *int    `pulumi:"iops"`
	KmsKeyId            *string `pulumi:"kmsKeyId"`
	VolumeSize          *int    `pulumi:"volumeSize"`
	VolumeType          *string `pulumi:"volumeType"`
}

// SpotFleetRequestLaunchSpecificationRootBlockDeviceInput is an input type that accepts SpotFleetRequestLaunchSpecificationRootBlockDeviceArgs and SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput values.
// You can construct a concrete instance of `SpotFleetRequestLaunchSpecificationRootBlockDeviceInput` via:
//
// 		 SpotFleetRequestLaunchSpecificationRootBlockDeviceArgs{...}
//
type SpotFleetRequestLaunchSpecificationRootBlockDeviceInput interface {
	pulumi.Input

	ToSpotFleetRequestLaunchSpecificationRootBlockDeviceOutput() SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput
	ToSpotFleetRequestLaunchSpecificationRootBlockDeviceOutputWithContext(context.Context) SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput
}

type SpotFleetRequestLaunchSpecificationRootBlockDeviceArgs struct {
	DeleteOnTermination pulumi.BoolPtrInput   `pulumi:"deleteOnTermination"`
	Encrypted           pulumi.BoolPtrInput   `pulumi:"encrypted"`
	Iops                pulumi.IntPtrInput    `pulumi:"iops"`
	KmsKeyId            pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	VolumeSize          pulumi.IntPtrInput    `pulumi:"volumeSize"`
	VolumeType          pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (SpotFleetRequestLaunchSpecificationRootBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchSpecificationRootBlockDevice)(nil)).Elem()
}

func (i SpotFleetRequestLaunchSpecificationRootBlockDeviceArgs) ToSpotFleetRequestLaunchSpecificationRootBlockDeviceOutput() SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput {
	return i.ToSpotFleetRequestLaunchSpecificationRootBlockDeviceOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchSpecificationRootBlockDeviceArgs) ToSpotFleetRequestLaunchSpecificationRootBlockDeviceOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput)
}

// SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayInput is an input type that accepts SpotFleetRequestLaunchSpecificationRootBlockDeviceArray and SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput values.
// You can construct a concrete instance of `SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayInput` via:
//
// 		 SpotFleetRequestLaunchSpecificationRootBlockDeviceArray{ SpotFleetRequestLaunchSpecificationRootBlockDeviceArgs{...} }
//
type SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayInput interface {
	pulumi.Input

	ToSpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput() SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput
	ToSpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutputWithContext(context.Context) SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput
}

type SpotFleetRequestLaunchSpecificationRootBlockDeviceArray []SpotFleetRequestLaunchSpecificationRootBlockDeviceInput

func (SpotFleetRequestLaunchSpecificationRootBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotFleetRequestLaunchSpecificationRootBlockDevice)(nil)).Elem()
}

func (i SpotFleetRequestLaunchSpecificationRootBlockDeviceArray) ToSpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput() SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput {
	return i.ToSpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutputWithContext(context.Background())
}

func (i SpotFleetRequestLaunchSpecificationRootBlockDeviceArray) ToSpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput)
}

type SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotFleetRequestLaunchSpecificationRootBlockDevice)(nil)).Elem()
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput) ToSpotFleetRequestLaunchSpecificationRootBlockDeviceOutput() SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput) ToSpotFleetRequestLaunchSpecificationRootBlockDeviceOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationRootBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationRootBlockDevice) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationRootBlockDevice) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationRootBlockDevice) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationRootBlockDevice) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotFleetRequestLaunchSpecificationRootBlockDevice) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotFleetRequestLaunchSpecificationRootBlockDevice)(nil)).Elem()
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput) ToSpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput() SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput) ToSpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutputWithContext(ctx context.Context) SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput {
	return o
}

func (o SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput) Index(i pulumi.IntInput) SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpotFleetRequestLaunchSpecificationRootBlockDevice {
		return vs[0].([]SpotFleetRequestLaunchSpecificationRootBlockDevice)[vs[1].(int)]
	}).(SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput)
}

type SpotInstanceRequestCreditSpecification struct {
	// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
	CpuCredits *string `pulumi:"cpuCredits"`
}

// SpotInstanceRequestCreditSpecificationInput is an input type that accepts SpotInstanceRequestCreditSpecificationArgs and SpotInstanceRequestCreditSpecificationOutput values.
// You can construct a concrete instance of `SpotInstanceRequestCreditSpecificationInput` via:
//
// 		 SpotInstanceRequestCreditSpecificationArgs{...}
//
type SpotInstanceRequestCreditSpecificationInput interface {
	pulumi.Input

	ToSpotInstanceRequestCreditSpecificationOutput() SpotInstanceRequestCreditSpecificationOutput
	ToSpotInstanceRequestCreditSpecificationOutputWithContext(context.Context) SpotInstanceRequestCreditSpecificationOutput
}

type SpotInstanceRequestCreditSpecificationArgs struct {
	// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
	CpuCredits pulumi.StringPtrInput `pulumi:"cpuCredits"`
}

func (SpotInstanceRequestCreditSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestCreditSpecification)(nil)).Elem()
}

func (i SpotInstanceRequestCreditSpecificationArgs) ToSpotInstanceRequestCreditSpecificationOutput() SpotInstanceRequestCreditSpecificationOutput {
	return i.ToSpotInstanceRequestCreditSpecificationOutputWithContext(context.Background())
}

func (i SpotInstanceRequestCreditSpecificationArgs) ToSpotInstanceRequestCreditSpecificationOutputWithContext(ctx context.Context) SpotInstanceRequestCreditSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestCreditSpecificationOutput)
}

func (i SpotInstanceRequestCreditSpecificationArgs) ToSpotInstanceRequestCreditSpecificationPtrOutput() SpotInstanceRequestCreditSpecificationPtrOutput {
	return i.ToSpotInstanceRequestCreditSpecificationPtrOutputWithContext(context.Background())
}

func (i SpotInstanceRequestCreditSpecificationArgs) ToSpotInstanceRequestCreditSpecificationPtrOutputWithContext(ctx context.Context) SpotInstanceRequestCreditSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestCreditSpecificationOutput).ToSpotInstanceRequestCreditSpecificationPtrOutputWithContext(ctx)
}

// SpotInstanceRequestCreditSpecificationPtrInput is an input type that accepts SpotInstanceRequestCreditSpecificationArgs, SpotInstanceRequestCreditSpecificationPtr and SpotInstanceRequestCreditSpecificationPtrOutput values.
// You can construct a concrete instance of `SpotInstanceRequestCreditSpecificationPtrInput` via:
//
// 		 SpotInstanceRequestCreditSpecificationArgs{...}
//
//  or:
//
// 		 nil
//
type SpotInstanceRequestCreditSpecificationPtrInput interface {
	pulumi.Input

	ToSpotInstanceRequestCreditSpecificationPtrOutput() SpotInstanceRequestCreditSpecificationPtrOutput
	ToSpotInstanceRequestCreditSpecificationPtrOutputWithContext(context.Context) SpotInstanceRequestCreditSpecificationPtrOutput
}

type spotInstanceRequestCreditSpecificationPtrType SpotInstanceRequestCreditSpecificationArgs

func SpotInstanceRequestCreditSpecificationPtr(v *SpotInstanceRequestCreditSpecificationArgs) SpotInstanceRequestCreditSpecificationPtrInput {
	return (*spotInstanceRequestCreditSpecificationPtrType)(v)
}

func (*spotInstanceRequestCreditSpecificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpotInstanceRequestCreditSpecification)(nil)).Elem()
}

func (i *spotInstanceRequestCreditSpecificationPtrType) ToSpotInstanceRequestCreditSpecificationPtrOutput() SpotInstanceRequestCreditSpecificationPtrOutput {
	return i.ToSpotInstanceRequestCreditSpecificationPtrOutputWithContext(context.Background())
}

func (i *spotInstanceRequestCreditSpecificationPtrType) ToSpotInstanceRequestCreditSpecificationPtrOutputWithContext(ctx context.Context) SpotInstanceRequestCreditSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestCreditSpecificationPtrOutput)
}

type SpotInstanceRequestCreditSpecificationOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestCreditSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestCreditSpecification)(nil)).Elem()
}

func (o SpotInstanceRequestCreditSpecificationOutput) ToSpotInstanceRequestCreditSpecificationOutput() SpotInstanceRequestCreditSpecificationOutput {
	return o
}

func (o SpotInstanceRequestCreditSpecificationOutput) ToSpotInstanceRequestCreditSpecificationOutputWithContext(ctx context.Context) SpotInstanceRequestCreditSpecificationOutput {
	return o
}

func (o SpotInstanceRequestCreditSpecificationOutput) ToSpotInstanceRequestCreditSpecificationPtrOutput() SpotInstanceRequestCreditSpecificationPtrOutput {
	return o.ToSpotInstanceRequestCreditSpecificationPtrOutputWithContext(context.Background())
}

func (o SpotInstanceRequestCreditSpecificationOutput) ToSpotInstanceRequestCreditSpecificationPtrOutputWithContext(ctx context.Context) SpotInstanceRequestCreditSpecificationPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestCreditSpecification) *SpotInstanceRequestCreditSpecification {
		return &v
	}).(SpotInstanceRequestCreditSpecificationPtrOutput)
}

// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
func (o SpotInstanceRequestCreditSpecificationOutput) CpuCredits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestCreditSpecification) *string { return v.CpuCredits }).(pulumi.StringPtrOutput)
}

type SpotInstanceRequestCreditSpecificationPtrOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestCreditSpecificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpotInstanceRequestCreditSpecification)(nil)).Elem()
}

func (o SpotInstanceRequestCreditSpecificationPtrOutput) ToSpotInstanceRequestCreditSpecificationPtrOutput() SpotInstanceRequestCreditSpecificationPtrOutput {
	return o
}

func (o SpotInstanceRequestCreditSpecificationPtrOutput) ToSpotInstanceRequestCreditSpecificationPtrOutputWithContext(ctx context.Context) SpotInstanceRequestCreditSpecificationPtrOutput {
	return o
}

func (o SpotInstanceRequestCreditSpecificationPtrOutput) Elem() SpotInstanceRequestCreditSpecificationOutput {
	return o.ApplyT(func(v *SpotInstanceRequestCreditSpecification) SpotInstanceRequestCreditSpecification { return *v }).(SpotInstanceRequestCreditSpecificationOutput)
}

// The credit option for CPU usage. Can be `"standard"` or `"unlimited"`. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
func (o SpotInstanceRequestCreditSpecificationPtrOutput) CpuCredits() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestCreditSpecification) *string { return v.CpuCredits }).(pulumi.StringPtrOutput)
}

type SpotInstanceRequestEbsBlockDevice struct {
	// Whether the volume should be destroyed
	// on instance termination (Default: `true`).
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// The name of the device to mount.
	DeviceName string `pulumi:"deviceName"`
	// Enables [EBS
	// encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
	// on the volume (Default: `false`). Cannot be used with `snapshotId`. Must be configured to perform drift detection.
	Encrypted *bool `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This must be set with a `volumeType` of `"io1"`.
	Iops *int `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The Snapshot ID to mount.
	SnapshotId *string `pulumi:"snapshotId"`
	VolumeId   *string `pulumi:"volumeId"`
	// The size of the volume in gibibytes (GiB).
	VolumeSize *int `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`,
	// or `"io1"`. (Default: `"gp2"`).
	VolumeType *string `pulumi:"volumeType"`
}

// SpotInstanceRequestEbsBlockDeviceInput is an input type that accepts SpotInstanceRequestEbsBlockDeviceArgs and SpotInstanceRequestEbsBlockDeviceOutput values.
// You can construct a concrete instance of `SpotInstanceRequestEbsBlockDeviceInput` via:
//
// 		 SpotInstanceRequestEbsBlockDeviceArgs{...}
//
type SpotInstanceRequestEbsBlockDeviceInput interface {
	pulumi.Input

	ToSpotInstanceRequestEbsBlockDeviceOutput() SpotInstanceRequestEbsBlockDeviceOutput
	ToSpotInstanceRequestEbsBlockDeviceOutputWithContext(context.Context) SpotInstanceRequestEbsBlockDeviceOutput
}

type SpotInstanceRequestEbsBlockDeviceArgs struct {
	// Whether the volume should be destroyed
	// on instance termination (Default: `true`).
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// The name of the device to mount.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// Enables [EBS
	// encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
	// on the volume (Default: `false`). Cannot be used with `snapshotId`. Must be configured to perform drift detection.
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This must be set with a `volumeType` of `"io1"`.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	// The Snapshot ID to mount.
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
	VolumeId   pulumi.StringPtrInput `pulumi:"volumeId"`
	// The size of the volume in gibibytes (GiB).
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`,
	// or `"io1"`. (Default: `"gp2"`).
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (SpotInstanceRequestEbsBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestEbsBlockDevice)(nil)).Elem()
}

func (i SpotInstanceRequestEbsBlockDeviceArgs) ToSpotInstanceRequestEbsBlockDeviceOutput() SpotInstanceRequestEbsBlockDeviceOutput {
	return i.ToSpotInstanceRequestEbsBlockDeviceOutputWithContext(context.Background())
}

func (i SpotInstanceRequestEbsBlockDeviceArgs) ToSpotInstanceRequestEbsBlockDeviceOutputWithContext(ctx context.Context) SpotInstanceRequestEbsBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestEbsBlockDeviceOutput)
}

// SpotInstanceRequestEbsBlockDeviceArrayInput is an input type that accepts SpotInstanceRequestEbsBlockDeviceArray and SpotInstanceRequestEbsBlockDeviceArrayOutput values.
// You can construct a concrete instance of `SpotInstanceRequestEbsBlockDeviceArrayInput` via:
//
// 		 SpotInstanceRequestEbsBlockDeviceArray{ SpotInstanceRequestEbsBlockDeviceArgs{...} }
//
type SpotInstanceRequestEbsBlockDeviceArrayInput interface {
	pulumi.Input

	ToSpotInstanceRequestEbsBlockDeviceArrayOutput() SpotInstanceRequestEbsBlockDeviceArrayOutput
	ToSpotInstanceRequestEbsBlockDeviceArrayOutputWithContext(context.Context) SpotInstanceRequestEbsBlockDeviceArrayOutput
}

type SpotInstanceRequestEbsBlockDeviceArray []SpotInstanceRequestEbsBlockDeviceInput

func (SpotInstanceRequestEbsBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotInstanceRequestEbsBlockDevice)(nil)).Elem()
}

func (i SpotInstanceRequestEbsBlockDeviceArray) ToSpotInstanceRequestEbsBlockDeviceArrayOutput() SpotInstanceRequestEbsBlockDeviceArrayOutput {
	return i.ToSpotInstanceRequestEbsBlockDeviceArrayOutputWithContext(context.Background())
}

func (i SpotInstanceRequestEbsBlockDeviceArray) ToSpotInstanceRequestEbsBlockDeviceArrayOutputWithContext(ctx context.Context) SpotInstanceRequestEbsBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestEbsBlockDeviceArrayOutput)
}

type SpotInstanceRequestEbsBlockDeviceOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestEbsBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestEbsBlockDevice)(nil)).Elem()
}

func (o SpotInstanceRequestEbsBlockDeviceOutput) ToSpotInstanceRequestEbsBlockDeviceOutput() SpotInstanceRequestEbsBlockDeviceOutput {
	return o
}

func (o SpotInstanceRequestEbsBlockDeviceOutput) ToSpotInstanceRequestEbsBlockDeviceOutputWithContext(ctx context.Context) SpotInstanceRequestEbsBlockDeviceOutput {
	return o
}

// Whether the volume should be destroyed
// on instance termination (Default: `true`).
func (o SpotInstanceRequestEbsBlockDeviceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestEbsBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// The name of the device to mount.
func (o SpotInstanceRequestEbsBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v SpotInstanceRequestEbsBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

// Enables [EBS
// encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)
// on the volume (Default: `false`). Cannot be used with `snapshotId`. Must be configured to perform drift detection.
func (o SpotInstanceRequestEbsBlockDeviceOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestEbsBlockDevice) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// The amount of provisioned
// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
// This must be set with a `volumeType` of `"io1"`.
func (o SpotInstanceRequestEbsBlockDeviceOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestEbsBlockDevice) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
func (o SpotInstanceRequestEbsBlockDeviceOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestEbsBlockDevice) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// The Snapshot ID to mount.
func (o SpotInstanceRequestEbsBlockDeviceOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestEbsBlockDevice) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

func (o SpotInstanceRequestEbsBlockDeviceOutput) VolumeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestEbsBlockDevice) *string { return v.VolumeId }).(pulumi.StringPtrOutput)
}

// The size of the volume in gibibytes (GiB).
func (o SpotInstanceRequestEbsBlockDeviceOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestEbsBlockDevice) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// The type of volume. Can be `"standard"`, `"gp2"`,
// or `"io1"`. (Default: `"gp2"`).
func (o SpotInstanceRequestEbsBlockDeviceOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestEbsBlockDevice) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type SpotInstanceRequestEbsBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestEbsBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotInstanceRequestEbsBlockDevice)(nil)).Elem()
}

func (o SpotInstanceRequestEbsBlockDeviceArrayOutput) ToSpotInstanceRequestEbsBlockDeviceArrayOutput() SpotInstanceRequestEbsBlockDeviceArrayOutput {
	return o
}

func (o SpotInstanceRequestEbsBlockDeviceArrayOutput) ToSpotInstanceRequestEbsBlockDeviceArrayOutputWithContext(ctx context.Context) SpotInstanceRequestEbsBlockDeviceArrayOutput {
	return o
}

func (o SpotInstanceRequestEbsBlockDeviceArrayOutput) Index(i pulumi.IntInput) SpotInstanceRequestEbsBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpotInstanceRequestEbsBlockDevice {
		return vs[0].([]SpotInstanceRequestEbsBlockDevice)[vs[1].(int)]
	}).(SpotInstanceRequestEbsBlockDeviceOutput)
}

type SpotInstanceRequestEphemeralBlockDevice struct {
	// The name of the block device to mount on the instance.
	DeviceName string `pulumi:"deviceName"`
	// Suppresses the specified device included in the AMI's block device mapping.
	NoDevice *bool `pulumi:"noDevice"`
	// The [Instance Store Device
	// Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
	// (e.g. `"ephemeral0"`).
	VirtualName *string `pulumi:"virtualName"`
}

// SpotInstanceRequestEphemeralBlockDeviceInput is an input type that accepts SpotInstanceRequestEphemeralBlockDeviceArgs and SpotInstanceRequestEphemeralBlockDeviceOutput values.
// You can construct a concrete instance of `SpotInstanceRequestEphemeralBlockDeviceInput` via:
//
// 		 SpotInstanceRequestEphemeralBlockDeviceArgs{...}
//
type SpotInstanceRequestEphemeralBlockDeviceInput interface {
	pulumi.Input

	ToSpotInstanceRequestEphemeralBlockDeviceOutput() SpotInstanceRequestEphemeralBlockDeviceOutput
	ToSpotInstanceRequestEphemeralBlockDeviceOutputWithContext(context.Context) SpotInstanceRequestEphemeralBlockDeviceOutput
}

type SpotInstanceRequestEphemeralBlockDeviceArgs struct {
	// The name of the block device to mount on the instance.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// Suppresses the specified device included in the AMI's block device mapping.
	NoDevice pulumi.BoolPtrInput `pulumi:"noDevice"`
	// The [Instance Store Device
	// Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
	// (e.g. `"ephemeral0"`).
	VirtualName pulumi.StringPtrInput `pulumi:"virtualName"`
}

func (SpotInstanceRequestEphemeralBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestEphemeralBlockDevice)(nil)).Elem()
}

func (i SpotInstanceRequestEphemeralBlockDeviceArgs) ToSpotInstanceRequestEphemeralBlockDeviceOutput() SpotInstanceRequestEphemeralBlockDeviceOutput {
	return i.ToSpotInstanceRequestEphemeralBlockDeviceOutputWithContext(context.Background())
}

func (i SpotInstanceRequestEphemeralBlockDeviceArgs) ToSpotInstanceRequestEphemeralBlockDeviceOutputWithContext(ctx context.Context) SpotInstanceRequestEphemeralBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestEphemeralBlockDeviceOutput)
}

// SpotInstanceRequestEphemeralBlockDeviceArrayInput is an input type that accepts SpotInstanceRequestEphemeralBlockDeviceArray and SpotInstanceRequestEphemeralBlockDeviceArrayOutput values.
// You can construct a concrete instance of `SpotInstanceRequestEphemeralBlockDeviceArrayInput` via:
//
// 		 SpotInstanceRequestEphemeralBlockDeviceArray{ SpotInstanceRequestEphemeralBlockDeviceArgs{...} }
//
type SpotInstanceRequestEphemeralBlockDeviceArrayInput interface {
	pulumi.Input

	ToSpotInstanceRequestEphemeralBlockDeviceArrayOutput() SpotInstanceRequestEphemeralBlockDeviceArrayOutput
	ToSpotInstanceRequestEphemeralBlockDeviceArrayOutputWithContext(context.Context) SpotInstanceRequestEphemeralBlockDeviceArrayOutput
}

type SpotInstanceRequestEphemeralBlockDeviceArray []SpotInstanceRequestEphemeralBlockDeviceInput

func (SpotInstanceRequestEphemeralBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotInstanceRequestEphemeralBlockDevice)(nil)).Elem()
}

func (i SpotInstanceRequestEphemeralBlockDeviceArray) ToSpotInstanceRequestEphemeralBlockDeviceArrayOutput() SpotInstanceRequestEphemeralBlockDeviceArrayOutput {
	return i.ToSpotInstanceRequestEphemeralBlockDeviceArrayOutputWithContext(context.Background())
}

func (i SpotInstanceRequestEphemeralBlockDeviceArray) ToSpotInstanceRequestEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) SpotInstanceRequestEphemeralBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestEphemeralBlockDeviceArrayOutput)
}

type SpotInstanceRequestEphemeralBlockDeviceOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestEphemeralBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestEphemeralBlockDevice)(nil)).Elem()
}

func (o SpotInstanceRequestEphemeralBlockDeviceOutput) ToSpotInstanceRequestEphemeralBlockDeviceOutput() SpotInstanceRequestEphemeralBlockDeviceOutput {
	return o
}

func (o SpotInstanceRequestEphemeralBlockDeviceOutput) ToSpotInstanceRequestEphemeralBlockDeviceOutputWithContext(ctx context.Context) SpotInstanceRequestEphemeralBlockDeviceOutput {
	return o
}

// The name of the block device to mount on the instance.
func (o SpotInstanceRequestEphemeralBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v SpotInstanceRequestEphemeralBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

// Suppresses the specified device included in the AMI's block device mapping.
func (o SpotInstanceRequestEphemeralBlockDeviceOutput) NoDevice() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestEphemeralBlockDevice) *bool { return v.NoDevice }).(pulumi.BoolPtrOutput)
}

// The [Instance Store Device
// Name](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#InstanceStoreDeviceNames)
// (e.g. `"ephemeral0"`).
func (o SpotInstanceRequestEphemeralBlockDeviceOutput) VirtualName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestEphemeralBlockDevice) *string { return v.VirtualName }).(pulumi.StringPtrOutput)
}

type SpotInstanceRequestEphemeralBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestEphemeralBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotInstanceRequestEphemeralBlockDevice)(nil)).Elem()
}

func (o SpotInstanceRequestEphemeralBlockDeviceArrayOutput) ToSpotInstanceRequestEphemeralBlockDeviceArrayOutput() SpotInstanceRequestEphemeralBlockDeviceArrayOutput {
	return o
}

func (o SpotInstanceRequestEphemeralBlockDeviceArrayOutput) ToSpotInstanceRequestEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) SpotInstanceRequestEphemeralBlockDeviceArrayOutput {
	return o
}

func (o SpotInstanceRequestEphemeralBlockDeviceArrayOutput) Index(i pulumi.IntInput) SpotInstanceRequestEphemeralBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpotInstanceRequestEphemeralBlockDevice {
		return vs[0].([]SpotInstanceRequestEphemeralBlockDevice)[vs[1].(int)]
	}).(SpotInstanceRequestEphemeralBlockDeviceOutput)
}

type SpotInstanceRequestMetadataOptions struct {
	// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
	HttpEndpoint *string `pulumi:"httpEndpoint"`
	// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
	HttpPutResponseHopLimit *int `pulumi:"httpPutResponseHopLimit"`
	// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
	HttpTokens *string `pulumi:"httpTokens"`
}

// SpotInstanceRequestMetadataOptionsInput is an input type that accepts SpotInstanceRequestMetadataOptionsArgs and SpotInstanceRequestMetadataOptionsOutput values.
// You can construct a concrete instance of `SpotInstanceRequestMetadataOptionsInput` via:
//
// 		 SpotInstanceRequestMetadataOptionsArgs{...}
//
type SpotInstanceRequestMetadataOptionsInput interface {
	pulumi.Input

	ToSpotInstanceRequestMetadataOptionsOutput() SpotInstanceRequestMetadataOptionsOutput
	ToSpotInstanceRequestMetadataOptionsOutputWithContext(context.Context) SpotInstanceRequestMetadataOptionsOutput
}

type SpotInstanceRequestMetadataOptionsArgs struct {
	// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
	HttpEndpoint pulumi.StringPtrInput `pulumi:"httpEndpoint"`
	// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
	HttpPutResponseHopLimit pulumi.IntPtrInput `pulumi:"httpPutResponseHopLimit"`
	// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
	HttpTokens pulumi.StringPtrInput `pulumi:"httpTokens"`
}

func (SpotInstanceRequestMetadataOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestMetadataOptions)(nil)).Elem()
}

func (i SpotInstanceRequestMetadataOptionsArgs) ToSpotInstanceRequestMetadataOptionsOutput() SpotInstanceRequestMetadataOptionsOutput {
	return i.ToSpotInstanceRequestMetadataOptionsOutputWithContext(context.Background())
}

func (i SpotInstanceRequestMetadataOptionsArgs) ToSpotInstanceRequestMetadataOptionsOutputWithContext(ctx context.Context) SpotInstanceRequestMetadataOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestMetadataOptionsOutput)
}

func (i SpotInstanceRequestMetadataOptionsArgs) ToSpotInstanceRequestMetadataOptionsPtrOutput() SpotInstanceRequestMetadataOptionsPtrOutput {
	return i.ToSpotInstanceRequestMetadataOptionsPtrOutputWithContext(context.Background())
}

func (i SpotInstanceRequestMetadataOptionsArgs) ToSpotInstanceRequestMetadataOptionsPtrOutputWithContext(ctx context.Context) SpotInstanceRequestMetadataOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestMetadataOptionsOutput).ToSpotInstanceRequestMetadataOptionsPtrOutputWithContext(ctx)
}

// SpotInstanceRequestMetadataOptionsPtrInput is an input type that accepts SpotInstanceRequestMetadataOptionsArgs, SpotInstanceRequestMetadataOptionsPtr and SpotInstanceRequestMetadataOptionsPtrOutput values.
// You can construct a concrete instance of `SpotInstanceRequestMetadataOptionsPtrInput` via:
//
// 		 SpotInstanceRequestMetadataOptionsArgs{...}
//
//  or:
//
// 		 nil
//
type SpotInstanceRequestMetadataOptionsPtrInput interface {
	pulumi.Input

	ToSpotInstanceRequestMetadataOptionsPtrOutput() SpotInstanceRequestMetadataOptionsPtrOutput
	ToSpotInstanceRequestMetadataOptionsPtrOutputWithContext(context.Context) SpotInstanceRequestMetadataOptionsPtrOutput
}

type spotInstanceRequestMetadataOptionsPtrType SpotInstanceRequestMetadataOptionsArgs

func SpotInstanceRequestMetadataOptionsPtr(v *SpotInstanceRequestMetadataOptionsArgs) SpotInstanceRequestMetadataOptionsPtrInput {
	return (*spotInstanceRequestMetadataOptionsPtrType)(v)
}

func (*spotInstanceRequestMetadataOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpotInstanceRequestMetadataOptions)(nil)).Elem()
}

func (i *spotInstanceRequestMetadataOptionsPtrType) ToSpotInstanceRequestMetadataOptionsPtrOutput() SpotInstanceRequestMetadataOptionsPtrOutput {
	return i.ToSpotInstanceRequestMetadataOptionsPtrOutputWithContext(context.Background())
}

func (i *spotInstanceRequestMetadataOptionsPtrType) ToSpotInstanceRequestMetadataOptionsPtrOutputWithContext(ctx context.Context) SpotInstanceRequestMetadataOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestMetadataOptionsPtrOutput)
}

type SpotInstanceRequestMetadataOptionsOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestMetadataOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestMetadataOptions)(nil)).Elem()
}

func (o SpotInstanceRequestMetadataOptionsOutput) ToSpotInstanceRequestMetadataOptionsOutput() SpotInstanceRequestMetadataOptionsOutput {
	return o
}

func (o SpotInstanceRequestMetadataOptionsOutput) ToSpotInstanceRequestMetadataOptionsOutputWithContext(ctx context.Context) SpotInstanceRequestMetadataOptionsOutput {
	return o
}

func (o SpotInstanceRequestMetadataOptionsOutput) ToSpotInstanceRequestMetadataOptionsPtrOutput() SpotInstanceRequestMetadataOptionsPtrOutput {
	return o.ToSpotInstanceRequestMetadataOptionsPtrOutputWithContext(context.Background())
}

func (o SpotInstanceRequestMetadataOptionsOutput) ToSpotInstanceRequestMetadataOptionsPtrOutputWithContext(ctx context.Context) SpotInstanceRequestMetadataOptionsPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestMetadataOptions) *SpotInstanceRequestMetadataOptions {
		return &v
	}).(SpotInstanceRequestMetadataOptionsPtrOutput)
}

// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
func (o SpotInstanceRequestMetadataOptionsOutput) HttpEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestMetadataOptions) *string { return v.HttpEndpoint }).(pulumi.StringPtrOutput)
}

// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
func (o SpotInstanceRequestMetadataOptionsOutput) HttpPutResponseHopLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestMetadataOptions) *int { return v.HttpPutResponseHopLimit }).(pulumi.IntPtrOutput)
}

// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
func (o SpotInstanceRequestMetadataOptionsOutput) HttpTokens() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestMetadataOptions) *string { return v.HttpTokens }).(pulumi.StringPtrOutput)
}

type SpotInstanceRequestMetadataOptionsPtrOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestMetadataOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpotInstanceRequestMetadataOptions)(nil)).Elem()
}

func (o SpotInstanceRequestMetadataOptionsPtrOutput) ToSpotInstanceRequestMetadataOptionsPtrOutput() SpotInstanceRequestMetadataOptionsPtrOutput {
	return o
}

func (o SpotInstanceRequestMetadataOptionsPtrOutput) ToSpotInstanceRequestMetadataOptionsPtrOutputWithContext(ctx context.Context) SpotInstanceRequestMetadataOptionsPtrOutput {
	return o
}

func (o SpotInstanceRequestMetadataOptionsPtrOutput) Elem() SpotInstanceRequestMetadataOptionsOutput {
	return o.ApplyT(func(v *SpotInstanceRequestMetadataOptions) SpotInstanceRequestMetadataOptions { return *v }).(SpotInstanceRequestMetadataOptionsOutput)
}

// Whether the metadata service is available. Can be `"enabled"` or `"disabled"`. (Default: `"enabled"`).
func (o SpotInstanceRequestMetadataOptionsPtrOutput) HttpEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestMetadataOptions) *string { return v.HttpEndpoint }).(pulumi.StringPtrOutput)
}

// The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`. (Default: `1`).
func (o SpotInstanceRequestMetadataOptionsPtrOutput) HttpPutResponseHopLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestMetadataOptions) *int { return v.HttpPutResponseHopLimit }).(pulumi.IntPtrOutput)
}

// Whether or not the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2_. Can be `"optional"` or `"required"`. (Default: `"optional"`).
func (o SpotInstanceRequestMetadataOptionsPtrOutput) HttpTokens() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestMetadataOptions) *string { return v.HttpTokens }).(pulumi.StringPtrOutput)
}

type SpotInstanceRequestNetworkInterface struct {
	// Whether or not to delete the network interface on instance termination. Defaults to `false`. Currently, the only valid value is `false`, as this is only supported when creating new network interfaces when launching an instance.
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// The integer index of the network interface attachment. Limited by instance type.
	DeviceIndex int `pulumi:"deviceIndex"`
	// The ID of the network interface to attach.
	NetworkInterfaceId string `pulumi:"networkInterfaceId"`
}

// SpotInstanceRequestNetworkInterfaceInput is an input type that accepts SpotInstanceRequestNetworkInterfaceArgs and SpotInstanceRequestNetworkInterfaceOutput values.
// You can construct a concrete instance of `SpotInstanceRequestNetworkInterfaceInput` via:
//
// 		 SpotInstanceRequestNetworkInterfaceArgs{...}
//
type SpotInstanceRequestNetworkInterfaceInput interface {
	pulumi.Input

	ToSpotInstanceRequestNetworkInterfaceOutput() SpotInstanceRequestNetworkInterfaceOutput
	ToSpotInstanceRequestNetworkInterfaceOutputWithContext(context.Context) SpotInstanceRequestNetworkInterfaceOutput
}

type SpotInstanceRequestNetworkInterfaceArgs struct {
	// Whether or not to delete the network interface on instance termination. Defaults to `false`. Currently, the only valid value is `false`, as this is only supported when creating new network interfaces when launching an instance.
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// The integer index of the network interface attachment. Limited by instance type.
	DeviceIndex pulumi.IntInput `pulumi:"deviceIndex"`
	// The ID of the network interface to attach.
	NetworkInterfaceId pulumi.StringInput `pulumi:"networkInterfaceId"`
}

func (SpotInstanceRequestNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestNetworkInterface)(nil)).Elem()
}

func (i SpotInstanceRequestNetworkInterfaceArgs) ToSpotInstanceRequestNetworkInterfaceOutput() SpotInstanceRequestNetworkInterfaceOutput {
	return i.ToSpotInstanceRequestNetworkInterfaceOutputWithContext(context.Background())
}

func (i SpotInstanceRequestNetworkInterfaceArgs) ToSpotInstanceRequestNetworkInterfaceOutputWithContext(ctx context.Context) SpotInstanceRequestNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestNetworkInterfaceOutput)
}

// SpotInstanceRequestNetworkInterfaceArrayInput is an input type that accepts SpotInstanceRequestNetworkInterfaceArray and SpotInstanceRequestNetworkInterfaceArrayOutput values.
// You can construct a concrete instance of `SpotInstanceRequestNetworkInterfaceArrayInput` via:
//
// 		 SpotInstanceRequestNetworkInterfaceArray{ SpotInstanceRequestNetworkInterfaceArgs{...} }
//
type SpotInstanceRequestNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToSpotInstanceRequestNetworkInterfaceArrayOutput() SpotInstanceRequestNetworkInterfaceArrayOutput
	ToSpotInstanceRequestNetworkInterfaceArrayOutputWithContext(context.Context) SpotInstanceRequestNetworkInterfaceArrayOutput
}

type SpotInstanceRequestNetworkInterfaceArray []SpotInstanceRequestNetworkInterfaceInput

func (SpotInstanceRequestNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotInstanceRequestNetworkInterface)(nil)).Elem()
}

func (i SpotInstanceRequestNetworkInterfaceArray) ToSpotInstanceRequestNetworkInterfaceArrayOutput() SpotInstanceRequestNetworkInterfaceArrayOutput {
	return i.ToSpotInstanceRequestNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i SpotInstanceRequestNetworkInterfaceArray) ToSpotInstanceRequestNetworkInterfaceArrayOutputWithContext(ctx context.Context) SpotInstanceRequestNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestNetworkInterfaceArrayOutput)
}

type SpotInstanceRequestNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestNetworkInterface)(nil)).Elem()
}

func (o SpotInstanceRequestNetworkInterfaceOutput) ToSpotInstanceRequestNetworkInterfaceOutput() SpotInstanceRequestNetworkInterfaceOutput {
	return o
}

func (o SpotInstanceRequestNetworkInterfaceOutput) ToSpotInstanceRequestNetworkInterfaceOutputWithContext(ctx context.Context) SpotInstanceRequestNetworkInterfaceOutput {
	return o
}

// Whether or not to delete the network interface on instance termination. Defaults to `false`. Currently, the only valid value is `false`, as this is only supported when creating new network interfaces when launching an instance.
func (o SpotInstanceRequestNetworkInterfaceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestNetworkInterface) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// The integer index of the network interface attachment. Limited by instance type.
func (o SpotInstanceRequestNetworkInterfaceOutput) DeviceIndex() pulumi.IntOutput {
	return o.ApplyT(func(v SpotInstanceRequestNetworkInterface) int { return v.DeviceIndex }).(pulumi.IntOutput)
}

// The ID of the network interface to attach.
func (o SpotInstanceRequestNetworkInterfaceOutput) NetworkInterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v SpotInstanceRequestNetworkInterface) string { return v.NetworkInterfaceId }).(pulumi.StringOutput)
}

type SpotInstanceRequestNetworkInterfaceArrayOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpotInstanceRequestNetworkInterface)(nil)).Elem()
}

func (o SpotInstanceRequestNetworkInterfaceArrayOutput) ToSpotInstanceRequestNetworkInterfaceArrayOutput() SpotInstanceRequestNetworkInterfaceArrayOutput {
	return o
}

func (o SpotInstanceRequestNetworkInterfaceArrayOutput) ToSpotInstanceRequestNetworkInterfaceArrayOutputWithContext(ctx context.Context) SpotInstanceRequestNetworkInterfaceArrayOutput {
	return o
}

func (o SpotInstanceRequestNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) SpotInstanceRequestNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpotInstanceRequestNetworkInterface {
		return vs[0].([]SpotInstanceRequestNetworkInterface)[vs[1].(int)]
	}).(SpotInstanceRequestNetworkInterfaceOutput)
}

type SpotInstanceRequestRootBlockDevice struct {
	// Whether the volume should be destroyed
	// on instance termination (Default: `true`).
	DeleteOnTermination *bool `pulumi:"deleteOnTermination"`
	// Enable volume encryption. (Default: `false`). Must be configured to perform drift detection.
	Encrypted *bool `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This is only valid for `volumeType` of `"io1"`, and must be specified if
	// using that type
	Iops *int `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	VolumeId *string `pulumi:"volumeId"`
	// The size of the volume in gibibytes (GiB).
	VolumeSize *int `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`, `"io1"`, `"sc1"`, or `"st1"`. (Default: `"standard"`).
	VolumeType *string `pulumi:"volumeType"`
}

// SpotInstanceRequestRootBlockDeviceInput is an input type that accepts SpotInstanceRequestRootBlockDeviceArgs and SpotInstanceRequestRootBlockDeviceOutput values.
// You can construct a concrete instance of `SpotInstanceRequestRootBlockDeviceInput` via:
//
// 		 SpotInstanceRequestRootBlockDeviceArgs{...}
//
type SpotInstanceRequestRootBlockDeviceInput interface {
	pulumi.Input

	ToSpotInstanceRequestRootBlockDeviceOutput() SpotInstanceRequestRootBlockDeviceOutput
	ToSpotInstanceRequestRootBlockDeviceOutputWithContext(context.Context) SpotInstanceRequestRootBlockDeviceOutput
}

type SpotInstanceRequestRootBlockDeviceArgs struct {
	// Whether the volume should be destroyed
	// on instance termination (Default: `true`).
	DeleteOnTermination pulumi.BoolPtrInput `pulumi:"deleteOnTermination"`
	// Enable volume encryption. (Default: `false`). Must be configured to perform drift detection.
	Encrypted pulumi.BoolPtrInput `pulumi:"encrypted"`
	// The amount of provisioned
	// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
	// This is only valid for `volumeType` of `"io1"`, and must be specified if
	// using that type
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	VolumeId pulumi.StringPtrInput `pulumi:"volumeId"`
	// The size of the volume in gibibytes (GiB).
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
	// The type of volume. Can be `"standard"`, `"gp2"`, `"io1"`, `"sc1"`, or `"st1"`. (Default: `"standard"`).
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (SpotInstanceRequestRootBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestRootBlockDevice)(nil)).Elem()
}

func (i SpotInstanceRequestRootBlockDeviceArgs) ToSpotInstanceRequestRootBlockDeviceOutput() SpotInstanceRequestRootBlockDeviceOutput {
	return i.ToSpotInstanceRequestRootBlockDeviceOutputWithContext(context.Background())
}

func (i SpotInstanceRequestRootBlockDeviceArgs) ToSpotInstanceRequestRootBlockDeviceOutputWithContext(ctx context.Context) SpotInstanceRequestRootBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestRootBlockDeviceOutput)
}

func (i SpotInstanceRequestRootBlockDeviceArgs) ToSpotInstanceRequestRootBlockDevicePtrOutput() SpotInstanceRequestRootBlockDevicePtrOutput {
	return i.ToSpotInstanceRequestRootBlockDevicePtrOutputWithContext(context.Background())
}

func (i SpotInstanceRequestRootBlockDeviceArgs) ToSpotInstanceRequestRootBlockDevicePtrOutputWithContext(ctx context.Context) SpotInstanceRequestRootBlockDevicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestRootBlockDeviceOutput).ToSpotInstanceRequestRootBlockDevicePtrOutputWithContext(ctx)
}

// SpotInstanceRequestRootBlockDevicePtrInput is an input type that accepts SpotInstanceRequestRootBlockDeviceArgs, SpotInstanceRequestRootBlockDevicePtr and SpotInstanceRequestRootBlockDevicePtrOutput values.
// You can construct a concrete instance of `SpotInstanceRequestRootBlockDevicePtrInput` via:
//
// 		 SpotInstanceRequestRootBlockDeviceArgs{...}
//
//  or:
//
// 		 nil
//
type SpotInstanceRequestRootBlockDevicePtrInput interface {
	pulumi.Input

	ToSpotInstanceRequestRootBlockDevicePtrOutput() SpotInstanceRequestRootBlockDevicePtrOutput
	ToSpotInstanceRequestRootBlockDevicePtrOutputWithContext(context.Context) SpotInstanceRequestRootBlockDevicePtrOutput
}

type spotInstanceRequestRootBlockDevicePtrType SpotInstanceRequestRootBlockDeviceArgs

func SpotInstanceRequestRootBlockDevicePtr(v *SpotInstanceRequestRootBlockDeviceArgs) SpotInstanceRequestRootBlockDevicePtrInput {
	return (*spotInstanceRequestRootBlockDevicePtrType)(v)
}

func (*spotInstanceRequestRootBlockDevicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpotInstanceRequestRootBlockDevice)(nil)).Elem()
}

func (i *spotInstanceRequestRootBlockDevicePtrType) ToSpotInstanceRequestRootBlockDevicePtrOutput() SpotInstanceRequestRootBlockDevicePtrOutput {
	return i.ToSpotInstanceRequestRootBlockDevicePtrOutputWithContext(context.Background())
}

func (i *spotInstanceRequestRootBlockDevicePtrType) ToSpotInstanceRequestRootBlockDevicePtrOutputWithContext(ctx context.Context) SpotInstanceRequestRootBlockDevicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotInstanceRequestRootBlockDevicePtrOutput)
}

type SpotInstanceRequestRootBlockDeviceOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestRootBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotInstanceRequestRootBlockDevice)(nil)).Elem()
}

func (o SpotInstanceRequestRootBlockDeviceOutput) ToSpotInstanceRequestRootBlockDeviceOutput() SpotInstanceRequestRootBlockDeviceOutput {
	return o
}

func (o SpotInstanceRequestRootBlockDeviceOutput) ToSpotInstanceRequestRootBlockDeviceOutputWithContext(ctx context.Context) SpotInstanceRequestRootBlockDeviceOutput {
	return o
}

func (o SpotInstanceRequestRootBlockDeviceOutput) ToSpotInstanceRequestRootBlockDevicePtrOutput() SpotInstanceRequestRootBlockDevicePtrOutput {
	return o.ToSpotInstanceRequestRootBlockDevicePtrOutputWithContext(context.Background())
}

func (o SpotInstanceRequestRootBlockDeviceOutput) ToSpotInstanceRequestRootBlockDevicePtrOutputWithContext(ctx context.Context) SpotInstanceRequestRootBlockDevicePtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDevice) *SpotInstanceRequestRootBlockDevice {
		return &v
	}).(SpotInstanceRequestRootBlockDevicePtrOutput)
}

// Whether the volume should be destroyed
// on instance termination (Default: `true`).
func (o SpotInstanceRequestRootBlockDeviceOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// Enable volume encryption. (Default: `false`). Must be configured to perform drift detection.
func (o SpotInstanceRequestRootBlockDeviceOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDevice) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// The amount of provisioned
// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
// This is only valid for `volumeType` of `"io1"`, and must be specified if
// using that type
func (o SpotInstanceRequestRootBlockDeviceOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDevice) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
func (o SpotInstanceRequestRootBlockDeviceOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDevice) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

func (o SpotInstanceRequestRootBlockDeviceOutput) VolumeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDevice) *string { return v.VolumeId }).(pulumi.StringPtrOutput)
}

// The size of the volume in gibibytes (GiB).
func (o SpotInstanceRequestRootBlockDeviceOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDevice) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// The type of volume. Can be `"standard"`, `"gp2"`, `"io1"`, `"sc1"`, or `"st1"`. (Default: `"standard"`).
func (o SpotInstanceRequestRootBlockDeviceOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDevice) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type SpotInstanceRequestRootBlockDevicePtrOutput struct{ *pulumi.OutputState }

func (SpotInstanceRequestRootBlockDevicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpotInstanceRequestRootBlockDevice)(nil)).Elem()
}

func (o SpotInstanceRequestRootBlockDevicePtrOutput) ToSpotInstanceRequestRootBlockDevicePtrOutput() SpotInstanceRequestRootBlockDevicePtrOutput {
	return o
}

func (o SpotInstanceRequestRootBlockDevicePtrOutput) ToSpotInstanceRequestRootBlockDevicePtrOutputWithContext(ctx context.Context) SpotInstanceRequestRootBlockDevicePtrOutput {
	return o
}

func (o SpotInstanceRequestRootBlockDevicePtrOutput) Elem() SpotInstanceRequestRootBlockDeviceOutput {
	return o.ApplyT(func(v *SpotInstanceRequestRootBlockDevice) SpotInstanceRequestRootBlockDevice { return *v }).(SpotInstanceRequestRootBlockDeviceOutput)
}

// Whether the volume should be destroyed
// on instance termination (Default: `true`).
func (o SpotInstanceRequestRootBlockDevicePtrOutput) DeleteOnTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDevice) *bool { return v.DeleteOnTermination }).(pulumi.BoolPtrOutput)
}

// Enable volume encryption. (Default: `false`). Must be configured to perform drift detection.
func (o SpotInstanceRequestRootBlockDevicePtrOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDevice) *bool { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// The amount of provisioned
// [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
// This is only valid for `volumeType` of `"io1"`, and must be specified if
// using that type
func (o SpotInstanceRequestRootBlockDevicePtrOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDevice) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
func (o SpotInstanceRequestRootBlockDevicePtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDevice) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

func (o SpotInstanceRequestRootBlockDevicePtrOutput) VolumeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDevice) *string { return v.VolumeId }).(pulumi.StringPtrOutput)
}

// The size of the volume in gibibytes (GiB).
func (o SpotInstanceRequestRootBlockDevicePtrOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDevice) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// The type of volume. Can be `"standard"`, `"gp2"`, `"io1"`, `"sc1"`, or `"st1"`. (Default: `"standard"`).
func (o SpotInstanceRequestRootBlockDevicePtrOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotInstanceRequestRootBlockDevice) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type TrafficMirrorFilterRuleDestinationPortRange struct {
	// Starting port of the range
	FromPort *int `pulumi:"fromPort"`
	// Ending port of the range
	ToPort *int `pulumi:"toPort"`
}

// TrafficMirrorFilterRuleDestinationPortRangeInput is an input type that accepts TrafficMirrorFilterRuleDestinationPortRangeArgs and TrafficMirrorFilterRuleDestinationPortRangeOutput values.
// You can construct a concrete instance of `TrafficMirrorFilterRuleDestinationPortRangeInput` via:
//
// 		 TrafficMirrorFilterRuleDestinationPortRangeArgs{...}
//
type TrafficMirrorFilterRuleDestinationPortRangeInput interface {
	pulumi.Input

	ToTrafficMirrorFilterRuleDestinationPortRangeOutput() TrafficMirrorFilterRuleDestinationPortRangeOutput
	ToTrafficMirrorFilterRuleDestinationPortRangeOutputWithContext(context.Context) TrafficMirrorFilterRuleDestinationPortRangeOutput
}

type TrafficMirrorFilterRuleDestinationPortRangeArgs struct {
	// Starting port of the range
	FromPort pulumi.IntPtrInput `pulumi:"fromPort"`
	// Ending port of the range
	ToPort pulumi.IntPtrInput `pulumi:"toPort"`
}

func (TrafficMirrorFilterRuleDestinationPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorFilterRuleDestinationPortRange)(nil)).Elem()
}

func (i TrafficMirrorFilterRuleDestinationPortRangeArgs) ToTrafficMirrorFilterRuleDestinationPortRangeOutput() TrafficMirrorFilterRuleDestinationPortRangeOutput {
	return i.ToTrafficMirrorFilterRuleDestinationPortRangeOutputWithContext(context.Background())
}

func (i TrafficMirrorFilterRuleDestinationPortRangeArgs) ToTrafficMirrorFilterRuleDestinationPortRangeOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleDestinationPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorFilterRuleDestinationPortRangeOutput)
}

func (i TrafficMirrorFilterRuleDestinationPortRangeArgs) ToTrafficMirrorFilterRuleDestinationPortRangePtrOutput() TrafficMirrorFilterRuleDestinationPortRangePtrOutput {
	return i.ToTrafficMirrorFilterRuleDestinationPortRangePtrOutputWithContext(context.Background())
}

func (i TrafficMirrorFilterRuleDestinationPortRangeArgs) ToTrafficMirrorFilterRuleDestinationPortRangePtrOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleDestinationPortRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorFilterRuleDestinationPortRangeOutput).ToTrafficMirrorFilterRuleDestinationPortRangePtrOutputWithContext(ctx)
}

// TrafficMirrorFilterRuleDestinationPortRangePtrInput is an input type that accepts TrafficMirrorFilterRuleDestinationPortRangeArgs, TrafficMirrorFilterRuleDestinationPortRangePtr and TrafficMirrorFilterRuleDestinationPortRangePtrOutput values.
// You can construct a concrete instance of `TrafficMirrorFilterRuleDestinationPortRangePtrInput` via:
//
// 		 TrafficMirrorFilterRuleDestinationPortRangeArgs{...}
//
//  or:
//
// 		 nil
//
type TrafficMirrorFilterRuleDestinationPortRangePtrInput interface {
	pulumi.Input

	ToTrafficMirrorFilterRuleDestinationPortRangePtrOutput() TrafficMirrorFilterRuleDestinationPortRangePtrOutput
	ToTrafficMirrorFilterRuleDestinationPortRangePtrOutputWithContext(context.Context) TrafficMirrorFilterRuleDestinationPortRangePtrOutput
}

type trafficMirrorFilterRuleDestinationPortRangePtrType TrafficMirrorFilterRuleDestinationPortRangeArgs

func TrafficMirrorFilterRuleDestinationPortRangePtr(v *TrafficMirrorFilterRuleDestinationPortRangeArgs) TrafficMirrorFilterRuleDestinationPortRangePtrInput {
	return (*trafficMirrorFilterRuleDestinationPortRangePtrType)(v)
}

func (*trafficMirrorFilterRuleDestinationPortRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficMirrorFilterRuleDestinationPortRange)(nil)).Elem()
}

func (i *trafficMirrorFilterRuleDestinationPortRangePtrType) ToTrafficMirrorFilterRuleDestinationPortRangePtrOutput() TrafficMirrorFilterRuleDestinationPortRangePtrOutput {
	return i.ToTrafficMirrorFilterRuleDestinationPortRangePtrOutputWithContext(context.Background())
}

func (i *trafficMirrorFilterRuleDestinationPortRangePtrType) ToTrafficMirrorFilterRuleDestinationPortRangePtrOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleDestinationPortRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorFilterRuleDestinationPortRangePtrOutput)
}

type TrafficMirrorFilterRuleDestinationPortRangeOutput struct{ *pulumi.OutputState }

func (TrafficMirrorFilterRuleDestinationPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorFilterRuleDestinationPortRange)(nil)).Elem()
}

func (o TrafficMirrorFilterRuleDestinationPortRangeOutput) ToTrafficMirrorFilterRuleDestinationPortRangeOutput() TrafficMirrorFilterRuleDestinationPortRangeOutput {
	return o
}

func (o TrafficMirrorFilterRuleDestinationPortRangeOutput) ToTrafficMirrorFilterRuleDestinationPortRangeOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleDestinationPortRangeOutput {
	return o
}

func (o TrafficMirrorFilterRuleDestinationPortRangeOutput) ToTrafficMirrorFilterRuleDestinationPortRangePtrOutput() TrafficMirrorFilterRuleDestinationPortRangePtrOutput {
	return o.ToTrafficMirrorFilterRuleDestinationPortRangePtrOutputWithContext(context.Background())
}

func (o TrafficMirrorFilterRuleDestinationPortRangeOutput) ToTrafficMirrorFilterRuleDestinationPortRangePtrOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleDestinationPortRangePtrOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRuleDestinationPortRange) *TrafficMirrorFilterRuleDestinationPortRange {
		return &v
	}).(TrafficMirrorFilterRuleDestinationPortRangePtrOutput)
}

// Starting port of the range
func (o TrafficMirrorFilterRuleDestinationPortRangeOutput) FromPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRuleDestinationPortRange) *int { return v.FromPort }).(pulumi.IntPtrOutput)
}

// Ending port of the range
func (o TrafficMirrorFilterRuleDestinationPortRangeOutput) ToPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRuleDestinationPortRange) *int { return v.ToPort }).(pulumi.IntPtrOutput)
}

type TrafficMirrorFilterRuleDestinationPortRangePtrOutput struct{ *pulumi.OutputState }

func (TrafficMirrorFilterRuleDestinationPortRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficMirrorFilterRuleDestinationPortRange)(nil)).Elem()
}

func (o TrafficMirrorFilterRuleDestinationPortRangePtrOutput) ToTrafficMirrorFilterRuleDestinationPortRangePtrOutput() TrafficMirrorFilterRuleDestinationPortRangePtrOutput {
	return o
}

func (o TrafficMirrorFilterRuleDestinationPortRangePtrOutput) ToTrafficMirrorFilterRuleDestinationPortRangePtrOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleDestinationPortRangePtrOutput {
	return o
}

func (o TrafficMirrorFilterRuleDestinationPortRangePtrOutput) Elem() TrafficMirrorFilterRuleDestinationPortRangeOutput {
	return o.ApplyT(func(v *TrafficMirrorFilterRuleDestinationPortRange) TrafficMirrorFilterRuleDestinationPortRange {
		return *v
	}).(TrafficMirrorFilterRuleDestinationPortRangeOutput)
}

// Starting port of the range
func (o TrafficMirrorFilterRuleDestinationPortRangePtrOutput) FromPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRuleDestinationPortRange) *int { return v.FromPort }).(pulumi.IntPtrOutput)
}

// Ending port of the range
func (o TrafficMirrorFilterRuleDestinationPortRangePtrOutput) ToPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRuleDestinationPortRange) *int { return v.ToPort }).(pulumi.IntPtrOutput)
}

type TrafficMirrorFilterRuleSourcePortRange struct {
	// Starting port of the range
	FromPort *int `pulumi:"fromPort"`
	// Ending port of the range
	ToPort *int `pulumi:"toPort"`
}

// TrafficMirrorFilterRuleSourcePortRangeInput is an input type that accepts TrafficMirrorFilterRuleSourcePortRangeArgs and TrafficMirrorFilterRuleSourcePortRangeOutput values.
// You can construct a concrete instance of `TrafficMirrorFilterRuleSourcePortRangeInput` via:
//
// 		 TrafficMirrorFilterRuleSourcePortRangeArgs{...}
//
type TrafficMirrorFilterRuleSourcePortRangeInput interface {
	pulumi.Input

	ToTrafficMirrorFilterRuleSourcePortRangeOutput() TrafficMirrorFilterRuleSourcePortRangeOutput
	ToTrafficMirrorFilterRuleSourcePortRangeOutputWithContext(context.Context) TrafficMirrorFilterRuleSourcePortRangeOutput
}

type TrafficMirrorFilterRuleSourcePortRangeArgs struct {
	// Starting port of the range
	FromPort pulumi.IntPtrInput `pulumi:"fromPort"`
	// Ending port of the range
	ToPort pulumi.IntPtrInput `pulumi:"toPort"`
}

func (TrafficMirrorFilterRuleSourcePortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorFilterRuleSourcePortRange)(nil)).Elem()
}

func (i TrafficMirrorFilterRuleSourcePortRangeArgs) ToTrafficMirrorFilterRuleSourcePortRangeOutput() TrafficMirrorFilterRuleSourcePortRangeOutput {
	return i.ToTrafficMirrorFilterRuleSourcePortRangeOutputWithContext(context.Background())
}

func (i TrafficMirrorFilterRuleSourcePortRangeArgs) ToTrafficMirrorFilterRuleSourcePortRangeOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleSourcePortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorFilterRuleSourcePortRangeOutput)
}

func (i TrafficMirrorFilterRuleSourcePortRangeArgs) ToTrafficMirrorFilterRuleSourcePortRangePtrOutput() TrafficMirrorFilterRuleSourcePortRangePtrOutput {
	return i.ToTrafficMirrorFilterRuleSourcePortRangePtrOutputWithContext(context.Background())
}

func (i TrafficMirrorFilterRuleSourcePortRangeArgs) ToTrafficMirrorFilterRuleSourcePortRangePtrOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleSourcePortRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorFilterRuleSourcePortRangeOutput).ToTrafficMirrorFilterRuleSourcePortRangePtrOutputWithContext(ctx)
}

// TrafficMirrorFilterRuleSourcePortRangePtrInput is an input type that accepts TrafficMirrorFilterRuleSourcePortRangeArgs, TrafficMirrorFilterRuleSourcePortRangePtr and TrafficMirrorFilterRuleSourcePortRangePtrOutput values.
// You can construct a concrete instance of `TrafficMirrorFilterRuleSourcePortRangePtrInput` via:
//
// 		 TrafficMirrorFilterRuleSourcePortRangeArgs{...}
//
//  or:
//
// 		 nil
//
type TrafficMirrorFilterRuleSourcePortRangePtrInput interface {
	pulumi.Input

	ToTrafficMirrorFilterRuleSourcePortRangePtrOutput() TrafficMirrorFilterRuleSourcePortRangePtrOutput
	ToTrafficMirrorFilterRuleSourcePortRangePtrOutputWithContext(context.Context) TrafficMirrorFilterRuleSourcePortRangePtrOutput
}

type trafficMirrorFilterRuleSourcePortRangePtrType TrafficMirrorFilterRuleSourcePortRangeArgs

func TrafficMirrorFilterRuleSourcePortRangePtr(v *TrafficMirrorFilterRuleSourcePortRangeArgs) TrafficMirrorFilterRuleSourcePortRangePtrInput {
	return (*trafficMirrorFilterRuleSourcePortRangePtrType)(v)
}

func (*trafficMirrorFilterRuleSourcePortRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficMirrorFilterRuleSourcePortRange)(nil)).Elem()
}

func (i *trafficMirrorFilterRuleSourcePortRangePtrType) ToTrafficMirrorFilterRuleSourcePortRangePtrOutput() TrafficMirrorFilterRuleSourcePortRangePtrOutput {
	return i.ToTrafficMirrorFilterRuleSourcePortRangePtrOutputWithContext(context.Background())
}

func (i *trafficMirrorFilterRuleSourcePortRangePtrType) ToTrafficMirrorFilterRuleSourcePortRangePtrOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleSourcePortRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficMirrorFilterRuleSourcePortRangePtrOutput)
}

type TrafficMirrorFilterRuleSourcePortRangeOutput struct{ *pulumi.OutputState }

func (TrafficMirrorFilterRuleSourcePortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficMirrorFilterRuleSourcePortRange)(nil)).Elem()
}

func (o TrafficMirrorFilterRuleSourcePortRangeOutput) ToTrafficMirrorFilterRuleSourcePortRangeOutput() TrafficMirrorFilterRuleSourcePortRangeOutput {
	return o
}

func (o TrafficMirrorFilterRuleSourcePortRangeOutput) ToTrafficMirrorFilterRuleSourcePortRangeOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleSourcePortRangeOutput {
	return o
}

func (o TrafficMirrorFilterRuleSourcePortRangeOutput) ToTrafficMirrorFilterRuleSourcePortRangePtrOutput() TrafficMirrorFilterRuleSourcePortRangePtrOutput {
	return o.ToTrafficMirrorFilterRuleSourcePortRangePtrOutputWithContext(context.Background())
}

func (o TrafficMirrorFilterRuleSourcePortRangeOutput) ToTrafficMirrorFilterRuleSourcePortRangePtrOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleSourcePortRangePtrOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRuleSourcePortRange) *TrafficMirrorFilterRuleSourcePortRange {
		return &v
	}).(TrafficMirrorFilterRuleSourcePortRangePtrOutput)
}

// Starting port of the range
func (o TrafficMirrorFilterRuleSourcePortRangeOutput) FromPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRuleSourcePortRange) *int { return v.FromPort }).(pulumi.IntPtrOutput)
}

// Ending port of the range
func (o TrafficMirrorFilterRuleSourcePortRangeOutput) ToPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRuleSourcePortRange) *int { return v.ToPort }).(pulumi.IntPtrOutput)
}

type TrafficMirrorFilterRuleSourcePortRangePtrOutput struct{ *pulumi.OutputState }

func (TrafficMirrorFilterRuleSourcePortRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficMirrorFilterRuleSourcePortRange)(nil)).Elem()
}

func (o TrafficMirrorFilterRuleSourcePortRangePtrOutput) ToTrafficMirrorFilterRuleSourcePortRangePtrOutput() TrafficMirrorFilterRuleSourcePortRangePtrOutput {
	return o
}

func (o TrafficMirrorFilterRuleSourcePortRangePtrOutput) ToTrafficMirrorFilterRuleSourcePortRangePtrOutputWithContext(ctx context.Context) TrafficMirrorFilterRuleSourcePortRangePtrOutput {
	return o
}

func (o TrafficMirrorFilterRuleSourcePortRangePtrOutput) Elem() TrafficMirrorFilterRuleSourcePortRangeOutput {
	return o.ApplyT(func(v *TrafficMirrorFilterRuleSourcePortRange) TrafficMirrorFilterRuleSourcePortRange { return *v }).(TrafficMirrorFilterRuleSourcePortRangeOutput)
}

// Starting port of the range
func (o TrafficMirrorFilterRuleSourcePortRangePtrOutput) FromPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRuleSourcePortRange) *int { return v.FromPort }).(pulumi.IntPtrOutput)
}

// Ending port of the range
func (o TrafficMirrorFilterRuleSourcePortRangePtrOutput) ToPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrafficMirrorFilterRuleSourcePortRange) *int { return v.ToPort }).(pulumi.IntPtrOutput)
}

type VpcEndpointDnsEntry struct {
	// The DNS name.
	DnsName *string `pulumi:"dnsName"`
	// The ID of the private hosted zone.
	HostedZoneId *string `pulumi:"hostedZoneId"`
}

// VpcEndpointDnsEntryInput is an input type that accepts VpcEndpointDnsEntryArgs and VpcEndpointDnsEntryOutput values.
// You can construct a concrete instance of `VpcEndpointDnsEntryInput` via:
//
// 		 VpcEndpointDnsEntryArgs{...}
//
type VpcEndpointDnsEntryInput interface {
	pulumi.Input

	ToVpcEndpointDnsEntryOutput() VpcEndpointDnsEntryOutput
	ToVpcEndpointDnsEntryOutputWithContext(context.Context) VpcEndpointDnsEntryOutput
}

type VpcEndpointDnsEntryArgs struct {
	// The DNS name.
	DnsName pulumi.StringPtrInput `pulumi:"dnsName"`
	// The ID of the private hosted zone.
	HostedZoneId pulumi.StringPtrInput `pulumi:"hostedZoneId"`
}

func (VpcEndpointDnsEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcEndpointDnsEntry)(nil)).Elem()
}

func (i VpcEndpointDnsEntryArgs) ToVpcEndpointDnsEntryOutput() VpcEndpointDnsEntryOutput {
	return i.ToVpcEndpointDnsEntryOutputWithContext(context.Background())
}

func (i VpcEndpointDnsEntryArgs) ToVpcEndpointDnsEntryOutputWithContext(ctx context.Context) VpcEndpointDnsEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEndpointDnsEntryOutput)
}

// VpcEndpointDnsEntryArrayInput is an input type that accepts VpcEndpointDnsEntryArray and VpcEndpointDnsEntryArrayOutput values.
// You can construct a concrete instance of `VpcEndpointDnsEntryArrayInput` via:
//
// 		 VpcEndpointDnsEntryArray{ VpcEndpointDnsEntryArgs{...} }
//
type VpcEndpointDnsEntryArrayInput interface {
	pulumi.Input

	ToVpcEndpointDnsEntryArrayOutput() VpcEndpointDnsEntryArrayOutput
	ToVpcEndpointDnsEntryArrayOutputWithContext(context.Context) VpcEndpointDnsEntryArrayOutput
}

type VpcEndpointDnsEntryArray []VpcEndpointDnsEntryInput

func (VpcEndpointDnsEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcEndpointDnsEntry)(nil)).Elem()
}

func (i VpcEndpointDnsEntryArray) ToVpcEndpointDnsEntryArrayOutput() VpcEndpointDnsEntryArrayOutput {
	return i.ToVpcEndpointDnsEntryArrayOutputWithContext(context.Background())
}

func (i VpcEndpointDnsEntryArray) ToVpcEndpointDnsEntryArrayOutputWithContext(ctx context.Context) VpcEndpointDnsEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEndpointDnsEntryArrayOutput)
}

type VpcEndpointDnsEntryOutput struct{ *pulumi.OutputState }

func (VpcEndpointDnsEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcEndpointDnsEntry)(nil)).Elem()
}

func (o VpcEndpointDnsEntryOutput) ToVpcEndpointDnsEntryOutput() VpcEndpointDnsEntryOutput {
	return o
}

func (o VpcEndpointDnsEntryOutput) ToVpcEndpointDnsEntryOutputWithContext(ctx context.Context) VpcEndpointDnsEntryOutput {
	return o
}

// The DNS name.
func (o VpcEndpointDnsEntryOutput) DnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcEndpointDnsEntry) *string { return v.DnsName }).(pulumi.StringPtrOutput)
}

// The ID of the private hosted zone.
func (o VpcEndpointDnsEntryOutput) HostedZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcEndpointDnsEntry) *string { return v.HostedZoneId }).(pulumi.StringPtrOutput)
}

type VpcEndpointDnsEntryArrayOutput struct{ *pulumi.OutputState }

func (VpcEndpointDnsEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcEndpointDnsEntry)(nil)).Elem()
}

func (o VpcEndpointDnsEntryArrayOutput) ToVpcEndpointDnsEntryArrayOutput() VpcEndpointDnsEntryArrayOutput {
	return o
}

func (o VpcEndpointDnsEntryArrayOutput) ToVpcEndpointDnsEntryArrayOutputWithContext(ctx context.Context) VpcEndpointDnsEntryArrayOutput {
	return o
}

func (o VpcEndpointDnsEntryArrayOutput) Index(i pulumi.IntInput) VpcEndpointDnsEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpcEndpointDnsEntry {
		return vs[0].([]VpcEndpointDnsEntry)[vs[1].(int)]
	}).(VpcEndpointDnsEntryOutput)
}

type VpcPeeringConnectionAccepterType struct {
	// Allow a local linked EC2-Classic instance to communicate
	// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
	// to the remote VPC.
	AllowClassicLinkToRemoteVpc *bool `pulumi:"allowClassicLinkToRemoteVpc"`
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC. This is
	// [not supported](https://docs.aws.amazon.com/vpc/latest/peering/modify-peering-connections.html) for
	// inter-region VPC peering.
	AllowRemoteVpcDnsResolution *bool `pulumi:"allowRemoteVpcDnsResolution"`
	// Allow a local VPC to communicate with a linked EC2-Classic
	// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
	// connection.
	AllowVpcToRemoteClassicLink *bool `pulumi:"allowVpcToRemoteClassicLink"`
}

// VpcPeeringConnectionAccepterTypeInput is an input type that accepts VpcPeeringConnectionAccepterTypeArgs and VpcPeeringConnectionAccepterTypeOutput values.
// You can construct a concrete instance of `VpcPeeringConnectionAccepterTypeInput` via:
//
// 		 VpcPeeringConnectionAccepterTypeArgs{...}
//
type VpcPeeringConnectionAccepterTypeInput interface {
	pulumi.Input

	ToVpcPeeringConnectionAccepterTypeOutput() VpcPeeringConnectionAccepterTypeOutput
	ToVpcPeeringConnectionAccepterTypeOutputWithContext(context.Context) VpcPeeringConnectionAccepterTypeOutput
}

type VpcPeeringConnectionAccepterTypeArgs struct {
	// Allow a local linked EC2-Classic instance to communicate
	// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
	// to the remote VPC.
	AllowClassicLinkToRemoteVpc pulumi.BoolPtrInput `pulumi:"allowClassicLinkToRemoteVpc"`
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC. This is
	// [not supported](https://docs.aws.amazon.com/vpc/latest/peering/modify-peering-connections.html) for
	// inter-region VPC peering.
	AllowRemoteVpcDnsResolution pulumi.BoolPtrInput `pulumi:"allowRemoteVpcDnsResolution"`
	// Allow a local VPC to communicate with a linked EC2-Classic
	// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
	// connection.
	AllowVpcToRemoteClassicLink pulumi.BoolPtrInput `pulumi:"allowVpcToRemoteClassicLink"`
}

func (VpcPeeringConnectionAccepterTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionAccepterType)(nil)).Elem()
}

func (i VpcPeeringConnectionAccepterTypeArgs) ToVpcPeeringConnectionAccepterTypeOutput() VpcPeeringConnectionAccepterTypeOutput {
	return i.ToVpcPeeringConnectionAccepterTypeOutputWithContext(context.Background())
}

func (i VpcPeeringConnectionAccepterTypeArgs) ToVpcPeeringConnectionAccepterTypeOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionAccepterTypeOutput)
}

func (i VpcPeeringConnectionAccepterTypeArgs) ToVpcPeeringConnectionAccepterTypePtrOutput() VpcPeeringConnectionAccepterTypePtrOutput {
	return i.ToVpcPeeringConnectionAccepterTypePtrOutputWithContext(context.Background())
}

func (i VpcPeeringConnectionAccepterTypeArgs) ToVpcPeeringConnectionAccepterTypePtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionAccepterTypeOutput).ToVpcPeeringConnectionAccepterTypePtrOutputWithContext(ctx)
}

// VpcPeeringConnectionAccepterTypePtrInput is an input type that accepts VpcPeeringConnectionAccepterTypeArgs, VpcPeeringConnectionAccepterTypePtr and VpcPeeringConnectionAccepterTypePtrOutput values.
// You can construct a concrete instance of `VpcPeeringConnectionAccepterTypePtrInput` via:
//
// 		 VpcPeeringConnectionAccepterTypeArgs{...}
//
//  or:
//
// 		 nil
//
type VpcPeeringConnectionAccepterTypePtrInput interface {
	pulumi.Input

	ToVpcPeeringConnectionAccepterTypePtrOutput() VpcPeeringConnectionAccepterTypePtrOutput
	ToVpcPeeringConnectionAccepterTypePtrOutputWithContext(context.Context) VpcPeeringConnectionAccepterTypePtrOutput
}

type vpcPeeringConnectionAccepterTypePtrType VpcPeeringConnectionAccepterTypeArgs

func VpcPeeringConnectionAccepterTypePtr(v *VpcPeeringConnectionAccepterTypeArgs) VpcPeeringConnectionAccepterTypePtrInput {
	return (*vpcPeeringConnectionAccepterTypePtrType)(v)
}

func (*vpcPeeringConnectionAccepterTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcPeeringConnectionAccepterType)(nil)).Elem()
}

func (i *vpcPeeringConnectionAccepterTypePtrType) ToVpcPeeringConnectionAccepterTypePtrOutput() VpcPeeringConnectionAccepterTypePtrOutput {
	return i.ToVpcPeeringConnectionAccepterTypePtrOutputWithContext(context.Background())
}

func (i *vpcPeeringConnectionAccepterTypePtrType) ToVpcPeeringConnectionAccepterTypePtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionAccepterTypePtrOutput)
}

type VpcPeeringConnectionAccepterTypeOutput struct{ *pulumi.OutputState }

func (VpcPeeringConnectionAccepterTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionAccepterType)(nil)).Elem()
}

func (o VpcPeeringConnectionAccepterTypeOutput) ToVpcPeeringConnectionAccepterTypeOutput() VpcPeeringConnectionAccepterTypeOutput {
	return o
}

func (o VpcPeeringConnectionAccepterTypeOutput) ToVpcPeeringConnectionAccepterTypeOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterTypeOutput {
	return o
}

func (o VpcPeeringConnectionAccepterTypeOutput) ToVpcPeeringConnectionAccepterTypePtrOutput() VpcPeeringConnectionAccepterTypePtrOutput {
	return o.ToVpcPeeringConnectionAccepterTypePtrOutputWithContext(context.Background())
}

func (o VpcPeeringConnectionAccepterTypeOutput) ToVpcPeeringConnectionAccepterTypePtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterTypePtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterType) *VpcPeeringConnectionAccepterType {
		return &v
	}).(VpcPeeringConnectionAccepterTypePtrOutput)
}

// Allow a local linked EC2-Classic instance to communicate
// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
// to the remote VPC.
func (o VpcPeeringConnectionAccepterTypeOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterType) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to resolve public DNS hostnames to
// private IP addresses when queried from instances in the peer VPC. This is
// [not supported](https://docs.aws.amazon.com/vpc/latest/peering/modify-peering-connections.html) for
// inter-region VPC peering.
func (o VpcPeeringConnectionAccepterTypeOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterType) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to communicate with a linked EC2-Classic
// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
// connection.
func (o VpcPeeringConnectionAccepterTypeOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterType) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type VpcPeeringConnectionAccepterTypePtrOutput struct{ *pulumi.OutputState }

func (VpcPeeringConnectionAccepterTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcPeeringConnectionAccepterType)(nil)).Elem()
}

func (o VpcPeeringConnectionAccepterTypePtrOutput) ToVpcPeeringConnectionAccepterTypePtrOutput() VpcPeeringConnectionAccepterTypePtrOutput {
	return o
}

func (o VpcPeeringConnectionAccepterTypePtrOutput) ToVpcPeeringConnectionAccepterTypePtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterTypePtrOutput {
	return o
}

func (o VpcPeeringConnectionAccepterTypePtrOutput) Elem() VpcPeeringConnectionAccepterTypeOutput {
	return o.ApplyT(func(v *VpcPeeringConnectionAccepterType) VpcPeeringConnectionAccepterType { return *v }).(VpcPeeringConnectionAccepterTypeOutput)
}

// Allow a local linked EC2-Classic instance to communicate
// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
// to the remote VPC.
func (o VpcPeeringConnectionAccepterTypePtrOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterType) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to resolve public DNS hostnames to
// private IP addresses when queried from instances in the peer VPC. This is
// [not supported](https://docs.aws.amazon.com/vpc/latest/peering/modify-peering-connections.html) for
// inter-region VPC peering.
func (o VpcPeeringConnectionAccepterTypePtrOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterType) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to communicate with a linked EC2-Classic
// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
// connection.
func (o VpcPeeringConnectionAccepterTypePtrOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterType) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type VpcPeeringConnectionAccepterAccepter struct {
	// Indicates whether a local ClassicLink connection can communicate
	// with the peer VPC over the VPC Peering Connection.
	AllowClassicLinkToRemoteVpc *bool `pulumi:"allowClassicLinkToRemoteVpc"`
	// Indicates whether a local VPC can resolve public DNS hostnames to
	// private IP addresses when queried from instances in a peer VPC.
	AllowRemoteVpcDnsResolution *bool `pulumi:"allowRemoteVpcDnsResolution"`
	// Indicates whether a local VPC can communicate with a ClassicLink
	// connection in the peer VPC over the VPC Peering Connection.
	AllowVpcToRemoteClassicLink *bool `pulumi:"allowVpcToRemoteClassicLink"`
}

// VpcPeeringConnectionAccepterAccepterInput is an input type that accepts VpcPeeringConnectionAccepterAccepterArgs and VpcPeeringConnectionAccepterAccepterOutput values.
// You can construct a concrete instance of `VpcPeeringConnectionAccepterAccepterInput` via:
//
// 		 VpcPeeringConnectionAccepterAccepterArgs{...}
//
type VpcPeeringConnectionAccepterAccepterInput interface {
	pulumi.Input

	ToVpcPeeringConnectionAccepterAccepterOutput() VpcPeeringConnectionAccepterAccepterOutput
	ToVpcPeeringConnectionAccepterAccepterOutputWithContext(context.Context) VpcPeeringConnectionAccepterAccepterOutput
}

type VpcPeeringConnectionAccepterAccepterArgs struct {
	// Indicates whether a local ClassicLink connection can communicate
	// with the peer VPC over the VPC Peering Connection.
	AllowClassicLinkToRemoteVpc pulumi.BoolPtrInput `pulumi:"allowClassicLinkToRemoteVpc"`
	// Indicates whether a local VPC can resolve public DNS hostnames to
	// private IP addresses when queried from instances in a peer VPC.
	AllowRemoteVpcDnsResolution pulumi.BoolPtrInput `pulumi:"allowRemoteVpcDnsResolution"`
	// Indicates whether a local VPC can communicate with a ClassicLink
	// connection in the peer VPC over the VPC Peering Connection.
	AllowVpcToRemoteClassicLink pulumi.BoolPtrInput `pulumi:"allowVpcToRemoteClassicLink"`
}

func (VpcPeeringConnectionAccepterAccepterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionAccepterAccepter)(nil)).Elem()
}

func (i VpcPeeringConnectionAccepterAccepterArgs) ToVpcPeeringConnectionAccepterAccepterOutput() VpcPeeringConnectionAccepterAccepterOutput {
	return i.ToVpcPeeringConnectionAccepterAccepterOutputWithContext(context.Background())
}

func (i VpcPeeringConnectionAccepterAccepterArgs) ToVpcPeeringConnectionAccepterAccepterOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterAccepterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionAccepterAccepterOutput)
}

func (i VpcPeeringConnectionAccepterAccepterArgs) ToVpcPeeringConnectionAccepterAccepterPtrOutput() VpcPeeringConnectionAccepterAccepterPtrOutput {
	return i.ToVpcPeeringConnectionAccepterAccepterPtrOutputWithContext(context.Background())
}

func (i VpcPeeringConnectionAccepterAccepterArgs) ToVpcPeeringConnectionAccepterAccepterPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterAccepterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionAccepterAccepterOutput).ToVpcPeeringConnectionAccepterAccepterPtrOutputWithContext(ctx)
}

// VpcPeeringConnectionAccepterAccepterPtrInput is an input type that accepts VpcPeeringConnectionAccepterAccepterArgs, VpcPeeringConnectionAccepterAccepterPtr and VpcPeeringConnectionAccepterAccepterPtrOutput values.
// You can construct a concrete instance of `VpcPeeringConnectionAccepterAccepterPtrInput` via:
//
// 		 VpcPeeringConnectionAccepterAccepterArgs{...}
//
//  or:
//
// 		 nil
//
type VpcPeeringConnectionAccepterAccepterPtrInput interface {
	pulumi.Input

	ToVpcPeeringConnectionAccepterAccepterPtrOutput() VpcPeeringConnectionAccepterAccepterPtrOutput
	ToVpcPeeringConnectionAccepterAccepterPtrOutputWithContext(context.Context) VpcPeeringConnectionAccepterAccepterPtrOutput
}

type vpcPeeringConnectionAccepterAccepterPtrType VpcPeeringConnectionAccepterAccepterArgs

func VpcPeeringConnectionAccepterAccepterPtr(v *VpcPeeringConnectionAccepterAccepterArgs) VpcPeeringConnectionAccepterAccepterPtrInput {
	return (*vpcPeeringConnectionAccepterAccepterPtrType)(v)
}

func (*vpcPeeringConnectionAccepterAccepterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcPeeringConnectionAccepterAccepter)(nil)).Elem()
}

func (i *vpcPeeringConnectionAccepterAccepterPtrType) ToVpcPeeringConnectionAccepterAccepterPtrOutput() VpcPeeringConnectionAccepterAccepterPtrOutput {
	return i.ToVpcPeeringConnectionAccepterAccepterPtrOutputWithContext(context.Background())
}

func (i *vpcPeeringConnectionAccepterAccepterPtrType) ToVpcPeeringConnectionAccepterAccepterPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterAccepterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionAccepterAccepterPtrOutput)
}

type VpcPeeringConnectionAccepterAccepterOutput struct{ *pulumi.OutputState }

func (VpcPeeringConnectionAccepterAccepterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionAccepterAccepter)(nil)).Elem()
}

func (o VpcPeeringConnectionAccepterAccepterOutput) ToVpcPeeringConnectionAccepterAccepterOutput() VpcPeeringConnectionAccepterAccepterOutput {
	return o
}

func (o VpcPeeringConnectionAccepterAccepterOutput) ToVpcPeeringConnectionAccepterAccepterOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterAccepterOutput {
	return o
}

func (o VpcPeeringConnectionAccepterAccepterOutput) ToVpcPeeringConnectionAccepterAccepterPtrOutput() VpcPeeringConnectionAccepterAccepterPtrOutput {
	return o.ToVpcPeeringConnectionAccepterAccepterPtrOutputWithContext(context.Background())
}

func (o VpcPeeringConnectionAccepterAccepterOutput) ToVpcPeeringConnectionAccepterAccepterPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterAccepterPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterAccepter) *VpcPeeringConnectionAccepterAccepter {
		return &v
	}).(VpcPeeringConnectionAccepterAccepterPtrOutput)
}

// Indicates whether a local ClassicLink connection can communicate
// with the peer VPC over the VPC Peering Connection.
func (o VpcPeeringConnectionAccepterAccepterOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterAccepter) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Indicates whether a local VPC can resolve public DNS hostnames to
// private IP addresses when queried from instances in a peer VPC.
func (o VpcPeeringConnectionAccepterAccepterOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterAccepter) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Indicates whether a local VPC can communicate with a ClassicLink
// connection in the peer VPC over the VPC Peering Connection.
func (o VpcPeeringConnectionAccepterAccepterOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterAccepter) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type VpcPeeringConnectionAccepterAccepterPtrOutput struct{ *pulumi.OutputState }

func (VpcPeeringConnectionAccepterAccepterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcPeeringConnectionAccepterAccepter)(nil)).Elem()
}

func (o VpcPeeringConnectionAccepterAccepterPtrOutput) ToVpcPeeringConnectionAccepterAccepterPtrOutput() VpcPeeringConnectionAccepterAccepterPtrOutput {
	return o
}

func (o VpcPeeringConnectionAccepterAccepterPtrOutput) ToVpcPeeringConnectionAccepterAccepterPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterAccepterPtrOutput {
	return o
}

func (o VpcPeeringConnectionAccepterAccepterPtrOutput) Elem() VpcPeeringConnectionAccepterAccepterOutput {
	return o.ApplyT(func(v *VpcPeeringConnectionAccepterAccepter) VpcPeeringConnectionAccepterAccepter { return *v }).(VpcPeeringConnectionAccepterAccepterOutput)
}

// Indicates whether a local ClassicLink connection can communicate
// with the peer VPC over the VPC Peering Connection.
func (o VpcPeeringConnectionAccepterAccepterPtrOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterAccepter) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Indicates whether a local VPC can resolve public DNS hostnames to
// private IP addresses when queried from instances in a peer VPC.
func (o VpcPeeringConnectionAccepterAccepterPtrOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterAccepter) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Indicates whether a local VPC can communicate with a ClassicLink
// connection in the peer VPC over the VPC Peering Connection.
func (o VpcPeeringConnectionAccepterAccepterPtrOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterAccepter) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type VpcPeeringConnectionAccepterRequester struct {
	// Indicates whether a local ClassicLink connection can communicate
	// with the peer VPC over the VPC Peering Connection.
	AllowClassicLinkToRemoteVpc *bool `pulumi:"allowClassicLinkToRemoteVpc"`
	// Indicates whether a local VPC can resolve public DNS hostnames to
	// private IP addresses when queried from instances in a peer VPC.
	AllowRemoteVpcDnsResolution *bool `pulumi:"allowRemoteVpcDnsResolution"`
	// Indicates whether a local VPC can communicate with a ClassicLink
	// connection in the peer VPC over the VPC Peering Connection.
	AllowVpcToRemoteClassicLink *bool `pulumi:"allowVpcToRemoteClassicLink"`
}

// VpcPeeringConnectionAccepterRequesterInput is an input type that accepts VpcPeeringConnectionAccepterRequesterArgs and VpcPeeringConnectionAccepterRequesterOutput values.
// You can construct a concrete instance of `VpcPeeringConnectionAccepterRequesterInput` via:
//
// 		 VpcPeeringConnectionAccepterRequesterArgs{...}
//
type VpcPeeringConnectionAccepterRequesterInput interface {
	pulumi.Input

	ToVpcPeeringConnectionAccepterRequesterOutput() VpcPeeringConnectionAccepterRequesterOutput
	ToVpcPeeringConnectionAccepterRequesterOutputWithContext(context.Context) VpcPeeringConnectionAccepterRequesterOutput
}

type VpcPeeringConnectionAccepterRequesterArgs struct {
	// Indicates whether a local ClassicLink connection can communicate
	// with the peer VPC over the VPC Peering Connection.
	AllowClassicLinkToRemoteVpc pulumi.BoolPtrInput `pulumi:"allowClassicLinkToRemoteVpc"`
	// Indicates whether a local VPC can resolve public DNS hostnames to
	// private IP addresses when queried from instances in a peer VPC.
	AllowRemoteVpcDnsResolution pulumi.BoolPtrInput `pulumi:"allowRemoteVpcDnsResolution"`
	// Indicates whether a local VPC can communicate with a ClassicLink
	// connection in the peer VPC over the VPC Peering Connection.
	AllowVpcToRemoteClassicLink pulumi.BoolPtrInput `pulumi:"allowVpcToRemoteClassicLink"`
}

func (VpcPeeringConnectionAccepterRequesterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionAccepterRequester)(nil)).Elem()
}

func (i VpcPeeringConnectionAccepterRequesterArgs) ToVpcPeeringConnectionAccepterRequesterOutput() VpcPeeringConnectionAccepterRequesterOutput {
	return i.ToVpcPeeringConnectionAccepterRequesterOutputWithContext(context.Background())
}

func (i VpcPeeringConnectionAccepterRequesterArgs) ToVpcPeeringConnectionAccepterRequesterOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterRequesterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionAccepterRequesterOutput)
}

func (i VpcPeeringConnectionAccepterRequesterArgs) ToVpcPeeringConnectionAccepterRequesterPtrOutput() VpcPeeringConnectionAccepterRequesterPtrOutput {
	return i.ToVpcPeeringConnectionAccepterRequesterPtrOutputWithContext(context.Background())
}

func (i VpcPeeringConnectionAccepterRequesterArgs) ToVpcPeeringConnectionAccepterRequesterPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterRequesterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionAccepterRequesterOutput).ToVpcPeeringConnectionAccepterRequesterPtrOutputWithContext(ctx)
}

// VpcPeeringConnectionAccepterRequesterPtrInput is an input type that accepts VpcPeeringConnectionAccepterRequesterArgs, VpcPeeringConnectionAccepterRequesterPtr and VpcPeeringConnectionAccepterRequesterPtrOutput values.
// You can construct a concrete instance of `VpcPeeringConnectionAccepterRequesterPtrInput` via:
//
// 		 VpcPeeringConnectionAccepterRequesterArgs{...}
//
//  or:
//
// 		 nil
//
type VpcPeeringConnectionAccepterRequesterPtrInput interface {
	pulumi.Input

	ToVpcPeeringConnectionAccepterRequesterPtrOutput() VpcPeeringConnectionAccepterRequesterPtrOutput
	ToVpcPeeringConnectionAccepterRequesterPtrOutputWithContext(context.Context) VpcPeeringConnectionAccepterRequesterPtrOutput
}

type vpcPeeringConnectionAccepterRequesterPtrType VpcPeeringConnectionAccepterRequesterArgs

func VpcPeeringConnectionAccepterRequesterPtr(v *VpcPeeringConnectionAccepterRequesterArgs) VpcPeeringConnectionAccepterRequesterPtrInput {
	return (*vpcPeeringConnectionAccepterRequesterPtrType)(v)
}

func (*vpcPeeringConnectionAccepterRequesterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcPeeringConnectionAccepterRequester)(nil)).Elem()
}

func (i *vpcPeeringConnectionAccepterRequesterPtrType) ToVpcPeeringConnectionAccepterRequesterPtrOutput() VpcPeeringConnectionAccepterRequesterPtrOutput {
	return i.ToVpcPeeringConnectionAccepterRequesterPtrOutputWithContext(context.Background())
}

func (i *vpcPeeringConnectionAccepterRequesterPtrType) ToVpcPeeringConnectionAccepterRequesterPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterRequesterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionAccepterRequesterPtrOutput)
}

type VpcPeeringConnectionAccepterRequesterOutput struct{ *pulumi.OutputState }

func (VpcPeeringConnectionAccepterRequesterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionAccepterRequester)(nil)).Elem()
}

func (o VpcPeeringConnectionAccepterRequesterOutput) ToVpcPeeringConnectionAccepterRequesterOutput() VpcPeeringConnectionAccepterRequesterOutput {
	return o
}

func (o VpcPeeringConnectionAccepterRequesterOutput) ToVpcPeeringConnectionAccepterRequesterOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterRequesterOutput {
	return o
}

func (o VpcPeeringConnectionAccepterRequesterOutput) ToVpcPeeringConnectionAccepterRequesterPtrOutput() VpcPeeringConnectionAccepterRequesterPtrOutput {
	return o.ToVpcPeeringConnectionAccepterRequesterPtrOutputWithContext(context.Background())
}

func (o VpcPeeringConnectionAccepterRequesterOutput) ToVpcPeeringConnectionAccepterRequesterPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterRequesterPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterRequester) *VpcPeeringConnectionAccepterRequester {
		return &v
	}).(VpcPeeringConnectionAccepterRequesterPtrOutput)
}

// Indicates whether a local ClassicLink connection can communicate
// with the peer VPC over the VPC Peering Connection.
func (o VpcPeeringConnectionAccepterRequesterOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterRequester) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Indicates whether a local VPC can resolve public DNS hostnames to
// private IP addresses when queried from instances in a peer VPC.
func (o VpcPeeringConnectionAccepterRequesterOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterRequester) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Indicates whether a local VPC can communicate with a ClassicLink
// connection in the peer VPC over the VPC Peering Connection.
func (o VpcPeeringConnectionAccepterRequesterOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterRequester) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type VpcPeeringConnectionAccepterRequesterPtrOutput struct{ *pulumi.OutputState }

func (VpcPeeringConnectionAccepterRequesterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcPeeringConnectionAccepterRequester)(nil)).Elem()
}

func (o VpcPeeringConnectionAccepterRequesterPtrOutput) ToVpcPeeringConnectionAccepterRequesterPtrOutput() VpcPeeringConnectionAccepterRequesterPtrOutput {
	return o
}

func (o VpcPeeringConnectionAccepterRequesterPtrOutput) ToVpcPeeringConnectionAccepterRequesterPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionAccepterRequesterPtrOutput {
	return o
}

func (o VpcPeeringConnectionAccepterRequesterPtrOutput) Elem() VpcPeeringConnectionAccepterRequesterOutput {
	return o.ApplyT(func(v *VpcPeeringConnectionAccepterRequester) VpcPeeringConnectionAccepterRequester { return *v }).(VpcPeeringConnectionAccepterRequesterOutput)
}

// Indicates whether a local ClassicLink connection can communicate
// with the peer VPC over the VPC Peering Connection.
func (o VpcPeeringConnectionAccepterRequesterPtrOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterRequester) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Indicates whether a local VPC can resolve public DNS hostnames to
// private IP addresses when queried from instances in a peer VPC.
func (o VpcPeeringConnectionAccepterRequesterPtrOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterRequester) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Indicates whether a local VPC can communicate with a ClassicLink
// connection in the peer VPC over the VPC Peering Connection.
func (o VpcPeeringConnectionAccepterRequesterPtrOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionAccepterRequester) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type VpcPeeringConnectionRequester struct {
	// Allow a local linked EC2-Classic instance to communicate
	// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
	// to the remote VPC.
	AllowClassicLinkToRemoteVpc *bool `pulumi:"allowClassicLinkToRemoteVpc"`
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC. This is
	// [not supported](https://docs.aws.amazon.com/vpc/latest/peering/modify-peering-connections.html) for
	// inter-region VPC peering.
	AllowRemoteVpcDnsResolution *bool `pulumi:"allowRemoteVpcDnsResolution"`
	// Allow a local VPC to communicate with a linked EC2-Classic
	// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
	// connection.
	AllowVpcToRemoteClassicLink *bool `pulumi:"allowVpcToRemoteClassicLink"`
}

// VpcPeeringConnectionRequesterInput is an input type that accepts VpcPeeringConnectionRequesterArgs and VpcPeeringConnectionRequesterOutput values.
// You can construct a concrete instance of `VpcPeeringConnectionRequesterInput` via:
//
// 		 VpcPeeringConnectionRequesterArgs{...}
//
type VpcPeeringConnectionRequesterInput interface {
	pulumi.Input

	ToVpcPeeringConnectionRequesterOutput() VpcPeeringConnectionRequesterOutput
	ToVpcPeeringConnectionRequesterOutputWithContext(context.Context) VpcPeeringConnectionRequesterOutput
}

type VpcPeeringConnectionRequesterArgs struct {
	// Allow a local linked EC2-Classic instance to communicate
	// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
	// to the remote VPC.
	AllowClassicLinkToRemoteVpc pulumi.BoolPtrInput `pulumi:"allowClassicLinkToRemoteVpc"`
	// Allow a local VPC to resolve public DNS hostnames to
	// private IP addresses when queried from instances in the peer VPC. This is
	// [not supported](https://docs.aws.amazon.com/vpc/latest/peering/modify-peering-connections.html) for
	// inter-region VPC peering.
	AllowRemoteVpcDnsResolution pulumi.BoolPtrInput `pulumi:"allowRemoteVpcDnsResolution"`
	// Allow a local VPC to communicate with a linked EC2-Classic
	// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
	// connection.
	AllowVpcToRemoteClassicLink pulumi.BoolPtrInput `pulumi:"allowVpcToRemoteClassicLink"`
}

func (VpcPeeringConnectionRequesterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionRequester)(nil)).Elem()
}

func (i VpcPeeringConnectionRequesterArgs) ToVpcPeeringConnectionRequesterOutput() VpcPeeringConnectionRequesterOutput {
	return i.ToVpcPeeringConnectionRequesterOutputWithContext(context.Background())
}

func (i VpcPeeringConnectionRequesterArgs) ToVpcPeeringConnectionRequesterOutputWithContext(ctx context.Context) VpcPeeringConnectionRequesterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionRequesterOutput)
}

func (i VpcPeeringConnectionRequesterArgs) ToVpcPeeringConnectionRequesterPtrOutput() VpcPeeringConnectionRequesterPtrOutput {
	return i.ToVpcPeeringConnectionRequesterPtrOutputWithContext(context.Background())
}

func (i VpcPeeringConnectionRequesterArgs) ToVpcPeeringConnectionRequesterPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionRequesterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionRequesterOutput).ToVpcPeeringConnectionRequesterPtrOutputWithContext(ctx)
}

// VpcPeeringConnectionRequesterPtrInput is an input type that accepts VpcPeeringConnectionRequesterArgs, VpcPeeringConnectionRequesterPtr and VpcPeeringConnectionRequesterPtrOutput values.
// You can construct a concrete instance of `VpcPeeringConnectionRequesterPtrInput` via:
//
// 		 VpcPeeringConnectionRequesterArgs{...}
//
//  or:
//
// 		 nil
//
type VpcPeeringConnectionRequesterPtrInput interface {
	pulumi.Input

	ToVpcPeeringConnectionRequesterPtrOutput() VpcPeeringConnectionRequesterPtrOutput
	ToVpcPeeringConnectionRequesterPtrOutputWithContext(context.Context) VpcPeeringConnectionRequesterPtrOutput
}

type vpcPeeringConnectionRequesterPtrType VpcPeeringConnectionRequesterArgs

func VpcPeeringConnectionRequesterPtr(v *VpcPeeringConnectionRequesterArgs) VpcPeeringConnectionRequesterPtrInput {
	return (*vpcPeeringConnectionRequesterPtrType)(v)
}

func (*vpcPeeringConnectionRequesterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcPeeringConnectionRequester)(nil)).Elem()
}

func (i *vpcPeeringConnectionRequesterPtrType) ToVpcPeeringConnectionRequesterPtrOutput() VpcPeeringConnectionRequesterPtrOutput {
	return i.ToVpcPeeringConnectionRequesterPtrOutputWithContext(context.Background())
}

func (i *vpcPeeringConnectionRequesterPtrType) ToVpcPeeringConnectionRequesterPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionRequesterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcPeeringConnectionRequesterPtrOutput)
}

type VpcPeeringConnectionRequesterOutput struct{ *pulumi.OutputState }

func (VpcPeeringConnectionRequesterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcPeeringConnectionRequester)(nil)).Elem()
}

func (o VpcPeeringConnectionRequesterOutput) ToVpcPeeringConnectionRequesterOutput() VpcPeeringConnectionRequesterOutput {
	return o
}

func (o VpcPeeringConnectionRequesterOutput) ToVpcPeeringConnectionRequesterOutputWithContext(ctx context.Context) VpcPeeringConnectionRequesterOutput {
	return o
}

func (o VpcPeeringConnectionRequesterOutput) ToVpcPeeringConnectionRequesterPtrOutput() VpcPeeringConnectionRequesterPtrOutput {
	return o.ToVpcPeeringConnectionRequesterPtrOutputWithContext(context.Background())
}

func (o VpcPeeringConnectionRequesterOutput) ToVpcPeeringConnectionRequesterPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionRequesterPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionRequester) *VpcPeeringConnectionRequester {
		return &v
	}).(VpcPeeringConnectionRequesterPtrOutput)
}

// Allow a local linked EC2-Classic instance to communicate
// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
// to the remote VPC.
func (o VpcPeeringConnectionRequesterOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionRequester) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to resolve public DNS hostnames to
// private IP addresses when queried from instances in the peer VPC. This is
// [not supported](https://docs.aws.amazon.com/vpc/latest/peering/modify-peering-connections.html) for
// inter-region VPC peering.
func (o VpcPeeringConnectionRequesterOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionRequester) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to communicate with a linked EC2-Classic
// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
// connection.
func (o VpcPeeringConnectionRequesterOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionRequester) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type VpcPeeringConnectionRequesterPtrOutput struct{ *pulumi.OutputState }

func (VpcPeeringConnectionRequesterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcPeeringConnectionRequester)(nil)).Elem()
}

func (o VpcPeeringConnectionRequesterPtrOutput) ToVpcPeeringConnectionRequesterPtrOutput() VpcPeeringConnectionRequesterPtrOutput {
	return o
}

func (o VpcPeeringConnectionRequesterPtrOutput) ToVpcPeeringConnectionRequesterPtrOutputWithContext(ctx context.Context) VpcPeeringConnectionRequesterPtrOutput {
	return o
}

func (o VpcPeeringConnectionRequesterPtrOutput) Elem() VpcPeeringConnectionRequesterOutput {
	return o.ApplyT(func(v *VpcPeeringConnectionRequester) VpcPeeringConnectionRequester { return *v }).(VpcPeeringConnectionRequesterOutput)
}

// Allow a local linked EC2-Classic instance to communicate
// with instances in a peer VPC. This enables an outbound communication from the local ClassicLink connection
// to the remote VPC.
func (o VpcPeeringConnectionRequesterPtrOutput) AllowClassicLinkToRemoteVpc() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionRequester) *bool { return v.AllowClassicLinkToRemoteVpc }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to resolve public DNS hostnames to
// private IP addresses when queried from instances in the peer VPC. This is
// [not supported](https://docs.aws.amazon.com/vpc/latest/peering/modify-peering-connections.html) for
// inter-region VPC peering.
func (o VpcPeeringConnectionRequesterPtrOutput) AllowRemoteVpcDnsResolution() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionRequester) *bool { return v.AllowRemoteVpcDnsResolution }).(pulumi.BoolPtrOutput)
}

// Allow a local VPC to communicate with a linked EC2-Classic
// instance in a peer VPC. This enables an outbound communication from the local VPC to the remote ClassicLink
// connection.
func (o VpcPeeringConnectionRequesterPtrOutput) AllowVpcToRemoteClassicLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcPeeringConnectionRequester) *bool { return v.AllowVpcToRemoteClassicLink }).(pulumi.BoolPtrOutput)
}

type VpnConnectionRouteType struct {
	DestinationCidrBlock *string `pulumi:"destinationCidrBlock"`
	Source               *string `pulumi:"source"`
	State                *string `pulumi:"state"`
}

// VpnConnectionRouteTypeInput is an input type that accepts VpnConnectionRouteTypeArgs and VpnConnectionRouteTypeOutput values.
// You can construct a concrete instance of `VpnConnectionRouteTypeInput` via:
//
// 		 VpnConnectionRouteTypeArgs{...}
//
type VpnConnectionRouteTypeInput interface {
	pulumi.Input

	ToVpnConnectionRouteTypeOutput() VpnConnectionRouteTypeOutput
	ToVpnConnectionRouteTypeOutputWithContext(context.Context) VpnConnectionRouteTypeOutput
}

type VpnConnectionRouteTypeArgs struct {
	DestinationCidrBlock pulumi.StringPtrInput `pulumi:"destinationCidrBlock"`
	Source               pulumi.StringPtrInput `pulumi:"source"`
	State                pulumi.StringPtrInput `pulumi:"state"`
}

func (VpnConnectionRouteTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionRouteType)(nil)).Elem()
}

func (i VpnConnectionRouteTypeArgs) ToVpnConnectionRouteTypeOutput() VpnConnectionRouteTypeOutput {
	return i.ToVpnConnectionRouteTypeOutputWithContext(context.Background())
}

func (i VpnConnectionRouteTypeArgs) ToVpnConnectionRouteTypeOutputWithContext(ctx context.Context) VpnConnectionRouteTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionRouteTypeOutput)
}

// VpnConnectionRouteTypeArrayInput is an input type that accepts VpnConnectionRouteTypeArray and VpnConnectionRouteTypeArrayOutput values.
// You can construct a concrete instance of `VpnConnectionRouteTypeArrayInput` via:
//
// 		 VpnConnectionRouteTypeArray{ VpnConnectionRouteTypeArgs{...} }
//
type VpnConnectionRouteTypeArrayInput interface {
	pulumi.Input

	ToVpnConnectionRouteTypeArrayOutput() VpnConnectionRouteTypeArrayOutput
	ToVpnConnectionRouteTypeArrayOutputWithContext(context.Context) VpnConnectionRouteTypeArrayOutput
}

type VpnConnectionRouteTypeArray []VpnConnectionRouteTypeInput

func (VpnConnectionRouteTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionRouteType)(nil)).Elem()
}

func (i VpnConnectionRouteTypeArray) ToVpnConnectionRouteTypeArrayOutput() VpnConnectionRouteTypeArrayOutput {
	return i.ToVpnConnectionRouteTypeArrayOutputWithContext(context.Background())
}

func (i VpnConnectionRouteTypeArray) ToVpnConnectionRouteTypeArrayOutputWithContext(ctx context.Context) VpnConnectionRouteTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionRouteTypeArrayOutput)
}

type VpnConnectionRouteTypeOutput struct{ *pulumi.OutputState }

func (VpnConnectionRouteTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionRouteType)(nil)).Elem()
}

func (o VpnConnectionRouteTypeOutput) ToVpnConnectionRouteTypeOutput() VpnConnectionRouteTypeOutput {
	return o
}

func (o VpnConnectionRouteTypeOutput) ToVpnConnectionRouteTypeOutputWithContext(ctx context.Context) VpnConnectionRouteTypeOutput {
	return o
}

func (o VpnConnectionRouteTypeOutput) DestinationCidrBlock() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionRouteType) *string { return v.DestinationCidrBlock }).(pulumi.StringPtrOutput)
}

func (o VpnConnectionRouteTypeOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionRouteType) *string { return v.Source }).(pulumi.StringPtrOutput)
}

func (o VpnConnectionRouteTypeOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionRouteType) *string { return v.State }).(pulumi.StringPtrOutput)
}

type VpnConnectionRouteTypeArrayOutput struct{ *pulumi.OutputState }

func (VpnConnectionRouteTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionRouteType)(nil)).Elem()
}

func (o VpnConnectionRouteTypeArrayOutput) ToVpnConnectionRouteTypeArrayOutput() VpnConnectionRouteTypeArrayOutput {
	return o
}

func (o VpnConnectionRouteTypeArrayOutput) ToVpnConnectionRouteTypeArrayOutputWithContext(ctx context.Context) VpnConnectionRouteTypeArrayOutput {
	return o
}

func (o VpnConnectionRouteTypeArrayOutput) Index(i pulumi.IntInput) VpnConnectionRouteTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnConnectionRouteType {
		return vs[0].([]VpnConnectionRouteType)[vs[1].(int)]
	}).(VpnConnectionRouteTypeOutput)
}

type VpnConnectionVgwTelemetry struct {
	AcceptedRouteCount *int    `pulumi:"acceptedRouteCount"`
	LastStatusChange   *string `pulumi:"lastStatusChange"`
	OutsideIpAddress   *string `pulumi:"outsideIpAddress"`
	Status             *string `pulumi:"status"`
	StatusMessage      *string `pulumi:"statusMessage"`
}

// VpnConnectionVgwTelemetryInput is an input type that accepts VpnConnectionVgwTelemetryArgs and VpnConnectionVgwTelemetryOutput values.
// You can construct a concrete instance of `VpnConnectionVgwTelemetryInput` via:
//
// 		 VpnConnectionVgwTelemetryArgs{...}
//
type VpnConnectionVgwTelemetryInput interface {
	pulumi.Input

	ToVpnConnectionVgwTelemetryOutput() VpnConnectionVgwTelemetryOutput
	ToVpnConnectionVgwTelemetryOutputWithContext(context.Context) VpnConnectionVgwTelemetryOutput
}

type VpnConnectionVgwTelemetryArgs struct {
	AcceptedRouteCount pulumi.IntPtrInput    `pulumi:"acceptedRouteCount"`
	LastStatusChange   pulumi.StringPtrInput `pulumi:"lastStatusChange"`
	OutsideIpAddress   pulumi.StringPtrInput `pulumi:"outsideIpAddress"`
	Status             pulumi.StringPtrInput `pulumi:"status"`
	StatusMessage      pulumi.StringPtrInput `pulumi:"statusMessage"`
}

func (VpnConnectionVgwTelemetryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionVgwTelemetry)(nil)).Elem()
}

func (i VpnConnectionVgwTelemetryArgs) ToVpnConnectionVgwTelemetryOutput() VpnConnectionVgwTelemetryOutput {
	return i.ToVpnConnectionVgwTelemetryOutputWithContext(context.Background())
}

func (i VpnConnectionVgwTelemetryArgs) ToVpnConnectionVgwTelemetryOutputWithContext(ctx context.Context) VpnConnectionVgwTelemetryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionVgwTelemetryOutput)
}

// VpnConnectionVgwTelemetryArrayInput is an input type that accepts VpnConnectionVgwTelemetryArray and VpnConnectionVgwTelemetryArrayOutput values.
// You can construct a concrete instance of `VpnConnectionVgwTelemetryArrayInput` via:
//
// 		 VpnConnectionVgwTelemetryArray{ VpnConnectionVgwTelemetryArgs{...} }
//
type VpnConnectionVgwTelemetryArrayInput interface {
	pulumi.Input

	ToVpnConnectionVgwTelemetryArrayOutput() VpnConnectionVgwTelemetryArrayOutput
	ToVpnConnectionVgwTelemetryArrayOutputWithContext(context.Context) VpnConnectionVgwTelemetryArrayOutput
}

type VpnConnectionVgwTelemetryArray []VpnConnectionVgwTelemetryInput

func (VpnConnectionVgwTelemetryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionVgwTelemetry)(nil)).Elem()
}

func (i VpnConnectionVgwTelemetryArray) ToVpnConnectionVgwTelemetryArrayOutput() VpnConnectionVgwTelemetryArrayOutput {
	return i.ToVpnConnectionVgwTelemetryArrayOutputWithContext(context.Background())
}

func (i VpnConnectionVgwTelemetryArray) ToVpnConnectionVgwTelemetryArrayOutputWithContext(ctx context.Context) VpnConnectionVgwTelemetryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionVgwTelemetryArrayOutput)
}

type VpnConnectionVgwTelemetryOutput struct{ *pulumi.OutputState }

func (VpnConnectionVgwTelemetryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionVgwTelemetry)(nil)).Elem()
}

func (o VpnConnectionVgwTelemetryOutput) ToVpnConnectionVgwTelemetryOutput() VpnConnectionVgwTelemetryOutput {
	return o
}

func (o VpnConnectionVgwTelemetryOutput) ToVpnConnectionVgwTelemetryOutputWithContext(ctx context.Context) VpnConnectionVgwTelemetryOutput {
	return o
}

func (o VpnConnectionVgwTelemetryOutput) AcceptedRouteCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnConnectionVgwTelemetry) *int { return v.AcceptedRouteCount }).(pulumi.IntPtrOutput)
}

func (o VpnConnectionVgwTelemetryOutput) LastStatusChange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionVgwTelemetry) *string { return v.LastStatusChange }).(pulumi.StringPtrOutput)
}

func (o VpnConnectionVgwTelemetryOutput) OutsideIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionVgwTelemetry) *string { return v.OutsideIpAddress }).(pulumi.StringPtrOutput)
}

func (o VpnConnectionVgwTelemetryOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionVgwTelemetry) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o VpnConnectionVgwTelemetryOutput) StatusMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionVgwTelemetry) *string { return v.StatusMessage }).(pulumi.StringPtrOutput)
}

type VpnConnectionVgwTelemetryArrayOutput struct{ *pulumi.OutputState }

func (VpnConnectionVgwTelemetryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionVgwTelemetry)(nil)).Elem()
}

func (o VpnConnectionVgwTelemetryArrayOutput) ToVpnConnectionVgwTelemetryArrayOutput() VpnConnectionVgwTelemetryArrayOutput {
	return o
}

func (o VpnConnectionVgwTelemetryArrayOutput) ToVpnConnectionVgwTelemetryArrayOutputWithContext(ctx context.Context) VpnConnectionVgwTelemetryArrayOutput {
	return o
}

func (o VpnConnectionVgwTelemetryArrayOutput) Index(i pulumi.IntInput) VpnConnectionVgwTelemetryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnConnectionVgwTelemetry {
		return vs[0].([]VpnConnectionVgwTelemetry)[vs[1].(int)]
	}).(VpnConnectionVgwTelemetryOutput)
}

type GetCustomerGatewayFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetCustomerGatewayFilterInput is an input type that accepts GetCustomerGatewayFilterArgs and GetCustomerGatewayFilterOutput values.
// You can construct a concrete instance of `GetCustomerGatewayFilterInput` via:
//
// 		 GetCustomerGatewayFilterArgs{...}
//
type GetCustomerGatewayFilterInput interface {
	pulumi.Input

	ToGetCustomerGatewayFilterOutput() GetCustomerGatewayFilterOutput
	ToGetCustomerGatewayFilterOutputWithContext(context.Context) GetCustomerGatewayFilterOutput
}

type GetCustomerGatewayFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetCustomerGatewayFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomerGatewayFilter)(nil)).Elem()
}

func (i GetCustomerGatewayFilterArgs) ToGetCustomerGatewayFilterOutput() GetCustomerGatewayFilterOutput {
	return i.ToGetCustomerGatewayFilterOutputWithContext(context.Background())
}

func (i GetCustomerGatewayFilterArgs) ToGetCustomerGatewayFilterOutputWithContext(ctx context.Context) GetCustomerGatewayFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomerGatewayFilterOutput)
}

// GetCustomerGatewayFilterArrayInput is an input type that accepts GetCustomerGatewayFilterArray and GetCustomerGatewayFilterArrayOutput values.
// You can construct a concrete instance of `GetCustomerGatewayFilterArrayInput` via:
//
// 		 GetCustomerGatewayFilterArray{ GetCustomerGatewayFilterArgs{...} }
//
type GetCustomerGatewayFilterArrayInput interface {
	pulumi.Input

	ToGetCustomerGatewayFilterArrayOutput() GetCustomerGatewayFilterArrayOutput
	ToGetCustomerGatewayFilterArrayOutputWithContext(context.Context) GetCustomerGatewayFilterArrayOutput
}

type GetCustomerGatewayFilterArray []GetCustomerGatewayFilterInput

func (GetCustomerGatewayFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomerGatewayFilter)(nil)).Elem()
}

func (i GetCustomerGatewayFilterArray) ToGetCustomerGatewayFilterArrayOutput() GetCustomerGatewayFilterArrayOutput {
	return i.ToGetCustomerGatewayFilterArrayOutputWithContext(context.Background())
}

func (i GetCustomerGatewayFilterArray) ToGetCustomerGatewayFilterArrayOutputWithContext(ctx context.Context) GetCustomerGatewayFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomerGatewayFilterArrayOutput)
}

type GetCustomerGatewayFilterOutput struct{ *pulumi.OutputState }

func (GetCustomerGatewayFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomerGatewayFilter)(nil)).Elem()
}

func (o GetCustomerGatewayFilterOutput) ToGetCustomerGatewayFilterOutput() GetCustomerGatewayFilterOutput {
	return o
}

func (o GetCustomerGatewayFilterOutput) ToGetCustomerGatewayFilterOutputWithContext(ctx context.Context) GetCustomerGatewayFilterOutput {
	return o
}

func (o GetCustomerGatewayFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCustomerGatewayFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetCustomerGatewayFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCustomerGatewayFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetCustomerGatewayFilterArrayOutput struct{ *pulumi.OutputState }

func (GetCustomerGatewayFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomerGatewayFilter)(nil)).Elem()
}

func (o GetCustomerGatewayFilterArrayOutput) ToGetCustomerGatewayFilterArrayOutput() GetCustomerGatewayFilterArrayOutput {
	return o
}

func (o GetCustomerGatewayFilterArrayOutput) ToGetCustomerGatewayFilterArrayOutputWithContext(ctx context.Context) GetCustomerGatewayFilterArrayOutput {
	return o
}

func (o GetCustomerGatewayFilterArrayOutput) Index(i pulumi.IntInput) GetCustomerGatewayFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomerGatewayFilter {
		return vs[0].([]GetCustomerGatewayFilter)[vs[1].(int)]
	}).(GetCustomerGatewayFilterOutput)
}

type GetInstanceCreditSpecification struct {
	CpuCredits string `pulumi:"cpuCredits"`
}

// GetInstanceCreditSpecificationInput is an input type that accepts GetInstanceCreditSpecificationArgs and GetInstanceCreditSpecificationOutput values.
// You can construct a concrete instance of `GetInstanceCreditSpecificationInput` via:
//
// 		 GetInstanceCreditSpecificationArgs{...}
//
type GetInstanceCreditSpecificationInput interface {
	pulumi.Input

	ToGetInstanceCreditSpecificationOutput() GetInstanceCreditSpecificationOutput
	ToGetInstanceCreditSpecificationOutputWithContext(context.Context) GetInstanceCreditSpecificationOutput
}

type GetInstanceCreditSpecificationArgs struct {
	CpuCredits pulumi.StringInput `pulumi:"cpuCredits"`
}

func (GetInstanceCreditSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceCreditSpecification)(nil)).Elem()
}

func (i GetInstanceCreditSpecificationArgs) ToGetInstanceCreditSpecificationOutput() GetInstanceCreditSpecificationOutput {
	return i.ToGetInstanceCreditSpecificationOutputWithContext(context.Background())
}

func (i GetInstanceCreditSpecificationArgs) ToGetInstanceCreditSpecificationOutputWithContext(ctx context.Context) GetInstanceCreditSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceCreditSpecificationOutput)
}

// GetInstanceCreditSpecificationArrayInput is an input type that accepts GetInstanceCreditSpecificationArray and GetInstanceCreditSpecificationArrayOutput values.
// You can construct a concrete instance of `GetInstanceCreditSpecificationArrayInput` via:
//
// 		 GetInstanceCreditSpecificationArray{ GetInstanceCreditSpecificationArgs{...} }
//
type GetInstanceCreditSpecificationArrayInput interface {
	pulumi.Input

	ToGetInstanceCreditSpecificationArrayOutput() GetInstanceCreditSpecificationArrayOutput
	ToGetInstanceCreditSpecificationArrayOutputWithContext(context.Context) GetInstanceCreditSpecificationArrayOutput
}

type GetInstanceCreditSpecificationArray []GetInstanceCreditSpecificationInput

func (GetInstanceCreditSpecificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceCreditSpecification)(nil)).Elem()
}

func (i GetInstanceCreditSpecificationArray) ToGetInstanceCreditSpecificationArrayOutput() GetInstanceCreditSpecificationArrayOutput {
	return i.ToGetInstanceCreditSpecificationArrayOutputWithContext(context.Background())
}

func (i GetInstanceCreditSpecificationArray) ToGetInstanceCreditSpecificationArrayOutputWithContext(ctx context.Context) GetInstanceCreditSpecificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceCreditSpecificationArrayOutput)
}

type GetInstanceCreditSpecificationOutput struct{ *pulumi.OutputState }

func (GetInstanceCreditSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceCreditSpecification)(nil)).Elem()
}

func (o GetInstanceCreditSpecificationOutput) ToGetInstanceCreditSpecificationOutput() GetInstanceCreditSpecificationOutput {
	return o
}

func (o GetInstanceCreditSpecificationOutput) ToGetInstanceCreditSpecificationOutputWithContext(ctx context.Context) GetInstanceCreditSpecificationOutput {
	return o
}

func (o GetInstanceCreditSpecificationOutput) CpuCredits() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceCreditSpecification) string { return v.CpuCredits }).(pulumi.StringOutput)
}

type GetInstanceCreditSpecificationArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceCreditSpecificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceCreditSpecification)(nil)).Elem()
}

func (o GetInstanceCreditSpecificationArrayOutput) ToGetInstanceCreditSpecificationArrayOutput() GetInstanceCreditSpecificationArrayOutput {
	return o
}

func (o GetInstanceCreditSpecificationArrayOutput) ToGetInstanceCreditSpecificationArrayOutputWithContext(ctx context.Context) GetInstanceCreditSpecificationArrayOutput {
	return o
}

func (o GetInstanceCreditSpecificationArrayOutput) Index(i pulumi.IntInput) GetInstanceCreditSpecificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceCreditSpecification {
		return vs[0].([]GetInstanceCreditSpecification)[vs[1].(int)]
	}).(GetInstanceCreditSpecificationOutput)
}

type GetInstanceEbsBlockDevice struct {
	// If the root block device will be deleted on termination.
	DeleteOnTermination bool `pulumi:"deleteOnTermination"`
	// The physical name of the device.
	DeviceName string `pulumi:"deviceName"`
	// If the EBS volume is encrypted.
	Encrypted bool `pulumi:"encrypted"`
	// `0` If the volume is not a provisioned IOPS image, otherwise the supported IOPS count.
	Iops     int    `pulumi:"iops"`
	KmsKeyId string `pulumi:"kmsKeyId"`
	// The ID of the snapshot.
	SnapshotId string `pulumi:"snapshotId"`
	VolumeId   string `pulumi:"volumeId"`
	// The size of the volume, in GiB.
	VolumeSize int `pulumi:"volumeSize"`
	// The type of the volume.
	VolumeType string `pulumi:"volumeType"`
}

// GetInstanceEbsBlockDeviceInput is an input type that accepts GetInstanceEbsBlockDeviceArgs and GetInstanceEbsBlockDeviceOutput values.
// You can construct a concrete instance of `GetInstanceEbsBlockDeviceInput` via:
//
// 		 GetInstanceEbsBlockDeviceArgs{...}
//
type GetInstanceEbsBlockDeviceInput interface {
	pulumi.Input

	ToGetInstanceEbsBlockDeviceOutput() GetInstanceEbsBlockDeviceOutput
	ToGetInstanceEbsBlockDeviceOutputWithContext(context.Context) GetInstanceEbsBlockDeviceOutput
}

type GetInstanceEbsBlockDeviceArgs struct {
	// If the root block device will be deleted on termination.
	DeleteOnTermination pulumi.BoolInput `pulumi:"deleteOnTermination"`
	// The physical name of the device.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// If the EBS volume is encrypted.
	Encrypted pulumi.BoolInput `pulumi:"encrypted"`
	// `0` If the volume is not a provisioned IOPS image, otherwise the supported IOPS count.
	Iops     pulumi.IntInput    `pulumi:"iops"`
	KmsKeyId pulumi.StringInput `pulumi:"kmsKeyId"`
	// The ID of the snapshot.
	SnapshotId pulumi.StringInput `pulumi:"snapshotId"`
	VolumeId   pulumi.StringInput `pulumi:"volumeId"`
	// The size of the volume, in GiB.
	VolumeSize pulumi.IntInput `pulumi:"volumeSize"`
	// The type of the volume.
	VolumeType pulumi.StringInput `pulumi:"volumeType"`
}

func (GetInstanceEbsBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceEbsBlockDevice)(nil)).Elem()
}

func (i GetInstanceEbsBlockDeviceArgs) ToGetInstanceEbsBlockDeviceOutput() GetInstanceEbsBlockDeviceOutput {
	return i.ToGetInstanceEbsBlockDeviceOutputWithContext(context.Background())
}

func (i GetInstanceEbsBlockDeviceArgs) ToGetInstanceEbsBlockDeviceOutputWithContext(ctx context.Context) GetInstanceEbsBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEbsBlockDeviceOutput)
}

// GetInstanceEbsBlockDeviceArrayInput is an input type that accepts GetInstanceEbsBlockDeviceArray and GetInstanceEbsBlockDeviceArrayOutput values.
// You can construct a concrete instance of `GetInstanceEbsBlockDeviceArrayInput` via:
//
// 		 GetInstanceEbsBlockDeviceArray{ GetInstanceEbsBlockDeviceArgs{...} }
//
type GetInstanceEbsBlockDeviceArrayInput interface {
	pulumi.Input

	ToGetInstanceEbsBlockDeviceArrayOutput() GetInstanceEbsBlockDeviceArrayOutput
	ToGetInstanceEbsBlockDeviceArrayOutputWithContext(context.Context) GetInstanceEbsBlockDeviceArrayOutput
}

type GetInstanceEbsBlockDeviceArray []GetInstanceEbsBlockDeviceInput

func (GetInstanceEbsBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceEbsBlockDevice)(nil)).Elem()
}

func (i GetInstanceEbsBlockDeviceArray) ToGetInstanceEbsBlockDeviceArrayOutput() GetInstanceEbsBlockDeviceArrayOutput {
	return i.ToGetInstanceEbsBlockDeviceArrayOutputWithContext(context.Background())
}

func (i GetInstanceEbsBlockDeviceArray) ToGetInstanceEbsBlockDeviceArrayOutputWithContext(ctx context.Context) GetInstanceEbsBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEbsBlockDeviceArrayOutput)
}

type GetInstanceEbsBlockDeviceOutput struct{ *pulumi.OutputState }

func (GetInstanceEbsBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceEbsBlockDevice)(nil)).Elem()
}

func (o GetInstanceEbsBlockDeviceOutput) ToGetInstanceEbsBlockDeviceOutput() GetInstanceEbsBlockDeviceOutput {
	return o
}

func (o GetInstanceEbsBlockDeviceOutput) ToGetInstanceEbsBlockDeviceOutputWithContext(ctx context.Context) GetInstanceEbsBlockDeviceOutput {
	return o
}

// If the root block device will be deleted on termination.
func (o GetInstanceEbsBlockDeviceOutput) DeleteOnTermination() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceEbsBlockDevice) bool { return v.DeleteOnTermination }).(pulumi.BoolOutput)
}

// The physical name of the device.
func (o GetInstanceEbsBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEbsBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

// If the EBS volume is encrypted.
func (o GetInstanceEbsBlockDeviceOutput) Encrypted() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceEbsBlockDevice) bool { return v.Encrypted }).(pulumi.BoolOutput)
}

// `0` If the volume is not a provisioned IOPS image, otherwise the supported IOPS count.
func (o GetInstanceEbsBlockDeviceOutput) Iops() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceEbsBlockDevice) int { return v.Iops }).(pulumi.IntOutput)
}

func (o GetInstanceEbsBlockDeviceOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEbsBlockDevice) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

// The ID of the snapshot.
func (o GetInstanceEbsBlockDeviceOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEbsBlockDevice) string { return v.SnapshotId }).(pulumi.StringOutput)
}

func (o GetInstanceEbsBlockDeviceOutput) VolumeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEbsBlockDevice) string { return v.VolumeId }).(pulumi.StringOutput)
}

// The size of the volume, in GiB.
func (o GetInstanceEbsBlockDeviceOutput) VolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceEbsBlockDevice) int { return v.VolumeSize }).(pulumi.IntOutput)
}

// The type of the volume.
func (o GetInstanceEbsBlockDeviceOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEbsBlockDevice) string { return v.VolumeType }).(pulumi.StringOutput)
}

type GetInstanceEbsBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceEbsBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceEbsBlockDevice)(nil)).Elem()
}

func (o GetInstanceEbsBlockDeviceArrayOutput) ToGetInstanceEbsBlockDeviceArrayOutput() GetInstanceEbsBlockDeviceArrayOutput {
	return o
}

func (o GetInstanceEbsBlockDeviceArrayOutput) ToGetInstanceEbsBlockDeviceArrayOutputWithContext(ctx context.Context) GetInstanceEbsBlockDeviceArrayOutput {
	return o
}

func (o GetInstanceEbsBlockDeviceArrayOutput) Index(i pulumi.IntInput) GetInstanceEbsBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceEbsBlockDevice {
		return vs[0].([]GetInstanceEbsBlockDevice)[vs[1].(int)]
	}).(GetInstanceEbsBlockDeviceOutput)
}

type GetInstanceEphemeralBlockDevice struct {
	// The physical name of the device.
	DeviceName string `pulumi:"deviceName"`
	// Whether the specified device included in the device mapping was suppressed or not (Boolean).
	NoDevice *bool `pulumi:"noDevice"`
	// The virtual device name.
	VirtualName *string `pulumi:"virtualName"`
}

// GetInstanceEphemeralBlockDeviceInput is an input type that accepts GetInstanceEphemeralBlockDeviceArgs and GetInstanceEphemeralBlockDeviceOutput values.
// You can construct a concrete instance of `GetInstanceEphemeralBlockDeviceInput` via:
//
// 		 GetInstanceEphemeralBlockDeviceArgs{...}
//
type GetInstanceEphemeralBlockDeviceInput interface {
	pulumi.Input

	ToGetInstanceEphemeralBlockDeviceOutput() GetInstanceEphemeralBlockDeviceOutput
	ToGetInstanceEphemeralBlockDeviceOutputWithContext(context.Context) GetInstanceEphemeralBlockDeviceOutput
}

type GetInstanceEphemeralBlockDeviceArgs struct {
	// The physical name of the device.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// Whether the specified device included in the device mapping was suppressed or not (Boolean).
	NoDevice pulumi.BoolPtrInput `pulumi:"noDevice"`
	// The virtual device name.
	VirtualName pulumi.StringPtrInput `pulumi:"virtualName"`
}

func (GetInstanceEphemeralBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceEphemeralBlockDevice)(nil)).Elem()
}

func (i GetInstanceEphemeralBlockDeviceArgs) ToGetInstanceEphemeralBlockDeviceOutput() GetInstanceEphemeralBlockDeviceOutput {
	return i.ToGetInstanceEphemeralBlockDeviceOutputWithContext(context.Background())
}

func (i GetInstanceEphemeralBlockDeviceArgs) ToGetInstanceEphemeralBlockDeviceOutputWithContext(ctx context.Context) GetInstanceEphemeralBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEphemeralBlockDeviceOutput)
}

// GetInstanceEphemeralBlockDeviceArrayInput is an input type that accepts GetInstanceEphemeralBlockDeviceArray and GetInstanceEphemeralBlockDeviceArrayOutput values.
// You can construct a concrete instance of `GetInstanceEphemeralBlockDeviceArrayInput` via:
//
// 		 GetInstanceEphemeralBlockDeviceArray{ GetInstanceEphemeralBlockDeviceArgs{...} }
//
type GetInstanceEphemeralBlockDeviceArrayInput interface {
	pulumi.Input

	ToGetInstanceEphemeralBlockDeviceArrayOutput() GetInstanceEphemeralBlockDeviceArrayOutput
	ToGetInstanceEphemeralBlockDeviceArrayOutputWithContext(context.Context) GetInstanceEphemeralBlockDeviceArrayOutput
}

type GetInstanceEphemeralBlockDeviceArray []GetInstanceEphemeralBlockDeviceInput

func (GetInstanceEphemeralBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceEphemeralBlockDevice)(nil)).Elem()
}

func (i GetInstanceEphemeralBlockDeviceArray) ToGetInstanceEphemeralBlockDeviceArrayOutput() GetInstanceEphemeralBlockDeviceArrayOutput {
	return i.ToGetInstanceEphemeralBlockDeviceArrayOutputWithContext(context.Background())
}

func (i GetInstanceEphemeralBlockDeviceArray) ToGetInstanceEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) GetInstanceEphemeralBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEphemeralBlockDeviceArrayOutput)
}

type GetInstanceEphemeralBlockDeviceOutput struct{ *pulumi.OutputState }

func (GetInstanceEphemeralBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceEphemeralBlockDevice)(nil)).Elem()
}

func (o GetInstanceEphemeralBlockDeviceOutput) ToGetInstanceEphemeralBlockDeviceOutput() GetInstanceEphemeralBlockDeviceOutput {
	return o
}

func (o GetInstanceEphemeralBlockDeviceOutput) ToGetInstanceEphemeralBlockDeviceOutputWithContext(ctx context.Context) GetInstanceEphemeralBlockDeviceOutput {
	return o
}

// The physical name of the device.
func (o GetInstanceEphemeralBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEphemeralBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

// Whether the specified device included in the device mapping was suppressed or not (Boolean).
func (o GetInstanceEphemeralBlockDeviceOutput) NoDevice() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetInstanceEphemeralBlockDevice) *bool { return v.NoDevice }).(pulumi.BoolPtrOutput)
}

// The virtual device name.
func (o GetInstanceEphemeralBlockDeviceOutput) VirtualName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstanceEphemeralBlockDevice) *string { return v.VirtualName }).(pulumi.StringPtrOutput)
}

type GetInstanceEphemeralBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceEphemeralBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceEphemeralBlockDevice)(nil)).Elem()
}

func (o GetInstanceEphemeralBlockDeviceArrayOutput) ToGetInstanceEphemeralBlockDeviceArrayOutput() GetInstanceEphemeralBlockDeviceArrayOutput {
	return o
}

func (o GetInstanceEphemeralBlockDeviceArrayOutput) ToGetInstanceEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) GetInstanceEphemeralBlockDeviceArrayOutput {
	return o
}

func (o GetInstanceEphemeralBlockDeviceArrayOutput) Index(i pulumi.IntInput) GetInstanceEphemeralBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceEphemeralBlockDevice {
		return vs[0].([]GetInstanceEphemeralBlockDevice)[vs[1].(int)]
	}).(GetInstanceEphemeralBlockDeviceOutput)
}

type GetInstanceFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetInstanceFilterInput is an input type that accepts GetInstanceFilterArgs and GetInstanceFilterOutput values.
// You can construct a concrete instance of `GetInstanceFilterInput` via:
//
// 		 GetInstanceFilterArgs{...}
//
type GetInstanceFilterInput interface {
	pulumi.Input

	ToGetInstanceFilterOutput() GetInstanceFilterOutput
	ToGetInstanceFilterOutputWithContext(context.Context) GetInstanceFilterOutput
}

type GetInstanceFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetInstanceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceFilter)(nil)).Elem()
}

func (i GetInstanceFilterArgs) ToGetInstanceFilterOutput() GetInstanceFilterOutput {
	return i.ToGetInstanceFilterOutputWithContext(context.Background())
}

func (i GetInstanceFilterArgs) ToGetInstanceFilterOutputWithContext(ctx context.Context) GetInstanceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceFilterOutput)
}

// GetInstanceFilterArrayInput is an input type that accepts GetInstanceFilterArray and GetInstanceFilterArrayOutput values.
// You can construct a concrete instance of `GetInstanceFilterArrayInput` via:
//
// 		 GetInstanceFilterArray{ GetInstanceFilterArgs{...} }
//
type GetInstanceFilterArrayInput interface {
	pulumi.Input

	ToGetInstanceFilterArrayOutput() GetInstanceFilterArrayOutput
	ToGetInstanceFilterArrayOutputWithContext(context.Context) GetInstanceFilterArrayOutput
}

type GetInstanceFilterArray []GetInstanceFilterInput

func (GetInstanceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceFilter)(nil)).Elem()
}

func (i GetInstanceFilterArray) ToGetInstanceFilterArrayOutput() GetInstanceFilterArrayOutput {
	return i.ToGetInstanceFilterArrayOutputWithContext(context.Background())
}

func (i GetInstanceFilterArray) ToGetInstanceFilterArrayOutputWithContext(ctx context.Context) GetInstanceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceFilterArrayOutput)
}

type GetInstanceFilterOutput struct{ *pulumi.OutputState }

func (GetInstanceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceFilter)(nil)).Elem()
}

func (o GetInstanceFilterOutput) ToGetInstanceFilterOutput() GetInstanceFilterOutput {
	return o
}

func (o GetInstanceFilterOutput) ToGetInstanceFilterOutputWithContext(ctx context.Context) GetInstanceFilterOutput {
	return o
}

func (o GetInstanceFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetInstanceFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstanceFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetInstanceFilterArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceFilter)(nil)).Elem()
}

func (o GetInstanceFilterArrayOutput) ToGetInstanceFilterArrayOutput() GetInstanceFilterArrayOutput {
	return o
}

func (o GetInstanceFilterArrayOutput) ToGetInstanceFilterArrayOutputWithContext(ctx context.Context) GetInstanceFilterArrayOutput {
	return o
}

func (o GetInstanceFilterArrayOutput) Index(i pulumi.IntInput) GetInstanceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceFilter {
		return vs[0].([]GetInstanceFilter)[vs[1].(int)]
	}).(GetInstanceFilterOutput)
}

type GetInstanceMetadataOption struct {
	// The state of the metadata service: `enabled`, `disabled`.
	HttpEndpoint string `pulumi:"httpEndpoint"`
	// The desired HTTP PUT response hop limit for instance metadata requests.
	HttpPutResponseHopLimit int `pulumi:"httpPutResponseHopLimit"`
	// If session tokens are required: `optional`, `required`.
	HttpTokens string `pulumi:"httpTokens"`
}

// GetInstanceMetadataOptionInput is an input type that accepts GetInstanceMetadataOptionArgs and GetInstanceMetadataOptionOutput values.
// You can construct a concrete instance of `GetInstanceMetadataOptionInput` via:
//
// 		 GetInstanceMetadataOptionArgs{...}
//
type GetInstanceMetadataOptionInput interface {
	pulumi.Input

	ToGetInstanceMetadataOptionOutput() GetInstanceMetadataOptionOutput
	ToGetInstanceMetadataOptionOutputWithContext(context.Context) GetInstanceMetadataOptionOutput
}

type GetInstanceMetadataOptionArgs struct {
	// The state of the metadata service: `enabled`, `disabled`.
	HttpEndpoint pulumi.StringInput `pulumi:"httpEndpoint"`
	// The desired HTTP PUT response hop limit for instance metadata requests.
	HttpPutResponseHopLimit pulumi.IntInput `pulumi:"httpPutResponseHopLimit"`
	// If session tokens are required: `optional`, `required`.
	HttpTokens pulumi.StringInput `pulumi:"httpTokens"`
}

func (GetInstanceMetadataOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceMetadataOption)(nil)).Elem()
}

func (i GetInstanceMetadataOptionArgs) ToGetInstanceMetadataOptionOutput() GetInstanceMetadataOptionOutput {
	return i.ToGetInstanceMetadataOptionOutputWithContext(context.Background())
}

func (i GetInstanceMetadataOptionArgs) ToGetInstanceMetadataOptionOutputWithContext(ctx context.Context) GetInstanceMetadataOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceMetadataOptionOutput)
}

// GetInstanceMetadataOptionArrayInput is an input type that accepts GetInstanceMetadataOptionArray and GetInstanceMetadataOptionArrayOutput values.
// You can construct a concrete instance of `GetInstanceMetadataOptionArrayInput` via:
//
// 		 GetInstanceMetadataOptionArray{ GetInstanceMetadataOptionArgs{...} }
//
type GetInstanceMetadataOptionArrayInput interface {
	pulumi.Input

	ToGetInstanceMetadataOptionArrayOutput() GetInstanceMetadataOptionArrayOutput
	ToGetInstanceMetadataOptionArrayOutputWithContext(context.Context) GetInstanceMetadataOptionArrayOutput
}

type GetInstanceMetadataOptionArray []GetInstanceMetadataOptionInput

func (GetInstanceMetadataOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceMetadataOption)(nil)).Elem()
}

func (i GetInstanceMetadataOptionArray) ToGetInstanceMetadataOptionArrayOutput() GetInstanceMetadataOptionArrayOutput {
	return i.ToGetInstanceMetadataOptionArrayOutputWithContext(context.Background())
}

func (i GetInstanceMetadataOptionArray) ToGetInstanceMetadataOptionArrayOutputWithContext(ctx context.Context) GetInstanceMetadataOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceMetadataOptionArrayOutput)
}

type GetInstanceMetadataOptionOutput struct{ *pulumi.OutputState }

func (GetInstanceMetadataOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceMetadataOption)(nil)).Elem()
}

func (o GetInstanceMetadataOptionOutput) ToGetInstanceMetadataOptionOutput() GetInstanceMetadataOptionOutput {
	return o
}

func (o GetInstanceMetadataOptionOutput) ToGetInstanceMetadataOptionOutputWithContext(ctx context.Context) GetInstanceMetadataOptionOutput {
	return o
}

// The state of the metadata service: `enabled`, `disabled`.
func (o GetInstanceMetadataOptionOutput) HttpEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceMetadataOption) string { return v.HttpEndpoint }).(pulumi.StringOutput)
}

// The desired HTTP PUT response hop limit for instance metadata requests.
func (o GetInstanceMetadataOptionOutput) HttpPutResponseHopLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceMetadataOption) int { return v.HttpPutResponseHopLimit }).(pulumi.IntOutput)
}

// If session tokens are required: `optional`, `required`.
func (o GetInstanceMetadataOptionOutput) HttpTokens() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceMetadataOption) string { return v.HttpTokens }).(pulumi.StringOutput)
}

type GetInstanceMetadataOptionArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceMetadataOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceMetadataOption)(nil)).Elem()
}

func (o GetInstanceMetadataOptionArrayOutput) ToGetInstanceMetadataOptionArrayOutput() GetInstanceMetadataOptionArrayOutput {
	return o
}

func (o GetInstanceMetadataOptionArrayOutput) ToGetInstanceMetadataOptionArrayOutputWithContext(ctx context.Context) GetInstanceMetadataOptionArrayOutput {
	return o
}

func (o GetInstanceMetadataOptionArrayOutput) Index(i pulumi.IntInput) GetInstanceMetadataOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceMetadataOption {
		return vs[0].([]GetInstanceMetadataOption)[vs[1].(int)]
	}).(GetInstanceMetadataOptionOutput)
}

type GetInstanceRootBlockDevice struct {
	// If the root block device will be deleted on termination.
	DeleteOnTermination bool `pulumi:"deleteOnTermination"`
	// If the EBS volume is encrypted.
	Encrypted bool `pulumi:"encrypted"`
	// `0` If the volume is not a provisioned IOPS image, otherwise the supported IOPS count.
	Iops     int    `pulumi:"iops"`
	KmsKeyId string `pulumi:"kmsKeyId"`
	VolumeId string `pulumi:"volumeId"`
	// The size of the volume, in GiB.
	VolumeSize int `pulumi:"volumeSize"`
	// The type of the volume.
	VolumeType string `pulumi:"volumeType"`
}

// GetInstanceRootBlockDeviceInput is an input type that accepts GetInstanceRootBlockDeviceArgs and GetInstanceRootBlockDeviceOutput values.
// You can construct a concrete instance of `GetInstanceRootBlockDeviceInput` via:
//
// 		 GetInstanceRootBlockDeviceArgs{...}
//
type GetInstanceRootBlockDeviceInput interface {
	pulumi.Input

	ToGetInstanceRootBlockDeviceOutput() GetInstanceRootBlockDeviceOutput
	ToGetInstanceRootBlockDeviceOutputWithContext(context.Context) GetInstanceRootBlockDeviceOutput
}

type GetInstanceRootBlockDeviceArgs struct {
	// If the root block device will be deleted on termination.
	DeleteOnTermination pulumi.BoolInput `pulumi:"deleteOnTermination"`
	// If the EBS volume is encrypted.
	Encrypted pulumi.BoolInput `pulumi:"encrypted"`
	// `0` If the volume is not a provisioned IOPS image, otherwise the supported IOPS count.
	Iops     pulumi.IntInput    `pulumi:"iops"`
	KmsKeyId pulumi.StringInput `pulumi:"kmsKeyId"`
	VolumeId pulumi.StringInput `pulumi:"volumeId"`
	// The size of the volume, in GiB.
	VolumeSize pulumi.IntInput `pulumi:"volumeSize"`
	// The type of the volume.
	VolumeType pulumi.StringInput `pulumi:"volumeType"`
}

func (GetInstanceRootBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceRootBlockDevice)(nil)).Elem()
}

func (i GetInstanceRootBlockDeviceArgs) ToGetInstanceRootBlockDeviceOutput() GetInstanceRootBlockDeviceOutput {
	return i.ToGetInstanceRootBlockDeviceOutputWithContext(context.Background())
}

func (i GetInstanceRootBlockDeviceArgs) ToGetInstanceRootBlockDeviceOutputWithContext(ctx context.Context) GetInstanceRootBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceRootBlockDeviceOutput)
}

// GetInstanceRootBlockDeviceArrayInput is an input type that accepts GetInstanceRootBlockDeviceArray and GetInstanceRootBlockDeviceArrayOutput values.
// You can construct a concrete instance of `GetInstanceRootBlockDeviceArrayInput` via:
//
// 		 GetInstanceRootBlockDeviceArray{ GetInstanceRootBlockDeviceArgs{...} }
//
type GetInstanceRootBlockDeviceArrayInput interface {
	pulumi.Input

	ToGetInstanceRootBlockDeviceArrayOutput() GetInstanceRootBlockDeviceArrayOutput
	ToGetInstanceRootBlockDeviceArrayOutputWithContext(context.Context) GetInstanceRootBlockDeviceArrayOutput
}

type GetInstanceRootBlockDeviceArray []GetInstanceRootBlockDeviceInput

func (GetInstanceRootBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceRootBlockDevice)(nil)).Elem()
}

func (i GetInstanceRootBlockDeviceArray) ToGetInstanceRootBlockDeviceArrayOutput() GetInstanceRootBlockDeviceArrayOutput {
	return i.ToGetInstanceRootBlockDeviceArrayOutputWithContext(context.Background())
}

func (i GetInstanceRootBlockDeviceArray) ToGetInstanceRootBlockDeviceArrayOutputWithContext(ctx context.Context) GetInstanceRootBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceRootBlockDeviceArrayOutput)
}

type GetInstanceRootBlockDeviceOutput struct{ *pulumi.OutputState }

func (GetInstanceRootBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceRootBlockDevice)(nil)).Elem()
}

func (o GetInstanceRootBlockDeviceOutput) ToGetInstanceRootBlockDeviceOutput() GetInstanceRootBlockDeviceOutput {
	return o
}

func (o GetInstanceRootBlockDeviceOutput) ToGetInstanceRootBlockDeviceOutputWithContext(ctx context.Context) GetInstanceRootBlockDeviceOutput {
	return o
}

// If the root block device will be deleted on termination.
func (o GetInstanceRootBlockDeviceOutput) DeleteOnTermination() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceRootBlockDevice) bool { return v.DeleteOnTermination }).(pulumi.BoolOutput)
}

// If the EBS volume is encrypted.
func (o GetInstanceRootBlockDeviceOutput) Encrypted() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceRootBlockDevice) bool { return v.Encrypted }).(pulumi.BoolOutput)
}

// `0` If the volume is not a provisioned IOPS image, otherwise the supported IOPS count.
func (o GetInstanceRootBlockDeviceOutput) Iops() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceRootBlockDevice) int { return v.Iops }).(pulumi.IntOutput)
}

func (o GetInstanceRootBlockDeviceOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceRootBlockDevice) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

func (o GetInstanceRootBlockDeviceOutput) VolumeId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceRootBlockDevice) string { return v.VolumeId }).(pulumi.StringOutput)
}

// The size of the volume, in GiB.
func (o GetInstanceRootBlockDeviceOutput) VolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceRootBlockDevice) int { return v.VolumeSize }).(pulumi.IntOutput)
}

// The type of the volume.
func (o GetInstanceRootBlockDeviceOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceRootBlockDevice) string { return v.VolumeType }).(pulumi.StringOutput)
}

type GetInstanceRootBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceRootBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceRootBlockDevice)(nil)).Elem()
}

func (o GetInstanceRootBlockDeviceArrayOutput) ToGetInstanceRootBlockDeviceArrayOutput() GetInstanceRootBlockDeviceArrayOutput {
	return o
}

func (o GetInstanceRootBlockDeviceArrayOutput) ToGetInstanceRootBlockDeviceArrayOutputWithContext(ctx context.Context) GetInstanceRootBlockDeviceArrayOutput {
	return o
}

func (o GetInstanceRootBlockDeviceArrayOutput) Index(i pulumi.IntInput) GetInstanceRootBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceRootBlockDevice {
		return vs[0].([]GetInstanceRootBlockDevice)[vs[1].(int)]
	}).(GetInstanceRootBlockDeviceOutput)
}

type GetInstanceTypeOfferingFilter struct {
	// Name of the filter. The `location` filter depends on the top-level `locationType` argument and if not specified, defaults to the current region.
	Name string `pulumi:"name"`
	// List of one or more values for the filter.
	Values []string `pulumi:"values"`
}

// GetInstanceTypeOfferingFilterInput is an input type that accepts GetInstanceTypeOfferingFilterArgs and GetInstanceTypeOfferingFilterOutput values.
// You can construct a concrete instance of `GetInstanceTypeOfferingFilterInput` via:
//
// 		 GetInstanceTypeOfferingFilterArgs{...}
//
type GetInstanceTypeOfferingFilterInput interface {
	pulumi.Input

	ToGetInstanceTypeOfferingFilterOutput() GetInstanceTypeOfferingFilterOutput
	ToGetInstanceTypeOfferingFilterOutputWithContext(context.Context) GetInstanceTypeOfferingFilterOutput
}

type GetInstanceTypeOfferingFilterArgs struct {
	// Name of the filter. The `location` filter depends on the top-level `locationType` argument and if not specified, defaults to the current region.
	Name pulumi.StringInput `pulumi:"name"`
	// List of one or more values for the filter.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetInstanceTypeOfferingFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypeOfferingFilter)(nil)).Elem()
}

func (i GetInstanceTypeOfferingFilterArgs) ToGetInstanceTypeOfferingFilterOutput() GetInstanceTypeOfferingFilterOutput {
	return i.ToGetInstanceTypeOfferingFilterOutputWithContext(context.Background())
}

func (i GetInstanceTypeOfferingFilterArgs) ToGetInstanceTypeOfferingFilterOutputWithContext(ctx context.Context) GetInstanceTypeOfferingFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypeOfferingFilterOutput)
}

// GetInstanceTypeOfferingFilterArrayInput is an input type that accepts GetInstanceTypeOfferingFilterArray and GetInstanceTypeOfferingFilterArrayOutput values.
// You can construct a concrete instance of `GetInstanceTypeOfferingFilterArrayInput` via:
//
// 		 GetInstanceTypeOfferingFilterArray{ GetInstanceTypeOfferingFilterArgs{...} }
//
type GetInstanceTypeOfferingFilterArrayInput interface {
	pulumi.Input

	ToGetInstanceTypeOfferingFilterArrayOutput() GetInstanceTypeOfferingFilterArrayOutput
	ToGetInstanceTypeOfferingFilterArrayOutputWithContext(context.Context) GetInstanceTypeOfferingFilterArrayOutput
}

type GetInstanceTypeOfferingFilterArray []GetInstanceTypeOfferingFilterInput

func (GetInstanceTypeOfferingFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypeOfferingFilter)(nil)).Elem()
}

func (i GetInstanceTypeOfferingFilterArray) ToGetInstanceTypeOfferingFilterArrayOutput() GetInstanceTypeOfferingFilterArrayOutput {
	return i.ToGetInstanceTypeOfferingFilterArrayOutputWithContext(context.Background())
}

func (i GetInstanceTypeOfferingFilterArray) ToGetInstanceTypeOfferingFilterArrayOutputWithContext(ctx context.Context) GetInstanceTypeOfferingFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypeOfferingFilterArrayOutput)
}

type GetInstanceTypeOfferingFilterOutput struct{ *pulumi.OutputState }

func (GetInstanceTypeOfferingFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypeOfferingFilter)(nil)).Elem()
}

func (o GetInstanceTypeOfferingFilterOutput) ToGetInstanceTypeOfferingFilterOutput() GetInstanceTypeOfferingFilterOutput {
	return o
}

func (o GetInstanceTypeOfferingFilterOutput) ToGetInstanceTypeOfferingFilterOutputWithContext(ctx context.Context) GetInstanceTypeOfferingFilterOutput {
	return o
}

// Name of the filter. The `location` filter depends on the top-level `locationType` argument and if not specified, defaults to the current region.
func (o GetInstanceTypeOfferingFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceTypeOfferingFilter) string { return v.Name }).(pulumi.StringOutput)
}

// List of one or more values for the filter.
func (o GetInstanceTypeOfferingFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstanceTypeOfferingFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetInstanceTypeOfferingFilterArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceTypeOfferingFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypeOfferingFilter)(nil)).Elem()
}

func (o GetInstanceTypeOfferingFilterArrayOutput) ToGetInstanceTypeOfferingFilterArrayOutput() GetInstanceTypeOfferingFilterArrayOutput {
	return o
}

func (o GetInstanceTypeOfferingFilterArrayOutput) ToGetInstanceTypeOfferingFilterArrayOutputWithContext(ctx context.Context) GetInstanceTypeOfferingFilterArrayOutput {
	return o
}

func (o GetInstanceTypeOfferingFilterArrayOutput) Index(i pulumi.IntInput) GetInstanceTypeOfferingFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceTypeOfferingFilter {
		return vs[0].([]GetInstanceTypeOfferingFilter)[vs[1].(int)]
	}).(GetInstanceTypeOfferingFilterOutput)
}

type GetInstanceTypeOfferingsFilter struct {
	// Name of the filter. The `location` filter depends on the top-level `locationType` argument and if not specified, defaults to the current region.
	Name string `pulumi:"name"`
	// List of one or more values for the filter.
	Values []string `pulumi:"values"`
}

// GetInstanceTypeOfferingsFilterInput is an input type that accepts GetInstanceTypeOfferingsFilterArgs and GetInstanceTypeOfferingsFilterOutput values.
// You can construct a concrete instance of `GetInstanceTypeOfferingsFilterInput` via:
//
// 		 GetInstanceTypeOfferingsFilterArgs{...}
//
type GetInstanceTypeOfferingsFilterInput interface {
	pulumi.Input

	ToGetInstanceTypeOfferingsFilterOutput() GetInstanceTypeOfferingsFilterOutput
	ToGetInstanceTypeOfferingsFilterOutputWithContext(context.Context) GetInstanceTypeOfferingsFilterOutput
}

type GetInstanceTypeOfferingsFilterArgs struct {
	// Name of the filter. The `location` filter depends on the top-level `locationType` argument and if not specified, defaults to the current region.
	Name pulumi.StringInput `pulumi:"name"`
	// List of one or more values for the filter.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetInstanceTypeOfferingsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypeOfferingsFilter)(nil)).Elem()
}

func (i GetInstanceTypeOfferingsFilterArgs) ToGetInstanceTypeOfferingsFilterOutput() GetInstanceTypeOfferingsFilterOutput {
	return i.ToGetInstanceTypeOfferingsFilterOutputWithContext(context.Background())
}

func (i GetInstanceTypeOfferingsFilterArgs) ToGetInstanceTypeOfferingsFilterOutputWithContext(ctx context.Context) GetInstanceTypeOfferingsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypeOfferingsFilterOutput)
}

// GetInstanceTypeOfferingsFilterArrayInput is an input type that accepts GetInstanceTypeOfferingsFilterArray and GetInstanceTypeOfferingsFilterArrayOutput values.
// You can construct a concrete instance of `GetInstanceTypeOfferingsFilterArrayInput` via:
//
// 		 GetInstanceTypeOfferingsFilterArray{ GetInstanceTypeOfferingsFilterArgs{...} }
//
type GetInstanceTypeOfferingsFilterArrayInput interface {
	pulumi.Input

	ToGetInstanceTypeOfferingsFilterArrayOutput() GetInstanceTypeOfferingsFilterArrayOutput
	ToGetInstanceTypeOfferingsFilterArrayOutputWithContext(context.Context) GetInstanceTypeOfferingsFilterArrayOutput
}

type GetInstanceTypeOfferingsFilterArray []GetInstanceTypeOfferingsFilterInput

func (GetInstanceTypeOfferingsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypeOfferingsFilter)(nil)).Elem()
}

func (i GetInstanceTypeOfferingsFilterArray) ToGetInstanceTypeOfferingsFilterArrayOutput() GetInstanceTypeOfferingsFilterArrayOutput {
	return i.ToGetInstanceTypeOfferingsFilterArrayOutputWithContext(context.Background())
}

func (i GetInstanceTypeOfferingsFilterArray) ToGetInstanceTypeOfferingsFilterArrayOutputWithContext(ctx context.Context) GetInstanceTypeOfferingsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceTypeOfferingsFilterArrayOutput)
}

type GetInstanceTypeOfferingsFilterOutput struct{ *pulumi.OutputState }

func (GetInstanceTypeOfferingsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTypeOfferingsFilter)(nil)).Elem()
}

func (o GetInstanceTypeOfferingsFilterOutput) ToGetInstanceTypeOfferingsFilterOutput() GetInstanceTypeOfferingsFilterOutput {
	return o
}

func (o GetInstanceTypeOfferingsFilterOutput) ToGetInstanceTypeOfferingsFilterOutputWithContext(ctx context.Context) GetInstanceTypeOfferingsFilterOutput {
	return o
}

// Name of the filter. The `location` filter depends on the top-level `locationType` argument and if not specified, defaults to the current region.
func (o GetInstanceTypeOfferingsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceTypeOfferingsFilter) string { return v.Name }).(pulumi.StringOutput)
}

// List of one or more values for the filter.
func (o GetInstanceTypeOfferingsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstanceTypeOfferingsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetInstanceTypeOfferingsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceTypeOfferingsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceTypeOfferingsFilter)(nil)).Elem()
}

func (o GetInstanceTypeOfferingsFilterArrayOutput) ToGetInstanceTypeOfferingsFilterArrayOutput() GetInstanceTypeOfferingsFilterArrayOutput {
	return o
}

func (o GetInstanceTypeOfferingsFilterArrayOutput) ToGetInstanceTypeOfferingsFilterArrayOutputWithContext(ctx context.Context) GetInstanceTypeOfferingsFilterArrayOutput {
	return o
}

func (o GetInstanceTypeOfferingsFilterArrayOutput) Index(i pulumi.IntInput) GetInstanceTypeOfferingsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceTypeOfferingsFilter {
		return vs[0].([]GetInstanceTypeOfferingsFilter)[vs[1].(int)]
	}).(GetInstanceTypeOfferingsFilterOutput)
}

type GetInstancesFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetInstancesFilterInput is an input type that accepts GetInstancesFilterArgs and GetInstancesFilterOutput values.
// You can construct a concrete instance of `GetInstancesFilterInput` via:
//
// 		 GetInstancesFilterArgs{...}
//
type GetInstancesFilterInput interface {
	pulumi.Input

	ToGetInstancesFilterOutput() GetInstancesFilterOutput
	ToGetInstancesFilterOutputWithContext(context.Context) GetInstancesFilterOutput
}

type GetInstancesFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetInstancesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesFilter)(nil)).Elem()
}

func (i GetInstancesFilterArgs) ToGetInstancesFilterOutput() GetInstancesFilterOutput {
	return i.ToGetInstancesFilterOutputWithContext(context.Background())
}

func (i GetInstancesFilterArgs) ToGetInstancesFilterOutputWithContext(ctx context.Context) GetInstancesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesFilterOutput)
}

// GetInstancesFilterArrayInput is an input type that accepts GetInstancesFilterArray and GetInstancesFilterArrayOutput values.
// You can construct a concrete instance of `GetInstancesFilterArrayInput` via:
//
// 		 GetInstancesFilterArray{ GetInstancesFilterArgs{...} }
//
type GetInstancesFilterArrayInput interface {
	pulumi.Input

	ToGetInstancesFilterArrayOutput() GetInstancesFilterArrayOutput
	ToGetInstancesFilterArrayOutputWithContext(context.Context) GetInstancesFilterArrayOutput
}

type GetInstancesFilterArray []GetInstancesFilterInput

func (GetInstancesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesFilter)(nil)).Elem()
}

func (i GetInstancesFilterArray) ToGetInstancesFilterArrayOutput() GetInstancesFilterArrayOutput {
	return i.ToGetInstancesFilterArrayOutputWithContext(context.Background())
}

func (i GetInstancesFilterArray) ToGetInstancesFilterArrayOutputWithContext(ctx context.Context) GetInstancesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesFilterArrayOutput)
}

type GetInstancesFilterOutput struct{ *pulumi.OutputState }

func (GetInstancesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesFilter)(nil)).Elem()
}

func (o GetInstancesFilterOutput) ToGetInstancesFilterOutput() GetInstancesFilterOutput {
	return o
}

func (o GetInstancesFilterOutput) ToGetInstancesFilterOutputWithContext(ctx context.Context) GetInstancesFilterOutput {
	return o
}

func (o GetInstancesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetInstancesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetInstancesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesFilter)(nil)).Elem()
}

func (o GetInstancesFilterArrayOutput) ToGetInstancesFilterArrayOutput() GetInstancesFilterArrayOutput {
	return o
}

func (o GetInstancesFilterArrayOutput) ToGetInstancesFilterArrayOutputWithContext(ctx context.Context) GetInstancesFilterArrayOutput {
	return o
}

func (o GetInstancesFilterArrayOutput) Index(i pulumi.IntInput) GetInstancesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesFilter {
		return vs[0].([]GetInstancesFilter)[vs[1].(int)]
	}).(GetInstancesFilterOutput)
}

type GetInternetGatewayAttachment struct {
	// The current state of the attachment between the gateway and the VPC. Present only if a VPC is attached
	State string `pulumi:"state"`
	// The ID of an attached VPC.
	VpcId string `pulumi:"vpcId"`
}

// GetInternetGatewayAttachmentInput is an input type that accepts GetInternetGatewayAttachmentArgs and GetInternetGatewayAttachmentOutput values.
// You can construct a concrete instance of `GetInternetGatewayAttachmentInput` via:
//
// 		 GetInternetGatewayAttachmentArgs{...}
//
type GetInternetGatewayAttachmentInput interface {
	pulumi.Input

	ToGetInternetGatewayAttachmentOutput() GetInternetGatewayAttachmentOutput
	ToGetInternetGatewayAttachmentOutputWithContext(context.Context) GetInternetGatewayAttachmentOutput
}

type GetInternetGatewayAttachmentArgs struct {
	// The current state of the attachment between the gateway and the VPC. Present only if a VPC is attached
	State pulumi.StringInput `pulumi:"state"`
	// The ID of an attached VPC.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetInternetGatewayAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetGatewayAttachment)(nil)).Elem()
}

func (i GetInternetGatewayAttachmentArgs) ToGetInternetGatewayAttachmentOutput() GetInternetGatewayAttachmentOutput {
	return i.ToGetInternetGatewayAttachmentOutputWithContext(context.Background())
}

func (i GetInternetGatewayAttachmentArgs) ToGetInternetGatewayAttachmentOutputWithContext(ctx context.Context) GetInternetGatewayAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetGatewayAttachmentOutput)
}

// GetInternetGatewayAttachmentArrayInput is an input type that accepts GetInternetGatewayAttachmentArray and GetInternetGatewayAttachmentArrayOutput values.
// You can construct a concrete instance of `GetInternetGatewayAttachmentArrayInput` via:
//
// 		 GetInternetGatewayAttachmentArray{ GetInternetGatewayAttachmentArgs{...} }
//
type GetInternetGatewayAttachmentArrayInput interface {
	pulumi.Input

	ToGetInternetGatewayAttachmentArrayOutput() GetInternetGatewayAttachmentArrayOutput
	ToGetInternetGatewayAttachmentArrayOutputWithContext(context.Context) GetInternetGatewayAttachmentArrayOutput
}

type GetInternetGatewayAttachmentArray []GetInternetGatewayAttachmentInput

func (GetInternetGatewayAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetGatewayAttachment)(nil)).Elem()
}

func (i GetInternetGatewayAttachmentArray) ToGetInternetGatewayAttachmentArrayOutput() GetInternetGatewayAttachmentArrayOutput {
	return i.ToGetInternetGatewayAttachmentArrayOutputWithContext(context.Background())
}

func (i GetInternetGatewayAttachmentArray) ToGetInternetGatewayAttachmentArrayOutputWithContext(ctx context.Context) GetInternetGatewayAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetGatewayAttachmentArrayOutput)
}

type GetInternetGatewayAttachmentOutput struct{ *pulumi.OutputState }

func (GetInternetGatewayAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetGatewayAttachment)(nil)).Elem()
}

func (o GetInternetGatewayAttachmentOutput) ToGetInternetGatewayAttachmentOutput() GetInternetGatewayAttachmentOutput {
	return o
}

func (o GetInternetGatewayAttachmentOutput) ToGetInternetGatewayAttachmentOutputWithContext(ctx context.Context) GetInternetGatewayAttachmentOutput {
	return o
}

// The current state of the attachment between the gateway and the VPC. Present only if a VPC is attached
func (o GetInternetGatewayAttachmentOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetInternetGatewayAttachment) string { return v.State }).(pulumi.StringOutput)
}

// The ID of an attached VPC.
func (o GetInternetGatewayAttachmentOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInternetGatewayAttachment) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetInternetGatewayAttachmentArrayOutput struct{ *pulumi.OutputState }

func (GetInternetGatewayAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetGatewayAttachment)(nil)).Elem()
}

func (o GetInternetGatewayAttachmentArrayOutput) ToGetInternetGatewayAttachmentArrayOutput() GetInternetGatewayAttachmentArrayOutput {
	return o
}

func (o GetInternetGatewayAttachmentArrayOutput) ToGetInternetGatewayAttachmentArrayOutputWithContext(ctx context.Context) GetInternetGatewayAttachmentArrayOutput {
	return o
}

func (o GetInternetGatewayAttachmentArrayOutput) Index(i pulumi.IntInput) GetInternetGatewayAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInternetGatewayAttachment {
		return vs[0].([]GetInternetGatewayAttachment)[vs[1].(int)]
	}).(GetInternetGatewayAttachmentOutput)
}

type GetInternetGatewayFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInternetGateways.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// An Internet Gateway will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

// GetInternetGatewayFilterInput is an input type that accepts GetInternetGatewayFilterArgs and GetInternetGatewayFilterOutput values.
// You can construct a concrete instance of `GetInternetGatewayFilterInput` via:
//
// 		 GetInternetGatewayFilterArgs{...}
//
type GetInternetGatewayFilterInput interface {
	pulumi.Input

	ToGetInternetGatewayFilterOutput() GetInternetGatewayFilterOutput
	ToGetInternetGatewayFilterOutputWithContext(context.Context) GetInternetGatewayFilterOutput
}

type GetInternetGatewayFilterArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInternetGateways.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// An Internet Gateway will be selected if any one of the given values matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetInternetGatewayFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetGatewayFilter)(nil)).Elem()
}

func (i GetInternetGatewayFilterArgs) ToGetInternetGatewayFilterOutput() GetInternetGatewayFilterOutput {
	return i.ToGetInternetGatewayFilterOutputWithContext(context.Background())
}

func (i GetInternetGatewayFilterArgs) ToGetInternetGatewayFilterOutputWithContext(ctx context.Context) GetInternetGatewayFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetGatewayFilterOutput)
}

// GetInternetGatewayFilterArrayInput is an input type that accepts GetInternetGatewayFilterArray and GetInternetGatewayFilterArrayOutput values.
// You can construct a concrete instance of `GetInternetGatewayFilterArrayInput` via:
//
// 		 GetInternetGatewayFilterArray{ GetInternetGatewayFilterArgs{...} }
//
type GetInternetGatewayFilterArrayInput interface {
	pulumi.Input

	ToGetInternetGatewayFilterArrayOutput() GetInternetGatewayFilterArrayOutput
	ToGetInternetGatewayFilterArrayOutputWithContext(context.Context) GetInternetGatewayFilterArrayOutput
}

type GetInternetGatewayFilterArray []GetInternetGatewayFilterInput

func (GetInternetGatewayFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetGatewayFilter)(nil)).Elem()
}

func (i GetInternetGatewayFilterArray) ToGetInternetGatewayFilterArrayOutput() GetInternetGatewayFilterArrayOutput {
	return i.ToGetInternetGatewayFilterArrayOutputWithContext(context.Background())
}

func (i GetInternetGatewayFilterArray) ToGetInternetGatewayFilterArrayOutputWithContext(ctx context.Context) GetInternetGatewayFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetGatewayFilterArrayOutput)
}

type GetInternetGatewayFilterOutput struct{ *pulumi.OutputState }

func (GetInternetGatewayFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetGatewayFilter)(nil)).Elem()
}

func (o GetInternetGatewayFilterOutput) ToGetInternetGatewayFilterOutput() GetInternetGatewayFilterOutput {
	return o
}

func (o GetInternetGatewayFilterOutput) ToGetInternetGatewayFilterOutputWithContext(ctx context.Context) GetInternetGatewayFilterOutput {
	return o
}

// The name of the field to filter by, as defined by
// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInternetGateways.html).
func (o GetInternetGatewayFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInternetGatewayFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field.
// An Internet Gateway will be selected if any one of the given values matches.
func (o GetInternetGatewayFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInternetGatewayFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetInternetGatewayFilterArrayOutput struct{ *pulumi.OutputState }

func (GetInternetGatewayFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetGatewayFilter)(nil)).Elem()
}

func (o GetInternetGatewayFilterArrayOutput) ToGetInternetGatewayFilterArrayOutput() GetInternetGatewayFilterArrayOutput {
	return o
}

func (o GetInternetGatewayFilterArrayOutput) ToGetInternetGatewayFilterArrayOutputWithContext(ctx context.Context) GetInternetGatewayFilterArrayOutput {
	return o
}

func (o GetInternetGatewayFilterArrayOutput) Index(i pulumi.IntInput) GetInternetGatewayFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInternetGatewayFilter {
		return vs[0].([]GetInternetGatewayFilter)[vs[1].(int)]
	}).(GetInternetGatewayFilterOutput)
}

type GetLaunchConfigurationEbsBlockDevice struct {
	// Whether the EBS Volume will be deleted on instance termination.
	DeleteOnTermination bool `pulumi:"deleteOnTermination"`
	// The Name of the device.
	DeviceName string `pulumi:"deviceName"`
	// Whether the volume is Encrypted.
	Encrypted bool `pulumi:"encrypted"`
	// The provisioned IOPs of the volume.
	Iops int `pulumi:"iops"`
	// The Snapshot ID of the mount.
	SnapshotId string `pulumi:"snapshotId"`
	// The Size of the volume.
	VolumeSize int `pulumi:"volumeSize"`
	// The Type of the volume.
	VolumeType string `pulumi:"volumeType"`
}

// GetLaunchConfigurationEbsBlockDeviceInput is an input type that accepts GetLaunchConfigurationEbsBlockDeviceArgs and GetLaunchConfigurationEbsBlockDeviceOutput values.
// You can construct a concrete instance of `GetLaunchConfigurationEbsBlockDeviceInput` via:
//
// 		 GetLaunchConfigurationEbsBlockDeviceArgs{...}
//
type GetLaunchConfigurationEbsBlockDeviceInput interface {
	pulumi.Input

	ToGetLaunchConfigurationEbsBlockDeviceOutput() GetLaunchConfigurationEbsBlockDeviceOutput
	ToGetLaunchConfigurationEbsBlockDeviceOutputWithContext(context.Context) GetLaunchConfigurationEbsBlockDeviceOutput
}

type GetLaunchConfigurationEbsBlockDeviceArgs struct {
	// Whether the EBS Volume will be deleted on instance termination.
	DeleteOnTermination pulumi.BoolInput `pulumi:"deleteOnTermination"`
	// The Name of the device.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// Whether the volume is Encrypted.
	Encrypted pulumi.BoolInput `pulumi:"encrypted"`
	// The provisioned IOPs of the volume.
	Iops pulumi.IntInput `pulumi:"iops"`
	// The Snapshot ID of the mount.
	SnapshotId pulumi.StringInput `pulumi:"snapshotId"`
	// The Size of the volume.
	VolumeSize pulumi.IntInput `pulumi:"volumeSize"`
	// The Type of the volume.
	VolumeType pulumi.StringInput `pulumi:"volumeType"`
}

func (GetLaunchConfigurationEbsBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchConfigurationEbsBlockDevice)(nil)).Elem()
}

func (i GetLaunchConfigurationEbsBlockDeviceArgs) ToGetLaunchConfigurationEbsBlockDeviceOutput() GetLaunchConfigurationEbsBlockDeviceOutput {
	return i.ToGetLaunchConfigurationEbsBlockDeviceOutputWithContext(context.Background())
}

func (i GetLaunchConfigurationEbsBlockDeviceArgs) ToGetLaunchConfigurationEbsBlockDeviceOutputWithContext(ctx context.Context) GetLaunchConfigurationEbsBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchConfigurationEbsBlockDeviceOutput)
}

// GetLaunchConfigurationEbsBlockDeviceArrayInput is an input type that accepts GetLaunchConfigurationEbsBlockDeviceArray and GetLaunchConfigurationEbsBlockDeviceArrayOutput values.
// You can construct a concrete instance of `GetLaunchConfigurationEbsBlockDeviceArrayInput` via:
//
// 		 GetLaunchConfigurationEbsBlockDeviceArray{ GetLaunchConfigurationEbsBlockDeviceArgs{...} }
//
type GetLaunchConfigurationEbsBlockDeviceArrayInput interface {
	pulumi.Input

	ToGetLaunchConfigurationEbsBlockDeviceArrayOutput() GetLaunchConfigurationEbsBlockDeviceArrayOutput
	ToGetLaunchConfigurationEbsBlockDeviceArrayOutputWithContext(context.Context) GetLaunchConfigurationEbsBlockDeviceArrayOutput
}

type GetLaunchConfigurationEbsBlockDeviceArray []GetLaunchConfigurationEbsBlockDeviceInput

func (GetLaunchConfigurationEbsBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchConfigurationEbsBlockDevice)(nil)).Elem()
}

func (i GetLaunchConfigurationEbsBlockDeviceArray) ToGetLaunchConfigurationEbsBlockDeviceArrayOutput() GetLaunchConfigurationEbsBlockDeviceArrayOutput {
	return i.ToGetLaunchConfigurationEbsBlockDeviceArrayOutputWithContext(context.Background())
}

func (i GetLaunchConfigurationEbsBlockDeviceArray) ToGetLaunchConfigurationEbsBlockDeviceArrayOutputWithContext(ctx context.Context) GetLaunchConfigurationEbsBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchConfigurationEbsBlockDeviceArrayOutput)
}

type GetLaunchConfigurationEbsBlockDeviceOutput struct{ *pulumi.OutputState }

func (GetLaunchConfigurationEbsBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchConfigurationEbsBlockDevice)(nil)).Elem()
}

func (o GetLaunchConfigurationEbsBlockDeviceOutput) ToGetLaunchConfigurationEbsBlockDeviceOutput() GetLaunchConfigurationEbsBlockDeviceOutput {
	return o
}

func (o GetLaunchConfigurationEbsBlockDeviceOutput) ToGetLaunchConfigurationEbsBlockDeviceOutputWithContext(ctx context.Context) GetLaunchConfigurationEbsBlockDeviceOutput {
	return o
}

// Whether the EBS Volume will be deleted on instance termination.
func (o GetLaunchConfigurationEbsBlockDeviceOutput) DeleteOnTermination() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLaunchConfigurationEbsBlockDevice) bool { return v.DeleteOnTermination }).(pulumi.BoolOutput)
}

// The Name of the device.
func (o GetLaunchConfigurationEbsBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchConfigurationEbsBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

// Whether the volume is Encrypted.
func (o GetLaunchConfigurationEbsBlockDeviceOutput) Encrypted() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLaunchConfigurationEbsBlockDevice) bool { return v.Encrypted }).(pulumi.BoolOutput)
}

// The provisioned IOPs of the volume.
func (o GetLaunchConfigurationEbsBlockDeviceOutput) Iops() pulumi.IntOutput {
	return o.ApplyT(func(v GetLaunchConfigurationEbsBlockDevice) int { return v.Iops }).(pulumi.IntOutput)
}

// The Snapshot ID of the mount.
func (o GetLaunchConfigurationEbsBlockDeviceOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchConfigurationEbsBlockDevice) string { return v.SnapshotId }).(pulumi.StringOutput)
}

// The Size of the volume.
func (o GetLaunchConfigurationEbsBlockDeviceOutput) VolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetLaunchConfigurationEbsBlockDevice) int { return v.VolumeSize }).(pulumi.IntOutput)
}

// The Type of the volume.
func (o GetLaunchConfigurationEbsBlockDeviceOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchConfigurationEbsBlockDevice) string { return v.VolumeType }).(pulumi.StringOutput)
}

type GetLaunchConfigurationEbsBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (GetLaunchConfigurationEbsBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchConfigurationEbsBlockDevice)(nil)).Elem()
}

func (o GetLaunchConfigurationEbsBlockDeviceArrayOutput) ToGetLaunchConfigurationEbsBlockDeviceArrayOutput() GetLaunchConfigurationEbsBlockDeviceArrayOutput {
	return o
}

func (o GetLaunchConfigurationEbsBlockDeviceArrayOutput) ToGetLaunchConfigurationEbsBlockDeviceArrayOutputWithContext(ctx context.Context) GetLaunchConfigurationEbsBlockDeviceArrayOutput {
	return o
}

func (o GetLaunchConfigurationEbsBlockDeviceArrayOutput) Index(i pulumi.IntInput) GetLaunchConfigurationEbsBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLaunchConfigurationEbsBlockDevice {
		return vs[0].([]GetLaunchConfigurationEbsBlockDevice)[vs[1].(int)]
	}).(GetLaunchConfigurationEbsBlockDeviceOutput)
}

type GetLaunchConfigurationEphemeralBlockDevice struct {
	// The Name of the device.
	DeviceName string `pulumi:"deviceName"`
	// The Virtual Name of the device.
	VirtualName string `pulumi:"virtualName"`
}

// GetLaunchConfigurationEphemeralBlockDeviceInput is an input type that accepts GetLaunchConfigurationEphemeralBlockDeviceArgs and GetLaunchConfigurationEphemeralBlockDeviceOutput values.
// You can construct a concrete instance of `GetLaunchConfigurationEphemeralBlockDeviceInput` via:
//
// 		 GetLaunchConfigurationEphemeralBlockDeviceArgs{...}
//
type GetLaunchConfigurationEphemeralBlockDeviceInput interface {
	pulumi.Input

	ToGetLaunchConfigurationEphemeralBlockDeviceOutput() GetLaunchConfigurationEphemeralBlockDeviceOutput
	ToGetLaunchConfigurationEphemeralBlockDeviceOutputWithContext(context.Context) GetLaunchConfigurationEphemeralBlockDeviceOutput
}

type GetLaunchConfigurationEphemeralBlockDeviceArgs struct {
	// The Name of the device.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// The Virtual Name of the device.
	VirtualName pulumi.StringInput `pulumi:"virtualName"`
}

func (GetLaunchConfigurationEphemeralBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchConfigurationEphemeralBlockDevice)(nil)).Elem()
}

func (i GetLaunchConfigurationEphemeralBlockDeviceArgs) ToGetLaunchConfigurationEphemeralBlockDeviceOutput() GetLaunchConfigurationEphemeralBlockDeviceOutput {
	return i.ToGetLaunchConfigurationEphemeralBlockDeviceOutputWithContext(context.Background())
}

func (i GetLaunchConfigurationEphemeralBlockDeviceArgs) ToGetLaunchConfigurationEphemeralBlockDeviceOutputWithContext(ctx context.Context) GetLaunchConfigurationEphemeralBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchConfigurationEphemeralBlockDeviceOutput)
}

// GetLaunchConfigurationEphemeralBlockDeviceArrayInput is an input type that accepts GetLaunchConfigurationEphemeralBlockDeviceArray and GetLaunchConfigurationEphemeralBlockDeviceArrayOutput values.
// You can construct a concrete instance of `GetLaunchConfigurationEphemeralBlockDeviceArrayInput` via:
//
// 		 GetLaunchConfigurationEphemeralBlockDeviceArray{ GetLaunchConfigurationEphemeralBlockDeviceArgs{...} }
//
type GetLaunchConfigurationEphemeralBlockDeviceArrayInput interface {
	pulumi.Input

	ToGetLaunchConfigurationEphemeralBlockDeviceArrayOutput() GetLaunchConfigurationEphemeralBlockDeviceArrayOutput
	ToGetLaunchConfigurationEphemeralBlockDeviceArrayOutputWithContext(context.Context) GetLaunchConfigurationEphemeralBlockDeviceArrayOutput
}

type GetLaunchConfigurationEphemeralBlockDeviceArray []GetLaunchConfigurationEphemeralBlockDeviceInput

func (GetLaunchConfigurationEphemeralBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchConfigurationEphemeralBlockDevice)(nil)).Elem()
}

func (i GetLaunchConfigurationEphemeralBlockDeviceArray) ToGetLaunchConfigurationEphemeralBlockDeviceArrayOutput() GetLaunchConfigurationEphemeralBlockDeviceArrayOutput {
	return i.ToGetLaunchConfigurationEphemeralBlockDeviceArrayOutputWithContext(context.Background())
}

func (i GetLaunchConfigurationEphemeralBlockDeviceArray) ToGetLaunchConfigurationEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) GetLaunchConfigurationEphemeralBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchConfigurationEphemeralBlockDeviceArrayOutput)
}

type GetLaunchConfigurationEphemeralBlockDeviceOutput struct{ *pulumi.OutputState }

func (GetLaunchConfigurationEphemeralBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchConfigurationEphemeralBlockDevice)(nil)).Elem()
}

func (o GetLaunchConfigurationEphemeralBlockDeviceOutput) ToGetLaunchConfigurationEphemeralBlockDeviceOutput() GetLaunchConfigurationEphemeralBlockDeviceOutput {
	return o
}

func (o GetLaunchConfigurationEphemeralBlockDeviceOutput) ToGetLaunchConfigurationEphemeralBlockDeviceOutputWithContext(ctx context.Context) GetLaunchConfigurationEphemeralBlockDeviceOutput {
	return o
}

// The Name of the device.
func (o GetLaunchConfigurationEphemeralBlockDeviceOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchConfigurationEphemeralBlockDevice) string { return v.DeviceName }).(pulumi.StringOutput)
}

// The Virtual Name of the device.
func (o GetLaunchConfigurationEphemeralBlockDeviceOutput) VirtualName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchConfigurationEphemeralBlockDevice) string { return v.VirtualName }).(pulumi.StringOutput)
}

type GetLaunchConfigurationEphemeralBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (GetLaunchConfigurationEphemeralBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchConfigurationEphemeralBlockDevice)(nil)).Elem()
}

func (o GetLaunchConfigurationEphemeralBlockDeviceArrayOutput) ToGetLaunchConfigurationEphemeralBlockDeviceArrayOutput() GetLaunchConfigurationEphemeralBlockDeviceArrayOutput {
	return o
}

func (o GetLaunchConfigurationEphemeralBlockDeviceArrayOutput) ToGetLaunchConfigurationEphemeralBlockDeviceArrayOutputWithContext(ctx context.Context) GetLaunchConfigurationEphemeralBlockDeviceArrayOutput {
	return o
}

func (o GetLaunchConfigurationEphemeralBlockDeviceArrayOutput) Index(i pulumi.IntInput) GetLaunchConfigurationEphemeralBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLaunchConfigurationEphemeralBlockDevice {
		return vs[0].([]GetLaunchConfigurationEphemeralBlockDevice)[vs[1].(int)]
	}).(GetLaunchConfigurationEphemeralBlockDeviceOutput)
}

type GetLaunchConfigurationRootBlockDevice struct {
	// Whether the EBS Volume will be deleted on instance termination.
	DeleteOnTermination bool `pulumi:"deleteOnTermination"`
	// Whether the volume is Encrypted.
	Encrypted bool `pulumi:"encrypted"`
	// The provisioned IOPs of the volume.
	Iops int `pulumi:"iops"`
	// The Size of the volume.
	VolumeSize int `pulumi:"volumeSize"`
	// The Type of the volume.
	VolumeType string `pulumi:"volumeType"`
}

// GetLaunchConfigurationRootBlockDeviceInput is an input type that accepts GetLaunchConfigurationRootBlockDeviceArgs and GetLaunchConfigurationRootBlockDeviceOutput values.
// You can construct a concrete instance of `GetLaunchConfigurationRootBlockDeviceInput` via:
//
// 		 GetLaunchConfigurationRootBlockDeviceArgs{...}
//
type GetLaunchConfigurationRootBlockDeviceInput interface {
	pulumi.Input

	ToGetLaunchConfigurationRootBlockDeviceOutput() GetLaunchConfigurationRootBlockDeviceOutput
	ToGetLaunchConfigurationRootBlockDeviceOutputWithContext(context.Context) GetLaunchConfigurationRootBlockDeviceOutput
}

type GetLaunchConfigurationRootBlockDeviceArgs struct {
	// Whether the EBS Volume will be deleted on instance termination.
	DeleteOnTermination pulumi.BoolInput `pulumi:"deleteOnTermination"`
	// Whether the volume is Encrypted.
	Encrypted pulumi.BoolInput `pulumi:"encrypted"`
	// The provisioned IOPs of the volume.
	Iops pulumi.IntInput `pulumi:"iops"`
	// The Size of the volume.
	VolumeSize pulumi.IntInput `pulumi:"volumeSize"`
	// The Type of the volume.
	VolumeType pulumi.StringInput `pulumi:"volumeType"`
}

func (GetLaunchConfigurationRootBlockDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchConfigurationRootBlockDevice)(nil)).Elem()
}

func (i GetLaunchConfigurationRootBlockDeviceArgs) ToGetLaunchConfigurationRootBlockDeviceOutput() GetLaunchConfigurationRootBlockDeviceOutput {
	return i.ToGetLaunchConfigurationRootBlockDeviceOutputWithContext(context.Background())
}

func (i GetLaunchConfigurationRootBlockDeviceArgs) ToGetLaunchConfigurationRootBlockDeviceOutputWithContext(ctx context.Context) GetLaunchConfigurationRootBlockDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchConfigurationRootBlockDeviceOutput)
}

// GetLaunchConfigurationRootBlockDeviceArrayInput is an input type that accepts GetLaunchConfigurationRootBlockDeviceArray and GetLaunchConfigurationRootBlockDeviceArrayOutput values.
// You can construct a concrete instance of `GetLaunchConfigurationRootBlockDeviceArrayInput` via:
//
// 		 GetLaunchConfigurationRootBlockDeviceArray{ GetLaunchConfigurationRootBlockDeviceArgs{...} }
//
type GetLaunchConfigurationRootBlockDeviceArrayInput interface {
	pulumi.Input

	ToGetLaunchConfigurationRootBlockDeviceArrayOutput() GetLaunchConfigurationRootBlockDeviceArrayOutput
	ToGetLaunchConfigurationRootBlockDeviceArrayOutputWithContext(context.Context) GetLaunchConfigurationRootBlockDeviceArrayOutput
}

type GetLaunchConfigurationRootBlockDeviceArray []GetLaunchConfigurationRootBlockDeviceInput

func (GetLaunchConfigurationRootBlockDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchConfigurationRootBlockDevice)(nil)).Elem()
}

func (i GetLaunchConfigurationRootBlockDeviceArray) ToGetLaunchConfigurationRootBlockDeviceArrayOutput() GetLaunchConfigurationRootBlockDeviceArrayOutput {
	return i.ToGetLaunchConfigurationRootBlockDeviceArrayOutputWithContext(context.Background())
}

func (i GetLaunchConfigurationRootBlockDeviceArray) ToGetLaunchConfigurationRootBlockDeviceArrayOutputWithContext(ctx context.Context) GetLaunchConfigurationRootBlockDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchConfigurationRootBlockDeviceArrayOutput)
}

type GetLaunchConfigurationRootBlockDeviceOutput struct{ *pulumi.OutputState }

func (GetLaunchConfigurationRootBlockDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchConfigurationRootBlockDevice)(nil)).Elem()
}

func (o GetLaunchConfigurationRootBlockDeviceOutput) ToGetLaunchConfigurationRootBlockDeviceOutput() GetLaunchConfigurationRootBlockDeviceOutput {
	return o
}

func (o GetLaunchConfigurationRootBlockDeviceOutput) ToGetLaunchConfigurationRootBlockDeviceOutputWithContext(ctx context.Context) GetLaunchConfigurationRootBlockDeviceOutput {
	return o
}

// Whether the EBS Volume will be deleted on instance termination.
func (o GetLaunchConfigurationRootBlockDeviceOutput) DeleteOnTermination() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLaunchConfigurationRootBlockDevice) bool { return v.DeleteOnTermination }).(pulumi.BoolOutput)
}

// Whether the volume is Encrypted.
func (o GetLaunchConfigurationRootBlockDeviceOutput) Encrypted() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLaunchConfigurationRootBlockDevice) bool { return v.Encrypted }).(pulumi.BoolOutput)
}

// The provisioned IOPs of the volume.
func (o GetLaunchConfigurationRootBlockDeviceOutput) Iops() pulumi.IntOutput {
	return o.ApplyT(func(v GetLaunchConfigurationRootBlockDevice) int { return v.Iops }).(pulumi.IntOutput)
}

// The Size of the volume.
func (o GetLaunchConfigurationRootBlockDeviceOutput) VolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetLaunchConfigurationRootBlockDevice) int { return v.VolumeSize }).(pulumi.IntOutput)
}

// The Type of the volume.
func (o GetLaunchConfigurationRootBlockDeviceOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchConfigurationRootBlockDevice) string { return v.VolumeType }).(pulumi.StringOutput)
}

type GetLaunchConfigurationRootBlockDeviceArrayOutput struct{ *pulumi.OutputState }

func (GetLaunchConfigurationRootBlockDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchConfigurationRootBlockDevice)(nil)).Elem()
}

func (o GetLaunchConfigurationRootBlockDeviceArrayOutput) ToGetLaunchConfigurationRootBlockDeviceArrayOutput() GetLaunchConfigurationRootBlockDeviceArrayOutput {
	return o
}

func (o GetLaunchConfigurationRootBlockDeviceArrayOutput) ToGetLaunchConfigurationRootBlockDeviceArrayOutputWithContext(ctx context.Context) GetLaunchConfigurationRootBlockDeviceArrayOutput {
	return o
}

func (o GetLaunchConfigurationRootBlockDeviceArrayOutput) Index(i pulumi.IntInput) GetLaunchConfigurationRootBlockDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLaunchConfigurationRootBlockDevice {
		return vs[0].([]GetLaunchConfigurationRootBlockDevice)[vs[1].(int)]
	}).(GetLaunchConfigurationRootBlockDeviceOutput)
}

type GetLaunchTemplateBlockDeviceMapping struct {
	DeviceName  string                                  `pulumi:"deviceName"`
	Ebs         []GetLaunchTemplateBlockDeviceMappingEb `pulumi:"ebs"`
	NoDevice    string                                  `pulumi:"noDevice"`
	VirtualName string                                  `pulumi:"virtualName"`
}

// GetLaunchTemplateBlockDeviceMappingInput is an input type that accepts GetLaunchTemplateBlockDeviceMappingArgs and GetLaunchTemplateBlockDeviceMappingOutput values.
// You can construct a concrete instance of `GetLaunchTemplateBlockDeviceMappingInput` via:
//
// 		 GetLaunchTemplateBlockDeviceMappingArgs{...}
//
type GetLaunchTemplateBlockDeviceMappingInput interface {
	pulumi.Input

	ToGetLaunchTemplateBlockDeviceMappingOutput() GetLaunchTemplateBlockDeviceMappingOutput
	ToGetLaunchTemplateBlockDeviceMappingOutputWithContext(context.Context) GetLaunchTemplateBlockDeviceMappingOutput
}

type GetLaunchTemplateBlockDeviceMappingArgs struct {
	DeviceName  pulumi.StringInput                              `pulumi:"deviceName"`
	Ebs         GetLaunchTemplateBlockDeviceMappingEbArrayInput `pulumi:"ebs"`
	NoDevice    pulumi.StringInput                              `pulumi:"noDevice"`
	VirtualName pulumi.StringInput                              `pulumi:"virtualName"`
}

func (GetLaunchTemplateBlockDeviceMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateBlockDeviceMapping)(nil)).Elem()
}

func (i GetLaunchTemplateBlockDeviceMappingArgs) ToGetLaunchTemplateBlockDeviceMappingOutput() GetLaunchTemplateBlockDeviceMappingOutput {
	return i.ToGetLaunchTemplateBlockDeviceMappingOutputWithContext(context.Background())
}

func (i GetLaunchTemplateBlockDeviceMappingArgs) ToGetLaunchTemplateBlockDeviceMappingOutputWithContext(ctx context.Context) GetLaunchTemplateBlockDeviceMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateBlockDeviceMappingOutput)
}

// GetLaunchTemplateBlockDeviceMappingArrayInput is an input type that accepts GetLaunchTemplateBlockDeviceMappingArray and GetLaunchTemplateBlockDeviceMappingArrayOutput values.
// You can construct a concrete instance of `GetLaunchTemplateBlockDeviceMappingArrayInput` via:
//
// 		 GetLaunchTemplateBlockDeviceMappingArray{ GetLaunchTemplateBlockDeviceMappingArgs{...} }
//
type GetLaunchTemplateBlockDeviceMappingArrayInput interface {
	pulumi.Input

	ToGetLaunchTemplateBlockDeviceMappingArrayOutput() GetLaunchTemplateBlockDeviceMappingArrayOutput
	ToGetLaunchTemplateBlockDeviceMappingArrayOutputWithContext(context.Context) GetLaunchTemplateBlockDeviceMappingArrayOutput
}

type GetLaunchTemplateBlockDeviceMappingArray []GetLaunchTemplateBlockDeviceMappingInput

func (GetLaunchTemplateBlockDeviceMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateBlockDeviceMapping)(nil)).Elem()
}

func (i GetLaunchTemplateBlockDeviceMappingArray) ToGetLaunchTemplateBlockDeviceMappingArrayOutput() GetLaunchTemplateBlockDeviceMappingArrayOutput {
	return i.ToGetLaunchTemplateBlockDeviceMappingArrayOutputWithContext(context.Background())
}

func (i GetLaunchTemplateBlockDeviceMappingArray) ToGetLaunchTemplateBlockDeviceMappingArrayOutputWithContext(ctx context.Context) GetLaunchTemplateBlockDeviceMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateBlockDeviceMappingArrayOutput)
}

type GetLaunchTemplateBlockDeviceMappingOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateBlockDeviceMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateBlockDeviceMapping)(nil)).Elem()
}

func (o GetLaunchTemplateBlockDeviceMappingOutput) ToGetLaunchTemplateBlockDeviceMappingOutput() GetLaunchTemplateBlockDeviceMappingOutput {
	return o
}

func (o GetLaunchTemplateBlockDeviceMappingOutput) ToGetLaunchTemplateBlockDeviceMappingOutputWithContext(ctx context.Context) GetLaunchTemplateBlockDeviceMappingOutput {
	return o
}

func (o GetLaunchTemplateBlockDeviceMappingOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateBlockDeviceMapping) string { return v.DeviceName }).(pulumi.StringOutput)
}

func (o GetLaunchTemplateBlockDeviceMappingOutput) Ebs() GetLaunchTemplateBlockDeviceMappingEbArrayOutput {
	return o.ApplyT(func(v GetLaunchTemplateBlockDeviceMapping) []GetLaunchTemplateBlockDeviceMappingEb { return v.Ebs }).(GetLaunchTemplateBlockDeviceMappingEbArrayOutput)
}

func (o GetLaunchTemplateBlockDeviceMappingOutput) NoDevice() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateBlockDeviceMapping) string { return v.NoDevice }).(pulumi.StringOutput)
}

func (o GetLaunchTemplateBlockDeviceMappingOutput) VirtualName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateBlockDeviceMapping) string { return v.VirtualName }).(pulumi.StringOutput)
}

type GetLaunchTemplateBlockDeviceMappingArrayOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateBlockDeviceMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateBlockDeviceMapping)(nil)).Elem()
}

func (o GetLaunchTemplateBlockDeviceMappingArrayOutput) ToGetLaunchTemplateBlockDeviceMappingArrayOutput() GetLaunchTemplateBlockDeviceMappingArrayOutput {
	return o
}

func (o GetLaunchTemplateBlockDeviceMappingArrayOutput) ToGetLaunchTemplateBlockDeviceMappingArrayOutputWithContext(ctx context.Context) GetLaunchTemplateBlockDeviceMappingArrayOutput {
	return o
}

func (o GetLaunchTemplateBlockDeviceMappingArrayOutput) Index(i pulumi.IntInput) GetLaunchTemplateBlockDeviceMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLaunchTemplateBlockDeviceMapping {
		return vs[0].([]GetLaunchTemplateBlockDeviceMapping)[vs[1].(int)]
	}).(GetLaunchTemplateBlockDeviceMappingOutput)
}

type GetLaunchTemplateBlockDeviceMappingEb struct {
	DeleteOnTermination string `pulumi:"deleteOnTermination"`
	Encrypted           string `pulumi:"encrypted"`
	Iops                int    `pulumi:"iops"`
	KmsKeyId            string `pulumi:"kmsKeyId"`
	SnapshotId          string `pulumi:"snapshotId"`
	VolumeSize          int    `pulumi:"volumeSize"`
	VolumeType          string `pulumi:"volumeType"`
}

// GetLaunchTemplateBlockDeviceMappingEbInput is an input type that accepts GetLaunchTemplateBlockDeviceMappingEbArgs and GetLaunchTemplateBlockDeviceMappingEbOutput values.
// You can construct a concrete instance of `GetLaunchTemplateBlockDeviceMappingEbInput` via:
//
// 		 GetLaunchTemplateBlockDeviceMappingEbArgs{...}
//
type GetLaunchTemplateBlockDeviceMappingEbInput interface {
	pulumi.Input

	ToGetLaunchTemplateBlockDeviceMappingEbOutput() GetLaunchTemplateBlockDeviceMappingEbOutput
	ToGetLaunchTemplateBlockDeviceMappingEbOutputWithContext(context.Context) GetLaunchTemplateBlockDeviceMappingEbOutput
}

type GetLaunchTemplateBlockDeviceMappingEbArgs struct {
	DeleteOnTermination pulumi.StringInput `pulumi:"deleteOnTermination"`
	Encrypted           pulumi.StringInput `pulumi:"encrypted"`
	Iops                pulumi.IntInput    `pulumi:"iops"`
	KmsKeyId            pulumi.StringInput `pulumi:"kmsKeyId"`
	SnapshotId          pulumi.StringInput `pulumi:"snapshotId"`
	VolumeSize          pulumi.IntInput    `pulumi:"volumeSize"`
	VolumeType          pulumi.StringInput `pulumi:"volumeType"`
}

func (GetLaunchTemplateBlockDeviceMappingEbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateBlockDeviceMappingEb)(nil)).Elem()
}

func (i GetLaunchTemplateBlockDeviceMappingEbArgs) ToGetLaunchTemplateBlockDeviceMappingEbOutput() GetLaunchTemplateBlockDeviceMappingEbOutput {
	return i.ToGetLaunchTemplateBlockDeviceMappingEbOutputWithContext(context.Background())
}

func (i GetLaunchTemplateBlockDeviceMappingEbArgs) ToGetLaunchTemplateBlockDeviceMappingEbOutputWithContext(ctx context.Context) GetLaunchTemplateBlockDeviceMappingEbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateBlockDeviceMappingEbOutput)
}

// GetLaunchTemplateBlockDeviceMappingEbArrayInput is an input type that accepts GetLaunchTemplateBlockDeviceMappingEbArray and GetLaunchTemplateBlockDeviceMappingEbArrayOutput values.
// You can construct a concrete instance of `GetLaunchTemplateBlockDeviceMappingEbArrayInput` via:
//
// 		 GetLaunchTemplateBlockDeviceMappingEbArray{ GetLaunchTemplateBlockDeviceMappingEbArgs{...} }
//
type GetLaunchTemplateBlockDeviceMappingEbArrayInput interface {
	pulumi.Input

	ToGetLaunchTemplateBlockDeviceMappingEbArrayOutput() GetLaunchTemplateBlockDeviceMappingEbArrayOutput
	ToGetLaunchTemplateBlockDeviceMappingEbArrayOutputWithContext(context.Context) GetLaunchTemplateBlockDeviceMappingEbArrayOutput
}

type GetLaunchTemplateBlockDeviceMappingEbArray []GetLaunchTemplateBlockDeviceMappingEbInput

func (GetLaunchTemplateBlockDeviceMappingEbArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateBlockDeviceMappingEb)(nil)).Elem()
}

func (i GetLaunchTemplateBlockDeviceMappingEbArray) ToGetLaunchTemplateBlockDeviceMappingEbArrayOutput() GetLaunchTemplateBlockDeviceMappingEbArrayOutput {
	return i.ToGetLaunchTemplateBlockDeviceMappingEbArrayOutputWithContext(context.Background())
}

func (i GetLaunchTemplateBlockDeviceMappingEbArray) ToGetLaunchTemplateBlockDeviceMappingEbArrayOutputWithContext(ctx context.Context) GetLaunchTemplateBlockDeviceMappingEbArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateBlockDeviceMappingEbArrayOutput)
}

type GetLaunchTemplateBlockDeviceMappingEbOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateBlockDeviceMappingEbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateBlockDeviceMappingEb)(nil)).Elem()
}

func (o GetLaunchTemplateBlockDeviceMappingEbOutput) ToGetLaunchTemplateBlockDeviceMappingEbOutput() GetLaunchTemplateBlockDeviceMappingEbOutput {
	return o
}

func (o GetLaunchTemplateBlockDeviceMappingEbOutput) ToGetLaunchTemplateBlockDeviceMappingEbOutputWithContext(ctx context.Context) GetLaunchTemplateBlockDeviceMappingEbOutput {
	return o
}

func (o GetLaunchTemplateBlockDeviceMappingEbOutput) DeleteOnTermination() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateBlockDeviceMappingEb) string { return v.DeleteOnTermination }).(pulumi.StringOutput)
}

func (o GetLaunchTemplateBlockDeviceMappingEbOutput) Encrypted() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateBlockDeviceMappingEb) string { return v.Encrypted }).(pulumi.StringOutput)
}

func (o GetLaunchTemplateBlockDeviceMappingEbOutput) Iops() pulumi.IntOutput {
	return o.ApplyT(func(v GetLaunchTemplateBlockDeviceMappingEb) int { return v.Iops }).(pulumi.IntOutput)
}

func (o GetLaunchTemplateBlockDeviceMappingEbOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateBlockDeviceMappingEb) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

func (o GetLaunchTemplateBlockDeviceMappingEbOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateBlockDeviceMappingEb) string { return v.SnapshotId }).(pulumi.StringOutput)
}

func (o GetLaunchTemplateBlockDeviceMappingEbOutput) VolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetLaunchTemplateBlockDeviceMappingEb) int { return v.VolumeSize }).(pulumi.IntOutput)
}

func (o GetLaunchTemplateBlockDeviceMappingEbOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateBlockDeviceMappingEb) string { return v.VolumeType }).(pulumi.StringOutput)
}

type GetLaunchTemplateBlockDeviceMappingEbArrayOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateBlockDeviceMappingEbArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateBlockDeviceMappingEb)(nil)).Elem()
}

func (o GetLaunchTemplateBlockDeviceMappingEbArrayOutput) ToGetLaunchTemplateBlockDeviceMappingEbArrayOutput() GetLaunchTemplateBlockDeviceMappingEbArrayOutput {
	return o
}

func (o GetLaunchTemplateBlockDeviceMappingEbArrayOutput) ToGetLaunchTemplateBlockDeviceMappingEbArrayOutputWithContext(ctx context.Context) GetLaunchTemplateBlockDeviceMappingEbArrayOutput {
	return o
}

func (o GetLaunchTemplateBlockDeviceMappingEbArrayOutput) Index(i pulumi.IntInput) GetLaunchTemplateBlockDeviceMappingEbOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLaunchTemplateBlockDeviceMappingEb {
		return vs[0].([]GetLaunchTemplateBlockDeviceMappingEb)[vs[1].(int)]
	}).(GetLaunchTemplateBlockDeviceMappingEbOutput)
}

type GetLaunchTemplateCreditSpecification struct {
	CpuCredits string `pulumi:"cpuCredits"`
}

// GetLaunchTemplateCreditSpecificationInput is an input type that accepts GetLaunchTemplateCreditSpecificationArgs and GetLaunchTemplateCreditSpecificationOutput values.
// You can construct a concrete instance of `GetLaunchTemplateCreditSpecificationInput` via:
//
// 		 GetLaunchTemplateCreditSpecificationArgs{...}
//
type GetLaunchTemplateCreditSpecificationInput interface {
	pulumi.Input

	ToGetLaunchTemplateCreditSpecificationOutput() GetLaunchTemplateCreditSpecificationOutput
	ToGetLaunchTemplateCreditSpecificationOutputWithContext(context.Context) GetLaunchTemplateCreditSpecificationOutput
}

type GetLaunchTemplateCreditSpecificationArgs struct {
	CpuCredits pulumi.StringInput `pulumi:"cpuCredits"`
}

func (GetLaunchTemplateCreditSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateCreditSpecification)(nil)).Elem()
}

func (i GetLaunchTemplateCreditSpecificationArgs) ToGetLaunchTemplateCreditSpecificationOutput() GetLaunchTemplateCreditSpecificationOutput {
	return i.ToGetLaunchTemplateCreditSpecificationOutputWithContext(context.Background())
}

func (i GetLaunchTemplateCreditSpecificationArgs) ToGetLaunchTemplateCreditSpecificationOutputWithContext(ctx context.Context) GetLaunchTemplateCreditSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateCreditSpecificationOutput)
}

// GetLaunchTemplateCreditSpecificationArrayInput is an input type that accepts GetLaunchTemplateCreditSpecificationArray and GetLaunchTemplateCreditSpecificationArrayOutput values.
// You can construct a concrete instance of `GetLaunchTemplateCreditSpecificationArrayInput` via:
//
// 		 GetLaunchTemplateCreditSpecificationArray{ GetLaunchTemplateCreditSpecificationArgs{...} }
//
type GetLaunchTemplateCreditSpecificationArrayInput interface {
	pulumi.Input

	ToGetLaunchTemplateCreditSpecificationArrayOutput() GetLaunchTemplateCreditSpecificationArrayOutput
	ToGetLaunchTemplateCreditSpecificationArrayOutputWithContext(context.Context) GetLaunchTemplateCreditSpecificationArrayOutput
}

type GetLaunchTemplateCreditSpecificationArray []GetLaunchTemplateCreditSpecificationInput

func (GetLaunchTemplateCreditSpecificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateCreditSpecification)(nil)).Elem()
}

func (i GetLaunchTemplateCreditSpecificationArray) ToGetLaunchTemplateCreditSpecificationArrayOutput() GetLaunchTemplateCreditSpecificationArrayOutput {
	return i.ToGetLaunchTemplateCreditSpecificationArrayOutputWithContext(context.Background())
}

func (i GetLaunchTemplateCreditSpecificationArray) ToGetLaunchTemplateCreditSpecificationArrayOutputWithContext(ctx context.Context) GetLaunchTemplateCreditSpecificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateCreditSpecificationArrayOutput)
}

type GetLaunchTemplateCreditSpecificationOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateCreditSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateCreditSpecification)(nil)).Elem()
}

func (o GetLaunchTemplateCreditSpecificationOutput) ToGetLaunchTemplateCreditSpecificationOutput() GetLaunchTemplateCreditSpecificationOutput {
	return o
}

func (o GetLaunchTemplateCreditSpecificationOutput) ToGetLaunchTemplateCreditSpecificationOutputWithContext(ctx context.Context) GetLaunchTemplateCreditSpecificationOutput {
	return o
}

func (o GetLaunchTemplateCreditSpecificationOutput) CpuCredits() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateCreditSpecification) string { return v.CpuCredits }).(pulumi.StringOutput)
}

type GetLaunchTemplateCreditSpecificationArrayOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateCreditSpecificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateCreditSpecification)(nil)).Elem()
}

func (o GetLaunchTemplateCreditSpecificationArrayOutput) ToGetLaunchTemplateCreditSpecificationArrayOutput() GetLaunchTemplateCreditSpecificationArrayOutput {
	return o
}

func (o GetLaunchTemplateCreditSpecificationArrayOutput) ToGetLaunchTemplateCreditSpecificationArrayOutputWithContext(ctx context.Context) GetLaunchTemplateCreditSpecificationArrayOutput {
	return o
}

func (o GetLaunchTemplateCreditSpecificationArrayOutput) Index(i pulumi.IntInput) GetLaunchTemplateCreditSpecificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLaunchTemplateCreditSpecification {
		return vs[0].([]GetLaunchTemplateCreditSpecification)[vs[1].(int)]
	}).(GetLaunchTemplateCreditSpecificationOutput)
}

type GetLaunchTemplateElasticGpuSpecification struct {
	Type string `pulumi:"type"`
}

// GetLaunchTemplateElasticGpuSpecificationInput is an input type that accepts GetLaunchTemplateElasticGpuSpecificationArgs and GetLaunchTemplateElasticGpuSpecificationOutput values.
// You can construct a concrete instance of `GetLaunchTemplateElasticGpuSpecificationInput` via:
//
// 		 GetLaunchTemplateElasticGpuSpecificationArgs{...}
//
type GetLaunchTemplateElasticGpuSpecificationInput interface {
	pulumi.Input

	ToGetLaunchTemplateElasticGpuSpecificationOutput() GetLaunchTemplateElasticGpuSpecificationOutput
	ToGetLaunchTemplateElasticGpuSpecificationOutputWithContext(context.Context) GetLaunchTemplateElasticGpuSpecificationOutput
}

type GetLaunchTemplateElasticGpuSpecificationArgs struct {
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetLaunchTemplateElasticGpuSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateElasticGpuSpecification)(nil)).Elem()
}

func (i GetLaunchTemplateElasticGpuSpecificationArgs) ToGetLaunchTemplateElasticGpuSpecificationOutput() GetLaunchTemplateElasticGpuSpecificationOutput {
	return i.ToGetLaunchTemplateElasticGpuSpecificationOutputWithContext(context.Background())
}

func (i GetLaunchTemplateElasticGpuSpecificationArgs) ToGetLaunchTemplateElasticGpuSpecificationOutputWithContext(ctx context.Context) GetLaunchTemplateElasticGpuSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateElasticGpuSpecificationOutput)
}

// GetLaunchTemplateElasticGpuSpecificationArrayInput is an input type that accepts GetLaunchTemplateElasticGpuSpecificationArray and GetLaunchTemplateElasticGpuSpecificationArrayOutput values.
// You can construct a concrete instance of `GetLaunchTemplateElasticGpuSpecificationArrayInput` via:
//
// 		 GetLaunchTemplateElasticGpuSpecificationArray{ GetLaunchTemplateElasticGpuSpecificationArgs{...} }
//
type GetLaunchTemplateElasticGpuSpecificationArrayInput interface {
	pulumi.Input

	ToGetLaunchTemplateElasticGpuSpecificationArrayOutput() GetLaunchTemplateElasticGpuSpecificationArrayOutput
	ToGetLaunchTemplateElasticGpuSpecificationArrayOutputWithContext(context.Context) GetLaunchTemplateElasticGpuSpecificationArrayOutput
}

type GetLaunchTemplateElasticGpuSpecificationArray []GetLaunchTemplateElasticGpuSpecificationInput

func (GetLaunchTemplateElasticGpuSpecificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateElasticGpuSpecification)(nil)).Elem()
}

func (i GetLaunchTemplateElasticGpuSpecificationArray) ToGetLaunchTemplateElasticGpuSpecificationArrayOutput() GetLaunchTemplateElasticGpuSpecificationArrayOutput {
	return i.ToGetLaunchTemplateElasticGpuSpecificationArrayOutputWithContext(context.Background())
}

func (i GetLaunchTemplateElasticGpuSpecificationArray) ToGetLaunchTemplateElasticGpuSpecificationArrayOutputWithContext(ctx context.Context) GetLaunchTemplateElasticGpuSpecificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateElasticGpuSpecificationArrayOutput)
}

type GetLaunchTemplateElasticGpuSpecificationOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateElasticGpuSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateElasticGpuSpecification)(nil)).Elem()
}

func (o GetLaunchTemplateElasticGpuSpecificationOutput) ToGetLaunchTemplateElasticGpuSpecificationOutput() GetLaunchTemplateElasticGpuSpecificationOutput {
	return o
}

func (o GetLaunchTemplateElasticGpuSpecificationOutput) ToGetLaunchTemplateElasticGpuSpecificationOutputWithContext(ctx context.Context) GetLaunchTemplateElasticGpuSpecificationOutput {
	return o
}

func (o GetLaunchTemplateElasticGpuSpecificationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateElasticGpuSpecification) string { return v.Type }).(pulumi.StringOutput)
}

type GetLaunchTemplateElasticGpuSpecificationArrayOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateElasticGpuSpecificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateElasticGpuSpecification)(nil)).Elem()
}

func (o GetLaunchTemplateElasticGpuSpecificationArrayOutput) ToGetLaunchTemplateElasticGpuSpecificationArrayOutput() GetLaunchTemplateElasticGpuSpecificationArrayOutput {
	return o
}

func (o GetLaunchTemplateElasticGpuSpecificationArrayOutput) ToGetLaunchTemplateElasticGpuSpecificationArrayOutputWithContext(ctx context.Context) GetLaunchTemplateElasticGpuSpecificationArrayOutput {
	return o
}

func (o GetLaunchTemplateElasticGpuSpecificationArrayOutput) Index(i pulumi.IntInput) GetLaunchTemplateElasticGpuSpecificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLaunchTemplateElasticGpuSpecification {
		return vs[0].([]GetLaunchTemplateElasticGpuSpecification)[vs[1].(int)]
	}).(GetLaunchTemplateElasticGpuSpecificationOutput)
}

type GetLaunchTemplateFilter struct {
	// The name of the filter field. Valid values can be found in the [EC2 DescribeLaunchTemplates API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values []string `pulumi:"values"`
}

// GetLaunchTemplateFilterInput is an input type that accepts GetLaunchTemplateFilterArgs and GetLaunchTemplateFilterOutput values.
// You can construct a concrete instance of `GetLaunchTemplateFilterInput` via:
//
// 		 GetLaunchTemplateFilterArgs{...}
//
type GetLaunchTemplateFilterInput interface {
	pulumi.Input

	ToGetLaunchTemplateFilterOutput() GetLaunchTemplateFilterOutput
	ToGetLaunchTemplateFilterOutputWithContext(context.Context) GetLaunchTemplateFilterOutput
}

type GetLaunchTemplateFilterArgs struct {
	// The name of the filter field. Valid values can be found in the [EC2 DescribeLaunchTemplates API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetLaunchTemplateFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateFilter)(nil)).Elem()
}

func (i GetLaunchTemplateFilterArgs) ToGetLaunchTemplateFilterOutput() GetLaunchTemplateFilterOutput {
	return i.ToGetLaunchTemplateFilterOutputWithContext(context.Background())
}

func (i GetLaunchTemplateFilterArgs) ToGetLaunchTemplateFilterOutputWithContext(ctx context.Context) GetLaunchTemplateFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateFilterOutput)
}

// GetLaunchTemplateFilterArrayInput is an input type that accepts GetLaunchTemplateFilterArray and GetLaunchTemplateFilterArrayOutput values.
// You can construct a concrete instance of `GetLaunchTemplateFilterArrayInput` via:
//
// 		 GetLaunchTemplateFilterArray{ GetLaunchTemplateFilterArgs{...} }
//
type GetLaunchTemplateFilterArrayInput interface {
	pulumi.Input

	ToGetLaunchTemplateFilterArrayOutput() GetLaunchTemplateFilterArrayOutput
	ToGetLaunchTemplateFilterArrayOutputWithContext(context.Context) GetLaunchTemplateFilterArrayOutput
}

type GetLaunchTemplateFilterArray []GetLaunchTemplateFilterInput

func (GetLaunchTemplateFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateFilter)(nil)).Elem()
}

func (i GetLaunchTemplateFilterArray) ToGetLaunchTemplateFilterArrayOutput() GetLaunchTemplateFilterArrayOutput {
	return i.ToGetLaunchTemplateFilterArrayOutputWithContext(context.Background())
}

func (i GetLaunchTemplateFilterArray) ToGetLaunchTemplateFilterArrayOutputWithContext(ctx context.Context) GetLaunchTemplateFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateFilterArrayOutput)
}

type GetLaunchTemplateFilterOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateFilter)(nil)).Elem()
}

func (o GetLaunchTemplateFilterOutput) ToGetLaunchTemplateFilterOutput() GetLaunchTemplateFilterOutput {
	return o
}

func (o GetLaunchTemplateFilterOutput) ToGetLaunchTemplateFilterOutputWithContext(ctx context.Context) GetLaunchTemplateFilterOutput {
	return o
}

// The name of the filter field. Valid values can be found in the [EC2 DescribeLaunchTemplates API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html).
func (o GetLaunchTemplateFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
func (o GetLaunchTemplateFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLaunchTemplateFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetLaunchTemplateFilterArrayOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateFilter)(nil)).Elem()
}

func (o GetLaunchTemplateFilterArrayOutput) ToGetLaunchTemplateFilterArrayOutput() GetLaunchTemplateFilterArrayOutput {
	return o
}

func (o GetLaunchTemplateFilterArrayOutput) ToGetLaunchTemplateFilterArrayOutputWithContext(ctx context.Context) GetLaunchTemplateFilterArrayOutput {
	return o
}

func (o GetLaunchTemplateFilterArrayOutput) Index(i pulumi.IntInput) GetLaunchTemplateFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLaunchTemplateFilter {
		return vs[0].([]GetLaunchTemplateFilter)[vs[1].(int)]
	}).(GetLaunchTemplateFilterOutput)
}

type GetLaunchTemplateHibernationOption struct {
	Configured bool `pulumi:"configured"`
}

// GetLaunchTemplateHibernationOptionInput is an input type that accepts GetLaunchTemplateHibernationOptionArgs and GetLaunchTemplateHibernationOptionOutput values.
// You can construct a concrete instance of `GetLaunchTemplateHibernationOptionInput` via:
//
// 		 GetLaunchTemplateHibernationOptionArgs{...}
//
type GetLaunchTemplateHibernationOptionInput interface {
	pulumi.Input

	ToGetLaunchTemplateHibernationOptionOutput() GetLaunchTemplateHibernationOptionOutput
	ToGetLaunchTemplateHibernationOptionOutputWithContext(context.Context) GetLaunchTemplateHibernationOptionOutput
}

type GetLaunchTemplateHibernationOptionArgs struct {
	Configured pulumi.BoolInput `pulumi:"configured"`
}

func (GetLaunchTemplateHibernationOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateHibernationOption)(nil)).Elem()
}

func (i GetLaunchTemplateHibernationOptionArgs) ToGetLaunchTemplateHibernationOptionOutput() GetLaunchTemplateHibernationOptionOutput {
	return i.ToGetLaunchTemplateHibernationOptionOutputWithContext(context.Background())
}

func (i GetLaunchTemplateHibernationOptionArgs) ToGetLaunchTemplateHibernationOptionOutputWithContext(ctx context.Context) GetLaunchTemplateHibernationOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateHibernationOptionOutput)
}

// GetLaunchTemplateHibernationOptionArrayInput is an input type that accepts GetLaunchTemplateHibernationOptionArray and GetLaunchTemplateHibernationOptionArrayOutput values.
// You can construct a concrete instance of `GetLaunchTemplateHibernationOptionArrayInput` via:
//
// 		 GetLaunchTemplateHibernationOptionArray{ GetLaunchTemplateHibernationOptionArgs{...} }
//
type GetLaunchTemplateHibernationOptionArrayInput interface {
	pulumi.Input

	ToGetLaunchTemplateHibernationOptionArrayOutput() GetLaunchTemplateHibernationOptionArrayOutput
	ToGetLaunchTemplateHibernationOptionArrayOutputWithContext(context.Context) GetLaunchTemplateHibernationOptionArrayOutput
}

type GetLaunchTemplateHibernationOptionArray []GetLaunchTemplateHibernationOptionInput

func (GetLaunchTemplateHibernationOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateHibernationOption)(nil)).Elem()
}

func (i GetLaunchTemplateHibernationOptionArray) ToGetLaunchTemplateHibernationOptionArrayOutput() GetLaunchTemplateHibernationOptionArrayOutput {
	return i.ToGetLaunchTemplateHibernationOptionArrayOutputWithContext(context.Background())
}

func (i GetLaunchTemplateHibernationOptionArray) ToGetLaunchTemplateHibernationOptionArrayOutputWithContext(ctx context.Context) GetLaunchTemplateHibernationOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateHibernationOptionArrayOutput)
}

type GetLaunchTemplateHibernationOptionOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateHibernationOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateHibernationOption)(nil)).Elem()
}

func (o GetLaunchTemplateHibernationOptionOutput) ToGetLaunchTemplateHibernationOptionOutput() GetLaunchTemplateHibernationOptionOutput {
	return o
}

func (o GetLaunchTemplateHibernationOptionOutput) ToGetLaunchTemplateHibernationOptionOutputWithContext(ctx context.Context) GetLaunchTemplateHibernationOptionOutput {
	return o
}

func (o GetLaunchTemplateHibernationOptionOutput) Configured() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLaunchTemplateHibernationOption) bool { return v.Configured }).(pulumi.BoolOutput)
}

type GetLaunchTemplateHibernationOptionArrayOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateHibernationOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateHibernationOption)(nil)).Elem()
}

func (o GetLaunchTemplateHibernationOptionArrayOutput) ToGetLaunchTemplateHibernationOptionArrayOutput() GetLaunchTemplateHibernationOptionArrayOutput {
	return o
}

func (o GetLaunchTemplateHibernationOptionArrayOutput) ToGetLaunchTemplateHibernationOptionArrayOutputWithContext(ctx context.Context) GetLaunchTemplateHibernationOptionArrayOutput {
	return o
}

func (o GetLaunchTemplateHibernationOptionArrayOutput) Index(i pulumi.IntInput) GetLaunchTemplateHibernationOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLaunchTemplateHibernationOption {
		return vs[0].([]GetLaunchTemplateHibernationOption)[vs[1].(int)]
	}).(GetLaunchTemplateHibernationOptionOutput)
}

type GetLaunchTemplateIamInstanceProfile struct {
	// Amazon Resource Name (ARN) of the launch template.
	Arn string `pulumi:"arn"`
	// The name of the filter field. Valid values can be found in the [EC2 DescribeLaunchTemplates API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html).
	Name string `pulumi:"name"`
}

// GetLaunchTemplateIamInstanceProfileInput is an input type that accepts GetLaunchTemplateIamInstanceProfileArgs and GetLaunchTemplateIamInstanceProfileOutput values.
// You can construct a concrete instance of `GetLaunchTemplateIamInstanceProfileInput` via:
//
// 		 GetLaunchTemplateIamInstanceProfileArgs{...}
//
type GetLaunchTemplateIamInstanceProfileInput interface {
	pulumi.Input

	ToGetLaunchTemplateIamInstanceProfileOutput() GetLaunchTemplateIamInstanceProfileOutput
	ToGetLaunchTemplateIamInstanceProfileOutputWithContext(context.Context) GetLaunchTemplateIamInstanceProfileOutput
}

type GetLaunchTemplateIamInstanceProfileArgs struct {
	// Amazon Resource Name (ARN) of the launch template.
	Arn pulumi.StringInput `pulumi:"arn"`
	// The name of the filter field. Valid values can be found in the [EC2 DescribeLaunchTemplates API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html).
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetLaunchTemplateIamInstanceProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateIamInstanceProfile)(nil)).Elem()
}

func (i GetLaunchTemplateIamInstanceProfileArgs) ToGetLaunchTemplateIamInstanceProfileOutput() GetLaunchTemplateIamInstanceProfileOutput {
	return i.ToGetLaunchTemplateIamInstanceProfileOutputWithContext(context.Background())
}

func (i GetLaunchTemplateIamInstanceProfileArgs) ToGetLaunchTemplateIamInstanceProfileOutputWithContext(ctx context.Context) GetLaunchTemplateIamInstanceProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateIamInstanceProfileOutput)
}

// GetLaunchTemplateIamInstanceProfileArrayInput is an input type that accepts GetLaunchTemplateIamInstanceProfileArray and GetLaunchTemplateIamInstanceProfileArrayOutput values.
// You can construct a concrete instance of `GetLaunchTemplateIamInstanceProfileArrayInput` via:
//
// 		 GetLaunchTemplateIamInstanceProfileArray{ GetLaunchTemplateIamInstanceProfileArgs{...} }
//
type GetLaunchTemplateIamInstanceProfileArrayInput interface {
	pulumi.Input

	ToGetLaunchTemplateIamInstanceProfileArrayOutput() GetLaunchTemplateIamInstanceProfileArrayOutput
	ToGetLaunchTemplateIamInstanceProfileArrayOutputWithContext(context.Context) GetLaunchTemplateIamInstanceProfileArrayOutput
}

type GetLaunchTemplateIamInstanceProfileArray []GetLaunchTemplateIamInstanceProfileInput

func (GetLaunchTemplateIamInstanceProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateIamInstanceProfile)(nil)).Elem()
}

func (i GetLaunchTemplateIamInstanceProfileArray) ToGetLaunchTemplateIamInstanceProfileArrayOutput() GetLaunchTemplateIamInstanceProfileArrayOutput {
	return i.ToGetLaunchTemplateIamInstanceProfileArrayOutputWithContext(context.Background())
}

func (i GetLaunchTemplateIamInstanceProfileArray) ToGetLaunchTemplateIamInstanceProfileArrayOutputWithContext(ctx context.Context) GetLaunchTemplateIamInstanceProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateIamInstanceProfileArrayOutput)
}

type GetLaunchTemplateIamInstanceProfileOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateIamInstanceProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateIamInstanceProfile)(nil)).Elem()
}

func (o GetLaunchTemplateIamInstanceProfileOutput) ToGetLaunchTemplateIamInstanceProfileOutput() GetLaunchTemplateIamInstanceProfileOutput {
	return o
}

func (o GetLaunchTemplateIamInstanceProfileOutput) ToGetLaunchTemplateIamInstanceProfileOutputWithContext(ctx context.Context) GetLaunchTemplateIamInstanceProfileOutput {
	return o
}

// Amazon Resource Name (ARN) of the launch template.
func (o GetLaunchTemplateIamInstanceProfileOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateIamInstanceProfile) string { return v.Arn }).(pulumi.StringOutput)
}

// The name of the filter field. Valid values can be found in the [EC2 DescribeLaunchTemplates API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeLaunchTemplates.html).
func (o GetLaunchTemplateIamInstanceProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateIamInstanceProfile) string { return v.Name }).(pulumi.StringOutput)
}

type GetLaunchTemplateIamInstanceProfileArrayOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateIamInstanceProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateIamInstanceProfile)(nil)).Elem()
}

func (o GetLaunchTemplateIamInstanceProfileArrayOutput) ToGetLaunchTemplateIamInstanceProfileArrayOutput() GetLaunchTemplateIamInstanceProfileArrayOutput {
	return o
}

func (o GetLaunchTemplateIamInstanceProfileArrayOutput) ToGetLaunchTemplateIamInstanceProfileArrayOutputWithContext(ctx context.Context) GetLaunchTemplateIamInstanceProfileArrayOutput {
	return o
}

func (o GetLaunchTemplateIamInstanceProfileArrayOutput) Index(i pulumi.IntInput) GetLaunchTemplateIamInstanceProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLaunchTemplateIamInstanceProfile {
		return vs[0].([]GetLaunchTemplateIamInstanceProfile)[vs[1].(int)]
	}).(GetLaunchTemplateIamInstanceProfileOutput)
}

type GetLaunchTemplateInstanceMarketOption struct {
	MarketType  string                                            `pulumi:"marketType"`
	SpotOptions []GetLaunchTemplateInstanceMarketOptionSpotOption `pulumi:"spotOptions"`
}

// GetLaunchTemplateInstanceMarketOptionInput is an input type that accepts GetLaunchTemplateInstanceMarketOptionArgs and GetLaunchTemplateInstanceMarketOptionOutput values.
// You can construct a concrete instance of `GetLaunchTemplateInstanceMarketOptionInput` via:
//
// 		 GetLaunchTemplateInstanceMarketOptionArgs{...}
//
type GetLaunchTemplateInstanceMarketOptionInput interface {
	pulumi.Input

	ToGetLaunchTemplateInstanceMarketOptionOutput() GetLaunchTemplateInstanceMarketOptionOutput
	ToGetLaunchTemplateInstanceMarketOptionOutputWithContext(context.Context) GetLaunchTemplateInstanceMarketOptionOutput
}

type GetLaunchTemplateInstanceMarketOptionArgs struct {
	MarketType  pulumi.StringInput                                        `pulumi:"marketType"`
	SpotOptions GetLaunchTemplateInstanceMarketOptionSpotOptionArrayInput `pulumi:"spotOptions"`
}

func (GetLaunchTemplateInstanceMarketOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateInstanceMarketOption)(nil)).Elem()
}

func (i GetLaunchTemplateInstanceMarketOptionArgs) ToGetLaunchTemplateInstanceMarketOptionOutput() GetLaunchTemplateInstanceMarketOptionOutput {
	return i.ToGetLaunchTemplateInstanceMarketOptionOutputWithContext(context.Background())
}

func (i GetLaunchTemplateInstanceMarketOptionArgs) ToGetLaunchTemplateInstanceMarketOptionOutputWithContext(ctx context.Context) GetLaunchTemplateInstanceMarketOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateInstanceMarketOptionOutput)
}

// GetLaunchTemplateInstanceMarketOptionArrayInput is an input type that accepts GetLaunchTemplateInstanceMarketOptionArray and GetLaunchTemplateInstanceMarketOptionArrayOutput values.
// You can construct a concrete instance of `GetLaunchTemplateInstanceMarketOptionArrayInput` via:
//
// 		 GetLaunchTemplateInstanceMarketOptionArray{ GetLaunchTemplateInstanceMarketOptionArgs{...} }
//
type GetLaunchTemplateInstanceMarketOptionArrayInput interface {
	pulumi.Input

	ToGetLaunchTemplateInstanceMarketOptionArrayOutput() GetLaunchTemplateInstanceMarketOptionArrayOutput
	ToGetLaunchTemplateInstanceMarketOptionArrayOutputWithContext(context.Context) GetLaunchTemplateInstanceMarketOptionArrayOutput
}

type GetLaunchTemplateInstanceMarketOptionArray []GetLaunchTemplateInstanceMarketOptionInput

func (GetLaunchTemplateInstanceMarketOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateInstanceMarketOption)(nil)).Elem()
}

func (i GetLaunchTemplateInstanceMarketOptionArray) ToGetLaunchTemplateInstanceMarketOptionArrayOutput() GetLaunchTemplateInstanceMarketOptionArrayOutput {
	return i.ToGetLaunchTemplateInstanceMarketOptionArrayOutputWithContext(context.Background())
}

func (i GetLaunchTemplateInstanceMarketOptionArray) ToGetLaunchTemplateInstanceMarketOptionArrayOutputWithContext(ctx context.Context) GetLaunchTemplateInstanceMarketOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateInstanceMarketOptionArrayOutput)
}

type GetLaunchTemplateInstanceMarketOptionOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateInstanceMarketOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateInstanceMarketOption)(nil)).Elem()
}

func (o GetLaunchTemplateInstanceMarketOptionOutput) ToGetLaunchTemplateInstanceMarketOptionOutput() GetLaunchTemplateInstanceMarketOptionOutput {
	return o
}

func (o GetLaunchTemplateInstanceMarketOptionOutput) ToGetLaunchTemplateInstanceMarketOptionOutputWithContext(ctx context.Context) GetLaunchTemplateInstanceMarketOptionOutput {
	return o
}

func (o GetLaunchTemplateInstanceMarketOptionOutput) MarketType() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateInstanceMarketOption) string { return v.MarketType }).(pulumi.StringOutput)
}

func (o GetLaunchTemplateInstanceMarketOptionOutput) SpotOptions() GetLaunchTemplateInstanceMarketOptionSpotOptionArrayOutput {
	return o.ApplyT(func(v GetLaunchTemplateInstanceMarketOption) []GetLaunchTemplateInstanceMarketOptionSpotOption {
		return v.SpotOptions
	}).(GetLaunchTemplateInstanceMarketOptionSpotOptionArrayOutput)
}

type GetLaunchTemplateInstanceMarketOptionArrayOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateInstanceMarketOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateInstanceMarketOption)(nil)).Elem()
}

func (o GetLaunchTemplateInstanceMarketOptionArrayOutput) ToGetLaunchTemplateInstanceMarketOptionArrayOutput() GetLaunchTemplateInstanceMarketOptionArrayOutput {
	return o
}

func (o GetLaunchTemplateInstanceMarketOptionArrayOutput) ToGetLaunchTemplateInstanceMarketOptionArrayOutputWithContext(ctx context.Context) GetLaunchTemplateInstanceMarketOptionArrayOutput {
	return o
}

func (o GetLaunchTemplateInstanceMarketOptionArrayOutput) Index(i pulumi.IntInput) GetLaunchTemplateInstanceMarketOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLaunchTemplateInstanceMarketOption {
		return vs[0].([]GetLaunchTemplateInstanceMarketOption)[vs[1].(int)]
	}).(GetLaunchTemplateInstanceMarketOptionOutput)
}

type GetLaunchTemplateInstanceMarketOptionSpotOption struct {
	BlockDurationMinutes         int    `pulumi:"blockDurationMinutes"`
	InstanceInterruptionBehavior string `pulumi:"instanceInterruptionBehavior"`
	MaxPrice                     string `pulumi:"maxPrice"`
	SpotInstanceType             string `pulumi:"spotInstanceType"`
	ValidUntil                   string `pulumi:"validUntil"`
}

// GetLaunchTemplateInstanceMarketOptionSpotOptionInput is an input type that accepts GetLaunchTemplateInstanceMarketOptionSpotOptionArgs and GetLaunchTemplateInstanceMarketOptionSpotOptionOutput values.
// You can construct a concrete instance of `GetLaunchTemplateInstanceMarketOptionSpotOptionInput` via:
//
// 		 GetLaunchTemplateInstanceMarketOptionSpotOptionArgs{...}
//
type GetLaunchTemplateInstanceMarketOptionSpotOptionInput interface {
	pulumi.Input

	ToGetLaunchTemplateInstanceMarketOptionSpotOptionOutput() GetLaunchTemplateInstanceMarketOptionSpotOptionOutput
	ToGetLaunchTemplateInstanceMarketOptionSpotOptionOutputWithContext(context.Context) GetLaunchTemplateInstanceMarketOptionSpotOptionOutput
}

type GetLaunchTemplateInstanceMarketOptionSpotOptionArgs struct {
	BlockDurationMinutes         pulumi.IntInput    `pulumi:"blockDurationMinutes"`
	InstanceInterruptionBehavior pulumi.StringInput `pulumi:"instanceInterruptionBehavior"`
	MaxPrice                     pulumi.StringInput `pulumi:"maxPrice"`
	SpotInstanceType             pulumi.StringInput `pulumi:"spotInstanceType"`
	ValidUntil                   pulumi.StringInput `pulumi:"validUntil"`
}

func (GetLaunchTemplateInstanceMarketOptionSpotOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateInstanceMarketOptionSpotOption)(nil)).Elem()
}

func (i GetLaunchTemplateInstanceMarketOptionSpotOptionArgs) ToGetLaunchTemplateInstanceMarketOptionSpotOptionOutput() GetLaunchTemplateInstanceMarketOptionSpotOptionOutput {
	return i.ToGetLaunchTemplateInstanceMarketOptionSpotOptionOutputWithContext(context.Background())
}

func (i GetLaunchTemplateInstanceMarketOptionSpotOptionArgs) ToGetLaunchTemplateInstanceMarketOptionSpotOptionOutputWithContext(ctx context.Context) GetLaunchTemplateInstanceMarketOptionSpotOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateInstanceMarketOptionSpotOptionOutput)
}

// GetLaunchTemplateInstanceMarketOptionSpotOptionArrayInput is an input type that accepts GetLaunchTemplateInstanceMarketOptionSpotOptionArray and GetLaunchTemplateInstanceMarketOptionSpotOptionArrayOutput values.
// You can construct a concrete instance of `GetLaunchTemplateInstanceMarketOptionSpotOptionArrayInput` via:
//
// 		 GetLaunchTemplateInstanceMarketOptionSpotOptionArray{ GetLaunchTemplateInstanceMarketOptionSpotOptionArgs{...} }
//
type GetLaunchTemplateInstanceMarketOptionSpotOptionArrayInput interface {
	pulumi.Input

	ToGetLaunchTemplateInstanceMarketOptionSpotOptionArrayOutput() GetLaunchTemplateInstanceMarketOptionSpotOptionArrayOutput
	ToGetLaunchTemplateInstanceMarketOptionSpotOptionArrayOutputWithContext(context.Context) GetLaunchTemplateInstanceMarketOptionSpotOptionArrayOutput
}

type GetLaunchTemplateInstanceMarketOptionSpotOptionArray []GetLaunchTemplateInstanceMarketOptionSpotOptionInput

func (GetLaunchTemplateInstanceMarketOptionSpotOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateInstanceMarketOptionSpotOption)(nil)).Elem()
}

func (i GetLaunchTemplateInstanceMarketOptionSpotOptionArray) ToGetLaunchTemplateInstanceMarketOptionSpotOptionArrayOutput() GetLaunchTemplateInstanceMarketOptionSpotOptionArrayOutput {
	return i.ToGetLaunchTemplateInstanceMarketOptionSpotOptionArrayOutputWithContext(context.Background())
}

func (i GetLaunchTemplateInstanceMarketOptionSpotOptionArray) ToGetLaunchTemplateInstanceMarketOptionSpotOptionArrayOutputWithContext(ctx context.Context) GetLaunchTemplateInstanceMarketOptionSpotOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateInstanceMarketOptionSpotOptionArrayOutput)
}

type GetLaunchTemplateInstanceMarketOptionSpotOptionOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateInstanceMarketOptionSpotOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateInstanceMarketOptionSpotOption)(nil)).Elem()
}

func (o GetLaunchTemplateInstanceMarketOptionSpotOptionOutput) ToGetLaunchTemplateInstanceMarketOptionSpotOptionOutput() GetLaunchTemplateInstanceMarketOptionSpotOptionOutput {
	return o
}

func (o GetLaunchTemplateInstanceMarketOptionSpotOptionOutput) ToGetLaunchTemplateInstanceMarketOptionSpotOptionOutputWithContext(ctx context.Context) GetLaunchTemplateInstanceMarketOptionSpotOptionOutput {
	return o
}

func (o GetLaunchTemplateInstanceMarketOptionSpotOptionOutput) BlockDurationMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v GetLaunchTemplateInstanceMarketOptionSpotOption) int { return v.BlockDurationMinutes }).(pulumi.IntOutput)
}

func (o GetLaunchTemplateInstanceMarketOptionSpotOptionOutput) InstanceInterruptionBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateInstanceMarketOptionSpotOption) string { return v.InstanceInterruptionBehavior }).(pulumi.StringOutput)
}

func (o GetLaunchTemplateInstanceMarketOptionSpotOptionOutput) MaxPrice() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateInstanceMarketOptionSpotOption) string { return v.MaxPrice }).(pulumi.StringOutput)
}

func (o GetLaunchTemplateInstanceMarketOptionSpotOptionOutput) SpotInstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateInstanceMarketOptionSpotOption) string { return v.SpotInstanceType }).(pulumi.StringOutput)
}

func (o GetLaunchTemplateInstanceMarketOptionSpotOptionOutput) ValidUntil() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateInstanceMarketOptionSpotOption) string { return v.ValidUntil }).(pulumi.StringOutput)
}

type GetLaunchTemplateInstanceMarketOptionSpotOptionArrayOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateInstanceMarketOptionSpotOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateInstanceMarketOptionSpotOption)(nil)).Elem()
}

func (o GetLaunchTemplateInstanceMarketOptionSpotOptionArrayOutput) ToGetLaunchTemplateInstanceMarketOptionSpotOptionArrayOutput() GetLaunchTemplateInstanceMarketOptionSpotOptionArrayOutput {
	return o
}

func (o GetLaunchTemplateInstanceMarketOptionSpotOptionArrayOutput) ToGetLaunchTemplateInstanceMarketOptionSpotOptionArrayOutputWithContext(ctx context.Context) GetLaunchTemplateInstanceMarketOptionSpotOptionArrayOutput {
	return o
}

func (o GetLaunchTemplateInstanceMarketOptionSpotOptionArrayOutput) Index(i pulumi.IntInput) GetLaunchTemplateInstanceMarketOptionSpotOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLaunchTemplateInstanceMarketOptionSpotOption {
		return vs[0].([]GetLaunchTemplateInstanceMarketOptionSpotOption)[vs[1].(int)]
	}).(GetLaunchTemplateInstanceMarketOptionSpotOptionOutput)
}

type GetLaunchTemplateMetadataOption struct {
	// The state of the metadata service: `enabled`, `disabled`.
	HttpEndpoint string `pulumi:"httpEndpoint"`
	// The desired HTTP PUT response hop limit for instance metadata requests.
	HttpPutResponseHopLimit int `pulumi:"httpPutResponseHopLimit"`
	// If session tokens are required: `optional`, `required`.
	HttpTokens string `pulumi:"httpTokens"`
}

// GetLaunchTemplateMetadataOptionInput is an input type that accepts GetLaunchTemplateMetadataOptionArgs and GetLaunchTemplateMetadataOptionOutput values.
// You can construct a concrete instance of `GetLaunchTemplateMetadataOptionInput` via:
//
// 		 GetLaunchTemplateMetadataOptionArgs{...}
//
type GetLaunchTemplateMetadataOptionInput interface {
	pulumi.Input

	ToGetLaunchTemplateMetadataOptionOutput() GetLaunchTemplateMetadataOptionOutput
	ToGetLaunchTemplateMetadataOptionOutputWithContext(context.Context) GetLaunchTemplateMetadataOptionOutput
}

type GetLaunchTemplateMetadataOptionArgs struct {
	// The state of the metadata service: `enabled`, `disabled`.
	HttpEndpoint pulumi.StringInput `pulumi:"httpEndpoint"`
	// The desired HTTP PUT response hop limit for instance metadata requests.
	HttpPutResponseHopLimit pulumi.IntInput `pulumi:"httpPutResponseHopLimit"`
	// If session tokens are required: `optional`, `required`.
	HttpTokens pulumi.StringInput `pulumi:"httpTokens"`
}

func (GetLaunchTemplateMetadataOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateMetadataOption)(nil)).Elem()
}

func (i GetLaunchTemplateMetadataOptionArgs) ToGetLaunchTemplateMetadataOptionOutput() GetLaunchTemplateMetadataOptionOutput {
	return i.ToGetLaunchTemplateMetadataOptionOutputWithContext(context.Background())
}

func (i GetLaunchTemplateMetadataOptionArgs) ToGetLaunchTemplateMetadataOptionOutputWithContext(ctx context.Context) GetLaunchTemplateMetadataOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateMetadataOptionOutput)
}

// GetLaunchTemplateMetadataOptionArrayInput is an input type that accepts GetLaunchTemplateMetadataOptionArray and GetLaunchTemplateMetadataOptionArrayOutput values.
// You can construct a concrete instance of `GetLaunchTemplateMetadataOptionArrayInput` via:
//
// 		 GetLaunchTemplateMetadataOptionArray{ GetLaunchTemplateMetadataOptionArgs{...} }
//
type GetLaunchTemplateMetadataOptionArrayInput interface {
	pulumi.Input

	ToGetLaunchTemplateMetadataOptionArrayOutput() GetLaunchTemplateMetadataOptionArrayOutput
	ToGetLaunchTemplateMetadataOptionArrayOutputWithContext(context.Context) GetLaunchTemplateMetadataOptionArrayOutput
}

type GetLaunchTemplateMetadataOptionArray []GetLaunchTemplateMetadataOptionInput

func (GetLaunchTemplateMetadataOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateMetadataOption)(nil)).Elem()
}

func (i GetLaunchTemplateMetadataOptionArray) ToGetLaunchTemplateMetadataOptionArrayOutput() GetLaunchTemplateMetadataOptionArrayOutput {
	return i.ToGetLaunchTemplateMetadataOptionArrayOutputWithContext(context.Background())
}

func (i GetLaunchTemplateMetadataOptionArray) ToGetLaunchTemplateMetadataOptionArrayOutputWithContext(ctx context.Context) GetLaunchTemplateMetadataOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateMetadataOptionArrayOutput)
}

type GetLaunchTemplateMetadataOptionOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateMetadataOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateMetadataOption)(nil)).Elem()
}

func (o GetLaunchTemplateMetadataOptionOutput) ToGetLaunchTemplateMetadataOptionOutput() GetLaunchTemplateMetadataOptionOutput {
	return o
}

func (o GetLaunchTemplateMetadataOptionOutput) ToGetLaunchTemplateMetadataOptionOutputWithContext(ctx context.Context) GetLaunchTemplateMetadataOptionOutput {
	return o
}

// The state of the metadata service: `enabled`, `disabled`.
func (o GetLaunchTemplateMetadataOptionOutput) HttpEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateMetadataOption) string { return v.HttpEndpoint }).(pulumi.StringOutput)
}

// The desired HTTP PUT response hop limit for instance metadata requests.
func (o GetLaunchTemplateMetadataOptionOutput) HttpPutResponseHopLimit() pulumi.IntOutput {
	return o.ApplyT(func(v GetLaunchTemplateMetadataOption) int { return v.HttpPutResponseHopLimit }).(pulumi.IntOutput)
}

// If session tokens are required: `optional`, `required`.
func (o GetLaunchTemplateMetadataOptionOutput) HttpTokens() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateMetadataOption) string { return v.HttpTokens }).(pulumi.StringOutput)
}

type GetLaunchTemplateMetadataOptionArrayOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateMetadataOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateMetadataOption)(nil)).Elem()
}

func (o GetLaunchTemplateMetadataOptionArrayOutput) ToGetLaunchTemplateMetadataOptionArrayOutput() GetLaunchTemplateMetadataOptionArrayOutput {
	return o
}

func (o GetLaunchTemplateMetadataOptionArrayOutput) ToGetLaunchTemplateMetadataOptionArrayOutputWithContext(ctx context.Context) GetLaunchTemplateMetadataOptionArrayOutput {
	return o
}

func (o GetLaunchTemplateMetadataOptionArrayOutput) Index(i pulumi.IntInput) GetLaunchTemplateMetadataOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLaunchTemplateMetadataOption {
		return vs[0].([]GetLaunchTemplateMetadataOption)[vs[1].(int)]
	}).(GetLaunchTemplateMetadataOptionOutput)
}

type GetLaunchTemplateMonitoring struct {
	Enabled bool `pulumi:"enabled"`
}

// GetLaunchTemplateMonitoringInput is an input type that accepts GetLaunchTemplateMonitoringArgs and GetLaunchTemplateMonitoringOutput values.
// You can construct a concrete instance of `GetLaunchTemplateMonitoringInput` via:
//
// 		 GetLaunchTemplateMonitoringArgs{...}
//
type GetLaunchTemplateMonitoringInput interface {
	pulumi.Input

	ToGetLaunchTemplateMonitoringOutput() GetLaunchTemplateMonitoringOutput
	ToGetLaunchTemplateMonitoringOutputWithContext(context.Context) GetLaunchTemplateMonitoringOutput
}

type GetLaunchTemplateMonitoringArgs struct {
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetLaunchTemplateMonitoringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateMonitoring)(nil)).Elem()
}

func (i GetLaunchTemplateMonitoringArgs) ToGetLaunchTemplateMonitoringOutput() GetLaunchTemplateMonitoringOutput {
	return i.ToGetLaunchTemplateMonitoringOutputWithContext(context.Background())
}

func (i GetLaunchTemplateMonitoringArgs) ToGetLaunchTemplateMonitoringOutputWithContext(ctx context.Context) GetLaunchTemplateMonitoringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateMonitoringOutput)
}

// GetLaunchTemplateMonitoringArrayInput is an input type that accepts GetLaunchTemplateMonitoringArray and GetLaunchTemplateMonitoringArrayOutput values.
// You can construct a concrete instance of `GetLaunchTemplateMonitoringArrayInput` via:
//
// 		 GetLaunchTemplateMonitoringArray{ GetLaunchTemplateMonitoringArgs{...} }
//
type GetLaunchTemplateMonitoringArrayInput interface {
	pulumi.Input

	ToGetLaunchTemplateMonitoringArrayOutput() GetLaunchTemplateMonitoringArrayOutput
	ToGetLaunchTemplateMonitoringArrayOutputWithContext(context.Context) GetLaunchTemplateMonitoringArrayOutput
}

type GetLaunchTemplateMonitoringArray []GetLaunchTemplateMonitoringInput

func (GetLaunchTemplateMonitoringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateMonitoring)(nil)).Elem()
}

func (i GetLaunchTemplateMonitoringArray) ToGetLaunchTemplateMonitoringArrayOutput() GetLaunchTemplateMonitoringArrayOutput {
	return i.ToGetLaunchTemplateMonitoringArrayOutputWithContext(context.Background())
}

func (i GetLaunchTemplateMonitoringArray) ToGetLaunchTemplateMonitoringArrayOutputWithContext(ctx context.Context) GetLaunchTemplateMonitoringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateMonitoringArrayOutput)
}

type GetLaunchTemplateMonitoringOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateMonitoringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateMonitoring)(nil)).Elem()
}

func (o GetLaunchTemplateMonitoringOutput) ToGetLaunchTemplateMonitoringOutput() GetLaunchTemplateMonitoringOutput {
	return o
}

func (o GetLaunchTemplateMonitoringOutput) ToGetLaunchTemplateMonitoringOutputWithContext(ctx context.Context) GetLaunchTemplateMonitoringOutput {
	return o
}

func (o GetLaunchTemplateMonitoringOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLaunchTemplateMonitoring) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetLaunchTemplateMonitoringArrayOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateMonitoringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateMonitoring)(nil)).Elem()
}

func (o GetLaunchTemplateMonitoringArrayOutput) ToGetLaunchTemplateMonitoringArrayOutput() GetLaunchTemplateMonitoringArrayOutput {
	return o
}

func (o GetLaunchTemplateMonitoringArrayOutput) ToGetLaunchTemplateMonitoringArrayOutputWithContext(ctx context.Context) GetLaunchTemplateMonitoringArrayOutput {
	return o
}

func (o GetLaunchTemplateMonitoringArrayOutput) Index(i pulumi.IntInput) GetLaunchTemplateMonitoringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLaunchTemplateMonitoring {
		return vs[0].([]GetLaunchTemplateMonitoring)[vs[1].(int)]
	}).(GetLaunchTemplateMonitoringOutput)
}

type GetLaunchTemplateNetworkInterface struct {
	AssociatePublicIpAddress bool `pulumi:"associatePublicIpAddress"`
	DeleteOnTermination      bool `pulumi:"deleteOnTermination"`
	// Description of the launch template.
	Description        string   `pulumi:"description"`
	DeviceIndex        int      `pulumi:"deviceIndex"`
	Ipv4AddressCount   int      `pulumi:"ipv4AddressCount"`
	Ipv4Addresses      []string `pulumi:"ipv4Addresses"`
	Ipv6AddressCount   int      `pulumi:"ipv6AddressCount"`
	Ipv6Addresses      []string `pulumi:"ipv6Addresses"`
	NetworkInterfaceId string   `pulumi:"networkInterfaceId"`
	PrivateIpAddress   string   `pulumi:"privateIpAddress"`
	SecurityGroups     []string `pulumi:"securityGroups"`
	SubnetId           string   `pulumi:"subnetId"`
}

// GetLaunchTemplateNetworkInterfaceInput is an input type that accepts GetLaunchTemplateNetworkInterfaceArgs and GetLaunchTemplateNetworkInterfaceOutput values.
// You can construct a concrete instance of `GetLaunchTemplateNetworkInterfaceInput` via:
//
// 		 GetLaunchTemplateNetworkInterfaceArgs{...}
//
type GetLaunchTemplateNetworkInterfaceInput interface {
	pulumi.Input

	ToGetLaunchTemplateNetworkInterfaceOutput() GetLaunchTemplateNetworkInterfaceOutput
	ToGetLaunchTemplateNetworkInterfaceOutputWithContext(context.Context) GetLaunchTemplateNetworkInterfaceOutput
}

type GetLaunchTemplateNetworkInterfaceArgs struct {
	AssociatePublicIpAddress pulumi.BoolInput `pulumi:"associatePublicIpAddress"`
	DeleteOnTermination      pulumi.BoolInput `pulumi:"deleteOnTermination"`
	// Description of the launch template.
	Description        pulumi.StringInput      `pulumi:"description"`
	DeviceIndex        pulumi.IntInput         `pulumi:"deviceIndex"`
	Ipv4AddressCount   pulumi.IntInput         `pulumi:"ipv4AddressCount"`
	Ipv4Addresses      pulumi.StringArrayInput `pulumi:"ipv4Addresses"`
	Ipv6AddressCount   pulumi.IntInput         `pulumi:"ipv6AddressCount"`
	Ipv6Addresses      pulumi.StringArrayInput `pulumi:"ipv6Addresses"`
	NetworkInterfaceId pulumi.StringInput      `pulumi:"networkInterfaceId"`
	PrivateIpAddress   pulumi.StringInput      `pulumi:"privateIpAddress"`
	SecurityGroups     pulumi.StringArrayInput `pulumi:"securityGroups"`
	SubnetId           pulumi.StringInput      `pulumi:"subnetId"`
}

func (GetLaunchTemplateNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateNetworkInterface)(nil)).Elem()
}

func (i GetLaunchTemplateNetworkInterfaceArgs) ToGetLaunchTemplateNetworkInterfaceOutput() GetLaunchTemplateNetworkInterfaceOutput {
	return i.ToGetLaunchTemplateNetworkInterfaceOutputWithContext(context.Background())
}

func (i GetLaunchTemplateNetworkInterfaceArgs) ToGetLaunchTemplateNetworkInterfaceOutputWithContext(ctx context.Context) GetLaunchTemplateNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateNetworkInterfaceOutput)
}

// GetLaunchTemplateNetworkInterfaceArrayInput is an input type that accepts GetLaunchTemplateNetworkInterfaceArray and GetLaunchTemplateNetworkInterfaceArrayOutput values.
// You can construct a concrete instance of `GetLaunchTemplateNetworkInterfaceArrayInput` via:
//
// 		 GetLaunchTemplateNetworkInterfaceArray{ GetLaunchTemplateNetworkInterfaceArgs{...} }
//
type GetLaunchTemplateNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToGetLaunchTemplateNetworkInterfaceArrayOutput() GetLaunchTemplateNetworkInterfaceArrayOutput
	ToGetLaunchTemplateNetworkInterfaceArrayOutputWithContext(context.Context) GetLaunchTemplateNetworkInterfaceArrayOutput
}

type GetLaunchTemplateNetworkInterfaceArray []GetLaunchTemplateNetworkInterfaceInput

func (GetLaunchTemplateNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateNetworkInterface)(nil)).Elem()
}

func (i GetLaunchTemplateNetworkInterfaceArray) ToGetLaunchTemplateNetworkInterfaceArrayOutput() GetLaunchTemplateNetworkInterfaceArrayOutput {
	return i.ToGetLaunchTemplateNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i GetLaunchTemplateNetworkInterfaceArray) ToGetLaunchTemplateNetworkInterfaceArrayOutputWithContext(ctx context.Context) GetLaunchTemplateNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateNetworkInterfaceArrayOutput)
}

type GetLaunchTemplateNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateNetworkInterface)(nil)).Elem()
}

func (o GetLaunchTemplateNetworkInterfaceOutput) ToGetLaunchTemplateNetworkInterfaceOutput() GetLaunchTemplateNetworkInterfaceOutput {
	return o
}

func (o GetLaunchTemplateNetworkInterfaceOutput) ToGetLaunchTemplateNetworkInterfaceOutputWithContext(ctx context.Context) GetLaunchTemplateNetworkInterfaceOutput {
	return o
}

func (o GetLaunchTemplateNetworkInterfaceOutput) AssociatePublicIpAddress() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLaunchTemplateNetworkInterface) bool { return v.AssociatePublicIpAddress }).(pulumi.BoolOutput)
}

func (o GetLaunchTemplateNetworkInterfaceOutput) DeleteOnTermination() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLaunchTemplateNetworkInterface) bool { return v.DeleteOnTermination }).(pulumi.BoolOutput)
}

// Description of the launch template.
func (o GetLaunchTemplateNetworkInterfaceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateNetworkInterface) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetLaunchTemplateNetworkInterfaceOutput) DeviceIndex() pulumi.IntOutput {
	return o.ApplyT(func(v GetLaunchTemplateNetworkInterface) int { return v.DeviceIndex }).(pulumi.IntOutput)
}

func (o GetLaunchTemplateNetworkInterfaceOutput) Ipv4AddressCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetLaunchTemplateNetworkInterface) int { return v.Ipv4AddressCount }).(pulumi.IntOutput)
}

func (o GetLaunchTemplateNetworkInterfaceOutput) Ipv4Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLaunchTemplateNetworkInterface) []string { return v.Ipv4Addresses }).(pulumi.StringArrayOutput)
}

func (o GetLaunchTemplateNetworkInterfaceOutput) Ipv6AddressCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetLaunchTemplateNetworkInterface) int { return v.Ipv6AddressCount }).(pulumi.IntOutput)
}

func (o GetLaunchTemplateNetworkInterfaceOutput) Ipv6Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLaunchTemplateNetworkInterface) []string { return v.Ipv6Addresses }).(pulumi.StringArrayOutput)
}

func (o GetLaunchTemplateNetworkInterfaceOutput) NetworkInterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateNetworkInterface) string { return v.NetworkInterfaceId }).(pulumi.StringOutput)
}

func (o GetLaunchTemplateNetworkInterfaceOutput) PrivateIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateNetworkInterface) string { return v.PrivateIpAddress }).(pulumi.StringOutput)
}

func (o GetLaunchTemplateNetworkInterfaceOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLaunchTemplateNetworkInterface) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

func (o GetLaunchTemplateNetworkInterfaceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateNetworkInterface) string { return v.SubnetId }).(pulumi.StringOutput)
}

type GetLaunchTemplateNetworkInterfaceArrayOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateNetworkInterface)(nil)).Elem()
}

func (o GetLaunchTemplateNetworkInterfaceArrayOutput) ToGetLaunchTemplateNetworkInterfaceArrayOutput() GetLaunchTemplateNetworkInterfaceArrayOutput {
	return o
}

func (o GetLaunchTemplateNetworkInterfaceArrayOutput) ToGetLaunchTemplateNetworkInterfaceArrayOutputWithContext(ctx context.Context) GetLaunchTemplateNetworkInterfaceArrayOutput {
	return o
}

func (o GetLaunchTemplateNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) GetLaunchTemplateNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLaunchTemplateNetworkInterface {
		return vs[0].([]GetLaunchTemplateNetworkInterface)[vs[1].(int)]
	}).(GetLaunchTemplateNetworkInterfaceOutput)
}

type GetLaunchTemplatePlacement struct {
	Affinity         string `pulumi:"affinity"`
	AvailabilityZone string `pulumi:"availabilityZone"`
	GroupName        string `pulumi:"groupName"`
	HostId           string `pulumi:"hostId"`
	SpreadDomain     string `pulumi:"spreadDomain"`
	Tenancy          string `pulumi:"tenancy"`
}

// GetLaunchTemplatePlacementInput is an input type that accepts GetLaunchTemplatePlacementArgs and GetLaunchTemplatePlacementOutput values.
// You can construct a concrete instance of `GetLaunchTemplatePlacementInput` via:
//
// 		 GetLaunchTemplatePlacementArgs{...}
//
type GetLaunchTemplatePlacementInput interface {
	pulumi.Input

	ToGetLaunchTemplatePlacementOutput() GetLaunchTemplatePlacementOutput
	ToGetLaunchTemplatePlacementOutputWithContext(context.Context) GetLaunchTemplatePlacementOutput
}

type GetLaunchTemplatePlacementArgs struct {
	Affinity         pulumi.StringInput `pulumi:"affinity"`
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	GroupName        pulumi.StringInput `pulumi:"groupName"`
	HostId           pulumi.StringInput `pulumi:"hostId"`
	SpreadDomain     pulumi.StringInput `pulumi:"spreadDomain"`
	Tenancy          pulumi.StringInput `pulumi:"tenancy"`
}

func (GetLaunchTemplatePlacementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplatePlacement)(nil)).Elem()
}

func (i GetLaunchTemplatePlacementArgs) ToGetLaunchTemplatePlacementOutput() GetLaunchTemplatePlacementOutput {
	return i.ToGetLaunchTemplatePlacementOutputWithContext(context.Background())
}

func (i GetLaunchTemplatePlacementArgs) ToGetLaunchTemplatePlacementOutputWithContext(ctx context.Context) GetLaunchTemplatePlacementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplatePlacementOutput)
}

// GetLaunchTemplatePlacementArrayInput is an input type that accepts GetLaunchTemplatePlacementArray and GetLaunchTemplatePlacementArrayOutput values.
// You can construct a concrete instance of `GetLaunchTemplatePlacementArrayInput` via:
//
// 		 GetLaunchTemplatePlacementArray{ GetLaunchTemplatePlacementArgs{...} }
//
type GetLaunchTemplatePlacementArrayInput interface {
	pulumi.Input

	ToGetLaunchTemplatePlacementArrayOutput() GetLaunchTemplatePlacementArrayOutput
	ToGetLaunchTemplatePlacementArrayOutputWithContext(context.Context) GetLaunchTemplatePlacementArrayOutput
}

type GetLaunchTemplatePlacementArray []GetLaunchTemplatePlacementInput

func (GetLaunchTemplatePlacementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplatePlacement)(nil)).Elem()
}

func (i GetLaunchTemplatePlacementArray) ToGetLaunchTemplatePlacementArrayOutput() GetLaunchTemplatePlacementArrayOutput {
	return i.ToGetLaunchTemplatePlacementArrayOutputWithContext(context.Background())
}

func (i GetLaunchTemplatePlacementArray) ToGetLaunchTemplatePlacementArrayOutputWithContext(ctx context.Context) GetLaunchTemplatePlacementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplatePlacementArrayOutput)
}

type GetLaunchTemplatePlacementOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplatePlacementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplatePlacement)(nil)).Elem()
}

func (o GetLaunchTemplatePlacementOutput) ToGetLaunchTemplatePlacementOutput() GetLaunchTemplatePlacementOutput {
	return o
}

func (o GetLaunchTemplatePlacementOutput) ToGetLaunchTemplatePlacementOutputWithContext(ctx context.Context) GetLaunchTemplatePlacementOutput {
	return o
}

func (o GetLaunchTemplatePlacementOutput) Affinity() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplatePlacement) string { return v.Affinity }).(pulumi.StringOutput)
}

func (o GetLaunchTemplatePlacementOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplatePlacement) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

func (o GetLaunchTemplatePlacementOutput) GroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplatePlacement) string { return v.GroupName }).(pulumi.StringOutput)
}

func (o GetLaunchTemplatePlacementOutput) HostId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplatePlacement) string { return v.HostId }).(pulumi.StringOutput)
}

func (o GetLaunchTemplatePlacementOutput) SpreadDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplatePlacement) string { return v.SpreadDomain }).(pulumi.StringOutput)
}

func (o GetLaunchTemplatePlacementOutput) Tenancy() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplatePlacement) string { return v.Tenancy }).(pulumi.StringOutput)
}

type GetLaunchTemplatePlacementArrayOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplatePlacementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplatePlacement)(nil)).Elem()
}

func (o GetLaunchTemplatePlacementArrayOutput) ToGetLaunchTemplatePlacementArrayOutput() GetLaunchTemplatePlacementArrayOutput {
	return o
}

func (o GetLaunchTemplatePlacementArrayOutput) ToGetLaunchTemplatePlacementArrayOutputWithContext(ctx context.Context) GetLaunchTemplatePlacementArrayOutput {
	return o
}

func (o GetLaunchTemplatePlacementArrayOutput) Index(i pulumi.IntInput) GetLaunchTemplatePlacementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLaunchTemplatePlacement {
		return vs[0].([]GetLaunchTemplatePlacement)[vs[1].(int)]
	}).(GetLaunchTemplatePlacementOutput)
}

type GetLaunchTemplateTagSpecification struct {
	ResourceType string `pulumi:"resourceType"`
	// A mapping of tags, each pair of which must exactly match a pair on the desired Launch Template.
	Tags map[string]interface{} `pulumi:"tags"`
}

// GetLaunchTemplateTagSpecificationInput is an input type that accepts GetLaunchTemplateTagSpecificationArgs and GetLaunchTemplateTagSpecificationOutput values.
// You can construct a concrete instance of `GetLaunchTemplateTagSpecificationInput` via:
//
// 		 GetLaunchTemplateTagSpecificationArgs{...}
//
type GetLaunchTemplateTagSpecificationInput interface {
	pulumi.Input

	ToGetLaunchTemplateTagSpecificationOutput() GetLaunchTemplateTagSpecificationOutput
	ToGetLaunchTemplateTagSpecificationOutputWithContext(context.Context) GetLaunchTemplateTagSpecificationOutput
}

type GetLaunchTemplateTagSpecificationArgs struct {
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// A mapping of tags, each pair of which must exactly match a pair on the desired Launch Template.
	Tags pulumi.MapInput `pulumi:"tags"`
}

func (GetLaunchTemplateTagSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateTagSpecification)(nil)).Elem()
}

func (i GetLaunchTemplateTagSpecificationArgs) ToGetLaunchTemplateTagSpecificationOutput() GetLaunchTemplateTagSpecificationOutput {
	return i.ToGetLaunchTemplateTagSpecificationOutputWithContext(context.Background())
}

func (i GetLaunchTemplateTagSpecificationArgs) ToGetLaunchTemplateTagSpecificationOutputWithContext(ctx context.Context) GetLaunchTemplateTagSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateTagSpecificationOutput)
}

// GetLaunchTemplateTagSpecificationArrayInput is an input type that accepts GetLaunchTemplateTagSpecificationArray and GetLaunchTemplateTagSpecificationArrayOutput values.
// You can construct a concrete instance of `GetLaunchTemplateTagSpecificationArrayInput` via:
//
// 		 GetLaunchTemplateTagSpecificationArray{ GetLaunchTemplateTagSpecificationArgs{...} }
//
type GetLaunchTemplateTagSpecificationArrayInput interface {
	pulumi.Input

	ToGetLaunchTemplateTagSpecificationArrayOutput() GetLaunchTemplateTagSpecificationArrayOutput
	ToGetLaunchTemplateTagSpecificationArrayOutputWithContext(context.Context) GetLaunchTemplateTagSpecificationArrayOutput
}

type GetLaunchTemplateTagSpecificationArray []GetLaunchTemplateTagSpecificationInput

func (GetLaunchTemplateTagSpecificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateTagSpecification)(nil)).Elem()
}

func (i GetLaunchTemplateTagSpecificationArray) ToGetLaunchTemplateTagSpecificationArrayOutput() GetLaunchTemplateTagSpecificationArrayOutput {
	return i.ToGetLaunchTemplateTagSpecificationArrayOutputWithContext(context.Background())
}

func (i GetLaunchTemplateTagSpecificationArray) ToGetLaunchTemplateTagSpecificationArrayOutputWithContext(ctx context.Context) GetLaunchTemplateTagSpecificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLaunchTemplateTagSpecificationArrayOutput)
}

type GetLaunchTemplateTagSpecificationOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateTagSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLaunchTemplateTagSpecification)(nil)).Elem()
}

func (o GetLaunchTemplateTagSpecificationOutput) ToGetLaunchTemplateTagSpecificationOutput() GetLaunchTemplateTagSpecificationOutput {
	return o
}

func (o GetLaunchTemplateTagSpecificationOutput) ToGetLaunchTemplateTagSpecificationOutputWithContext(ctx context.Context) GetLaunchTemplateTagSpecificationOutput {
	return o
}

func (o GetLaunchTemplateTagSpecificationOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetLaunchTemplateTagSpecification) string { return v.ResourceType }).(pulumi.StringOutput)
}

// A mapping of tags, each pair of which must exactly match a pair on the desired Launch Template.
func (o GetLaunchTemplateTagSpecificationOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetLaunchTemplateTagSpecification) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

type GetLaunchTemplateTagSpecificationArrayOutput struct{ *pulumi.OutputState }

func (GetLaunchTemplateTagSpecificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLaunchTemplateTagSpecification)(nil)).Elem()
}

func (o GetLaunchTemplateTagSpecificationArrayOutput) ToGetLaunchTemplateTagSpecificationArrayOutput() GetLaunchTemplateTagSpecificationArrayOutput {
	return o
}

func (o GetLaunchTemplateTagSpecificationArrayOutput) ToGetLaunchTemplateTagSpecificationArrayOutputWithContext(ctx context.Context) GetLaunchTemplateTagSpecificationArrayOutput {
	return o
}

func (o GetLaunchTemplateTagSpecificationArrayOutput) Index(i pulumi.IntInput) GetLaunchTemplateTagSpecificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLaunchTemplateTagSpecification {
		return vs[0].([]GetLaunchTemplateTagSpecification)[vs[1].(int)]
	}).(GetLaunchTemplateTagSpecificationOutput)
}

type GetNatGatewayFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNatGateways.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// An Nat Gateway will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

// GetNatGatewayFilterInput is an input type that accepts GetNatGatewayFilterArgs and GetNatGatewayFilterOutput values.
// You can construct a concrete instance of `GetNatGatewayFilterInput` via:
//
// 		 GetNatGatewayFilterArgs{...}
//
type GetNatGatewayFilterInput interface {
	pulumi.Input

	ToGetNatGatewayFilterOutput() GetNatGatewayFilterOutput
	ToGetNatGatewayFilterOutputWithContext(context.Context) GetNatGatewayFilterOutput
}

type GetNatGatewayFilterArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNatGateways.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// An Nat Gateway will be selected if any one of the given values matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetNatGatewayFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNatGatewayFilter)(nil)).Elem()
}

func (i GetNatGatewayFilterArgs) ToGetNatGatewayFilterOutput() GetNatGatewayFilterOutput {
	return i.ToGetNatGatewayFilterOutputWithContext(context.Background())
}

func (i GetNatGatewayFilterArgs) ToGetNatGatewayFilterOutputWithContext(ctx context.Context) GetNatGatewayFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNatGatewayFilterOutput)
}

// GetNatGatewayFilterArrayInput is an input type that accepts GetNatGatewayFilterArray and GetNatGatewayFilterArrayOutput values.
// You can construct a concrete instance of `GetNatGatewayFilterArrayInput` via:
//
// 		 GetNatGatewayFilterArray{ GetNatGatewayFilterArgs{...} }
//
type GetNatGatewayFilterArrayInput interface {
	pulumi.Input

	ToGetNatGatewayFilterArrayOutput() GetNatGatewayFilterArrayOutput
	ToGetNatGatewayFilterArrayOutputWithContext(context.Context) GetNatGatewayFilterArrayOutput
}

type GetNatGatewayFilterArray []GetNatGatewayFilterInput

func (GetNatGatewayFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNatGatewayFilter)(nil)).Elem()
}

func (i GetNatGatewayFilterArray) ToGetNatGatewayFilterArrayOutput() GetNatGatewayFilterArrayOutput {
	return i.ToGetNatGatewayFilterArrayOutputWithContext(context.Background())
}

func (i GetNatGatewayFilterArray) ToGetNatGatewayFilterArrayOutputWithContext(ctx context.Context) GetNatGatewayFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNatGatewayFilterArrayOutput)
}

type GetNatGatewayFilterOutput struct{ *pulumi.OutputState }

func (GetNatGatewayFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNatGatewayFilter)(nil)).Elem()
}

func (o GetNatGatewayFilterOutput) ToGetNatGatewayFilterOutput() GetNatGatewayFilterOutput {
	return o
}

func (o GetNatGatewayFilterOutput) ToGetNatGatewayFilterOutputWithContext(ctx context.Context) GetNatGatewayFilterOutput {
	return o
}

// The name of the field to filter by, as defined by
// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNatGateways.html).
func (o GetNatGatewayFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatGatewayFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field.
// An Nat Gateway will be selected if any one of the given values matches.
func (o GetNatGatewayFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNatGatewayFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetNatGatewayFilterArrayOutput struct{ *pulumi.OutputState }

func (GetNatGatewayFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNatGatewayFilter)(nil)).Elem()
}

func (o GetNatGatewayFilterArrayOutput) ToGetNatGatewayFilterArrayOutput() GetNatGatewayFilterArrayOutput {
	return o
}

func (o GetNatGatewayFilterArrayOutput) ToGetNatGatewayFilterArrayOutputWithContext(ctx context.Context) GetNatGatewayFilterArrayOutput {
	return o
}

func (o GetNatGatewayFilterArrayOutput) Index(i pulumi.IntInput) GetNatGatewayFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNatGatewayFilter {
		return vs[0].([]GetNatGatewayFilter)[vs[1].(int)]
	}).(GetNatGatewayFilterOutput)
}

type GetNetworkAclsFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkAcls.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

// GetNetworkAclsFilterInput is an input type that accepts GetNetworkAclsFilterArgs and GetNetworkAclsFilterOutput values.
// You can construct a concrete instance of `GetNetworkAclsFilterInput` via:
//
// 		 GetNetworkAclsFilterArgs{...}
//
type GetNetworkAclsFilterInput interface {
	pulumi.Input

	ToGetNetworkAclsFilterOutput() GetNetworkAclsFilterOutput
	ToGetNetworkAclsFilterOutputWithContext(context.Context) GetNetworkAclsFilterOutput
}

type GetNetworkAclsFilterArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkAcls.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC will be selected if any one of the given values matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetNetworkAclsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAclsFilter)(nil)).Elem()
}

func (i GetNetworkAclsFilterArgs) ToGetNetworkAclsFilterOutput() GetNetworkAclsFilterOutput {
	return i.ToGetNetworkAclsFilterOutputWithContext(context.Background())
}

func (i GetNetworkAclsFilterArgs) ToGetNetworkAclsFilterOutputWithContext(ctx context.Context) GetNetworkAclsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkAclsFilterOutput)
}

// GetNetworkAclsFilterArrayInput is an input type that accepts GetNetworkAclsFilterArray and GetNetworkAclsFilterArrayOutput values.
// You can construct a concrete instance of `GetNetworkAclsFilterArrayInput` via:
//
// 		 GetNetworkAclsFilterArray{ GetNetworkAclsFilterArgs{...} }
//
type GetNetworkAclsFilterArrayInput interface {
	pulumi.Input

	ToGetNetworkAclsFilterArrayOutput() GetNetworkAclsFilterArrayOutput
	ToGetNetworkAclsFilterArrayOutputWithContext(context.Context) GetNetworkAclsFilterArrayOutput
}

type GetNetworkAclsFilterArray []GetNetworkAclsFilterInput

func (GetNetworkAclsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkAclsFilter)(nil)).Elem()
}

func (i GetNetworkAclsFilterArray) ToGetNetworkAclsFilterArrayOutput() GetNetworkAclsFilterArrayOutput {
	return i.ToGetNetworkAclsFilterArrayOutputWithContext(context.Background())
}

func (i GetNetworkAclsFilterArray) ToGetNetworkAclsFilterArrayOutputWithContext(ctx context.Context) GetNetworkAclsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkAclsFilterArrayOutput)
}

type GetNetworkAclsFilterOutput struct{ *pulumi.OutputState }

func (GetNetworkAclsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkAclsFilter)(nil)).Elem()
}

func (o GetNetworkAclsFilterOutput) ToGetNetworkAclsFilterOutput() GetNetworkAclsFilterOutput {
	return o
}

func (o GetNetworkAclsFilterOutput) ToGetNetworkAclsFilterOutputWithContext(ctx context.Context) GetNetworkAclsFilterOutput {
	return o
}

// The name of the field to filter by, as defined by
// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkAcls.html).
func (o GetNetworkAclsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkAclsFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field.
// A VPC will be selected if any one of the given values matches.
func (o GetNetworkAclsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkAclsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetNetworkAclsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkAclsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkAclsFilter)(nil)).Elem()
}

func (o GetNetworkAclsFilterArrayOutput) ToGetNetworkAclsFilterArrayOutput() GetNetworkAclsFilterArrayOutput {
	return o
}

func (o GetNetworkAclsFilterArrayOutput) ToGetNetworkAclsFilterArrayOutputWithContext(ctx context.Context) GetNetworkAclsFilterArrayOutput {
	return o
}

func (o GetNetworkAclsFilterArrayOutput) Index(i pulumi.IntInput) GetNetworkAclsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkAclsFilter {
		return vs[0].([]GetNetworkAclsFilter)[vs[1].(int)]
	}).(GetNetworkAclsFilterOutput)
}

type GetNetworkInterfaceAssociation struct {
	// The allocation ID.
	AllocationId string `pulumi:"allocationId"`
	// The association ID.
	AssociationId string `pulumi:"associationId"`
	// The ID of the Elastic IP address owner.
	IpOwnerId string `pulumi:"ipOwnerId"`
	// The public DNS name.
	PublicDnsName string `pulumi:"publicDnsName"`
	// The address of the Elastic IP address bound to the network interface.
	PublicIp string `pulumi:"publicIp"`
}

// GetNetworkInterfaceAssociationInput is an input type that accepts GetNetworkInterfaceAssociationArgs and GetNetworkInterfaceAssociationOutput values.
// You can construct a concrete instance of `GetNetworkInterfaceAssociationInput` via:
//
// 		 GetNetworkInterfaceAssociationArgs{...}
//
type GetNetworkInterfaceAssociationInput interface {
	pulumi.Input

	ToGetNetworkInterfaceAssociationOutput() GetNetworkInterfaceAssociationOutput
	ToGetNetworkInterfaceAssociationOutputWithContext(context.Context) GetNetworkInterfaceAssociationOutput
}

type GetNetworkInterfaceAssociationArgs struct {
	// The allocation ID.
	AllocationId pulumi.StringInput `pulumi:"allocationId"`
	// The association ID.
	AssociationId pulumi.StringInput `pulumi:"associationId"`
	// The ID of the Elastic IP address owner.
	IpOwnerId pulumi.StringInput `pulumi:"ipOwnerId"`
	// The public DNS name.
	PublicDnsName pulumi.StringInput `pulumi:"publicDnsName"`
	// The address of the Elastic IP address bound to the network interface.
	PublicIp pulumi.StringInput `pulumi:"publicIp"`
}

func (GetNetworkInterfaceAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInterfaceAssociation)(nil)).Elem()
}

func (i GetNetworkInterfaceAssociationArgs) ToGetNetworkInterfaceAssociationOutput() GetNetworkInterfaceAssociationOutput {
	return i.ToGetNetworkInterfaceAssociationOutputWithContext(context.Background())
}

func (i GetNetworkInterfaceAssociationArgs) ToGetNetworkInterfaceAssociationOutputWithContext(ctx context.Context) GetNetworkInterfaceAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInterfaceAssociationOutput)
}

// GetNetworkInterfaceAssociationArrayInput is an input type that accepts GetNetworkInterfaceAssociationArray and GetNetworkInterfaceAssociationArrayOutput values.
// You can construct a concrete instance of `GetNetworkInterfaceAssociationArrayInput` via:
//
// 		 GetNetworkInterfaceAssociationArray{ GetNetworkInterfaceAssociationArgs{...} }
//
type GetNetworkInterfaceAssociationArrayInput interface {
	pulumi.Input

	ToGetNetworkInterfaceAssociationArrayOutput() GetNetworkInterfaceAssociationArrayOutput
	ToGetNetworkInterfaceAssociationArrayOutputWithContext(context.Context) GetNetworkInterfaceAssociationArrayOutput
}

type GetNetworkInterfaceAssociationArray []GetNetworkInterfaceAssociationInput

func (GetNetworkInterfaceAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkInterfaceAssociation)(nil)).Elem()
}

func (i GetNetworkInterfaceAssociationArray) ToGetNetworkInterfaceAssociationArrayOutput() GetNetworkInterfaceAssociationArrayOutput {
	return i.ToGetNetworkInterfaceAssociationArrayOutputWithContext(context.Background())
}

func (i GetNetworkInterfaceAssociationArray) ToGetNetworkInterfaceAssociationArrayOutputWithContext(ctx context.Context) GetNetworkInterfaceAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInterfaceAssociationArrayOutput)
}

type GetNetworkInterfaceAssociationOutput struct{ *pulumi.OutputState }

func (GetNetworkInterfaceAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInterfaceAssociation)(nil)).Elem()
}

func (o GetNetworkInterfaceAssociationOutput) ToGetNetworkInterfaceAssociationOutput() GetNetworkInterfaceAssociationOutput {
	return o
}

func (o GetNetworkInterfaceAssociationOutput) ToGetNetworkInterfaceAssociationOutputWithContext(ctx context.Context) GetNetworkInterfaceAssociationOutput {
	return o
}

// The allocation ID.
func (o GetNetworkInterfaceAssociationOutput) AllocationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfaceAssociation) string { return v.AllocationId }).(pulumi.StringOutput)
}

// The association ID.
func (o GetNetworkInterfaceAssociationOutput) AssociationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfaceAssociation) string { return v.AssociationId }).(pulumi.StringOutput)
}

// The ID of the Elastic IP address owner.
func (o GetNetworkInterfaceAssociationOutput) IpOwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfaceAssociation) string { return v.IpOwnerId }).(pulumi.StringOutput)
}

// The public DNS name.
func (o GetNetworkInterfaceAssociationOutput) PublicDnsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfaceAssociation) string { return v.PublicDnsName }).(pulumi.StringOutput)
}

// The address of the Elastic IP address bound to the network interface.
func (o GetNetworkInterfaceAssociationOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfaceAssociation) string { return v.PublicIp }).(pulumi.StringOutput)
}

type GetNetworkInterfaceAssociationArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkInterfaceAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkInterfaceAssociation)(nil)).Elem()
}

func (o GetNetworkInterfaceAssociationArrayOutput) ToGetNetworkInterfaceAssociationArrayOutput() GetNetworkInterfaceAssociationArrayOutput {
	return o
}

func (o GetNetworkInterfaceAssociationArrayOutput) ToGetNetworkInterfaceAssociationArrayOutputWithContext(ctx context.Context) GetNetworkInterfaceAssociationArrayOutput {
	return o
}

func (o GetNetworkInterfaceAssociationArrayOutput) Index(i pulumi.IntInput) GetNetworkInterfaceAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkInterfaceAssociation {
		return vs[0].([]GetNetworkInterfaceAssociation)[vs[1].(int)]
	}).(GetNetworkInterfaceAssociationOutput)
}

type GetNetworkInterfaceAttachmentType struct {
	AttachmentId    string `pulumi:"attachmentId"`
	DeviceIndex     int    `pulumi:"deviceIndex"`
	InstanceId      string `pulumi:"instanceId"`
	InstanceOwnerId string `pulumi:"instanceOwnerId"`
}

// GetNetworkInterfaceAttachmentTypeInput is an input type that accepts GetNetworkInterfaceAttachmentTypeArgs and GetNetworkInterfaceAttachmentTypeOutput values.
// You can construct a concrete instance of `GetNetworkInterfaceAttachmentTypeInput` via:
//
// 		 GetNetworkInterfaceAttachmentTypeArgs{...}
//
type GetNetworkInterfaceAttachmentTypeInput interface {
	pulumi.Input

	ToGetNetworkInterfaceAttachmentTypeOutput() GetNetworkInterfaceAttachmentTypeOutput
	ToGetNetworkInterfaceAttachmentTypeOutputWithContext(context.Context) GetNetworkInterfaceAttachmentTypeOutput
}

type GetNetworkInterfaceAttachmentTypeArgs struct {
	AttachmentId    pulumi.StringInput `pulumi:"attachmentId"`
	DeviceIndex     pulumi.IntInput    `pulumi:"deviceIndex"`
	InstanceId      pulumi.StringInput `pulumi:"instanceId"`
	InstanceOwnerId pulumi.StringInput `pulumi:"instanceOwnerId"`
}

func (GetNetworkInterfaceAttachmentTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInterfaceAttachmentType)(nil)).Elem()
}

func (i GetNetworkInterfaceAttachmentTypeArgs) ToGetNetworkInterfaceAttachmentTypeOutput() GetNetworkInterfaceAttachmentTypeOutput {
	return i.ToGetNetworkInterfaceAttachmentTypeOutputWithContext(context.Background())
}

func (i GetNetworkInterfaceAttachmentTypeArgs) ToGetNetworkInterfaceAttachmentTypeOutputWithContext(ctx context.Context) GetNetworkInterfaceAttachmentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInterfaceAttachmentTypeOutput)
}

// GetNetworkInterfaceAttachmentTypeArrayInput is an input type that accepts GetNetworkInterfaceAttachmentTypeArray and GetNetworkInterfaceAttachmentTypeArrayOutput values.
// You can construct a concrete instance of `GetNetworkInterfaceAttachmentTypeArrayInput` via:
//
// 		 GetNetworkInterfaceAttachmentTypeArray{ GetNetworkInterfaceAttachmentTypeArgs{...} }
//
type GetNetworkInterfaceAttachmentTypeArrayInput interface {
	pulumi.Input

	ToGetNetworkInterfaceAttachmentTypeArrayOutput() GetNetworkInterfaceAttachmentTypeArrayOutput
	ToGetNetworkInterfaceAttachmentTypeArrayOutputWithContext(context.Context) GetNetworkInterfaceAttachmentTypeArrayOutput
}

type GetNetworkInterfaceAttachmentTypeArray []GetNetworkInterfaceAttachmentTypeInput

func (GetNetworkInterfaceAttachmentTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkInterfaceAttachmentType)(nil)).Elem()
}

func (i GetNetworkInterfaceAttachmentTypeArray) ToGetNetworkInterfaceAttachmentTypeArrayOutput() GetNetworkInterfaceAttachmentTypeArrayOutput {
	return i.ToGetNetworkInterfaceAttachmentTypeArrayOutputWithContext(context.Background())
}

func (i GetNetworkInterfaceAttachmentTypeArray) ToGetNetworkInterfaceAttachmentTypeArrayOutputWithContext(ctx context.Context) GetNetworkInterfaceAttachmentTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInterfaceAttachmentTypeArrayOutput)
}

type GetNetworkInterfaceAttachmentTypeOutput struct{ *pulumi.OutputState }

func (GetNetworkInterfaceAttachmentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInterfaceAttachmentType)(nil)).Elem()
}

func (o GetNetworkInterfaceAttachmentTypeOutput) ToGetNetworkInterfaceAttachmentTypeOutput() GetNetworkInterfaceAttachmentTypeOutput {
	return o
}

func (o GetNetworkInterfaceAttachmentTypeOutput) ToGetNetworkInterfaceAttachmentTypeOutputWithContext(ctx context.Context) GetNetworkInterfaceAttachmentTypeOutput {
	return o
}

func (o GetNetworkInterfaceAttachmentTypeOutput) AttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfaceAttachmentType) string { return v.AttachmentId }).(pulumi.StringOutput)
}

func (o GetNetworkInterfaceAttachmentTypeOutput) DeviceIndex() pulumi.IntOutput {
	return o.ApplyT(func(v GetNetworkInterfaceAttachmentType) int { return v.DeviceIndex }).(pulumi.IntOutput)
}

func (o GetNetworkInterfaceAttachmentTypeOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfaceAttachmentType) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetNetworkInterfaceAttachmentTypeOutput) InstanceOwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfaceAttachmentType) string { return v.InstanceOwnerId }).(pulumi.StringOutput)
}

type GetNetworkInterfaceAttachmentTypeArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkInterfaceAttachmentTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkInterfaceAttachmentType)(nil)).Elem()
}

func (o GetNetworkInterfaceAttachmentTypeArrayOutput) ToGetNetworkInterfaceAttachmentTypeArrayOutput() GetNetworkInterfaceAttachmentTypeArrayOutput {
	return o
}

func (o GetNetworkInterfaceAttachmentTypeArrayOutput) ToGetNetworkInterfaceAttachmentTypeArrayOutputWithContext(ctx context.Context) GetNetworkInterfaceAttachmentTypeArrayOutput {
	return o
}

func (o GetNetworkInterfaceAttachmentTypeArrayOutput) Index(i pulumi.IntInput) GetNetworkInterfaceAttachmentTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkInterfaceAttachmentType {
		return vs[0].([]GetNetworkInterfaceAttachmentType)[vs[1].(int)]
	}).(GetNetworkInterfaceAttachmentTypeOutput)
}

type GetNetworkInterfaceFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetNetworkInterfaceFilterInput is an input type that accepts GetNetworkInterfaceFilterArgs and GetNetworkInterfaceFilterOutput values.
// You can construct a concrete instance of `GetNetworkInterfaceFilterInput` via:
//
// 		 GetNetworkInterfaceFilterArgs{...}
//
type GetNetworkInterfaceFilterInput interface {
	pulumi.Input

	ToGetNetworkInterfaceFilterOutput() GetNetworkInterfaceFilterOutput
	ToGetNetworkInterfaceFilterOutputWithContext(context.Context) GetNetworkInterfaceFilterOutput
}

type GetNetworkInterfaceFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetNetworkInterfaceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInterfaceFilter)(nil)).Elem()
}

func (i GetNetworkInterfaceFilterArgs) ToGetNetworkInterfaceFilterOutput() GetNetworkInterfaceFilterOutput {
	return i.ToGetNetworkInterfaceFilterOutputWithContext(context.Background())
}

func (i GetNetworkInterfaceFilterArgs) ToGetNetworkInterfaceFilterOutputWithContext(ctx context.Context) GetNetworkInterfaceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInterfaceFilterOutput)
}

// GetNetworkInterfaceFilterArrayInput is an input type that accepts GetNetworkInterfaceFilterArray and GetNetworkInterfaceFilterArrayOutput values.
// You can construct a concrete instance of `GetNetworkInterfaceFilterArrayInput` via:
//
// 		 GetNetworkInterfaceFilterArray{ GetNetworkInterfaceFilterArgs{...} }
//
type GetNetworkInterfaceFilterArrayInput interface {
	pulumi.Input

	ToGetNetworkInterfaceFilterArrayOutput() GetNetworkInterfaceFilterArrayOutput
	ToGetNetworkInterfaceFilterArrayOutputWithContext(context.Context) GetNetworkInterfaceFilterArrayOutput
}

type GetNetworkInterfaceFilterArray []GetNetworkInterfaceFilterInput

func (GetNetworkInterfaceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkInterfaceFilter)(nil)).Elem()
}

func (i GetNetworkInterfaceFilterArray) ToGetNetworkInterfaceFilterArrayOutput() GetNetworkInterfaceFilterArrayOutput {
	return i.ToGetNetworkInterfaceFilterArrayOutputWithContext(context.Background())
}

func (i GetNetworkInterfaceFilterArray) ToGetNetworkInterfaceFilterArrayOutputWithContext(ctx context.Context) GetNetworkInterfaceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInterfaceFilterArrayOutput)
}

type GetNetworkInterfaceFilterOutput struct{ *pulumi.OutputState }

func (GetNetworkInterfaceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInterfaceFilter)(nil)).Elem()
}

func (o GetNetworkInterfaceFilterOutput) ToGetNetworkInterfaceFilterOutput() GetNetworkInterfaceFilterOutput {
	return o
}

func (o GetNetworkInterfaceFilterOutput) ToGetNetworkInterfaceFilterOutputWithContext(ctx context.Context) GetNetworkInterfaceFilterOutput {
	return o
}

func (o GetNetworkInterfaceFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfaceFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetNetworkInterfaceFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkInterfaceFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetNetworkInterfaceFilterArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkInterfaceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkInterfaceFilter)(nil)).Elem()
}

func (o GetNetworkInterfaceFilterArrayOutput) ToGetNetworkInterfaceFilterArrayOutput() GetNetworkInterfaceFilterArrayOutput {
	return o
}

func (o GetNetworkInterfaceFilterArrayOutput) ToGetNetworkInterfaceFilterArrayOutputWithContext(ctx context.Context) GetNetworkInterfaceFilterArrayOutput {
	return o
}

func (o GetNetworkInterfaceFilterArrayOutput) Index(i pulumi.IntInput) GetNetworkInterfaceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkInterfaceFilter {
		return vs[0].([]GetNetworkInterfaceFilter)[vs[1].(int)]
	}).(GetNetworkInterfaceFilterOutput)
}

type GetNetworkInterfacesFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInterfaces.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	Values []string `pulumi:"values"`
}

// GetNetworkInterfacesFilterInput is an input type that accepts GetNetworkInterfacesFilterArgs and GetNetworkInterfacesFilterOutput values.
// You can construct a concrete instance of `GetNetworkInterfacesFilterInput` via:
//
// 		 GetNetworkInterfacesFilterArgs{...}
//
type GetNetworkInterfacesFilterInput interface {
	pulumi.Input

	ToGetNetworkInterfacesFilterOutput() GetNetworkInterfacesFilterOutput
	ToGetNetworkInterfacesFilterOutputWithContext(context.Context) GetNetworkInterfacesFilterOutput
}

type GetNetworkInterfacesFilterArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInterfaces.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetNetworkInterfacesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInterfacesFilter)(nil)).Elem()
}

func (i GetNetworkInterfacesFilterArgs) ToGetNetworkInterfacesFilterOutput() GetNetworkInterfacesFilterOutput {
	return i.ToGetNetworkInterfacesFilterOutputWithContext(context.Background())
}

func (i GetNetworkInterfacesFilterArgs) ToGetNetworkInterfacesFilterOutputWithContext(ctx context.Context) GetNetworkInterfacesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInterfacesFilterOutput)
}

// GetNetworkInterfacesFilterArrayInput is an input type that accepts GetNetworkInterfacesFilterArray and GetNetworkInterfacesFilterArrayOutput values.
// You can construct a concrete instance of `GetNetworkInterfacesFilterArrayInput` via:
//
// 		 GetNetworkInterfacesFilterArray{ GetNetworkInterfacesFilterArgs{...} }
//
type GetNetworkInterfacesFilterArrayInput interface {
	pulumi.Input

	ToGetNetworkInterfacesFilterArrayOutput() GetNetworkInterfacesFilterArrayOutput
	ToGetNetworkInterfacesFilterArrayOutputWithContext(context.Context) GetNetworkInterfacesFilterArrayOutput
}

type GetNetworkInterfacesFilterArray []GetNetworkInterfacesFilterInput

func (GetNetworkInterfacesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkInterfacesFilter)(nil)).Elem()
}

func (i GetNetworkInterfacesFilterArray) ToGetNetworkInterfacesFilterArrayOutput() GetNetworkInterfacesFilterArrayOutput {
	return i.ToGetNetworkInterfacesFilterArrayOutputWithContext(context.Background())
}

func (i GetNetworkInterfacesFilterArray) ToGetNetworkInterfacesFilterArrayOutputWithContext(ctx context.Context) GetNetworkInterfacesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNetworkInterfacesFilterArrayOutput)
}

type GetNetworkInterfacesFilterOutput struct{ *pulumi.OutputState }

func (GetNetworkInterfacesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNetworkInterfacesFilter)(nil)).Elem()
}

func (o GetNetworkInterfacesFilterOutput) ToGetNetworkInterfacesFilterOutput() GetNetworkInterfacesFilterOutput {
	return o
}

func (o GetNetworkInterfacesFilterOutput) ToGetNetworkInterfacesFilterOutputWithContext(ctx context.Context) GetNetworkInterfacesFilterOutput {
	return o
}

// The name of the field to filter by, as defined by
// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeNetworkInterfaces.html).
func (o GetNetworkInterfacesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNetworkInterfacesFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field.
func (o GetNetworkInterfacesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNetworkInterfacesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetNetworkInterfacesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetNetworkInterfacesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNetworkInterfacesFilter)(nil)).Elem()
}

func (o GetNetworkInterfacesFilterArrayOutput) ToGetNetworkInterfacesFilterArrayOutput() GetNetworkInterfacesFilterArrayOutput {
	return o
}

func (o GetNetworkInterfacesFilterArrayOutput) ToGetNetworkInterfacesFilterArrayOutputWithContext(ctx context.Context) GetNetworkInterfacesFilterArrayOutput {
	return o
}

func (o GetNetworkInterfacesFilterArrayOutput) Index(i pulumi.IntInput) GetNetworkInterfacesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNetworkInterfacesFilter {
		return vs[0].([]GetNetworkInterfacesFilter)[vs[1].(int)]
	}).(GetNetworkInterfacesFilterOutput)
}

type GetRouteTableAssociationType struct {
	// The id of an Internet Gateway or Virtual Private Gateway which is connected to the Route Table (not exported if not passed as a parameter).
	GatewayId string `pulumi:"gatewayId"`
	// If the Association due to the Main Route Table.
	Main bool `pulumi:"main"`
	// The Association ID.
	RouteTableAssociationId string `pulumi:"routeTableAssociationId"`
	// The id of the specific Route Table to retrieve.
	RouteTableId string `pulumi:"routeTableId"`
	// The id of a Subnet which is connected to the Route Table (not exported if not passed as a parameter).
	SubnetId string `pulumi:"subnetId"`
}

// GetRouteTableAssociationTypeInput is an input type that accepts GetRouteTableAssociationTypeArgs and GetRouteTableAssociationTypeOutput values.
// You can construct a concrete instance of `GetRouteTableAssociationTypeInput` via:
//
// 		 GetRouteTableAssociationTypeArgs{...}
//
type GetRouteTableAssociationTypeInput interface {
	pulumi.Input

	ToGetRouteTableAssociationTypeOutput() GetRouteTableAssociationTypeOutput
	ToGetRouteTableAssociationTypeOutputWithContext(context.Context) GetRouteTableAssociationTypeOutput
}

type GetRouteTableAssociationTypeArgs struct {
	// The id of an Internet Gateway or Virtual Private Gateway which is connected to the Route Table (not exported if not passed as a parameter).
	GatewayId pulumi.StringInput `pulumi:"gatewayId"`
	// If the Association due to the Main Route Table.
	Main pulumi.BoolInput `pulumi:"main"`
	// The Association ID.
	RouteTableAssociationId pulumi.StringInput `pulumi:"routeTableAssociationId"`
	// The id of the specific Route Table to retrieve.
	RouteTableId pulumi.StringInput `pulumi:"routeTableId"`
	// The id of a Subnet which is connected to the Route Table (not exported if not passed as a parameter).
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (GetRouteTableAssociationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableAssociationType)(nil)).Elem()
}

func (i GetRouteTableAssociationTypeArgs) ToGetRouteTableAssociationTypeOutput() GetRouteTableAssociationTypeOutput {
	return i.ToGetRouteTableAssociationTypeOutputWithContext(context.Background())
}

func (i GetRouteTableAssociationTypeArgs) ToGetRouteTableAssociationTypeOutputWithContext(ctx context.Context) GetRouteTableAssociationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTableAssociationTypeOutput)
}

// GetRouteTableAssociationTypeArrayInput is an input type that accepts GetRouteTableAssociationTypeArray and GetRouteTableAssociationTypeArrayOutput values.
// You can construct a concrete instance of `GetRouteTableAssociationTypeArrayInput` via:
//
// 		 GetRouteTableAssociationTypeArray{ GetRouteTableAssociationTypeArgs{...} }
//
type GetRouteTableAssociationTypeArrayInput interface {
	pulumi.Input

	ToGetRouteTableAssociationTypeArrayOutput() GetRouteTableAssociationTypeArrayOutput
	ToGetRouteTableAssociationTypeArrayOutputWithContext(context.Context) GetRouteTableAssociationTypeArrayOutput
}

type GetRouteTableAssociationTypeArray []GetRouteTableAssociationTypeInput

func (GetRouteTableAssociationTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTableAssociationType)(nil)).Elem()
}

func (i GetRouteTableAssociationTypeArray) ToGetRouteTableAssociationTypeArrayOutput() GetRouteTableAssociationTypeArrayOutput {
	return i.ToGetRouteTableAssociationTypeArrayOutputWithContext(context.Background())
}

func (i GetRouteTableAssociationTypeArray) ToGetRouteTableAssociationTypeArrayOutputWithContext(ctx context.Context) GetRouteTableAssociationTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTableAssociationTypeArrayOutput)
}

type GetRouteTableAssociationTypeOutput struct{ *pulumi.OutputState }

func (GetRouteTableAssociationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableAssociationType)(nil)).Elem()
}

func (o GetRouteTableAssociationTypeOutput) ToGetRouteTableAssociationTypeOutput() GetRouteTableAssociationTypeOutput {
	return o
}

func (o GetRouteTableAssociationTypeOutput) ToGetRouteTableAssociationTypeOutputWithContext(ctx context.Context) GetRouteTableAssociationTypeOutput {
	return o
}

// The id of an Internet Gateway or Virtual Private Gateway which is connected to the Route Table (not exported if not passed as a parameter).
func (o GetRouteTableAssociationTypeOutput) GatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableAssociationType) string { return v.GatewayId }).(pulumi.StringOutput)
}

// If the Association due to the Main Route Table.
func (o GetRouteTableAssociationTypeOutput) Main() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRouteTableAssociationType) bool { return v.Main }).(pulumi.BoolOutput)
}

// The Association ID.
func (o GetRouteTableAssociationTypeOutput) RouteTableAssociationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableAssociationType) string { return v.RouteTableAssociationId }).(pulumi.StringOutput)
}

// The id of the specific Route Table to retrieve.
func (o GetRouteTableAssociationTypeOutput) RouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableAssociationType) string { return v.RouteTableId }).(pulumi.StringOutput)
}

// The id of a Subnet which is connected to the Route Table (not exported if not passed as a parameter).
func (o GetRouteTableAssociationTypeOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableAssociationType) string { return v.SubnetId }).(pulumi.StringOutput)
}

type GetRouteTableAssociationTypeArrayOutput struct{ *pulumi.OutputState }

func (GetRouteTableAssociationTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTableAssociationType)(nil)).Elem()
}

func (o GetRouteTableAssociationTypeArrayOutput) ToGetRouteTableAssociationTypeArrayOutput() GetRouteTableAssociationTypeArrayOutput {
	return o
}

func (o GetRouteTableAssociationTypeArrayOutput) ToGetRouteTableAssociationTypeArrayOutputWithContext(ctx context.Context) GetRouteTableAssociationTypeArrayOutput {
	return o
}

func (o GetRouteTableAssociationTypeArrayOutput) Index(i pulumi.IntInput) GetRouteTableAssociationTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteTableAssociationType {
		return vs[0].([]GetRouteTableAssociationType)[vs[1].(int)]
	}).(GetRouteTableAssociationTypeOutput)
}

type GetRouteTableFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRouteTables.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A Route Table will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

// GetRouteTableFilterInput is an input type that accepts GetRouteTableFilterArgs and GetRouteTableFilterOutput values.
// You can construct a concrete instance of `GetRouteTableFilterInput` via:
//
// 		 GetRouteTableFilterArgs{...}
//
type GetRouteTableFilterInput interface {
	pulumi.Input

	ToGetRouteTableFilterOutput() GetRouteTableFilterOutput
	ToGetRouteTableFilterOutputWithContext(context.Context) GetRouteTableFilterOutput
}

type GetRouteTableFilterArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRouteTables.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A Route Table will be selected if any one of the given values matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetRouteTableFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableFilter)(nil)).Elem()
}

func (i GetRouteTableFilterArgs) ToGetRouteTableFilterOutput() GetRouteTableFilterOutput {
	return i.ToGetRouteTableFilterOutputWithContext(context.Background())
}

func (i GetRouteTableFilterArgs) ToGetRouteTableFilterOutputWithContext(ctx context.Context) GetRouteTableFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTableFilterOutput)
}

// GetRouteTableFilterArrayInput is an input type that accepts GetRouteTableFilterArray and GetRouteTableFilterArrayOutput values.
// You can construct a concrete instance of `GetRouteTableFilterArrayInput` via:
//
// 		 GetRouteTableFilterArray{ GetRouteTableFilterArgs{...} }
//
type GetRouteTableFilterArrayInput interface {
	pulumi.Input

	ToGetRouteTableFilterArrayOutput() GetRouteTableFilterArrayOutput
	ToGetRouteTableFilterArrayOutputWithContext(context.Context) GetRouteTableFilterArrayOutput
}

type GetRouteTableFilterArray []GetRouteTableFilterInput

func (GetRouteTableFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTableFilter)(nil)).Elem()
}

func (i GetRouteTableFilterArray) ToGetRouteTableFilterArrayOutput() GetRouteTableFilterArrayOutput {
	return i.ToGetRouteTableFilterArrayOutputWithContext(context.Background())
}

func (i GetRouteTableFilterArray) ToGetRouteTableFilterArrayOutputWithContext(ctx context.Context) GetRouteTableFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTableFilterArrayOutput)
}

type GetRouteTableFilterOutput struct{ *pulumi.OutputState }

func (GetRouteTableFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableFilter)(nil)).Elem()
}

func (o GetRouteTableFilterOutput) ToGetRouteTableFilterOutput() GetRouteTableFilterOutput {
	return o
}

func (o GetRouteTableFilterOutput) ToGetRouteTableFilterOutputWithContext(ctx context.Context) GetRouteTableFilterOutput {
	return o
}

// The name of the field to filter by, as defined by
// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRouteTables.html).
func (o GetRouteTableFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field.
// A Route Table will be selected if any one of the given values matches.
func (o GetRouteTableFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRouteTableFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetRouteTableFilterArrayOutput struct{ *pulumi.OutputState }

func (GetRouteTableFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTableFilter)(nil)).Elem()
}

func (o GetRouteTableFilterArrayOutput) ToGetRouteTableFilterArrayOutput() GetRouteTableFilterArrayOutput {
	return o
}

func (o GetRouteTableFilterArrayOutput) ToGetRouteTableFilterArrayOutputWithContext(ctx context.Context) GetRouteTableFilterArrayOutput {
	return o
}

func (o GetRouteTableFilterArrayOutput) Index(i pulumi.IntInput) GetRouteTableFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteTableFilter {
		return vs[0].([]GetRouteTableFilter)[vs[1].(int)]
	}).(GetRouteTableFilterOutput)
}

type GetRouteTableRoute struct {
	// The CIDR block of the route.
	CidrBlock string `pulumi:"cidrBlock"`
	// The ID of the Egress Only Internet Gateway.
	EgressOnlyGatewayId string `pulumi:"egressOnlyGatewayId"`
	// The id of an Internet Gateway or Virtual Private Gateway which is connected to the Route Table (not exported if not passed as a parameter).
	GatewayId string `pulumi:"gatewayId"`
	// The EC2 instance ID.
	InstanceId string `pulumi:"instanceId"`
	// The IPv6 CIDR block of the route.
	Ipv6CidrBlock string `pulumi:"ipv6CidrBlock"`
	// The NAT Gateway ID.
	NatGatewayId string `pulumi:"natGatewayId"`
	// The ID of the elastic network interface (eni) to use.
	NetworkInterfaceId string `pulumi:"networkInterfaceId"`
	// The EC2 Transit Gateway ID.
	TransitGatewayId string `pulumi:"transitGatewayId"`
	// The VPC Peering ID.
	VpcPeeringConnectionId string `pulumi:"vpcPeeringConnectionId"`
}

// GetRouteTableRouteInput is an input type that accepts GetRouteTableRouteArgs and GetRouteTableRouteOutput values.
// You can construct a concrete instance of `GetRouteTableRouteInput` via:
//
// 		 GetRouteTableRouteArgs{...}
//
type GetRouteTableRouteInput interface {
	pulumi.Input

	ToGetRouteTableRouteOutput() GetRouteTableRouteOutput
	ToGetRouteTableRouteOutputWithContext(context.Context) GetRouteTableRouteOutput
}

type GetRouteTableRouteArgs struct {
	// The CIDR block of the route.
	CidrBlock pulumi.StringInput `pulumi:"cidrBlock"`
	// The ID of the Egress Only Internet Gateway.
	EgressOnlyGatewayId pulumi.StringInput `pulumi:"egressOnlyGatewayId"`
	// The id of an Internet Gateway or Virtual Private Gateway which is connected to the Route Table (not exported if not passed as a parameter).
	GatewayId pulumi.StringInput `pulumi:"gatewayId"`
	// The EC2 instance ID.
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// The IPv6 CIDR block of the route.
	Ipv6CidrBlock pulumi.StringInput `pulumi:"ipv6CidrBlock"`
	// The NAT Gateway ID.
	NatGatewayId pulumi.StringInput `pulumi:"natGatewayId"`
	// The ID of the elastic network interface (eni) to use.
	NetworkInterfaceId pulumi.StringInput `pulumi:"networkInterfaceId"`
	// The EC2 Transit Gateway ID.
	TransitGatewayId pulumi.StringInput `pulumi:"transitGatewayId"`
	// The VPC Peering ID.
	VpcPeeringConnectionId pulumi.StringInput `pulumi:"vpcPeeringConnectionId"`
}

func (GetRouteTableRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableRoute)(nil)).Elem()
}

func (i GetRouteTableRouteArgs) ToGetRouteTableRouteOutput() GetRouteTableRouteOutput {
	return i.ToGetRouteTableRouteOutputWithContext(context.Background())
}

func (i GetRouteTableRouteArgs) ToGetRouteTableRouteOutputWithContext(ctx context.Context) GetRouteTableRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTableRouteOutput)
}

// GetRouteTableRouteArrayInput is an input type that accepts GetRouteTableRouteArray and GetRouteTableRouteArrayOutput values.
// You can construct a concrete instance of `GetRouteTableRouteArrayInput` via:
//
// 		 GetRouteTableRouteArray{ GetRouteTableRouteArgs{...} }
//
type GetRouteTableRouteArrayInput interface {
	pulumi.Input

	ToGetRouteTableRouteArrayOutput() GetRouteTableRouteArrayOutput
	ToGetRouteTableRouteArrayOutputWithContext(context.Context) GetRouteTableRouteArrayOutput
}

type GetRouteTableRouteArray []GetRouteTableRouteInput

func (GetRouteTableRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTableRoute)(nil)).Elem()
}

func (i GetRouteTableRouteArray) ToGetRouteTableRouteArrayOutput() GetRouteTableRouteArrayOutput {
	return i.ToGetRouteTableRouteArrayOutputWithContext(context.Background())
}

func (i GetRouteTableRouteArray) ToGetRouteTableRouteArrayOutputWithContext(ctx context.Context) GetRouteTableRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTableRouteArrayOutput)
}

type GetRouteTableRouteOutput struct{ *pulumi.OutputState }

func (GetRouteTableRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTableRoute)(nil)).Elem()
}

func (o GetRouteTableRouteOutput) ToGetRouteTableRouteOutput() GetRouteTableRouteOutput {
	return o
}

func (o GetRouteTableRouteOutput) ToGetRouteTableRouteOutputWithContext(ctx context.Context) GetRouteTableRouteOutput {
	return o
}

// The CIDR block of the route.
func (o GetRouteTableRouteOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableRoute) string { return v.CidrBlock }).(pulumi.StringOutput)
}

// The ID of the Egress Only Internet Gateway.
func (o GetRouteTableRouteOutput) EgressOnlyGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableRoute) string { return v.EgressOnlyGatewayId }).(pulumi.StringOutput)
}

// The id of an Internet Gateway or Virtual Private Gateway which is connected to the Route Table (not exported if not passed as a parameter).
func (o GetRouteTableRouteOutput) GatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableRoute) string { return v.GatewayId }).(pulumi.StringOutput)
}

// The EC2 instance ID.
func (o GetRouteTableRouteOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableRoute) string { return v.InstanceId }).(pulumi.StringOutput)
}

// The IPv6 CIDR block of the route.
func (o GetRouteTableRouteOutput) Ipv6CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableRoute) string { return v.Ipv6CidrBlock }).(pulumi.StringOutput)
}

// The NAT Gateway ID.
func (o GetRouteTableRouteOutput) NatGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableRoute) string { return v.NatGatewayId }).(pulumi.StringOutput)
}

// The ID of the elastic network interface (eni) to use.
func (o GetRouteTableRouteOutput) NetworkInterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableRoute) string { return v.NetworkInterfaceId }).(pulumi.StringOutput)
}

// The EC2 Transit Gateway ID.
func (o GetRouteTableRouteOutput) TransitGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableRoute) string { return v.TransitGatewayId }).(pulumi.StringOutput)
}

// The VPC Peering ID.
func (o GetRouteTableRouteOutput) VpcPeeringConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTableRoute) string { return v.VpcPeeringConnectionId }).(pulumi.StringOutput)
}

type GetRouteTableRouteArrayOutput struct{ *pulumi.OutputState }

func (GetRouteTableRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTableRoute)(nil)).Elem()
}

func (o GetRouteTableRouteArrayOutput) ToGetRouteTableRouteArrayOutput() GetRouteTableRouteArrayOutput {
	return o
}

func (o GetRouteTableRouteArrayOutput) ToGetRouteTableRouteArrayOutputWithContext(ctx context.Context) GetRouteTableRouteArrayOutput {
	return o
}

func (o GetRouteTableRouteArrayOutput) Index(i pulumi.IntInput) GetRouteTableRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteTableRoute {
		return vs[0].([]GetRouteTableRoute)[vs[1].(int)]
	}).(GetRouteTableRouteOutput)
}

type GetRouteTablesFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRouteTables.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A Route Table will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

// GetRouteTablesFilterInput is an input type that accepts GetRouteTablesFilterArgs and GetRouteTablesFilterOutput values.
// You can construct a concrete instance of `GetRouteTablesFilterInput` via:
//
// 		 GetRouteTablesFilterArgs{...}
//
type GetRouteTablesFilterInput interface {
	pulumi.Input

	ToGetRouteTablesFilterOutput() GetRouteTablesFilterOutput
	ToGetRouteTablesFilterOutputWithContext(context.Context) GetRouteTablesFilterOutput
}

type GetRouteTablesFilterArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRouteTables.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A Route Table will be selected if any one of the given values matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetRouteTablesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablesFilter)(nil)).Elem()
}

func (i GetRouteTablesFilterArgs) ToGetRouteTablesFilterOutput() GetRouteTablesFilterOutput {
	return i.ToGetRouteTablesFilterOutputWithContext(context.Background())
}

func (i GetRouteTablesFilterArgs) ToGetRouteTablesFilterOutputWithContext(ctx context.Context) GetRouteTablesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTablesFilterOutput)
}

// GetRouteTablesFilterArrayInput is an input type that accepts GetRouteTablesFilterArray and GetRouteTablesFilterArrayOutput values.
// You can construct a concrete instance of `GetRouteTablesFilterArrayInput` via:
//
// 		 GetRouteTablesFilterArray{ GetRouteTablesFilterArgs{...} }
//
type GetRouteTablesFilterArrayInput interface {
	pulumi.Input

	ToGetRouteTablesFilterArrayOutput() GetRouteTablesFilterArrayOutput
	ToGetRouteTablesFilterArrayOutputWithContext(context.Context) GetRouteTablesFilterArrayOutput
}

type GetRouteTablesFilterArray []GetRouteTablesFilterInput

func (GetRouteTablesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTablesFilter)(nil)).Elem()
}

func (i GetRouteTablesFilterArray) ToGetRouteTablesFilterArrayOutput() GetRouteTablesFilterArrayOutput {
	return i.ToGetRouteTablesFilterArrayOutputWithContext(context.Background())
}

func (i GetRouteTablesFilterArray) ToGetRouteTablesFilterArrayOutputWithContext(ctx context.Context) GetRouteTablesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRouteTablesFilterArrayOutput)
}

type GetRouteTablesFilterOutput struct{ *pulumi.OutputState }

func (GetRouteTablesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteTablesFilter)(nil)).Elem()
}

func (o GetRouteTablesFilterOutput) ToGetRouteTablesFilterOutput() GetRouteTablesFilterOutput {
	return o
}

func (o GetRouteTablesFilterOutput) ToGetRouteTablesFilterOutputWithContext(ctx context.Context) GetRouteTablesFilterOutput {
	return o
}

// The name of the field to filter by, as defined by
// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeRouteTables.html).
func (o GetRouteTablesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteTablesFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field.
// A Route Table will be selected if any one of the given values matches.
func (o GetRouteTablesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRouteTablesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetRouteTablesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetRouteTablesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRouteTablesFilter)(nil)).Elem()
}

func (o GetRouteTablesFilterArrayOutput) ToGetRouteTablesFilterArrayOutput() GetRouteTablesFilterArrayOutput {
	return o
}

func (o GetRouteTablesFilterArrayOutput) ToGetRouteTablesFilterArrayOutputWithContext(ctx context.Context) GetRouteTablesFilterArrayOutput {
	return o
}

func (o GetRouteTablesFilterArrayOutput) Index(i pulumi.IntInput) GetRouteTablesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRouteTablesFilter {
		return vs[0].([]GetRouteTablesFilter)[vs[1].(int)]
	}).(GetRouteTablesFilterOutput)
}

type GetSecurityGroupFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSecurityGroups.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A Security Group will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

// GetSecurityGroupFilterInput is an input type that accepts GetSecurityGroupFilterArgs and GetSecurityGroupFilterOutput values.
// You can construct a concrete instance of `GetSecurityGroupFilterInput` via:
//
// 		 GetSecurityGroupFilterArgs{...}
//
type GetSecurityGroupFilterInput interface {
	pulumi.Input

	ToGetSecurityGroupFilterOutput() GetSecurityGroupFilterOutput
	ToGetSecurityGroupFilterOutputWithContext(context.Context) GetSecurityGroupFilterOutput
}

type GetSecurityGroupFilterArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSecurityGroups.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A Security Group will be selected if any one of the given values matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSecurityGroupFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupFilter)(nil)).Elem()
}

func (i GetSecurityGroupFilterArgs) ToGetSecurityGroupFilterOutput() GetSecurityGroupFilterOutput {
	return i.ToGetSecurityGroupFilterOutputWithContext(context.Background())
}

func (i GetSecurityGroupFilterArgs) ToGetSecurityGroupFilterOutputWithContext(ctx context.Context) GetSecurityGroupFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupFilterOutput)
}

// GetSecurityGroupFilterArrayInput is an input type that accepts GetSecurityGroupFilterArray and GetSecurityGroupFilterArrayOutput values.
// You can construct a concrete instance of `GetSecurityGroupFilterArrayInput` via:
//
// 		 GetSecurityGroupFilterArray{ GetSecurityGroupFilterArgs{...} }
//
type GetSecurityGroupFilterArrayInput interface {
	pulumi.Input

	ToGetSecurityGroupFilterArrayOutput() GetSecurityGroupFilterArrayOutput
	ToGetSecurityGroupFilterArrayOutputWithContext(context.Context) GetSecurityGroupFilterArrayOutput
}

type GetSecurityGroupFilterArray []GetSecurityGroupFilterInput

func (GetSecurityGroupFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupFilter)(nil)).Elem()
}

func (i GetSecurityGroupFilterArray) ToGetSecurityGroupFilterArrayOutput() GetSecurityGroupFilterArrayOutput {
	return i.ToGetSecurityGroupFilterArrayOutputWithContext(context.Background())
}

func (i GetSecurityGroupFilterArray) ToGetSecurityGroupFilterArrayOutputWithContext(ctx context.Context) GetSecurityGroupFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupFilterArrayOutput)
}

type GetSecurityGroupFilterOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupFilter)(nil)).Elem()
}

func (o GetSecurityGroupFilterOutput) ToGetSecurityGroupFilterOutput() GetSecurityGroupFilterOutput {
	return o
}

func (o GetSecurityGroupFilterOutput) ToGetSecurityGroupFilterOutputWithContext(ctx context.Context) GetSecurityGroupFilterOutput {
	return o
}

// The name of the field to filter by, as defined by
// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSecurityGroups.html).
func (o GetSecurityGroupFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field.
// A Security Group will be selected if any one of the given values matches.
func (o GetSecurityGroupFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityGroupFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSecurityGroupFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupFilter)(nil)).Elem()
}

func (o GetSecurityGroupFilterArrayOutput) ToGetSecurityGroupFilterArrayOutput() GetSecurityGroupFilterArrayOutput {
	return o
}

func (o GetSecurityGroupFilterArrayOutput) ToGetSecurityGroupFilterArrayOutputWithContext(ctx context.Context) GetSecurityGroupFilterArrayOutput {
	return o
}

func (o GetSecurityGroupFilterArrayOutput) Index(i pulumi.IntInput) GetSecurityGroupFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityGroupFilter {
		return vs[0].([]GetSecurityGroupFilter)[vs[1].(int)]
	}).(GetSecurityGroupFilterOutput)
}

type GetSecurityGroupsFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetSecurityGroupsFilterInput is an input type that accepts GetSecurityGroupsFilterArgs and GetSecurityGroupsFilterOutput values.
// You can construct a concrete instance of `GetSecurityGroupsFilterInput` via:
//
// 		 GetSecurityGroupsFilterArgs{...}
//
type GetSecurityGroupsFilterInput interface {
	pulumi.Input

	ToGetSecurityGroupsFilterOutput() GetSecurityGroupsFilterOutput
	ToGetSecurityGroupsFilterOutputWithContext(context.Context) GetSecurityGroupsFilterOutput
}

type GetSecurityGroupsFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSecurityGroupsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupsFilter)(nil)).Elem()
}

func (i GetSecurityGroupsFilterArgs) ToGetSecurityGroupsFilterOutput() GetSecurityGroupsFilterOutput {
	return i.ToGetSecurityGroupsFilterOutputWithContext(context.Background())
}

func (i GetSecurityGroupsFilterArgs) ToGetSecurityGroupsFilterOutputWithContext(ctx context.Context) GetSecurityGroupsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupsFilterOutput)
}

// GetSecurityGroupsFilterArrayInput is an input type that accepts GetSecurityGroupsFilterArray and GetSecurityGroupsFilterArrayOutput values.
// You can construct a concrete instance of `GetSecurityGroupsFilterArrayInput` via:
//
// 		 GetSecurityGroupsFilterArray{ GetSecurityGroupsFilterArgs{...} }
//
type GetSecurityGroupsFilterArrayInput interface {
	pulumi.Input

	ToGetSecurityGroupsFilterArrayOutput() GetSecurityGroupsFilterArrayOutput
	ToGetSecurityGroupsFilterArrayOutputWithContext(context.Context) GetSecurityGroupsFilterArrayOutput
}

type GetSecurityGroupsFilterArray []GetSecurityGroupsFilterInput

func (GetSecurityGroupsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupsFilter)(nil)).Elem()
}

func (i GetSecurityGroupsFilterArray) ToGetSecurityGroupsFilterArrayOutput() GetSecurityGroupsFilterArrayOutput {
	return i.ToGetSecurityGroupsFilterArrayOutputWithContext(context.Background())
}

func (i GetSecurityGroupsFilterArray) ToGetSecurityGroupsFilterArrayOutputWithContext(ctx context.Context) GetSecurityGroupsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecurityGroupsFilterArrayOutput)
}

type GetSecurityGroupsFilterOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityGroupsFilter)(nil)).Elem()
}

func (o GetSecurityGroupsFilterOutput) ToGetSecurityGroupsFilterOutput() GetSecurityGroupsFilterOutput {
	return o
}

func (o GetSecurityGroupsFilterOutput) ToGetSecurityGroupsFilterOutputWithContext(ctx context.Context) GetSecurityGroupsFilterOutput {
	return o
}

func (o GetSecurityGroupsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityGroupsFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSecurityGroupsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSecurityGroupsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSecurityGroupsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSecurityGroupsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSecurityGroupsFilter)(nil)).Elem()
}

func (o GetSecurityGroupsFilterArrayOutput) ToGetSecurityGroupsFilterArrayOutput() GetSecurityGroupsFilterArrayOutput {
	return o
}

func (o GetSecurityGroupsFilterArrayOutput) ToGetSecurityGroupsFilterArrayOutputWithContext(ctx context.Context) GetSecurityGroupsFilterArrayOutput {
	return o
}

func (o GetSecurityGroupsFilterArrayOutput) Index(i pulumi.IntInput) GetSecurityGroupsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSecurityGroupsFilter {
		return vs[0].([]GetSecurityGroupsFilter)[vs[1].(int)]
	}).(GetSecurityGroupsFilterOutput)
}

type GetSubnetFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSubnets.html).
	// For example, if matching against tag `Name`, use:
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A subnet will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

// GetSubnetFilterInput is an input type that accepts GetSubnetFilterArgs and GetSubnetFilterOutput values.
// You can construct a concrete instance of `GetSubnetFilterInput` via:
//
// 		 GetSubnetFilterArgs{...}
//
type GetSubnetFilterInput interface {
	pulumi.Input

	ToGetSubnetFilterOutput() GetSubnetFilterOutput
	ToGetSubnetFilterOutputWithContext(context.Context) GetSubnetFilterOutput
}

type GetSubnetFilterArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSubnets.html).
	// For example, if matching against tag `Name`, use:
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A subnet will be selected if any one of the given values matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSubnetFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetFilter)(nil)).Elem()
}

func (i GetSubnetFilterArgs) ToGetSubnetFilterOutput() GetSubnetFilterOutput {
	return i.ToGetSubnetFilterOutputWithContext(context.Background())
}

func (i GetSubnetFilterArgs) ToGetSubnetFilterOutputWithContext(ctx context.Context) GetSubnetFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubnetFilterOutput)
}

// GetSubnetFilterArrayInput is an input type that accepts GetSubnetFilterArray and GetSubnetFilterArrayOutput values.
// You can construct a concrete instance of `GetSubnetFilterArrayInput` via:
//
// 		 GetSubnetFilterArray{ GetSubnetFilterArgs{...} }
//
type GetSubnetFilterArrayInput interface {
	pulumi.Input

	ToGetSubnetFilterArrayOutput() GetSubnetFilterArrayOutput
	ToGetSubnetFilterArrayOutputWithContext(context.Context) GetSubnetFilterArrayOutput
}

type GetSubnetFilterArray []GetSubnetFilterInput

func (GetSubnetFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubnetFilter)(nil)).Elem()
}

func (i GetSubnetFilterArray) ToGetSubnetFilterArrayOutput() GetSubnetFilterArrayOutput {
	return i.ToGetSubnetFilterArrayOutputWithContext(context.Background())
}

func (i GetSubnetFilterArray) ToGetSubnetFilterArrayOutputWithContext(ctx context.Context) GetSubnetFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubnetFilterArrayOutput)
}

type GetSubnetFilterOutput struct{ *pulumi.OutputState }

func (GetSubnetFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetFilter)(nil)).Elem()
}

func (o GetSubnetFilterOutput) ToGetSubnetFilterOutput() GetSubnetFilterOutput {
	return o
}

func (o GetSubnetFilterOutput) ToGetSubnetFilterOutputWithContext(ctx context.Context) GetSubnetFilterOutput {
	return o
}

// The name of the field to filter by, as defined by
// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSubnets.html).
// For example, if matching against tag `Name`, use:
func (o GetSubnetFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field.
// A subnet will be selected if any one of the given values matches.
func (o GetSubnetFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSubnetFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSubnetFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSubnetFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubnetFilter)(nil)).Elem()
}

func (o GetSubnetFilterArrayOutput) ToGetSubnetFilterArrayOutput() GetSubnetFilterArrayOutput {
	return o
}

func (o GetSubnetFilterArrayOutput) ToGetSubnetFilterArrayOutputWithContext(ctx context.Context) GetSubnetFilterArrayOutput {
	return o
}

func (o GetSubnetFilterArrayOutput) Index(i pulumi.IntInput) GetSubnetFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubnetFilter {
		return vs[0].([]GetSubnetFilter)[vs[1].(int)]
	}).(GetSubnetFilterOutput)
}

type GetSubnetIdsFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSubnets.html).
	// For example, if matching against tag `Name`, use:
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// Subnet IDs will be selected if any one of the given values match.
	Values []string `pulumi:"values"`
}

// GetSubnetIdsFilterInput is an input type that accepts GetSubnetIdsFilterArgs and GetSubnetIdsFilterOutput values.
// You can construct a concrete instance of `GetSubnetIdsFilterInput` via:
//
// 		 GetSubnetIdsFilterArgs{...}
//
type GetSubnetIdsFilterInput interface {
	pulumi.Input

	ToGetSubnetIdsFilterOutput() GetSubnetIdsFilterOutput
	ToGetSubnetIdsFilterOutputWithContext(context.Context) GetSubnetIdsFilterOutput
}

type GetSubnetIdsFilterArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSubnets.html).
	// For example, if matching against tag `Name`, use:
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// Subnet IDs will be selected if any one of the given values match.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSubnetIdsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetIdsFilter)(nil)).Elem()
}

func (i GetSubnetIdsFilterArgs) ToGetSubnetIdsFilterOutput() GetSubnetIdsFilterOutput {
	return i.ToGetSubnetIdsFilterOutputWithContext(context.Background())
}

func (i GetSubnetIdsFilterArgs) ToGetSubnetIdsFilterOutputWithContext(ctx context.Context) GetSubnetIdsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubnetIdsFilterOutput)
}

// GetSubnetIdsFilterArrayInput is an input type that accepts GetSubnetIdsFilterArray and GetSubnetIdsFilterArrayOutput values.
// You can construct a concrete instance of `GetSubnetIdsFilterArrayInput` via:
//
// 		 GetSubnetIdsFilterArray{ GetSubnetIdsFilterArgs{...} }
//
type GetSubnetIdsFilterArrayInput interface {
	pulumi.Input

	ToGetSubnetIdsFilterArrayOutput() GetSubnetIdsFilterArrayOutput
	ToGetSubnetIdsFilterArrayOutputWithContext(context.Context) GetSubnetIdsFilterArrayOutput
}

type GetSubnetIdsFilterArray []GetSubnetIdsFilterInput

func (GetSubnetIdsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubnetIdsFilter)(nil)).Elem()
}

func (i GetSubnetIdsFilterArray) ToGetSubnetIdsFilterArrayOutput() GetSubnetIdsFilterArrayOutput {
	return i.ToGetSubnetIdsFilterArrayOutputWithContext(context.Background())
}

func (i GetSubnetIdsFilterArray) ToGetSubnetIdsFilterArrayOutputWithContext(ctx context.Context) GetSubnetIdsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubnetIdsFilterArrayOutput)
}

type GetSubnetIdsFilterOutput struct{ *pulumi.OutputState }

func (GetSubnetIdsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubnetIdsFilter)(nil)).Elem()
}

func (o GetSubnetIdsFilterOutput) ToGetSubnetIdsFilterOutput() GetSubnetIdsFilterOutput {
	return o
}

func (o GetSubnetIdsFilterOutput) ToGetSubnetIdsFilterOutputWithContext(ctx context.Context) GetSubnetIdsFilterOutput {
	return o
}

// The name of the field to filter by, as defined by
// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSubnets.html).
// For example, if matching against tag `Name`, use:
func (o GetSubnetIdsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubnetIdsFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field.
// Subnet IDs will be selected if any one of the given values match.
func (o GetSubnetIdsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSubnetIdsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSubnetIdsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSubnetIdsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubnetIdsFilter)(nil)).Elem()
}

func (o GetSubnetIdsFilterArrayOutput) ToGetSubnetIdsFilterArrayOutput() GetSubnetIdsFilterArrayOutput {
	return o
}

func (o GetSubnetIdsFilterArrayOutput) ToGetSubnetIdsFilterArrayOutputWithContext(ctx context.Context) GetSubnetIdsFilterArrayOutput {
	return o
}

func (o GetSubnetIdsFilterArrayOutput) Index(i pulumi.IntInput) GetSubnetIdsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubnetIdsFilter {
		return vs[0].([]GetSubnetIdsFilter)[vs[1].(int)]
	}).(GetSubnetIdsFilterOutput)
}

type GetVpcCidrBlockAssociation struct {
	// The association ID for the the IPv4 CIDR block.
	AssociationId string `pulumi:"associationId"`
	// The cidr block of the desired VPC.
	CidrBlock string `pulumi:"cidrBlock"`
	// The current state of the desired VPC.
	// Can be either `"pending"` or `"available"`.
	State string `pulumi:"state"`
}

// GetVpcCidrBlockAssociationInput is an input type that accepts GetVpcCidrBlockAssociationArgs and GetVpcCidrBlockAssociationOutput values.
// You can construct a concrete instance of `GetVpcCidrBlockAssociationInput` via:
//
// 		 GetVpcCidrBlockAssociationArgs{...}
//
type GetVpcCidrBlockAssociationInput interface {
	pulumi.Input

	ToGetVpcCidrBlockAssociationOutput() GetVpcCidrBlockAssociationOutput
	ToGetVpcCidrBlockAssociationOutputWithContext(context.Context) GetVpcCidrBlockAssociationOutput
}

type GetVpcCidrBlockAssociationArgs struct {
	// The association ID for the the IPv4 CIDR block.
	AssociationId pulumi.StringInput `pulumi:"associationId"`
	// The cidr block of the desired VPC.
	CidrBlock pulumi.StringInput `pulumi:"cidrBlock"`
	// The current state of the desired VPC.
	// Can be either `"pending"` or `"available"`.
	State pulumi.StringInput `pulumi:"state"`
}

func (GetVpcCidrBlockAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcCidrBlockAssociation)(nil)).Elem()
}

func (i GetVpcCidrBlockAssociationArgs) ToGetVpcCidrBlockAssociationOutput() GetVpcCidrBlockAssociationOutput {
	return i.ToGetVpcCidrBlockAssociationOutputWithContext(context.Background())
}

func (i GetVpcCidrBlockAssociationArgs) ToGetVpcCidrBlockAssociationOutputWithContext(ctx context.Context) GetVpcCidrBlockAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcCidrBlockAssociationOutput)
}

// GetVpcCidrBlockAssociationArrayInput is an input type that accepts GetVpcCidrBlockAssociationArray and GetVpcCidrBlockAssociationArrayOutput values.
// You can construct a concrete instance of `GetVpcCidrBlockAssociationArrayInput` via:
//
// 		 GetVpcCidrBlockAssociationArray{ GetVpcCidrBlockAssociationArgs{...} }
//
type GetVpcCidrBlockAssociationArrayInput interface {
	pulumi.Input

	ToGetVpcCidrBlockAssociationArrayOutput() GetVpcCidrBlockAssociationArrayOutput
	ToGetVpcCidrBlockAssociationArrayOutputWithContext(context.Context) GetVpcCidrBlockAssociationArrayOutput
}

type GetVpcCidrBlockAssociationArray []GetVpcCidrBlockAssociationInput

func (GetVpcCidrBlockAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcCidrBlockAssociation)(nil)).Elem()
}

func (i GetVpcCidrBlockAssociationArray) ToGetVpcCidrBlockAssociationArrayOutput() GetVpcCidrBlockAssociationArrayOutput {
	return i.ToGetVpcCidrBlockAssociationArrayOutputWithContext(context.Background())
}

func (i GetVpcCidrBlockAssociationArray) ToGetVpcCidrBlockAssociationArrayOutputWithContext(ctx context.Context) GetVpcCidrBlockAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcCidrBlockAssociationArrayOutput)
}

type GetVpcCidrBlockAssociationOutput struct{ *pulumi.OutputState }

func (GetVpcCidrBlockAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcCidrBlockAssociation)(nil)).Elem()
}

func (o GetVpcCidrBlockAssociationOutput) ToGetVpcCidrBlockAssociationOutput() GetVpcCidrBlockAssociationOutput {
	return o
}

func (o GetVpcCidrBlockAssociationOutput) ToGetVpcCidrBlockAssociationOutputWithContext(ctx context.Context) GetVpcCidrBlockAssociationOutput {
	return o
}

// The association ID for the the IPv4 CIDR block.
func (o GetVpcCidrBlockAssociationOutput) AssociationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcCidrBlockAssociation) string { return v.AssociationId }).(pulumi.StringOutput)
}

// The cidr block of the desired VPC.
func (o GetVpcCidrBlockAssociationOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcCidrBlockAssociation) string { return v.CidrBlock }).(pulumi.StringOutput)
}

// The current state of the desired VPC.
// Can be either `"pending"` or `"available"`.
func (o GetVpcCidrBlockAssociationOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcCidrBlockAssociation) string { return v.State }).(pulumi.StringOutput)
}

type GetVpcCidrBlockAssociationArrayOutput struct{ *pulumi.OutputState }

func (GetVpcCidrBlockAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcCidrBlockAssociation)(nil)).Elem()
}

func (o GetVpcCidrBlockAssociationArrayOutput) ToGetVpcCidrBlockAssociationArrayOutput() GetVpcCidrBlockAssociationArrayOutput {
	return o
}

func (o GetVpcCidrBlockAssociationArrayOutput) ToGetVpcCidrBlockAssociationArrayOutputWithContext(ctx context.Context) GetVpcCidrBlockAssociationArrayOutput {
	return o
}

func (o GetVpcCidrBlockAssociationArrayOutput) Index(i pulumi.IntInput) GetVpcCidrBlockAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcCidrBlockAssociation {
		return vs[0].([]GetVpcCidrBlockAssociation)[vs[1].(int)]
	}).(GetVpcCidrBlockAssociationOutput)
}

type GetVpcDhcpOptionsFilter struct {
	// The name of the field to filter.
	Name string `pulumi:"name"`
	// Set of values for filtering.
	Values []string `pulumi:"values"`
}

// GetVpcDhcpOptionsFilterInput is an input type that accepts GetVpcDhcpOptionsFilterArgs and GetVpcDhcpOptionsFilterOutput values.
// You can construct a concrete instance of `GetVpcDhcpOptionsFilterInput` via:
//
// 		 GetVpcDhcpOptionsFilterArgs{...}
//
type GetVpcDhcpOptionsFilterInput interface {
	pulumi.Input

	ToGetVpcDhcpOptionsFilterOutput() GetVpcDhcpOptionsFilterOutput
	ToGetVpcDhcpOptionsFilterOutputWithContext(context.Context) GetVpcDhcpOptionsFilterOutput
}

type GetVpcDhcpOptionsFilterArgs struct {
	// The name of the field to filter.
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values for filtering.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetVpcDhcpOptionsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcDhcpOptionsFilter)(nil)).Elem()
}

func (i GetVpcDhcpOptionsFilterArgs) ToGetVpcDhcpOptionsFilterOutput() GetVpcDhcpOptionsFilterOutput {
	return i.ToGetVpcDhcpOptionsFilterOutputWithContext(context.Background())
}

func (i GetVpcDhcpOptionsFilterArgs) ToGetVpcDhcpOptionsFilterOutputWithContext(ctx context.Context) GetVpcDhcpOptionsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcDhcpOptionsFilterOutput)
}

// GetVpcDhcpOptionsFilterArrayInput is an input type that accepts GetVpcDhcpOptionsFilterArray and GetVpcDhcpOptionsFilterArrayOutput values.
// You can construct a concrete instance of `GetVpcDhcpOptionsFilterArrayInput` via:
//
// 		 GetVpcDhcpOptionsFilterArray{ GetVpcDhcpOptionsFilterArgs{...} }
//
type GetVpcDhcpOptionsFilterArrayInput interface {
	pulumi.Input

	ToGetVpcDhcpOptionsFilterArrayOutput() GetVpcDhcpOptionsFilterArrayOutput
	ToGetVpcDhcpOptionsFilterArrayOutputWithContext(context.Context) GetVpcDhcpOptionsFilterArrayOutput
}

type GetVpcDhcpOptionsFilterArray []GetVpcDhcpOptionsFilterInput

func (GetVpcDhcpOptionsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcDhcpOptionsFilter)(nil)).Elem()
}

func (i GetVpcDhcpOptionsFilterArray) ToGetVpcDhcpOptionsFilterArrayOutput() GetVpcDhcpOptionsFilterArrayOutput {
	return i.ToGetVpcDhcpOptionsFilterArrayOutputWithContext(context.Background())
}

func (i GetVpcDhcpOptionsFilterArray) ToGetVpcDhcpOptionsFilterArrayOutputWithContext(ctx context.Context) GetVpcDhcpOptionsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcDhcpOptionsFilterArrayOutput)
}

type GetVpcDhcpOptionsFilterOutput struct{ *pulumi.OutputState }

func (GetVpcDhcpOptionsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcDhcpOptionsFilter)(nil)).Elem()
}

func (o GetVpcDhcpOptionsFilterOutput) ToGetVpcDhcpOptionsFilterOutput() GetVpcDhcpOptionsFilterOutput {
	return o
}

func (o GetVpcDhcpOptionsFilterOutput) ToGetVpcDhcpOptionsFilterOutputWithContext(ctx context.Context) GetVpcDhcpOptionsFilterOutput {
	return o
}

// The name of the field to filter.
func (o GetVpcDhcpOptionsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcDhcpOptionsFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values for filtering.
func (o GetVpcDhcpOptionsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpcDhcpOptionsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetVpcDhcpOptionsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetVpcDhcpOptionsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcDhcpOptionsFilter)(nil)).Elem()
}

func (o GetVpcDhcpOptionsFilterArrayOutput) ToGetVpcDhcpOptionsFilterArrayOutput() GetVpcDhcpOptionsFilterArrayOutput {
	return o
}

func (o GetVpcDhcpOptionsFilterArrayOutput) ToGetVpcDhcpOptionsFilterArrayOutputWithContext(ctx context.Context) GetVpcDhcpOptionsFilterArrayOutput {
	return o
}

func (o GetVpcDhcpOptionsFilterArrayOutput) Index(i pulumi.IntInput) GetVpcDhcpOptionsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcDhcpOptionsFilter {
		return vs[0].([]GetVpcDhcpOptionsFilter)[vs[1].(int)]
	}).(GetVpcDhcpOptionsFilterOutput)
}

type GetVpcEndpointDnsEntry struct {
	// The DNS name.
	DnsName string `pulumi:"dnsName"`
	// The ID of the private hosted zone.
	HostedZoneId string `pulumi:"hostedZoneId"`
}

// GetVpcEndpointDnsEntryInput is an input type that accepts GetVpcEndpointDnsEntryArgs and GetVpcEndpointDnsEntryOutput values.
// You can construct a concrete instance of `GetVpcEndpointDnsEntryInput` via:
//
// 		 GetVpcEndpointDnsEntryArgs{...}
//
type GetVpcEndpointDnsEntryInput interface {
	pulumi.Input

	ToGetVpcEndpointDnsEntryOutput() GetVpcEndpointDnsEntryOutput
	ToGetVpcEndpointDnsEntryOutputWithContext(context.Context) GetVpcEndpointDnsEntryOutput
}

type GetVpcEndpointDnsEntryArgs struct {
	// The DNS name.
	DnsName pulumi.StringInput `pulumi:"dnsName"`
	// The ID of the private hosted zone.
	HostedZoneId pulumi.StringInput `pulumi:"hostedZoneId"`
}

func (GetVpcEndpointDnsEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcEndpointDnsEntry)(nil)).Elem()
}

func (i GetVpcEndpointDnsEntryArgs) ToGetVpcEndpointDnsEntryOutput() GetVpcEndpointDnsEntryOutput {
	return i.ToGetVpcEndpointDnsEntryOutputWithContext(context.Background())
}

func (i GetVpcEndpointDnsEntryArgs) ToGetVpcEndpointDnsEntryOutputWithContext(ctx context.Context) GetVpcEndpointDnsEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcEndpointDnsEntryOutput)
}

// GetVpcEndpointDnsEntryArrayInput is an input type that accepts GetVpcEndpointDnsEntryArray and GetVpcEndpointDnsEntryArrayOutput values.
// You can construct a concrete instance of `GetVpcEndpointDnsEntryArrayInput` via:
//
// 		 GetVpcEndpointDnsEntryArray{ GetVpcEndpointDnsEntryArgs{...} }
//
type GetVpcEndpointDnsEntryArrayInput interface {
	pulumi.Input

	ToGetVpcEndpointDnsEntryArrayOutput() GetVpcEndpointDnsEntryArrayOutput
	ToGetVpcEndpointDnsEntryArrayOutputWithContext(context.Context) GetVpcEndpointDnsEntryArrayOutput
}

type GetVpcEndpointDnsEntryArray []GetVpcEndpointDnsEntryInput

func (GetVpcEndpointDnsEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcEndpointDnsEntry)(nil)).Elem()
}

func (i GetVpcEndpointDnsEntryArray) ToGetVpcEndpointDnsEntryArrayOutput() GetVpcEndpointDnsEntryArrayOutput {
	return i.ToGetVpcEndpointDnsEntryArrayOutputWithContext(context.Background())
}

func (i GetVpcEndpointDnsEntryArray) ToGetVpcEndpointDnsEntryArrayOutputWithContext(ctx context.Context) GetVpcEndpointDnsEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcEndpointDnsEntryArrayOutput)
}

type GetVpcEndpointDnsEntryOutput struct{ *pulumi.OutputState }

func (GetVpcEndpointDnsEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcEndpointDnsEntry)(nil)).Elem()
}

func (o GetVpcEndpointDnsEntryOutput) ToGetVpcEndpointDnsEntryOutput() GetVpcEndpointDnsEntryOutput {
	return o
}

func (o GetVpcEndpointDnsEntryOutput) ToGetVpcEndpointDnsEntryOutputWithContext(ctx context.Context) GetVpcEndpointDnsEntryOutput {
	return o
}

// The DNS name.
func (o GetVpcEndpointDnsEntryOutput) DnsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcEndpointDnsEntry) string { return v.DnsName }).(pulumi.StringOutput)
}

// The ID of the private hosted zone.
func (o GetVpcEndpointDnsEntryOutput) HostedZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcEndpointDnsEntry) string { return v.HostedZoneId }).(pulumi.StringOutput)
}

type GetVpcEndpointDnsEntryArrayOutput struct{ *pulumi.OutputState }

func (GetVpcEndpointDnsEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcEndpointDnsEntry)(nil)).Elem()
}

func (o GetVpcEndpointDnsEntryArrayOutput) ToGetVpcEndpointDnsEntryArrayOutput() GetVpcEndpointDnsEntryArrayOutput {
	return o
}

func (o GetVpcEndpointDnsEntryArrayOutput) ToGetVpcEndpointDnsEntryArrayOutputWithContext(ctx context.Context) GetVpcEndpointDnsEntryArrayOutput {
	return o
}

func (o GetVpcEndpointDnsEntryArrayOutput) Index(i pulumi.IntInput) GetVpcEndpointDnsEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcEndpointDnsEntry {
		return vs[0].([]GetVpcEndpointDnsEntry)[vs[1].(int)]
	}).(GetVpcEndpointDnsEntryOutput)
}

type GetVpcEndpointFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpoints.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC Endpoint will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

// GetVpcEndpointFilterInput is an input type that accepts GetVpcEndpointFilterArgs and GetVpcEndpointFilterOutput values.
// You can construct a concrete instance of `GetVpcEndpointFilterInput` via:
//
// 		 GetVpcEndpointFilterArgs{...}
//
type GetVpcEndpointFilterInput interface {
	pulumi.Input

	ToGetVpcEndpointFilterOutput() GetVpcEndpointFilterOutput
	ToGetVpcEndpointFilterOutputWithContext(context.Context) GetVpcEndpointFilterOutput
}

type GetVpcEndpointFilterArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpoints.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC Endpoint will be selected if any one of the given values matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetVpcEndpointFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcEndpointFilter)(nil)).Elem()
}

func (i GetVpcEndpointFilterArgs) ToGetVpcEndpointFilterOutput() GetVpcEndpointFilterOutput {
	return i.ToGetVpcEndpointFilterOutputWithContext(context.Background())
}

func (i GetVpcEndpointFilterArgs) ToGetVpcEndpointFilterOutputWithContext(ctx context.Context) GetVpcEndpointFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcEndpointFilterOutput)
}

// GetVpcEndpointFilterArrayInput is an input type that accepts GetVpcEndpointFilterArray and GetVpcEndpointFilterArrayOutput values.
// You can construct a concrete instance of `GetVpcEndpointFilterArrayInput` via:
//
// 		 GetVpcEndpointFilterArray{ GetVpcEndpointFilterArgs{...} }
//
type GetVpcEndpointFilterArrayInput interface {
	pulumi.Input

	ToGetVpcEndpointFilterArrayOutput() GetVpcEndpointFilterArrayOutput
	ToGetVpcEndpointFilterArrayOutputWithContext(context.Context) GetVpcEndpointFilterArrayOutput
}

type GetVpcEndpointFilterArray []GetVpcEndpointFilterInput

func (GetVpcEndpointFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcEndpointFilter)(nil)).Elem()
}

func (i GetVpcEndpointFilterArray) ToGetVpcEndpointFilterArrayOutput() GetVpcEndpointFilterArrayOutput {
	return i.ToGetVpcEndpointFilterArrayOutputWithContext(context.Background())
}

func (i GetVpcEndpointFilterArray) ToGetVpcEndpointFilterArrayOutputWithContext(ctx context.Context) GetVpcEndpointFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcEndpointFilterArrayOutput)
}

type GetVpcEndpointFilterOutput struct{ *pulumi.OutputState }

func (GetVpcEndpointFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcEndpointFilter)(nil)).Elem()
}

func (o GetVpcEndpointFilterOutput) ToGetVpcEndpointFilterOutput() GetVpcEndpointFilterOutput {
	return o
}

func (o GetVpcEndpointFilterOutput) ToGetVpcEndpointFilterOutputWithContext(ctx context.Context) GetVpcEndpointFilterOutput {
	return o
}

// The name of the field to filter by, as defined by
// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpoints.html).
func (o GetVpcEndpointFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcEndpointFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field.
// A VPC Endpoint will be selected if any one of the given values matches.
func (o GetVpcEndpointFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpcEndpointFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetVpcEndpointFilterArrayOutput struct{ *pulumi.OutputState }

func (GetVpcEndpointFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcEndpointFilter)(nil)).Elem()
}

func (o GetVpcEndpointFilterArrayOutput) ToGetVpcEndpointFilterArrayOutput() GetVpcEndpointFilterArrayOutput {
	return o
}

func (o GetVpcEndpointFilterArrayOutput) ToGetVpcEndpointFilterArrayOutputWithContext(ctx context.Context) GetVpcEndpointFilterArrayOutput {
	return o
}

func (o GetVpcEndpointFilterArrayOutput) Index(i pulumi.IntInput) GetVpcEndpointFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcEndpointFilter {
		return vs[0].([]GetVpcEndpointFilter)[vs[1].(int)]
	}).(GetVpcEndpointFilterOutput)
}

type GetVpcEndpointServiceFilter struct {
	// The name of the filter field. Valid values can be found in the [EC2 DescribeVpcEndpointServices API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpointServices.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values []string `pulumi:"values"`
}

// GetVpcEndpointServiceFilterInput is an input type that accepts GetVpcEndpointServiceFilterArgs and GetVpcEndpointServiceFilterOutput values.
// You can construct a concrete instance of `GetVpcEndpointServiceFilterInput` via:
//
// 		 GetVpcEndpointServiceFilterArgs{...}
//
type GetVpcEndpointServiceFilterInput interface {
	pulumi.Input

	ToGetVpcEndpointServiceFilterOutput() GetVpcEndpointServiceFilterOutput
	ToGetVpcEndpointServiceFilterOutputWithContext(context.Context) GetVpcEndpointServiceFilterOutput
}

type GetVpcEndpointServiceFilterArgs struct {
	// The name of the filter field. Valid values can be found in the [EC2 DescribeVpcEndpointServices API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpointServices.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetVpcEndpointServiceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcEndpointServiceFilter)(nil)).Elem()
}

func (i GetVpcEndpointServiceFilterArgs) ToGetVpcEndpointServiceFilterOutput() GetVpcEndpointServiceFilterOutput {
	return i.ToGetVpcEndpointServiceFilterOutputWithContext(context.Background())
}

func (i GetVpcEndpointServiceFilterArgs) ToGetVpcEndpointServiceFilterOutputWithContext(ctx context.Context) GetVpcEndpointServiceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcEndpointServiceFilterOutput)
}

// GetVpcEndpointServiceFilterArrayInput is an input type that accepts GetVpcEndpointServiceFilterArray and GetVpcEndpointServiceFilterArrayOutput values.
// You can construct a concrete instance of `GetVpcEndpointServiceFilterArrayInput` via:
//
// 		 GetVpcEndpointServiceFilterArray{ GetVpcEndpointServiceFilterArgs{...} }
//
type GetVpcEndpointServiceFilterArrayInput interface {
	pulumi.Input

	ToGetVpcEndpointServiceFilterArrayOutput() GetVpcEndpointServiceFilterArrayOutput
	ToGetVpcEndpointServiceFilterArrayOutputWithContext(context.Context) GetVpcEndpointServiceFilterArrayOutput
}

type GetVpcEndpointServiceFilterArray []GetVpcEndpointServiceFilterInput

func (GetVpcEndpointServiceFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcEndpointServiceFilter)(nil)).Elem()
}

func (i GetVpcEndpointServiceFilterArray) ToGetVpcEndpointServiceFilterArrayOutput() GetVpcEndpointServiceFilterArrayOutput {
	return i.ToGetVpcEndpointServiceFilterArrayOutputWithContext(context.Background())
}

func (i GetVpcEndpointServiceFilterArray) ToGetVpcEndpointServiceFilterArrayOutputWithContext(ctx context.Context) GetVpcEndpointServiceFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcEndpointServiceFilterArrayOutput)
}

type GetVpcEndpointServiceFilterOutput struct{ *pulumi.OutputState }

func (GetVpcEndpointServiceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcEndpointServiceFilter)(nil)).Elem()
}

func (o GetVpcEndpointServiceFilterOutput) ToGetVpcEndpointServiceFilterOutput() GetVpcEndpointServiceFilterOutput {
	return o
}

func (o GetVpcEndpointServiceFilterOutput) ToGetVpcEndpointServiceFilterOutputWithContext(ctx context.Context) GetVpcEndpointServiceFilterOutput {
	return o
}

// The name of the filter field. Valid values can be found in the [EC2 DescribeVpcEndpointServices API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcEndpointServices.html).
func (o GetVpcEndpointServiceFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcEndpointServiceFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
func (o GetVpcEndpointServiceFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpcEndpointServiceFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetVpcEndpointServiceFilterArrayOutput struct{ *pulumi.OutputState }

func (GetVpcEndpointServiceFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcEndpointServiceFilter)(nil)).Elem()
}

func (o GetVpcEndpointServiceFilterArrayOutput) ToGetVpcEndpointServiceFilterArrayOutput() GetVpcEndpointServiceFilterArrayOutput {
	return o
}

func (o GetVpcEndpointServiceFilterArrayOutput) ToGetVpcEndpointServiceFilterArrayOutputWithContext(ctx context.Context) GetVpcEndpointServiceFilterArrayOutput {
	return o
}

func (o GetVpcEndpointServiceFilterArrayOutput) Index(i pulumi.IntInput) GetVpcEndpointServiceFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcEndpointServiceFilter {
		return vs[0].([]GetVpcEndpointServiceFilter)[vs[1].(int)]
	}).(GetVpcEndpointServiceFilterOutput)
}

type GetVpcFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcs.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

// GetVpcFilterInput is an input type that accepts GetVpcFilterArgs and GetVpcFilterOutput values.
// You can construct a concrete instance of `GetVpcFilterInput` via:
//
// 		 GetVpcFilterArgs{...}
//
type GetVpcFilterInput interface {
	pulumi.Input

	ToGetVpcFilterOutput() GetVpcFilterOutput
	ToGetVpcFilterOutputWithContext(context.Context) GetVpcFilterOutput
}

type GetVpcFilterArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcs.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC will be selected if any one of the given values matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetVpcFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcFilter)(nil)).Elem()
}

func (i GetVpcFilterArgs) ToGetVpcFilterOutput() GetVpcFilterOutput {
	return i.ToGetVpcFilterOutputWithContext(context.Background())
}

func (i GetVpcFilterArgs) ToGetVpcFilterOutputWithContext(ctx context.Context) GetVpcFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcFilterOutput)
}

// GetVpcFilterArrayInput is an input type that accepts GetVpcFilterArray and GetVpcFilterArrayOutput values.
// You can construct a concrete instance of `GetVpcFilterArrayInput` via:
//
// 		 GetVpcFilterArray{ GetVpcFilterArgs{...} }
//
type GetVpcFilterArrayInput interface {
	pulumi.Input

	ToGetVpcFilterArrayOutput() GetVpcFilterArrayOutput
	ToGetVpcFilterArrayOutputWithContext(context.Context) GetVpcFilterArrayOutput
}

type GetVpcFilterArray []GetVpcFilterInput

func (GetVpcFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcFilter)(nil)).Elem()
}

func (i GetVpcFilterArray) ToGetVpcFilterArrayOutput() GetVpcFilterArrayOutput {
	return i.ToGetVpcFilterArrayOutputWithContext(context.Background())
}

func (i GetVpcFilterArray) ToGetVpcFilterArrayOutputWithContext(ctx context.Context) GetVpcFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcFilterArrayOutput)
}

type GetVpcFilterOutput struct{ *pulumi.OutputState }

func (GetVpcFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcFilter)(nil)).Elem()
}

func (o GetVpcFilterOutput) ToGetVpcFilterOutput() GetVpcFilterOutput {
	return o
}

func (o GetVpcFilterOutput) ToGetVpcFilterOutputWithContext(ctx context.Context) GetVpcFilterOutput {
	return o
}

// The name of the field to filter by, as defined by
// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcs.html).
func (o GetVpcFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field.
// A VPC will be selected if any one of the given values matches.
func (o GetVpcFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpcFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetVpcFilterArrayOutput struct{ *pulumi.OutputState }

func (GetVpcFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcFilter)(nil)).Elem()
}

func (o GetVpcFilterArrayOutput) ToGetVpcFilterArrayOutput() GetVpcFilterArrayOutput {
	return o
}

func (o GetVpcFilterArrayOutput) ToGetVpcFilterArrayOutputWithContext(ctx context.Context) GetVpcFilterArrayOutput {
	return o
}

func (o GetVpcFilterArrayOutput) Index(i pulumi.IntInput) GetVpcFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcFilter {
		return vs[0].([]GetVpcFilter)[vs[1].(int)]
	}).(GetVpcFilterOutput)
}

type GetVpcPeeringConnectionFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcPeeringConnections.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC Peering Connection will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

// GetVpcPeeringConnectionFilterInput is an input type that accepts GetVpcPeeringConnectionFilterArgs and GetVpcPeeringConnectionFilterOutput values.
// You can construct a concrete instance of `GetVpcPeeringConnectionFilterInput` via:
//
// 		 GetVpcPeeringConnectionFilterArgs{...}
//
type GetVpcPeeringConnectionFilterInput interface {
	pulumi.Input

	ToGetVpcPeeringConnectionFilterOutput() GetVpcPeeringConnectionFilterOutput
	ToGetVpcPeeringConnectionFilterOutputWithContext(context.Context) GetVpcPeeringConnectionFilterOutput
}

type GetVpcPeeringConnectionFilterArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcPeeringConnections.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC Peering Connection will be selected if any one of the given values matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetVpcPeeringConnectionFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcPeeringConnectionFilter)(nil)).Elem()
}

func (i GetVpcPeeringConnectionFilterArgs) ToGetVpcPeeringConnectionFilterOutput() GetVpcPeeringConnectionFilterOutput {
	return i.ToGetVpcPeeringConnectionFilterOutputWithContext(context.Background())
}

func (i GetVpcPeeringConnectionFilterArgs) ToGetVpcPeeringConnectionFilterOutputWithContext(ctx context.Context) GetVpcPeeringConnectionFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcPeeringConnectionFilterOutput)
}

// GetVpcPeeringConnectionFilterArrayInput is an input type that accepts GetVpcPeeringConnectionFilterArray and GetVpcPeeringConnectionFilterArrayOutput values.
// You can construct a concrete instance of `GetVpcPeeringConnectionFilterArrayInput` via:
//
// 		 GetVpcPeeringConnectionFilterArray{ GetVpcPeeringConnectionFilterArgs{...} }
//
type GetVpcPeeringConnectionFilterArrayInput interface {
	pulumi.Input

	ToGetVpcPeeringConnectionFilterArrayOutput() GetVpcPeeringConnectionFilterArrayOutput
	ToGetVpcPeeringConnectionFilterArrayOutputWithContext(context.Context) GetVpcPeeringConnectionFilterArrayOutput
}

type GetVpcPeeringConnectionFilterArray []GetVpcPeeringConnectionFilterInput

func (GetVpcPeeringConnectionFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcPeeringConnectionFilter)(nil)).Elem()
}

func (i GetVpcPeeringConnectionFilterArray) ToGetVpcPeeringConnectionFilterArrayOutput() GetVpcPeeringConnectionFilterArrayOutput {
	return i.ToGetVpcPeeringConnectionFilterArrayOutputWithContext(context.Background())
}

func (i GetVpcPeeringConnectionFilterArray) ToGetVpcPeeringConnectionFilterArrayOutputWithContext(ctx context.Context) GetVpcPeeringConnectionFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcPeeringConnectionFilterArrayOutput)
}

type GetVpcPeeringConnectionFilterOutput struct{ *pulumi.OutputState }

func (GetVpcPeeringConnectionFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcPeeringConnectionFilter)(nil)).Elem()
}

func (o GetVpcPeeringConnectionFilterOutput) ToGetVpcPeeringConnectionFilterOutput() GetVpcPeeringConnectionFilterOutput {
	return o
}

func (o GetVpcPeeringConnectionFilterOutput) ToGetVpcPeeringConnectionFilterOutputWithContext(ctx context.Context) GetVpcPeeringConnectionFilterOutput {
	return o
}

// The name of the field to filter by, as defined by
// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcPeeringConnections.html).
func (o GetVpcPeeringConnectionFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcPeeringConnectionFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field.
// A VPC Peering Connection will be selected if any one of the given values matches.
func (o GetVpcPeeringConnectionFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpcPeeringConnectionFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetVpcPeeringConnectionFilterArrayOutput struct{ *pulumi.OutputState }

func (GetVpcPeeringConnectionFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcPeeringConnectionFilter)(nil)).Elem()
}

func (o GetVpcPeeringConnectionFilterArrayOutput) ToGetVpcPeeringConnectionFilterArrayOutput() GetVpcPeeringConnectionFilterArrayOutput {
	return o
}

func (o GetVpcPeeringConnectionFilterArrayOutput) ToGetVpcPeeringConnectionFilterArrayOutputWithContext(ctx context.Context) GetVpcPeeringConnectionFilterArrayOutput {
	return o
}

func (o GetVpcPeeringConnectionFilterArrayOutput) Index(i pulumi.IntInput) GetVpcPeeringConnectionFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcPeeringConnectionFilter {
		return vs[0].([]GetVpcPeeringConnectionFilter)[vs[1].(int)]
	}).(GetVpcPeeringConnectionFilterOutput)
}

type GetVpcsFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcs.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

// GetVpcsFilterInput is an input type that accepts GetVpcsFilterArgs and GetVpcsFilterOutput values.
// You can construct a concrete instance of `GetVpcsFilterInput` via:
//
// 		 GetVpcsFilterArgs{...}
//
type GetVpcsFilterInput interface {
	pulumi.Input

	ToGetVpcsFilterOutput() GetVpcsFilterOutput
	ToGetVpcsFilterOutputWithContext(context.Context) GetVpcsFilterOutput
}

type GetVpcsFilterArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcs.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPC will be selected if any one of the given values matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetVpcsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcsFilter)(nil)).Elem()
}

func (i GetVpcsFilterArgs) ToGetVpcsFilterOutput() GetVpcsFilterOutput {
	return i.ToGetVpcsFilterOutputWithContext(context.Background())
}

func (i GetVpcsFilterArgs) ToGetVpcsFilterOutputWithContext(ctx context.Context) GetVpcsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcsFilterOutput)
}

// GetVpcsFilterArrayInput is an input type that accepts GetVpcsFilterArray and GetVpcsFilterArrayOutput values.
// You can construct a concrete instance of `GetVpcsFilterArrayInput` via:
//
// 		 GetVpcsFilterArray{ GetVpcsFilterArgs{...} }
//
type GetVpcsFilterArrayInput interface {
	pulumi.Input

	ToGetVpcsFilterArrayOutput() GetVpcsFilterArrayOutput
	ToGetVpcsFilterArrayOutputWithContext(context.Context) GetVpcsFilterArrayOutput
}

type GetVpcsFilterArray []GetVpcsFilterInput

func (GetVpcsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcsFilter)(nil)).Elem()
}

func (i GetVpcsFilterArray) ToGetVpcsFilterArrayOutput() GetVpcsFilterArrayOutput {
	return i.ToGetVpcsFilterArrayOutputWithContext(context.Background())
}

func (i GetVpcsFilterArray) ToGetVpcsFilterArrayOutputWithContext(ctx context.Context) GetVpcsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcsFilterArrayOutput)
}

type GetVpcsFilterOutput struct{ *pulumi.OutputState }

func (GetVpcsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcsFilter)(nil)).Elem()
}

func (o GetVpcsFilterOutput) ToGetVpcsFilterOutput() GetVpcsFilterOutput {
	return o
}

func (o GetVpcsFilterOutput) ToGetVpcsFilterOutputWithContext(ctx context.Context) GetVpcsFilterOutput {
	return o
}

// The name of the field to filter by, as defined by
// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpcs.html).
func (o GetVpcsFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcsFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field.
// A VPC will be selected if any one of the given values matches.
func (o GetVpcsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpcsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetVpcsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetVpcsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcsFilter)(nil)).Elem()
}

func (o GetVpcsFilterArrayOutput) ToGetVpcsFilterArrayOutput() GetVpcsFilterArrayOutput {
	return o
}

func (o GetVpcsFilterArrayOutput) ToGetVpcsFilterArrayOutputWithContext(ctx context.Context) GetVpcsFilterArrayOutput {
	return o
}

func (o GetVpcsFilterArrayOutput) Index(i pulumi.IntInput) GetVpcsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcsFilter {
		return vs[0].([]GetVpcsFilter)[vs[1].(int)]
	}).(GetVpcsFilterOutput)
}

type GetVpnGatewayFilter struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpnGateways.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPN Gateway will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

// GetVpnGatewayFilterInput is an input type that accepts GetVpnGatewayFilterArgs and GetVpnGatewayFilterOutput values.
// You can construct a concrete instance of `GetVpnGatewayFilterInput` via:
//
// 		 GetVpnGatewayFilterArgs{...}
//
type GetVpnGatewayFilterInput interface {
	pulumi.Input

	ToGetVpnGatewayFilterOutput() GetVpnGatewayFilterOutput
	ToGetVpnGatewayFilterOutputWithContext(context.Context) GetVpnGatewayFilterOutput
}

type GetVpnGatewayFilterArgs struct {
	// The name of the field to filter by, as defined by
	// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpnGateways.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field.
	// A VPN Gateway will be selected if any one of the given values matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetVpnGatewayFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnGatewayFilter)(nil)).Elem()
}

func (i GetVpnGatewayFilterArgs) ToGetVpnGatewayFilterOutput() GetVpnGatewayFilterOutput {
	return i.ToGetVpnGatewayFilterOutputWithContext(context.Background())
}

func (i GetVpnGatewayFilterArgs) ToGetVpnGatewayFilterOutputWithContext(ctx context.Context) GetVpnGatewayFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnGatewayFilterOutput)
}

// GetVpnGatewayFilterArrayInput is an input type that accepts GetVpnGatewayFilterArray and GetVpnGatewayFilterArrayOutput values.
// You can construct a concrete instance of `GetVpnGatewayFilterArrayInput` via:
//
// 		 GetVpnGatewayFilterArray{ GetVpnGatewayFilterArgs{...} }
//
type GetVpnGatewayFilterArrayInput interface {
	pulumi.Input

	ToGetVpnGatewayFilterArrayOutput() GetVpnGatewayFilterArrayOutput
	ToGetVpnGatewayFilterArrayOutputWithContext(context.Context) GetVpnGatewayFilterArrayOutput
}

type GetVpnGatewayFilterArray []GetVpnGatewayFilterInput

func (GetVpnGatewayFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnGatewayFilter)(nil)).Elem()
}

func (i GetVpnGatewayFilterArray) ToGetVpnGatewayFilterArrayOutput() GetVpnGatewayFilterArrayOutput {
	return i.ToGetVpnGatewayFilterArrayOutputWithContext(context.Background())
}

func (i GetVpnGatewayFilterArray) ToGetVpnGatewayFilterArrayOutputWithContext(ctx context.Context) GetVpnGatewayFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpnGatewayFilterArrayOutput)
}

type GetVpnGatewayFilterOutput struct{ *pulumi.OutputState }

func (GetVpnGatewayFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpnGatewayFilter)(nil)).Elem()
}

func (o GetVpnGatewayFilterOutput) ToGetVpnGatewayFilterOutput() GetVpnGatewayFilterOutput {
	return o
}

func (o GetVpnGatewayFilterOutput) ToGetVpnGatewayFilterOutputWithContext(ctx context.Context) GetVpnGatewayFilterOutput {
	return o
}

// The name of the field to filter by, as defined by
// [the underlying AWS API](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpnGateways.html).
func (o GetVpnGatewayFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpnGatewayFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field.
// A VPN Gateway will be selected if any one of the given values matches.
func (o GetVpnGatewayFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetVpnGatewayFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetVpnGatewayFilterArrayOutput struct{ *pulumi.OutputState }

func (GetVpnGatewayFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpnGatewayFilter)(nil)).Elem()
}

func (o GetVpnGatewayFilterArrayOutput) ToGetVpnGatewayFilterArrayOutput() GetVpnGatewayFilterArrayOutput {
	return o
}

func (o GetVpnGatewayFilterArrayOutput) ToGetVpnGatewayFilterArrayOutputWithContext(ctx context.Context) GetVpnGatewayFilterArrayOutput {
	return o
}

func (o GetVpnGatewayFilterArrayOutput) Index(i pulumi.IntInput) GetVpnGatewayFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpnGatewayFilter {
		return vs[0].([]GetVpnGatewayFilter)[vs[1].(int)]
	}).(GetVpnGatewayFilterOutput)
}

func init() {
	pulumi.RegisterOutputType(AmiCopyEbsBlockDeviceOutput{})
	pulumi.RegisterOutputType(AmiCopyEbsBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(AmiCopyEphemeralBlockDeviceOutput{})
	pulumi.RegisterOutputType(AmiCopyEphemeralBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(AmiEbsBlockDeviceOutput{})
	pulumi.RegisterOutputType(AmiEbsBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(AmiEphemeralBlockDeviceOutput{})
	pulumi.RegisterOutputType(AmiEphemeralBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(AmiFromInstanceEbsBlockDeviceOutput{})
	pulumi.RegisterOutputType(AmiFromInstanceEbsBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(AmiFromInstanceEphemeralBlockDeviceOutput{})
	pulumi.RegisterOutputType(AmiFromInstanceEphemeralBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(DefaultNetworkAclEgressOutput{})
	pulumi.RegisterOutputType(DefaultNetworkAclEgressArrayOutput{})
	pulumi.RegisterOutputType(DefaultNetworkAclIngressOutput{})
	pulumi.RegisterOutputType(DefaultNetworkAclIngressArrayOutput{})
	pulumi.RegisterOutputType(DefaultRouteTableRouteOutput{})
	pulumi.RegisterOutputType(DefaultRouteTableRouteArrayOutput{})
	pulumi.RegisterOutputType(DefaultSecurityGroupEgressOutput{})
	pulumi.RegisterOutputType(DefaultSecurityGroupEgressArrayOutput{})
	pulumi.RegisterOutputType(DefaultSecurityGroupIngressOutput{})
	pulumi.RegisterOutputType(DefaultSecurityGroupIngressArrayOutput{})
	pulumi.RegisterOutputType(FleetLaunchTemplateConfigOutput{})
	pulumi.RegisterOutputType(FleetLaunchTemplateConfigPtrOutput{})
	pulumi.RegisterOutputType(FleetLaunchTemplateConfigLaunchTemplateSpecificationOutput{})
	pulumi.RegisterOutputType(FleetLaunchTemplateConfigOverrideOutput{})
	pulumi.RegisterOutputType(FleetLaunchTemplateConfigOverrideArrayOutput{})
	pulumi.RegisterOutputType(FleetOnDemandOptionsOutput{})
	pulumi.RegisterOutputType(FleetOnDemandOptionsPtrOutput{})
	pulumi.RegisterOutputType(FleetSpotOptionsOutput{})
	pulumi.RegisterOutputType(FleetSpotOptionsPtrOutput{})
	pulumi.RegisterOutputType(FleetTargetCapacitySpecificationOutput{})
	pulumi.RegisterOutputType(FleetTargetCapacitySpecificationPtrOutput{})
	pulumi.RegisterOutputType(InstanceCreditSpecificationOutput{})
	pulumi.RegisterOutputType(InstanceCreditSpecificationPtrOutput{})
	pulumi.RegisterOutputType(InstanceEbsBlockDeviceOutput{})
	pulumi.RegisterOutputType(InstanceEbsBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(InstanceEphemeralBlockDeviceOutput{})
	pulumi.RegisterOutputType(InstanceEphemeralBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(InstanceMetadataOptionsOutput{})
	pulumi.RegisterOutputType(InstanceMetadataOptionsPtrOutput{})
	pulumi.RegisterOutputType(InstanceNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(InstanceNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(InstanceRootBlockDeviceOutput{})
	pulumi.RegisterOutputType(InstanceRootBlockDevicePtrOutput{})
	pulumi.RegisterOutputType(LaunchConfigurationEbsBlockDeviceOutput{})
	pulumi.RegisterOutputType(LaunchConfigurationEbsBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(LaunchConfigurationEphemeralBlockDeviceOutput{})
	pulumi.RegisterOutputType(LaunchConfigurationEphemeralBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(LaunchConfigurationRootBlockDeviceOutput{})
	pulumi.RegisterOutputType(LaunchConfigurationRootBlockDevicePtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateBlockDeviceMappingOutput{})
	pulumi.RegisterOutputType(LaunchTemplateBlockDeviceMappingArrayOutput{})
	pulumi.RegisterOutputType(LaunchTemplateBlockDeviceMappingEbsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateBlockDeviceMappingEbsPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateCapacityReservationSpecificationOutput{})
	pulumi.RegisterOutputType(LaunchTemplateCapacityReservationSpecificationPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetOutput{})
	pulumi.RegisterOutputType(LaunchTemplateCapacityReservationSpecificationCapacityReservationTargetPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateCpuOptionsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateCpuOptionsPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateCreditSpecificationOutput{})
	pulumi.RegisterOutputType(LaunchTemplateCreditSpecificationPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateElasticGpuSpecificationOutput{})
	pulumi.RegisterOutputType(LaunchTemplateElasticGpuSpecificationArrayOutput{})
	pulumi.RegisterOutputType(LaunchTemplateElasticInferenceAcceleratorOutput{})
	pulumi.RegisterOutputType(LaunchTemplateElasticInferenceAcceleratorPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateHibernationOptionsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateHibernationOptionsPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateIamInstanceProfileOutput{})
	pulumi.RegisterOutputType(LaunchTemplateIamInstanceProfilePtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateInstanceMarketOptionsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateInstanceMarketOptionsPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateInstanceMarketOptionsSpotOptionsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateInstanceMarketOptionsSpotOptionsPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateLicenseSpecificationOutput{})
	pulumi.RegisterOutputType(LaunchTemplateLicenseSpecificationArrayOutput{})
	pulumi.RegisterOutputType(LaunchTemplateMetadataOptionsOutput{})
	pulumi.RegisterOutputType(LaunchTemplateMetadataOptionsPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateMonitoringOutput{})
	pulumi.RegisterOutputType(LaunchTemplateMonitoringPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(LaunchTemplateNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(LaunchTemplatePlacementOutput{})
	pulumi.RegisterOutputType(LaunchTemplatePlacementPtrOutput{})
	pulumi.RegisterOutputType(LaunchTemplateTagSpecificationOutput{})
	pulumi.RegisterOutputType(LaunchTemplateTagSpecificationArrayOutput{})
	pulumi.RegisterOutputType(NetworkAclEgressOutput{})
	pulumi.RegisterOutputType(NetworkAclEgressArrayOutput{})
	pulumi.RegisterOutputType(NetworkAclIngressOutput{})
	pulumi.RegisterOutputType(NetworkAclIngressArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceAttachmentTypeOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceAttachmentTypeArrayOutput{})
	pulumi.RegisterOutputType(PeeringConnectionOptionsAccepterOutput{})
	pulumi.RegisterOutputType(PeeringConnectionOptionsAccepterPtrOutput{})
	pulumi.RegisterOutputType(PeeringConnectionOptionsRequesterOutput{})
	pulumi.RegisterOutputType(PeeringConnectionOptionsRequesterPtrOutput{})
	pulumi.RegisterOutputType(RouteTableRouteOutput{})
	pulumi.RegisterOutputType(RouteTableRouteArrayOutput{})
	pulumi.RegisterOutputType(SecurityGroupEgressOutput{})
	pulumi.RegisterOutputType(SecurityGroupEgressArrayOutput{})
	pulumi.RegisterOutputType(SecurityGroupIngressOutput{})
	pulumi.RegisterOutputType(SecurityGroupIngressArrayOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchSpecificationOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchSpecificationArrayOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchSpecificationEbsBlockDeviceOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchSpecificationEbsBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchSpecificationRootBlockDeviceOutput{})
	pulumi.RegisterOutputType(SpotFleetRequestLaunchSpecificationRootBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestCreditSpecificationOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestCreditSpecificationPtrOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestEbsBlockDeviceOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestEbsBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestEphemeralBlockDeviceOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestEphemeralBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestMetadataOptionsOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestMetadataOptionsPtrOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestRootBlockDeviceOutput{})
	pulumi.RegisterOutputType(SpotInstanceRequestRootBlockDevicePtrOutput{})
	pulumi.RegisterOutputType(TrafficMirrorFilterRuleDestinationPortRangeOutput{})
	pulumi.RegisterOutputType(TrafficMirrorFilterRuleDestinationPortRangePtrOutput{})
	pulumi.RegisterOutputType(TrafficMirrorFilterRuleSourcePortRangeOutput{})
	pulumi.RegisterOutputType(TrafficMirrorFilterRuleSourcePortRangePtrOutput{})
	pulumi.RegisterOutputType(VpcEndpointDnsEntryOutput{})
	pulumi.RegisterOutputType(VpcEndpointDnsEntryArrayOutput{})
	pulumi.RegisterOutputType(VpcPeeringConnectionAccepterTypeOutput{})
	pulumi.RegisterOutputType(VpcPeeringConnectionAccepterTypePtrOutput{})
	pulumi.RegisterOutputType(VpcPeeringConnectionAccepterAccepterOutput{})
	pulumi.RegisterOutputType(VpcPeeringConnectionAccepterAccepterPtrOutput{})
	pulumi.RegisterOutputType(VpcPeeringConnectionAccepterRequesterOutput{})
	pulumi.RegisterOutputType(VpcPeeringConnectionAccepterRequesterPtrOutput{})
	pulumi.RegisterOutputType(VpcPeeringConnectionRequesterOutput{})
	pulumi.RegisterOutputType(VpcPeeringConnectionRequesterPtrOutput{})
	pulumi.RegisterOutputType(VpnConnectionRouteTypeOutput{})
	pulumi.RegisterOutputType(VpnConnectionRouteTypeArrayOutput{})
	pulumi.RegisterOutputType(VpnConnectionVgwTelemetryOutput{})
	pulumi.RegisterOutputType(VpnConnectionVgwTelemetryArrayOutput{})
	pulumi.RegisterOutputType(GetCustomerGatewayFilterOutput{})
	pulumi.RegisterOutputType(GetCustomerGatewayFilterArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceCreditSpecificationOutput{})
	pulumi.RegisterOutputType(GetInstanceCreditSpecificationArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceEbsBlockDeviceOutput{})
	pulumi.RegisterOutputType(GetInstanceEbsBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceEphemeralBlockDeviceOutput{})
	pulumi.RegisterOutputType(GetInstanceEphemeralBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceFilterOutput{})
	pulumi.RegisterOutputType(GetInstanceFilterArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceMetadataOptionOutput{})
	pulumi.RegisterOutputType(GetInstanceMetadataOptionArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceRootBlockDeviceOutput{})
	pulumi.RegisterOutputType(GetInstanceRootBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceTypeOfferingFilterOutput{})
	pulumi.RegisterOutputType(GetInstanceTypeOfferingFilterArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceTypeOfferingsFilterOutput{})
	pulumi.RegisterOutputType(GetInstanceTypeOfferingsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesFilterOutput{})
	pulumi.RegisterOutputType(GetInstancesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetInternetGatewayAttachmentOutput{})
	pulumi.RegisterOutputType(GetInternetGatewayAttachmentArrayOutput{})
	pulumi.RegisterOutputType(GetInternetGatewayFilterOutput{})
	pulumi.RegisterOutputType(GetInternetGatewayFilterArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchConfigurationEbsBlockDeviceOutput{})
	pulumi.RegisterOutputType(GetLaunchConfigurationEbsBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchConfigurationEphemeralBlockDeviceOutput{})
	pulumi.RegisterOutputType(GetLaunchConfigurationEphemeralBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchConfigurationRootBlockDeviceOutput{})
	pulumi.RegisterOutputType(GetLaunchConfigurationRootBlockDeviceArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateBlockDeviceMappingOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateBlockDeviceMappingArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateBlockDeviceMappingEbOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateBlockDeviceMappingEbArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateCreditSpecificationOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateCreditSpecificationArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateElasticGpuSpecificationOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateElasticGpuSpecificationArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateFilterOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateFilterArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateHibernationOptionOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateHibernationOptionArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateIamInstanceProfileOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateIamInstanceProfileArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateInstanceMarketOptionOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateInstanceMarketOptionArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateInstanceMarketOptionSpotOptionOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateInstanceMarketOptionSpotOptionArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateMetadataOptionOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateMetadataOptionArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateMonitoringOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateMonitoringArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplatePlacementOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplatePlacementArrayOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateTagSpecificationOutput{})
	pulumi.RegisterOutputType(GetLaunchTemplateTagSpecificationArrayOutput{})
	pulumi.RegisterOutputType(GetNatGatewayFilterOutput{})
	pulumi.RegisterOutputType(GetNatGatewayFilterArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkAclsFilterOutput{})
	pulumi.RegisterOutputType(GetNetworkAclsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkInterfaceAssociationOutput{})
	pulumi.RegisterOutputType(GetNetworkInterfaceAssociationArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkInterfaceAttachmentTypeOutput{})
	pulumi.RegisterOutputType(GetNetworkInterfaceAttachmentTypeArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkInterfaceFilterOutput{})
	pulumi.RegisterOutputType(GetNetworkInterfaceFilterArrayOutput{})
	pulumi.RegisterOutputType(GetNetworkInterfacesFilterOutput{})
	pulumi.RegisterOutputType(GetNetworkInterfacesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetRouteTableAssociationTypeOutput{})
	pulumi.RegisterOutputType(GetRouteTableAssociationTypeArrayOutput{})
	pulumi.RegisterOutputType(GetRouteTableFilterOutput{})
	pulumi.RegisterOutputType(GetRouteTableFilterArrayOutput{})
	pulumi.RegisterOutputType(GetRouteTableRouteOutput{})
	pulumi.RegisterOutputType(GetRouteTableRouteArrayOutput{})
	pulumi.RegisterOutputType(GetRouteTablesFilterOutput{})
	pulumi.RegisterOutputType(GetRouteTablesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupFilterOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupsFilterOutput{})
	pulumi.RegisterOutputType(GetSecurityGroupsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSubnetFilterOutput{})
	pulumi.RegisterOutputType(GetSubnetFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSubnetIdsFilterOutput{})
	pulumi.RegisterOutputType(GetSubnetIdsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVpcCidrBlockAssociationOutput{})
	pulumi.RegisterOutputType(GetVpcCidrBlockAssociationArrayOutput{})
	pulumi.RegisterOutputType(GetVpcDhcpOptionsFilterOutput{})
	pulumi.RegisterOutputType(GetVpcDhcpOptionsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVpcEndpointDnsEntryOutput{})
	pulumi.RegisterOutputType(GetVpcEndpointDnsEntryArrayOutput{})
	pulumi.RegisterOutputType(GetVpcEndpointFilterOutput{})
	pulumi.RegisterOutputType(GetVpcEndpointFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVpcEndpointServiceFilterOutput{})
	pulumi.RegisterOutputType(GetVpcEndpointServiceFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVpcFilterOutput{})
	pulumi.RegisterOutputType(GetVpcFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVpcPeeringConnectionFilterOutput{})
	pulumi.RegisterOutputType(GetVpcPeeringConnectionFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVpcsFilterOutput{})
	pulumi.RegisterOutputType(GetVpcsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetVpnGatewayFilterOutput{})
	pulumi.RegisterOutputType(GetVpnGatewayFilterArrayOutput{})
}
