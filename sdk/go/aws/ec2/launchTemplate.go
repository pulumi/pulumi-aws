// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides an EC2 launch template resource. Can be used to create instances or auto scaling groups.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"encoding/base64"
//	"fmt"
//	"os"
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/ec2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func filebase64OrPanic(path string) string {
//		if fileData, err := os.ReadFile(path); err == nil {
//			return base64.StdEncoding.EncodeToString(fileData[:])
//		} else {
//			panic(err.Error())
//		}
//	}
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ec2.NewLaunchTemplate(ctx, "foo", &ec2.LaunchTemplateArgs{
//				BlockDeviceMappings: ec2.LaunchTemplateBlockDeviceMappingArray{
//					&ec2.LaunchTemplateBlockDeviceMappingArgs{
//						DeviceName: pulumi.String("/dev/sdf"),
//						Ebs: &ec2.LaunchTemplateBlockDeviceMappingEbsArgs{
//							VolumeSize: pulumi.Int(20),
//						},
//					},
//				},
//				CapacityReservationSpecification: &ec2.LaunchTemplateCapacityReservationSpecificationArgs{
//					CapacityReservationPreference: pulumi.String("open"),
//				},
//				CpuOptions: &ec2.LaunchTemplateCpuOptionsArgs{
//					CoreCount:      pulumi.Int(4),
//					ThreadsPerCore: pulumi.Int(2),
//				},
//				CreditSpecification: &ec2.LaunchTemplateCreditSpecificationArgs{
//					CpuCredits: pulumi.String("standard"),
//				},
//				DisableApiStop:        pulumi.Bool(true),
//				DisableApiTermination: pulumi.Bool(true),
//				EbsOptimized:          pulumi.String("true"),
//				ElasticGpuSpecifications: ec2.LaunchTemplateElasticGpuSpecificationArray{
//					&ec2.LaunchTemplateElasticGpuSpecificationArgs{
//						Type: pulumi.String("test"),
//					},
//				},
//				ElasticInferenceAccelerator: &ec2.LaunchTemplateElasticInferenceAcceleratorArgs{
//					Type: pulumi.String("eia1.medium"),
//				},
//				IamInstanceProfile: &ec2.LaunchTemplateIamInstanceProfileArgs{
//					Name: pulumi.String("test"),
//				},
//				ImageId:                           pulumi.String("ami-test"),
//				InstanceInitiatedShutdownBehavior: pulumi.String("terminate"),
//				InstanceMarketOptions: &ec2.LaunchTemplateInstanceMarketOptionsArgs{
//					MarketType: pulumi.String("spot"),
//				},
//				InstanceType: pulumi.String("t2.micro"),
//				KernelId:     pulumi.String("test"),
//				KeyName:      pulumi.String("test"),
//				LicenseSpecifications: ec2.LaunchTemplateLicenseSpecificationArray{
//					&ec2.LaunchTemplateLicenseSpecificationArgs{
//						LicenseConfigurationArn: pulumi.String("arn:aws:license-manager:eu-west-1:123456789012:license-configuration:lic-0123456789abcdef0123456789abcdef"),
//					},
//				},
//				MetadataOptions: &ec2.LaunchTemplateMetadataOptionsArgs{
//					HttpEndpoint:            pulumi.String("enabled"),
//					HttpTokens:              pulumi.String("required"),
//					HttpPutResponseHopLimit: pulumi.Int(1),
//					InstanceMetadataTags:    pulumi.String("enabled"),
//				},
//				Monitoring: &ec2.LaunchTemplateMonitoringArgs{
//					Enabled: pulumi.Bool(true),
//				},
//				NetworkInterfaces: ec2.LaunchTemplateNetworkInterfaceArray{
//					&ec2.LaunchTemplateNetworkInterfaceArgs{
//						AssociatePublicIpAddress: pulumi.String("true"),
//					},
//				},
//				Placement: &ec2.LaunchTemplatePlacementArgs{
//					AvailabilityZone: pulumi.String("us-west-2a"),
//				},
//				RamDiskId: pulumi.String("test"),
//				VpcSecurityGroupIds: pulumi.StringArray{
//					pulumi.String("sg-12345678"),
//				},
//				TagSpecifications: ec2.LaunchTemplateTagSpecificationArray{
//					&ec2.LaunchTemplateTagSpecificationArgs{
//						ResourceType: pulumi.String("instance"),
//						Tags: pulumi.StringMap{
//							"Name": pulumi.String("test"),
//						},
//					},
//				},
//				UserData: filebase64OrPanic(fmt.Sprintf("%v/example.sh", path.Module)),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import Launch Templates using the `id`. For example:
//
// ```sh
//
//	$ pulumi import aws:ec2/launchTemplate:LaunchTemplate web lt-12345678
//
// ```
type LaunchTemplate struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the instance profile. Conflicts with `name`.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// Specify volumes to attach to the instance besides the volumes specified by the AMI.
	// See Block Devices below for details.
	BlockDeviceMappings LaunchTemplateBlockDeviceMappingArrayOutput `pulumi:"blockDeviceMappings"`
	// Targeting for EC2 capacity reservations. See Capacity Reservation Specification below for more details.
	CapacityReservationSpecification LaunchTemplateCapacityReservationSpecificationPtrOutput `pulumi:"capacityReservationSpecification"`
	// The CPU options for the instance. See CPU Options below for more details.
	CpuOptions LaunchTemplateCpuOptionsPtrOutput `pulumi:"cpuOptions"`
	// Customize the credit specification of the instance. See Credit
	// Specification below for more details.
	CreditSpecification LaunchTemplateCreditSpecificationPtrOutput `pulumi:"creditSpecification"`
	// Default Version of the launch template.
	DefaultVersion pulumi.IntOutput `pulumi:"defaultVersion"`
	// Description of the launch template.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// If true, enables [EC2 Instance Stop Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html#Using_StopProtection).
	DisableApiStop pulumi.BoolPtrOutput `pulumi:"disableApiStop"`
	// If `true`, enables [EC2 Instance
	// Termination Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination)
	DisableApiTermination pulumi.BoolPtrOutput `pulumi:"disableApiTermination"`
	// If `true`, the launched EC2 instance will be EBS-optimized.
	EbsOptimized pulumi.StringPtrOutput `pulumi:"ebsOptimized"`
	// The elastic GPU to attach to the instance. See Elastic GPU
	// below for more details.
	ElasticGpuSpecifications LaunchTemplateElasticGpuSpecificationArrayOutput `pulumi:"elasticGpuSpecifications"`
	// Configuration block containing an Elastic Inference Accelerator to attach to the instance. See Elastic Inference Accelerator below for more details.
	ElasticInferenceAccelerator LaunchTemplateElasticInferenceAcceleratorPtrOutput `pulumi:"elasticInferenceAccelerator"`
	// Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.
	EnclaveOptions LaunchTemplateEnclaveOptionsPtrOutput `pulumi:"enclaveOptions"`
	// The hibernation options for the instance. See Hibernation Options below for more details.
	HibernationOptions LaunchTemplateHibernationOptionsPtrOutput `pulumi:"hibernationOptions"`
	// The IAM Instance Profile to launch the instance with. See Instance Profile
	// below for more details.
	IamInstanceProfile LaunchTemplateIamInstanceProfilePtrOutput `pulumi:"iamInstanceProfile"`
	// The AMI from which to launch the instance.
	ImageId pulumi.StringPtrOutput `pulumi:"imageId"`
	// Shutdown behavior for the instance. Can be `stop` or `terminate`.
	// (Default: `stop`).
	InstanceInitiatedShutdownBehavior pulumi.StringPtrOutput `pulumi:"instanceInitiatedShutdownBehavior"`
	// The market (purchasing) option for the instance. See Market Options
	// below for details.
	InstanceMarketOptions LaunchTemplateInstanceMarketOptionsPtrOutput `pulumi:"instanceMarketOptions"`
	// The attribute requirements for the type of instance. If present then `instanceType` cannot be present.
	InstanceRequirements LaunchTemplateInstanceRequirementsPtrOutput `pulumi:"instanceRequirements"`
	// The type of the instance. If present then `instanceRequirements` cannot be present.
	InstanceType pulumi.StringPtrOutput `pulumi:"instanceType"`
	// The kernel ID.
	KernelId pulumi.StringPtrOutput `pulumi:"kernelId"`
	// The key name to use for the instance.
	KeyName pulumi.StringPtrOutput `pulumi:"keyName"`
	// The latest version of the launch template.
	LatestVersion pulumi.IntOutput `pulumi:"latestVersion"`
	// A list of license specifications to associate with. See License Specification below for more details.
	LicenseSpecifications LaunchTemplateLicenseSpecificationArrayOutput `pulumi:"licenseSpecifications"`
	// The maintenance options for the instance. See Maintenance Options below for more details.
	MaintenanceOptions LaunchTemplateMaintenanceOptionsPtrOutput `pulumi:"maintenanceOptions"`
	// Customize the metadata options for the instance. See Metadata Options below for more details.
	MetadataOptions LaunchTemplateMetadataOptionsOutput `pulumi:"metadataOptions"`
	// The monitoring option for the instance. See Monitoring below for more details.
	Monitoring LaunchTemplateMonitoringPtrOutput `pulumi:"monitoring"`
	// The name of the launch template. If you leave this blank, the provider will auto-generate a unique name.
	Name pulumi.StringOutput `pulumi:"name"`
	// Creates a unique name beginning with the specified prefix. Conflicts with `name`.
	NamePrefix pulumi.StringOutput `pulumi:"namePrefix"`
	// Customize network interfaces to be attached at instance boot time. See Network
	// Interfaces below for more details.
	NetworkInterfaces LaunchTemplateNetworkInterfaceArrayOutput `pulumi:"networkInterfaces"`
	// The placement of the instance. See Placement below for more details.
	Placement LaunchTemplatePlacementPtrOutput `pulumi:"placement"`
	// The options for the instance hostname. The default values are inherited from the subnet. See Private DNS Name Options below for more details.
	PrivateDnsNameOptions LaunchTemplatePrivateDnsNameOptionsPtrOutput `pulumi:"privateDnsNameOptions"`
	// The ID of the RAM disk.
	RamDiskId pulumi.StringPtrOutput `pulumi:"ramDiskId"`
	// A list of security group names to associate with. If you are creating Instances in a VPC, use
	// `vpcSecurityGroupIds` instead.
	SecurityGroupNames pulumi.StringArrayOutput `pulumi:"securityGroupNames"`
	// The tags to apply to the resources during launch. See Tag Specifications below for more details.
	TagSpecifications LaunchTemplateTagSpecificationArrayOutput `pulumi:"tagSpecifications"`
	// A map of tags to assign to the launch template. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapOutput `pulumi:"tagsAll"`
	// Whether to update Default Version each update. Conflicts with `defaultVersion`.
	UpdateDefaultVersion pulumi.BoolPtrOutput `pulumi:"updateDefaultVersion"`
	// The base64-encoded user data to provide when launching the instance.
	UserData pulumi.StringPtrOutput `pulumi:"userData"`
	// A list of security group IDs to associate with. Conflicts with `network_interfaces.security_groups`
	VpcSecurityGroupIds pulumi.StringArrayOutput `pulumi:"vpcSecurityGroupIds"`
}

// NewLaunchTemplate registers a new resource with the given unique name, arguments, and options.
func NewLaunchTemplate(ctx *pulumi.Context,
	name string, args *LaunchTemplateArgs, opts ...pulumi.ResourceOption) (*LaunchTemplate, error) {
	if args == nil {
		args = &LaunchTemplateArgs{}
	}

	secrets := pulumi.AdditionalSecretOutputs([]string{
		"tagsAll",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LaunchTemplate
	err := ctx.RegisterResource("aws:ec2/launchTemplate:LaunchTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLaunchTemplate gets an existing LaunchTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLaunchTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LaunchTemplateState, opts ...pulumi.ResourceOption) (*LaunchTemplate, error) {
	var resource LaunchTemplate
	err := ctx.ReadResource("aws:ec2/launchTemplate:LaunchTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LaunchTemplate resources.
type launchTemplateState struct {
	// The Amazon Resource Name (ARN) of the instance profile. Conflicts with `name`.
	Arn *string `pulumi:"arn"`
	// Specify volumes to attach to the instance besides the volumes specified by the AMI.
	// See Block Devices below for details.
	BlockDeviceMappings []LaunchTemplateBlockDeviceMapping `pulumi:"blockDeviceMappings"`
	// Targeting for EC2 capacity reservations. See Capacity Reservation Specification below for more details.
	CapacityReservationSpecification *LaunchTemplateCapacityReservationSpecification `pulumi:"capacityReservationSpecification"`
	// The CPU options for the instance. See CPU Options below for more details.
	CpuOptions *LaunchTemplateCpuOptions `pulumi:"cpuOptions"`
	// Customize the credit specification of the instance. See Credit
	// Specification below for more details.
	CreditSpecification *LaunchTemplateCreditSpecification `pulumi:"creditSpecification"`
	// Default Version of the launch template.
	DefaultVersion *int `pulumi:"defaultVersion"`
	// Description of the launch template.
	Description *string `pulumi:"description"`
	// If true, enables [EC2 Instance Stop Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html#Using_StopProtection).
	DisableApiStop *bool `pulumi:"disableApiStop"`
	// If `true`, enables [EC2 Instance
	// Termination Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination)
	DisableApiTermination *bool `pulumi:"disableApiTermination"`
	// If `true`, the launched EC2 instance will be EBS-optimized.
	EbsOptimized *string `pulumi:"ebsOptimized"`
	// The elastic GPU to attach to the instance. See Elastic GPU
	// below for more details.
	ElasticGpuSpecifications []LaunchTemplateElasticGpuSpecification `pulumi:"elasticGpuSpecifications"`
	// Configuration block containing an Elastic Inference Accelerator to attach to the instance. See Elastic Inference Accelerator below for more details.
	ElasticInferenceAccelerator *LaunchTemplateElasticInferenceAccelerator `pulumi:"elasticInferenceAccelerator"`
	// Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.
	EnclaveOptions *LaunchTemplateEnclaveOptions `pulumi:"enclaveOptions"`
	// The hibernation options for the instance. See Hibernation Options below for more details.
	HibernationOptions *LaunchTemplateHibernationOptions `pulumi:"hibernationOptions"`
	// The IAM Instance Profile to launch the instance with. See Instance Profile
	// below for more details.
	IamInstanceProfile *LaunchTemplateIamInstanceProfile `pulumi:"iamInstanceProfile"`
	// The AMI from which to launch the instance.
	ImageId *string `pulumi:"imageId"`
	// Shutdown behavior for the instance. Can be `stop` or `terminate`.
	// (Default: `stop`).
	InstanceInitiatedShutdownBehavior *string `pulumi:"instanceInitiatedShutdownBehavior"`
	// The market (purchasing) option for the instance. See Market Options
	// below for details.
	InstanceMarketOptions *LaunchTemplateInstanceMarketOptions `pulumi:"instanceMarketOptions"`
	// The attribute requirements for the type of instance. If present then `instanceType` cannot be present.
	InstanceRequirements *LaunchTemplateInstanceRequirements `pulumi:"instanceRequirements"`
	// The type of the instance. If present then `instanceRequirements` cannot be present.
	InstanceType *string `pulumi:"instanceType"`
	// The kernel ID.
	KernelId *string `pulumi:"kernelId"`
	// The key name to use for the instance.
	KeyName *string `pulumi:"keyName"`
	// The latest version of the launch template.
	LatestVersion *int `pulumi:"latestVersion"`
	// A list of license specifications to associate with. See License Specification below for more details.
	LicenseSpecifications []LaunchTemplateLicenseSpecification `pulumi:"licenseSpecifications"`
	// The maintenance options for the instance. See Maintenance Options below for more details.
	MaintenanceOptions *LaunchTemplateMaintenanceOptions `pulumi:"maintenanceOptions"`
	// Customize the metadata options for the instance. See Metadata Options below for more details.
	MetadataOptions *LaunchTemplateMetadataOptions `pulumi:"metadataOptions"`
	// The monitoring option for the instance. See Monitoring below for more details.
	Monitoring *LaunchTemplateMonitoring `pulumi:"monitoring"`
	// The name of the launch template. If you leave this blank, the provider will auto-generate a unique name.
	Name *string `pulumi:"name"`
	// Creates a unique name beginning with the specified prefix. Conflicts with `name`.
	NamePrefix *string `pulumi:"namePrefix"`
	// Customize network interfaces to be attached at instance boot time. See Network
	// Interfaces below for more details.
	NetworkInterfaces []LaunchTemplateNetworkInterface `pulumi:"networkInterfaces"`
	// The placement of the instance. See Placement below for more details.
	Placement *LaunchTemplatePlacement `pulumi:"placement"`
	// The options for the instance hostname. The default values are inherited from the subnet. See Private DNS Name Options below for more details.
	PrivateDnsNameOptions *LaunchTemplatePrivateDnsNameOptions `pulumi:"privateDnsNameOptions"`
	// The ID of the RAM disk.
	RamDiskId *string `pulumi:"ramDiskId"`
	// A list of security group names to associate with. If you are creating Instances in a VPC, use
	// `vpcSecurityGroupIds` instead.
	SecurityGroupNames []string `pulumi:"securityGroupNames"`
	// The tags to apply to the resources during launch. See Tag Specifications below for more details.
	TagSpecifications []LaunchTemplateTagSpecification `pulumi:"tagSpecifications"`
	// A map of tags to assign to the launch template. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Whether to update Default Version each update. Conflicts with `defaultVersion`.
	UpdateDefaultVersion *bool `pulumi:"updateDefaultVersion"`
	// The base64-encoded user data to provide when launching the instance.
	UserData *string `pulumi:"userData"`
	// A list of security group IDs to associate with. Conflicts with `network_interfaces.security_groups`
	VpcSecurityGroupIds []string `pulumi:"vpcSecurityGroupIds"`
}

type LaunchTemplateState struct {
	// The Amazon Resource Name (ARN) of the instance profile. Conflicts with `name`.
	Arn pulumi.StringPtrInput
	// Specify volumes to attach to the instance besides the volumes specified by the AMI.
	// See Block Devices below for details.
	BlockDeviceMappings LaunchTemplateBlockDeviceMappingArrayInput
	// Targeting for EC2 capacity reservations. See Capacity Reservation Specification below for more details.
	CapacityReservationSpecification LaunchTemplateCapacityReservationSpecificationPtrInput
	// The CPU options for the instance. See CPU Options below for more details.
	CpuOptions LaunchTemplateCpuOptionsPtrInput
	// Customize the credit specification of the instance. See Credit
	// Specification below for more details.
	CreditSpecification LaunchTemplateCreditSpecificationPtrInput
	// Default Version of the launch template.
	DefaultVersion pulumi.IntPtrInput
	// Description of the launch template.
	Description pulumi.StringPtrInput
	// If true, enables [EC2 Instance Stop Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html#Using_StopProtection).
	DisableApiStop pulumi.BoolPtrInput
	// If `true`, enables [EC2 Instance
	// Termination Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination)
	DisableApiTermination pulumi.BoolPtrInput
	// If `true`, the launched EC2 instance will be EBS-optimized.
	EbsOptimized pulumi.StringPtrInput
	// The elastic GPU to attach to the instance. See Elastic GPU
	// below for more details.
	ElasticGpuSpecifications LaunchTemplateElasticGpuSpecificationArrayInput
	// Configuration block containing an Elastic Inference Accelerator to attach to the instance. See Elastic Inference Accelerator below for more details.
	ElasticInferenceAccelerator LaunchTemplateElasticInferenceAcceleratorPtrInput
	// Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.
	EnclaveOptions LaunchTemplateEnclaveOptionsPtrInput
	// The hibernation options for the instance. See Hibernation Options below for more details.
	HibernationOptions LaunchTemplateHibernationOptionsPtrInput
	// The IAM Instance Profile to launch the instance with. See Instance Profile
	// below for more details.
	IamInstanceProfile LaunchTemplateIamInstanceProfilePtrInput
	// The AMI from which to launch the instance.
	ImageId pulumi.StringPtrInput
	// Shutdown behavior for the instance. Can be `stop` or `terminate`.
	// (Default: `stop`).
	InstanceInitiatedShutdownBehavior pulumi.StringPtrInput
	// The market (purchasing) option for the instance. See Market Options
	// below for details.
	InstanceMarketOptions LaunchTemplateInstanceMarketOptionsPtrInput
	// The attribute requirements for the type of instance. If present then `instanceType` cannot be present.
	InstanceRequirements LaunchTemplateInstanceRequirementsPtrInput
	// The type of the instance. If present then `instanceRequirements` cannot be present.
	InstanceType pulumi.StringPtrInput
	// The kernel ID.
	KernelId pulumi.StringPtrInput
	// The key name to use for the instance.
	KeyName pulumi.StringPtrInput
	// The latest version of the launch template.
	LatestVersion pulumi.IntPtrInput
	// A list of license specifications to associate with. See License Specification below for more details.
	LicenseSpecifications LaunchTemplateLicenseSpecificationArrayInput
	// The maintenance options for the instance. See Maintenance Options below for more details.
	MaintenanceOptions LaunchTemplateMaintenanceOptionsPtrInput
	// Customize the metadata options for the instance. See Metadata Options below for more details.
	MetadataOptions LaunchTemplateMetadataOptionsPtrInput
	// The monitoring option for the instance. See Monitoring below for more details.
	Monitoring LaunchTemplateMonitoringPtrInput
	// The name of the launch template. If you leave this blank, the provider will auto-generate a unique name.
	Name pulumi.StringPtrInput
	// Creates a unique name beginning with the specified prefix. Conflicts with `name`.
	NamePrefix pulumi.StringPtrInput
	// Customize network interfaces to be attached at instance boot time. See Network
	// Interfaces below for more details.
	NetworkInterfaces LaunchTemplateNetworkInterfaceArrayInput
	// The placement of the instance. See Placement below for more details.
	Placement LaunchTemplatePlacementPtrInput
	// The options for the instance hostname. The default values are inherited from the subnet. See Private DNS Name Options below for more details.
	PrivateDnsNameOptions LaunchTemplatePrivateDnsNameOptionsPtrInput
	// The ID of the RAM disk.
	RamDiskId pulumi.StringPtrInput
	// A list of security group names to associate with. If you are creating Instances in a VPC, use
	// `vpcSecurityGroupIds` instead.
	SecurityGroupNames pulumi.StringArrayInput
	// The tags to apply to the resources during launch. See Tag Specifications below for more details.
	TagSpecifications LaunchTemplateTagSpecificationArrayInput
	// A map of tags to assign to the launch template. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapInput
	// Whether to update Default Version each update. Conflicts with `defaultVersion`.
	UpdateDefaultVersion pulumi.BoolPtrInput
	// The base64-encoded user data to provide when launching the instance.
	UserData pulumi.StringPtrInput
	// A list of security group IDs to associate with. Conflicts with `network_interfaces.security_groups`
	VpcSecurityGroupIds pulumi.StringArrayInput
}

func (LaunchTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*launchTemplateState)(nil)).Elem()
}

type launchTemplateArgs struct {
	// Specify volumes to attach to the instance besides the volumes specified by the AMI.
	// See Block Devices below for details.
	BlockDeviceMappings []LaunchTemplateBlockDeviceMapping `pulumi:"blockDeviceMappings"`
	// Targeting for EC2 capacity reservations. See Capacity Reservation Specification below for more details.
	CapacityReservationSpecification *LaunchTemplateCapacityReservationSpecification `pulumi:"capacityReservationSpecification"`
	// The CPU options for the instance. See CPU Options below for more details.
	CpuOptions *LaunchTemplateCpuOptions `pulumi:"cpuOptions"`
	// Customize the credit specification of the instance. See Credit
	// Specification below for more details.
	CreditSpecification *LaunchTemplateCreditSpecification `pulumi:"creditSpecification"`
	// Default Version of the launch template.
	DefaultVersion *int `pulumi:"defaultVersion"`
	// Description of the launch template.
	Description *string `pulumi:"description"`
	// If true, enables [EC2 Instance Stop Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html#Using_StopProtection).
	DisableApiStop *bool `pulumi:"disableApiStop"`
	// If `true`, enables [EC2 Instance
	// Termination Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination)
	DisableApiTermination *bool `pulumi:"disableApiTermination"`
	// If `true`, the launched EC2 instance will be EBS-optimized.
	EbsOptimized *string `pulumi:"ebsOptimized"`
	// The elastic GPU to attach to the instance. See Elastic GPU
	// below for more details.
	ElasticGpuSpecifications []LaunchTemplateElasticGpuSpecification `pulumi:"elasticGpuSpecifications"`
	// Configuration block containing an Elastic Inference Accelerator to attach to the instance. See Elastic Inference Accelerator below for more details.
	ElasticInferenceAccelerator *LaunchTemplateElasticInferenceAccelerator `pulumi:"elasticInferenceAccelerator"`
	// Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.
	EnclaveOptions *LaunchTemplateEnclaveOptions `pulumi:"enclaveOptions"`
	// The hibernation options for the instance. See Hibernation Options below for more details.
	HibernationOptions *LaunchTemplateHibernationOptions `pulumi:"hibernationOptions"`
	// The IAM Instance Profile to launch the instance with. See Instance Profile
	// below for more details.
	IamInstanceProfile *LaunchTemplateIamInstanceProfile `pulumi:"iamInstanceProfile"`
	// The AMI from which to launch the instance.
	ImageId *string `pulumi:"imageId"`
	// Shutdown behavior for the instance. Can be `stop` or `terminate`.
	// (Default: `stop`).
	InstanceInitiatedShutdownBehavior *string `pulumi:"instanceInitiatedShutdownBehavior"`
	// The market (purchasing) option for the instance. See Market Options
	// below for details.
	InstanceMarketOptions *LaunchTemplateInstanceMarketOptions `pulumi:"instanceMarketOptions"`
	// The attribute requirements for the type of instance. If present then `instanceType` cannot be present.
	InstanceRequirements *LaunchTemplateInstanceRequirements `pulumi:"instanceRequirements"`
	// The type of the instance. If present then `instanceRequirements` cannot be present.
	InstanceType *string `pulumi:"instanceType"`
	// The kernel ID.
	KernelId *string `pulumi:"kernelId"`
	// The key name to use for the instance.
	KeyName *string `pulumi:"keyName"`
	// A list of license specifications to associate with. See License Specification below for more details.
	LicenseSpecifications []LaunchTemplateLicenseSpecification `pulumi:"licenseSpecifications"`
	// The maintenance options for the instance. See Maintenance Options below for more details.
	MaintenanceOptions *LaunchTemplateMaintenanceOptions `pulumi:"maintenanceOptions"`
	// Customize the metadata options for the instance. See Metadata Options below for more details.
	MetadataOptions *LaunchTemplateMetadataOptions `pulumi:"metadataOptions"`
	// The monitoring option for the instance. See Monitoring below for more details.
	Monitoring *LaunchTemplateMonitoring `pulumi:"monitoring"`
	// The name of the launch template. If you leave this blank, the provider will auto-generate a unique name.
	Name *string `pulumi:"name"`
	// Creates a unique name beginning with the specified prefix. Conflicts with `name`.
	NamePrefix *string `pulumi:"namePrefix"`
	// Customize network interfaces to be attached at instance boot time. See Network
	// Interfaces below for more details.
	NetworkInterfaces []LaunchTemplateNetworkInterface `pulumi:"networkInterfaces"`
	// The placement of the instance. See Placement below for more details.
	Placement *LaunchTemplatePlacement `pulumi:"placement"`
	// The options for the instance hostname. The default values are inherited from the subnet. See Private DNS Name Options below for more details.
	PrivateDnsNameOptions *LaunchTemplatePrivateDnsNameOptions `pulumi:"privateDnsNameOptions"`
	// The ID of the RAM disk.
	RamDiskId *string `pulumi:"ramDiskId"`
	// A list of security group names to associate with. If you are creating Instances in a VPC, use
	// `vpcSecurityGroupIds` instead.
	SecurityGroupNames []string `pulumi:"securityGroupNames"`
	// The tags to apply to the resources during launch. See Tag Specifications below for more details.
	TagSpecifications []LaunchTemplateTagSpecification `pulumi:"tagSpecifications"`
	// A map of tags to assign to the launch template. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Whether to update Default Version each update. Conflicts with `defaultVersion`.
	UpdateDefaultVersion *bool `pulumi:"updateDefaultVersion"`
	// The base64-encoded user data to provide when launching the instance.
	UserData *string `pulumi:"userData"`
	// A list of security group IDs to associate with. Conflicts with `network_interfaces.security_groups`
	VpcSecurityGroupIds []string `pulumi:"vpcSecurityGroupIds"`
}

// The set of arguments for constructing a LaunchTemplate resource.
type LaunchTemplateArgs struct {
	// Specify volumes to attach to the instance besides the volumes specified by the AMI.
	// See Block Devices below for details.
	BlockDeviceMappings LaunchTemplateBlockDeviceMappingArrayInput
	// Targeting for EC2 capacity reservations. See Capacity Reservation Specification below for more details.
	CapacityReservationSpecification LaunchTemplateCapacityReservationSpecificationPtrInput
	// The CPU options for the instance. See CPU Options below for more details.
	CpuOptions LaunchTemplateCpuOptionsPtrInput
	// Customize the credit specification of the instance. See Credit
	// Specification below for more details.
	CreditSpecification LaunchTemplateCreditSpecificationPtrInput
	// Default Version of the launch template.
	DefaultVersion pulumi.IntPtrInput
	// Description of the launch template.
	Description pulumi.StringPtrInput
	// If true, enables [EC2 Instance Stop Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html#Using_StopProtection).
	DisableApiStop pulumi.BoolPtrInput
	// If `true`, enables [EC2 Instance
	// Termination Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination)
	DisableApiTermination pulumi.BoolPtrInput
	// If `true`, the launched EC2 instance will be EBS-optimized.
	EbsOptimized pulumi.StringPtrInput
	// The elastic GPU to attach to the instance. See Elastic GPU
	// below for more details.
	ElasticGpuSpecifications LaunchTemplateElasticGpuSpecificationArrayInput
	// Configuration block containing an Elastic Inference Accelerator to attach to the instance. See Elastic Inference Accelerator below for more details.
	ElasticInferenceAccelerator LaunchTemplateElasticInferenceAcceleratorPtrInput
	// Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.
	EnclaveOptions LaunchTemplateEnclaveOptionsPtrInput
	// The hibernation options for the instance. See Hibernation Options below for more details.
	HibernationOptions LaunchTemplateHibernationOptionsPtrInput
	// The IAM Instance Profile to launch the instance with. See Instance Profile
	// below for more details.
	IamInstanceProfile LaunchTemplateIamInstanceProfilePtrInput
	// The AMI from which to launch the instance.
	ImageId pulumi.StringPtrInput
	// Shutdown behavior for the instance. Can be `stop` or `terminate`.
	// (Default: `stop`).
	InstanceInitiatedShutdownBehavior pulumi.StringPtrInput
	// The market (purchasing) option for the instance. See Market Options
	// below for details.
	InstanceMarketOptions LaunchTemplateInstanceMarketOptionsPtrInput
	// The attribute requirements for the type of instance. If present then `instanceType` cannot be present.
	InstanceRequirements LaunchTemplateInstanceRequirementsPtrInput
	// The type of the instance. If present then `instanceRequirements` cannot be present.
	InstanceType pulumi.StringPtrInput
	// The kernel ID.
	KernelId pulumi.StringPtrInput
	// The key name to use for the instance.
	KeyName pulumi.StringPtrInput
	// A list of license specifications to associate with. See License Specification below for more details.
	LicenseSpecifications LaunchTemplateLicenseSpecificationArrayInput
	// The maintenance options for the instance. See Maintenance Options below for more details.
	MaintenanceOptions LaunchTemplateMaintenanceOptionsPtrInput
	// Customize the metadata options for the instance. See Metadata Options below for more details.
	MetadataOptions LaunchTemplateMetadataOptionsPtrInput
	// The monitoring option for the instance. See Monitoring below for more details.
	Monitoring LaunchTemplateMonitoringPtrInput
	// The name of the launch template. If you leave this blank, the provider will auto-generate a unique name.
	Name pulumi.StringPtrInput
	// Creates a unique name beginning with the specified prefix. Conflicts with `name`.
	NamePrefix pulumi.StringPtrInput
	// Customize network interfaces to be attached at instance boot time. See Network
	// Interfaces below for more details.
	NetworkInterfaces LaunchTemplateNetworkInterfaceArrayInput
	// The placement of the instance. See Placement below for more details.
	Placement LaunchTemplatePlacementPtrInput
	// The options for the instance hostname. The default values are inherited from the subnet. See Private DNS Name Options below for more details.
	PrivateDnsNameOptions LaunchTemplatePrivateDnsNameOptionsPtrInput
	// The ID of the RAM disk.
	RamDiskId pulumi.StringPtrInput
	// A list of security group names to associate with. If you are creating Instances in a VPC, use
	// `vpcSecurityGroupIds` instead.
	SecurityGroupNames pulumi.StringArrayInput
	// The tags to apply to the resources during launch. See Tag Specifications below for more details.
	TagSpecifications LaunchTemplateTagSpecificationArrayInput
	// A map of tags to assign to the launch template. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// Whether to update Default Version each update. Conflicts with `defaultVersion`.
	UpdateDefaultVersion pulumi.BoolPtrInput
	// The base64-encoded user data to provide when launching the instance.
	UserData pulumi.StringPtrInput
	// A list of security group IDs to associate with. Conflicts with `network_interfaces.security_groups`
	VpcSecurityGroupIds pulumi.StringArrayInput
}

func (LaunchTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*launchTemplateArgs)(nil)).Elem()
}

type LaunchTemplateInput interface {
	pulumi.Input

	ToLaunchTemplateOutput() LaunchTemplateOutput
	ToLaunchTemplateOutputWithContext(ctx context.Context) LaunchTemplateOutput
}

func (*LaunchTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplate)(nil)).Elem()
}

func (i *LaunchTemplate) ToLaunchTemplateOutput() LaunchTemplateOutput {
	return i.ToLaunchTemplateOutputWithContext(context.Background())
}

func (i *LaunchTemplate) ToLaunchTemplateOutputWithContext(ctx context.Context) LaunchTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateOutput)
}

// LaunchTemplateArrayInput is an input type that accepts LaunchTemplateArray and LaunchTemplateArrayOutput values.
// You can construct a concrete instance of `LaunchTemplateArrayInput` via:
//
//	LaunchTemplateArray{ LaunchTemplateArgs{...} }
type LaunchTemplateArrayInput interface {
	pulumi.Input

	ToLaunchTemplateArrayOutput() LaunchTemplateArrayOutput
	ToLaunchTemplateArrayOutputWithContext(context.Context) LaunchTemplateArrayOutput
}

type LaunchTemplateArray []LaunchTemplateInput

func (LaunchTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LaunchTemplate)(nil)).Elem()
}

func (i LaunchTemplateArray) ToLaunchTemplateArrayOutput() LaunchTemplateArrayOutput {
	return i.ToLaunchTemplateArrayOutputWithContext(context.Background())
}

func (i LaunchTemplateArray) ToLaunchTemplateArrayOutputWithContext(ctx context.Context) LaunchTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateArrayOutput)
}

// LaunchTemplateMapInput is an input type that accepts LaunchTemplateMap and LaunchTemplateMapOutput values.
// You can construct a concrete instance of `LaunchTemplateMapInput` via:
//
//	LaunchTemplateMap{ "key": LaunchTemplateArgs{...} }
type LaunchTemplateMapInput interface {
	pulumi.Input

	ToLaunchTemplateMapOutput() LaunchTemplateMapOutput
	ToLaunchTemplateMapOutputWithContext(context.Context) LaunchTemplateMapOutput
}

type LaunchTemplateMap map[string]LaunchTemplateInput

func (LaunchTemplateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LaunchTemplate)(nil)).Elem()
}

func (i LaunchTemplateMap) ToLaunchTemplateMapOutput() LaunchTemplateMapOutput {
	return i.ToLaunchTemplateMapOutputWithContext(context.Background())
}

func (i LaunchTemplateMap) ToLaunchTemplateMapOutputWithContext(ctx context.Context) LaunchTemplateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateMapOutput)
}

type LaunchTemplateOutput struct{ *pulumi.OutputState }

func (LaunchTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplate)(nil)).Elem()
}

func (o LaunchTemplateOutput) ToLaunchTemplateOutput() LaunchTemplateOutput {
	return o
}

func (o LaunchTemplateOutput) ToLaunchTemplateOutputWithContext(ctx context.Context) LaunchTemplateOutput {
	return o
}

// The Amazon Resource Name (ARN) of the instance profile. Conflicts with `name`.
func (o LaunchTemplateOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *LaunchTemplate) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// Specify volumes to attach to the instance besides the volumes specified by the AMI.
// See Block Devices below for details.
func (o LaunchTemplateOutput) BlockDeviceMappings() LaunchTemplateBlockDeviceMappingArrayOutput {
	return o.ApplyT(func(v *LaunchTemplate) LaunchTemplateBlockDeviceMappingArrayOutput { return v.BlockDeviceMappings }).(LaunchTemplateBlockDeviceMappingArrayOutput)
}

// Targeting for EC2 capacity reservations. See Capacity Reservation Specification below for more details.
func (o LaunchTemplateOutput) CapacityReservationSpecification() LaunchTemplateCapacityReservationSpecificationPtrOutput {
	return o.ApplyT(func(v *LaunchTemplate) LaunchTemplateCapacityReservationSpecificationPtrOutput {
		return v.CapacityReservationSpecification
	}).(LaunchTemplateCapacityReservationSpecificationPtrOutput)
}

// The CPU options for the instance. See CPU Options below for more details.
func (o LaunchTemplateOutput) CpuOptions() LaunchTemplateCpuOptionsPtrOutput {
	return o.ApplyT(func(v *LaunchTemplate) LaunchTemplateCpuOptionsPtrOutput { return v.CpuOptions }).(LaunchTemplateCpuOptionsPtrOutput)
}

// Customize the credit specification of the instance. See Credit
// Specification below for more details.
func (o LaunchTemplateOutput) CreditSpecification() LaunchTemplateCreditSpecificationPtrOutput {
	return o.ApplyT(func(v *LaunchTemplate) LaunchTemplateCreditSpecificationPtrOutput { return v.CreditSpecification }).(LaunchTemplateCreditSpecificationPtrOutput)
}

// Default Version of the launch template.
func (o LaunchTemplateOutput) DefaultVersion() pulumi.IntOutput {
	return o.ApplyT(func(v *LaunchTemplate) pulumi.IntOutput { return v.DefaultVersion }).(pulumi.IntOutput)
}

// Description of the launch template.
func (o LaunchTemplateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LaunchTemplate) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// If true, enables [EC2 Instance Stop Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html#Using_StopProtection).
func (o LaunchTemplateOutput) DisableApiStop() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LaunchTemplate) pulumi.BoolPtrOutput { return v.DisableApiStop }).(pulumi.BoolPtrOutput)
}

// If `true`, enables [EC2 Instance
// Termination Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination)
func (o LaunchTemplateOutput) DisableApiTermination() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LaunchTemplate) pulumi.BoolPtrOutput { return v.DisableApiTermination }).(pulumi.BoolPtrOutput)
}

// If `true`, the launched EC2 instance will be EBS-optimized.
func (o LaunchTemplateOutput) EbsOptimized() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LaunchTemplate) pulumi.StringPtrOutput { return v.EbsOptimized }).(pulumi.StringPtrOutput)
}

// The elastic GPU to attach to the instance. See Elastic GPU
// below for more details.
func (o LaunchTemplateOutput) ElasticGpuSpecifications() LaunchTemplateElasticGpuSpecificationArrayOutput {
	return o.ApplyT(func(v *LaunchTemplate) LaunchTemplateElasticGpuSpecificationArrayOutput {
		return v.ElasticGpuSpecifications
	}).(LaunchTemplateElasticGpuSpecificationArrayOutput)
}

// Configuration block containing an Elastic Inference Accelerator to attach to the instance. See Elastic Inference Accelerator below for more details.
func (o LaunchTemplateOutput) ElasticInferenceAccelerator() LaunchTemplateElasticInferenceAcceleratorPtrOutput {
	return o.ApplyT(func(v *LaunchTemplate) LaunchTemplateElasticInferenceAcceleratorPtrOutput {
		return v.ElasticInferenceAccelerator
	}).(LaunchTemplateElasticInferenceAcceleratorPtrOutput)
}

// Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.
func (o LaunchTemplateOutput) EnclaveOptions() LaunchTemplateEnclaveOptionsPtrOutput {
	return o.ApplyT(func(v *LaunchTemplate) LaunchTemplateEnclaveOptionsPtrOutput { return v.EnclaveOptions }).(LaunchTemplateEnclaveOptionsPtrOutput)
}

// The hibernation options for the instance. See Hibernation Options below for more details.
func (o LaunchTemplateOutput) HibernationOptions() LaunchTemplateHibernationOptionsPtrOutput {
	return o.ApplyT(func(v *LaunchTemplate) LaunchTemplateHibernationOptionsPtrOutput { return v.HibernationOptions }).(LaunchTemplateHibernationOptionsPtrOutput)
}

// The IAM Instance Profile to launch the instance with. See Instance Profile
// below for more details.
func (o LaunchTemplateOutput) IamInstanceProfile() LaunchTemplateIamInstanceProfilePtrOutput {
	return o.ApplyT(func(v *LaunchTemplate) LaunchTemplateIamInstanceProfilePtrOutput { return v.IamInstanceProfile }).(LaunchTemplateIamInstanceProfilePtrOutput)
}

// The AMI from which to launch the instance.
func (o LaunchTemplateOutput) ImageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LaunchTemplate) pulumi.StringPtrOutput { return v.ImageId }).(pulumi.StringPtrOutput)
}

// Shutdown behavior for the instance. Can be `stop` or `terminate`.
// (Default: `stop`).
func (o LaunchTemplateOutput) InstanceInitiatedShutdownBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LaunchTemplate) pulumi.StringPtrOutput { return v.InstanceInitiatedShutdownBehavior }).(pulumi.StringPtrOutput)
}

// The market (purchasing) option for the instance. See Market Options
// below for details.
func (o LaunchTemplateOutput) InstanceMarketOptions() LaunchTemplateInstanceMarketOptionsPtrOutput {
	return o.ApplyT(func(v *LaunchTemplate) LaunchTemplateInstanceMarketOptionsPtrOutput { return v.InstanceMarketOptions }).(LaunchTemplateInstanceMarketOptionsPtrOutput)
}

// The attribute requirements for the type of instance. If present then `instanceType` cannot be present.
func (o LaunchTemplateOutput) InstanceRequirements() LaunchTemplateInstanceRequirementsPtrOutput {
	return o.ApplyT(func(v *LaunchTemplate) LaunchTemplateInstanceRequirementsPtrOutput { return v.InstanceRequirements }).(LaunchTemplateInstanceRequirementsPtrOutput)
}

// The type of the instance. If present then `instanceRequirements` cannot be present.
func (o LaunchTemplateOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LaunchTemplate) pulumi.StringPtrOutput { return v.InstanceType }).(pulumi.StringPtrOutput)
}

// The kernel ID.
func (o LaunchTemplateOutput) KernelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LaunchTemplate) pulumi.StringPtrOutput { return v.KernelId }).(pulumi.StringPtrOutput)
}

// The key name to use for the instance.
func (o LaunchTemplateOutput) KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LaunchTemplate) pulumi.StringPtrOutput { return v.KeyName }).(pulumi.StringPtrOutput)
}

// The latest version of the launch template.
func (o LaunchTemplateOutput) LatestVersion() pulumi.IntOutput {
	return o.ApplyT(func(v *LaunchTemplate) pulumi.IntOutput { return v.LatestVersion }).(pulumi.IntOutput)
}

// A list of license specifications to associate with. See License Specification below for more details.
func (o LaunchTemplateOutput) LicenseSpecifications() LaunchTemplateLicenseSpecificationArrayOutput {
	return o.ApplyT(func(v *LaunchTemplate) LaunchTemplateLicenseSpecificationArrayOutput { return v.LicenseSpecifications }).(LaunchTemplateLicenseSpecificationArrayOutput)
}

// The maintenance options for the instance. See Maintenance Options below for more details.
func (o LaunchTemplateOutput) MaintenanceOptions() LaunchTemplateMaintenanceOptionsPtrOutput {
	return o.ApplyT(func(v *LaunchTemplate) LaunchTemplateMaintenanceOptionsPtrOutput { return v.MaintenanceOptions }).(LaunchTemplateMaintenanceOptionsPtrOutput)
}

// Customize the metadata options for the instance. See Metadata Options below for more details.
func (o LaunchTemplateOutput) MetadataOptions() LaunchTemplateMetadataOptionsOutput {
	return o.ApplyT(func(v *LaunchTemplate) LaunchTemplateMetadataOptionsOutput { return v.MetadataOptions }).(LaunchTemplateMetadataOptionsOutput)
}

// The monitoring option for the instance. See Monitoring below for more details.
func (o LaunchTemplateOutput) Monitoring() LaunchTemplateMonitoringPtrOutput {
	return o.ApplyT(func(v *LaunchTemplate) LaunchTemplateMonitoringPtrOutput { return v.Monitoring }).(LaunchTemplateMonitoringPtrOutput)
}

// The name of the launch template. If you leave this blank, the provider will auto-generate a unique name.
func (o LaunchTemplateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *LaunchTemplate) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Creates a unique name beginning with the specified prefix. Conflicts with `name`.
func (o LaunchTemplateOutput) NamePrefix() pulumi.StringOutput {
	return o.ApplyT(func(v *LaunchTemplate) pulumi.StringOutput { return v.NamePrefix }).(pulumi.StringOutput)
}

// Customize network interfaces to be attached at instance boot time. See Network
// Interfaces below for more details.
func (o LaunchTemplateOutput) NetworkInterfaces() LaunchTemplateNetworkInterfaceArrayOutput {
	return o.ApplyT(func(v *LaunchTemplate) LaunchTemplateNetworkInterfaceArrayOutput { return v.NetworkInterfaces }).(LaunchTemplateNetworkInterfaceArrayOutput)
}

// The placement of the instance. See Placement below for more details.
func (o LaunchTemplateOutput) Placement() LaunchTemplatePlacementPtrOutput {
	return o.ApplyT(func(v *LaunchTemplate) LaunchTemplatePlacementPtrOutput { return v.Placement }).(LaunchTemplatePlacementPtrOutput)
}

// The options for the instance hostname. The default values are inherited from the subnet. See Private DNS Name Options below for more details.
func (o LaunchTemplateOutput) PrivateDnsNameOptions() LaunchTemplatePrivateDnsNameOptionsPtrOutput {
	return o.ApplyT(func(v *LaunchTemplate) LaunchTemplatePrivateDnsNameOptionsPtrOutput { return v.PrivateDnsNameOptions }).(LaunchTemplatePrivateDnsNameOptionsPtrOutput)
}

// The ID of the RAM disk.
func (o LaunchTemplateOutput) RamDiskId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LaunchTemplate) pulumi.StringPtrOutput { return v.RamDiskId }).(pulumi.StringPtrOutput)
}

// A list of security group names to associate with. If you are creating Instances in a VPC, use
// `vpcSecurityGroupIds` instead.
func (o LaunchTemplateOutput) SecurityGroupNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LaunchTemplate) pulumi.StringArrayOutput { return v.SecurityGroupNames }).(pulumi.StringArrayOutput)
}

// The tags to apply to the resources during launch. See Tag Specifications below for more details.
func (o LaunchTemplateOutput) TagSpecifications() LaunchTemplateTagSpecificationArrayOutput {
	return o.ApplyT(func(v *LaunchTemplate) LaunchTemplateTagSpecificationArrayOutput { return v.TagSpecifications }).(LaunchTemplateTagSpecificationArrayOutput)
}

// A map of tags to assign to the launch template. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o LaunchTemplateOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LaunchTemplate) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
//
// Deprecated: Please use `tags` instead.
func (o LaunchTemplateOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LaunchTemplate) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

// Whether to update Default Version each update. Conflicts with `defaultVersion`.
func (o LaunchTemplateOutput) UpdateDefaultVersion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LaunchTemplate) pulumi.BoolPtrOutput { return v.UpdateDefaultVersion }).(pulumi.BoolPtrOutput)
}

// The base64-encoded user data to provide when launching the instance.
func (o LaunchTemplateOutput) UserData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LaunchTemplate) pulumi.StringPtrOutput { return v.UserData }).(pulumi.StringPtrOutput)
}

// A list of security group IDs to associate with. Conflicts with `network_interfaces.security_groups`
func (o LaunchTemplateOutput) VpcSecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LaunchTemplate) pulumi.StringArrayOutput { return v.VpcSecurityGroupIds }).(pulumi.StringArrayOutput)
}

type LaunchTemplateArrayOutput struct{ *pulumi.OutputState }

func (LaunchTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LaunchTemplate)(nil)).Elem()
}

func (o LaunchTemplateArrayOutput) ToLaunchTemplateArrayOutput() LaunchTemplateArrayOutput {
	return o
}

func (o LaunchTemplateArrayOutput) ToLaunchTemplateArrayOutputWithContext(ctx context.Context) LaunchTemplateArrayOutput {
	return o
}

func (o LaunchTemplateArrayOutput) Index(i pulumi.IntInput) LaunchTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LaunchTemplate {
		return vs[0].([]*LaunchTemplate)[vs[1].(int)]
	}).(LaunchTemplateOutput)
}

type LaunchTemplateMapOutput struct{ *pulumi.OutputState }

func (LaunchTemplateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LaunchTemplate)(nil)).Elem()
}

func (o LaunchTemplateMapOutput) ToLaunchTemplateMapOutput() LaunchTemplateMapOutput {
	return o
}

func (o LaunchTemplateMapOutput) ToLaunchTemplateMapOutputWithContext(ctx context.Context) LaunchTemplateMapOutput {
	return o
}

func (o LaunchTemplateMapOutput) MapIndex(k pulumi.StringInput) LaunchTemplateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LaunchTemplate {
		return vs[0].(map[string]*LaunchTemplate)[vs[1].(string)]
	}).(LaunchTemplateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LaunchTemplateInput)(nil)).Elem(), &LaunchTemplate{})
	pulumi.RegisterInputType(reflect.TypeOf((*LaunchTemplateArrayInput)(nil)).Elem(), LaunchTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LaunchTemplateMapInput)(nil)).Elem(), LaunchTemplateMap{})
	pulumi.RegisterOutputType(LaunchTemplateOutput{})
	pulumi.RegisterOutputType(LaunchTemplateArrayOutput{})
	pulumi.RegisterOutputType(LaunchTemplateMapOutput{})
}
