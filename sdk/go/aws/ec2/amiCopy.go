// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The "AMI copy" resource allows duplication of an Amazon Machine Image (AMI),
// including cross-region copies.
//
// If the source AMI has associated EBS snapshots, those will also be duplicated
// along with the AMI.
//
// This is useful for taking a single AMI provisioned in one region and making
// it available in another for a multi-region deployment.
//
// Copying an AMI can take several minutes. The creation of this resource will
// block until the new AMI is available for use on new instances.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/ec2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ec2.NewAmiCopy(ctx, "example", &ec2.AmiCopyArgs{
//				Description:     pulumi.String("A copy of ami-xxxxxxxx"),
//				SourceAmiId:     pulumi.String("ami-xxxxxxxx"),
//				SourceAmiRegion: pulumi.String("us-west-1"),
//				Tags: pulumi.StringMap{
//					"Name": pulumi.String("HelloWorld"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type AmiCopy struct {
	pulumi.CustomResourceState

	// Machine architecture for created instances. Defaults to "x8664".
	Architecture pulumi.StringOutput `pulumi:"architecture"`
	// ARN of the AMI.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// Boot mode of the AMI. For more information, see [Boot modes](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html) in the Amazon Elastic Compute Cloud User Guide.
	BootMode pulumi.StringOutput `pulumi:"bootMode"`
	// Date and time to deprecate the AMI. If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
	DeprecationTime pulumi.StringPtrOutput `pulumi:"deprecationTime"`
	// Longer, human-readable description for the AMI.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// ARN of the Outpost to which to copy the AMI.
	// Only specify this parameter when copying an AMI from an AWS Region to an Outpost. The AMI must be in the Region of the destination Outpost.
	DestinationOutpostArn pulumi.StringPtrOutput `pulumi:"destinationOutpostArn"`
	// Nested block describing an EBS block device that should be
	// attached to created instances. The structure of this block is described below.
	EbsBlockDevices AmiCopyEbsBlockDeviceArrayOutput `pulumi:"ebsBlockDevices"`
	// Whether enhanced networking with ENA is enabled. Defaults to `false`.
	EnaSupport pulumi.BoolOutput `pulumi:"enaSupport"`
	// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
	Encrypted pulumi.BoolPtrOutput `pulumi:"encrypted"`
	// Nested block describing an ephemeral block device that
	// should be attached to created instances. The structure of this block is described below.
	EphemeralBlockDevices AmiCopyEphemeralBlockDeviceArrayOutput `pulumi:"ephemeralBlockDevices"`
	Hypervisor            pulumi.StringOutput                    `pulumi:"hypervisor"`
	// Path to an S3 object containing an image manifest, e.g., created
	// by the `ec2-upload-bundle` command in the EC2 command line tools.
	ImageLocation   pulumi.StringOutput `pulumi:"imageLocation"`
	ImageOwnerAlias pulumi.StringOutput `pulumi:"imageOwnerAlias"`
	ImageType       pulumi.StringOutput `pulumi:"imageType"`
	// ID of the kernel image (AKI) that will be used as the paravirtual
	// kernel in created instances.
	KernelId pulumi.StringOutput `pulumi:"kernelId"`
	// Full ARN of the AWS Key Management Service (AWS KMS) CMK to use when encrypting the snapshots of
	// an image during a copy operation. This parameter is only required if you want to use a non-default CMK;
	// if this parameter is not specified, the default CMK for EBS is used
	KmsKeyId           pulumi.StringOutput `pulumi:"kmsKeyId"`
	ManageEbsSnapshots pulumi.BoolOutput   `pulumi:"manageEbsSnapshots"`
	// Region-unique name for the AMI.
	Name            pulumi.StringOutput `pulumi:"name"`
	OwnerId         pulumi.StringOutput `pulumi:"ownerId"`
	Platform        pulumi.StringOutput `pulumi:"platform"`
	PlatformDetails pulumi.StringOutput `pulumi:"platformDetails"`
	Public          pulumi.BoolOutput   `pulumi:"public"`
	// ID of an initrd image (ARI) that will be used when booting the
	// created instances.
	RamdiskId pulumi.StringOutput `pulumi:"ramdiskId"`
	// Name of the root device (for example, `/dev/sda1`, or `/dev/xvda`).
	RootDeviceName pulumi.StringOutput `pulumi:"rootDeviceName"`
	RootSnapshotId pulumi.StringOutput `pulumi:"rootSnapshotId"`
	// Id of the AMI to copy. This id must be valid in the region
	// given by `sourceAmiRegion`.
	SourceAmiId pulumi.StringOutput `pulumi:"sourceAmiId"`
	// Region from which the AMI will be copied. This may be the
	// same as the AWS provider region in order to create a copy within the same region.
	SourceAmiRegion pulumi.StringOutput `pulumi:"sourceAmiRegion"`
	// When set to "simple" (the default), enables enhanced networking
	// for created instances. No other value is supported at this time.
	SriovNetSupport pulumi.StringOutput `pulumi:"sriovNetSupport"`
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags    pulumi.StringMapOutput `pulumi:"tags"`
	TagsAll pulumi.StringMapOutput `pulumi:"tagsAll"`
	// If the image is configured for NitroTPM support, the value is `v2.0`. For more information, see [NitroTPM](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nitrotpm.html) in the Amazon Elastic Compute Cloud User Guide.
	TpmSupport     pulumi.StringOutput `pulumi:"tpmSupport"`
	UsageOperation pulumi.StringOutput `pulumi:"usageOperation"`
	// Keyword to choose what virtualization mode created instances
	// will use. Can be either "paravirtual" (the default) or "hvm". The choice of virtualization type
	// changes the set of further arguments that are required, as described below.
	VirtualizationType pulumi.StringOutput `pulumi:"virtualizationType"`
}

// NewAmiCopy registers a new resource with the given unique name, arguments, and options.
func NewAmiCopy(ctx *pulumi.Context,
	name string, args *AmiCopyArgs, opts ...pulumi.ResourceOption) (*AmiCopy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SourceAmiId == nil {
		return nil, errors.New("invalid value for required argument 'SourceAmiId'")
	}
	if args.SourceAmiRegion == nil {
		return nil, errors.New("invalid value for required argument 'SourceAmiRegion'")
	}
	var resource AmiCopy
	err := ctx.RegisterResource("aws:ec2/amiCopy:AmiCopy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAmiCopy gets an existing AmiCopy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAmiCopy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AmiCopyState, opts ...pulumi.ResourceOption) (*AmiCopy, error) {
	var resource AmiCopy
	err := ctx.ReadResource("aws:ec2/amiCopy:AmiCopy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AmiCopy resources.
type amiCopyState struct {
	// Machine architecture for created instances. Defaults to "x8664".
	Architecture *string `pulumi:"architecture"`
	// ARN of the AMI.
	Arn *string `pulumi:"arn"`
	// Boot mode of the AMI. For more information, see [Boot modes](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html) in the Amazon Elastic Compute Cloud User Guide.
	BootMode *string `pulumi:"bootMode"`
	// Date and time to deprecate the AMI. If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
	DeprecationTime *string `pulumi:"deprecationTime"`
	// Longer, human-readable description for the AMI.
	Description *string `pulumi:"description"`
	// ARN of the Outpost to which to copy the AMI.
	// Only specify this parameter when copying an AMI from an AWS Region to an Outpost. The AMI must be in the Region of the destination Outpost.
	DestinationOutpostArn *string `pulumi:"destinationOutpostArn"`
	// Nested block describing an EBS block device that should be
	// attached to created instances. The structure of this block is described below.
	EbsBlockDevices []AmiCopyEbsBlockDevice `pulumi:"ebsBlockDevices"`
	// Whether enhanced networking with ENA is enabled. Defaults to `false`.
	EnaSupport *bool `pulumi:"enaSupport"`
	// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
	Encrypted *bool `pulumi:"encrypted"`
	// Nested block describing an ephemeral block device that
	// should be attached to created instances. The structure of this block is described below.
	EphemeralBlockDevices []AmiCopyEphemeralBlockDevice `pulumi:"ephemeralBlockDevices"`
	Hypervisor            *string                       `pulumi:"hypervisor"`
	// Path to an S3 object containing an image manifest, e.g., created
	// by the `ec2-upload-bundle` command in the EC2 command line tools.
	ImageLocation   *string `pulumi:"imageLocation"`
	ImageOwnerAlias *string `pulumi:"imageOwnerAlias"`
	ImageType       *string `pulumi:"imageType"`
	// ID of the kernel image (AKI) that will be used as the paravirtual
	// kernel in created instances.
	KernelId *string `pulumi:"kernelId"`
	// Full ARN of the AWS Key Management Service (AWS KMS) CMK to use when encrypting the snapshots of
	// an image during a copy operation. This parameter is only required if you want to use a non-default CMK;
	// if this parameter is not specified, the default CMK for EBS is used
	KmsKeyId           *string `pulumi:"kmsKeyId"`
	ManageEbsSnapshots *bool   `pulumi:"manageEbsSnapshots"`
	// Region-unique name for the AMI.
	Name            *string `pulumi:"name"`
	OwnerId         *string `pulumi:"ownerId"`
	Platform        *string `pulumi:"platform"`
	PlatformDetails *string `pulumi:"platformDetails"`
	Public          *bool   `pulumi:"public"`
	// ID of an initrd image (ARI) that will be used when booting the
	// created instances.
	RamdiskId *string `pulumi:"ramdiskId"`
	// Name of the root device (for example, `/dev/sda1`, or `/dev/xvda`).
	RootDeviceName *string `pulumi:"rootDeviceName"`
	RootSnapshotId *string `pulumi:"rootSnapshotId"`
	// Id of the AMI to copy. This id must be valid in the region
	// given by `sourceAmiRegion`.
	SourceAmiId *string `pulumi:"sourceAmiId"`
	// Region from which the AMI will be copied. This may be the
	// same as the AWS provider region in order to create a copy within the same region.
	SourceAmiRegion *string `pulumi:"sourceAmiRegion"`
	// When set to "simple" (the default), enables enhanced networking
	// for created instances. No other value is supported at this time.
	SriovNetSupport *string `pulumi:"sriovNetSupport"`
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags    map[string]string `pulumi:"tags"`
	TagsAll map[string]string `pulumi:"tagsAll"`
	// If the image is configured for NitroTPM support, the value is `v2.0`. For more information, see [NitroTPM](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nitrotpm.html) in the Amazon Elastic Compute Cloud User Guide.
	TpmSupport     *string `pulumi:"tpmSupport"`
	UsageOperation *string `pulumi:"usageOperation"`
	// Keyword to choose what virtualization mode created instances
	// will use. Can be either "paravirtual" (the default) or "hvm". The choice of virtualization type
	// changes the set of further arguments that are required, as described below.
	VirtualizationType *string `pulumi:"virtualizationType"`
}

type AmiCopyState struct {
	// Machine architecture for created instances. Defaults to "x8664".
	Architecture pulumi.StringPtrInput
	// ARN of the AMI.
	Arn pulumi.StringPtrInput
	// Boot mode of the AMI. For more information, see [Boot modes](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html) in the Amazon Elastic Compute Cloud User Guide.
	BootMode pulumi.StringPtrInput
	// Date and time to deprecate the AMI. If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
	DeprecationTime pulumi.StringPtrInput
	// Longer, human-readable description for the AMI.
	Description pulumi.StringPtrInput
	// ARN of the Outpost to which to copy the AMI.
	// Only specify this parameter when copying an AMI from an AWS Region to an Outpost. The AMI must be in the Region of the destination Outpost.
	DestinationOutpostArn pulumi.StringPtrInput
	// Nested block describing an EBS block device that should be
	// attached to created instances. The structure of this block is described below.
	EbsBlockDevices AmiCopyEbsBlockDeviceArrayInput
	// Whether enhanced networking with ENA is enabled. Defaults to `false`.
	EnaSupport pulumi.BoolPtrInput
	// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
	Encrypted pulumi.BoolPtrInput
	// Nested block describing an ephemeral block device that
	// should be attached to created instances. The structure of this block is described below.
	EphemeralBlockDevices AmiCopyEphemeralBlockDeviceArrayInput
	Hypervisor            pulumi.StringPtrInput
	// Path to an S3 object containing an image manifest, e.g., created
	// by the `ec2-upload-bundle` command in the EC2 command line tools.
	ImageLocation   pulumi.StringPtrInput
	ImageOwnerAlias pulumi.StringPtrInput
	ImageType       pulumi.StringPtrInput
	// ID of the kernel image (AKI) that will be used as the paravirtual
	// kernel in created instances.
	KernelId pulumi.StringPtrInput
	// Full ARN of the AWS Key Management Service (AWS KMS) CMK to use when encrypting the snapshots of
	// an image during a copy operation. This parameter is only required if you want to use a non-default CMK;
	// if this parameter is not specified, the default CMK for EBS is used
	KmsKeyId           pulumi.StringPtrInput
	ManageEbsSnapshots pulumi.BoolPtrInput
	// Region-unique name for the AMI.
	Name            pulumi.StringPtrInput
	OwnerId         pulumi.StringPtrInput
	Platform        pulumi.StringPtrInput
	PlatformDetails pulumi.StringPtrInput
	Public          pulumi.BoolPtrInput
	// ID of an initrd image (ARI) that will be used when booting the
	// created instances.
	RamdiskId pulumi.StringPtrInput
	// Name of the root device (for example, `/dev/sda1`, or `/dev/xvda`).
	RootDeviceName pulumi.StringPtrInput
	RootSnapshotId pulumi.StringPtrInput
	// Id of the AMI to copy. This id must be valid in the region
	// given by `sourceAmiRegion`.
	SourceAmiId pulumi.StringPtrInput
	// Region from which the AMI will be copied. This may be the
	// same as the AWS provider region in order to create a copy within the same region.
	SourceAmiRegion pulumi.StringPtrInput
	// When set to "simple" (the default), enables enhanced networking
	// for created instances. No other value is supported at this time.
	SriovNetSupport pulumi.StringPtrInput
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags    pulumi.StringMapInput
	TagsAll pulumi.StringMapInput
	// If the image is configured for NitroTPM support, the value is `v2.0`. For more information, see [NitroTPM](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nitrotpm.html) in the Amazon Elastic Compute Cloud User Guide.
	TpmSupport     pulumi.StringPtrInput
	UsageOperation pulumi.StringPtrInput
	// Keyword to choose what virtualization mode created instances
	// will use. Can be either "paravirtual" (the default) or "hvm". The choice of virtualization type
	// changes the set of further arguments that are required, as described below.
	VirtualizationType pulumi.StringPtrInput
}

func (AmiCopyState) ElementType() reflect.Type {
	return reflect.TypeOf((*amiCopyState)(nil)).Elem()
}

type amiCopyArgs struct {
	// Date and time to deprecate the AMI. If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
	DeprecationTime *string `pulumi:"deprecationTime"`
	// Longer, human-readable description for the AMI.
	Description *string `pulumi:"description"`
	// ARN of the Outpost to which to copy the AMI.
	// Only specify this parameter when copying an AMI from an AWS Region to an Outpost. The AMI must be in the Region of the destination Outpost.
	DestinationOutpostArn *string `pulumi:"destinationOutpostArn"`
	// Nested block describing an EBS block device that should be
	// attached to created instances. The structure of this block is described below.
	EbsBlockDevices []AmiCopyEbsBlockDevice `pulumi:"ebsBlockDevices"`
	// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
	Encrypted *bool `pulumi:"encrypted"`
	// Nested block describing an ephemeral block device that
	// should be attached to created instances. The structure of this block is described below.
	EphemeralBlockDevices []AmiCopyEphemeralBlockDevice `pulumi:"ephemeralBlockDevices"`
	// Full ARN of the AWS Key Management Service (AWS KMS) CMK to use when encrypting the snapshots of
	// an image during a copy operation. This parameter is only required if you want to use a non-default CMK;
	// if this parameter is not specified, the default CMK for EBS is used
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Region-unique name for the AMI.
	Name *string `pulumi:"name"`
	// Id of the AMI to copy. This id must be valid in the region
	// given by `sourceAmiRegion`.
	SourceAmiId string `pulumi:"sourceAmiId"`
	// Region from which the AMI will be copied. This may be the
	// same as the AWS provider region in order to create a copy within the same region.
	SourceAmiRegion string `pulumi:"sourceAmiRegion"`
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a AmiCopy resource.
type AmiCopyArgs struct {
	// Date and time to deprecate the AMI. If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
	DeprecationTime pulumi.StringPtrInput
	// Longer, human-readable description for the AMI.
	Description pulumi.StringPtrInput
	// ARN of the Outpost to which to copy the AMI.
	// Only specify this parameter when copying an AMI from an AWS Region to an Outpost. The AMI must be in the Region of the destination Outpost.
	DestinationOutpostArn pulumi.StringPtrInput
	// Nested block describing an EBS block device that should be
	// attached to created instances. The structure of this block is described below.
	EbsBlockDevices AmiCopyEbsBlockDeviceArrayInput
	// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
	Encrypted pulumi.BoolPtrInput
	// Nested block describing an ephemeral block device that
	// should be attached to created instances. The structure of this block is described below.
	EphemeralBlockDevices AmiCopyEphemeralBlockDeviceArrayInput
	// Full ARN of the AWS Key Management Service (AWS KMS) CMK to use when encrypting the snapshots of
	// an image during a copy operation. This parameter is only required if you want to use a non-default CMK;
	// if this parameter is not specified, the default CMK for EBS is used
	KmsKeyId pulumi.StringPtrInput
	// Region-unique name for the AMI.
	Name pulumi.StringPtrInput
	// Id of the AMI to copy. This id must be valid in the region
	// given by `sourceAmiRegion`.
	SourceAmiId pulumi.StringInput
	// Region from which the AMI will be copied. This may be the
	// same as the AWS provider region in order to create a copy within the same region.
	SourceAmiRegion pulumi.StringInput
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
}

func (AmiCopyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*amiCopyArgs)(nil)).Elem()
}

type AmiCopyInput interface {
	pulumi.Input

	ToAmiCopyOutput() AmiCopyOutput
	ToAmiCopyOutputWithContext(ctx context.Context) AmiCopyOutput
}

func (*AmiCopy) ElementType() reflect.Type {
	return reflect.TypeOf((**AmiCopy)(nil)).Elem()
}

func (i *AmiCopy) ToAmiCopyOutput() AmiCopyOutput {
	return i.ToAmiCopyOutputWithContext(context.Background())
}

func (i *AmiCopy) ToAmiCopyOutputWithContext(ctx context.Context) AmiCopyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiCopyOutput)
}

// AmiCopyArrayInput is an input type that accepts AmiCopyArray and AmiCopyArrayOutput values.
// You can construct a concrete instance of `AmiCopyArrayInput` via:
//
//	AmiCopyArray{ AmiCopyArgs{...} }
type AmiCopyArrayInput interface {
	pulumi.Input

	ToAmiCopyArrayOutput() AmiCopyArrayOutput
	ToAmiCopyArrayOutputWithContext(context.Context) AmiCopyArrayOutput
}

type AmiCopyArray []AmiCopyInput

func (AmiCopyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AmiCopy)(nil)).Elem()
}

func (i AmiCopyArray) ToAmiCopyArrayOutput() AmiCopyArrayOutput {
	return i.ToAmiCopyArrayOutputWithContext(context.Background())
}

func (i AmiCopyArray) ToAmiCopyArrayOutputWithContext(ctx context.Context) AmiCopyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiCopyArrayOutput)
}

// AmiCopyMapInput is an input type that accepts AmiCopyMap and AmiCopyMapOutput values.
// You can construct a concrete instance of `AmiCopyMapInput` via:
//
//	AmiCopyMap{ "key": AmiCopyArgs{...} }
type AmiCopyMapInput interface {
	pulumi.Input

	ToAmiCopyMapOutput() AmiCopyMapOutput
	ToAmiCopyMapOutputWithContext(context.Context) AmiCopyMapOutput
}

type AmiCopyMap map[string]AmiCopyInput

func (AmiCopyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AmiCopy)(nil)).Elem()
}

func (i AmiCopyMap) ToAmiCopyMapOutput() AmiCopyMapOutput {
	return i.ToAmiCopyMapOutputWithContext(context.Background())
}

func (i AmiCopyMap) ToAmiCopyMapOutputWithContext(ctx context.Context) AmiCopyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiCopyMapOutput)
}

type AmiCopyOutput struct{ *pulumi.OutputState }

func (AmiCopyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AmiCopy)(nil)).Elem()
}

func (o AmiCopyOutput) ToAmiCopyOutput() AmiCopyOutput {
	return o
}

func (o AmiCopyOutput) ToAmiCopyOutputWithContext(ctx context.Context) AmiCopyOutput {
	return o
}

// Machine architecture for created instances. Defaults to "x8664".
func (o AmiCopyOutput) Architecture() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringOutput { return v.Architecture }).(pulumi.StringOutput)
}

// ARN of the AMI.
func (o AmiCopyOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// Boot mode of the AMI. For more information, see [Boot modes](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html) in the Amazon Elastic Compute Cloud User Guide.
func (o AmiCopyOutput) BootMode() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringOutput { return v.BootMode }).(pulumi.StringOutput)
}

// Date and time to deprecate the AMI. If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
func (o AmiCopyOutput) DeprecationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringPtrOutput { return v.DeprecationTime }).(pulumi.StringPtrOutput)
}

// Longer, human-readable description for the AMI.
func (o AmiCopyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// ARN of the Outpost to which to copy the AMI.
// Only specify this parameter when copying an AMI from an AWS Region to an Outpost. The AMI must be in the Region of the destination Outpost.
func (o AmiCopyOutput) DestinationOutpostArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringPtrOutput { return v.DestinationOutpostArn }).(pulumi.StringPtrOutput)
}

// Nested block describing an EBS block device that should be
// attached to created instances. The structure of this block is described below.
func (o AmiCopyOutput) EbsBlockDevices() AmiCopyEbsBlockDeviceArrayOutput {
	return o.ApplyT(func(v *AmiCopy) AmiCopyEbsBlockDeviceArrayOutput { return v.EbsBlockDevices }).(AmiCopyEbsBlockDeviceArrayOutput)
}

// Whether enhanced networking with ENA is enabled. Defaults to `false`.
func (o AmiCopyOutput) EnaSupport() pulumi.BoolOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.BoolOutput { return v.EnaSupport }).(pulumi.BoolOutput)
}

// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshotId`.
func (o AmiCopyOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.BoolPtrOutput { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

// Nested block describing an ephemeral block device that
// should be attached to created instances. The structure of this block is described below.
func (o AmiCopyOutput) EphemeralBlockDevices() AmiCopyEphemeralBlockDeviceArrayOutput {
	return o.ApplyT(func(v *AmiCopy) AmiCopyEphemeralBlockDeviceArrayOutput { return v.EphemeralBlockDevices }).(AmiCopyEphemeralBlockDeviceArrayOutput)
}

func (o AmiCopyOutput) Hypervisor() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringOutput { return v.Hypervisor }).(pulumi.StringOutput)
}

// Path to an S3 object containing an image manifest, e.g., created
// by the `ec2-upload-bundle` command in the EC2 command line tools.
func (o AmiCopyOutput) ImageLocation() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringOutput { return v.ImageLocation }).(pulumi.StringOutput)
}

func (o AmiCopyOutput) ImageOwnerAlias() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringOutput { return v.ImageOwnerAlias }).(pulumi.StringOutput)
}

func (o AmiCopyOutput) ImageType() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringOutput { return v.ImageType }).(pulumi.StringOutput)
}

// ID of the kernel image (AKI) that will be used as the paravirtual
// kernel in created instances.
func (o AmiCopyOutput) KernelId() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringOutput { return v.KernelId }).(pulumi.StringOutput)
}

// Full ARN of the AWS Key Management Service (AWS KMS) CMK to use when encrypting the snapshots of
// an image during a copy operation. This parameter is only required if you want to use a non-default CMK;
// if this parameter is not specified, the default CMK for EBS is used
func (o AmiCopyOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringOutput { return v.KmsKeyId }).(pulumi.StringOutput)
}

func (o AmiCopyOutput) ManageEbsSnapshots() pulumi.BoolOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.BoolOutput { return v.ManageEbsSnapshots }).(pulumi.BoolOutput)
}

// Region-unique name for the AMI.
func (o AmiCopyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o AmiCopyOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringOutput { return v.OwnerId }).(pulumi.StringOutput)
}

func (o AmiCopyOutput) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringOutput { return v.Platform }).(pulumi.StringOutput)
}

func (o AmiCopyOutput) PlatformDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringOutput { return v.PlatformDetails }).(pulumi.StringOutput)
}

func (o AmiCopyOutput) Public() pulumi.BoolOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.BoolOutput { return v.Public }).(pulumi.BoolOutput)
}

// ID of an initrd image (ARI) that will be used when booting the
// created instances.
func (o AmiCopyOutput) RamdiskId() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringOutput { return v.RamdiskId }).(pulumi.StringOutput)
}

// Name of the root device (for example, `/dev/sda1`, or `/dev/xvda`).
func (o AmiCopyOutput) RootDeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringOutput { return v.RootDeviceName }).(pulumi.StringOutput)
}

func (o AmiCopyOutput) RootSnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringOutput { return v.RootSnapshotId }).(pulumi.StringOutput)
}

// Id of the AMI to copy. This id must be valid in the region
// given by `sourceAmiRegion`.
func (o AmiCopyOutput) SourceAmiId() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringOutput { return v.SourceAmiId }).(pulumi.StringOutput)
}

// Region from which the AMI will be copied. This may be the
// same as the AWS provider region in order to create a copy within the same region.
func (o AmiCopyOutput) SourceAmiRegion() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringOutput { return v.SourceAmiRegion }).(pulumi.StringOutput)
}

// When set to "simple" (the default), enables enhanced networking
// for created instances. No other value is supported at this time.
func (o AmiCopyOutput) SriovNetSupport() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringOutput { return v.SriovNetSupport }).(pulumi.StringOutput)
}

// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o AmiCopyOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o AmiCopyOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

// If the image is configured for NitroTPM support, the value is `v2.0`. For more information, see [NitroTPM](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nitrotpm.html) in the Amazon Elastic Compute Cloud User Guide.
func (o AmiCopyOutput) TpmSupport() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringOutput { return v.TpmSupport }).(pulumi.StringOutput)
}

func (o AmiCopyOutput) UsageOperation() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringOutput { return v.UsageOperation }).(pulumi.StringOutput)
}

// Keyword to choose what virtualization mode created instances
// will use. Can be either "paravirtual" (the default) or "hvm". The choice of virtualization type
// changes the set of further arguments that are required, as described below.
func (o AmiCopyOutput) VirtualizationType() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringOutput { return v.VirtualizationType }).(pulumi.StringOutput)
}

type AmiCopyArrayOutput struct{ *pulumi.OutputState }

func (AmiCopyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AmiCopy)(nil)).Elem()
}

func (o AmiCopyArrayOutput) ToAmiCopyArrayOutput() AmiCopyArrayOutput {
	return o
}

func (o AmiCopyArrayOutput) ToAmiCopyArrayOutputWithContext(ctx context.Context) AmiCopyArrayOutput {
	return o
}

func (o AmiCopyArrayOutput) Index(i pulumi.IntInput) AmiCopyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AmiCopy {
		return vs[0].([]*AmiCopy)[vs[1].(int)]
	}).(AmiCopyOutput)
}

type AmiCopyMapOutput struct{ *pulumi.OutputState }

func (AmiCopyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AmiCopy)(nil)).Elem()
}

func (o AmiCopyMapOutput) ToAmiCopyMapOutput() AmiCopyMapOutput {
	return o
}

func (o AmiCopyMapOutput) ToAmiCopyMapOutputWithContext(ctx context.Context) AmiCopyMapOutput {
	return o
}

func (o AmiCopyMapOutput) MapIndex(k pulumi.StringInput) AmiCopyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AmiCopy {
		return vs[0].(map[string]*AmiCopy)[vs[1].(string)]
	}).(AmiCopyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AmiCopyInput)(nil)).Elem(), &AmiCopy{})
	pulumi.RegisterInputType(reflect.TypeOf((*AmiCopyArrayInput)(nil)).Elem(), AmiCopyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AmiCopyMapInput)(nil)).Elem(), AmiCopyMap{})
	pulumi.RegisterOutputType(AmiCopyOutput{})
	pulumi.RegisterOutputType(AmiCopyArrayOutput{})
	pulumi.RegisterOutputType(AmiCopyMapOutput{})
}
