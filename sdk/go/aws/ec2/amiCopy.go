// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AmiCopy struct {
	pulumi.CustomResourceState

	Architecture          pulumi.StringOutput                    `pulumi:"architecture"`
	Arn                   pulumi.StringOutput                    `pulumi:"arn"`
	BootMode              pulumi.StringOutput                    `pulumi:"bootMode"`
	DeprecationTime       pulumi.StringPtrOutput                 `pulumi:"deprecationTime"`
	Description           pulumi.StringPtrOutput                 `pulumi:"description"`
	DestinationOutpostArn pulumi.StringPtrOutput                 `pulumi:"destinationOutpostArn"`
	EbsBlockDevices       AmiCopyEbsBlockDeviceArrayOutput       `pulumi:"ebsBlockDevices"`
	EnaSupport            pulumi.BoolOutput                      `pulumi:"enaSupport"`
	Encrypted             pulumi.BoolPtrOutput                   `pulumi:"encrypted"`
	EphemeralBlockDevices AmiCopyEphemeralBlockDeviceArrayOutput `pulumi:"ephemeralBlockDevices"`
	Hypervisor            pulumi.StringOutput                    `pulumi:"hypervisor"`
	ImageLocation         pulumi.StringOutput                    `pulumi:"imageLocation"`
	ImageOwnerAlias       pulumi.StringOutput                    `pulumi:"imageOwnerAlias"`
	ImageType             pulumi.StringOutput                    `pulumi:"imageType"`
	ImdsSupport           pulumi.StringOutput                    `pulumi:"imdsSupport"`
	KernelId              pulumi.StringOutput                    `pulumi:"kernelId"`
	KmsKeyId              pulumi.StringOutput                    `pulumi:"kmsKeyId"`
	ManageEbsSnapshots    pulumi.BoolOutput                      `pulumi:"manageEbsSnapshots"`
	Name                  pulumi.StringOutput                    `pulumi:"name"`
	OwnerId               pulumi.StringOutput                    `pulumi:"ownerId"`
	Platform              pulumi.StringOutput                    `pulumi:"platform"`
	PlatformDetails       pulumi.StringOutput                    `pulumi:"platformDetails"`
	Public                pulumi.BoolOutput                      `pulumi:"public"`
	RamdiskId             pulumi.StringOutput                    `pulumi:"ramdiskId"`
	RootDeviceName        pulumi.StringOutput                    `pulumi:"rootDeviceName"`
	RootSnapshotId        pulumi.StringOutput                    `pulumi:"rootSnapshotId"`
	SourceAmiId           pulumi.StringOutput                    `pulumi:"sourceAmiId"`
	SourceAmiRegion       pulumi.StringOutput                    `pulumi:"sourceAmiRegion"`
	SriovNetSupport       pulumi.StringOutput                    `pulumi:"sriovNetSupport"`
	Tags                  pulumi.StringMapOutput                 `pulumi:"tags"`
	TagsAll               pulumi.StringMapOutput                 `pulumi:"tagsAll"`
	TpmSupport            pulumi.StringOutput                    `pulumi:"tpmSupport"`
	UsageOperation        pulumi.StringOutput                    `pulumi:"usageOperation"`
	VirtualizationType    pulumi.StringOutput                    `pulumi:"virtualizationType"`
}

// NewAmiCopy registers a new resource with the given unique name, arguments, and options.
func NewAmiCopy(ctx *pulumi.Context,
	name string, args *AmiCopyArgs, opts ...pulumi.ResourceOption) (*AmiCopy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SourceAmiId == nil {
		return nil, errors.New("invalid value for required argument 'SourceAmiId'")
	}
	if args.SourceAmiRegion == nil {
		return nil, errors.New("invalid value for required argument 'SourceAmiRegion'")
	}
	var resource AmiCopy
	err := ctx.RegisterResource("aws:ec2/amiCopy:AmiCopy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAmiCopy gets an existing AmiCopy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAmiCopy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AmiCopyState, opts ...pulumi.ResourceOption) (*AmiCopy, error) {
	var resource AmiCopy
	err := ctx.ReadResource("aws:ec2/amiCopy:AmiCopy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AmiCopy resources.
type amiCopyState struct {
	Architecture          *string                       `pulumi:"architecture"`
	Arn                   *string                       `pulumi:"arn"`
	BootMode              *string                       `pulumi:"bootMode"`
	DeprecationTime       *string                       `pulumi:"deprecationTime"`
	Description           *string                       `pulumi:"description"`
	DestinationOutpostArn *string                       `pulumi:"destinationOutpostArn"`
	EbsBlockDevices       []AmiCopyEbsBlockDevice       `pulumi:"ebsBlockDevices"`
	EnaSupport            *bool                         `pulumi:"enaSupport"`
	Encrypted             *bool                         `pulumi:"encrypted"`
	EphemeralBlockDevices []AmiCopyEphemeralBlockDevice `pulumi:"ephemeralBlockDevices"`
	Hypervisor            *string                       `pulumi:"hypervisor"`
	ImageLocation         *string                       `pulumi:"imageLocation"`
	ImageOwnerAlias       *string                       `pulumi:"imageOwnerAlias"`
	ImageType             *string                       `pulumi:"imageType"`
	ImdsSupport           *string                       `pulumi:"imdsSupport"`
	KernelId              *string                       `pulumi:"kernelId"`
	KmsKeyId              *string                       `pulumi:"kmsKeyId"`
	ManageEbsSnapshots    *bool                         `pulumi:"manageEbsSnapshots"`
	Name                  *string                       `pulumi:"name"`
	OwnerId               *string                       `pulumi:"ownerId"`
	Platform              *string                       `pulumi:"platform"`
	PlatformDetails       *string                       `pulumi:"platformDetails"`
	Public                *bool                         `pulumi:"public"`
	RamdiskId             *string                       `pulumi:"ramdiskId"`
	RootDeviceName        *string                       `pulumi:"rootDeviceName"`
	RootSnapshotId        *string                       `pulumi:"rootSnapshotId"`
	SourceAmiId           *string                       `pulumi:"sourceAmiId"`
	SourceAmiRegion       *string                       `pulumi:"sourceAmiRegion"`
	SriovNetSupport       *string                       `pulumi:"sriovNetSupport"`
	Tags                  map[string]string             `pulumi:"tags"`
	TagsAll               map[string]string             `pulumi:"tagsAll"`
	TpmSupport            *string                       `pulumi:"tpmSupport"`
	UsageOperation        *string                       `pulumi:"usageOperation"`
	VirtualizationType    *string                       `pulumi:"virtualizationType"`
}

type AmiCopyState struct {
	Architecture          pulumi.StringPtrInput
	Arn                   pulumi.StringPtrInput
	BootMode              pulumi.StringPtrInput
	DeprecationTime       pulumi.StringPtrInput
	Description           pulumi.StringPtrInput
	DestinationOutpostArn pulumi.StringPtrInput
	EbsBlockDevices       AmiCopyEbsBlockDeviceArrayInput
	EnaSupport            pulumi.BoolPtrInput
	Encrypted             pulumi.BoolPtrInput
	EphemeralBlockDevices AmiCopyEphemeralBlockDeviceArrayInput
	Hypervisor            pulumi.StringPtrInput
	ImageLocation         pulumi.StringPtrInput
	ImageOwnerAlias       pulumi.StringPtrInput
	ImageType             pulumi.StringPtrInput
	ImdsSupport           pulumi.StringPtrInput
	KernelId              pulumi.StringPtrInput
	KmsKeyId              pulumi.StringPtrInput
	ManageEbsSnapshots    pulumi.BoolPtrInput
	Name                  pulumi.StringPtrInput
	OwnerId               pulumi.StringPtrInput
	Platform              pulumi.StringPtrInput
	PlatformDetails       pulumi.StringPtrInput
	Public                pulumi.BoolPtrInput
	RamdiskId             pulumi.StringPtrInput
	RootDeviceName        pulumi.StringPtrInput
	RootSnapshotId        pulumi.StringPtrInput
	SourceAmiId           pulumi.StringPtrInput
	SourceAmiRegion       pulumi.StringPtrInput
	SriovNetSupport       pulumi.StringPtrInput
	Tags                  pulumi.StringMapInput
	TagsAll               pulumi.StringMapInput
	TpmSupport            pulumi.StringPtrInput
	UsageOperation        pulumi.StringPtrInput
	VirtualizationType    pulumi.StringPtrInput
}

func (AmiCopyState) ElementType() reflect.Type {
	return reflect.TypeOf((*amiCopyState)(nil)).Elem()
}

type amiCopyArgs struct {
	DeprecationTime       *string                       `pulumi:"deprecationTime"`
	Description           *string                       `pulumi:"description"`
	DestinationOutpostArn *string                       `pulumi:"destinationOutpostArn"`
	EbsBlockDevices       []AmiCopyEbsBlockDevice       `pulumi:"ebsBlockDevices"`
	Encrypted             *bool                         `pulumi:"encrypted"`
	EphemeralBlockDevices []AmiCopyEphemeralBlockDevice `pulumi:"ephemeralBlockDevices"`
	KmsKeyId              *string                       `pulumi:"kmsKeyId"`
	Name                  *string                       `pulumi:"name"`
	SourceAmiId           string                        `pulumi:"sourceAmiId"`
	SourceAmiRegion       string                        `pulumi:"sourceAmiRegion"`
	Tags                  map[string]string             `pulumi:"tags"`
}

// The set of arguments for constructing a AmiCopy resource.
type AmiCopyArgs struct {
	DeprecationTime       pulumi.StringPtrInput
	Description           pulumi.StringPtrInput
	DestinationOutpostArn pulumi.StringPtrInput
	EbsBlockDevices       AmiCopyEbsBlockDeviceArrayInput
	Encrypted             pulumi.BoolPtrInput
	EphemeralBlockDevices AmiCopyEphemeralBlockDeviceArrayInput
	KmsKeyId              pulumi.StringPtrInput
	Name                  pulumi.StringPtrInput
	SourceAmiId           pulumi.StringInput
	SourceAmiRegion       pulumi.StringInput
	Tags                  pulumi.StringMapInput
}

func (AmiCopyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*amiCopyArgs)(nil)).Elem()
}

type AmiCopyInput interface {
	pulumi.Input

	ToAmiCopyOutput() AmiCopyOutput
	ToAmiCopyOutputWithContext(ctx context.Context) AmiCopyOutput
}

func (*AmiCopy) ElementType() reflect.Type {
	return reflect.TypeOf((**AmiCopy)(nil)).Elem()
}

func (i *AmiCopy) ToAmiCopyOutput() AmiCopyOutput {
	return i.ToAmiCopyOutputWithContext(context.Background())
}

func (i *AmiCopy) ToAmiCopyOutputWithContext(ctx context.Context) AmiCopyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiCopyOutput)
}

// AmiCopyArrayInput is an input type that accepts AmiCopyArray and AmiCopyArrayOutput values.
// You can construct a concrete instance of `AmiCopyArrayInput` via:
//
//	AmiCopyArray{ AmiCopyArgs{...} }
type AmiCopyArrayInput interface {
	pulumi.Input

	ToAmiCopyArrayOutput() AmiCopyArrayOutput
	ToAmiCopyArrayOutputWithContext(context.Context) AmiCopyArrayOutput
}

type AmiCopyArray []AmiCopyInput

func (AmiCopyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AmiCopy)(nil)).Elem()
}

func (i AmiCopyArray) ToAmiCopyArrayOutput() AmiCopyArrayOutput {
	return i.ToAmiCopyArrayOutputWithContext(context.Background())
}

func (i AmiCopyArray) ToAmiCopyArrayOutputWithContext(ctx context.Context) AmiCopyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiCopyArrayOutput)
}

// AmiCopyMapInput is an input type that accepts AmiCopyMap and AmiCopyMapOutput values.
// You can construct a concrete instance of `AmiCopyMapInput` via:
//
//	AmiCopyMap{ "key": AmiCopyArgs{...} }
type AmiCopyMapInput interface {
	pulumi.Input

	ToAmiCopyMapOutput() AmiCopyMapOutput
	ToAmiCopyMapOutputWithContext(context.Context) AmiCopyMapOutput
}

type AmiCopyMap map[string]AmiCopyInput

func (AmiCopyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AmiCopy)(nil)).Elem()
}

func (i AmiCopyMap) ToAmiCopyMapOutput() AmiCopyMapOutput {
	return i.ToAmiCopyMapOutputWithContext(context.Background())
}

func (i AmiCopyMap) ToAmiCopyMapOutputWithContext(ctx context.Context) AmiCopyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AmiCopyMapOutput)
}

type AmiCopyOutput struct{ *pulumi.OutputState }

func (AmiCopyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AmiCopy)(nil)).Elem()
}

func (o AmiCopyOutput) ToAmiCopyOutput() AmiCopyOutput {
	return o
}

func (o AmiCopyOutput) ToAmiCopyOutputWithContext(ctx context.Context) AmiCopyOutput {
	return o
}

func (o AmiCopyOutput) Architecture() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringOutput { return v.Architecture }).(pulumi.StringOutput)
}

func (o AmiCopyOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o AmiCopyOutput) BootMode() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringOutput { return v.BootMode }).(pulumi.StringOutput)
}

func (o AmiCopyOutput) DeprecationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringPtrOutput { return v.DeprecationTime }).(pulumi.StringPtrOutput)
}

func (o AmiCopyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o AmiCopyOutput) DestinationOutpostArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringPtrOutput { return v.DestinationOutpostArn }).(pulumi.StringPtrOutput)
}

func (o AmiCopyOutput) EbsBlockDevices() AmiCopyEbsBlockDeviceArrayOutput {
	return o.ApplyT(func(v *AmiCopy) AmiCopyEbsBlockDeviceArrayOutput { return v.EbsBlockDevices }).(AmiCopyEbsBlockDeviceArrayOutput)
}

func (o AmiCopyOutput) EnaSupport() pulumi.BoolOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.BoolOutput { return v.EnaSupport }).(pulumi.BoolOutput)
}

func (o AmiCopyOutput) Encrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.BoolPtrOutput { return v.Encrypted }).(pulumi.BoolPtrOutput)
}

func (o AmiCopyOutput) EphemeralBlockDevices() AmiCopyEphemeralBlockDeviceArrayOutput {
	return o.ApplyT(func(v *AmiCopy) AmiCopyEphemeralBlockDeviceArrayOutput { return v.EphemeralBlockDevices }).(AmiCopyEphemeralBlockDeviceArrayOutput)
}

func (o AmiCopyOutput) Hypervisor() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringOutput { return v.Hypervisor }).(pulumi.StringOutput)
}

func (o AmiCopyOutput) ImageLocation() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringOutput { return v.ImageLocation }).(pulumi.StringOutput)
}

func (o AmiCopyOutput) ImageOwnerAlias() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringOutput { return v.ImageOwnerAlias }).(pulumi.StringOutput)
}

func (o AmiCopyOutput) ImageType() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringOutput { return v.ImageType }).(pulumi.StringOutput)
}

func (o AmiCopyOutput) ImdsSupport() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringOutput { return v.ImdsSupport }).(pulumi.StringOutput)
}

func (o AmiCopyOutput) KernelId() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringOutput { return v.KernelId }).(pulumi.StringOutput)
}

func (o AmiCopyOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringOutput { return v.KmsKeyId }).(pulumi.StringOutput)
}

func (o AmiCopyOutput) ManageEbsSnapshots() pulumi.BoolOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.BoolOutput { return v.ManageEbsSnapshots }).(pulumi.BoolOutput)
}

func (o AmiCopyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o AmiCopyOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringOutput { return v.OwnerId }).(pulumi.StringOutput)
}

func (o AmiCopyOutput) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringOutput { return v.Platform }).(pulumi.StringOutput)
}

func (o AmiCopyOutput) PlatformDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringOutput { return v.PlatformDetails }).(pulumi.StringOutput)
}

func (o AmiCopyOutput) Public() pulumi.BoolOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.BoolOutput { return v.Public }).(pulumi.BoolOutput)
}

func (o AmiCopyOutput) RamdiskId() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringOutput { return v.RamdiskId }).(pulumi.StringOutput)
}

func (o AmiCopyOutput) RootDeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringOutput { return v.RootDeviceName }).(pulumi.StringOutput)
}

func (o AmiCopyOutput) RootSnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringOutput { return v.RootSnapshotId }).(pulumi.StringOutput)
}

func (o AmiCopyOutput) SourceAmiId() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringOutput { return v.SourceAmiId }).(pulumi.StringOutput)
}

func (o AmiCopyOutput) SourceAmiRegion() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringOutput { return v.SourceAmiRegion }).(pulumi.StringOutput)
}

func (o AmiCopyOutput) SriovNetSupport() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringOutput { return v.SriovNetSupport }).(pulumi.StringOutput)
}

func (o AmiCopyOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o AmiCopyOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o AmiCopyOutput) TpmSupport() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringOutput { return v.TpmSupport }).(pulumi.StringOutput)
}

func (o AmiCopyOutput) UsageOperation() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringOutput { return v.UsageOperation }).(pulumi.StringOutput)
}

func (o AmiCopyOutput) VirtualizationType() pulumi.StringOutput {
	return o.ApplyT(func(v *AmiCopy) pulumi.StringOutput { return v.VirtualizationType }).(pulumi.StringOutput)
}

type AmiCopyArrayOutput struct{ *pulumi.OutputState }

func (AmiCopyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AmiCopy)(nil)).Elem()
}

func (o AmiCopyArrayOutput) ToAmiCopyArrayOutput() AmiCopyArrayOutput {
	return o
}

func (o AmiCopyArrayOutput) ToAmiCopyArrayOutputWithContext(ctx context.Context) AmiCopyArrayOutput {
	return o
}

func (o AmiCopyArrayOutput) Index(i pulumi.IntInput) AmiCopyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AmiCopy {
		return vs[0].([]*AmiCopy)[vs[1].(int)]
	}).(AmiCopyOutput)
}

type AmiCopyMapOutput struct{ *pulumi.OutputState }

func (AmiCopyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AmiCopy)(nil)).Elem()
}

func (o AmiCopyMapOutput) ToAmiCopyMapOutput() AmiCopyMapOutput {
	return o
}

func (o AmiCopyMapOutput) ToAmiCopyMapOutputWithContext(ctx context.Context) AmiCopyMapOutput {
	return o
}

func (o AmiCopyMapOutput) MapIndex(k pulumi.StringInput) AmiCopyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AmiCopy {
		return vs[0].(map[string]*AmiCopy)[vs[1].(string)]
	}).(AmiCopyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AmiCopyInput)(nil)).Elem(), &AmiCopy{})
	pulumi.RegisterInputType(reflect.TypeOf((*AmiCopyArrayInput)(nil)).Elem(), AmiCopyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AmiCopyMapInput)(nil)).Elem(), AmiCopyMap{})
	pulumi.RegisterOutputType(AmiCopyOutput{})
	pulumi.RegisterOutputType(AmiCopyArrayOutput{})
	pulumi.RegisterOutputType(AmiCopyMapOutput{})
}
