// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ebs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupVolume(ctx *pulumi.Context, args *LookupVolumeArgs, opts ...pulumi.InvokeOption) (*LookupVolumeResult, error) {
	var rv LookupVolumeResult
	err := ctx.Invoke("aws:ebs/getVolume:getVolume", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVolume.
type LookupVolumeArgs struct {
	Filters    []GetVolumeFilter `pulumi:"filters"`
	MostRecent *bool             `pulumi:"mostRecent"`
	Tags       map[string]string `pulumi:"tags"`
}

// A collection of values returned by getVolume.
type LookupVolumeResult struct {
	Arn              string            `pulumi:"arn"`
	AvailabilityZone string            `pulumi:"availabilityZone"`
	Encrypted        bool              `pulumi:"encrypted"`
	Filters          []GetVolumeFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id                 string            `pulumi:"id"`
	Iops               int               `pulumi:"iops"`
	KmsKeyId           string            `pulumi:"kmsKeyId"`
	MostRecent         *bool             `pulumi:"mostRecent"`
	MultiAttachEnabled bool              `pulumi:"multiAttachEnabled"`
	OutpostArn         string            `pulumi:"outpostArn"`
	Size               int               `pulumi:"size"`
	SnapshotId         string            `pulumi:"snapshotId"`
	Tags               map[string]string `pulumi:"tags"`
	Throughput         int               `pulumi:"throughput"`
	VolumeId           string            `pulumi:"volumeId"`
	VolumeType         string            `pulumi:"volumeType"`
}

func LookupVolumeOutput(ctx *pulumi.Context, args LookupVolumeOutputArgs, opts ...pulumi.InvokeOption) LookupVolumeResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVolumeResult, error) {
			args := v.(LookupVolumeArgs)
			r, err := LookupVolume(ctx, &args, opts...)
			var s LookupVolumeResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupVolumeResultOutput)
}

// A collection of arguments for invoking getVolume.
type LookupVolumeOutputArgs struct {
	Filters    GetVolumeFilterArrayInput `pulumi:"filters"`
	MostRecent pulumi.BoolPtrInput       `pulumi:"mostRecent"`
	Tags       pulumi.StringMapInput     `pulumi:"tags"`
}

func (LookupVolumeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVolumeArgs)(nil)).Elem()
}

// A collection of values returned by getVolume.
type LookupVolumeResultOutput struct{ *pulumi.OutputState }

func (LookupVolumeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVolumeResult)(nil)).Elem()
}

func (o LookupVolumeResultOutput) ToLookupVolumeResultOutput() LookupVolumeResultOutput {
	return o
}

func (o LookupVolumeResultOutput) ToLookupVolumeResultOutputWithContext(ctx context.Context) LookupVolumeResultOutput {
	return o
}

func (o LookupVolumeResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeResult) string { return v.Arn }).(pulumi.StringOutput)
}

func (o LookupVolumeResultOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeResult) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

func (o LookupVolumeResultOutput) Encrypted() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVolumeResult) bool { return v.Encrypted }).(pulumi.BoolOutput)
}

func (o LookupVolumeResultOutput) Filters() GetVolumeFilterArrayOutput {
	return o.ApplyT(func(v LookupVolumeResult) []GetVolumeFilter { return v.Filters }).(GetVolumeFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupVolumeResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupVolumeResultOutput) Iops() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVolumeResult) int { return v.Iops }).(pulumi.IntOutput)
}

func (o LookupVolumeResultOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeResult) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

func (o LookupVolumeResultOutput) MostRecent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupVolumeResult) *bool { return v.MostRecent }).(pulumi.BoolPtrOutput)
}

func (o LookupVolumeResultOutput) MultiAttachEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVolumeResult) bool { return v.MultiAttachEnabled }).(pulumi.BoolOutput)
}

func (o LookupVolumeResultOutput) OutpostArn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeResult) string { return v.OutpostArn }).(pulumi.StringOutput)
}

func (o LookupVolumeResultOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVolumeResult) int { return v.Size }).(pulumi.IntOutput)
}

func (o LookupVolumeResultOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeResult) string { return v.SnapshotId }).(pulumi.StringOutput)
}

func (o LookupVolumeResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupVolumeResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o LookupVolumeResultOutput) Throughput() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVolumeResult) int { return v.Throughput }).(pulumi.IntOutput)
}

func (o LookupVolumeResultOutput) VolumeId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeResult) string { return v.VolumeId }).(pulumi.StringOutput)
}

func (o LookupVolumeResultOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVolumeResult) string { return v.VolumeType }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVolumeResultOutput{})
}
