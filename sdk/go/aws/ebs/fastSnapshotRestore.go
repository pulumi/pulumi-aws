// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ebs

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for managing an EBS (Elastic Block Storage) Fast Snapshot Restore.
//
// ## Example Usage
//
// ### Basic Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/ebs"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ebs.NewFastSnapshotRestore(ctx, "example", &ebs.FastSnapshotRestoreArgs{
//				AvailabilityZone: pulumi.String("us-west-2a"),
//				SnapshotId:       pulumi.Any(exampleAwsEbsSnapshot.Id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// Using `pulumi import`, import EC2 (Elastic Compute Cloud) EBS Fast Snapshot Restore using the `id`. For example:
//
// ```sh
// $ pulumi import aws:ebs/fastSnapshotRestore:FastSnapshotRestore example us-west-2a,snap-abcdef123456
// ```
type FastSnapshotRestore struct {
	pulumi.CustomResourceState

	// Availability zone in which to enable fast snapshot restores.
	AvailabilityZone pulumi.StringOutput `pulumi:"availabilityZone"`
	// ID of the snapshot.
	SnapshotId pulumi.StringOutput `pulumi:"snapshotId"`
	// State of fast snapshot restores. Valid values are `enabling`, `optimizing`, `enabled`, `disabling`, `disabled`.
	State    pulumi.StringOutput                  `pulumi:"state"`
	Timeouts FastSnapshotRestoreTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewFastSnapshotRestore registers a new resource with the given unique name, arguments, and options.
func NewFastSnapshotRestore(ctx *pulumi.Context,
	name string, args *FastSnapshotRestoreArgs, opts ...pulumi.ResourceOption) (*FastSnapshotRestore, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AvailabilityZone == nil {
		return nil, errors.New("invalid value for required argument 'AvailabilityZone'")
	}
	if args.SnapshotId == nil {
		return nil, errors.New("invalid value for required argument 'SnapshotId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FastSnapshotRestore
	err := ctx.RegisterResource("aws:ebs/fastSnapshotRestore:FastSnapshotRestore", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFastSnapshotRestore gets an existing FastSnapshotRestore resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFastSnapshotRestore(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FastSnapshotRestoreState, opts ...pulumi.ResourceOption) (*FastSnapshotRestore, error) {
	var resource FastSnapshotRestore
	err := ctx.ReadResource("aws:ebs/fastSnapshotRestore:FastSnapshotRestore", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FastSnapshotRestore resources.
type fastSnapshotRestoreState struct {
	// Availability zone in which to enable fast snapshot restores.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// ID of the snapshot.
	SnapshotId *string `pulumi:"snapshotId"`
	// State of fast snapshot restores. Valid values are `enabling`, `optimizing`, `enabled`, `disabling`, `disabled`.
	State    *string                      `pulumi:"state"`
	Timeouts *FastSnapshotRestoreTimeouts `pulumi:"timeouts"`
}

type FastSnapshotRestoreState struct {
	// Availability zone in which to enable fast snapshot restores.
	AvailabilityZone pulumi.StringPtrInput
	// ID of the snapshot.
	SnapshotId pulumi.StringPtrInput
	// State of fast snapshot restores. Valid values are `enabling`, `optimizing`, `enabled`, `disabling`, `disabled`.
	State    pulumi.StringPtrInput
	Timeouts FastSnapshotRestoreTimeoutsPtrInput
}

func (FastSnapshotRestoreState) ElementType() reflect.Type {
	return reflect.TypeOf((*fastSnapshotRestoreState)(nil)).Elem()
}

type fastSnapshotRestoreArgs struct {
	// Availability zone in which to enable fast snapshot restores.
	AvailabilityZone string `pulumi:"availabilityZone"`
	// ID of the snapshot.
	SnapshotId string                       `pulumi:"snapshotId"`
	Timeouts   *FastSnapshotRestoreTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a FastSnapshotRestore resource.
type FastSnapshotRestoreArgs struct {
	// Availability zone in which to enable fast snapshot restores.
	AvailabilityZone pulumi.StringInput
	// ID of the snapshot.
	SnapshotId pulumi.StringInput
	Timeouts   FastSnapshotRestoreTimeoutsPtrInput
}

func (FastSnapshotRestoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fastSnapshotRestoreArgs)(nil)).Elem()
}

type FastSnapshotRestoreInput interface {
	pulumi.Input

	ToFastSnapshotRestoreOutput() FastSnapshotRestoreOutput
	ToFastSnapshotRestoreOutputWithContext(ctx context.Context) FastSnapshotRestoreOutput
}

func (*FastSnapshotRestore) ElementType() reflect.Type {
	return reflect.TypeOf((**FastSnapshotRestore)(nil)).Elem()
}

func (i *FastSnapshotRestore) ToFastSnapshotRestoreOutput() FastSnapshotRestoreOutput {
	return i.ToFastSnapshotRestoreOutputWithContext(context.Background())
}

func (i *FastSnapshotRestore) ToFastSnapshotRestoreOutputWithContext(ctx context.Context) FastSnapshotRestoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FastSnapshotRestoreOutput)
}

// FastSnapshotRestoreArrayInput is an input type that accepts FastSnapshotRestoreArray and FastSnapshotRestoreArrayOutput values.
// You can construct a concrete instance of `FastSnapshotRestoreArrayInput` via:
//
//	FastSnapshotRestoreArray{ FastSnapshotRestoreArgs{...} }
type FastSnapshotRestoreArrayInput interface {
	pulumi.Input

	ToFastSnapshotRestoreArrayOutput() FastSnapshotRestoreArrayOutput
	ToFastSnapshotRestoreArrayOutputWithContext(context.Context) FastSnapshotRestoreArrayOutput
}

type FastSnapshotRestoreArray []FastSnapshotRestoreInput

func (FastSnapshotRestoreArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FastSnapshotRestore)(nil)).Elem()
}

func (i FastSnapshotRestoreArray) ToFastSnapshotRestoreArrayOutput() FastSnapshotRestoreArrayOutput {
	return i.ToFastSnapshotRestoreArrayOutputWithContext(context.Background())
}

func (i FastSnapshotRestoreArray) ToFastSnapshotRestoreArrayOutputWithContext(ctx context.Context) FastSnapshotRestoreArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FastSnapshotRestoreArrayOutput)
}

// FastSnapshotRestoreMapInput is an input type that accepts FastSnapshotRestoreMap and FastSnapshotRestoreMapOutput values.
// You can construct a concrete instance of `FastSnapshotRestoreMapInput` via:
//
//	FastSnapshotRestoreMap{ "key": FastSnapshotRestoreArgs{...} }
type FastSnapshotRestoreMapInput interface {
	pulumi.Input

	ToFastSnapshotRestoreMapOutput() FastSnapshotRestoreMapOutput
	ToFastSnapshotRestoreMapOutputWithContext(context.Context) FastSnapshotRestoreMapOutput
}

type FastSnapshotRestoreMap map[string]FastSnapshotRestoreInput

func (FastSnapshotRestoreMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FastSnapshotRestore)(nil)).Elem()
}

func (i FastSnapshotRestoreMap) ToFastSnapshotRestoreMapOutput() FastSnapshotRestoreMapOutput {
	return i.ToFastSnapshotRestoreMapOutputWithContext(context.Background())
}

func (i FastSnapshotRestoreMap) ToFastSnapshotRestoreMapOutputWithContext(ctx context.Context) FastSnapshotRestoreMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FastSnapshotRestoreMapOutput)
}

type FastSnapshotRestoreOutput struct{ *pulumi.OutputState }

func (FastSnapshotRestoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FastSnapshotRestore)(nil)).Elem()
}

func (o FastSnapshotRestoreOutput) ToFastSnapshotRestoreOutput() FastSnapshotRestoreOutput {
	return o
}

func (o FastSnapshotRestoreOutput) ToFastSnapshotRestoreOutputWithContext(ctx context.Context) FastSnapshotRestoreOutput {
	return o
}

// Availability zone in which to enable fast snapshot restores.
func (o FastSnapshotRestoreOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v *FastSnapshotRestore) pulumi.StringOutput { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// ID of the snapshot.
func (o FastSnapshotRestoreOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v *FastSnapshotRestore) pulumi.StringOutput { return v.SnapshotId }).(pulumi.StringOutput)
}

// State of fast snapshot restores. Valid values are `enabling`, `optimizing`, `enabled`, `disabling`, `disabled`.
func (o FastSnapshotRestoreOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *FastSnapshotRestore) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

func (o FastSnapshotRestoreOutput) Timeouts() FastSnapshotRestoreTimeoutsPtrOutput {
	return o.ApplyT(func(v *FastSnapshotRestore) FastSnapshotRestoreTimeoutsPtrOutput { return v.Timeouts }).(FastSnapshotRestoreTimeoutsPtrOutput)
}

type FastSnapshotRestoreArrayOutput struct{ *pulumi.OutputState }

func (FastSnapshotRestoreArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FastSnapshotRestore)(nil)).Elem()
}

func (o FastSnapshotRestoreArrayOutput) ToFastSnapshotRestoreArrayOutput() FastSnapshotRestoreArrayOutput {
	return o
}

func (o FastSnapshotRestoreArrayOutput) ToFastSnapshotRestoreArrayOutputWithContext(ctx context.Context) FastSnapshotRestoreArrayOutput {
	return o
}

func (o FastSnapshotRestoreArrayOutput) Index(i pulumi.IntInput) FastSnapshotRestoreOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FastSnapshotRestore {
		return vs[0].([]*FastSnapshotRestore)[vs[1].(int)]
	}).(FastSnapshotRestoreOutput)
}

type FastSnapshotRestoreMapOutput struct{ *pulumi.OutputState }

func (FastSnapshotRestoreMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FastSnapshotRestore)(nil)).Elem()
}

func (o FastSnapshotRestoreMapOutput) ToFastSnapshotRestoreMapOutput() FastSnapshotRestoreMapOutput {
	return o
}

func (o FastSnapshotRestoreMapOutput) ToFastSnapshotRestoreMapOutputWithContext(ctx context.Context) FastSnapshotRestoreMapOutput {
	return o
}

func (o FastSnapshotRestoreMapOutput) MapIndex(k pulumi.StringInput) FastSnapshotRestoreOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FastSnapshotRestore {
		return vs[0].(map[string]*FastSnapshotRestore)[vs[1].(string)]
	}).(FastSnapshotRestoreOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FastSnapshotRestoreInput)(nil)).Elem(), &FastSnapshotRestore{})
	pulumi.RegisterInputType(reflect.TypeOf((*FastSnapshotRestoreArrayInput)(nil)).Elem(), FastSnapshotRestoreArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FastSnapshotRestoreMapInput)(nil)).Elem(), FastSnapshotRestoreMap{})
	pulumi.RegisterOutputType(FastSnapshotRestoreOutput{})
	pulumi.RegisterOutputType(FastSnapshotRestoreArrayOutput{})
	pulumi.RegisterOutputType(FastSnapshotRestoreMapOutput{})
}
