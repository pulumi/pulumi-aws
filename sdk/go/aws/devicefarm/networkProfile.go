// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package devicefarm

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NetworkProfile struct {
	pulumi.CustomResourceState

	Arn                   pulumi.StringOutput    `pulumi:"arn"`
	Description           pulumi.StringPtrOutput `pulumi:"description"`
	DownlinkBandwidthBits pulumi.IntPtrOutput    `pulumi:"downlinkBandwidthBits"`
	DownlinkDelayMs       pulumi.IntPtrOutput    `pulumi:"downlinkDelayMs"`
	DownlinkJitterMs      pulumi.IntPtrOutput    `pulumi:"downlinkJitterMs"`
	DownlinkLossPercent   pulumi.IntPtrOutput    `pulumi:"downlinkLossPercent"`
	Name                  pulumi.StringOutput    `pulumi:"name"`
	ProjectArn            pulumi.StringOutput    `pulumi:"projectArn"`
	Tags                  pulumi.StringMapOutput `pulumi:"tags"`
	TagsAll               pulumi.StringMapOutput `pulumi:"tagsAll"`
	Type                  pulumi.StringPtrOutput `pulumi:"type"`
	UplinkBandwidthBits   pulumi.IntPtrOutput    `pulumi:"uplinkBandwidthBits"`
	UplinkDelayMs         pulumi.IntPtrOutput    `pulumi:"uplinkDelayMs"`
	UplinkJitterMs        pulumi.IntPtrOutput    `pulumi:"uplinkJitterMs"`
	UplinkLossPercent     pulumi.IntPtrOutput    `pulumi:"uplinkLossPercent"`
}

// NewNetworkProfile registers a new resource with the given unique name, arguments, and options.
func NewNetworkProfile(ctx *pulumi.Context,
	name string, args *NetworkProfileArgs, opts ...pulumi.ResourceOption) (*NetworkProfile, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProjectArn == nil {
		return nil, errors.New("invalid value for required argument 'ProjectArn'")
	}
	var resource NetworkProfile
	err := ctx.RegisterResource("aws:devicefarm/networkProfile:NetworkProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkProfile gets an existing NetworkProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkProfileState, opts ...pulumi.ResourceOption) (*NetworkProfile, error) {
	var resource NetworkProfile
	err := ctx.ReadResource("aws:devicefarm/networkProfile:NetworkProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkProfile resources.
type networkProfileState struct {
	Arn                   *string           `pulumi:"arn"`
	Description           *string           `pulumi:"description"`
	DownlinkBandwidthBits *int              `pulumi:"downlinkBandwidthBits"`
	DownlinkDelayMs       *int              `pulumi:"downlinkDelayMs"`
	DownlinkJitterMs      *int              `pulumi:"downlinkJitterMs"`
	DownlinkLossPercent   *int              `pulumi:"downlinkLossPercent"`
	Name                  *string           `pulumi:"name"`
	ProjectArn            *string           `pulumi:"projectArn"`
	Tags                  map[string]string `pulumi:"tags"`
	TagsAll               map[string]string `pulumi:"tagsAll"`
	Type                  *string           `pulumi:"type"`
	UplinkBandwidthBits   *int              `pulumi:"uplinkBandwidthBits"`
	UplinkDelayMs         *int              `pulumi:"uplinkDelayMs"`
	UplinkJitterMs        *int              `pulumi:"uplinkJitterMs"`
	UplinkLossPercent     *int              `pulumi:"uplinkLossPercent"`
}

type NetworkProfileState struct {
	Arn                   pulumi.StringPtrInput
	Description           pulumi.StringPtrInput
	DownlinkBandwidthBits pulumi.IntPtrInput
	DownlinkDelayMs       pulumi.IntPtrInput
	DownlinkJitterMs      pulumi.IntPtrInput
	DownlinkLossPercent   pulumi.IntPtrInput
	Name                  pulumi.StringPtrInput
	ProjectArn            pulumi.StringPtrInput
	Tags                  pulumi.StringMapInput
	TagsAll               pulumi.StringMapInput
	Type                  pulumi.StringPtrInput
	UplinkBandwidthBits   pulumi.IntPtrInput
	UplinkDelayMs         pulumi.IntPtrInput
	UplinkJitterMs        pulumi.IntPtrInput
	UplinkLossPercent     pulumi.IntPtrInput
}

func (NetworkProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkProfileState)(nil)).Elem()
}

type networkProfileArgs struct {
	Description           *string           `pulumi:"description"`
	DownlinkBandwidthBits *int              `pulumi:"downlinkBandwidthBits"`
	DownlinkDelayMs       *int              `pulumi:"downlinkDelayMs"`
	DownlinkJitterMs      *int              `pulumi:"downlinkJitterMs"`
	DownlinkLossPercent   *int              `pulumi:"downlinkLossPercent"`
	Name                  *string           `pulumi:"name"`
	ProjectArn            string            `pulumi:"projectArn"`
	Tags                  map[string]string `pulumi:"tags"`
	Type                  *string           `pulumi:"type"`
	UplinkBandwidthBits   *int              `pulumi:"uplinkBandwidthBits"`
	UplinkDelayMs         *int              `pulumi:"uplinkDelayMs"`
	UplinkJitterMs        *int              `pulumi:"uplinkJitterMs"`
	UplinkLossPercent     *int              `pulumi:"uplinkLossPercent"`
}

// The set of arguments for constructing a NetworkProfile resource.
type NetworkProfileArgs struct {
	Description           pulumi.StringPtrInput
	DownlinkBandwidthBits pulumi.IntPtrInput
	DownlinkDelayMs       pulumi.IntPtrInput
	DownlinkJitterMs      pulumi.IntPtrInput
	DownlinkLossPercent   pulumi.IntPtrInput
	Name                  pulumi.StringPtrInput
	ProjectArn            pulumi.StringInput
	Tags                  pulumi.StringMapInput
	Type                  pulumi.StringPtrInput
	UplinkBandwidthBits   pulumi.IntPtrInput
	UplinkDelayMs         pulumi.IntPtrInput
	UplinkJitterMs        pulumi.IntPtrInput
	UplinkLossPercent     pulumi.IntPtrInput
}

func (NetworkProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkProfileArgs)(nil)).Elem()
}

type NetworkProfileInput interface {
	pulumi.Input

	ToNetworkProfileOutput() NetworkProfileOutput
	ToNetworkProfileOutputWithContext(ctx context.Context) NetworkProfileOutput
}

func (*NetworkProfile) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkProfile)(nil)).Elem()
}

func (i *NetworkProfile) ToNetworkProfileOutput() NetworkProfileOutput {
	return i.ToNetworkProfileOutputWithContext(context.Background())
}

func (i *NetworkProfile) ToNetworkProfileOutputWithContext(ctx context.Context) NetworkProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfileOutput)
}

// NetworkProfileArrayInput is an input type that accepts NetworkProfileArray and NetworkProfileArrayOutput values.
// You can construct a concrete instance of `NetworkProfileArrayInput` via:
//
//	NetworkProfileArray{ NetworkProfileArgs{...} }
type NetworkProfileArrayInput interface {
	pulumi.Input

	ToNetworkProfileArrayOutput() NetworkProfileArrayOutput
	ToNetworkProfileArrayOutputWithContext(context.Context) NetworkProfileArrayOutput
}

type NetworkProfileArray []NetworkProfileInput

func (NetworkProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkProfile)(nil)).Elem()
}

func (i NetworkProfileArray) ToNetworkProfileArrayOutput() NetworkProfileArrayOutput {
	return i.ToNetworkProfileArrayOutputWithContext(context.Background())
}

func (i NetworkProfileArray) ToNetworkProfileArrayOutputWithContext(ctx context.Context) NetworkProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfileArrayOutput)
}

// NetworkProfileMapInput is an input type that accepts NetworkProfileMap and NetworkProfileMapOutput values.
// You can construct a concrete instance of `NetworkProfileMapInput` via:
//
//	NetworkProfileMap{ "key": NetworkProfileArgs{...} }
type NetworkProfileMapInput interface {
	pulumi.Input

	ToNetworkProfileMapOutput() NetworkProfileMapOutput
	ToNetworkProfileMapOutputWithContext(context.Context) NetworkProfileMapOutput
}

type NetworkProfileMap map[string]NetworkProfileInput

func (NetworkProfileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkProfile)(nil)).Elem()
}

func (i NetworkProfileMap) ToNetworkProfileMapOutput() NetworkProfileMapOutput {
	return i.ToNetworkProfileMapOutputWithContext(context.Background())
}

func (i NetworkProfileMap) ToNetworkProfileMapOutputWithContext(ctx context.Context) NetworkProfileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfileMapOutput)
}

type NetworkProfileOutput struct{ *pulumi.OutputState }

func (NetworkProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkProfile)(nil)).Elem()
}

func (o NetworkProfileOutput) ToNetworkProfileOutput() NetworkProfileOutput {
	return o
}

func (o NetworkProfileOutput) ToNetworkProfileOutputWithContext(ctx context.Context) NetworkProfileOutput {
	return o
}

func (o NetworkProfileOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkProfile) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o NetworkProfileOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkProfile) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o NetworkProfileOutput) DownlinkBandwidthBits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkProfile) pulumi.IntPtrOutput { return v.DownlinkBandwidthBits }).(pulumi.IntPtrOutput)
}

func (o NetworkProfileOutput) DownlinkDelayMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkProfile) pulumi.IntPtrOutput { return v.DownlinkDelayMs }).(pulumi.IntPtrOutput)
}

func (o NetworkProfileOutput) DownlinkJitterMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkProfile) pulumi.IntPtrOutput { return v.DownlinkJitterMs }).(pulumi.IntPtrOutput)
}

func (o NetworkProfileOutput) DownlinkLossPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkProfile) pulumi.IntPtrOutput { return v.DownlinkLossPercent }).(pulumi.IntPtrOutput)
}

func (o NetworkProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkProfile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o NetworkProfileOutput) ProjectArn() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkProfile) pulumi.StringOutput { return v.ProjectArn }).(pulumi.StringOutput)
}

func (o NetworkProfileOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkProfile) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o NetworkProfileOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkProfile) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o NetworkProfileOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkProfile) pulumi.StringPtrOutput { return v.Type }).(pulumi.StringPtrOutput)
}

func (o NetworkProfileOutput) UplinkBandwidthBits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkProfile) pulumi.IntPtrOutput { return v.UplinkBandwidthBits }).(pulumi.IntPtrOutput)
}

func (o NetworkProfileOutput) UplinkDelayMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkProfile) pulumi.IntPtrOutput { return v.UplinkDelayMs }).(pulumi.IntPtrOutput)
}

func (o NetworkProfileOutput) UplinkJitterMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkProfile) pulumi.IntPtrOutput { return v.UplinkJitterMs }).(pulumi.IntPtrOutput)
}

func (o NetworkProfileOutput) UplinkLossPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkProfile) pulumi.IntPtrOutput { return v.UplinkLossPercent }).(pulumi.IntPtrOutput)
}

type NetworkProfileArrayOutput struct{ *pulumi.OutputState }

func (NetworkProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkProfile)(nil)).Elem()
}

func (o NetworkProfileArrayOutput) ToNetworkProfileArrayOutput() NetworkProfileArrayOutput {
	return o
}

func (o NetworkProfileArrayOutput) ToNetworkProfileArrayOutputWithContext(ctx context.Context) NetworkProfileArrayOutput {
	return o
}

func (o NetworkProfileArrayOutput) Index(i pulumi.IntInput) NetworkProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NetworkProfile {
		return vs[0].([]*NetworkProfile)[vs[1].(int)]
	}).(NetworkProfileOutput)
}

type NetworkProfileMapOutput struct{ *pulumi.OutputState }

func (NetworkProfileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkProfile)(nil)).Elem()
}

func (o NetworkProfileMapOutput) ToNetworkProfileMapOutput() NetworkProfileMapOutput {
	return o
}

func (o NetworkProfileMapOutput) ToNetworkProfileMapOutputWithContext(ctx context.Context) NetworkProfileMapOutput {
	return o
}

func (o NetworkProfileMapOutput) MapIndex(k pulumi.StringInput) NetworkProfileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NetworkProfile {
		return vs[0].(map[string]*NetworkProfile)[vs[1].(string)]
	}).(NetworkProfileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkProfileInput)(nil)).Elem(), &NetworkProfile{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkProfileArrayInput)(nil)).Elem(), NetworkProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkProfileMapInput)(nil)).Elem(), NetworkProfileMap{})
	pulumi.RegisterOutputType(NetworkProfileOutput{})
	pulumi.RegisterOutputType(NetworkProfileArrayOutput{})
	pulumi.RegisterOutputType(NetworkProfileMapOutput{})
}
