// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package globalaccelerator

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for managing an AWS Global Accelerator Cross Account Attachment.
//
// ## Example Usage
//
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/globalaccelerator"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := globalaccelerator.NewCrossAccountAttachment(ctx, "example", &globalaccelerator.CrossAccountAttachmentArgs{
//				Name: pulumi.String("example-cross-account-attachment"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### Usage with Optional Arguments
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/globalaccelerator"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := globalaccelerator.NewCrossAccountAttachment(ctx, "example", &globalaccelerator.CrossAccountAttachmentArgs{
//				Name: pulumi.String("example-cross-account-attachment"),
//				Principals: pulumi.StringArray{
//					pulumi.String("123456789012"),
//				},
//				Resources: globalaccelerator.CrossAccountAttachmentResourceArray{
//					&globalaccelerator.CrossAccountAttachmentResourceArgs{
//						EndpointId: pulumi.String("arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188"),
//						Region:     pulumi.String("us-west-2"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import Global Accelerator Cross Account Attachment using the `example_id_arg`. For example:
//
// ```sh
// $ pulumi import aws:globalaccelerator/crossAccountAttachment:CrossAccountAttachment example arn:aws:globalaccelerator::012345678910:attachment/01234567-abcd-8910-efgh-123456789012
// ```
type CrossAccountAttachment struct {
	pulumi.CustomResourceState

	// ARN of the Cross Account Attachment.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// Creation Time when the Cross Account Attachment.
	CreatedTime pulumi.StringOutput `pulumi:"createdTime"`
	// Last modified time of the Cross Account Attachment.
	LastModifiedTime pulumi.StringOutput `pulumi:"lastModifiedTime"`
	// Name of the Cross Account Attachment.
	//
	// The following arguments are optional:
	Name pulumi.StringOutput `pulumi:"name"`
	// List of AWS account IDs that are allowed to associate resources with the accelerator.
	Principals pulumi.StringArrayOutput `pulumi:"principals"`
	// List of resources to be associated with the accelerator.
	Resources CrossAccountAttachmentResourceArrayOutput `pulumi:"resources"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapOutput `pulumi:"tagsAll"`
}

// NewCrossAccountAttachment registers a new resource with the given unique name, arguments, and options.
func NewCrossAccountAttachment(ctx *pulumi.Context,
	name string, args *CrossAccountAttachmentArgs, opts ...pulumi.ResourceOption) (*CrossAccountAttachment, error) {
	if args == nil {
		args = &CrossAccountAttachmentArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CrossAccountAttachment
	err := ctx.RegisterResource("aws:globalaccelerator/crossAccountAttachment:CrossAccountAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCrossAccountAttachment gets an existing CrossAccountAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCrossAccountAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CrossAccountAttachmentState, opts ...pulumi.ResourceOption) (*CrossAccountAttachment, error) {
	var resource CrossAccountAttachment
	err := ctx.ReadResource("aws:globalaccelerator/crossAccountAttachment:CrossAccountAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CrossAccountAttachment resources.
type crossAccountAttachmentState struct {
	// ARN of the Cross Account Attachment.
	Arn *string `pulumi:"arn"`
	// Creation Time when the Cross Account Attachment.
	CreatedTime *string `pulumi:"createdTime"`
	// Last modified time of the Cross Account Attachment.
	LastModifiedTime *string `pulumi:"lastModifiedTime"`
	// Name of the Cross Account Attachment.
	//
	// The following arguments are optional:
	Name *string `pulumi:"name"`
	// List of AWS account IDs that are allowed to associate resources with the accelerator.
	Principals []string `pulumi:"principals"`
	// List of resources to be associated with the accelerator.
	Resources []CrossAccountAttachmentResource `pulumi:"resources"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type CrossAccountAttachmentState struct {
	// ARN of the Cross Account Attachment.
	Arn pulumi.StringPtrInput
	// Creation Time when the Cross Account Attachment.
	CreatedTime pulumi.StringPtrInput
	// Last modified time of the Cross Account Attachment.
	LastModifiedTime pulumi.StringPtrInput
	// Name of the Cross Account Attachment.
	//
	// The following arguments are optional:
	Name pulumi.StringPtrInput
	// List of AWS account IDs that are allowed to associate resources with the accelerator.
	Principals pulumi.StringArrayInput
	// List of resources to be associated with the accelerator.
	Resources CrossAccountAttachmentResourceArrayInput
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapInput
}

func (CrossAccountAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*crossAccountAttachmentState)(nil)).Elem()
}

type crossAccountAttachmentArgs struct {
	// Name of the Cross Account Attachment.
	//
	// The following arguments are optional:
	Name *string `pulumi:"name"`
	// List of AWS account IDs that are allowed to associate resources with the accelerator.
	Principals []string `pulumi:"principals"`
	// List of resources to be associated with the accelerator.
	Resources []CrossAccountAttachmentResource `pulumi:"resources"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a CrossAccountAttachment resource.
type CrossAccountAttachmentArgs struct {
	// Name of the Cross Account Attachment.
	//
	// The following arguments are optional:
	Name pulumi.StringPtrInput
	// List of AWS account IDs that are allowed to associate resources with the accelerator.
	Principals pulumi.StringArrayInput
	// List of resources to be associated with the accelerator.
	Resources CrossAccountAttachmentResourceArrayInput
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
}

func (CrossAccountAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*crossAccountAttachmentArgs)(nil)).Elem()
}

type CrossAccountAttachmentInput interface {
	pulumi.Input

	ToCrossAccountAttachmentOutput() CrossAccountAttachmentOutput
	ToCrossAccountAttachmentOutputWithContext(ctx context.Context) CrossAccountAttachmentOutput
}

func (*CrossAccountAttachment) ElementType() reflect.Type {
	return reflect.TypeOf((**CrossAccountAttachment)(nil)).Elem()
}

func (i *CrossAccountAttachment) ToCrossAccountAttachmentOutput() CrossAccountAttachmentOutput {
	return i.ToCrossAccountAttachmentOutputWithContext(context.Background())
}

func (i *CrossAccountAttachment) ToCrossAccountAttachmentOutputWithContext(ctx context.Context) CrossAccountAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CrossAccountAttachmentOutput)
}

// CrossAccountAttachmentArrayInput is an input type that accepts CrossAccountAttachmentArray and CrossAccountAttachmentArrayOutput values.
// You can construct a concrete instance of `CrossAccountAttachmentArrayInput` via:
//
//	CrossAccountAttachmentArray{ CrossAccountAttachmentArgs{...} }
type CrossAccountAttachmentArrayInput interface {
	pulumi.Input

	ToCrossAccountAttachmentArrayOutput() CrossAccountAttachmentArrayOutput
	ToCrossAccountAttachmentArrayOutputWithContext(context.Context) CrossAccountAttachmentArrayOutput
}

type CrossAccountAttachmentArray []CrossAccountAttachmentInput

func (CrossAccountAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CrossAccountAttachment)(nil)).Elem()
}

func (i CrossAccountAttachmentArray) ToCrossAccountAttachmentArrayOutput() CrossAccountAttachmentArrayOutput {
	return i.ToCrossAccountAttachmentArrayOutputWithContext(context.Background())
}

func (i CrossAccountAttachmentArray) ToCrossAccountAttachmentArrayOutputWithContext(ctx context.Context) CrossAccountAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CrossAccountAttachmentArrayOutput)
}

// CrossAccountAttachmentMapInput is an input type that accepts CrossAccountAttachmentMap and CrossAccountAttachmentMapOutput values.
// You can construct a concrete instance of `CrossAccountAttachmentMapInput` via:
//
//	CrossAccountAttachmentMap{ "key": CrossAccountAttachmentArgs{...} }
type CrossAccountAttachmentMapInput interface {
	pulumi.Input

	ToCrossAccountAttachmentMapOutput() CrossAccountAttachmentMapOutput
	ToCrossAccountAttachmentMapOutputWithContext(context.Context) CrossAccountAttachmentMapOutput
}

type CrossAccountAttachmentMap map[string]CrossAccountAttachmentInput

func (CrossAccountAttachmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CrossAccountAttachment)(nil)).Elem()
}

func (i CrossAccountAttachmentMap) ToCrossAccountAttachmentMapOutput() CrossAccountAttachmentMapOutput {
	return i.ToCrossAccountAttachmentMapOutputWithContext(context.Background())
}

func (i CrossAccountAttachmentMap) ToCrossAccountAttachmentMapOutputWithContext(ctx context.Context) CrossAccountAttachmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CrossAccountAttachmentMapOutput)
}

type CrossAccountAttachmentOutput struct{ *pulumi.OutputState }

func (CrossAccountAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CrossAccountAttachment)(nil)).Elem()
}

func (o CrossAccountAttachmentOutput) ToCrossAccountAttachmentOutput() CrossAccountAttachmentOutput {
	return o
}

func (o CrossAccountAttachmentOutput) ToCrossAccountAttachmentOutputWithContext(ctx context.Context) CrossAccountAttachmentOutput {
	return o
}

// ARN of the Cross Account Attachment.
func (o CrossAccountAttachmentOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *CrossAccountAttachment) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// Creation Time when the Cross Account Attachment.
func (o CrossAccountAttachmentOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *CrossAccountAttachment) pulumi.StringOutput { return v.CreatedTime }).(pulumi.StringOutput)
}

// Last modified time of the Cross Account Attachment.
func (o CrossAccountAttachmentOutput) LastModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *CrossAccountAttachment) pulumi.StringOutput { return v.LastModifiedTime }).(pulumi.StringOutput)
}

// Name of the Cross Account Attachment.
//
// The following arguments are optional:
func (o CrossAccountAttachmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CrossAccountAttachment) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// List of AWS account IDs that are allowed to associate resources with the accelerator.
func (o CrossAccountAttachmentOutput) Principals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CrossAccountAttachment) pulumi.StringArrayOutput { return v.Principals }).(pulumi.StringArrayOutput)
}

// List of resources to be associated with the accelerator.
func (o CrossAccountAttachmentOutput) Resources() CrossAccountAttachmentResourceArrayOutput {
	return o.ApplyT(func(v *CrossAccountAttachment) CrossAccountAttachmentResourceArrayOutput { return v.Resources }).(CrossAccountAttachmentResourceArrayOutput)
}

// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o CrossAccountAttachmentOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CrossAccountAttachment) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
//
// Deprecated: Please use `tags` instead.
func (o CrossAccountAttachmentOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CrossAccountAttachment) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

type CrossAccountAttachmentArrayOutput struct{ *pulumi.OutputState }

func (CrossAccountAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CrossAccountAttachment)(nil)).Elem()
}

func (o CrossAccountAttachmentArrayOutput) ToCrossAccountAttachmentArrayOutput() CrossAccountAttachmentArrayOutput {
	return o
}

func (o CrossAccountAttachmentArrayOutput) ToCrossAccountAttachmentArrayOutputWithContext(ctx context.Context) CrossAccountAttachmentArrayOutput {
	return o
}

func (o CrossAccountAttachmentArrayOutput) Index(i pulumi.IntInput) CrossAccountAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CrossAccountAttachment {
		return vs[0].([]*CrossAccountAttachment)[vs[1].(int)]
	}).(CrossAccountAttachmentOutput)
}

type CrossAccountAttachmentMapOutput struct{ *pulumi.OutputState }

func (CrossAccountAttachmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CrossAccountAttachment)(nil)).Elem()
}

func (o CrossAccountAttachmentMapOutput) ToCrossAccountAttachmentMapOutput() CrossAccountAttachmentMapOutput {
	return o
}

func (o CrossAccountAttachmentMapOutput) ToCrossAccountAttachmentMapOutputWithContext(ctx context.Context) CrossAccountAttachmentMapOutput {
	return o
}

func (o CrossAccountAttachmentMapOutput) MapIndex(k pulumi.StringInput) CrossAccountAttachmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CrossAccountAttachment {
		return vs[0].(map[string]*CrossAccountAttachment)[vs[1].(string)]
	}).(CrossAccountAttachmentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CrossAccountAttachmentInput)(nil)).Elem(), &CrossAccountAttachment{})
	pulumi.RegisterInputType(reflect.TypeOf((*CrossAccountAttachmentArrayInput)(nil)).Elem(), CrossAccountAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CrossAccountAttachmentMapInput)(nil)).Elem(), CrossAccountAttachmentMap{})
	pulumi.RegisterOutputType(CrossAccountAttachmentOutput{})
	pulumi.RegisterOutputType(CrossAccountAttachmentArrayOutput{})
	pulumi.RegisterOutputType(CrossAccountAttachmentMapOutput{})
}
