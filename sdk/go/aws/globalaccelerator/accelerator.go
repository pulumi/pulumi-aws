// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package globalaccelerator

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a Global Accelerator accelerator.
// 
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/globalaccelerator_accelerator.html.markdown.
type Accelerator struct {
	pulumi.CustomResourceState

	// The attributes of the accelerator. Fields documented below.
	Attributes AcceleratorAttributesPtrOutput `pulumi:"attributes"`
	// Indicates whether the accelerator is enabled. The value is true or false. The default value is true.
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// The value for the address type must be `IPV4`.
	IpAddressType pulumi.StringPtrOutput `pulumi:"ipAddressType"`
	// IP address set associated with the accelerator.
	IpSets AcceleratorIpSetArrayOutput `pulumi:"ipSets"`
	// The name of the accelerator.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewAccelerator registers a new resource with the given unique name, arguments, and options.
func NewAccelerator(ctx *pulumi.Context,
	name string, args *AcceleratorArgs, opts ...pulumi.ResourceOption) (*Accelerator, error) {
	if args == nil {
		args = &AcceleratorArgs{}
	}
	var resource Accelerator
	err := ctx.RegisterResource("aws:globalaccelerator/accelerator:Accelerator", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccelerator gets an existing Accelerator resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccelerator(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AcceleratorState, opts ...pulumi.ResourceOption) (*Accelerator, error) {
	var resource Accelerator
	err := ctx.ReadResource("aws:globalaccelerator/accelerator:Accelerator", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Accelerator resources.
type acceleratorState struct {
	// The attributes of the accelerator. Fields documented below.
	Attributes *AcceleratorAttributes `pulumi:"attributes"`
	// Indicates whether the accelerator is enabled. The value is true or false. The default value is true.
	Enabled *bool `pulumi:"enabled"`
	// The value for the address type must be `IPV4`.
	IpAddressType *string `pulumi:"ipAddressType"`
	// IP address set associated with the accelerator.
	IpSets []AcceleratorIpSet `pulumi:"ipSets"`
	// The name of the accelerator.
	Name *string `pulumi:"name"`
}

type AcceleratorState struct {
	// The attributes of the accelerator. Fields documented below.
	Attributes AcceleratorAttributesPtrInput
	// Indicates whether the accelerator is enabled. The value is true or false. The default value is true.
	Enabled pulumi.BoolPtrInput
	// The value for the address type must be `IPV4`.
	IpAddressType pulumi.StringPtrInput
	// IP address set associated with the accelerator.
	IpSets AcceleratorIpSetArrayInput
	// The name of the accelerator.
	Name pulumi.StringPtrInput
}

func (AcceleratorState) ElementType() reflect.Type {
	return reflect.TypeOf((*acceleratorState)(nil)).Elem()
}

type acceleratorArgs struct {
	// The attributes of the accelerator. Fields documented below.
	Attributes *AcceleratorAttributes `pulumi:"attributes"`
	// Indicates whether the accelerator is enabled. The value is true or false. The default value is true.
	Enabled *bool `pulumi:"enabled"`
	// The value for the address type must be `IPV4`.
	IpAddressType *string `pulumi:"ipAddressType"`
	// The name of the accelerator.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a Accelerator resource.
type AcceleratorArgs struct {
	// The attributes of the accelerator. Fields documented below.
	Attributes AcceleratorAttributesPtrInput
	// Indicates whether the accelerator is enabled. The value is true or false. The default value is true.
	Enabled pulumi.BoolPtrInput
	// The value for the address type must be `IPV4`.
	IpAddressType pulumi.StringPtrInput
	// The name of the accelerator.
	Name pulumi.StringPtrInput
}

func (AcceleratorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*acceleratorArgs)(nil)).Elem()
}

