// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package globalaccelerator

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a Global Accelerator custom routing accelerator.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/globalaccelerator"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := globalaccelerator.NewCustomRoutingAccelerator(ctx, "example", &globalaccelerator.CustomRoutingAcceleratorArgs{
//				Attributes: &globalaccelerator.CustomRoutingAcceleratorAttributesArgs{
//					FlowLogsEnabled:  pulumi.Bool(true),
//					FlowLogsS3Bucket: pulumi.String("example-bucket"),
//					FlowLogsS3Prefix: pulumi.String("flow-logs/"),
//				},
//				Enabled:       pulumi.Bool(true),
//				IpAddressType: pulumi.String("IPV4"),
//				IpAddresses: pulumi.StringArray{
//					pulumi.String("1.2.3.4"),
//				},
//				Name: pulumi.String("Example"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// terraform import {
//
//	to = aws_globalaccelerator_custom_routing_accelerator.example
//
//	id = "arn:aws:globalaccelerator::111111111111:accelerator/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" } Using `pulumi import`, import Global Accelerator custom routing accelerators using the `arn`. For exampleconsole % pulumi import aws_globalaccelerator_custom_routing_accelerator.example arn:aws:globalaccelerator::111111111111:accelerator/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
type CustomRoutingAccelerator struct {
	pulumi.CustomResourceState

	// The attributes of the accelerator. Fields documented below.
	Attributes CustomRoutingAcceleratorAttributesPtrOutput `pulumi:"attributes"`
	// The DNS name of the accelerator. For example, `a5d53ff5ee6bca4ce.awsglobalaccelerator.com`.
	DnsName pulumi.StringOutput `pulumi:"dnsName"`
	// Indicates whether the accelerator is enabled. Defaults to `true`. Valid values: `true`, `false`.
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// -  The Global Accelerator Route 53 zone ID that can be used to
	//    route an [Alias Resource Record Set](https://docs.aws.amazon.com/Route53/latest/APIReference/API_AliasTarget.html) to the Global Accelerator. This attribute
	//    is simply an alias for the zone ID `Z2BJ6XQ5FK7U4H`.
	HostedZoneId pulumi.StringOutput `pulumi:"hostedZoneId"`
	// The IP address type that an accelerator supports. For a custom routing accelerator, the value must be `"IPV4"`.
	IpAddressType pulumi.StringPtrOutput `pulumi:"ipAddressType"`
	// The IP addresses to use for BYOIP accelerators. If not specified, the service assigns IP addresses. Valid values: 1 or 2 IPv4 addresses.
	IpAddresses pulumi.StringArrayOutput `pulumi:"ipAddresses"`
	// IP address set associated with the accelerator.
	IpSets CustomRoutingAcceleratorIpSetArrayOutput `pulumi:"ipSets"`
	// The name of a custom routing accelerator.
	Name pulumi.StringOutput `pulumi:"name"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumi.StringMapOutput `pulumi:"tagsAll"`
}

// NewCustomRoutingAccelerator registers a new resource with the given unique name, arguments, and options.
func NewCustomRoutingAccelerator(ctx *pulumi.Context,
	name string, args *CustomRoutingAcceleratorArgs, opts ...pulumi.ResourceOption) (*CustomRoutingAccelerator, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CustomRoutingAccelerator
	err := ctx.RegisterResource("aws:globalaccelerator/customRoutingAccelerator:CustomRoutingAccelerator", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomRoutingAccelerator gets an existing CustomRoutingAccelerator resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomRoutingAccelerator(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomRoutingAcceleratorState, opts ...pulumi.ResourceOption) (*CustomRoutingAccelerator, error) {
	var resource CustomRoutingAccelerator
	err := ctx.ReadResource("aws:globalaccelerator/customRoutingAccelerator:CustomRoutingAccelerator", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CustomRoutingAccelerator resources.
type customRoutingAcceleratorState struct {
	// The attributes of the accelerator. Fields documented below.
	Attributes *CustomRoutingAcceleratorAttributes `pulumi:"attributes"`
	// The DNS name of the accelerator. For example, `a5d53ff5ee6bca4ce.awsglobalaccelerator.com`.
	DnsName *string `pulumi:"dnsName"`
	// Indicates whether the accelerator is enabled. Defaults to `true`. Valid values: `true`, `false`.
	Enabled *bool `pulumi:"enabled"`
	// -  The Global Accelerator Route 53 zone ID that can be used to
	//    route an [Alias Resource Record Set](https://docs.aws.amazon.com/Route53/latest/APIReference/API_AliasTarget.html) to the Global Accelerator. This attribute
	//    is simply an alias for the zone ID `Z2BJ6XQ5FK7U4H`.
	HostedZoneId *string `pulumi:"hostedZoneId"`
	// The IP address type that an accelerator supports. For a custom routing accelerator, the value must be `"IPV4"`.
	IpAddressType *string `pulumi:"ipAddressType"`
	// The IP addresses to use for BYOIP accelerators. If not specified, the service assigns IP addresses. Valid values: 1 or 2 IPv4 addresses.
	IpAddresses []string `pulumi:"ipAddresses"`
	// IP address set associated with the accelerator.
	IpSets []CustomRoutingAcceleratorIpSet `pulumi:"ipSets"`
	// The name of a custom routing accelerator.
	Name *string `pulumi:"name"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type CustomRoutingAcceleratorState struct {
	// The attributes of the accelerator. Fields documented below.
	Attributes CustomRoutingAcceleratorAttributesPtrInput
	// The DNS name of the accelerator. For example, `a5d53ff5ee6bca4ce.awsglobalaccelerator.com`.
	DnsName pulumi.StringPtrInput
	// Indicates whether the accelerator is enabled. Defaults to `true`. Valid values: `true`, `false`.
	Enabled pulumi.BoolPtrInput
	// -  The Global Accelerator Route 53 zone ID that can be used to
	//    route an [Alias Resource Record Set](https://docs.aws.amazon.com/Route53/latest/APIReference/API_AliasTarget.html) to the Global Accelerator. This attribute
	//    is simply an alias for the zone ID `Z2BJ6XQ5FK7U4H`.
	HostedZoneId pulumi.StringPtrInput
	// The IP address type that an accelerator supports. For a custom routing accelerator, the value must be `"IPV4"`.
	IpAddressType pulumi.StringPtrInput
	// The IP addresses to use for BYOIP accelerators. If not specified, the service assigns IP addresses. Valid values: 1 or 2 IPv4 addresses.
	IpAddresses pulumi.StringArrayInput
	// IP address set associated with the accelerator.
	IpSets CustomRoutingAcceleratorIpSetArrayInput
	// The name of a custom routing accelerator.
	Name pulumi.StringPtrInput
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumi.StringMapInput
}

func (CustomRoutingAcceleratorState) ElementType() reflect.Type {
	return reflect.TypeOf((*customRoutingAcceleratorState)(nil)).Elem()
}

type customRoutingAcceleratorArgs struct {
	// The attributes of the accelerator. Fields documented below.
	Attributes *CustomRoutingAcceleratorAttributes `pulumi:"attributes"`
	// Indicates whether the accelerator is enabled. Defaults to `true`. Valid values: `true`, `false`.
	Enabled *bool `pulumi:"enabled"`
	// The IP address type that an accelerator supports. For a custom routing accelerator, the value must be `"IPV4"`.
	IpAddressType *string `pulumi:"ipAddressType"`
	// The IP addresses to use for BYOIP accelerators. If not specified, the service assigns IP addresses. Valid values: 1 or 2 IPv4 addresses.
	IpAddresses []string `pulumi:"ipAddresses"`
	// The name of a custom routing accelerator.
	Name string `pulumi:"name"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a CustomRoutingAccelerator resource.
type CustomRoutingAcceleratorArgs struct {
	// The attributes of the accelerator. Fields documented below.
	Attributes CustomRoutingAcceleratorAttributesPtrInput
	// Indicates whether the accelerator is enabled. Defaults to `true`. Valid values: `true`, `false`.
	Enabled pulumi.BoolPtrInput
	// The IP address type that an accelerator supports. For a custom routing accelerator, the value must be `"IPV4"`.
	IpAddressType pulumi.StringPtrInput
	// The IP addresses to use for BYOIP accelerators. If not specified, the service assigns IP addresses. Valid values: 1 or 2 IPv4 addresses.
	IpAddresses pulumi.StringArrayInput
	// The name of a custom routing accelerator.
	Name pulumi.StringInput
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
}

func (CustomRoutingAcceleratorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customRoutingAcceleratorArgs)(nil)).Elem()
}

type CustomRoutingAcceleratorInput interface {
	pulumi.Input

	ToCustomRoutingAcceleratorOutput() CustomRoutingAcceleratorOutput
	ToCustomRoutingAcceleratorOutputWithContext(ctx context.Context) CustomRoutingAcceleratorOutput
}

func (*CustomRoutingAccelerator) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomRoutingAccelerator)(nil)).Elem()
}

func (i *CustomRoutingAccelerator) ToCustomRoutingAcceleratorOutput() CustomRoutingAcceleratorOutput {
	return i.ToCustomRoutingAcceleratorOutputWithContext(context.Background())
}

func (i *CustomRoutingAccelerator) ToCustomRoutingAcceleratorOutputWithContext(ctx context.Context) CustomRoutingAcceleratorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRoutingAcceleratorOutput)
}

// CustomRoutingAcceleratorArrayInput is an input type that accepts CustomRoutingAcceleratorArray and CustomRoutingAcceleratorArrayOutput values.
// You can construct a concrete instance of `CustomRoutingAcceleratorArrayInput` via:
//
//	CustomRoutingAcceleratorArray{ CustomRoutingAcceleratorArgs{...} }
type CustomRoutingAcceleratorArrayInput interface {
	pulumi.Input

	ToCustomRoutingAcceleratorArrayOutput() CustomRoutingAcceleratorArrayOutput
	ToCustomRoutingAcceleratorArrayOutputWithContext(context.Context) CustomRoutingAcceleratorArrayOutput
}

type CustomRoutingAcceleratorArray []CustomRoutingAcceleratorInput

func (CustomRoutingAcceleratorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomRoutingAccelerator)(nil)).Elem()
}

func (i CustomRoutingAcceleratorArray) ToCustomRoutingAcceleratorArrayOutput() CustomRoutingAcceleratorArrayOutput {
	return i.ToCustomRoutingAcceleratorArrayOutputWithContext(context.Background())
}

func (i CustomRoutingAcceleratorArray) ToCustomRoutingAcceleratorArrayOutputWithContext(ctx context.Context) CustomRoutingAcceleratorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRoutingAcceleratorArrayOutput)
}

// CustomRoutingAcceleratorMapInput is an input type that accepts CustomRoutingAcceleratorMap and CustomRoutingAcceleratorMapOutput values.
// You can construct a concrete instance of `CustomRoutingAcceleratorMapInput` via:
//
//	CustomRoutingAcceleratorMap{ "key": CustomRoutingAcceleratorArgs{...} }
type CustomRoutingAcceleratorMapInput interface {
	pulumi.Input

	ToCustomRoutingAcceleratorMapOutput() CustomRoutingAcceleratorMapOutput
	ToCustomRoutingAcceleratorMapOutputWithContext(context.Context) CustomRoutingAcceleratorMapOutput
}

type CustomRoutingAcceleratorMap map[string]CustomRoutingAcceleratorInput

func (CustomRoutingAcceleratorMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomRoutingAccelerator)(nil)).Elem()
}

func (i CustomRoutingAcceleratorMap) ToCustomRoutingAcceleratorMapOutput() CustomRoutingAcceleratorMapOutput {
	return i.ToCustomRoutingAcceleratorMapOutputWithContext(context.Background())
}

func (i CustomRoutingAcceleratorMap) ToCustomRoutingAcceleratorMapOutputWithContext(ctx context.Context) CustomRoutingAcceleratorMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRoutingAcceleratorMapOutput)
}

type CustomRoutingAcceleratorOutput struct{ *pulumi.OutputState }

func (CustomRoutingAcceleratorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomRoutingAccelerator)(nil)).Elem()
}

func (o CustomRoutingAcceleratorOutput) ToCustomRoutingAcceleratorOutput() CustomRoutingAcceleratorOutput {
	return o
}

func (o CustomRoutingAcceleratorOutput) ToCustomRoutingAcceleratorOutputWithContext(ctx context.Context) CustomRoutingAcceleratorOutput {
	return o
}

// The attributes of the accelerator. Fields documented below.
func (o CustomRoutingAcceleratorOutput) Attributes() CustomRoutingAcceleratorAttributesPtrOutput {
	return o.ApplyT(func(v *CustomRoutingAccelerator) CustomRoutingAcceleratorAttributesPtrOutput { return v.Attributes }).(CustomRoutingAcceleratorAttributesPtrOutput)
}

// The DNS name of the accelerator. For example, `a5d53ff5ee6bca4ce.awsglobalaccelerator.com`.
func (o CustomRoutingAcceleratorOutput) DnsName() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomRoutingAccelerator) pulumi.StringOutput { return v.DnsName }).(pulumi.StringOutput)
}

// Indicates whether the accelerator is enabled. Defaults to `true`. Valid values: `true`, `false`.
func (o CustomRoutingAcceleratorOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CustomRoutingAccelerator) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

//   - The Global Accelerator Route 53 zone ID that can be used to
//     route an [Alias Resource Record Set](https://docs.aws.amazon.com/Route53/latest/APIReference/API_AliasTarget.html) to the Global Accelerator. This attribute
//     is simply an alias for the zone ID `Z2BJ6XQ5FK7U4H`.
func (o CustomRoutingAcceleratorOutput) HostedZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomRoutingAccelerator) pulumi.StringOutput { return v.HostedZoneId }).(pulumi.StringOutput)
}

// The IP address type that an accelerator supports. For a custom routing accelerator, the value must be `"IPV4"`.
func (o CustomRoutingAcceleratorOutput) IpAddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomRoutingAccelerator) pulumi.StringPtrOutput { return v.IpAddressType }).(pulumi.StringPtrOutput)
}

// The IP addresses to use for BYOIP accelerators. If not specified, the service assigns IP addresses. Valid values: 1 or 2 IPv4 addresses.
func (o CustomRoutingAcceleratorOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CustomRoutingAccelerator) pulumi.StringArrayOutput { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

// IP address set associated with the accelerator.
func (o CustomRoutingAcceleratorOutput) IpSets() CustomRoutingAcceleratorIpSetArrayOutput {
	return o.ApplyT(func(v *CustomRoutingAccelerator) CustomRoutingAcceleratorIpSetArrayOutput { return v.IpSets }).(CustomRoutingAcceleratorIpSetArrayOutput)
}

// The name of a custom routing accelerator.
func (o CustomRoutingAcceleratorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomRoutingAccelerator) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o CustomRoutingAcceleratorOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CustomRoutingAccelerator) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o CustomRoutingAcceleratorOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *CustomRoutingAccelerator) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

type CustomRoutingAcceleratorArrayOutput struct{ *pulumi.OutputState }

func (CustomRoutingAcceleratorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomRoutingAccelerator)(nil)).Elem()
}

func (o CustomRoutingAcceleratorArrayOutput) ToCustomRoutingAcceleratorArrayOutput() CustomRoutingAcceleratorArrayOutput {
	return o
}

func (o CustomRoutingAcceleratorArrayOutput) ToCustomRoutingAcceleratorArrayOutputWithContext(ctx context.Context) CustomRoutingAcceleratorArrayOutput {
	return o
}

func (o CustomRoutingAcceleratorArrayOutput) Index(i pulumi.IntInput) CustomRoutingAcceleratorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CustomRoutingAccelerator {
		return vs[0].([]*CustomRoutingAccelerator)[vs[1].(int)]
	}).(CustomRoutingAcceleratorOutput)
}

type CustomRoutingAcceleratorMapOutput struct{ *pulumi.OutputState }

func (CustomRoutingAcceleratorMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomRoutingAccelerator)(nil)).Elem()
}

func (o CustomRoutingAcceleratorMapOutput) ToCustomRoutingAcceleratorMapOutput() CustomRoutingAcceleratorMapOutput {
	return o
}

func (o CustomRoutingAcceleratorMapOutput) ToCustomRoutingAcceleratorMapOutputWithContext(ctx context.Context) CustomRoutingAcceleratorMapOutput {
	return o
}

func (o CustomRoutingAcceleratorMapOutput) MapIndex(k pulumi.StringInput) CustomRoutingAcceleratorOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CustomRoutingAccelerator {
		return vs[0].(map[string]*CustomRoutingAccelerator)[vs[1].(string)]
	}).(CustomRoutingAcceleratorOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomRoutingAcceleratorInput)(nil)).Elem(), &CustomRoutingAccelerator{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomRoutingAcceleratorArrayInput)(nil)).Elem(), CustomRoutingAcceleratorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomRoutingAcceleratorMapInput)(nil)).Elem(), CustomRoutingAcceleratorMap{})
	pulumi.RegisterOutputType(CustomRoutingAcceleratorOutput{})
	pulumi.RegisterOutputType(CustomRoutingAcceleratorArrayOutput{})
	pulumi.RegisterOutputType(CustomRoutingAcceleratorMapOutput{})
}
