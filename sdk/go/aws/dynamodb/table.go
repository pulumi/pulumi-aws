// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynamodb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Table struct {
	pulumi.CustomResourceState

	Arn                    pulumi.StringOutput                  `pulumi:"arn"`
	Attributes             TableAttributeArrayOutput            `pulumi:"attributes"`
	BillingMode            pulumi.StringPtrOutput               `pulumi:"billingMode"`
	GlobalSecondaryIndexes TableGlobalSecondaryIndexArrayOutput `pulumi:"globalSecondaryIndexes"`
	HashKey                pulumi.StringOutput                  `pulumi:"hashKey"`
	LocalSecondaryIndexes  TableLocalSecondaryIndexArrayOutput  `pulumi:"localSecondaryIndexes"`
	Name                   pulumi.StringOutput                  `pulumi:"name"`
	PointInTimeRecovery    TablePointInTimeRecoveryOutput       `pulumi:"pointInTimeRecovery"`
	RangeKey               pulumi.StringPtrOutput               `pulumi:"rangeKey"`
	ReadCapacity           pulumi.IntOutput                     `pulumi:"readCapacity"`
	Replicas               TableReplicaTypeArrayOutput          `pulumi:"replicas"`
	RestoreDateTime        pulumi.StringPtrOutput               `pulumi:"restoreDateTime"`
	RestoreSourceName      pulumi.StringPtrOutput               `pulumi:"restoreSourceName"`
	RestoreToLatestTime    pulumi.BoolPtrOutput                 `pulumi:"restoreToLatestTime"`
	ServerSideEncryption   TableServerSideEncryptionOutput      `pulumi:"serverSideEncryption"`
	StreamArn              pulumi.StringOutput                  `pulumi:"streamArn"`
	StreamEnabled          pulumi.BoolPtrOutput                 `pulumi:"streamEnabled"`
	StreamLabel            pulumi.StringOutput                  `pulumi:"streamLabel"`
	StreamViewType         pulumi.StringOutput                  `pulumi:"streamViewType"`
	TableClass             pulumi.StringPtrOutput               `pulumi:"tableClass"`
	Tags                   pulumi.StringMapOutput               `pulumi:"tags"`
	TagsAll                pulumi.StringMapOutput               `pulumi:"tagsAll"`
	Ttl                    TableTtlOutput                       `pulumi:"ttl"`
	WriteCapacity          pulumi.IntOutput                     `pulumi:"writeCapacity"`
}

// NewTable registers a new resource with the given unique name, arguments, and options.
func NewTable(ctx *pulumi.Context,
	name string, args *TableArgs, opts ...pulumi.ResourceOption) (*Table, error) {
	if args == nil {
		args = &TableArgs{}
	}

	var resource Table
	err := ctx.RegisterResource("aws:dynamodb/table:Table", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTable gets an existing Table resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTable(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TableState, opts ...pulumi.ResourceOption) (*Table, error) {
	var resource Table
	err := ctx.ReadResource("aws:dynamodb/table:Table", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Table resources.
type tableState struct {
	Arn                    *string                     `pulumi:"arn"`
	Attributes             []TableAttribute            `pulumi:"attributes"`
	BillingMode            *string                     `pulumi:"billingMode"`
	GlobalSecondaryIndexes []TableGlobalSecondaryIndex `pulumi:"globalSecondaryIndexes"`
	HashKey                *string                     `pulumi:"hashKey"`
	LocalSecondaryIndexes  []TableLocalSecondaryIndex  `pulumi:"localSecondaryIndexes"`
	Name                   *string                     `pulumi:"name"`
	PointInTimeRecovery    *TablePointInTimeRecovery   `pulumi:"pointInTimeRecovery"`
	RangeKey               *string                     `pulumi:"rangeKey"`
	ReadCapacity           *int                        `pulumi:"readCapacity"`
	Replicas               []TableReplicaType          `pulumi:"replicas"`
	RestoreDateTime        *string                     `pulumi:"restoreDateTime"`
	RestoreSourceName      *string                     `pulumi:"restoreSourceName"`
	RestoreToLatestTime    *bool                       `pulumi:"restoreToLatestTime"`
	ServerSideEncryption   *TableServerSideEncryption  `pulumi:"serverSideEncryption"`
	StreamArn              *string                     `pulumi:"streamArn"`
	StreamEnabled          *bool                       `pulumi:"streamEnabled"`
	StreamLabel            *string                     `pulumi:"streamLabel"`
	StreamViewType         *string                     `pulumi:"streamViewType"`
	TableClass             *string                     `pulumi:"tableClass"`
	Tags                   map[string]string           `pulumi:"tags"`
	TagsAll                map[string]string           `pulumi:"tagsAll"`
	Ttl                    *TableTtl                   `pulumi:"ttl"`
	WriteCapacity          *int                        `pulumi:"writeCapacity"`
}

type TableState struct {
	Arn                    pulumi.StringPtrInput
	Attributes             TableAttributeArrayInput
	BillingMode            pulumi.StringPtrInput
	GlobalSecondaryIndexes TableGlobalSecondaryIndexArrayInput
	HashKey                pulumi.StringPtrInput
	LocalSecondaryIndexes  TableLocalSecondaryIndexArrayInput
	Name                   pulumi.StringPtrInput
	PointInTimeRecovery    TablePointInTimeRecoveryPtrInput
	RangeKey               pulumi.StringPtrInput
	ReadCapacity           pulumi.IntPtrInput
	Replicas               TableReplicaTypeArrayInput
	RestoreDateTime        pulumi.StringPtrInput
	RestoreSourceName      pulumi.StringPtrInput
	RestoreToLatestTime    pulumi.BoolPtrInput
	ServerSideEncryption   TableServerSideEncryptionPtrInput
	StreamArn              pulumi.StringPtrInput
	StreamEnabled          pulumi.BoolPtrInput
	StreamLabel            pulumi.StringPtrInput
	StreamViewType         pulumi.StringPtrInput
	TableClass             pulumi.StringPtrInput
	Tags                   pulumi.StringMapInput
	TagsAll                pulumi.StringMapInput
	Ttl                    TableTtlPtrInput
	WriteCapacity          pulumi.IntPtrInput
}

func (TableState) ElementType() reflect.Type {
	return reflect.TypeOf((*tableState)(nil)).Elem()
}

type tableArgs struct {
	Attributes             []TableAttribute            `pulumi:"attributes"`
	BillingMode            *string                     `pulumi:"billingMode"`
	GlobalSecondaryIndexes []TableGlobalSecondaryIndex `pulumi:"globalSecondaryIndexes"`
	HashKey                *string                     `pulumi:"hashKey"`
	LocalSecondaryIndexes  []TableLocalSecondaryIndex  `pulumi:"localSecondaryIndexes"`
	Name                   *string                     `pulumi:"name"`
	PointInTimeRecovery    *TablePointInTimeRecovery   `pulumi:"pointInTimeRecovery"`
	RangeKey               *string                     `pulumi:"rangeKey"`
	ReadCapacity           *int                        `pulumi:"readCapacity"`
	Replicas               []TableReplicaType          `pulumi:"replicas"`
	RestoreDateTime        *string                     `pulumi:"restoreDateTime"`
	RestoreSourceName      *string                     `pulumi:"restoreSourceName"`
	RestoreToLatestTime    *bool                       `pulumi:"restoreToLatestTime"`
	ServerSideEncryption   *TableServerSideEncryption  `pulumi:"serverSideEncryption"`
	StreamEnabled          *bool                       `pulumi:"streamEnabled"`
	StreamViewType         *string                     `pulumi:"streamViewType"`
	TableClass             *string                     `pulumi:"tableClass"`
	Tags                   map[string]string           `pulumi:"tags"`
	Ttl                    *TableTtl                   `pulumi:"ttl"`
	WriteCapacity          *int                        `pulumi:"writeCapacity"`
}

// The set of arguments for constructing a Table resource.
type TableArgs struct {
	Attributes             TableAttributeArrayInput
	BillingMode            pulumi.StringPtrInput
	GlobalSecondaryIndexes TableGlobalSecondaryIndexArrayInput
	HashKey                pulumi.StringPtrInput
	LocalSecondaryIndexes  TableLocalSecondaryIndexArrayInput
	Name                   pulumi.StringPtrInput
	PointInTimeRecovery    TablePointInTimeRecoveryPtrInput
	RangeKey               pulumi.StringPtrInput
	ReadCapacity           pulumi.IntPtrInput
	Replicas               TableReplicaTypeArrayInput
	RestoreDateTime        pulumi.StringPtrInput
	RestoreSourceName      pulumi.StringPtrInput
	RestoreToLatestTime    pulumi.BoolPtrInput
	ServerSideEncryption   TableServerSideEncryptionPtrInput
	StreamEnabled          pulumi.BoolPtrInput
	StreamViewType         pulumi.StringPtrInput
	TableClass             pulumi.StringPtrInput
	Tags                   pulumi.StringMapInput
	Ttl                    TableTtlPtrInput
	WriteCapacity          pulumi.IntPtrInput
}

func (TableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tableArgs)(nil)).Elem()
}

type TableInput interface {
	pulumi.Input

	ToTableOutput() TableOutput
	ToTableOutputWithContext(ctx context.Context) TableOutput
}

func (*Table) ElementType() reflect.Type {
	return reflect.TypeOf((**Table)(nil)).Elem()
}

func (i *Table) ToTableOutput() TableOutput {
	return i.ToTableOutputWithContext(context.Background())
}

func (i *Table) ToTableOutputWithContext(ctx context.Context) TableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableOutput)
}

// TableArrayInput is an input type that accepts TableArray and TableArrayOutput values.
// You can construct a concrete instance of `TableArrayInput` via:
//
//	TableArray{ TableArgs{...} }
type TableArrayInput interface {
	pulumi.Input

	ToTableArrayOutput() TableArrayOutput
	ToTableArrayOutputWithContext(context.Context) TableArrayOutput
}

type TableArray []TableInput

func (TableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Table)(nil)).Elem()
}

func (i TableArray) ToTableArrayOutput() TableArrayOutput {
	return i.ToTableArrayOutputWithContext(context.Background())
}

func (i TableArray) ToTableArrayOutputWithContext(ctx context.Context) TableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableArrayOutput)
}

// TableMapInput is an input type that accepts TableMap and TableMapOutput values.
// You can construct a concrete instance of `TableMapInput` via:
//
//	TableMap{ "key": TableArgs{...} }
type TableMapInput interface {
	pulumi.Input

	ToTableMapOutput() TableMapOutput
	ToTableMapOutputWithContext(context.Context) TableMapOutput
}

type TableMap map[string]TableInput

func (TableMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Table)(nil)).Elem()
}

func (i TableMap) ToTableMapOutput() TableMapOutput {
	return i.ToTableMapOutputWithContext(context.Background())
}

func (i TableMap) ToTableMapOutputWithContext(ctx context.Context) TableMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableMapOutput)
}

type TableOutput struct{ *pulumi.OutputState }

func (TableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Table)(nil)).Elem()
}

func (o TableOutput) ToTableOutput() TableOutput {
	return o
}

func (o TableOutput) ToTableOutputWithContext(ctx context.Context) TableOutput {
	return o
}

func (o TableOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *Table) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o TableOutput) Attributes() TableAttributeArrayOutput {
	return o.ApplyT(func(v *Table) TableAttributeArrayOutput { return v.Attributes }).(TableAttributeArrayOutput)
}

func (o TableOutput) BillingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Table) pulumi.StringPtrOutput { return v.BillingMode }).(pulumi.StringPtrOutput)
}

func (o TableOutput) GlobalSecondaryIndexes() TableGlobalSecondaryIndexArrayOutput {
	return o.ApplyT(func(v *Table) TableGlobalSecondaryIndexArrayOutput { return v.GlobalSecondaryIndexes }).(TableGlobalSecondaryIndexArrayOutput)
}

func (o TableOutput) HashKey() pulumi.StringOutput {
	return o.ApplyT(func(v *Table) pulumi.StringOutput { return v.HashKey }).(pulumi.StringOutput)
}

func (o TableOutput) LocalSecondaryIndexes() TableLocalSecondaryIndexArrayOutput {
	return o.ApplyT(func(v *Table) TableLocalSecondaryIndexArrayOutput { return v.LocalSecondaryIndexes }).(TableLocalSecondaryIndexArrayOutput)
}

func (o TableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Table) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o TableOutput) PointInTimeRecovery() TablePointInTimeRecoveryOutput {
	return o.ApplyT(func(v *Table) TablePointInTimeRecoveryOutput { return v.PointInTimeRecovery }).(TablePointInTimeRecoveryOutput)
}

func (o TableOutput) RangeKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Table) pulumi.StringPtrOutput { return v.RangeKey }).(pulumi.StringPtrOutput)
}

func (o TableOutput) ReadCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v *Table) pulumi.IntOutput { return v.ReadCapacity }).(pulumi.IntOutput)
}

func (o TableOutput) Replicas() TableReplicaTypeArrayOutput {
	return o.ApplyT(func(v *Table) TableReplicaTypeArrayOutput { return v.Replicas }).(TableReplicaTypeArrayOutput)
}

func (o TableOutput) RestoreDateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Table) pulumi.StringPtrOutput { return v.RestoreDateTime }).(pulumi.StringPtrOutput)
}

func (o TableOutput) RestoreSourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Table) pulumi.StringPtrOutput { return v.RestoreSourceName }).(pulumi.StringPtrOutput)
}

func (o TableOutput) RestoreToLatestTime() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Table) pulumi.BoolPtrOutput { return v.RestoreToLatestTime }).(pulumi.BoolPtrOutput)
}

func (o TableOutput) ServerSideEncryption() TableServerSideEncryptionOutput {
	return o.ApplyT(func(v *Table) TableServerSideEncryptionOutput { return v.ServerSideEncryption }).(TableServerSideEncryptionOutput)
}

func (o TableOutput) StreamArn() pulumi.StringOutput {
	return o.ApplyT(func(v *Table) pulumi.StringOutput { return v.StreamArn }).(pulumi.StringOutput)
}

func (o TableOutput) StreamEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Table) pulumi.BoolPtrOutput { return v.StreamEnabled }).(pulumi.BoolPtrOutput)
}

func (o TableOutput) StreamLabel() pulumi.StringOutput {
	return o.ApplyT(func(v *Table) pulumi.StringOutput { return v.StreamLabel }).(pulumi.StringOutput)
}

func (o TableOutput) StreamViewType() pulumi.StringOutput {
	return o.ApplyT(func(v *Table) pulumi.StringOutput { return v.StreamViewType }).(pulumi.StringOutput)
}

func (o TableOutput) TableClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Table) pulumi.StringPtrOutput { return v.TableClass }).(pulumi.StringPtrOutput)
}

func (o TableOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Table) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o TableOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Table) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o TableOutput) Ttl() TableTtlOutput {
	return o.ApplyT(func(v *Table) TableTtlOutput { return v.Ttl }).(TableTtlOutput)
}

func (o TableOutput) WriteCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v *Table) pulumi.IntOutput { return v.WriteCapacity }).(pulumi.IntOutput)
}

type TableArrayOutput struct{ *pulumi.OutputState }

func (TableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Table)(nil)).Elem()
}

func (o TableArrayOutput) ToTableArrayOutput() TableArrayOutput {
	return o
}

func (o TableArrayOutput) ToTableArrayOutputWithContext(ctx context.Context) TableArrayOutput {
	return o
}

func (o TableArrayOutput) Index(i pulumi.IntInput) TableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Table {
		return vs[0].([]*Table)[vs[1].(int)]
	}).(TableOutput)
}

type TableMapOutput struct{ *pulumi.OutputState }

func (TableMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Table)(nil)).Elem()
}

func (o TableMapOutput) ToTableMapOutput() TableMapOutput {
	return o
}

func (o TableMapOutput) ToTableMapOutputWithContext(ctx context.Context) TableMapOutput {
	return o
}

func (o TableMapOutput) MapIndex(k pulumi.StringInput) TableOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Table {
		return vs[0].(map[string]*Table)[vs[1].(string)]
	}).(TableOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TableInput)(nil)).Elem(), &Table{})
	pulumi.RegisterInputType(reflect.TypeOf((*TableArrayInput)(nil)).Elem(), TableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TableMapInput)(nil)).Elem(), TableMap{})
	pulumi.RegisterOutputType(TableOutput{})
	pulumi.RegisterOutputType(TableArrayOutput{})
	pulumi.RegisterOutputType(TableMapOutput{})
}
