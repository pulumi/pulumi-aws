// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynamodb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupTableItem(ctx *pulumi.Context, args *LookupTableItemArgs, opts ...pulumi.InvokeOption) (*LookupTableItemResult, error) {
	var rv LookupTableItemResult
	err := ctx.Invoke("aws:dynamodb/getTableItem:getTableItem", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTableItem.
type LookupTableItemArgs struct {
	ExpressionAttributeNames map[string]string `pulumi:"expressionAttributeNames"`
	Key                      string            `pulumi:"key"`
	ProjectionExpression     *string           `pulumi:"projectionExpression"`
	TableName                string            `pulumi:"tableName"`
}

// A collection of values returned by getTableItem.
type LookupTableItemResult struct {
	ExpressionAttributeNames map[string]string `pulumi:"expressionAttributeNames"`
	// The provider-assigned unique ID for this managed resource.
	Id                   string  `pulumi:"id"`
	Item                 string  `pulumi:"item"`
	Key                  string  `pulumi:"key"`
	ProjectionExpression *string `pulumi:"projectionExpression"`
	TableName            string  `pulumi:"tableName"`
}

func LookupTableItemOutput(ctx *pulumi.Context, args LookupTableItemOutputArgs, opts ...pulumi.InvokeOption) LookupTableItemResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTableItemResult, error) {
			args := v.(LookupTableItemArgs)
			r, err := LookupTableItem(ctx, &args, opts...)
			var s LookupTableItemResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupTableItemResultOutput)
}

// A collection of arguments for invoking getTableItem.
type LookupTableItemOutputArgs struct {
	ExpressionAttributeNames pulumi.StringMapInput `pulumi:"expressionAttributeNames"`
	Key                      pulumi.StringInput    `pulumi:"key"`
	ProjectionExpression     pulumi.StringPtrInput `pulumi:"projectionExpression"`
	TableName                pulumi.StringInput    `pulumi:"tableName"`
}

func (LookupTableItemOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTableItemArgs)(nil)).Elem()
}

// A collection of values returned by getTableItem.
type LookupTableItemResultOutput struct{ *pulumi.OutputState }

func (LookupTableItemResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTableItemResult)(nil)).Elem()
}

func (o LookupTableItemResultOutput) ToLookupTableItemResultOutput() LookupTableItemResultOutput {
	return o
}

func (o LookupTableItemResultOutput) ToLookupTableItemResultOutputWithContext(ctx context.Context) LookupTableItemResultOutput {
	return o
}

func (o LookupTableItemResultOutput) ExpressionAttributeNames() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupTableItemResult) map[string]string { return v.ExpressionAttributeNames }).(pulumi.StringMapOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupTableItemResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTableItemResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupTableItemResultOutput) Item() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTableItemResult) string { return v.Item }).(pulumi.StringOutput)
}

func (o LookupTableItemResultOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTableItemResult) string { return v.Key }).(pulumi.StringOutput)
}

func (o LookupTableItemResultOutput) ProjectionExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTableItemResult) *string { return v.ProjectionExpression }).(pulumi.StringPtrOutput)
}

func (o LookupTableItemResultOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTableItemResult) string { return v.TableName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTableItemResultOutput{})
}
