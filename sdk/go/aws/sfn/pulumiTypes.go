// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sfn

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ActivityEncryptionConfiguration struct {
	// Maximum duration for which Activities will reuse data keys. When the period expires, Activities will call GenerateDataKey. This setting only applies to customer managed KMS key and does not apply to AWS owned KMS key.
	KmsDataKeyReusePeriodSeconds *int `pulumi:"kmsDataKeyReusePeriodSeconds"`
	// The alias, alias ARN, key ID, or key ARN of the symmetric encryption KMS key that encrypts the data key. To specify a KMS key in a different AWS account, the customer must use the key ARN or alias ARN. For more information regarding kms_key_id, see [KeyId](https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestParameters) in the KMS documentation.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The encryption option specified for the activity. Valid values: `AWS_KMS_KEY`, `CUSTOMER_MANAGED_KMS_KEY`
	Type *string `pulumi:"type"`
}

// ActivityEncryptionConfigurationInput is an input type that accepts ActivityEncryptionConfigurationArgs and ActivityEncryptionConfigurationOutput values.
// You can construct a concrete instance of `ActivityEncryptionConfigurationInput` via:
//
//	ActivityEncryptionConfigurationArgs{...}
type ActivityEncryptionConfigurationInput interface {
	pulumi.Input

	ToActivityEncryptionConfigurationOutput() ActivityEncryptionConfigurationOutput
	ToActivityEncryptionConfigurationOutputWithContext(context.Context) ActivityEncryptionConfigurationOutput
}

type ActivityEncryptionConfigurationArgs struct {
	// Maximum duration for which Activities will reuse data keys. When the period expires, Activities will call GenerateDataKey. This setting only applies to customer managed KMS key and does not apply to AWS owned KMS key.
	KmsDataKeyReusePeriodSeconds pulumi.IntPtrInput `pulumi:"kmsDataKeyReusePeriodSeconds"`
	// The alias, alias ARN, key ID, or key ARN of the symmetric encryption KMS key that encrypts the data key. To specify a KMS key in a different AWS account, the customer must use the key ARN or alias ARN. For more information regarding kms_key_id, see [KeyId](https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestParameters) in the KMS documentation.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	// The encryption option specified for the activity. Valid values: `AWS_KMS_KEY`, `CUSTOMER_MANAGED_KMS_KEY`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ActivityEncryptionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActivityEncryptionConfiguration)(nil)).Elem()
}

func (i ActivityEncryptionConfigurationArgs) ToActivityEncryptionConfigurationOutput() ActivityEncryptionConfigurationOutput {
	return i.ToActivityEncryptionConfigurationOutputWithContext(context.Background())
}

func (i ActivityEncryptionConfigurationArgs) ToActivityEncryptionConfigurationOutputWithContext(ctx context.Context) ActivityEncryptionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActivityEncryptionConfigurationOutput)
}

func (i ActivityEncryptionConfigurationArgs) ToActivityEncryptionConfigurationPtrOutput() ActivityEncryptionConfigurationPtrOutput {
	return i.ToActivityEncryptionConfigurationPtrOutputWithContext(context.Background())
}

func (i ActivityEncryptionConfigurationArgs) ToActivityEncryptionConfigurationPtrOutputWithContext(ctx context.Context) ActivityEncryptionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActivityEncryptionConfigurationOutput).ToActivityEncryptionConfigurationPtrOutputWithContext(ctx)
}

// ActivityEncryptionConfigurationPtrInput is an input type that accepts ActivityEncryptionConfigurationArgs, ActivityEncryptionConfigurationPtr and ActivityEncryptionConfigurationPtrOutput values.
// You can construct a concrete instance of `ActivityEncryptionConfigurationPtrInput` via:
//
//	        ActivityEncryptionConfigurationArgs{...}
//
//	or:
//
//	        nil
type ActivityEncryptionConfigurationPtrInput interface {
	pulumi.Input

	ToActivityEncryptionConfigurationPtrOutput() ActivityEncryptionConfigurationPtrOutput
	ToActivityEncryptionConfigurationPtrOutputWithContext(context.Context) ActivityEncryptionConfigurationPtrOutput
}

type activityEncryptionConfigurationPtrType ActivityEncryptionConfigurationArgs

func ActivityEncryptionConfigurationPtr(v *ActivityEncryptionConfigurationArgs) ActivityEncryptionConfigurationPtrInput {
	return (*activityEncryptionConfigurationPtrType)(v)
}

func (*activityEncryptionConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ActivityEncryptionConfiguration)(nil)).Elem()
}

func (i *activityEncryptionConfigurationPtrType) ToActivityEncryptionConfigurationPtrOutput() ActivityEncryptionConfigurationPtrOutput {
	return i.ToActivityEncryptionConfigurationPtrOutputWithContext(context.Background())
}

func (i *activityEncryptionConfigurationPtrType) ToActivityEncryptionConfigurationPtrOutputWithContext(ctx context.Context) ActivityEncryptionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActivityEncryptionConfigurationPtrOutput)
}

type ActivityEncryptionConfigurationOutput struct{ *pulumi.OutputState }

func (ActivityEncryptionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActivityEncryptionConfiguration)(nil)).Elem()
}

func (o ActivityEncryptionConfigurationOutput) ToActivityEncryptionConfigurationOutput() ActivityEncryptionConfigurationOutput {
	return o
}

func (o ActivityEncryptionConfigurationOutput) ToActivityEncryptionConfigurationOutputWithContext(ctx context.Context) ActivityEncryptionConfigurationOutput {
	return o
}

func (o ActivityEncryptionConfigurationOutput) ToActivityEncryptionConfigurationPtrOutput() ActivityEncryptionConfigurationPtrOutput {
	return o.ToActivityEncryptionConfigurationPtrOutputWithContext(context.Background())
}

func (o ActivityEncryptionConfigurationOutput) ToActivityEncryptionConfigurationPtrOutputWithContext(ctx context.Context) ActivityEncryptionConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ActivityEncryptionConfiguration) *ActivityEncryptionConfiguration {
		return &v
	}).(ActivityEncryptionConfigurationPtrOutput)
}

// Maximum duration for which Activities will reuse data keys. When the period expires, Activities will call GenerateDataKey. This setting only applies to customer managed KMS key and does not apply to AWS owned KMS key.
func (o ActivityEncryptionConfigurationOutput) KmsDataKeyReusePeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ActivityEncryptionConfiguration) *int { return v.KmsDataKeyReusePeriodSeconds }).(pulumi.IntPtrOutput)
}

// The alias, alias ARN, key ID, or key ARN of the symmetric encryption KMS key that encrypts the data key. To specify a KMS key in a different AWS account, the customer must use the key ARN or alias ARN. For more information regarding kms_key_id, see [KeyId](https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestParameters) in the KMS documentation.
func (o ActivityEncryptionConfigurationOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActivityEncryptionConfiguration) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// The encryption option specified for the activity. Valid values: `AWS_KMS_KEY`, `CUSTOMER_MANAGED_KMS_KEY`
func (o ActivityEncryptionConfigurationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActivityEncryptionConfiguration) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ActivityEncryptionConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ActivityEncryptionConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActivityEncryptionConfiguration)(nil)).Elem()
}

func (o ActivityEncryptionConfigurationPtrOutput) ToActivityEncryptionConfigurationPtrOutput() ActivityEncryptionConfigurationPtrOutput {
	return o
}

func (o ActivityEncryptionConfigurationPtrOutput) ToActivityEncryptionConfigurationPtrOutputWithContext(ctx context.Context) ActivityEncryptionConfigurationPtrOutput {
	return o
}

func (o ActivityEncryptionConfigurationPtrOutput) Elem() ActivityEncryptionConfigurationOutput {
	return o.ApplyT(func(v *ActivityEncryptionConfiguration) ActivityEncryptionConfiguration {
		if v != nil {
			return *v
		}
		var ret ActivityEncryptionConfiguration
		return ret
	}).(ActivityEncryptionConfigurationOutput)
}

// Maximum duration for which Activities will reuse data keys. When the period expires, Activities will call GenerateDataKey. This setting only applies to customer managed KMS key and does not apply to AWS owned KMS key.
func (o ActivityEncryptionConfigurationPtrOutput) KmsDataKeyReusePeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ActivityEncryptionConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.KmsDataKeyReusePeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// The alias, alias ARN, key ID, or key ARN of the symmetric encryption KMS key that encrypts the data key. To specify a KMS key in a different AWS account, the customer must use the key ARN or alias ARN. For more information regarding kms_key_id, see [KeyId](https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestParameters) in the KMS documentation.
func (o ActivityEncryptionConfigurationPtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActivityEncryptionConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyId
	}).(pulumi.StringPtrOutput)
}

// The encryption option specified for the activity. Valid values: `AWS_KMS_KEY`, `CUSTOMER_MANAGED_KMS_KEY`
func (o ActivityEncryptionConfigurationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActivityEncryptionConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type AliasRoutingConfiguration struct {
	// The Amazon Resource Name (ARN) of the state machine version.
	StateMachineVersionArn string `pulumi:"stateMachineVersionArn"`
	// Percentage of traffic routed to the state machine version.
	Weight int `pulumi:"weight"`
}

// AliasRoutingConfigurationInput is an input type that accepts AliasRoutingConfigurationArgs and AliasRoutingConfigurationOutput values.
// You can construct a concrete instance of `AliasRoutingConfigurationInput` via:
//
//	AliasRoutingConfigurationArgs{...}
type AliasRoutingConfigurationInput interface {
	pulumi.Input

	ToAliasRoutingConfigurationOutput() AliasRoutingConfigurationOutput
	ToAliasRoutingConfigurationOutputWithContext(context.Context) AliasRoutingConfigurationOutput
}

type AliasRoutingConfigurationArgs struct {
	// The Amazon Resource Name (ARN) of the state machine version.
	StateMachineVersionArn pulumi.StringInput `pulumi:"stateMachineVersionArn"`
	// Percentage of traffic routed to the state machine version.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (AliasRoutingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AliasRoutingConfiguration)(nil)).Elem()
}

func (i AliasRoutingConfigurationArgs) ToAliasRoutingConfigurationOutput() AliasRoutingConfigurationOutput {
	return i.ToAliasRoutingConfigurationOutputWithContext(context.Background())
}

func (i AliasRoutingConfigurationArgs) ToAliasRoutingConfigurationOutputWithContext(ctx context.Context) AliasRoutingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AliasRoutingConfigurationOutput)
}

// AliasRoutingConfigurationArrayInput is an input type that accepts AliasRoutingConfigurationArray and AliasRoutingConfigurationArrayOutput values.
// You can construct a concrete instance of `AliasRoutingConfigurationArrayInput` via:
//
//	AliasRoutingConfigurationArray{ AliasRoutingConfigurationArgs{...} }
type AliasRoutingConfigurationArrayInput interface {
	pulumi.Input

	ToAliasRoutingConfigurationArrayOutput() AliasRoutingConfigurationArrayOutput
	ToAliasRoutingConfigurationArrayOutputWithContext(context.Context) AliasRoutingConfigurationArrayOutput
}

type AliasRoutingConfigurationArray []AliasRoutingConfigurationInput

func (AliasRoutingConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AliasRoutingConfiguration)(nil)).Elem()
}

func (i AliasRoutingConfigurationArray) ToAliasRoutingConfigurationArrayOutput() AliasRoutingConfigurationArrayOutput {
	return i.ToAliasRoutingConfigurationArrayOutputWithContext(context.Background())
}

func (i AliasRoutingConfigurationArray) ToAliasRoutingConfigurationArrayOutputWithContext(ctx context.Context) AliasRoutingConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AliasRoutingConfigurationArrayOutput)
}

type AliasRoutingConfigurationOutput struct{ *pulumi.OutputState }

func (AliasRoutingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AliasRoutingConfiguration)(nil)).Elem()
}

func (o AliasRoutingConfigurationOutput) ToAliasRoutingConfigurationOutput() AliasRoutingConfigurationOutput {
	return o
}

func (o AliasRoutingConfigurationOutput) ToAliasRoutingConfigurationOutputWithContext(ctx context.Context) AliasRoutingConfigurationOutput {
	return o
}

// The Amazon Resource Name (ARN) of the state machine version.
func (o AliasRoutingConfigurationOutput) StateMachineVersionArn() pulumi.StringOutput {
	return o.ApplyT(func(v AliasRoutingConfiguration) string { return v.StateMachineVersionArn }).(pulumi.StringOutput)
}

// Percentage of traffic routed to the state machine version.
func (o AliasRoutingConfigurationOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v AliasRoutingConfiguration) int { return v.Weight }).(pulumi.IntOutput)
}

type AliasRoutingConfigurationArrayOutput struct{ *pulumi.OutputState }

func (AliasRoutingConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AliasRoutingConfiguration)(nil)).Elem()
}

func (o AliasRoutingConfigurationArrayOutput) ToAliasRoutingConfigurationArrayOutput() AliasRoutingConfigurationArrayOutput {
	return o
}

func (o AliasRoutingConfigurationArrayOutput) ToAliasRoutingConfigurationArrayOutputWithContext(ctx context.Context) AliasRoutingConfigurationArrayOutput {
	return o
}

func (o AliasRoutingConfigurationArrayOutput) Index(i pulumi.IntInput) AliasRoutingConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AliasRoutingConfiguration {
		return vs[0].([]AliasRoutingConfiguration)[vs[1].(int)]
	}).(AliasRoutingConfigurationOutput)
}

type StateMachineEncryptionConfiguration struct {
	// Maximum duration for which Step Functions will reuse data keys. When the period expires, Step Functions will call GenerateDataKey. This setting only applies to customer managed KMS key and does not apply when `type` is `AWS_OWNED_KEY`.
	KmsDataKeyReusePeriodSeconds *int `pulumi:"kmsDataKeyReusePeriodSeconds"`
	// The alias, alias ARN, key ID, or key ARN of the symmetric encryption KMS key that encrypts the data key. To specify a KMS key in a different AWS account, the customer must use the key ARN or alias ARN. For more information regarding kms_key_id, see [KeyId](https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestParameters) in the KMS documentation.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The encryption option specified for the state machine. Valid values: `AWS_OWNED_KEY`, `CUSTOMER_MANAGED_KMS_KEY`
	Type *string `pulumi:"type"`
}

// StateMachineEncryptionConfigurationInput is an input type that accepts StateMachineEncryptionConfigurationArgs and StateMachineEncryptionConfigurationOutput values.
// You can construct a concrete instance of `StateMachineEncryptionConfigurationInput` via:
//
//	StateMachineEncryptionConfigurationArgs{...}
type StateMachineEncryptionConfigurationInput interface {
	pulumi.Input

	ToStateMachineEncryptionConfigurationOutput() StateMachineEncryptionConfigurationOutput
	ToStateMachineEncryptionConfigurationOutputWithContext(context.Context) StateMachineEncryptionConfigurationOutput
}

type StateMachineEncryptionConfigurationArgs struct {
	// Maximum duration for which Step Functions will reuse data keys. When the period expires, Step Functions will call GenerateDataKey. This setting only applies to customer managed KMS key and does not apply when `type` is `AWS_OWNED_KEY`.
	KmsDataKeyReusePeriodSeconds pulumi.IntPtrInput `pulumi:"kmsDataKeyReusePeriodSeconds"`
	// The alias, alias ARN, key ID, or key ARN of the symmetric encryption KMS key that encrypts the data key. To specify a KMS key in a different AWS account, the customer must use the key ARN or alias ARN. For more information regarding kms_key_id, see [KeyId](https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestParameters) in the KMS documentation.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	// The encryption option specified for the state machine. Valid values: `AWS_OWNED_KEY`, `CUSTOMER_MANAGED_KMS_KEY`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (StateMachineEncryptionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StateMachineEncryptionConfiguration)(nil)).Elem()
}

func (i StateMachineEncryptionConfigurationArgs) ToStateMachineEncryptionConfigurationOutput() StateMachineEncryptionConfigurationOutput {
	return i.ToStateMachineEncryptionConfigurationOutputWithContext(context.Background())
}

func (i StateMachineEncryptionConfigurationArgs) ToStateMachineEncryptionConfigurationOutputWithContext(ctx context.Context) StateMachineEncryptionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StateMachineEncryptionConfigurationOutput)
}

func (i StateMachineEncryptionConfigurationArgs) ToStateMachineEncryptionConfigurationPtrOutput() StateMachineEncryptionConfigurationPtrOutput {
	return i.ToStateMachineEncryptionConfigurationPtrOutputWithContext(context.Background())
}

func (i StateMachineEncryptionConfigurationArgs) ToStateMachineEncryptionConfigurationPtrOutputWithContext(ctx context.Context) StateMachineEncryptionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StateMachineEncryptionConfigurationOutput).ToStateMachineEncryptionConfigurationPtrOutputWithContext(ctx)
}

// StateMachineEncryptionConfigurationPtrInput is an input type that accepts StateMachineEncryptionConfigurationArgs, StateMachineEncryptionConfigurationPtr and StateMachineEncryptionConfigurationPtrOutput values.
// You can construct a concrete instance of `StateMachineEncryptionConfigurationPtrInput` via:
//
//	        StateMachineEncryptionConfigurationArgs{...}
//
//	or:
//
//	        nil
type StateMachineEncryptionConfigurationPtrInput interface {
	pulumi.Input

	ToStateMachineEncryptionConfigurationPtrOutput() StateMachineEncryptionConfigurationPtrOutput
	ToStateMachineEncryptionConfigurationPtrOutputWithContext(context.Context) StateMachineEncryptionConfigurationPtrOutput
}

type stateMachineEncryptionConfigurationPtrType StateMachineEncryptionConfigurationArgs

func StateMachineEncryptionConfigurationPtr(v *StateMachineEncryptionConfigurationArgs) StateMachineEncryptionConfigurationPtrInput {
	return (*stateMachineEncryptionConfigurationPtrType)(v)
}

func (*stateMachineEncryptionConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StateMachineEncryptionConfiguration)(nil)).Elem()
}

func (i *stateMachineEncryptionConfigurationPtrType) ToStateMachineEncryptionConfigurationPtrOutput() StateMachineEncryptionConfigurationPtrOutput {
	return i.ToStateMachineEncryptionConfigurationPtrOutputWithContext(context.Background())
}

func (i *stateMachineEncryptionConfigurationPtrType) ToStateMachineEncryptionConfigurationPtrOutputWithContext(ctx context.Context) StateMachineEncryptionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StateMachineEncryptionConfigurationPtrOutput)
}

type StateMachineEncryptionConfigurationOutput struct{ *pulumi.OutputState }

func (StateMachineEncryptionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StateMachineEncryptionConfiguration)(nil)).Elem()
}

func (o StateMachineEncryptionConfigurationOutput) ToStateMachineEncryptionConfigurationOutput() StateMachineEncryptionConfigurationOutput {
	return o
}

func (o StateMachineEncryptionConfigurationOutput) ToStateMachineEncryptionConfigurationOutputWithContext(ctx context.Context) StateMachineEncryptionConfigurationOutput {
	return o
}

func (o StateMachineEncryptionConfigurationOutput) ToStateMachineEncryptionConfigurationPtrOutput() StateMachineEncryptionConfigurationPtrOutput {
	return o.ToStateMachineEncryptionConfigurationPtrOutputWithContext(context.Background())
}

func (o StateMachineEncryptionConfigurationOutput) ToStateMachineEncryptionConfigurationPtrOutputWithContext(ctx context.Context) StateMachineEncryptionConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StateMachineEncryptionConfiguration) *StateMachineEncryptionConfiguration {
		return &v
	}).(StateMachineEncryptionConfigurationPtrOutput)
}

// Maximum duration for which Step Functions will reuse data keys. When the period expires, Step Functions will call GenerateDataKey. This setting only applies to customer managed KMS key and does not apply when `type` is `AWS_OWNED_KEY`.
func (o StateMachineEncryptionConfigurationOutput) KmsDataKeyReusePeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StateMachineEncryptionConfiguration) *int { return v.KmsDataKeyReusePeriodSeconds }).(pulumi.IntPtrOutput)
}

// The alias, alias ARN, key ID, or key ARN of the symmetric encryption KMS key that encrypts the data key. To specify a KMS key in a different AWS account, the customer must use the key ARN or alias ARN. For more information regarding kms_key_id, see [KeyId](https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestParameters) in the KMS documentation.
func (o StateMachineEncryptionConfigurationOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StateMachineEncryptionConfiguration) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// The encryption option specified for the state machine. Valid values: `AWS_OWNED_KEY`, `CUSTOMER_MANAGED_KMS_KEY`
func (o StateMachineEncryptionConfigurationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StateMachineEncryptionConfiguration) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type StateMachineEncryptionConfigurationPtrOutput struct{ *pulumi.OutputState }

func (StateMachineEncryptionConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StateMachineEncryptionConfiguration)(nil)).Elem()
}

func (o StateMachineEncryptionConfigurationPtrOutput) ToStateMachineEncryptionConfigurationPtrOutput() StateMachineEncryptionConfigurationPtrOutput {
	return o
}

func (o StateMachineEncryptionConfigurationPtrOutput) ToStateMachineEncryptionConfigurationPtrOutputWithContext(ctx context.Context) StateMachineEncryptionConfigurationPtrOutput {
	return o
}

func (o StateMachineEncryptionConfigurationPtrOutput) Elem() StateMachineEncryptionConfigurationOutput {
	return o.ApplyT(func(v *StateMachineEncryptionConfiguration) StateMachineEncryptionConfiguration {
		if v != nil {
			return *v
		}
		var ret StateMachineEncryptionConfiguration
		return ret
	}).(StateMachineEncryptionConfigurationOutput)
}

// Maximum duration for which Step Functions will reuse data keys. When the period expires, Step Functions will call GenerateDataKey. This setting only applies to customer managed KMS key and does not apply when `type` is `AWS_OWNED_KEY`.
func (o StateMachineEncryptionConfigurationPtrOutput) KmsDataKeyReusePeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StateMachineEncryptionConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.KmsDataKeyReusePeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// The alias, alias ARN, key ID, or key ARN of the symmetric encryption KMS key that encrypts the data key. To specify a KMS key in a different AWS account, the customer must use the key ARN or alias ARN. For more information regarding kms_key_id, see [KeyId](https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestParameters) in the KMS documentation.
func (o StateMachineEncryptionConfigurationPtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StateMachineEncryptionConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyId
	}).(pulumi.StringPtrOutput)
}

// The encryption option specified for the state machine. Valid values: `AWS_OWNED_KEY`, `CUSTOMER_MANAGED_KMS_KEY`
func (o StateMachineEncryptionConfigurationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StateMachineEncryptionConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type StateMachineLoggingConfiguration struct {
	// Determines whether execution data is included in your log. When set to `false`, data is excluded.
	IncludeExecutionData *bool `pulumi:"includeExecutionData"`
	// Defines which category of execution history events are logged. Valid values: `ALL`, `ERROR`, `FATAL`, `OFF`
	Level *string `pulumi:"level"`
	// Amazon Resource Name (ARN) of a CloudWatch log group. Make sure the State Machine has the correct IAM policies for logging. The ARN must end with `:*`
	LogDestination *string `pulumi:"logDestination"`
}

// StateMachineLoggingConfigurationInput is an input type that accepts StateMachineLoggingConfigurationArgs and StateMachineLoggingConfigurationOutput values.
// You can construct a concrete instance of `StateMachineLoggingConfigurationInput` via:
//
//	StateMachineLoggingConfigurationArgs{...}
type StateMachineLoggingConfigurationInput interface {
	pulumi.Input

	ToStateMachineLoggingConfigurationOutput() StateMachineLoggingConfigurationOutput
	ToStateMachineLoggingConfigurationOutputWithContext(context.Context) StateMachineLoggingConfigurationOutput
}

type StateMachineLoggingConfigurationArgs struct {
	// Determines whether execution data is included in your log. When set to `false`, data is excluded.
	IncludeExecutionData pulumi.BoolPtrInput `pulumi:"includeExecutionData"`
	// Defines which category of execution history events are logged. Valid values: `ALL`, `ERROR`, `FATAL`, `OFF`
	Level pulumi.StringPtrInput `pulumi:"level"`
	// Amazon Resource Name (ARN) of a CloudWatch log group. Make sure the State Machine has the correct IAM policies for logging. The ARN must end with `:*`
	LogDestination pulumi.StringPtrInput `pulumi:"logDestination"`
}

func (StateMachineLoggingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StateMachineLoggingConfiguration)(nil)).Elem()
}

func (i StateMachineLoggingConfigurationArgs) ToStateMachineLoggingConfigurationOutput() StateMachineLoggingConfigurationOutput {
	return i.ToStateMachineLoggingConfigurationOutputWithContext(context.Background())
}

func (i StateMachineLoggingConfigurationArgs) ToStateMachineLoggingConfigurationOutputWithContext(ctx context.Context) StateMachineLoggingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StateMachineLoggingConfigurationOutput)
}

func (i StateMachineLoggingConfigurationArgs) ToStateMachineLoggingConfigurationPtrOutput() StateMachineLoggingConfigurationPtrOutput {
	return i.ToStateMachineLoggingConfigurationPtrOutputWithContext(context.Background())
}

func (i StateMachineLoggingConfigurationArgs) ToStateMachineLoggingConfigurationPtrOutputWithContext(ctx context.Context) StateMachineLoggingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StateMachineLoggingConfigurationOutput).ToStateMachineLoggingConfigurationPtrOutputWithContext(ctx)
}

// StateMachineLoggingConfigurationPtrInput is an input type that accepts StateMachineLoggingConfigurationArgs, StateMachineLoggingConfigurationPtr and StateMachineLoggingConfigurationPtrOutput values.
// You can construct a concrete instance of `StateMachineLoggingConfigurationPtrInput` via:
//
//	        StateMachineLoggingConfigurationArgs{...}
//
//	or:
//
//	        nil
type StateMachineLoggingConfigurationPtrInput interface {
	pulumi.Input

	ToStateMachineLoggingConfigurationPtrOutput() StateMachineLoggingConfigurationPtrOutput
	ToStateMachineLoggingConfigurationPtrOutputWithContext(context.Context) StateMachineLoggingConfigurationPtrOutput
}

type stateMachineLoggingConfigurationPtrType StateMachineLoggingConfigurationArgs

func StateMachineLoggingConfigurationPtr(v *StateMachineLoggingConfigurationArgs) StateMachineLoggingConfigurationPtrInput {
	return (*stateMachineLoggingConfigurationPtrType)(v)
}

func (*stateMachineLoggingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StateMachineLoggingConfiguration)(nil)).Elem()
}

func (i *stateMachineLoggingConfigurationPtrType) ToStateMachineLoggingConfigurationPtrOutput() StateMachineLoggingConfigurationPtrOutput {
	return i.ToStateMachineLoggingConfigurationPtrOutputWithContext(context.Background())
}

func (i *stateMachineLoggingConfigurationPtrType) ToStateMachineLoggingConfigurationPtrOutputWithContext(ctx context.Context) StateMachineLoggingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StateMachineLoggingConfigurationPtrOutput)
}

type StateMachineLoggingConfigurationOutput struct{ *pulumi.OutputState }

func (StateMachineLoggingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StateMachineLoggingConfiguration)(nil)).Elem()
}

func (o StateMachineLoggingConfigurationOutput) ToStateMachineLoggingConfigurationOutput() StateMachineLoggingConfigurationOutput {
	return o
}

func (o StateMachineLoggingConfigurationOutput) ToStateMachineLoggingConfigurationOutputWithContext(ctx context.Context) StateMachineLoggingConfigurationOutput {
	return o
}

func (o StateMachineLoggingConfigurationOutput) ToStateMachineLoggingConfigurationPtrOutput() StateMachineLoggingConfigurationPtrOutput {
	return o.ToStateMachineLoggingConfigurationPtrOutputWithContext(context.Background())
}

func (o StateMachineLoggingConfigurationOutput) ToStateMachineLoggingConfigurationPtrOutputWithContext(ctx context.Context) StateMachineLoggingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StateMachineLoggingConfiguration) *StateMachineLoggingConfiguration {
		return &v
	}).(StateMachineLoggingConfigurationPtrOutput)
}

// Determines whether execution data is included in your log. When set to `false`, data is excluded.
func (o StateMachineLoggingConfigurationOutput) IncludeExecutionData() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StateMachineLoggingConfiguration) *bool { return v.IncludeExecutionData }).(pulumi.BoolPtrOutput)
}

// Defines which category of execution history events are logged. Valid values: `ALL`, `ERROR`, `FATAL`, `OFF`
func (o StateMachineLoggingConfigurationOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StateMachineLoggingConfiguration) *string { return v.Level }).(pulumi.StringPtrOutput)
}

// Amazon Resource Name (ARN) of a CloudWatch log group. Make sure the State Machine has the correct IAM policies for logging. The ARN must end with `:*`
func (o StateMachineLoggingConfigurationOutput) LogDestination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StateMachineLoggingConfiguration) *string { return v.LogDestination }).(pulumi.StringPtrOutput)
}

type StateMachineLoggingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (StateMachineLoggingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StateMachineLoggingConfiguration)(nil)).Elem()
}

func (o StateMachineLoggingConfigurationPtrOutput) ToStateMachineLoggingConfigurationPtrOutput() StateMachineLoggingConfigurationPtrOutput {
	return o
}

func (o StateMachineLoggingConfigurationPtrOutput) ToStateMachineLoggingConfigurationPtrOutputWithContext(ctx context.Context) StateMachineLoggingConfigurationPtrOutput {
	return o
}

func (o StateMachineLoggingConfigurationPtrOutput) Elem() StateMachineLoggingConfigurationOutput {
	return o.ApplyT(func(v *StateMachineLoggingConfiguration) StateMachineLoggingConfiguration {
		if v != nil {
			return *v
		}
		var ret StateMachineLoggingConfiguration
		return ret
	}).(StateMachineLoggingConfigurationOutput)
}

// Determines whether execution data is included in your log. When set to `false`, data is excluded.
func (o StateMachineLoggingConfigurationPtrOutput) IncludeExecutionData() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StateMachineLoggingConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeExecutionData
	}).(pulumi.BoolPtrOutput)
}

// Defines which category of execution history events are logged. Valid values: `ALL`, `ERROR`, `FATAL`, `OFF`
func (o StateMachineLoggingConfigurationPtrOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StateMachineLoggingConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Level
	}).(pulumi.StringPtrOutput)
}

// Amazon Resource Name (ARN) of a CloudWatch log group. Make sure the State Machine has the correct IAM policies for logging. The ARN must end with `:*`
func (o StateMachineLoggingConfigurationPtrOutput) LogDestination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StateMachineLoggingConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.LogDestination
	}).(pulumi.StringPtrOutput)
}

type StateMachineTracingConfiguration struct {
	// When set to `true`, AWS X-Ray tracing is enabled. Make sure the State Machine has the correct IAM policies for logging. See the [AWS Step Functions Developer Guide](https://docs.aws.amazon.com/step-functions/latest/dg/xray-iam.html) for details.
	Enabled *bool `pulumi:"enabled"`
}

// StateMachineTracingConfigurationInput is an input type that accepts StateMachineTracingConfigurationArgs and StateMachineTracingConfigurationOutput values.
// You can construct a concrete instance of `StateMachineTracingConfigurationInput` via:
//
//	StateMachineTracingConfigurationArgs{...}
type StateMachineTracingConfigurationInput interface {
	pulumi.Input

	ToStateMachineTracingConfigurationOutput() StateMachineTracingConfigurationOutput
	ToStateMachineTracingConfigurationOutputWithContext(context.Context) StateMachineTracingConfigurationOutput
}

type StateMachineTracingConfigurationArgs struct {
	// When set to `true`, AWS X-Ray tracing is enabled. Make sure the State Machine has the correct IAM policies for logging. See the [AWS Step Functions Developer Guide](https://docs.aws.amazon.com/step-functions/latest/dg/xray-iam.html) for details.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (StateMachineTracingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StateMachineTracingConfiguration)(nil)).Elem()
}

func (i StateMachineTracingConfigurationArgs) ToStateMachineTracingConfigurationOutput() StateMachineTracingConfigurationOutput {
	return i.ToStateMachineTracingConfigurationOutputWithContext(context.Background())
}

func (i StateMachineTracingConfigurationArgs) ToStateMachineTracingConfigurationOutputWithContext(ctx context.Context) StateMachineTracingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StateMachineTracingConfigurationOutput)
}

func (i StateMachineTracingConfigurationArgs) ToStateMachineTracingConfigurationPtrOutput() StateMachineTracingConfigurationPtrOutput {
	return i.ToStateMachineTracingConfigurationPtrOutputWithContext(context.Background())
}

func (i StateMachineTracingConfigurationArgs) ToStateMachineTracingConfigurationPtrOutputWithContext(ctx context.Context) StateMachineTracingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StateMachineTracingConfigurationOutput).ToStateMachineTracingConfigurationPtrOutputWithContext(ctx)
}

// StateMachineTracingConfigurationPtrInput is an input type that accepts StateMachineTracingConfigurationArgs, StateMachineTracingConfigurationPtr and StateMachineTracingConfigurationPtrOutput values.
// You can construct a concrete instance of `StateMachineTracingConfigurationPtrInput` via:
//
//	        StateMachineTracingConfigurationArgs{...}
//
//	or:
//
//	        nil
type StateMachineTracingConfigurationPtrInput interface {
	pulumi.Input

	ToStateMachineTracingConfigurationPtrOutput() StateMachineTracingConfigurationPtrOutput
	ToStateMachineTracingConfigurationPtrOutputWithContext(context.Context) StateMachineTracingConfigurationPtrOutput
}

type stateMachineTracingConfigurationPtrType StateMachineTracingConfigurationArgs

func StateMachineTracingConfigurationPtr(v *StateMachineTracingConfigurationArgs) StateMachineTracingConfigurationPtrInput {
	return (*stateMachineTracingConfigurationPtrType)(v)
}

func (*stateMachineTracingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StateMachineTracingConfiguration)(nil)).Elem()
}

func (i *stateMachineTracingConfigurationPtrType) ToStateMachineTracingConfigurationPtrOutput() StateMachineTracingConfigurationPtrOutput {
	return i.ToStateMachineTracingConfigurationPtrOutputWithContext(context.Background())
}

func (i *stateMachineTracingConfigurationPtrType) ToStateMachineTracingConfigurationPtrOutputWithContext(ctx context.Context) StateMachineTracingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StateMachineTracingConfigurationPtrOutput)
}

type StateMachineTracingConfigurationOutput struct{ *pulumi.OutputState }

func (StateMachineTracingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StateMachineTracingConfiguration)(nil)).Elem()
}

func (o StateMachineTracingConfigurationOutput) ToStateMachineTracingConfigurationOutput() StateMachineTracingConfigurationOutput {
	return o
}

func (o StateMachineTracingConfigurationOutput) ToStateMachineTracingConfigurationOutputWithContext(ctx context.Context) StateMachineTracingConfigurationOutput {
	return o
}

func (o StateMachineTracingConfigurationOutput) ToStateMachineTracingConfigurationPtrOutput() StateMachineTracingConfigurationPtrOutput {
	return o.ToStateMachineTracingConfigurationPtrOutputWithContext(context.Background())
}

func (o StateMachineTracingConfigurationOutput) ToStateMachineTracingConfigurationPtrOutputWithContext(ctx context.Context) StateMachineTracingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StateMachineTracingConfiguration) *StateMachineTracingConfiguration {
		return &v
	}).(StateMachineTracingConfigurationPtrOutput)
}

// When set to `true`, AWS X-Ray tracing is enabled. Make sure the State Machine has the correct IAM policies for logging. See the [AWS Step Functions Developer Guide](https://docs.aws.amazon.com/step-functions/latest/dg/xray-iam.html) for details.
func (o StateMachineTracingConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StateMachineTracingConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type StateMachineTracingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (StateMachineTracingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StateMachineTracingConfiguration)(nil)).Elem()
}

func (o StateMachineTracingConfigurationPtrOutput) ToStateMachineTracingConfigurationPtrOutput() StateMachineTracingConfigurationPtrOutput {
	return o
}

func (o StateMachineTracingConfigurationPtrOutput) ToStateMachineTracingConfigurationPtrOutputWithContext(ctx context.Context) StateMachineTracingConfigurationPtrOutput {
	return o
}

func (o StateMachineTracingConfigurationPtrOutput) Elem() StateMachineTracingConfigurationOutput {
	return o.ApplyT(func(v *StateMachineTracingConfiguration) StateMachineTracingConfiguration {
		if v != nil {
			return *v
		}
		var ret StateMachineTracingConfiguration
		return ret
	}).(StateMachineTracingConfigurationOutput)
}

// When set to `true`, AWS X-Ray tracing is enabled. Make sure the State Machine has the correct IAM policies for logging. See the [AWS Step Functions Developer Guide](https://docs.aws.amazon.com/step-functions/latest/dg/xray-iam.html) for details.
func (o StateMachineTracingConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StateMachineTracingConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type GetAliasRoutingConfiguration struct {
	StateMachineVersionArn string `pulumi:"stateMachineVersionArn"`
	Weight                 int    `pulumi:"weight"`
}

// GetAliasRoutingConfigurationInput is an input type that accepts GetAliasRoutingConfigurationArgs and GetAliasRoutingConfigurationOutput values.
// You can construct a concrete instance of `GetAliasRoutingConfigurationInput` via:
//
//	GetAliasRoutingConfigurationArgs{...}
type GetAliasRoutingConfigurationInput interface {
	pulumi.Input

	ToGetAliasRoutingConfigurationOutput() GetAliasRoutingConfigurationOutput
	ToGetAliasRoutingConfigurationOutputWithContext(context.Context) GetAliasRoutingConfigurationOutput
}

type GetAliasRoutingConfigurationArgs struct {
	StateMachineVersionArn pulumi.StringInput `pulumi:"stateMachineVersionArn"`
	Weight                 pulumi.IntInput    `pulumi:"weight"`
}

func (GetAliasRoutingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAliasRoutingConfiguration)(nil)).Elem()
}

func (i GetAliasRoutingConfigurationArgs) ToGetAliasRoutingConfigurationOutput() GetAliasRoutingConfigurationOutput {
	return i.ToGetAliasRoutingConfigurationOutputWithContext(context.Background())
}

func (i GetAliasRoutingConfigurationArgs) ToGetAliasRoutingConfigurationOutputWithContext(ctx context.Context) GetAliasRoutingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAliasRoutingConfigurationOutput)
}

// GetAliasRoutingConfigurationArrayInput is an input type that accepts GetAliasRoutingConfigurationArray and GetAliasRoutingConfigurationArrayOutput values.
// You can construct a concrete instance of `GetAliasRoutingConfigurationArrayInput` via:
//
//	GetAliasRoutingConfigurationArray{ GetAliasRoutingConfigurationArgs{...} }
type GetAliasRoutingConfigurationArrayInput interface {
	pulumi.Input

	ToGetAliasRoutingConfigurationArrayOutput() GetAliasRoutingConfigurationArrayOutput
	ToGetAliasRoutingConfigurationArrayOutputWithContext(context.Context) GetAliasRoutingConfigurationArrayOutput
}

type GetAliasRoutingConfigurationArray []GetAliasRoutingConfigurationInput

func (GetAliasRoutingConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAliasRoutingConfiguration)(nil)).Elem()
}

func (i GetAliasRoutingConfigurationArray) ToGetAliasRoutingConfigurationArrayOutput() GetAliasRoutingConfigurationArrayOutput {
	return i.ToGetAliasRoutingConfigurationArrayOutputWithContext(context.Background())
}

func (i GetAliasRoutingConfigurationArray) ToGetAliasRoutingConfigurationArrayOutputWithContext(ctx context.Context) GetAliasRoutingConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAliasRoutingConfigurationArrayOutput)
}

type GetAliasRoutingConfigurationOutput struct{ *pulumi.OutputState }

func (GetAliasRoutingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAliasRoutingConfiguration)(nil)).Elem()
}

func (o GetAliasRoutingConfigurationOutput) ToGetAliasRoutingConfigurationOutput() GetAliasRoutingConfigurationOutput {
	return o
}

func (o GetAliasRoutingConfigurationOutput) ToGetAliasRoutingConfigurationOutputWithContext(ctx context.Context) GetAliasRoutingConfigurationOutput {
	return o
}

func (o GetAliasRoutingConfigurationOutput) StateMachineVersionArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetAliasRoutingConfiguration) string { return v.StateMachineVersionArn }).(pulumi.StringOutput)
}

func (o GetAliasRoutingConfigurationOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v GetAliasRoutingConfiguration) int { return v.Weight }).(pulumi.IntOutput)
}

type GetAliasRoutingConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetAliasRoutingConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAliasRoutingConfiguration)(nil)).Elem()
}

func (o GetAliasRoutingConfigurationArrayOutput) ToGetAliasRoutingConfigurationArrayOutput() GetAliasRoutingConfigurationArrayOutput {
	return o
}

func (o GetAliasRoutingConfigurationArrayOutput) ToGetAliasRoutingConfigurationArrayOutputWithContext(ctx context.Context) GetAliasRoutingConfigurationArrayOutput {
	return o
}

func (o GetAliasRoutingConfigurationArrayOutput) Index(i pulumi.IntInput) GetAliasRoutingConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAliasRoutingConfiguration {
		return vs[0].([]GetAliasRoutingConfiguration)[vs[1].(int)]
	}).(GetAliasRoutingConfigurationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ActivityEncryptionConfigurationInput)(nil)).Elem(), ActivityEncryptionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActivityEncryptionConfigurationPtrInput)(nil)).Elem(), ActivityEncryptionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AliasRoutingConfigurationInput)(nil)).Elem(), AliasRoutingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AliasRoutingConfigurationArrayInput)(nil)).Elem(), AliasRoutingConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StateMachineEncryptionConfigurationInput)(nil)).Elem(), StateMachineEncryptionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StateMachineEncryptionConfigurationPtrInput)(nil)).Elem(), StateMachineEncryptionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StateMachineLoggingConfigurationInput)(nil)).Elem(), StateMachineLoggingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StateMachineLoggingConfigurationPtrInput)(nil)).Elem(), StateMachineLoggingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StateMachineTracingConfigurationInput)(nil)).Elem(), StateMachineTracingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StateMachineTracingConfigurationPtrInput)(nil)).Elem(), StateMachineTracingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAliasRoutingConfigurationInput)(nil)).Elem(), GetAliasRoutingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAliasRoutingConfigurationArrayInput)(nil)).Elem(), GetAliasRoutingConfigurationArray{})
	pulumi.RegisterOutputType(ActivityEncryptionConfigurationOutput{})
	pulumi.RegisterOutputType(ActivityEncryptionConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AliasRoutingConfigurationOutput{})
	pulumi.RegisterOutputType(AliasRoutingConfigurationArrayOutput{})
	pulumi.RegisterOutputType(StateMachineEncryptionConfigurationOutput{})
	pulumi.RegisterOutputType(StateMachineEncryptionConfigurationPtrOutput{})
	pulumi.RegisterOutputType(StateMachineLoggingConfigurationOutput{})
	pulumi.RegisterOutputType(StateMachineLoggingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(StateMachineTracingConfigurationOutput{})
	pulumi.RegisterOutputType(StateMachineTracingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(GetAliasRoutingConfigurationOutput{})
	pulumi.RegisterOutputType(GetAliasRoutingConfigurationArrayOutput{})
}
