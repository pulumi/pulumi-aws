// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sfn

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Data source for managing an AWS SFN (Step Functions) State Machine Versions.
//
// ## Example Usage
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/sfn"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sfn.GetStateMachineVersions(ctx, &sfn.GetStateMachineVersionsArgs{
//				StatemachineArn: aws_sfn_state_machine.Test.Arn,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetStateMachineVersions(ctx *pulumi.Context, args *GetStateMachineVersionsArgs, opts ...pulumi.InvokeOption) (*GetStateMachineVersionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetStateMachineVersionsResult
	err := ctx.Invoke("aws:sfn/getStateMachineVersions:getStateMachineVersions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getStateMachineVersions.
type GetStateMachineVersionsArgs struct {
	// ARN of the State Machine.
	StatemachineArn string `pulumi:"statemachineArn"`
}

// A collection of values returned by getStateMachineVersions.
type GetStateMachineVersionsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id              string `pulumi:"id"`
	StatemachineArn string `pulumi:"statemachineArn"`
	// ARN List identifying the statemachine versions.
	StatemachineVersions []string `pulumi:"statemachineVersions"`
}

func GetStateMachineVersionsOutput(ctx *pulumi.Context, args GetStateMachineVersionsOutputArgs, opts ...pulumi.InvokeOption) GetStateMachineVersionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetStateMachineVersionsResult, error) {
			args := v.(GetStateMachineVersionsArgs)
			r, err := GetStateMachineVersions(ctx, &args, opts...)
			var s GetStateMachineVersionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetStateMachineVersionsResultOutput)
}

// A collection of arguments for invoking getStateMachineVersions.
type GetStateMachineVersionsOutputArgs struct {
	// ARN of the State Machine.
	StatemachineArn pulumi.StringInput `pulumi:"statemachineArn"`
}

func (GetStateMachineVersionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStateMachineVersionsArgs)(nil)).Elem()
}

// A collection of values returned by getStateMachineVersions.
type GetStateMachineVersionsResultOutput struct{ *pulumi.OutputState }

func (GetStateMachineVersionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStateMachineVersionsResult)(nil)).Elem()
}

func (o GetStateMachineVersionsResultOutput) ToGetStateMachineVersionsResultOutput() GetStateMachineVersionsResultOutput {
	return o
}

func (o GetStateMachineVersionsResultOutput) ToGetStateMachineVersionsResultOutputWithContext(ctx context.Context) GetStateMachineVersionsResultOutput {
	return o
}

func (o GetStateMachineVersionsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetStateMachineVersionsResult] {
	return pulumix.Output[GetStateMachineVersionsResult]{
		OutputState: o.OutputState,
	}
}

// The provider-assigned unique ID for this managed resource.
func (o GetStateMachineVersionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetStateMachineVersionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetStateMachineVersionsResultOutput) StatemachineArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetStateMachineVersionsResult) string { return v.StatemachineArn }).(pulumi.StringOutput)
}

// ARN List identifying the statemachine versions.
func (o GetStateMachineVersionsResultOutput) StatemachineVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetStateMachineVersionsResult) []string { return v.StatemachineVersions }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetStateMachineVersionsResultOutput{})
}
