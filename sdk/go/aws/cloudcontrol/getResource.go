// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudcontrol

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides details for a Cloud Control API Resource. The reading of these resources is proxied through Cloud Control API handlers to the backend service.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/cloudcontrol"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := cloudcontrol.LookupResource(ctx, &cloudcontrol.LookupResourceArgs{
// 			Identifier: "example",
// 			TypeName:   "AWS::ECS::Cluster",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupResource(ctx *pulumi.Context, args *LookupResourceArgs, opts ...pulumi.InvokeOption) (*LookupResourceResult, error) {
	var rv LookupResourceResult
	err := ctx.Invoke("aws:cloudcontrol/getResource:getResource", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getResource.
type LookupResourceArgs struct {
	// Identifier of the CloudFormation resource type. For example, `vpc-12345678`.
	Identifier string `pulumi:"identifier"`
	// Amazon Resource Name (ARN) of the IAM Role to assume for operations.
	RoleArn *string `pulumi:"roleArn"`
	// CloudFormation resource type name. For example, `AWS::EC2::VPC`.
	TypeName string `pulumi:"typeName"`
	// Identifier of the CloudFormation resource type version.
	TypeVersionId *string `pulumi:"typeVersionId"`
}

// A collection of values returned by getResource.
type LookupResourceResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	Identifier string `pulumi:"identifier"`
	// JSON string matching the CloudFormation resource type schema with current configuration.
	Properties    string  `pulumi:"properties"`
	RoleArn       *string `pulumi:"roleArn"`
	TypeName      string  `pulumi:"typeName"`
	TypeVersionId *string `pulumi:"typeVersionId"`
}

func LookupResourceOutput(ctx *pulumi.Context, args LookupResourceOutputArgs, opts ...pulumi.InvokeOption) LookupResourceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupResourceResult, error) {
			args := v.(LookupResourceArgs)
			r, err := LookupResource(ctx, &args, opts...)
			var s LookupResourceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupResourceResultOutput)
}

// A collection of arguments for invoking getResource.
type LookupResourceOutputArgs struct {
	// Identifier of the CloudFormation resource type. For example, `vpc-12345678`.
	Identifier pulumi.StringInput `pulumi:"identifier"`
	// Amazon Resource Name (ARN) of the IAM Role to assume for operations.
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
	// CloudFormation resource type name. For example, `AWS::EC2::VPC`.
	TypeName pulumi.StringInput `pulumi:"typeName"`
	// Identifier of the CloudFormation resource type version.
	TypeVersionId pulumi.StringPtrInput `pulumi:"typeVersionId"`
}

func (LookupResourceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupResourceArgs)(nil)).Elem()
}

// A collection of values returned by getResource.
type LookupResourceResultOutput struct{ *pulumi.OutputState }

func (LookupResourceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupResourceResult)(nil)).Elem()
}

func (o LookupResourceResultOutput) ToLookupResourceResultOutput() LookupResourceResultOutput {
	return o
}

func (o LookupResourceResultOutput) ToLookupResourceResultOutputWithContext(ctx context.Context) LookupResourceResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupResourceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourceResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupResourceResultOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourceResult) string { return v.Identifier }).(pulumi.StringOutput)
}

// JSON string matching the CloudFormation resource type schema with current configuration.
func (o LookupResourceResultOutput) Properties() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourceResult) string { return v.Properties }).(pulumi.StringOutput)
}

func (o LookupResourceResultOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupResourceResult) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

func (o LookupResourceResultOutput) TypeName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourceResult) string { return v.TypeName }).(pulumi.StringOutput)
}

func (o LookupResourceResultOutput) TypeVersionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupResourceResult) *string { return v.TypeVersionId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupResourceResultOutput{})
}
