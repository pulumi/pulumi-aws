// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package route53recoverycontrol

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SafetyRule struct {
	pulumi.CustomResourceState

	Arn              pulumi.StringOutput        `pulumi:"arn"`
	AssertedControls pulumi.StringArrayOutput   `pulumi:"assertedControls"`
	ControlPanelArn  pulumi.StringOutput        `pulumi:"controlPanelArn"`
	GatingControls   pulumi.StringArrayOutput   `pulumi:"gatingControls"`
	Name             pulumi.StringOutput        `pulumi:"name"`
	RuleConfig       SafetyRuleRuleConfigOutput `pulumi:"ruleConfig"`
	Status           pulumi.StringOutput        `pulumi:"status"`
	TargetControls   pulumi.StringArrayOutput   `pulumi:"targetControls"`
	WaitPeriodMs     pulumi.IntOutput           `pulumi:"waitPeriodMs"`
}

// NewSafetyRule registers a new resource with the given unique name, arguments, and options.
func NewSafetyRule(ctx *pulumi.Context,
	name string, args *SafetyRuleArgs, opts ...pulumi.ResourceOption) (*SafetyRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ControlPanelArn == nil {
		return nil, errors.New("invalid value for required argument 'ControlPanelArn'")
	}
	if args.RuleConfig == nil {
		return nil, errors.New("invalid value for required argument 'RuleConfig'")
	}
	if args.WaitPeriodMs == nil {
		return nil, errors.New("invalid value for required argument 'WaitPeriodMs'")
	}
	var resource SafetyRule
	err := ctx.RegisterResource("aws:route53recoverycontrol/safetyRule:SafetyRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSafetyRule gets an existing SafetyRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSafetyRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SafetyRuleState, opts ...pulumi.ResourceOption) (*SafetyRule, error) {
	var resource SafetyRule
	err := ctx.ReadResource("aws:route53recoverycontrol/safetyRule:SafetyRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SafetyRule resources.
type safetyRuleState struct {
	Arn              *string               `pulumi:"arn"`
	AssertedControls []string              `pulumi:"assertedControls"`
	ControlPanelArn  *string               `pulumi:"controlPanelArn"`
	GatingControls   []string              `pulumi:"gatingControls"`
	Name             *string               `pulumi:"name"`
	RuleConfig       *SafetyRuleRuleConfig `pulumi:"ruleConfig"`
	Status           *string               `pulumi:"status"`
	TargetControls   []string              `pulumi:"targetControls"`
	WaitPeriodMs     *int                  `pulumi:"waitPeriodMs"`
}

type SafetyRuleState struct {
	Arn              pulumi.StringPtrInput
	AssertedControls pulumi.StringArrayInput
	ControlPanelArn  pulumi.StringPtrInput
	GatingControls   pulumi.StringArrayInput
	Name             pulumi.StringPtrInput
	RuleConfig       SafetyRuleRuleConfigPtrInput
	Status           pulumi.StringPtrInput
	TargetControls   pulumi.StringArrayInput
	WaitPeriodMs     pulumi.IntPtrInput
}

func (SafetyRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*safetyRuleState)(nil)).Elem()
}

type safetyRuleArgs struct {
	AssertedControls []string             `pulumi:"assertedControls"`
	ControlPanelArn  string               `pulumi:"controlPanelArn"`
	GatingControls   []string             `pulumi:"gatingControls"`
	Name             *string              `pulumi:"name"`
	RuleConfig       SafetyRuleRuleConfig `pulumi:"ruleConfig"`
	TargetControls   []string             `pulumi:"targetControls"`
	WaitPeriodMs     int                  `pulumi:"waitPeriodMs"`
}

// The set of arguments for constructing a SafetyRule resource.
type SafetyRuleArgs struct {
	AssertedControls pulumi.StringArrayInput
	ControlPanelArn  pulumi.StringInput
	GatingControls   pulumi.StringArrayInput
	Name             pulumi.StringPtrInput
	RuleConfig       SafetyRuleRuleConfigInput
	TargetControls   pulumi.StringArrayInput
	WaitPeriodMs     pulumi.IntInput
}

func (SafetyRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*safetyRuleArgs)(nil)).Elem()
}

type SafetyRuleInput interface {
	pulumi.Input

	ToSafetyRuleOutput() SafetyRuleOutput
	ToSafetyRuleOutputWithContext(ctx context.Context) SafetyRuleOutput
}

func (*SafetyRule) ElementType() reflect.Type {
	return reflect.TypeOf((**SafetyRule)(nil)).Elem()
}

func (i *SafetyRule) ToSafetyRuleOutput() SafetyRuleOutput {
	return i.ToSafetyRuleOutputWithContext(context.Background())
}

func (i *SafetyRule) ToSafetyRuleOutputWithContext(ctx context.Context) SafetyRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SafetyRuleOutput)
}

// SafetyRuleArrayInput is an input type that accepts SafetyRuleArray and SafetyRuleArrayOutput values.
// You can construct a concrete instance of `SafetyRuleArrayInput` via:
//
//	SafetyRuleArray{ SafetyRuleArgs{...} }
type SafetyRuleArrayInput interface {
	pulumi.Input

	ToSafetyRuleArrayOutput() SafetyRuleArrayOutput
	ToSafetyRuleArrayOutputWithContext(context.Context) SafetyRuleArrayOutput
}

type SafetyRuleArray []SafetyRuleInput

func (SafetyRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SafetyRule)(nil)).Elem()
}

func (i SafetyRuleArray) ToSafetyRuleArrayOutput() SafetyRuleArrayOutput {
	return i.ToSafetyRuleArrayOutputWithContext(context.Background())
}

func (i SafetyRuleArray) ToSafetyRuleArrayOutputWithContext(ctx context.Context) SafetyRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SafetyRuleArrayOutput)
}

// SafetyRuleMapInput is an input type that accepts SafetyRuleMap and SafetyRuleMapOutput values.
// You can construct a concrete instance of `SafetyRuleMapInput` via:
//
//	SafetyRuleMap{ "key": SafetyRuleArgs{...} }
type SafetyRuleMapInput interface {
	pulumi.Input

	ToSafetyRuleMapOutput() SafetyRuleMapOutput
	ToSafetyRuleMapOutputWithContext(context.Context) SafetyRuleMapOutput
}

type SafetyRuleMap map[string]SafetyRuleInput

func (SafetyRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SafetyRule)(nil)).Elem()
}

func (i SafetyRuleMap) ToSafetyRuleMapOutput() SafetyRuleMapOutput {
	return i.ToSafetyRuleMapOutputWithContext(context.Background())
}

func (i SafetyRuleMap) ToSafetyRuleMapOutputWithContext(ctx context.Context) SafetyRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SafetyRuleMapOutput)
}

type SafetyRuleOutput struct{ *pulumi.OutputState }

func (SafetyRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SafetyRule)(nil)).Elem()
}

func (o SafetyRuleOutput) ToSafetyRuleOutput() SafetyRuleOutput {
	return o
}

func (o SafetyRuleOutput) ToSafetyRuleOutputWithContext(ctx context.Context) SafetyRuleOutput {
	return o
}

func (o SafetyRuleOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *SafetyRule) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o SafetyRuleOutput) AssertedControls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SafetyRule) pulumi.StringArrayOutput { return v.AssertedControls }).(pulumi.StringArrayOutput)
}

func (o SafetyRuleOutput) ControlPanelArn() pulumi.StringOutput {
	return o.ApplyT(func(v *SafetyRule) pulumi.StringOutput { return v.ControlPanelArn }).(pulumi.StringOutput)
}

func (o SafetyRuleOutput) GatingControls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SafetyRule) pulumi.StringArrayOutput { return v.GatingControls }).(pulumi.StringArrayOutput)
}

func (o SafetyRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SafetyRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o SafetyRuleOutput) RuleConfig() SafetyRuleRuleConfigOutput {
	return o.ApplyT(func(v *SafetyRule) SafetyRuleRuleConfigOutput { return v.RuleConfig }).(SafetyRuleRuleConfigOutput)
}

func (o SafetyRuleOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *SafetyRule) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o SafetyRuleOutput) TargetControls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SafetyRule) pulumi.StringArrayOutput { return v.TargetControls }).(pulumi.StringArrayOutput)
}

func (o SafetyRuleOutput) WaitPeriodMs() pulumi.IntOutput {
	return o.ApplyT(func(v *SafetyRule) pulumi.IntOutput { return v.WaitPeriodMs }).(pulumi.IntOutput)
}

type SafetyRuleArrayOutput struct{ *pulumi.OutputState }

func (SafetyRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SafetyRule)(nil)).Elem()
}

func (o SafetyRuleArrayOutput) ToSafetyRuleArrayOutput() SafetyRuleArrayOutput {
	return o
}

func (o SafetyRuleArrayOutput) ToSafetyRuleArrayOutputWithContext(ctx context.Context) SafetyRuleArrayOutput {
	return o
}

func (o SafetyRuleArrayOutput) Index(i pulumi.IntInput) SafetyRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SafetyRule {
		return vs[0].([]*SafetyRule)[vs[1].(int)]
	}).(SafetyRuleOutput)
}

type SafetyRuleMapOutput struct{ *pulumi.OutputState }

func (SafetyRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SafetyRule)(nil)).Elem()
}

func (o SafetyRuleMapOutput) ToSafetyRuleMapOutput() SafetyRuleMapOutput {
	return o
}

func (o SafetyRuleMapOutput) ToSafetyRuleMapOutputWithContext(ctx context.Context) SafetyRuleMapOutput {
	return o
}

func (o SafetyRuleMapOutput) MapIndex(k pulumi.StringInput) SafetyRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SafetyRule {
		return vs[0].(map[string]*SafetyRule)[vs[1].(string)]
	}).(SafetyRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SafetyRuleInput)(nil)).Elem(), &SafetyRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*SafetyRuleArrayInput)(nil)).Elem(), SafetyRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SafetyRuleMapInput)(nil)).Elem(), SafetyRuleMap{})
	pulumi.RegisterOutputType(SafetyRuleOutput{})
	pulumi.RegisterOutputType(SafetyRuleArrayOutput{})
	pulumi.RegisterOutputType(SafetyRuleMapOutput{})
}
