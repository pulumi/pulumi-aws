// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package iot

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type ThingTypeProperties struct {
	// The description of the thing type.
	Description *string `pulumi:"description"`
	// A list of searchable thing attribute names.
	SearchableAttributes []string `pulumi:"searchableAttributes"`
}

// ThingTypePropertiesInput is an input type that accepts ThingTypePropertiesArgs and ThingTypePropertiesOutput values.
// You can construct a concrete instance of `ThingTypePropertiesInput` via:
//
//          ThingTypePropertiesArgs{...}
type ThingTypePropertiesInput interface {
	pulumi.Input

	ToThingTypePropertiesOutput() ThingTypePropertiesOutput
	ToThingTypePropertiesOutputWithContext(context.Context) ThingTypePropertiesOutput
}

type ThingTypePropertiesArgs struct {
	// The description of the thing type.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A list of searchable thing attribute names.
	SearchableAttributes pulumi.StringArrayInput `pulumi:"searchableAttributes"`
}

func (ThingTypePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ThingTypeProperties)(nil)).Elem()
}

func (i ThingTypePropertiesArgs) ToThingTypePropertiesOutput() ThingTypePropertiesOutput {
	return i.ToThingTypePropertiesOutputWithContext(context.Background())
}

func (i ThingTypePropertiesArgs) ToThingTypePropertiesOutputWithContext(ctx context.Context) ThingTypePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThingTypePropertiesOutput)
}

func (i ThingTypePropertiesArgs) ToThingTypePropertiesPtrOutput() ThingTypePropertiesPtrOutput {
	return i.ToThingTypePropertiesPtrOutputWithContext(context.Background())
}

func (i ThingTypePropertiesArgs) ToThingTypePropertiesPtrOutputWithContext(ctx context.Context) ThingTypePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThingTypePropertiesOutput).ToThingTypePropertiesPtrOutputWithContext(ctx)
}

// ThingTypePropertiesPtrInput is an input type that accepts ThingTypePropertiesArgs, ThingTypePropertiesPtr and ThingTypePropertiesPtrOutput values.
// You can construct a concrete instance of `ThingTypePropertiesPtrInput` via:
//
//          ThingTypePropertiesArgs{...}
//
//  or:
//
//          nil
type ThingTypePropertiesPtrInput interface {
	pulumi.Input

	ToThingTypePropertiesPtrOutput() ThingTypePropertiesPtrOutput
	ToThingTypePropertiesPtrOutputWithContext(context.Context) ThingTypePropertiesPtrOutput
}

type thingTypePropertiesPtrType ThingTypePropertiesArgs

func ThingTypePropertiesPtr(v *ThingTypePropertiesArgs) ThingTypePropertiesPtrInput {
	return (*thingTypePropertiesPtrType)(v)
}

func (*thingTypePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ThingTypeProperties)(nil)).Elem()
}

func (i *thingTypePropertiesPtrType) ToThingTypePropertiesPtrOutput() ThingTypePropertiesPtrOutput {
	return i.ToThingTypePropertiesPtrOutputWithContext(context.Background())
}

func (i *thingTypePropertiesPtrType) ToThingTypePropertiesPtrOutputWithContext(ctx context.Context) ThingTypePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ThingTypePropertiesPtrOutput)
}

type ThingTypePropertiesOutput struct{ *pulumi.OutputState }

func (ThingTypePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ThingTypeProperties)(nil)).Elem()
}

func (o ThingTypePropertiesOutput) ToThingTypePropertiesOutput() ThingTypePropertiesOutput {
	return o
}

func (o ThingTypePropertiesOutput) ToThingTypePropertiesOutputWithContext(ctx context.Context) ThingTypePropertiesOutput {
	return o
}

func (o ThingTypePropertiesOutput) ToThingTypePropertiesPtrOutput() ThingTypePropertiesPtrOutput {
	return o.ToThingTypePropertiesPtrOutputWithContext(context.Background())
}

func (o ThingTypePropertiesOutput) ToThingTypePropertiesPtrOutputWithContext(ctx context.Context) ThingTypePropertiesPtrOutput {
	return o.ApplyT(func(v ThingTypeProperties) *ThingTypeProperties {
		return &v
	}).(ThingTypePropertiesPtrOutput)
}

// The description of the thing type.
func (o ThingTypePropertiesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ThingTypeProperties) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A list of searchable thing attribute names.
func (o ThingTypePropertiesOutput) SearchableAttributes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ThingTypeProperties) []string { return v.SearchableAttributes }).(pulumi.StringArrayOutput)
}

type ThingTypePropertiesPtrOutput struct{ *pulumi.OutputState }

func (ThingTypePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ThingTypeProperties)(nil)).Elem()
}

func (o ThingTypePropertiesPtrOutput) ToThingTypePropertiesPtrOutput() ThingTypePropertiesPtrOutput {
	return o
}

func (o ThingTypePropertiesPtrOutput) ToThingTypePropertiesPtrOutputWithContext(ctx context.Context) ThingTypePropertiesPtrOutput {
	return o
}

func (o ThingTypePropertiesPtrOutput) Elem() ThingTypePropertiesOutput {
	return o.ApplyT(func(v *ThingTypeProperties) ThingTypeProperties { return *v }).(ThingTypePropertiesOutput)
}

// The description of the thing type.
func (o ThingTypePropertiesPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ThingTypeProperties) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// A list of searchable thing attribute names.
func (o ThingTypePropertiesPtrOutput) SearchableAttributes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ThingTypeProperties) []string {
		if v == nil {
			return nil
		}
		return v.SearchableAttributes
	}).(pulumi.StringArrayOutput)
}

type TopicRuleCloudwatchAlarm struct {
	// The CloudWatch alarm name.
	AlarmName string `pulumi:"alarmName"`
	// The IAM role ARN that allows access to the CloudWatch alarm.
	RoleArn string `pulumi:"roleArn"`
	// The reason for the alarm change.
	StateReason string `pulumi:"stateReason"`
	// The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.
	StateValue string `pulumi:"stateValue"`
}

// TopicRuleCloudwatchAlarmInput is an input type that accepts TopicRuleCloudwatchAlarmArgs and TopicRuleCloudwatchAlarmOutput values.
// You can construct a concrete instance of `TopicRuleCloudwatchAlarmInput` via:
//
//          TopicRuleCloudwatchAlarmArgs{...}
type TopicRuleCloudwatchAlarmInput interface {
	pulumi.Input

	ToTopicRuleCloudwatchAlarmOutput() TopicRuleCloudwatchAlarmOutput
	ToTopicRuleCloudwatchAlarmOutputWithContext(context.Context) TopicRuleCloudwatchAlarmOutput
}

type TopicRuleCloudwatchAlarmArgs struct {
	// The CloudWatch alarm name.
	AlarmName pulumi.StringInput `pulumi:"alarmName"`
	// The IAM role ARN that allows access to the CloudWatch alarm.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The reason for the alarm change.
	StateReason pulumi.StringInput `pulumi:"stateReason"`
	// The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.
	StateValue pulumi.StringInput `pulumi:"stateValue"`
}

func (TopicRuleCloudwatchAlarmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleCloudwatchAlarm)(nil)).Elem()
}

func (i TopicRuleCloudwatchAlarmArgs) ToTopicRuleCloudwatchAlarmOutput() TopicRuleCloudwatchAlarmOutput {
	return i.ToTopicRuleCloudwatchAlarmOutputWithContext(context.Background())
}

func (i TopicRuleCloudwatchAlarmArgs) ToTopicRuleCloudwatchAlarmOutputWithContext(ctx context.Context) TopicRuleCloudwatchAlarmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleCloudwatchAlarmOutput)
}

func (i TopicRuleCloudwatchAlarmArgs) ToTopicRuleCloudwatchAlarmPtrOutput() TopicRuleCloudwatchAlarmPtrOutput {
	return i.ToTopicRuleCloudwatchAlarmPtrOutputWithContext(context.Background())
}

func (i TopicRuleCloudwatchAlarmArgs) ToTopicRuleCloudwatchAlarmPtrOutputWithContext(ctx context.Context) TopicRuleCloudwatchAlarmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleCloudwatchAlarmOutput).ToTopicRuleCloudwatchAlarmPtrOutputWithContext(ctx)
}

// TopicRuleCloudwatchAlarmPtrInput is an input type that accepts TopicRuleCloudwatchAlarmArgs, TopicRuleCloudwatchAlarmPtr and TopicRuleCloudwatchAlarmPtrOutput values.
// You can construct a concrete instance of `TopicRuleCloudwatchAlarmPtrInput` via:
//
//          TopicRuleCloudwatchAlarmArgs{...}
//
//  or:
//
//          nil
type TopicRuleCloudwatchAlarmPtrInput interface {
	pulumi.Input

	ToTopicRuleCloudwatchAlarmPtrOutput() TopicRuleCloudwatchAlarmPtrOutput
	ToTopicRuleCloudwatchAlarmPtrOutputWithContext(context.Context) TopicRuleCloudwatchAlarmPtrOutput
}

type topicRuleCloudwatchAlarmPtrType TopicRuleCloudwatchAlarmArgs

func TopicRuleCloudwatchAlarmPtr(v *TopicRuleCloudwatchAlarmArgs) TopicRuleCloudwatchAlarmPtrInput {
	return (*topicRuleCloudwatchAlarmPtrType)(v)
}

func (*topicRuleCloudwatchAlarmPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleCloudwatchAlarm)(nil)).Elem()
}

func (i *topicRuleCloudwatchAlarmPtrType) ToTopicRuleCloudwatchAlarmPtrOutput() TopicRuleCloudwatchAlarmPtrOutput {
	return i.ToTopicRuleCloudwatchAlarmPtrOutputWithContext(context.Background())
}

func (i *topicRuleCloudwatchAlarmPtrType) ToTopicRuleCloudwatchAlarmPtrOutputWithContext(ctx context.Context) TopicRuleCloudwatchAlarmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleCloudwatchAlarmPtrOutput)
}

type TopicRuleCloudwatchAlarmOutput struct{ *pulumi.OutputState }

func (TopicRuleCloudwatchAlarmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleCloudwatchAlarm)(nil)).Elem()
}

func (o TopicRuleCloudwatchAlarmOutput) ToTopicRuleCloudwatchAlarmOutput() TopicRuleCloudwatchAlarmOutput {
	return o
}

func (o TopicRuleCloudwatchAlarmOutput) ToTopicRuleCloudwatchAlarmOutputWithContext(ctx context.Context) TopicRuleCloudwatchAlarmOutput {
	return o
}

func (o TopicRuleCloudwatchAlarmOutput) ToTopicRuleCloudwatchAlarmPtrOutput() TopicRuleCloudwatchAlarmPtrOutput {
	return o.ToTopicRuleCloudwatchAlarmPtrOutputWithContext(context.Background())
}

func (o TopicRuleCloudwatchAlarmOutput) ToTopicRuleCloudwatchAlarmPtrOutputWithContext(ctx context.Context) TopicRuleCloudwatchAlarmPtrOutput {
	return o.ApplyT(func(v TopicRuleCloudwatchAlarm) *TopicRuleCloudwatchAlarm {
		return &v
	}).(TopicRuleCloudwatchAlarmPtrOutput)
}

// The CloudWatch alarm name.
func (o TopicRuleCloudwatchAlarmOutput) AlarmName() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleCloudwatchAlarm) string { return v.AlarmName }).(pulumi.StringOutput)
}

// The IAM role ARN that allows access to the CloudWatch alarm.
func (o TopicRuleCloudwatchAlarmOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleCloudwatchAlarm) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The reason for the alarm change.
func (o TopicRuleCloudwatchAlarmOutput) StateReason() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleCloudwatchAlarm) string { return v.StateReason }).(pulumi.StringOutput)
}

// The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.
func (o TopicRuleCloudwatchAlarmOutput) StateValue() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleCloudwatchAlarm) string { return v.StateValue }).(pulumi.StringOutput)
}

type TopicRuleCloudwatchAlarmPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleCloudwatchAlarmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleCloudwatchAlarm)(nil)).Elem()
}

func (o TopicRuleCloudwatchAlarmPtrOutput) ToTopicRuleCloudwatchAlarmPtrOutput() TopicRuleCloudwatchAlarmPtrOutput {
	return o
}

func (o TopicRuleCloudwatchAlarmPtrOutput) ToTopicRuleCloudwatchAlarmPtrOutputWithContext(ctx context.Context) TopicRuleCloudwatchAlarmPtrOutput {
	return o
}

func (o TopicRuleCloudwatchAlarmPtrOutput) Elem() TopicRuleCloudwatchAlarmOutput {
	return o.ApplyT(func(v *TopicRuleCloudwatchAlarm) TopicRuleCloudwatchAlarm { return *v }).(TopicRuleCloudwatchAlarmOutput)
}

// The CloudWatch alarm name.
func (o TopicRuleCloudwatchAlarmPtrOutput) AlarmName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleCloudwatchAlarm) *string {
		if v == nil {
			return nil
		}
		return &v.AlarmName
	}).(pulumi.StringPtrOutput)
}

// The IAM role ARN that allows access to the CloudWatch alarm.
func (o TopicRuleCloudwatchAlarmPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleCloudwatchAlarm) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// The reason for the alarm change.
func (o TopicRuleCloudwatchAlarmPtrOutput) StateReason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleCloudwatchAlarm) *string {
		if v == nil {
			return nil
		}
		return &v.StateReason
	}).(pulumi.StringPtrOutput)
}

// The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.
func (o TopicRuleCloudwatchAlarmPtrOutput) StateValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleCloudwatchAlarm) *string {
		if v == nil {
			return nil
		}
		return &v.StateValue
	}).(pulumi.StringPtrOutput)
}

type TopicRuleCloudwatchMetric struct {
	// The CloudWatch metric name.
	MetricName string `pulumi:"metricName"`
	// The CloudWatch metric namespace name.
	MetricNamespace string `pulumi:"metricNamespace"`
	// An optional Unix timestamp (http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp).
	MetricTimestamp *string `pulumi:"metricTimestamp"`
	// The metric unit (supported units can be found here: http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit)
	MetricUnit string `pulumi:"metricUnit"`
	// The CloudWatch metric value.
	MetricValue string `pulumi:"metricValue"`
	// The IAM role ARN that allows access to the CloudWatch metric.
	RoleArn string `pulumi:"roleArn"`
}

// TopicRuleCloudwatchMetricInput is an input type that accepts TopicRuleCloudwatchMetricArgs and TopicRuleCloudwatchMetricOutput values.
// You can construct a concrete instance of `TopicRuleCloudwatchMetricInput` via:
//
//          TopicRuleCloudwatchMetricArgs{...}
type TopicRuleCloudwatchMetricInput interface {
	pulumi.Input

	ToTopicRuleCloudwatchMetricOutput() TopicRuleCloudwatchMetricOutput
	ToTopicRuleCloudwatchMetricOutputWithContext(context.Context) TopicRuleCloudwatchMetricOutput
}

type TopicRuleCloudwatchMetricArgs struct {
	// The CloudWatch metric name.
	MetricName pulumi.StringInput `pulumi:"metricName"`
	// The CloudWatch metric namespace name.
	MetricNamespace pulumi.StringInput `pulumi:"metricNamespace"`
	// An optional Unix timestamp (http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp).
	MetricTimestamp pulumi.StringPtrInput `pulumi:"metricTimestamp"`
	// The metric unit (supported units can be found here: http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit)
	MetricUnit pulumi.StringInput `pulumi:"metricUnit"`
	// The CloudWatch metric value.
	MetricValue pulumi.StringInput `pulumi:"metricValue"`
	// The IAM role ARN that allows access to the CloudWatch metric.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (TopicRuleCloudwatchMetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleCloudwatchMetric)(nil)).Elem()
}

func (i TopicRuleCloudwatchMetricArgs) ToTopicRuleCloudwatchMetricOutput() TopicRuleCloudwatchMetricOutput {
	return i.ToTopicRuleCloudwatchMetricOutputWithContext(context.Background())
}

func (i TopicRuleCloudwatchMetricArgs) ToTopicRuleCloudwatchMetricOutputWithContext(ctx context.Context) TopicRuleCloudwatchMetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleCloudwatchMetricOutput)
}

func (i TopicRuleCloudwatchMetricArgs) ToTopicRuleCloudwatchMetricPtrOutput() TopicRuleCloudwatchMetricPtrOutput {
	return i.ToTopicRuleCloudwatchMetricPtrOutputWithContext(context.Background())
}

func (i TopicRuleCloudwatchMetricArgs) ToTopicRuleCloudwatchMetricPtrOutputWithContext(ctx context.Context) TopicRuleCloudwatchMetricPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleCloudwatchMetricOutput).ToTopicRuleCloudwatchMetricPtrOutputWithContext(ctx)
}

// TopicRuleCloudwatchMetricPtrInput is an input type that accepts TopicRuleCloudwatchMetricArgs, TopicRuleCloudwatchMetricPtr and TopicRuleCloudwatchMetricPtrOutput values.
// You can construct a concrete instance of `TopicRuleCloudwatchMetricPtrInput` via:
//
//          TopicRuleCloudwatchMetricArgs{...}
//
//  or:
//
//          nil
type TopicRuleCloudwatchMetricPtrInput interface {
	pulumi.Input

	ToTopicRuleCloudwatchMetricPtrOutput() TopicRuleCloudwatchMetricPtrOutput
	ToTopicRuleCloudwatchMetricPtrOutputWithContext(context.Context) TopicRuleCloudwatchMetricPtrOutput
}

type topicRuleCloudwatchMetricPtrType TopicRuleCloudwatchMetricArgs

func TopicRuleCloudwatchMetricPtr(v *TopicRuleCloudwatchMetricArgs) TopicRuleCloudwatchMetricPtrInput {
	return (*topicRuleCloudwatchMetricPtrType)(v)
}

func (*topicRuleCloudwatchMetricPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleCloudwatchMetric)(nil)).Elem()
}

func (i *topicRuleCloudwatchMetricPtrType) ToTopicRuleCloudwatchMetricPtrOutput() TopicRuleCloudwatchMetricPtrOutput {
	return i.ToTopicRuleCloudwatchMetricPtrOutputWithContext(context.Background())
}

func (i *topicRuleCloudwatchMetricPtrType) ToTopicRuleCloudwatchMetricPtrOutputWithContext(ctx context.Context) TopicRuleCloudwatchMetricPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleCloudwatchMetricPtrOutput)
}

type TopicRuleCloudwatchMetricOutput struct{ *pulumi.OutputState }

func (TopicRuleCloudwatchMetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleCloudwatchMetric)(nil)).Elem()
}

func (o TopicRuleCloudwatchMetricOutput) ToTopicRuleCloudwatchMetricOutput() TopicRuleCloudwatchMetricOutput {
	return o
}

func (o TopicRuleCloudwatchMetricOutput) ToTopicRuleCloudwatchMetricOutputWithContext(ctx context.Context) TopicRuleCloudwatchMetricOutput {
	return o
}

func (o TopicRuleCloudwatchMetricOutput) ToTopicRuleCloudwatchMetricPtrOutput() TopicRuleCloudwatchMetricPtrOutput {
	return o.ToTopicRuleCloudwatchMetricPtrOutputWithContext(context.Background())
}

func (o TopicRuleCloudwatchMetricOutput) ToTopicRuleCloudwatchMetricPtrOutputWithContext(ctx context.Context) TopicRuleCloudwatchMetricPtrOutput {
	return o.ApplyT(func(v TopicRuleCloudwatchMetric) *TopicRuleCloudwatchMetric {
		return &v
	}).(TopicRuleCloudwatchMetricPtrOutput)
}

// The CloudWatch metric name.
func (o TopicRuleCloudwatchMetricOutput) MetricName() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleCloudwatchMetric) string { return v.MetricName }).(pulumi.StringOutput)
}

// The CloudWatch metric namespace name.
func (o TopicRuleCloudwatchMetricOutput) MetricNamespace() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleCloudwatchMetric) string { return v.MetricNamespace }).(pulumi.StringOutput)
}

// An optional Unix timestamp (http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp).
func (o TopicRuleCloudwatchMetricOutput) MetricTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleCloudwatchMetric) *string { return v.MetricTimestamp }).(pulumi.StringPtrOutput)
}

// The metric unit (supported units can be found here: http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit)
func (o TopicRuleCloudwatchMetricOutput) MetricUnit() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleCloudwatchMetric) string { return v.MetricUnit }).(pulumi.StringOutput)
}

// The CloudWatch metric value.
func (o TopicRuleCloudwatchMetricOutput) MetricValue() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleCloudwatchMetric) string { return v.MetricValue }).(pulumi.StringOutput)
}

// The IAM role ARN that allows access to the CloudWatch metric.
func (o TopicRuleCloudwatchMetricOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleCloudwatchMetric) string { return v.RoleArn }).(pulumi.StringOutput)
}

type TopicRuleCloudwatchMetricPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleCloudwatchMetricPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleCloudwatchMetric)(nil)).Elem()
}

func (o TopicRuleCloudwatchMetricPtrOutput) ToTopicRuleCloudwatchMetricPtrOutput() TopicRuleCloudwatchMetricPtrOutput {
	return o
}

func (o TopicRuleCloudwatchMetricPtrOutput) ToTopicRuleCloudwatchMetricPtrOutputWithContext(ctx context.Context) TopicRuleCloudwatchMetricPtrOutput {
	return o
}

func (o TopicRuleCloudwatchMetricPtrOutput) Elem() TopicRuleCloudwatchMetricOutput {
	return o.ApplyT(func(v *TopicRuleCloudwatchMetric) TopicRuleCloudwatchMetric { return *v }).(TopicRuleCloudwatchMetricOutput)
}

// The CloudWatch metric name.
func (o TopicRuleCloudwatchMetricPtrOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleCloudwatchMetric) *string {
		if v == nil {
			return nil
		}
		return &v.MetricName
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch metric namespace name.
func (o TopicRuleCloudwatchMetricPtrOutput) MetricNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleCloudwatchMetric) *string {
		if v == nil {
			return nil
		}
		return &v.MetricNamespace
	}).(pulumi.StringPtrOutput)
}

// An optional Unix timestamp (http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp).
func (o TopicRuleCloudwatchMetricPtrOutput) MetricTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleCloudwatchMetric) *string {
		if v == nil {
			return nil
		}
		return v.MetricTimestamp
	}).(pulumi.StringPtrOutput)
}

// The metric unit (supported units can be found here: http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit)
func (o TopicRuleCloudwatchMetricPtrOutput) MetricUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleCloudwatchMetric) *string {
		if v == nil {
			return nil
		}
		return &v.MetricUnit
	}).(pulumi.StringPtrOutput)
}

// The CloudWatch metric value.
func (o TopicRuleCloudwatchMetricPtrOutput) MetricValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleCloudwatchMetric) *string {
		if v == nil {
			return nil
		}
		return &v.MetricValue
	}).(pulumi.StringPtrOutput)
}

// The IAM role ARN that allows access to the CloudWatch metric.
func (o TopicRuleCloudwatchMetricPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleCloudwatchMetric) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type TopicRuleDynamodb struct {
	// The hash key name.
	HashKeyField string `pulumi:"hashKeyField"`
	// The hash key type. Valid values are "STRING" or "NUMBER".
	HashKeyType *string `pulumi:"hashKeyType"`
	// The hash key value.
	HashKeyValue string `pulumi:"hashKeyValue"`
	// The operation. Valid values are "INSERT", "UPDATE", or "DELETE".
	Operation *string `pulumi:"operation"`
	// The action payload.
	PayloadField *string `pulumi:"payloadField"`
	// The range key name.
	RangeKeyField *string `pulumi:"rangeKeyField"`
	// The range key type. Valid values are "STRING" or "NUMBER".
	RangeKeyType *string `pulumi:"rangeKeyType"`
	// The range key value.
	RangeKeyValue *string `pulumi:"rangeKeyValue"`
	// The ARN of the IAM role that grants access to the DynamoDB table.
	RoleArn string `pulumi:"roleArn"`
	// The name of the DynamoDB table.
	TableName string `pulumi:"tableName"`
}

// TopicRuleDynamodbInput is an input type that accepts TopicRuleDynamodbArgs and TopicRuleDynamodbOutput values.
// You can construct a concrete instance of `TopicRuleDynamodbInput` via:
//
//          TopicRuleDynamodbArgs{...}
type TopicRuleDynamodbInput interface {
	pulumi.Input

	ToTopicRuleDynamodbOutput() TopicRuleDynamodbOutput
	ToTopicRuleDynamodbOutputWithContext(context.Context) TopicRuleDynamodbOutput
}

type TopicRuleDynamodbArgs struct {
	// The hash key name.
	HashKeyField pulumi.StringInput `pulumi:"hashKeyField"`
	// The hash key type. Valid values are "STRING" or "NUMBER".
	HashKeyType pulumi.StringPtrInput `pulumi:"hashKeyType"`
	// The hash key value.
	HashKeyValue pulumi.StringInput `pulumi:"hashKeyValue"`
	// The operation. Valid values are "INSERT", "UPDATE", or "DELETE".
	Operation pulumi.StringPtrInput `pulumi:"operation"`
	// The action payload.
	PayloadField pulumi.StringPtrInput `pulumi:"payloadField"`
	// The range key name.
	RangeKeyField pulumi.StringPtrInput `pulumi:"rangeKeyField"`
	// The range key type. Valid values are "STRING" or "NUMBER".
	RangeKeyType pulumi.StringPtrInput `pulumi:"rangeKeyType"`
	// The range key value.
	RangeKeyValue pulumi.StringPtrInput `pulumi:"rangeKeyValue"`
	// The ARN of the IAM role that grants access to the DynamoDB table.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The name of the DynamoDB table.
	TableName pulumi.StringInput `pulumi:"tableName"`
}

func (TopicRuleDynamodbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleDynamodb)(nil)).Elem()
}

func (i TopicRuleDynamodbArgs) ToTopicRuleDynamodbOutput() TopicRuleDynamodbOutput {
	return i.ToTopicRuleDynamodbOutputWithContext(context.Background())
}

func (i TopicRuleDynamodbArgs) ToTopicRuleDynamodbOutputWithContext(ctx context.Context) TopicRuleDynamodbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleDynamodbOutput)
}

func (i TopicRuleDynamodbArgs) ToTopicRuleDynamodbPtrOutput() TopicRuleDynamodbPtrOutput {
	return i.ToTopicRuleDynamodbPtrOutputWithContext(context.Background())
}

func (i TopicRuleDynamodbArgs) ToTopicRuleDynamodbPtrOutputWithContext(ctx context.Context) TopicRuleDynamodbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleDynamodbOutput).ToTopicRuleDynamodbPtrOutputWithContext(ctx)
}

// TopicRuleDynamodbPtrInput is an input type that accepts TopicRuleDynamodbArgs, TopicRuleDynamodbPtr and TopicRuleDynamodbPtrOutput values.
// You can construct a concrete instance of `TopicRuleDynamodbPtrInput` via:
//
//          TopicRuleDynamodbArgs{...}
//
//  or:
//
//          nil
type TopicRuleDynamodbPtrInput interface {
	pulumi.Input

	ToTopicRuleDynamodbPtrOutput() TopicRuleDynamodbPtrOutput
	ToTopicRuleDynamodbPtrOutputWithContext(context.Context) TopicRuleDynamodbPtrOutput
}

type topicRuleDynamodbPtrType TopicRuleDynamodbArgs

func TopicRuleDynamodbPtr(v *TopicRuleDynamodbArgs) TopicRuleDynamodbPtrInput {
	return (*topicRuleDynamodbPtrType)(v)
}

func (*topicRuleDynamodbPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleDynamodb)(nil)).Elem()
}

func (i *topicRuleDynamodbPtrType) ToTopicRuleDynamodbPtrOutput() TopicRuleDynamodbPtrOutput {
	return i.ToTopicRuleDynamodbPtrOutputWithContext(context.Background())
}

func (i *topicRuleDynamodbPtrType) ToTopicRuleDynamodbPtrOutputWithContext(ctx context.Context) TopicRuleDynamodbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleDynamodbPtrOutput)
}

type TopicRuleDynamodbOutput struct{ *pulumi.OutputState }

func (TopicRuleDynamodbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleDynamodb)(nil)).Elem()
}

func (o TopicRuleDynamodbOutput) ToTopicRuleDynamodbOutput() TopicRuleDynamodbOutput {
	return o
}

func (o TopicRuleDynamodbOutput) ToTopicRuleDynamodbOutputWithContext(ctx context.Context) TopicRuleDynamodbOutput {
	return o
}

func (o TopicRuleDynamodbOutput) ToTopicRuleDynamodbPtrOutput() TopicRuleDynamodbPtrOutput {
	return o.ToTopicRuleDynamodbPtrOutputWithContext(context.Background())
}

func (o TopicRuleDynamodbOutput) ToTopicRuleDynamodbPtrOutputWithContext(ctx context.Context) TopicRuleDynamodbPtrOutput {
	return o.ApplyT(func(v TopicRuleDynamodb) *TopicRuleDynamodb {
		return &v
	}).(TopicRuleDynamodbPtrOutput)
}

// The hash key name.
func (o TopicRuleDynamodbOutput) HashKeyField() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleDynamodb) string { return v.HashKeyField }).(pulumi.StringOutput)
}

// The hash key type. Valid values are "STRING" or "NUMBER".
func (o TopicRuleDynamodbOutput) HashKeyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleDynamodb) *string { return v.HashKeyType }).(pulumi.StringPtrOutput)
}

// The hash key value.
func (o TopicRuleDynamodbOutput) HashKeyValue() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleDynamodb) string { return v.HashKeyValue }).(pulumi.StringOutput)
}

// The operation. Valid values are "INSERT", "UPDATE", or "DELETE".
func (o TopicRuleDynamodbOutput) Operation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleDynamodb) *string { return v.Operation }).(pulumi.StringPtrOutput)
}

// The action payload.
func (o TopicRuleDynamodbOutput) PayloadField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleDynamodb) *string { return v.PayloadField }).(pulumi.StringPtrOutput)
}

// The range key name.
func (o TopicRuleDynamodbOutput) RangeKeyField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleDynamodb) *string { return v.RangeKeyField }).(pulumi.StringPtrOutput)
}

// The range key type. Valid values are "STRING" or "NUMBER".
func (o TopicRuleDynamodbOutput) RangeKeyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleDynamodb) *string { return v.RangeKeyType }).(pulumi.StringPtrOutput)
}

// The range key value.
func (o TopicRuleDynamodbOutput) RangeKeyValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleDynamodb) *string { return v.RangeKeyValue }).(pulumi.StringPtrOutput)
}

// The ARN of the IAM role that grants access to the DynamoDB table.
func (o TopicRuleDynamodbOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleDynamodb) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The name of the DynamoDB table.
func (o TopicRuleDynamodbOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleDynamodb) string { return v.TableName }).(pulumi.StringOutput)
}

type TopicRuleDynamodbPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleDynamodbPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleDynamodb)(nil)).Elem()
}

func (o TopicRuleDynamodbPtrOutput) ToTopicRuleDynamodbPtrOutput() TopicRuleDynamodbPtrOutput {
	return o
}

func (o TopicRuleDynamodbPtrOutput) ToTopicRuleDynamodbPtrOutputWithContext(ctx context.Context) TopicRuleDynamodbPtrOutput {
	return o
}

func (o TopicRuleDynamodbPtrOutput) Elem() TopicRuleDynamodbOutput {
	return o.ApplyT(func(v *TopicRuleDynamodb) TopicRuleDynamodb { return *v }).(TopicRuleDynamodbOutput)
}

// The hash key name.
func (o TopicRuleDynamodbPtrOutput) HashKeyField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleDynamodb) *string {
		if v == nil {
			return nil
		}
		return &v.HashKeyField
	}).(pulumi.StringPtrOutput)
}

// The hash key type. Valid values are "STRING" or "NUMBER".
func (o TopicRuleDynamodbPtrOutput) HashKeyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleDynamodb) *string {
		if v == nil {
			return nil
		}
		return v.HashKeyType
	}).(pulumi.StringPtrOutput)
}

// The hash key value.
func (o TopicRuleDynamodbPtrOutput) HashKeyValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleDynamodb) *string {
		if v == nil {
			return nil
		}
		return &v.HashKeyValue
	}).(pulumi.StringPtrOutput)
}

// The operation. Valid values are "INSERT", "UPDATE", or "DELETE".
func (o TopicRuleDynamodbPtrOutput) Operation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleDynamodb) *string {
		if v == nil {
			return nil
		}
		return v.Operation
	}).(pulumi.StringPtrOutput)
}

// The action payload.
func (o TopicRuleDynamodbPtrOutput) PayloadField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleDynamodb) *string {
		if v == nil {
			return nil
		}
		return v.PayloadField
	}).(pulumi.StringPtrOutput)
}

// The range key name.
func (o TopicRuleDynamodbPtrOutput) RangeKeyField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleDynamodb) *string {
		if v == nil {
			return nil
		}
		return v.RangeKeyField
	}).(pulumi.StringPtrOutput)
}

// The range key type. Valid values are "STRING" or "NUMBER".
func (o TopicRuleDynamodbPtrOutput) RangeKeyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleDynamodb) *string {
		if v == nil {
			return nil
		}
		return v.RangeKeyType
	}).(pulumi.StringPtrOutput)
}

// The range key value.
func (o TopicRuleDynamodbPtrOutput) RangeKeyValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleDynamodb) *string {
		if v == nil {
			return nil
		}
		return v.RangeKeyValue
	}).(pulumi.StringPtrOutput)
}

// The ARN of the IAM role that grants access to the DynamoDB table.
func (o TopicRuleDynamodbPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleDynamodb) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// The name of the DynamoDB table.
func (o TopicRuleDynamodbPtrOutput) TableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleDynamodb) *string {
		if v == nil {
			return nil
		}
		return &v.TableName
	}).(pulumi.StringPtrOutput)
}

type TopicRuleDynamodbv2 struct {
	// Configuration block with DynamoDB Table to which the message will be written. Nested arguments below.
	PutItem *TopicRuleDynamodbv2PutItem `pulumi:"putItem"`
	// The IAM role ARN that allows access to the CloudWatch alarm.
	RoleArn string `pulumi:"roleArn"`
}

// TopicRuleDynamodbv2Input is an input type that accepts TopicRuleDynamodbv2Args and TopicRuleDynamodbv2Output values.
// You can construct a concrete instance of `TopicRuleDynamodbv2Input` via:
//
//          TopicRuleDynamodbv2Args{...}
type TopicRuleDynamodbv2Input interface {
	pulumi.Input

	ToTopicRuleDynamodbv2Output() TopicRuleDynamodbv2Output
	ToTopicRuleDynamodbv2OutputWithContext(context.Context) TopicRuleDynamodbv2Output
}

type TopicRuleDynamodbv2Args struct {
	// Configuration block with DynamoDB Table to which the message will be written. Nested arguments below.
	PutItem TopicRuleDynamodbv2PutItemPtrInput `pulumi:"putItem"`
	// The IAM role ARN that allows access to the CloudWatch alarm.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (TopicRuleDynamodbv2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleDynamodbv2)(nil)).Elem()
}

func (i TopicRuleDynamodbv2Args) ToTopicRuleDynamodbv2Output() TopicRuleDynamodbv2Output {
	return i.ToTopicRuleDynamodbv2OutputWithContext(context.Background())
}

func (i TopicRuleDynamodbv2Args) ToTopicRuleDynamodbv2OutputWithContext(ctx context.Context) TopicRuleDynamodbv2Output {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleDynamodbv2Output)
}

// TopicRuleDynamodbv2ArrayInput is an input type that accepts TopicRuleDynamodbv2Array and TopicRuleDynamodbv2ArrayOutput values.
// You can construct a concrete instance of `TopicRuleDynamodbv2ArrayInput` via:
//
//          TopicRuleDynamodbv2Array{ TopicRuleDynamodbv2Args{...} }
type TopicRuleDynamodbv2ArrayInput interface {
	pulumi.Input

	ToTopicRuleDynamodbv2ArrayOutput() TopicRuleDynamodbv2ArrayOutput
	ToTopicRuleDynamodbv2ArrayOutputWithContext(context.Context) TopicRuleDynamodbv2ArrayOutput
}

type TopicRuleDynamodbv2Array []TopicRuleDynamodbv2Input

func (TopicRuleDynamodbv2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TopicRuleDynamodbv2)(nil)).Elem()
}

func (i TopicRuleDynamodbv2Array) ToTopicRuleDynamodbv2ArrayOutput() TopicRuleDynamodbv2ArrayOutput {
	return i.ToTopicRuleDynamodbv2ArrayOutputWithContext(context.Background())
}

func (i TopicRuleDynamodbv2Array) ToTopicRuleDynamodbv2ArrayOutputWithContext(ctx context.Context) TopicRuleDynamodbv2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleDynamodbv2ArrayOutput)
}

type TopicRuleDynamodbv2Output struct{ *pulumi.OutputState }

func (TopicRuleDynamodbv2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleDynamodbv2)(nil)).Elem()
}

func (o TopicRuleDynamodbv2Output) ToTopicRuleDynamodbv2Output() TopicRuleDynamodbv2Output {
	return o
}

func (o TopicRuleDynamodbv2Output) ToTopicRuleDynamodbv2OutputWithContext(ctx context.Context) TopicRuleDynamodbv2Output {
	return o
}

// Configuration block with DynamoDB Table to which the message will be written. Nested arguments below.
func (o TopicRuleDynamodbv2Output) PutItem() TopicRuleDynamodbv2PutItemPtrOutput {
	return o.ApplyT(func(v TopicRuleDynamodbv2) *TopicRuleDynamodbv2PutItem { return v.PutItem }).(TopicRuleDynamodbv2PutItemPtrOutput)
}

// The IAM role ARN that allows access to the CloudWatch alarm.
func (o TopicRuleDynamodbv2Output) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleDynamodbv2) string { return v.RoleArn }).(pulumi.StringOutput)
}

type TopicRuleDynamodbv2ArrayOutput struct{ *pulumi.OutputState }

func (TopicRuleDynamodbv2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TopicRuleDynamodbv2)(nil)).Elem()
}

func (o TopicRuleDynamodbv2ArrayOutput) ToTopicRuleDynamodbv2ArrayOutput() TopicRuleDynamodbv2ArrayOutput {
	return o
}

func (o TopicRuleDynamodbv2ArrayOutput) ToTopicRuleDynamodbv2ArrayOutputWithContext(ctx context.Context) TopicRuleDynamodbv2ArrayOutput {
	return o
}

func (o TopicRuleDynamodbv2ArrayOutput) Index(i pulumi.IntInput) TopicRuleDynamodbv2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TopicRuleDynamodbv2 {
		return vs[0].([]TopicRuleDynamodbv2)[vs[1].(int)]
	}).(TopicRuleDynamodbv2Output)
}

type TopicRuleDynamodbv2PutItem struct {
	// The name of the DynamoDB table.
	TableName string `pulumi:"tableName"`
}

// TopicRuleDynamodbv2PutItemInput is an input type that accepts TopicRuleDynamodbv2PutItemArgs and TopicRuleDynamodbv2PutItemOutput values.
// You can construct a concrete instance of `TopicRuleDynamodbv2PutItemInput` via:
//
//          TopicRuleDynamodbv2PutItemArgs{...}
type TopicRuleDynamodbv2PutItemInput interface {
	pulumi.Input

	ToTopicRuleDynamodbv2PutItemOutput() TopicRuleDynamodbv2PutItemOutput
	ToTopicRuleDynamodbv2PutItemOutputWithContext(context.Context) TopicRuleDynamodbv2PutItemOutput
}

type TopicRuleDynamodbv2PutItemArgs struct {
	// The name of the DynamoDB table.
	TableName pulumi.StringInput `pulumi:"tableName"`
}

func (TopicRuleDynamodbv2PutItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleDynamodbv2PutItem)(nil)).Elem()
}

func (i TopicRuleDynamodbv2PutItemArgs) ToTopicRuleDynamodbv2PutItemOutput() TopicRuleDynamodbv2PutItemOutput {
	return i.ToTopicRuleDynamodbv2PutItemOutputWithContext(context.Background())
}

func (i TopicRuleDynamodbv2PutItemArgs) ToTopicRuleDynamodbv2PutItemOutputWithContext(ctx context.Context) TopicRuleDynamodbv2PutItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleDynamodbv2PutItemOutput)
}

func (i TopicRuleDynamodbv2PutItemArgs) ToTopicRuleDynamodbv2PutItemPtrOutput() TopicRuleDynamodbv2PutItemPtrOutput {
	return i.ToTopicRuleDynamodbv2PutItemPtrOutputWithContext(context.Background())
}

func (i TopicRuleDynamodbv2PutItemArgs) ToTopicRuleDynamodbv2PutItemPtrOutputWithContext(ctx context.Context) TopicRuleDynamodbv2PutItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleDynamodbv2PutItemOutput).ToTopicRuleDynamodbv2PutItemPtrOutputWithContext(ctx)
}

// TopicRuleDynamodbv2PutItemPtrInput is an input type that accepts TopicRuleDynamodbv2PutItemArgs, TopicRuleDynamodbv2PutItemPtr and TopicRuleDynamodbv2PutItemPtrOutput values.
// You can construct a concrete instance of `TopicRuleDynamodbv2PutItemPtrInput` via:
//
//          TopicRuleDynamodbv2PutItemArgs{...}
//
//  or:
//
//          nil
type TopicRuleDynamodbv2PutItemPtrInput interface {
	pulumi.Input

	ToTopicRuleDynamodbv2PutItemPtrOutput() TopicRuleDynamodbv2PutItemPtrOutput
	ToTopicRuleDynamodbv2PutItemPtrOutputWithContext(context.Context) TopicRuleDynamodbv2PutItemPtrOutput
}

type topicRuleDynamodbv2PutItemPtrType TopicRuleDynamodbv2PutItemArgs

func TopicRuleDynamodbv2PutItemPtr(v *TopicRuleDynamodbv2PutItemArgs) TopicRuleDynamodbv2PutItemPtrInput {
	return (*topicRuleDynamodbv2PutItemPtrType)(v)
}

func (*topicRuleDynamodbv2PutItemPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleDynamodbv2PutItem)(nil)).Elem()
}

func (i *topicRuleDynamodbv2PutItemPtrType) ToTopicRuleDynamodbv2PutItemPtrOutput() TopicRuleDynamodbv2PutItemPtrOutput {
	return i.ToTopicRuleDynamodbv2PutItemPtrOutputWithContext(context.Background())
}

func (i *topicRuleDynamodbv2PutItemPtrType) ToTopicRuleDynamodbv2PutItemPtrOutputWithContext(ctx context.Context) TopicRuleDynamodbv2PutItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleDynamodbv2PutItemPtrOutput)
}

type TopicRuleDynamodbv2PutItemOutput struct{ *pulumi.OutputState }

func (TopicRuleDynamodbv2PutItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleDynamodbv2PutItem)(nil)).Elem()
}

func (o TopicRuleDynamodbv2PutItemOutput) ToTopicRuleDynamodbv2PutItemOutput() TopicRuleDynamodbv2PutItemOutput {
	return o
}

func (o TopicRuleDynamodbv2PutItemOutput) ToTopicRuleDynamodbv2PutItemOutputWithContext(ctx context.Context) TopicRuleDynamodbv2PutItemOutput {
	return o
}

func (o TopicRuleDynamodbv2PutItemOutput) ToTopicRuleDynamodbv2PutItemPtrOutput() TopicRuleDynamodbv2PutItemPtrOutput {
	return o.ToTopicRuleDynamodbv2PutItemPtrOutputWithContext(context.Background())
}

func (o TopicRuleDynamodbv2PutItemOutput) ToTopicRuleDynamodbv2PutItemPtrOutputWithContext(ctx context.Context) TopicRuleDynamodbv2PutItemPtrOutput {
	return o.ApplyT(func(v TopicRuleDynamodbv2PutItem) *TopicRuleDynamodbv2PutItem {
		return &v
	}).(TopicRuleDynamodbv2PutItemPtrOutput)
}

// The name of the DynamoDB table.
func (o TopicRuleDynamodbv2PutItemOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleDynamodbv2PutItem) string { return v.TableName }).(pulumi.StringOutput)
}

type TopicRuleDynamodbv2PutItemPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleDynamodbv2PutItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleDynamodbv2PutItem)(nil)).Elem()
}

func (o TopicRuleDynamodbv2PutItemPtrOutput) ToTopicRuleDynamodbv2PutItemPtrOutput() TopicRuleDynamodbv2PutItemPtrOutput {
	return o
}

func (o TopicRuleDynamodbv2PutItemPtrOutput) ToTopicRuleDynamodbv2PutItemPtrOutputWithContext(ctx context.Context) TopicRuleDynamodbv2PutItemPtrOutput {
	return o
}

func (o TopicRuleDynamodbv2PutItemPtrOutput) Elem() TopicRuleDynamodbv2PutItemOutput {
	return o.ApplyT(func(v *TopicRuleDynamodbv2PutItem) TopicRuleDynamodbv2PutItem { return *v }).(TopicRuleDynamodbv2PutItemOutput)
}

// The name of the DynamoDB table.
func (o TopicRuleDynamodbv2PutItemPtrOutput) TableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleDynamodbv2PutItem) *string {
		if v == nil {
			return nil
		}
		return &v.TableName
	}).(pulumi.StringPtrOutput)
}

type TopicRuleElasticsearch struct {
	// The endpoint of your Elasticsearch domain.
	Endpoint string `pulumi:"endpoint"`
	// The unique identifier for the document you are storing.
	Id string `pulumi:"id"`
	// The Elasticsearch index where you want to store your data.
	Index string `pulumi:"index"`
	// The IAM role ARN that has access to Elasticsearch.
	RoleArn string `pulumi:"roleArn"`
	// The type of document you are storing.
	Type string `pulumi:"type"`
}

// TopicRuleElasticsearchInput is an input type that accepts TopicRuleElasticsearchArgs and TopicRuleElasticsearchOutput values.
// You can construct a concrete instance of `TopicRuleElasticsearchInput` via:
//
//          TopicRuleElasticsearchArgs{...}
type TopicRuleElasticsearchInput interface {
	pulumi.Input

	ToTopicRuleElasticsearchOutput() TopicRuleElasticsearchOutput
	ToTopicRuleElasticsearchOutputWithContext(context.Context) TopicRuleElasticsearchOutput
}

type TopicRuleElasticsearchArgs struct {
	// The endpoint of your Elasticsearch domain.
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
	// The unique identifier for the document you are storing.
	Id pulumi.StringInput `pulumi:"id"`
	// The Elasticsearch index where you want to store your data.
	Index pulumi.StringInput `pulumi:"index"`
	// The IAM role ARN that has access to Elasticsearch.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The type of document you are storing.
	Type pulumi.StringInput `pulumi:"type"`
}

func (TopicRuleElasticsearchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleElasticsearch)(nil)).Elem()
}

func (i TopicRuleElasticsearchArgs) ToTopicRuleElasticsearchOutput() TopicRuleElasticsearchOutput {
	return i.ToTopicRuleElasticsearchOutputWithContext(context.Background())
}

func (i TopicRuleElasticsearchArgs) ToTopicRuleElasticsearchOutputWithContext(ctx context.Context) TopicRuleElasticsearchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleElasticsearchOutput)
}

func (i TopicRuleElasticsearchArgs) ToTopicRuleElasticsearchPtrOutput() TopicRuleElasticsearchPtrOutput {
	return i.ToTopicRuleElasticsearchPtrOutputWithContext(context.Background())
}

func (i TopicRuleElasticsearchArgs) ToTopicRuleElasticsearchPtrOutputWithContext(ctx context.Context) TopicRuleElasticsearchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleElasticsearchOutput).ToTopicRuleElasticsearchPtrOutputWithContext(ctx)
}

// TopicRuleElasticsearchPtrInput is an input type that accepts TopicRuleElasticsearchArgs, TopicRuleElasticsearchPtr and TopicRuleElasticsearchPtrOutput values.
// You can construct a concrete instance of `TopicRuleElasticsearchPtrInput` via:
//
//          TopicRuleElasticsearchArgs{...}
//
//  or:
//
//          nil
type TopicRuleElasticsearchPtrInput interface {
	pulumi.Input

	ToTopicRuleElasticsearchPtrOutput() TopicRuleElasticsearchPtrOutput
	ToTopicRuleElasticsearchPtrOutputWithContext(context.Context) TopicRuleElasticsearchPtrOutput
}

type topicRuleElasticsearchPtrType TopicRuleElasticsearchArgs

func TopicRuleElasticsearchPtr(v *TopicRuleElasticsearchArgs) TopicRuleElasticsearchPtrInput {
	return (*topicRuleElasticsearchPtrType)(v)
}

func (*topicRuleElasticsearchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleElasticsearch)(nil)).Elem()
}

func (i *topicRuleElasticsearchPtrType) ToTopicRuleElasticsearchPtrOutput() TopicRuleElasticsearchPtrOutput {
	return i.ToTopicRuleElasticsearchPtrOutputWithContext(context.Background())
}

func (i *topicRuleElasticsearchPtrType) ToTopicRuleElasticsearchPtrOutputWithContext(ctx context.Context) TopicRuleElasticsearchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleElasticsearchPtrOutput)
}

type TopicRuleElasticsearchOutput struct{ *pulumi.OutputState }

func (TopicRuleElasticsearchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleElasticsearch)(nil)).Elem()
}

func (o TopicRuleElasticsearchOutput) ToTopicRuleElasticsearchOutput() TopicRuleElasticsearchOutput {
	return o
}

func (o TopicRuleElasticsearchOutput) ToTopicRuleElasticsearchOutputWithContext(ctx context.Context) TopicRuleElasticsearchOutput {
	return o
}

func (o TopicRuleElasticsearchOutput) ToTopicRuleElasticsearchPtrOutput() TopicRuleElasticsearchPtrOutput {
	return o.ToTopicRuleElasticsearchPtrOutputWithContext(context.Background())
}

func (o TopicRuleElasticsearchOutput) ToTopicRuleElasticsearchPtrOutputWithContext(ctx context.Context) TopicRuleElasticsearchPtrOutput {
	return o.ApplyT(func(v TopicRuleElasticsearch) *TopicRuleElasticsearch {
		return &v
	}).(TopicRuleElasticsearchPtrOutput)
}

// The endpoint of your Elasticsearch domain.
func (o TopicRuleElasticsearchOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleElasticsearch) string { return v.Endpoint }).(pulumi.StringOutput)
}

// The unique identifier for the document you are storing.
func (o TopicRuleElasticsearchOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleElasticsearch) string { return v.Id }).(pulumi.StringOutput)
}

// The Elasticsearch index where you want to store your data.
func (o TopicRuleElasticsearchOutput) Index() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleElasticsearch) string { return v.Index }).(pulumi.StringOutput)
}

// The IAM role ARN that has access to Elasticsearch.
func (o TopicRuleElasticsearchOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleElasticsearch) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The type of document you are storing.
func (o TopicRuleElasticsearchOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleElasticsearch) string { return v.Type }).(pulumi.StringOutput)
}

type TopicRuleElasticsearchPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleElasticsearchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleElasticsearch)(nil)).Elem()
}

func (o TopicRuleElasticsearchPtrOutput) ToTopicRuleElasticsearchPtrOutput() TopicRuleElasticsearchPtrOutput {
	return o
}

func (o TopicRuleElasticsearchPtrOutput) ToTopicRuleElasticsearchPtrOutputWithContext(ctx context.Context) TopicRuleElasticsearchPtrOutput {
	return o
}

func (o TopicRuleElasticsearchPtrOutput) Elem() TopicRuleElasticsearchOutput {
	return o.ApplyT(func(v *TopicRuleElasticsearch) TopicRuleElasticsearch { return *v }).(TopicRuleElasticsearchOutput)
}

// The endpoint of your Elasticsearch domain.
func (o TopicRuleElasticsearchPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleElasticsearch) *string {
		if v == nil {
			return nil
		}
		return &v.Endpoint
	}).(pulumi.StringPtrOutput)
}

// The unique identifier for the document you are storing.
func (o TopicRuleElasticsearchPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleElasticsearch) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The Elasticsearch index where you want to store your data.
func (o TopicRuleElasticsearchPtrOutput) Index() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleElasticsearch) *string {
		if v == nil {
			return nil
		}
		return &v.Index
	}).(pulumi.StringPtrOutput)
}

// The IAM role ARN that has access to Elasticsearch.
func (o TopicRuleElasticsearchPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleElasticsearch) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// The type of document you are storing.
func (o TopicRuleElasticsearchPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleElasticsearch) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type TopicRuleFirehose struct {
	// The delivery stream name.
	DeliveryStreamName string `pulumi:"deliveryStreamName"`
	// The IAM role ARN that grants access to the Amazon Kinesis Firehose stream.
	RoleArn string `pulumi:"roleArn"`
	// A character separator that is used to separate records written to the Firehose stream. Valid values are: '\n' (newline), '\t' (tab), '\r\n' (Windows newline), ',' (comma).
	Separator *string `pulumi:"separator"`
}

// TopicRuleFirehoseInput is an input type that accepts TopicRuleFirehoseArgs and TopicRuleFirehoseOutput values.
// You can construct a concrete instance of `TopicRuleFirehoseInput` via:
//
//          TopicRuleFirehoseArgs{...}
type TopicRuleFirehoseInput interface {
	pulumi.Input

	ToTopicRuleFirehoseOutput() TopicRuleFirehoseOutput
	ToTopicRuleFirehoseOutputWithContext(context.Context) TopicRuleFirehoseOutput
}

type TopicRuleFirehoseArgs struct {
	// The delivery stream name.
	DeliveryStreamName pulumi.StringInput `pulumi:"deliveryStreamName"`
	// The IAM role ARN that grants access to the Amazon Kinesis Firehose stream.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// A character separator that is used to separate records written to the Firehose stream. Valid values are: '\n' (newline), '\t' (tab), '\r\n' (Windows newline), ',' (comma).
	Separator pulumi.StringPtrInput `pulumi:"separator"`
}

func (TopicRuleFirehoseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleFirehose)(nil)).Elem()
}

func (i TopicRuleFirehoseArgs) ToTopicRuleFirehoseOutput() TopicRuleFirehoseOutput {
	return i.ToTopicRuleFirehoseOutputWithContext(context.Background())
}

func (i TopicRuleFirehoseArgs) ToTopicRuleFirehoseOutputWithContext(ctx context.Context) TopicRuleFirehoseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleFirehoseOutput)
}

func (i TopicRuleFirehoseArgs) ToTopicRuleFirehosePtrOutput() TopicRuleFirehosePtrOutput {
	return i.ToTopicRuleFirehosePtrOutputWithContext(context.Background())
}

func (i TopicRuleFirehoseArgs) ToTopicRuleFirehosePtrOutputWithContext(ctx context.Context) TopicRuleFirehosePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleFirehoseOutput).ToTopicRuleFirehosePtrOutputWithContext(ctx)
}

// TopicRuleFirehosePtrInput is an input type that accepts TopicRuleFirehoseArgs, TopicRuleFirehosePtr and TopicRuleFirehosePtrOutput values.
// You can construct a concrete instance of `TopicRuleFirehosePtrInput` via:
//
//          TopicRuleFirehoseArgs{...}
//
//  or:
//
//          nil
type TopicRuleFirehosePtrInput interface {
	pulumi.Input

	ToTopicRuleFirehosePtrOutput() TopicRuleFirehosePtrOutput
	ToTopicRuleFirehosePtrOutputWithContext(context.Context) TopicRuleFirehosePtrOutput
}

type topicRuleFirehosePtrType TopicRuleFirehoseArgs

func TopicRuleFirehosePtr(v *TopicRuleFirehoseArgs) TopicRuleFirehosePtrInput {
	return (*topicRuleFirehosePtrType)(v)
}

func (*topicRuleFirehosePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleFirehose)(nil)).Elem()
}

func (i *topicRuleFirehosePtrType) ToTopicRuleFirehosePtrOutput() TopicRuleFirehosePtrOutput {
	return i.ToTopicRuleFirehosePtrOutputWithContext(context.Background())
}

func (i *topicRuleFirehosePtrType) ToTopicRuleFirehosePtrOutputWithContext(ctx context.Context) TopicRuleFirehosePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleFirehosePtrOutput)
}

type TopicRuleFirehoseOutput struct{ *pulumi.OutputState }

func (TopicRuleFirehoseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleFirehose)(nil)).Elem()
}

func (o TopicRuleFirehoseOutput) ToTopicRuleFirehoseOutput() TopicRuleFirehoseOutput {
	return o
}

func (o TopicRuleFirehoseOutput) ToTopicRuleFirehoseOutputWithContext(ctx context.Context) TopicRuleFirehoseOutput {
	return o
}

func (o TopicRuleFirehoseOutput) ToTopicRuleFirehosePtrOutput() TopicRuleFirehosePtrOutput {
	return o.ToTopicRuleFirehosePtrOutputWithContext(context.Background())
}

func (o TopicRuleFirehoseOutput) ToTopicRuleFirehosePtrOutputWithContext(ctx context.Context) TopicRuleFirehosePtrOutput {
	return o.ApplyT(func(v TopicRuleFirehose) *TopicRuleFirehose {
		return &v
	}).(TopicRuleFirehosePtrOutput)
}

// The delivery stream name.
func (o TopicRuleFirehoseOutput) DeliveryStreamName() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleFirehose) string { return v.DeliveryStreamName }).(pulumi.StringOutput)
}

// The IAM role ARN that grants access to the Amazon Kinesis Firehose stream.
func (o TopicRuleFirehoseOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleFirehose) string { return v.RoleArn }).(pulumi.StringOutput)
}

// A character separator that is used to separate records written to the Firehose stream. Valid values are: '\n' (newline), '\t' (tab), '\r\n' (Windows newline), ',' (comma).
func (o TopicRuleFirehoseOutput) Separator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleFirehose) *string { return v.Separator }).(pulumi.StringPtrOutput)
}

type TopicRuleFirehosePtrOutput struct{ *pulumi.OutputState }

func (TopicRuleFirehosePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleFirehose)(nil)).Elem()
}

func (o TopicRuleFirehosePtrOutput) ToTopicRuleFirehosePtrOutput() TopicRuleFirehosePtrOutput {
	return o
}

func (o TopicRuleFirehosePtrOutput) ToTopicRuleFirehosePtrOutputWithContext(ctx context.Context) TopicRuleFirehosePtrOutput {
	return o
}

func (o TopicRuleFirehosePtrOutput) Elem() TopicRuleFirehoseOutput {
	return o.ApplyT(func(v *TopicRuleFirehose) TopicRuleFirehose { return *v }).(TopicRuleFirehoseOutput)
}

// The delivery stream name.
func (o TopicRuleFirehosePtrOutput) DeliveryStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleFirehose) *string {
		if v == nil {
			return nil
		}
		return &v.DeliveryStreamName
	}).(pulumi.StringPtrOutput)
}

// The IAM role ARN that grants access to the Amazon Kinesis Firehose stream.
func (o TopicRuleFirehosePtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleFirehose) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// A character separator that is used to separate records written to the Firehose stream. Valid values are: '\n' (newline), '\t' (tab), '\r\n' (Windows newline), ',' (comma).
func (o TopicRuleFirehosePtrOutput) Separator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleFirehose) *string {
		if v == nil {
			return nil
		}
		return v.Separator
	}).(pulumi.StringPtrOutput)
}

type TopicRuleIotAnalytic struct {
	// Name of AWS IOT Analytics channel.
	ChannelName string `pulumi:"channelName"`
	// The ARN of the IAM role that grants access.
	RoleArn string `pulumi:"roleArn"`
}

// TopicRuleIotAnalyticInput is an input type that accepts TopicRuleIotAnalyticArgs and TopicRuleIotAnalyticOutput values.
// You can construct a concrete instance of `TopicRuleIotAnalyticInput` via:
//
//          TopicRuleIotAnalyticArgs{...}
type TopicRuleIotAnalyticInput interface {
	pulumi.Input

	ToTopicRuleIotAnalyticOutput() TopicRuleIotAnalyticOutput
	ToTopicRuleIotAnalyticOutputWithContext(context.Context) TopicRuleIotAnalyticOutput
}

type TopicRuleIotAnalyticArgs struct {
	// Name of AWS IOT Analytics channel.
	ChannelName pulumi.StringInput `pulumi:"channelName"`
	// The ARN of the IAM role that grants access.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (TopicRuleIotAnalyticArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleIotAnalytic)(nil)).Elem()
}

func (i TopicRuleIotAnalyticArgs) ToTopicRuleIotAnalyticOutput() TopicRuleIotAnalyticOutput {
	return i.ToTopicRuleIotAnalyticOutputWithContext(context.Background())
}

func (i TopicRuleIotAnalyticArgs) ToTopicRuleIotAnalyticOutputWithContext(ctx context.Context) TopicRuleIotAnalyticOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleIotAnalyticOutput)
}

// TopicRuleIotAnalyticArrayInput is an input type that accepts TopicRuleIotAnalyticArray and TopicRuleIotAnalyticArrayOutput values.
// You can construct a concrete instance of `TopicRuleIotAnalyticArrayInput` via:
//
//          TopicRuleIotAnalyticArray{ TopicRuleIotAnalyticArgs{...} }
type TopicRuleIotAnalyticArrayInput interface {
	pulumi.Input

	ToTopicRuleIotAnalyticArrayOutput() TopicRuleIotAnalyticArrayOutput
	ToTopicRuleIotAnalyticArrayOutputWithContext(context.Context) TopicRuleIotAnalyticArrayOutput
}

type TopicRuleIotAnalyticArray []TopicRuleIotAnalyticInput

func (TopicRuleIotAnalyticArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TopicRuleIotAnalytic)(nil)).Elem()
}

func (i TopicRuleIotAnalyticArray) ToTopicRuleIotAnalyticArrayOutput() TopicRuleIotAnalyticArrayOutput {
	return i.ToTopicRuleIotAnalyticArrayOutputWithContext(context.Background())
}

func (i TopicRuleIotAnalyticArray) ToTopicRuleIotAnalyticArrayOutputWithContext(ctx context.Context) TopicRuleIotAnalyticArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleIotAnalyticArrayOutput)
}

type TopicRuleIotAnalyticOutput struct{ *pulumi.OutputState }

func (TopicRuleIotAnalyticOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleIotAnalytic)(nil)).Elem()
}

func (o TopicRuleIotAnalyticOutput) ToTopicRuleIotAnalyticOutput() TopicRuleIotAnalyticOutput {
	return o
}

func (o TopicRuleIotAnalyticOutput) ToTopicRuleIotAnalyticOutputWithContext(ctx context.Context) TopicRuleIotAnalyticOutput {
	return o
}

// Name of AWS IOT Analytics channel.
func (o TopicRuleIotAnalyticOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleIotAnalytic) string { return v.ChannelName }).(pulumi.StringOutput)
}

// The ARN of the IAM role that grants access.
func (o TopicRuleIotAnalyticOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleIotAnalytic) string { return v.RoleArn }).(pulumi.StringOutput)
}

type TopicRuleIotAnalyticArrayOutput struct{ *pulumi.OutputState }

func (TopicRuleIotAnalyticArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TopicRuleIotAnalytic)(nil)).Elem()
}

func (o TopicRuleIotAnalyticArrayOutput) ToTopicRuleIotAnalyticArrayOutput() TopicRuleIotAnalyticArrayOutput {
	return o
}

func (o TopicRuleIotAnalyticArrayOutput) ToTopicRuleIotAnalyticArrayOutputWithContext(ctx context.Context) TopicRuleIotAnalyticArrayOutput {
	return o
}

func (o TopicRuleIotAnalyticArrayOutput) Index(i pulumi.IntInput) TopicRuleIotAnalyticOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TopicRuleIotAnalytic {
		return vs[0].([]TopicRuleIotAnalytic)[vs[1].(int)]
	}).(TopicRuleIotAnalyticOutput)
}

type TopicRuleIotEvent struct {
	// The name of the AWS IoT Events input.
	InputName string `pulumi:"inputName"`
	// Use this to ensure that only one input (message) with a given messageId is processed by an AWS IoT Events detector.
	MessageId *string `pulumi:"messageId"`
	// The ARN of the IAM role that grants access.
	RoleArn string `pulumi:"roleArn"`
}

// TopicRuleIotEventInput is an input type that accepts TopicRuleIotEventArgs and TopicRuleIotEventOutput values.
// You can construct a concrete instance of `TopicRuleIotEventInput` via:
//
//          TopicRuleIotEventArgs{...}
type TopicRuleIotEventInput interface {
	pulumi.Input

	ToTopicRuleIotEventOutput() TopicRuleIotEventOutput
	ToTopicRuleIotEventOutputWithContext(context.Context) TopicRuleIotEventOutput
}

type TopicRuleIotEventArgs struct {
	// The name of the AWS IoT Events input.
	InputName pulumi.StringInput `pulumi:"inputName"`
	// Use this to ensure that only one input (message) with a given messageId is processed by an AWS IoT Events detector.
	MessageId pulumi.StringPtrInput `pulumi:"messageId"`
	// The ARN of the IAM role that grants access.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (TopicRuleIotEventArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleIotEvent)(nil)).Elem()
}

func (i TopicRuleIotEventArgs) ToTopicRuleIotEventOutput() TopicRuleIotEventOutput {
	return i.ToTopicRuleIotEventOutputWithContext(context.Background())
}

func (i TopicRuleIotEventArgs) ToTopicRuleIotEventOutputWithContext(ctx context.Context) TopicRuleIotEventOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleIotEventOutput)
}

// TopicRuleIotEventArrayInput is an input type that accepts TopicRuleIotEventArray and TopicRuleIotEventArrayOutput values.
// You can construct a concrete instance of `TopicRuleIotEventArrayInput` via:
//
//          TopicRuleIotEventArray{ TopicRuleIotEventArgs{...} }
type TopicRuleIotEventArrayInput interface {
	pulumi.Input

	ToTopicRuleIotEventArrayOutput() TopicRuleIotEventArrayOutput
	ToTopicRuleIotEventArrayOutputWithContext(context.Context) TopicRuleIotEventArrayOutput
}

type TopicRuleIotEventArray []TopicRuleIotEventInput

func (TopicRuleIotEventArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TopicRuleIotEvent)(nil)).Elem()
}

func (i TopicRuleIotEventArray) ToTopicRuleIotEventArrayOutput() TopicRuleIotEventArrayOutput {
	return i.ToTopicRuleIotEventArrayOutputWithContext(context.Background())
}

func (i TopicRuleIotEventArray) ToTopicRuleIotEventArrayOutputWithContext(ctx context.Context) TopicRuleIotEventArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleIotEventArrayOutput)
}

type TopicRuleIotEventOutput struct{ *pulumi.OutputState }

func (TopicRuleIotEventOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleIotEvent)(nil)).Elem()
}

func (o TopicRuleIotEventOutput) ToTopicRuleIotEventOutput() TopicRuleIotEventOutput {
	return o
}

func (o TopicRuleIotEventOutput) ToTopicRuleIotEventOutputWithContext(ctx context.Context) TopicRuleIotEventOutput {
	return o
}

// The name of the AWS IoT Events input.
func (o TopicRuleIotEventOutput) InputName() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleIotEvent) string { return v.InputName }).(pulumi.StringOutput)
}

// Use this to ensure that only one input (message) with a given messageId is processed by an AWS IoT Events detector.
func (o TopicRuleIotEventOutput) MessageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleIotEvent) *string { return v.MessageId }).(pulumi.StringPtrOutput)
}

// The ARN of the IAM role that grants access.
func (o TopicRuleIotEventOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleIotEvent) string { return v.RoleArn }).(pulumi.StringOutput)
}

type TopicRuleIotEventArrayOutput struct{ *pulumi.OutputState }

func (TopicRuleIotEventArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TopicRuleIotEvent)(nil)).Elem()
}

func (o TopicRuleIotEventArrayOutput) ToTopicRuleIotEventArrayOutput() TopicRuleIotEventArrayOutput {
	return o
}

func (o TopicRuleIotEventArrayOutput) ToTopicRuleIotEventArrayOutputWithContext(ctx context.Context) TopicRuleIotEventArrayOutput {
	return o
}

func (o TopicRuleIotEventArrayOutput) Index(i pulumi.IntInput) TopicRuleIotEventOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TopicRuleIotEvent {
		return vs[0].([]TopicRuleIotEvent)[vs[1].(int)]
	}).(TopicRuleIotEventOutput)
}

type TopicRuleKinesis struct {
	// The partition key.
	PartitionKey *string `pulumi:"partitionKey"`
	// The ARN of the IAM role that grants access to the Amazon Kinesis stream.
	RoleArn string `pulumi:"roleArn"`
	// The name of the Amazon Kinesis stream.
	StreamName string `pulumi:"streamName"`
}

// TopicRuleKinesisInput is an input type that accepts TopicRuleKinesisArgs and TopicRuleKinesisOutput values.
// You can construct a concrete instance of `TopicRuleKinesisInput` via:
//
//          TopicRuleKinesisArgs{...}
type TopicRuleKinesisInput interface {
	pulumi.Input

	ToTopicRuleKinesisOutput() TopicRuleKinesisOutput
	ToTopicRuleKinesisOutputWithContext(context.Context) TopicRuleKinesisOutput
}

type TopicRuleKinesisArgs struct {
	// The partition key.
	PartitionKey pulumi.StringPtrInput `pulumi:"partitionKey"`
	// The ARN of the IAM role that grants access to the Amazon Kinesis stream.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The name of the Amazon Kinesis stream.
	StreamName pulumi.StringInput `pulumi:"streamName"`
}

func (TopicRuleKinesisArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleKinesis)(nil)).Elem()
}

func (i TopicRuleKinesisArgs) ToTopicRuleKinesisOutput() TopicRuleKinesisOutput {
	return i.ToTopicRuleKinesisOutputWithContext(context.Background())
}

func (i TopicRuleKinesisArgs) ToTopicRuleKinesisOutputWithContext(ctx context.Context) TopicRuleKinesisOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleKinesisOutput)
}

func (i TopicRuleKinesisArgs) ToTopicRuleKinesisPtrOutput() TopicRuleKinesisPtrOutput {
	return i.ToTopicRuleKinesisPtrOutputWithContext(context.Background())
}

func (i TopicRuleKinesisArgs) ToTopicRuleKinesisPtrOutputWithContext(ctx context.Context) TopicRuleKinesisPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleKinesisOutput).ToTopicRuleKinesisPtrOutputWithContext(ctx)
}

// TopicRuleKinesisPtrInput is an input type that accepts TopicRuleKinesisArgs, TopicRuleKinesisPtr and TopicRuleKinesisPtrOutput values.
// You can construct a concrete instance of `TopicRuleKinesisPtrInput` via:
//
//          TopicRuleKinesisArgs{...}
//
//  or:
//
//          nil
type TopicRuleKinesisPtrInput interface {
	pulumi.Input

	ToTopicRuleKinesisPtrOutput() TopicRuleKinesisPtrOutput
	ToTopicRuleKinesisPtrOutputWithContext(context.Context) TopicRuleKinesisPtrOutput
}

type topicRuleKinesisPtrType TopicRuleKinesisArgs

func TopicRuleKinesisPtr(v *TopicRuleKinesisArgs) TopicRuleKinesisPtrInput {
	return (*topicRuleKinesisPtrType)(v)
}

func (*topicRuleKinesisPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleKinesis)(nil)).Elem()
}

func (i *topicRuleKinesisPtrType) ToTopicRuleKinesisPtrOutput() TopicRuleKinesisPtrOutput {
	return i.ToTopicRuleKinesisPtrOutputWithContext(context.Background())
}

func (i *topicRuleKinesisPtrType) ToTopicRuleKinesisPtrOutputWithContext(ctx context.Context) TopicRuleKinesisPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleKinesisPtrOutput)
}

type TopicRuleKinesisOutput struct{ *pulumi.OutputState }

func (TopicRuleKinesisOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleKinesis)(nil)).Elem()
}

func (o TopicRuleKinesisOutput) ToTopicRuleKinesisOutput() TopicRuleKinesisOutput {
	return o
}

func (o TopicRuleKinesisOutput) ToTopicRuleKinesisOutputWithContext(ctx context.Context) TopicRuleKinesisOutput {
	return o
}

func (o TopicRuleKinesisOutput) ToTopicRuleKinesisPtrOutput() TopicRuleKinesisPtrOutput {
	return o.ToTopicRuleKinesisPtrOutputWithContext(context.Background())
}

func (o TopicRuleKinesisOutput) ToTopicRuleKinesisPtrOutputWithContext(ctx context.Context) TopicRuleKinesisPtrOutput {
	return o.ApplyT(func(v TopicRuleKinesis) *TopicRuleKinesis {
		return &v
	}).(TopicRuleKinesisPtrOutput)
}

// The partition key.
func (o TopicRuleKinesisOutput) PartitionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleKinesis) *string { return v.PartitionKey }).(pulumi.StringPtrOutput)
}

// The ARN of the IAM role that grants access to the Amazon Kinesis stream.
func (o TopicRuleKinesisOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleKinesis) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The name of the Amazon Kinesis stream.
func (o TopicRuleKinesisOutput) StreamName() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleKinesis) string { return v.StreamName }).(pulumi.StringOutput)
}

type TopicRuleKinesisPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleKinesisPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleKinesis)(nil)).Elem()
}

func (o TopicRuleKinesisPtrOutput) ToTopicRuleKinesisPtrOutput() TopicRuleKinesisPtrOutput {
	return o
}

func (o TopicRuleKinesisPtrOutput) ToTopicRuleKinesisPtrOutputWithContext(ctx context.Context) TopicRuleKinesisPtrOutput {
	return o
}

func (o TopicRuleKinesisPtrOutput) Elem() TopicRuleKinesisOutput {
	return o.ApplyT(func(v *TopicRuleKinesis) TopicRuleKinesis { return *v }).(TopicRuleKinesisOutput)
}

// The partition key.
func (o TopicRuleKinesisPtrOutput) PartitionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleKinesis) *string {
		if v == nil {
			return nil
		}
		return v.PartitionKey
	}).(pulumi.StringPtrOutput)
}

// The ARN of the IAM role that grants access to the Amazon Kinesis stream.
func (o TopicRuleKinesisPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleKinesis) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// The name of the Amazon Kinesis stream.
func (o TopicRuleKinesisPtrOutput) StreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleKinesis) *string {
		if v == nil {
			return nil
		}
		return &v.StreamName
	}).(pulumi.StringPtrOutput)
}

type TopicRuleLambda struct {
	// The ARN of the Lambda function.
	FunctionArn string `pulumi:"functionArn"`
}

// TopicRuleLambdaInput is an input type that accepts TopicRuleLambdaArgs and TopicRuleLambdaOutput values.
// You can construct a concrete instance of `TopicRuleLambdaInput` via:
//
//          TopicRuleLambdaArgs{...}
type TopicRuleLambdaInput interface {
	pulumi.Input

	ToTopicRuleLambdaOutput() TopicRuleLambdaOutput
	ToTopicRuleLambdaOutputWithContext(context.Context) TopicRuleLambdaOutput
}

type TopicRuleLambdaArgs struct {
	// The ARN of the Lambda function.
	FunctionArn pulumi.StringInput `pulumi:"functionArn"`
}

func (TopicRuleLambdaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleLambda)(nil)).Elem()
}

func (i TopicRuleLambdaArgs) ToTopicRuleLambdaOutput() TopicRuleLambdaOutput {
	return i.ToTopicRuleLambdaOutputWithContext(context.Background())
}

func (i TopicRuleLambdaArgs) ToTopicRuleLambdaOutputWithContext(ctx context.Context) TopicRuleLambdaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleLambdaOutput)
}

func (i TopicRuleLambdaArgs) ToTopicRuleLambdaPtrOutput() TopicRuleLambdaPtrOutput {
	return i.ToTopicRuleLambdaPtrOutputWithContext(context.Background())
}

func (i TopicRuleLambdaArgs) ToTopicRuleLambdaPtrOutputWithContext(ctx context.Context) TopicRuleLambdaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleLambdaOutput).ToTopicRuleLambdaPtrOutputWithContext(ctx)
}

// TopicRuleLambdaPtrInput is an input type that accepts TopicRuleLambdaArgs, TopicRuleLambdaPtr and TopicRuleLambdaPtrOutput values.
// You can construct a concrete instance of `TopicRuleLambdaPtrInput` via:
//
//          TopicRuleLambdaArgs{...}
//
//  or:
//
//          nil
type TopicRuleLambdaPtrInput interface {
	pulumi.Input

	ToTopicRuleLambdaPtrOutput() TopicRuleLambdaPtrOutput
	ToTopicRuleLambdaPtrOutputWithContext(context.Context) TopicRuleLambdaPtrOutput
}

type topicRuleLambdaPtrType TopicRuleLambdaArgs

func TopicRuleLambdaPtr(v *TopicRuleLambdaArgs) TopicRuleLambdaPtrInput {
	return (*topicRuleLambdaPtrType)(v)
}

func (*topicRuleLambdaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleLambda)(nil)).Elem()
}

func (i *topicRuleLambdaPtrType) ToTopicRuleLambdaPtrOutput() TopicRuleLambdaPtrOutput {
	return i.ToTopicRuleLambdaPtrOutputWithContext(context.Background())
}

func (i *topicRuleLambdaPtrType) ToTopicRuleLambdaPtrOutputWithContext(ctx context.Context) TopicRuleLambdaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleLambdaPtrOutput)
}

type TopicRuleLambdaOutput struct{ *pulumi.OutputState }

func (TopicRuleLambdaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleLambda)(nil)).Elem()
}

func (o TopicRuleLambdaOutput) ToTopicRuleLambdaOutput() TopicRuleLambdaOutput {
	return o
}

func (o TopicRuleLambdaOutput) ToTopicRuleLambdaOutputWithContext(ctx context.Context) TopicRuleLambdaOutput {
	return o
}

func (o TopicRuleLambdaOutput) ToTopicRuleLambdaPtrOutput() TopicRuleLambdaPtrOutput {
	return o.ToTopicRuleLambdaPtrOutputWithContext(context.Background())
}

func (o TopicRuleLambdaOutput) ToTopicRuleLambdaPtrOutputWithContext(ctx context.Context) TopicRuleLambdaPtrOutput {
	return o.ApplyT(func(v TopicRuleLambda) *TopicRuleLambda {
		return &v
	}).(TopicRuleLambdaPtrOutput)
}

// The ARN of the Lambda function.
func (o TopicRuleLambdaOutput) FunctionArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleLambda) string { return v.FunctionArn }).(pulumi.StringOutput)
}

type TopicRuleLambdaPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleLambdaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleLambda)(nil)).Elem()
}

func (o TopicRuleLambdaPtrOutput) ToTopicRuleLambdaPtrOutput() TopicRuleLambdaPtrOutput {
	return o
}

func (o TopicRuleLambdaPtrOutput) ToTopicRuleLambdaPtrOutputWithContext(ctx context.Context) TopicRuleLambdaPtrOutput {
	return o
}

func (o TopicRuleLambdaPtrOutput) Elem() TopicRuleLambdaOutput {
	return o.ApplyT(func(v *TopicRuleLambda) TopicRuleLambda { return *v }).(TopicRuleLambdaOutput)
}

// The ARN of the Lambda function.
func (o TopicRuleLambdaPtrOutput) FunctionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleLambda) *string {
		if v == nil {
			return nil
		}
		return &v.FunctionArn
	}).(pulumi.StringPtrOutput)
}

type TopicRuleRepublish struct {
	// The Quality of Service (QoS) level to use when republishing messages. Valid values are 0 or 1. The default value is 0.
	Qos *int `pulumi:"qos"`
	// The ARN of the IAM role that grants access.
	RoleArn string `pulumi:"roleArn"`
	// The name of the MQTT topic the message should be republished to.
	Topic string `pulumi:"topic"`
}

// TopicRuleRepublishInput is an input type that accepts TopicRuleRepublishArgs and TopicRuleRepublishOutput values.
// You can construct a concrete instance of `TopicRuleRepublishInput` via:
//
//          TopicRuleRepublishArgs{...}
type TopicRuleRepublishInput interface {
	pulumi.Input

	ToTopicRuleRepublishOutput() TopicRuleRepublishOutput
	ToTopicRuleRepublishOutputWithContext(context.Context) TopicRuleRepublishOutput
}

type TopicRuleRepublishArgs struct {
	// The Quality of Service (QoS) level to use when republishing messages. Valid values are 0 or 1. The default value is 0.
	Qos pulumi.IntPtrInput `pulumi:"qos"`
	// The ARN of the IAM role that grants access.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The name of the MQTT topic the message should be republished to.
	Topic pulumi.StringInput `pulumi:"topic"`
}

func (TopicRuleRepublishArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleRepublish)(nil)).Elem()
}

func (i TopicRuleRepublishArgs) ToTopicRuleRepublishOutput() TopicRuleRepublishOutput {
	return i.ToTopicRuleRepublishOutputWithContext(context.Background())
}

func (i TopicRuleRepublishArgs) ToTopicRuleRepublishOutputWithContext(ctx context.Context) TopicRuleRepublishOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleRepublishOutput)
}

func (i TopicRuleRepublishArgs) ToTopicRuleRepublishPtrOutput() TopicRuleRepublishPtrOutput {
	return i.ToTopicRuleRepublishPtrOutputWithContext(context.Background())
}

func (i TopicRuleRepublishArgs) ToTopicRuleRepublishPtrOutputWithContext(ctx context.Context) TopicRuleRepublishPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleRepublishOutput).ToTopicRuleRepublishPtrOutputWithContext(ctx)
}

// TopicRuleRepublishPtrInput is an input type that accepts TopicRuleRepublishArgs, TopicRuleRepublishPtr and TopicRuleRepublishPtrOutput values.
// You can construct a concrete instance of `TopicRuleRepublishPtrInput` via:
//
//          TopicRuleRepublishArgs{...}
//
//  or:
//
//          nil
type TopicRuleRepublishPtrInput interface {
	pulumi.Input

	ToTopicRuleRepublishPtrOutput() TopicRuleRepublishPtrOutput
	ToTopicRuleRepublishPtrOutputWithContext(context.Context) TopicRuleRepublishPtrOutput
}

type topicRuleRepublishPtrType TopicRuleRepublishArgs

func TopicRuleRepublishPtr(v *TopicRuleRepublishArgs) TopicRuleRepublishPtrInput {
	return (*topicRuleRepublishPtrType)(v)
}

func (*topicRuleRepublishPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleRepublish)(nil)).Elem()
}

func (i *topicRuleRepublishPtrType) ToTopicRuleRepublishPtrOutput() TopicRuleRepublishPtrOutput {
	return i.ToTopicRuleRepublishPtrOutputWithContext(context.Background())
}

func (i *topicRuleRepublishPtrType) ToTopicRuleRepublishPtrOutputWithContext(ctx context.Context) TopicRuleRepublishPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleRepublishPtrOutput)
}

type TopicRuleRepublishOutput struct{ *pulumi.OutputState }

func (TopicRuleRepublishOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleRepublish)(nil)).Elem()
}

func (o TopicRuleRepublishOutput) ToTopicRuleRepublishOutput() TopicRuleRepublishOutput {
	return o
}

func (o TopicRuleRepublishOutput) ToTopicRuleRepublishOutputWithContext(ctx context.Context) TopicRuleRepublishOutput {
	return o
}

func (o TopicRuleRepublishOutput) ToTopicRuleRepublishPtrOutput() TopicRuleRepublishPtrOutput {
	return o.ToTopicRuleRepublishPtrOutputWithContext(context.Background())
}

func (o TopicRuleRepublishOutput) ToTopicRuleRepublishPtrOutputWithContext(ctx context.Context) TopicRuleRepublishPtrOutput {
	return o.ApplyT(func(v TopicRuleRepublish) *TopicRuleRepublish {
		return &v
	}).(TopicRuleRepublishPtrOutput)
}

// The Quality of Service (QoS) level to use when republishing messages. Valid values are 0 or 1. The default value is 0.
func (o TopicRuleRepublishOutput) Qos() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TopicRuleRepublish) *int { return v.Qos }).(pulumi.IntPtrOutput)
}

// The ARN of the IAM role that grants access.
func (o TopicRuleRepublishOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleRepublish) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The name of the MQTT topic the message should be republished to.
func (o TopicRuleRepublishOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleRepublish) string { return v.Topic }).(pulumi.StringOutput)
}

type TopicRuleRepublishPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleRepublishPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleRepublish)(nil)).Elem()
}

func (o TopicRuleRepublishPtrOutput) ToTopicRuleRepublishPtrOutput() TopicRuleRepublishPtrOutput {
	return o
}

func (o TopicRuleRepublishPtrOutput) ToTopicRuleRepublishPtrOutputWithContext(ctx context.Context) TopicRuleRepublishPtrOutput {
	return o
}

func (o TopicRuleRepublishPtrOutput) Elem() TopicRuleRepublishOutput {
	return o.ApplyT(func(v *TopicRuleRepublish) TopicRuleRepublish { return *v }).(TopicRuleRepublishOutput)
}

// The Quality of Service (QoS) level to use when republishing messages. Valid values are 0 or 1. The default value is 0.
func (o TopicRuleRepublishPtrOutput) Qos() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TopicRuleRepublish) *int {
		if v == nil {
			return nil
		}
		return v.Qos
	}).(pulumi.IntPtrOutput)
}

// The ARN of the IAM role that grants access.
func (o TopicRuleRepublishPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleRepublish) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// The name of the MQTT topic the message should be republished to.
func (o TopicRuleRepublishPtrOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleRepublish) *string {
		if v == nil {
			return nil
		}
		return &v.Topic
	}).(pulumi.StringPtrOutput)
}

type TopicRuleS3 struct {
	// The Amazon S3 bucket name.
	BucketName string `pulumi:"bucketName"`
	// The object key.
	Key string `pulumi:"key"`
	// The IAM role ARN that allows access to the CloudWatch alarm.
	RoleArn string `pulumi:"roleArn"`
}

// TopicRuleS3Input is an input type that accepts TopicRuleS3Args and TopicRuleS3Output values.
// You can construct a concrete instance of `TopicRuleS3Input` via:
//
//          TopicRuleS3Args{...}
type TopicRuleS3Input interface {
	pulumi.Input

	ToTopicRuleS3Output() TopicRuleS3Output
	ToTopicRuleS3OutputWithContext(context.Context) TopicRuleS3Output
}

type TopicRuleS3Args struct {
	// The Amazon S3 bucket name.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
	// The object key.
	Key pulumi.StringInput `pulumi:"key"`
	// The IAM role ARN that allows access to the CloudWatch alarm.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (TopicRuleS3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleS3)(nil)).Elem()
}

func (i TopicRuleS3Args) ToTopicRuleS3Output() TopicRuleS3Output {
	return i.ToTopicRuleS3OutputWithContext(context.Background())
}

func (i TopicRuleS3Args) ToTopicRuleS3OutputWithContext(ctx context.Context) TopicRuleS3Output {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleS3Output)
}

func (i TopicRuleS3Args) ToTopicRuleS3PtrOutput() TopicRuleS3PtrOutput {
	return i.ToTopicRuleS3PtrOutputWithContext(context.Background())
}

func (i TopicRuleS3Args) ToTopicRuleS3PtrOutputWithContext(ctx context.Context) TopicRuleS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleS3Output).ToTopicRuleS3PtrOutputWithContext(ctx)
}

// TopicRuleS3PtrInput is an input type that accepts TopicRuleS3Args, TopicRuleS3Ptr and TopicRuleS3PtrOutput values.
// You can construct a concrete instance of `TopicRuleS3PtrInput` via:
//
//          TopicRuleS3Args{...}
//
//  or:
//
//          nil
type TopicRuleS3PtrInput interface {
	pulumi.Input

	ToTopicRuleS3PtrOutput() TopicRuleS3PtrOutput
	ToTopicRuleS3PtrOutputWithContext(context.Context) TopicRuleS3PtrOutput
}

type topicRuleS3PtrType TopicRuleS3Args

func TopicRuleS3Ptr(v *TopicRuleS3Args) TopicRuleS3PtrInput {
	return (*topicRuleS3PtrType)(v)
}

func (*topicRuleS3PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleS3)(nil)).Elem()
}

func (i *topicRuleS3PtrType) ToTopicRuleS3PtrOutput() TopicRuleS3PtrOutput {
	return i.ToTopicRuleS3PtrOutputWithContext(context.Background())
}

func (i *topicRuleS3PtrType) ToTopicRuleS3PtrOutputWithContext(ctx context.Context) TopicRuleS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleS3PtrOutput)
}

type TopicRuleS3Output struct{ *pulumi.OutputState }

func (TopicRuleS3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleS3)(nil)).Elem()
}

func (o TopicRuleS3Output) ToTopicRuleS3Output() TopicRuleS3Output {
	return o
}

func (o TopicRuleS3Output) ToTopicRuleS3OutputWithContext(ctx context.Context) TopicRuleS3Output {
	return o
}

func (o TopicRuleS3Output) ToTopicRuleS3PtrOutput() TopicRuleS3PtrOutput {
	return o.ToTopicRuleS3PtrOutputWithContext(context.Background())
}

func (o TopicRuleS3Output) ToTopicRuleS3PtrOutputWithContext(ctx context.Context) TopicRuleS3PtrOutput {
	return o.ApplyT(func(v TopicRuleS3) *TopicRuleS3 {
		return &v
	}).(TopicRuleS3PtrOutput)
}

// The Amazon S3 bucket name.
func (o TopicRuleS3Output) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleS3) string { return v.BucketName }).(pulumi.StringOutput)
}

// The object key.
func (o TopicRuleS3Output) Key() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleS3) string { return v.Key }).(pulumi.StringOutput)
}

// The IAM role ARN that allows access to the CloudWatch alarm.
func (o TopicRuleS3Output) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleS3) string { return v.RoleArn }).(pulumi.StringOutput)
}

type TopicRuleS3PtrOutput struct{ *pulumi.OutputState }

func (TopicRuleS3PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleS3)(nil)).Elem()
}

func (o TopicRuleS3PtrOutput) ToTopicRuleS3PtrOutput() TopicRuleS3PtrOutput {
	return o
}

func (o TopicRuleS3PtrOutput) ToTopicRuleS3PtrOutputWithContext(ctx context.Context) TopicRuleS3PtrOutput {
	return o
}

func (o TopicRuleS3PtrOutput) Elem() TopicRuleS3Output {
	return o.ApplyT(func(v *TopicRuleS3) TopicRuleS3 { return *v }).(TopicRuleS3Output)
}

// The Amazon S3 bucket name.
func (o TopicRuleS3PtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleS3) *string {
		if v == nil {
			return nil
		}
		return &v.BucketName
	}).(pulumi.StringPtrOutput)
}

// The object key.
func (o TopicRuleS3PtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleS3) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The IAM role ARN that allows access to the CloudWatch alarm.
func (o TopicRuleS3PtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleS3) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type TopicRuleSns struct {
	// The message format of the message to publish. Accepted values are "JSON" and "RAW".
	MessageFormat *string `pulumi:"messageFormat"`
	// The ARN of the IAM role that grants access.
	RoleArn string `pulumi:"roleArn"`
	// The ARN of the SNS topic.
	TargetArn string `pulumi:"targetArn"`
}

// TopicRuleSnsInput is an input type that accepts TopicRuleSnsArgs and TopicRuleSnsOutput values.
// You can construct a concrete instance of `TopicRuleSnsInput` via:
//
//          TopicRuleSnsArgs{...}
type TopicRuleSnsInput interface {
	pulumi.Input

	ToTopicRuleSnsOutput() TopicRuleSnsOutput
	ToTopicRuleSnsOutputWithContext(context.Context) TopicRuleSnsOutput
}

type TopicRuleSnsArgs struct {
	// The message format of the message to publish. Accepted values are "JSON" and "RAW".
	MessageFormat pulumi.StringPtrInput `pulumi:"messageFormat"`
	// The ARN of the IAM role that grants access.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The ARN of the SNS topic.
	TargetArn pulumi.StringInput `pulumi:"targetArn"`
}

func (TopicRuleSnsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleSns)(nil)).Elem()
}

func (i TopicRuleSnsArgs) ToTopicRuleSnsOutput() TopicRuleSnsOutput {
	return i.ToTopicRuleSnsOutputWithContext(context.Background())
}

func (i TopicRuleSnsArgs) ToTopicRuleSnsOutputWithContext(ctx context.Context) TopicRuleSnsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleSnsOutput)
}

func (i TopicRuleSnsArgs) ToTopicRuleSnsPtrOutput() TopicRuleSnsPtrOutput {
	return i.ToTopicRuleSnsPtrOutputWithContext(context.Background())
}

func (i TopicRuleSnsArgs) ToTopicRuleSnsPtrOutputWithContext(ctx context.Context) TopicRuleSnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleSnsOutput).ToTopicRuleSnsPtrOutputWithContext(ctx)
}

// TopicRuleSnsPtrInput is an input type that accepts TopicRuleSnsArgs, TopicRuleSnsPtr and TopicRuleSnsPtrOutput values.
// You can construct a concrete instance of `TopicRuleSnsPtrInput` via:
//
//          TopicRuleSnsArgs{...}
//
//  or:
//
//          nil
type TopicRuleSnsPtrInput interface {
	pulumi.Input

	ToTopicRuleSnsPtrOutput() TopicRuleSnsPtrOutput
	ToTopicRuleSnsPtrOutputWithContext(context.Context) TopicRuleSnsPtrOutput
}

type topicRuleSnsPtrType TopicRuleSnsArgs

func TopicRuleSnsPtr(v *TopicRuleSnsArgs) TopicRuleSnsPtrInput {
	return (*topicRuleSnsPtrType)(v)
}

func (*topicRuleSnsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleSns)(nil)).Elem()
}

func (i *topicRuleSnsPtrType) ToTopicRuleSnsPtrOutput() TopicRuleSnsPtrOutput {
	return i.ToTopicRuleSnsPtrOutputWithContext(context.Background())
}

func (i *topicRuleSnsPtrType) ToTopicRuleSnsPtrOutputWithContext(ctx context.Context) TopicRuleSnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleSnsPtrOutput)
}

type TopicRuleSnsOutput struct{ *pulumi.OutputState }

func (TopicRuleSnsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleSns)(nil)).Elem()
}

func (o TopicRuleSnsOutput) ToTopicRuleSnsOutput() TopicRuleSnsOutput {
	return o
}

func (o TopicRuleSnsOutput) ToTopicRuleSnsOutputWithContext(ctx context.Context) TopicRuleSnsOutput {
	return o
}

func (o TopicRuleSnsOutput) ToTopicRuleSnsPtrOutput() TopicRuleSnsPtrOutput {
	return o.ToTopicRuleSnsPtrOutputWithContext(context.Background())
}

func (o TopicRuleSnsOutput) ToTopicRuleSnsPtrOutputWithContext(ctx context.Context) TopicRuleSnsPtrOutput {
	return o.ApplyT(func(v TopicRuleSns) *TopicRuleSns {
		return &v
	}).(TopicRuleSnsPtrOutput)
}

// The message format of the message to publish. Accepted values are "JSON" and "RAW".
func (o TopicRuleSnsOutput) MessageFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleSns) *string { return v.MessageFormat }).(pulumi.StringPtrOutput)
}

// The ARN of the IAM role that grants access.
func (o TopicRuleSnsOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleSns) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The ARN of the SNS topic.
func (o TopicRuleSnsOutput) TargetArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleSns) string { return v.TargetArn }).(pulumi.StringOutput)
}

type TopicRuleSnsPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleSnsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleSns)(nil)).Elem()
}

func (o TopicRuleSnsPtrOutput) ToTopicRuleSnsPtrOutput() TopicRuleSnsPtrOutput {
	return o
}

func (o TopicRuleSnsPtrOutput) ToTopicRuleSnsPtrOutputWithContext(ctx context.Context) TopicRuleSnsPtrOutput {
	return o
}

func (o TopicRuleSnsPtrOutput) Elem() TopicRuleSnsOutput {
	return o.ApplyT(func(v *TopicRuleSns) TopicRuleSns { return *v }).(TopicRuleSnsOutput)
}

// The message format of the message to publish. Accepted values are "JSON" and "RAW".
func (o TopicRuleSnsPtrOutput) MessageFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleSns) *string {
		if v == nil {
			return nil
		}
		return v.MessageFormat
	}).(pulumi.StringPtrOutput)
}

// The ARN of the IAM role that grants access.
func (o TopicRuleSnsPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleSns) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// The ARN of the SNS topic.
func (o TopicRuleSnsPtrOutput) TargetArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleSns) *string {
		if v == nil {
			return nil
		}
		return &v.TargetArn
	}).(pulumi.StringPtrOutput)
}

type TopicRuleSqs struct {
	// The URL of the Amazon SQS queue.
	QueueUrl string `pulumi:"queueUrl"`
	// The ARN of the IAM role that grants access.
	RoleArn string `pulumi:"roleArn"`
	// Specifies whether to use Base64 encoding.
	UseBase64 bool `pulumi:"useBase64"`
}

// TopicRuleSqsInput is an input type that accepts TopicRuleSqsArgs and TopicRuleSqsOutput values.
// You can construct a concrete instance of `TopicRuleSqsInput` via:
//
//          TopicRuleSqsArgs{...}
type TopicRuleSqsInput interface {
	pulumi.Input

	ToTopicRuleSqsOutput() TopicRuleSqsOutput
	ToTopicRuleSqsOutputWithContext(context.Context) TopicRuleSqsOutput
}

type TopicRuleSqsArgs struct {
	// The URL of the Amazon SQS queue.
	QueueUrl pulumi.StringInput `pulumi:"queueUrl"`
	// The ARN of the IAM role that grants access.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// Specifies whether to use Base64 encoding.
	UseBase64 pulumi.BoolInput `pulumi:"useBase64"`
}

func (TopicRuleSqsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleSqs)(nil)).Elem()
}

func (i TopicRuleSqsArgs) ToTopicRuleSqsOutput() TopicRuleSqsOutput {
	return i.ToTopicRuleSqsOutputWithContext(context.Background())
}

func (i TopicRuleSqsArgs) ToTopicRuleSqsOutputWithContext(ctx context.Context) TopicRuleSqsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleSqsOutput)
}

func (i TopicRuleSqsArgs) ToTopicRuleSqsPtrOutput() TopicRuleSqsPtrOutput {
	return i.ToTopicRuleSqsPtrOutputWithContext(context.Background())
}

func (i TopicRuleSqsArgs) ToTopicRuleSqsPtrOutputWithContext(ctx context.Context) TopicRuleSqsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleSqsOutput).ToTopicRuleSqsPtrOutputWithContext(ctx)
}

// TopicRuleSqsPtrInput is an input type that accepts TopicRuleSqsArgs, TopicRuleSqsPtr and TopicRuleSqsPtrOutput values.
// You can construct a concrete instance of `TopicRuleSqsPtrInput` via:
//
//          TopicRuleSqsArgs{...}
//
//  or:
//
//          nil
type TopicRuleSqsPtrInput interface {
	pulumi.Input

	ToTopicRuleSqsPtrOutput() TopicRuleSqsPtrOutput
	ToTopicRuleSqsPtrOutputWithContext(context.Context) TopicRuleSqsPtrOutput
}

type topicRuleSqsPtrType TopicRuleSqsArgs

func TopicRuleSqsPtr(v *TopicRuleSqsArgs) TopicRuleSqsPtrInput {
	return (*topicRuleSqsPtrType)(v)
}

func (*topicRuleSqsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleSqs)(nil)).Elem()
}

func (i *topicRuleSqsPtrType) ToTopicRuleSqsPtrOutput() TopicRuleSqsPtrOutput {
	return i.ToTopicRuleSqsPtrOutputWithContext(context.Background())
}

func (i *topicRuleSqsPtrType) ToTopicRuleSqsPtrOutputWithContext(ctx context.Context) TopicRuleSqsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleSqsPtrOutput)
}

type TopicRuleSqsOutput struct{ *pulumi.OutputState }

func (TopicRuleSqsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleSqs)(nil)).Elem()
}

func (o TopicRuleSqsOutput) ToTopicRuleSqsOutput() TopicRuleSqsOutput {
	return o
}

func (o TopicRuleSqsOutput) ToTopicRuleSqsOutputWithContext(ctx context.Context) TopicRuleSqsOutput {
	return o
}

func (o TopicRuleSqsOutput) ToTopicRuleSqsPtrOutput() TopicRuleSqsPtrOutput {
	return o.ToTopicRuleSqsPtrOutputWithContext(context.Background())
}

func (o TopicRuleSqsOutput) ToTopicRuleSqsPtrOutputWithContext(ctx context.Context) TopicRuleSqsPtrOutput {
	return o.ApplyT(func(v TopicRuleSqs) *TopicRuleSqs {
		return &v
	}).(TopicRuleSqsPtrOutput)
}

// The URL of the Amazon SQS queue.
func (o TopicRuleSqsOutput) QueueUrl() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleSqs) string { return v.QueueUrl }).(pulumi.StringOutput)
}

// The ARN of the IAM role that grants access.
func (o TopicRuleSqsOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleSqs) string { return v.RoleArn }).(pulumi.StringOutput)
}

// Specifies whether to use Base64 encoding.
func (o TopicRuleSqsOutput) UseBase64() pulumi.BoolOutput {
	return o.ApplyT(func(v TopicRuleSqs) bool { return v.UseBase64 }).(pulumi.BoolOutput)
}

type TopicRuleSqsPtrOutput struct{ *pulumi.OutputState }

func (TopicRuleSqsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TopicRuleSqs)(nil)).Elem()
}

func (o TopicRuleSqsPtrOutput) ToTopicRuleSqsPtrOutput() TopicRuleSqsPtrOutput {
	return o
}

func (o TopicRuleSqsPtrOutput) ToTopicRuleSqsPtrOutputWithContext(ctx context.Context) TopicRuleSqsPtrOutput {
	return o
}

func (o TopicRuleSqsPtrOutput) Elem() TopicRuleSqsOutput {
	return o.ApplyT(func(v *TopicRuleSqs) TopicRuleSqs { return *v }).(TopicRuleSqsOutput)
}

// The URL of the Amazon SQS queue.
func (o TopicRuleSqsPtrOutput) QueueUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleSqs) *string {
		if v == nil {
			return nil
		}
		return &v.QueueUrl
	}).(pulumi.StringPtrOutput)
}

// The ARN of the IAM role that grants access.
func (o TopicRuleSqsPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TopicRuleSqs) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// Specifies whether to use Base64 encoding.
func (o TopicRuleSqsPtrOutput) UseBase64() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TopicRuleSqs) *bool {
		if v == nil {
			return nil
		}
		return &v.UseBase64
	}).(pulumi.BoolPtrOutput)
}

type TopicRuleStepFunction struct {
	// The prefix used to generate, along with a UUID, the unique state machine execution name.
	ExecutionNamePrefix *string `pulumi:"executionNamePrefix"`
	// The ARN of the IAM role that grants access to start execution of the state machine.
	RoleArn string `pulumi:"roleArn"`
	// The name of the Step Functions state machine whose execution will be started.
	StateMachineName string `pulumi:"stateMachineName"`
}

// TopicRuleStepFunctionInput is an input type that accepts TopicRuleStepFunctionArgs and TopicRuleStepFunctionOutput values.
// You can construct a concrete instance of `TopicRuleStepFunctionInput` via:
//
//          TopicRuleStepFunctionArgs{...}
type TopicRuleStepFunctionInput interface {
	pulumi.Input

	ToTopicRuleStepFunctionOutput() TopicRuleStepFunctionOutput
	ToTopicRuleStepFunctionOutputWithContext(context.Context) TopicRuleStepFunctionOutput
}

type TopicRuleStepFunctionArgs struct {
	// The prefix used to generate, along with a UUID, the unique state machine execution name.
	ExecutionNamePrefix pulumi.StringPtrInput `pulumi:"executionNamePrefix"`
	// The ARN of the IAM role that grants access to start execution of the state machine.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The name of the Step Functions state machine whose execution will be started.
	StateMachineName pulumi.StringInput `pulumi:"stateMachineName"`
}

func (TopicRuleStepFunctionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleStepFunction)(nil)).Elem()
}

func (i TopicRuleStepFunctionArgs) ToTopicRuleStepFunctionOutput() TopicRuleStepFunctionOutput {
	return i.ToTopicRuleStepFunctionOutputWithContext(context.Background())
}

func (i TopicRuleStepFunctionArgs) ToTopicRuleStepFunctionOutputWithContext(ctx context.Context) TopicRuleStepFunctionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleStepFunctionOutput)
}

// TopicRuleStepFunctionArrayInput is an input type that accepts TopicRuleStepFunctionArray and TopicRuleStepFunctionArrayOutput values.
// You can construct a concrete instance of `TopicRuleStepFunctionArrayInput` via:
//
//          TopicRuleStepFunctionArray{ TopicRuleStepFunctionArgs{...} }
type TopicRuleStepFunctionArrayInput interface {
	pulumi.Input

	ToTopicRuleStepFunctionArrayOutput() TopicRuleStepFunctionArrayOutput
	ToTopicRuleStepFunctionArrayOutputWithContext(context.Context) TopicRuleStepFunctionArrayOutput
}

type TopicRuleStepFunctionArray []TopicRuleStepFunctionInput

func (TopicRuleStepFunctionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TopicRuleStepFunction)(nil)).Elem()
}

func (i TopicRuleStepFunctionArray) ToTopicRuleStepFunctionArrayOutput() TopicRuleStepFunctionArrayOutput {
	return i.ToTopicRuleStepFunctionArrayOutputWithContext(context.Background())
}

func (i TopicRuleStepFunctionArray) ToTopicRuleStepFunctionArrayOutputWithContext(ctx context.Context) TopicRuleStepFunctionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TopicRuleStepFunctionArrayOutput)
}

type TopicRuleStepFunctionOutput struct{ *pulumi.OutputState }

func (TopicRuleStepFunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TopicRuleStepFunction)(nil)).Elem()
}

func (o TopicRuleStepFunctionOutput) ToTopicRuleStepFunctionOutput() TopicRuleStepFunctionOutput {
	return o
}

func (o TopicRuleStepFunctionOutput) ToTopicRuleStepFunctionOutputWithContext(ctx context.Context) TopicRuleStepFunctionOutput {
	return o
}

// The prefix used to generate, along with a UUID, the unique state machine execution name.
func (o TopicRuleStepFunctionOutput) ExecutionNamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TopicRuleStepFunction) *string { return v.ExecutionNamePrefix }).(pulumi.StringPtrOutput)
}

// The ARN of the IAM role that grants access to start execution of the state machine.
func (o TopicRuleStepFunctionOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleStepFunction) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The name of the Step Functions state machine whose execution will be started.
func (o TopicRuleStepFunctionOutput) StateMachineName() pulumi.StringOutput {
	return o.ApplyT(func(v TopicRuleStepFunction) string { return v.StateMachineName }).(pulumi.StringOutput)
}

type TopicRuleStepFunctionArrayOutput struct{ *pulumi.OutputState }

func (TopicRuleStepFunctionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TopicRuleStepFunction)(nil)).Elem()
}

func (o TopicRuleStepFunctionArrayOutput) ToTopicRuleStepFunctionArrayOutput() TopicRuleStepFunctionArrayOutput {
	return o
}

func (o TopicRuleStepFunctionArrayOutput) ToTopicRuleStepFunctionArrayOutputWithContext(ctx context.Context) TopicRuleStepFunctionArrayOutput {
	return o
}

func (o TopicRuleStepFunctionArrayOutput) Index(i pulumi.IntInput) TopicRuleStepFunctionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TopicRuleStepFunction {
		return vs[0].([]TopicRuleStepFunction)[vs[1].(int)]
	}).(TopicRuleStepFunctionOutput)
}

func init() {
	pulumi.RegisterOutputType(ThingTypePropertiesOutput{})
	pulumi.RegisterOutputType(ThingTypePropertiesPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleCloudwatchAlarmOutput{})
	pulumi.RegisterOutputType(TopicRuleCloudwatchAlarmPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleCloudwatchMetricOutput{})
	pulumi.RegisterOutputType(TopicRuleCloudwatchMetricPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleDynamodbOutput{})
	pulumi.RegisterOutputType(TopicRuleDynamodbPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleDynamodbv2Output{})
	pulumi.RegisterOutputType(TopicRuleDynamodbv2ArrayOutput{})
	pulumi.RegisterOutputType(TopicRuleDynamodbv2PutItemOutput{})
	pulumi.RegisterOutputType(TopicRuleDynamodbv2PutItemPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleElasticsearchOutput{})
	pulumi.RegisterOutputType(TopicRuleElasticsearchPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleFirehoseOutput{})
	pulumi.RegisterOutputType(TopicRuleFirehosePtrOutput{})
	pulumi.RegisterOutputType(TopicRuleIotAnalyticOutput{})
	pulumi.RegisterOutputType(TopicRuleIotAnalyticArrayOutput{})
	pulumi.RegisterOutputType(TopicRuleIotEventOutput{})
	pulumi.RegisterOutputType(TopicRuleIotEventArrayOutput{})
	pulumi.RegisterOutputType(TopicRuleKinesisOutput{})
	pulumi.RegisterOutputType(TopicRuleKinesisPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleLambdaOutput{})
	pulumi.RegisterOutputType(TopicRuleLambdaPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleRepublishOutput{})
	pulumi.RegisterOutputType(TopicRuleRepublishPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleS3Output{})
	pulumi.RegisterOutputType(TopicRuleS3PtrOutput{})
	pulumi.RegisterOutputType(TopicRuleSnsOutput{})
	pulumi.RegisterOutputType(TopicRuleSnsPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleSqsOutput{})
	pulumi.RegisterOutputType(TopicRuleSqsPtrOutput{})
	pulumi.RegisterOutputType(TopicRuleStepFunctionOutput{})
	pulumi.RegisterOutputType(TopicRuleStepFunctionArrayOutput{})
}
