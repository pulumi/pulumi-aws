// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iot

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ProvisioningTemplate struct {
	pulumi.CustomResourceState

	Arn                 pulumi.StringOutput                              `pulumi:"arn"`
	DefaultVersionId    pulumi.IntOutput                                 `pulumi:"defaultVersionId"`
	Description         pulumi.StringPtrOutput                           `pulumi:"description"`
	Enabled             pulumi.BoolPtrOutput                             `pulumi:"enabled"`
	Name                pulumi.StringOutput                              `pulumi:"name"`
	PreProvisioningHook ProvisioningTemplatePreProvisioningHookPtrOutput `pulumi:"preProvisioningHook"`
	ProvisioningRoleArn pulumi.StringOutput                              `pulumi:"provisioningRoleArn"`
	Tags                pulumi.StringMapOutput                           `pulumi:"tags"`
	TagsAll             pulumi.StringMapOutput                           `pulumi:"tagsAll"`
	TemplateBody        pulumi.StringOutput                              `pulumi:"templateBody"`
}

// NewProvisioningTemplate registers a new resource with the given unique name, arguments, and options.
func NewProvisioningTemplate(ctx *pulumi.Context,
	name string, args *ProvisioningTemplateArgs, opts ...pulumi.ResourceOption) (*ProvisioningTemplate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProvisioningRoleArn == nil {
		return nil, errors.New("invalid value for required argument 'ProvisioningRoleArn'")
	}
	if args.TemplateBody == nil {
		return nil, errors.New("invalid value for required argument 'TemplateBody'")
	}
	var resource ProvisioningTemplate
	err := ctx.RegisterResource("aws:iot/provisioningTemplate:ProvisioningTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProvisioningTemplate gets an existing ProvisioningTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProvisioningTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProvisioningTemplateState, opts ...pulumi.ResourceOption) (*ProvisioningTemplate, error) {
	var resource ProvisioningTemplate
	err := ctx.ReadResource("aws:iot/provisioningTemplate:ProvisioningTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProvisioningTemplate resources.
type provisioningTemplateState struct {
	Arn                 *string                                  `pulumi:"arn"`
	DefaultVersionId    *int                                     `pulumi:"defaultVersionId"`
	Description         *string                                  `pulumi:"description"`
	Enabled             *bool                                    `pulumi:"enabled"`
	Name                *string                                  `pulumi:"name"`
	PreProvisioningHook *ProvisioningTemplatePreProvisioningHook `pulumi:"preProvisioningHook"`
	ProvisioningRoleArn *string                                  `pulumi:"provisioningRoleArn"`
	Tags                map[string]string                        `pulumi:"tags"`
	TagsAll             map[string]string                        `pulumi:"tagsAll"`
	TemplateBody        *string                                  `pulumi:"templateBody"`
}

type ProvisioningTemplateState struct {
	Arn                 pulumi.StringPtrInput
	DefaultVersionId    pulumi.IntPtrInput
	Description         pulumi.StringPtrInput
	Enabled             pulumi.BoolPtrInput
	Name                pulumi.StringPtrInput
	PreProvisioningHook ProvisioningTemplatePreProvisioningHookPtrInput
	ProvisioningRoleArn pulumi.StringPtrInput
	Tags                pulumi.StringMapInput
	TagsAll             pulumi.StringMapInput
	TemplateBody        pulumi.StringPtrInput
}

func (ProvisioningTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*provisioningTemplateState)(nil)).Elem()
}

type provisioningTemplateArgs struct {
	Description         *string                                  `pulumi:"description"`
	Enabled             *bool                                    `pulumi:"enabled"`
	Name                *string                                  `pulumi:"name"`
	PreProvisioningHook *ProvisioningTemplatePreProvisioningHook `pulumi:"preProvisioningHook"`
	ProvisioningRoleArn string                                   `pulumi:"provisioningRoleArn"`
	Tags                map[string]string                        `pulumi:"tags"`
	TemplateBody        string                                   `pulumi:"templateBody"`
}

// The set of arguments for constructing a ProvisioningTemplate resource.
type ProvisioningTemplateArgs struct {
	Description         pulumi.StringPtrInput
	Enabled             pulumi.BoolPtrInput
	Name                pulumi.StringPtrInput
	PreProvisioningHook ProvisioningTemplatePreProvisioningHookPtrInput
	ProvisioningRoleArn pulumi.StringInput
	Tags                pulumi.StringMapInput
	TemplateBody        pulumi.StringInput
}

func (ProvisioningTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*provisioningTemplateArgs)(nil)).Elem()
}

type ProvisioningTemplateInput interface {
	pulumi.Input

	ToProvisioningTemplateOutput() ProvisioningTemplateOutput
	ToProvisioningTemplateOutputWithContext(ctx context.Context) ProvisioningTemplateOutput
}

func (*ProvisioningTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((**ProvisioningTemplate)(nil)).Elem()
}

func (i *ProvisioningTemplate) ToProvisioningTemplateOutput() ProvisioningTemplateOutput {
	return i.ToProvisioningTemplateOutputWithContext(context.Background())
}

func (i *ProvisioningTemplate) ToProvisioningTemplateOutputWithContext(ctx context.Context) ProvisioningTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisioningTemplateOutput)
}

// ProvisioningTemplateArrayInput is an input type that accepts ProvisioningTemplateArray and ProvisioningTemplateArrayOutput values.
// You can construct a concrete instance of `ProvisioningTemplateArrayInput` via:
//
//	ProvisioningTemplateArray{ ProvisioningTemplateArgs{...} }
type ProvisioningTemplateArrayInput interface {
	pulumi.Input

	ToProvisioningTemplateArrayOutput() ProvisioningTemplateArrayOutput
	ToProvisioningTemplateArrayOutputWithContext(context.Context) ProvisioningTemplateArrayOutput
}

type ProvisioningTemplateArray []ProvisioningTemplateInput

func (ProvisioningTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProvisioningTemplate)(nil)).Elem()
}

func (i ProvisioningTemplateArray) ToProvisioningTemplateArrayOutput() ProvisioningTemplateArrayOutput {
	return i.ToProvisioningTemplateArrayOutputWithContext(context.Background())
}

func (i ProvisioningTemplateArray) ToProvisioningTemplateArrayOutputWithContext(ctx context.Context) ProvisioningTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisioningTemplateArrayOutput)
}

// ProvisioningTemplateMapInput is an input type that accepts ProvisioningTemplateMap and ProvisioningTemplateMapOutput values.
// You can construct a concrete instance of `ProvisioningTemplateMapInput` via:
//
//	ProvisioningTemplateMap{ "key": ProvisioningTemplateArgs{...} }
type ProvisioningTemplateMapInput interface {
	pulumi.Input

	ToProvisioningTemplateMapOutput() ProvisioningTemplateMapOutput
	ToProvisioningTemplateMapOutputWithContext(context.Context) ProvisioningTemplateMapOutput
}

type ProvisioningTemplateMap map[string]ProvisioningTemplateInput

func (ProvisioningTemplateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProvisioningTemplate)(nil)).Elem()
}

func (i ProvisioningTemplateMap) ToProvisioningTemplateMapOutput() ProvisioningTemplateMapOutput {
	return i.ToProvisioningTemplateMapOutputWithContext(context.Background())
}

func (i ProvisioningTemplateMap) ToProvisioningTemplateMapOutputWithContext(ctx context.Context) ProvisioningTemplateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisioningTemplateMapOutput)
}

type ProvisioningTemplateOutput struct{ *pulumi.OutputState }

func (ProvisioningTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProvisioningTemplate)(nil)).Elem()
}

func (o ProvisioningTemplateOutput) ToProvisioningTemplateOutput() ProvisioningTemplateOutput {
	return o
}

func (o ProvisioningTemplateOutput) ToProvisioningTemplateOutputWithContext(ctx context.Context) ProvisioningTemplateOutput {
	return o
}

func (o ProvisioningTemplateOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *ProvisioningTemplate) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o ProvisioningTemplateOutput) DefaultVersionId() pulumi.IntOutput {
	return o.ApplyT(func(v *ProvisioningTemplate) pulumi.IntOutput { return v.DefaultVersionId }).(pulumi.IntOutput)
}

func (o ProvisioningTemplateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProvisioningTemplate) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ProvisioningTemplateOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProvisioningTemplate) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o ProvisioningTemplateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ProvisioningTemplate) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ProvisioningTemplateOutput) PreProvisioningHook() ProvisioningTemplatePreProvisioningHookPtrOutput {
	return o.ApplyT(func(v *ProvisioningTemplate) ProvisioningTemplatePreProvisioningHookPtrOutput {
		return v.PreProvisioningHook
	}).(ProvisioningTemplatePreProvisioningHookPtrOutput)
}

func (o ProvisioningTemplateOutput) ProvisioningRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v *ProvisioningTemplate) pulumi.StringOutput { return v.ProvisioningRoleArn }).(pulumi.StringOutput)
}

func (o ProvisioningTemplateOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ProvisioningTemplate) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o ProvisioningTemplateOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ProvisioningTemplate) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o ProvisioningTemplateOutput) TemplateBody() pulumi.StringOutput {
	return o.ApplyT(func(v *ProvisioningTemplate) pulumi.StringOutput { return v.TemplateBody }).(pulumi.StringOutput)
}

type ProvisioningTemplateArrayOutput struct{ *pulumi.OutputState }

func (ProvisioningTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProvisioningTemplate)(nil)).Elem()
}

func (o ProvisioningTemplateArrayOutput) ToProvisioningTemplateArrayOutput() ProvisioningTemplateArrayOutput {
	return o
}

func (o ProvisioningTemplateArrayOutput) ToProvisioningTemplateArrayOutputWithContext(ctx context.Context) ProvisioningTemplateArrayOutput {
	return o
}

func (o ProvisioningTemplateArrayOutput) Index(i pulumi.IntInput) ProvisioningTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ProvisioningTemplate {
		return vs[0].([]*ProvisioningTemplate)[vs[1].(int)]
	}).(ProvisioningTemplateOutput)
}

type ProvisioningTemplateMapOutput struct{ *pulumi.OutputState }

func (ProvisioningTemplateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProvisioningTemplate)(nil)).Elem()
}

func (o ProvisioningTemplateMapOutput) ToProvisioningTemplateMapOutput() ProvisioningTemplateMapOutput {
	return o
}

func (o ProvisioningTemplateMapOutput) ToProvisioningTemplateMapOutputWithContext(ctx context.Context) ProvisioningTemplateMapOutput {
	return o
}

func (o ProvisioningTemplateMapOutput) MapIndex(k pulumi.StringInput) ProvisioningTemplateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ProvisioningTemplate {
		return vs[0].(map[string]*ProvisioningTemplate)[vs[1].(string)]
	}).(ProvisioningTemplateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProvisioningTemplateInput)(nil)).Elem(), &ProvisioningTemplate{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProvisioningTemplateArrayInput)(nil)).Elem(), ProvisioningTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProvisioningTemplateMapInput)(nil)).Elem(), ProvisioningTemplateMap{})
	pulumi.RegisterOutputType(ProvisioningTemplateOutput{})
	pulumi.RegisterOutputType(ProvisioningTemplateArrayOutput{})
	pulumi.RegisterOutputType(ProvisioningTemplateMapOutput{})
}
