// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iot

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an IoT fleet provisioning template. For more info, see the AWS documentation on [fleet provisioning](https://docs.aws.amazon.com/iot/latest/developerguide/provision-wo-cert.html).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"encoding/json"
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/iam"
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/iot"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			iotAssumeRolePolicy, err := iam.GetPolicyDocument(ctx, &iam.GetPolicyDocumentArgs{
//				Statements: []iam.GetPolicyDocumentStatement{
//					{
//						Actions: []string{
//							"sts:AssumeRole",
//						},
//						Principals: []iam.GetPolicyDocumentStatementPrincipal{
//							{
//								Type: "Service",
//								Identifiers: []string{
//									"iot.amazonaws.com",
//								},
//							},
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			iotFleetProvisioning, err := iam.NewRole(ctx, "iotFleetProvisioning", &iam.RoleArgs{
//				Path:             pulumi.String("/service-role/"),
//				AssumeRolePolicy: *pulumi.String(iotAssumeRolePolicy.Json),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = iam.NewRolePolicyAttachment(ctx, "iotFleetProvisioningRegistration", &iam.RolePolicyAttachmentArgs{
//				Role:      iotFleetProvisioning.Name,
//				PolicyArn: pulumi.String("arn:aws:iam::aws:policy/service-role/AWSIoTThingsRegistration"),
//			})
//			if err != nil {
//				return err
//			}
//			devicePolicyPolicyDocument, err := iam.GetPolicyDocument(ctx, &iam.GetPolicyDocumentArgs{
//				Statements: []iam.GetPolicyDocumentStatement{
//					{
//						Actions: []string{
//							"iot:Subscribe",
//						},
//						Resources: []string{
//							"*",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			devicePolicyPolicy, err := iot.NewPolicy(ctx, "devicePolicyPolicy", &iot.PolicyArgs{
//				Policy: *pulumi.String(devicePolicyPolicyDocument.Json),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = iot.NewProvisioningTemplate(ctx, "fleet", &iot.ProvisioningTemplateArgs{
//				Description:         pulumi.String("My provisioning template"),
//				ProvisioningRoleArn: iotFleetProvisioning.Arn,
//				Enabled:             pulumi.Bool(true),
//				TemplateBody: devicePolicyPolicy.Name.ApplyT(func(name string) (pulumi.String, error) {
//					var _zero pulumi.String
//					tmpJSON0, err := json.Marshal(map[string]interface{}{
//						"Parameters": map[string]interface{}{
//							"SerialNumber": map[string]interface{}{
//								"Type": "String",
//							},
//						},
//						"Resources": map[string]interface{}{
//							"certificate": map[string]interface{}{
//								"Properties": map[string]interface{}{
//									"CertificateId": map[string]interface{}{
//										"Ref": "AWS::IoT::Certificate::Id",
//									},
//									"Status": "Active",
//								},
//								"Type": "AWS::IoT::Certificate",
//							},
//							"policy": map[string]interface{}{
//								"Properties": map[string]interface{}{
//									"PolicyName": name,
//								},
//								"Type": "AWS::IoT::Policy",
//							},
//						},
//					})
//					if err != nil {
//						return _zero, err
//					}
//					json0 := string(tmpJSON0)
//					return pulumi.String(json0), nil
//				}).(pulumi.StringOutput),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import IoT fleet provisioning templates using the `name`. For example:
//
// ```sh
//
//	$ pulumi import aws:iot/provisioningTemplate:ProvisioningTemplate fleet FleetProvisioningTemplate
//
// ```
type ProvisioningTemplate struct {
	pulumi.CustomResourceState

	// The ARN that identifies the provisioning template.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// The default version of the fleet provisioning template.
	DefaultVersionId pulumi.IntOutput `pulumi:"defaultVersionId"`
	// The description of the fleet provisioning template.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// True to enable the fleet provisioning template, otherwise false.
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// The name of the fleet provisioning template.
	Name pulumi.StringOutput `pulumi:"name"`
	// Creates a pre-provisioning hook template. Details below.
	PreProvisioningHook ProvisioningTemplatePreProvisioningHookPtrOutput `pulumi:"preProvisioningHook"`
	// The role ARN for the role associated with the fleet provisioning template. This IoT role grants permission to provision a device.
	ProvisioningRoleArn pulumi.StringOutput `pulumi:"provisioningRoleArn"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapOutput `pulumi:"tagsAll"`
	// The JSON formatted contents of the fleet provisioning template.
	TemplateBody pulumi.StringOutput `pulumi:"templateBody"`
	// The type you define in a provisioning template.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewProvisioningTemplate registers a new resource with the given unique name, arguments, and options.
func NewProvisioningTemplate(ctx *pulumi.Context,
	name string, args *ProvisioningTemplateArgs, opts ...pulumi.ResourceOption) (*ProvisioningTemplate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProvisioningRoleArn == nil {
		return nil, errors.New("invalid value for required argument 'ProvisioningRoleArn'")
	}
	if args.TemplateBody == nil {
		return nil, errors.New("invalid value for required argument 'TemplateBody'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"tagsAll",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ProvisioningTemplate
	err := ctx.RegisterResource("aws:iot/provisioningTemplate:ProvisioningTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProvisioningTemplate gets an existing ProvisioningTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProvisioningTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProvisioningTemplateState, opts ...pulumi.ResourceOption) (*ProvisioningTemplate, error) {
	var resource ProvisioningTemplate
	err := ctx.ReadResource("aws:iot/provisioningTemplate:ProvisioningTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProvisioningTemplate resources.
type provisioningTemplateState struct {
	// The ARN that identifies the provisioning template.
	Arn *string `pulumi:"arn"`
	// The default version of the fleet provisioning template.
	DefaultVersionId *int `pulumi:"defaultVersionId"`
	// The description of the fleet provisioning template.
	Description *string `pulumi:"description"`
	// True to enable the fleet provisioning template, otherwise false.
	Enabled *bool `pulumi:"enabled"`
	// The name of the fleet provisioning template.
	Name *string `pulumi:"name"`
	// Creates a pre-provisioning hook template. Details below.
	PreProvisioningHook *ProvisioningTemplatePreProvisioningHook `pulumi:"preProvisioningHook"`
	// The role ARN for the role associated with the fleet provisioning template. This IoT role grants permission to provision a device.
	ProvisioningRoleArn *string `pulumi:"provisioningRoleArn"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The JSON formatted contents of the fleet provisioning template.
	TemplateBody *string `pulumi:"templateBody"`
	// The type you define in a provisioning template.
	Type *string `pulumi:"type"`
}

type ProvisioningTemplateState struct {
	// The ARN that identifies the provisioning template.
	Arn pulumi.StringPtrInput
	// The default version of the fleet provisioning template.
	DefaultVersionId pulumi.IntPtrInput
	// The description of the fleet provisioning template.
	Description pulumi.StringPtrInput
	// True to enable the fleet provisioning template, otherwise false.
	Enabled pulumi.BoolPtrInput
	// The name of the fleet provisioning template.
	Name pulumi.StringPtrInput
	// Creates a pre-provisioning hook template. Details below.
	PreProvisioningHook ProvisioningTemplatePreProvisioningHookPtrInput
	// The role ARN for the role associated with the fleet provisioning template. This IoT role grants permission to provision a device.
	ProvisioningRoleArn pulumi.StringPtrInput
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapInput
	// The JSON formatted contents of the fleet provisioning template.
	TemplateBody pulumi.StringPtrInput
	// The type you define in a provisioning template.
	Type pulumi.StringPtrInput
}

func (ProvisioningTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*provisioningTemplateState)(nil)).Elem()
}

type provisioningTemplateArgs struct {
	// The description of the fleet provisioning template.
	Description *string `pulumi:"description"`
	// True to enable the fleet provisioning template, otherwise false.
	Enabled *bool `pulumi:"enabled"`
	// The name of the fleet provisioning template.
	Name *string `pulumi:"name"`
	// Creates a pre-provisioning hook template. Details below.
	PreProvisioningHook *ProvisioningTemplatePreProvisioningHook `pulumi:"preProvisioningHook"`
	// The role ARN for the role associated with the fleet provisioning template. This IoT role grants permission to provision a device.
	ProvisioningRoleArn string `pulumi:"provisioningRoleArn"`
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// The JSON formatted contents of the fleet provisioning template.
	TemplateBody string `pulumi:"templateBody"`
	// The type you define in a provisioning template.
	Type *string `pulumi:"type"`
}

// The set of arguments for constructing a ProvisioningTemplate resource.
type ProvisioningTemplateArgs struct {
	// The description of the fleet provisioning template.
	Description pulumi.StringPtrInput
	// True to enable the fleet provisioning template, otherwise false.
	Enabled pulumi.BoolPtrInput
	// The name of the fleet provisioning template.
	Name pulumi.StringPtrInput
	// Creates a pre-provisioning hook template. Details below.
	PreProvisioningHook ProvisioningTemplatePreProvisioningHookPtrInput
	// The role ARN for the role associated with the fleet provisioning template. This IoT role grants permission to provision a device.
	ProvisioningRoleArn pulumi.StringInput
	// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// The JSON formatted contents of the fleet provisioning template.
	TemplateBody pulumi.StringInput
	// The type you define in a provisioning template.
	Type pulumi.StringPtrInput
}

func (ProvisioningTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*provisioningTemplateArgs)(nil)).Elem()
}

type ProvisioningTemplateInput interface {
	pulumi.Input

	ToProvisioningTemplateOutput() ProvisioningTemplateOutput
	ToProvisioningTemplateOutputWithContext(ctx context.Context) ProvisioningTemplateOutput
}

func (*ProvisioningTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((**ProvisioningTemplate)(nil)).Elem()
}

func (i *ProvisioningTemplate) ToProvisioningTemplateOutput() ProvisioningTemplateOutput {
	return i.ToProvisioningTemplateOutputWithContext(context.Background())
}

func (i *ProvisioningTemplate) ToProvisioningTemplateOutputWithContext(ctx context.Context) ProvisioningTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisioningTemplateOutput)
}

// ProvisioningTemplateArrayInput is an input type that accepts ProvisioningTemplateArray and ProvisioningTemplateArrayOutput values.
// You can construct a concrete instance of `ProvisioningTemplateArrayInput` via:
//
//	ProvisioningTemplateArray{ ProvisioningTemplateArgs{...} }
type ProvisioningTemplateArrayInput interface {
	pulumi.Input

	ToProvisioningTemplateArrayOutput() ProvisioningTemplateArrayOutput
	ToProvisioningTemplateArrayOutputWithContext(context.Context) ProvisioningTemplateArrayOutput
}

type ProvisioningTemplateArray []ProvisioningTemplateInput

func (ProvisioningTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProvisioningTemplate)(nil)).Elem()
}

func (i ProvisioningTemplateArray) ToProvisioningTemplateArrayOutput() ProvisioningTemplateArrayOutput {
	return i.ToProvisioningTemplateArrayOutputWithContext(context.Background())
}

func (i ProvisioningTemplateArray) ToProvisioningTemplateArrayOutputWithContext(ctx context.Context) ProvisioningTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisioningTemplateArrayOutput)
}

// ProvisioningTemplateMapInput is an input type that accepts ProvisioningTemplateMap and ProvisioningTemplateMapOutput values.
// You can construct a concrete instance of `ProvisioningTemplateMapInput` via:
//
//	ProvisioningTemplateMap{ "key": ProvisioningTemplateArgs{...} }
type ProvisioningTemplateMapInput interface {
	pulumi.Input

	ToProvisioningTemplateMapOutput() ProvisioningTemplateMapOutput
	ToProvisioningTemplateMapOutputWithContext(context.Context) ProvisioningTemplateMapOutput
}

type ProvisioningTemplateMap map[string]ProvisioningTemplateInput

func (ProvisioningTemplateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProvisioningTemplate)(nil)).Elem()
}

func (i ProvisioningTemplateMap) ToProvisioningTemplateMapOutput() ProvisioningTemplateMapOutput {
	return i.ToProvisioningTemplateMapOutputWithContext(context.Background())
}

func (i ProvisioningTemplateMap) ToProvisioningTemplateMapOutputWithContext(ctx context.Context) ProvisioningTemplateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProvisioningTemplateMapOutput)
}

type ProvisioningTemplateOutput struct{ *pulumi.OutputState }

func (ProvisioningTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProvisioningTemplate)(nil)).Elem()
}

func (o ProvisioningTemplateOutput) ToProvisioningTemplateOutput() ProvisioningTemplateOutput {
	return o
}

func (o ProvisioningTemplateOutput) ToProvisioningTemplateOutputWithContext(ctx context.Context) ProvisioningTemplateOutput {
	return o
}

// The ARN that identifies the provisioning template.
func (o ProvisioningTemplateOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *ProvisioningTemplate) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// The default version of the fleet provisioning template.
func (o ProvisioningTemplateOutput) DefaultVersionId() pulumi.IntOutput {
	return o.ApplyT(func(v *ProvisioningTemplate) pulumi.IntOutput { return v.DefaultVersionId }).(pulumi.IntOutput)
}

// The description of the fleet provisioning template.
func (o ProvisioningTemplateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProvisioningTemplate) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// True to enable the fleet provisioning template, otherwise false.
func (o ProvisioningTemplateOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProvisioningTemplate) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The name of the fleet provisioning template.
func (o ProvisioningTemplateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ProvisioningTemplate) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Creates a pre-provisioning hook template. Details below.
func (o ProvisioningTemplateOutput) PreProvisioningHook() ProvisioningTemplatePreProvisioningHookPtrOutput {
	return o.ApplyT(func(v *ProvisioningTemplate) ProvisioningTemplatePreProvisioningHookPtrOutput {
		return v.PreProvisioningHook
	}).(ProvisioningTemplatePreProvisioningHookPtrOutput)
}

// The role ARN for the role associated with the fleet provisioning template. This IoT role grants permission to provision a device.
func (o ProvisioningTemplateOutput) ProvisioningRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v *ProvisioningTemplate) pulumi.StringOutput { return v.ProvisioningRoleArn }).(pulumi.StringOutput)
}

// A map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o ProvisioningTemplateOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ProvisioningTemplate) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
//
// Deprecated: Please use `tags` instead.
func (o ProvisioningTemplateOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ProvisioningTemplate) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

// The JSON formatted contents of the fleet provisioning template.
func (o ProvisioningTemplateOutput) TemplateBody() pulumi.StringOutput {
	return o.ApplyT(func(v *ProvisioningTemplate) pulumi.StringOutput { return v.TemplateBody }).(pulumi.StringOutput)
}

// The type you define in a provisioning template.
func (o ProvisioningTemplateOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ProvisioningTemplate) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type ProvisioningTemplateArrayOutput struct{ *pulumi.OutputState }

func (ProvisioningTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProvisioningTemplate)(nil)).Elem()
}

func (o ProvisioningTemplateArrayOutput) ToProvisioningTemplateArrayOutput() ProvisioningTemplateArrayOutput {
	return o
}

func (o ProvisioningTemplateArrayOutput) ToProvisioningTemplateArrayOutputWithContext(ctx context.Context) ProvisioningTemplateArrayOutput {
	return o
}

func (o ProvisioningTemplateArrayOutput) Index(i pulumi.IntInput) ProvisioningTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ProvisioningTemplate {
		return vs[0].([]*ProvisioningTemplate)[vs[1].(int)]
	}).(ProvisioningTemplateOutput)
}

type ProvisioningTemplateMapOutput struct{ *pulumi.OutputState }

func (ProvisioningTemplateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProvisioningTemplate)(nil)).Elem()
}

func (o ProvisioningTemplateMapOutput) ToProvisioningTemplateMapOutput() ProvisioningTemplateMapOutput {
	return o
}

func (o ProvisioningTemplateMapOutput) ToProvisioningTemplateMapOutputWithContext(ctx context.Context) ProvisioningTemplateMapOutput {
	return o
}

func (o ProvisioningTemplateMapOutput) MapIndex(k pulumi.StringInput) ProvisioningTemplateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ProvisioningTemplate {
		return vs[0].(map[string]*ProvisioningTemplate)[vs[1].(string)]
	}).(ProvisioningTemplateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProvisioningTemplateInput)(nil)).Elem(), &ProvisioningTemplate{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProvisioningTemplateArrayInput)(nil)).Elem(), ProvisioningTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProvisioningTemplateMapInput)(nil)).Elem(), ProvisioningTemplateMap{})
	pulumi.RegisterOutputType(ProvisioningTemplateOutput{})
	pulumi.RegisterOutputType(ProvisioningTemplateArrayOutput{})
	pulumi.RegisterOutputType(ProvisioningTemplateMapOutput{})
}
