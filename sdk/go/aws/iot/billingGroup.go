// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iot

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an AWS IoT Billing Group.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/iot"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iot.NewBillingGroup(ctx, "example", &iot.BillingGroupArgs{
//				Properties: &iot.BillingGroupPropertiesArgs{
//					Description: pulumi.String("This is my billing group"),
//				},
//				Tags: pulumi.StringMap{
//					"terraform": pulumi.String("true"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import IoT Billing Groups using the name. For example:
//
// ```sh
//
//	$ pulumi import aws:iot/billingGroup:BillingGroup example example
//
// ```
type BillingGroup struct {
	pulumi.CustomResourceState

	// The ARN of the Billing Group.
	Arn       pulumi.StringOutput             `pulumi:"arn"`
	Metadatas BillingGroupMetadataArrayOutput `pulumi:"metadatas"`
	// The name of the Billing Group.
	Name pulumi.StringOutput `pulumi:"name"`
	// The Billing Group properties. Defined below.
	Properties BillingGroupPropertiesPtrOutput `pulumi:"properties"`
	// Key-value mapping of resource tags
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapOutput `pulumi:"tagsAll"`
	// The current version of the Billing Group record in the registry.
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewBillingGroup registers a new resource with the given unique name, arguments, and options.
func NewBillingGroup(ctx *pulumi.Context,
	name string, args *BillingGroupArgs, opts ...pulumi.ResourceOption) (*BillingGroup, error) {
	if args == nil {
		args = &BillingGroupArgs{}
	}

	secrets := pulumi.AdditionalSecretOutputs([]string{
		"tagsAll",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BillingGroup
	err := ctx.RegisterResource("aws:iot/billingGroup:BillingGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBillingGroup gets an existing BillingGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBillingGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BillingGroupState, opts ...pulumi.ResourceOption) (*BillingGroup, error) {
	var resource BillingGroup
	err := ctx.ReadResource("aws:iot/billingGroup:BillingGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BillingGroup resources.
type billingGroupState struct {
	// The ARN of the Billing Group.
	Arn       *string                `pulumi:"arn"`
	Metadatas []BillingGroupMetadata `pulumi:"metadatas"`
	// The name of the Billing Group.
	Name *string `pulumi:"name"`
	// The Billing Group properties. Defined below.
	Properties *BillingGroupProperties `pulumi:"properties"`
	// Key-value mapping of resource tags
	Tags map[string]string `pulumi:"tags"`
	// Deprecated: Please use `tags` instead.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The current version of the Billing Group record in the registry.
	Version *int `pulumi:"version"`
}

type BillingGroupState struct {
	// The ARN of the Billing Group.
	Arn       pulumi.StringPtrInput
	Metadatas BillingGroupMetadataArrayInput
	// The name of the Billing Group.
	Name pulumi.StringPtrInput
	// The Billing Group properties. Defined below.
	Properties BillingGroupPropertiesPtrInput
	// Key-value mapping of resource tags
	Tags pulumi.StringMapInput
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapInput
	// The current version of the Billing Group record in the registry.
	Version pulumi.IntPtrInput
}

func (BillingGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*billingGroupState)(nil)).Elem()
}

type billingGroupArgs struct {
	// The name of the Billing Group.
	Name *string `pulumi:"name"`
	// The Billing Group properties. Defined below.
	Properties *BillingGroupProperties `pulumi:"properties"`
	// Key-value mapping of resource tags
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a BillingGroup resource.
type BillingGroupArgs struct {
	// The name of the Billing Group.
	Name pulumi.StringPtrInput
	// The Billing Group properties. Defined below.
	Properties BillingGroupPropertiesPtrInput
	// Key-value mapping of resource tags
	Tags pulumi.StringMapInput
}

func (BillingGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*billingGroupArgs)(nil)).Elem()
}

type BillingGroupInput interface {
	pulumi.Input

	ToBillingGroupOutput() BillingGroupOutput
	ToBillingGroupOutputWithContext(ctx context.Context) BillingGroupOutput
}

func (*BillingGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**BillingGroup)(nil)).Elem()
}

func (i *BillingGroup) ToBillingGroupOutput() BillingGroupOutput {
	return i.ToBillingGroupOutputWithContext(context.Background())
}

func (i *BillingGroup) ToBillingGroupOutputWithContext(ctx context.Context) BillingGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BillingGroupOutput)
}

// BillingGroupArrayInput is an input type that accepts BillingGroupArray and BillingGroupArrayOutput values.
// You can construct a concrete instance of `BillingGroupArrayInput` via:
//
//	BillingGroupArray{ BillingGroupArgs{...} }
type BillingGroupArrayInput interface {
	pulumi.Input

	ToBillingGroupArrayOutput() BillingGroupArrayOutput
	ToBillingGroupArrayOutputWithContext(context.Context) BillingGroupArrayOutput
}

type BillingGroupArray []BillingGroupInput

func (BillingGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BillingGroup)(nil)).Elem()
}

func (i BillingGroupArray) ToBillingGroupArrayOutput() BillingGroupArrayOutput {
	return i.ToBillingGroupArrayOutputWithContext(context.Background())
}

func (i BillingGroupArray) ToBillingGroupArrayOutputWithContext(ctx context.Context) BillingGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BillingGroupArrayOutput)
}

// BillingGroupMapInput is an input type that accepts BillingGroupMap and BillingGroupMapOutput values.
// You can construct a concrete instance of `BillingGroupMapInput` via:
//
//	BillingGroupMap{ "key": BillingGroupArgs{...} }
type BillingGroupMapInput interface {
	pulumi.Input

	ToBillingGroupMapOutput() BillingGroupMapOutput
	ToBillingGroupMapOutputWithContext(context.Context) BillingGroupMapOutput
}

type BillingGroupMap map[string]BillingGroupInput

func (BillingGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BillingGroup)(nil)).Elem()
}

func (i BillingGroupMap) ToBillingGroupMapOutput() BillingGroupMapOutput {
	return i.ToBillingGroupMapOutputWithContext(context.Background())
}

func (i BillingGroupMap) ToBillingGroupMapOutputWithContext(ctx context.Context) BillingGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BillingGroupMapOutput)
}

type BillingGroupOutput struct{ *pulumi.OutputState }

func (BillingGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BillingGroup)(nil)).Elem()
}

func (o BillingGroupOutput) ToBillingGroupOutput() BillingGroupOutput {
	return o
}

func (o BillingGroupOutput) ToBillingGroupOutputWithContext(ctx context.Context) BillingGroupOutput {
	return o
}

// The ARN of the Billing Group.
func (o BillingGroupOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *BillingGroup) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o BillingGroupOutput) Metadatas() BillingGroupMetadataArrayOutput {
	return o.ApplyT(func(v *BillingGroup) BillingGroupMetadataArrayOutput { return v.Metadatas }).(BillingGroupMetadataArrayOutput)
}

// The name of the Billing Group.
func (o BillingGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *BillingGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The Billing Group properties. Defined below.
func (o BillingGroupOutput) Properties() BillingGroupPropertiesPtrOutput {
	return o.ApplyT(func(v *BillingGroup) BillingGroupPropertiesPtrOutput { return v.Properties }).(BillingGroupPropertiesPtrOutput)
}

// Key-value mapping of resource tags
func (o BillingGroupOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BillingGroup) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Deprecated: Please use `tags` instead.
func (o BillingGroupOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BillingGroup) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

// The current version of the Billing Group record in the registry.
func (o BillingGroupOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *BillingGroup) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type BillingGroupArrayOutput struct{ *pulumi.OutputState }

func (BillingGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BillingGroup)(nil)).Elem()
}

func (o BillingGroupArrayOutput) ToBillingGroupArrayOutput() BillingGroupArrayOutput {
	return o
}

func (o BillingGroupArrayOutput) ToBillingGroupArrayOutputWithContext(ctx context.Context) BillingGroupArrayOutput {
	return o
}

func (o BillingGroupArrayOutput) Index(i pulumi.IntInput) BillingGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BillingGroup {
		return vs[0].([]*BillingGroup)[vs[1].(int)]
	}).(BillingGroupOutput)
}

type BillingGroupMapOutput struct{ *pulumi.OutputState }

func (BillingGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BillingGroup)(nil)).Elem()
}

func (o BillingGroupMapOutput) ToBillingGroupMapOutput() BillingGroupMapOutput {
	return o
}

func (o BillingGroupMapOutput) ToBillingGroupMapOutputWithContext(ctx context.Context) BillingGroupMapOutput {
	return o
}

func (o BillingGroupMapOutput) MapIndex(k pulumi.StringInput) BillingGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BillingGroup {
		return vs[0].(map[string]*BillingGroup)[vs[1].(string)]
	}).(BillingGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BillingGroupInput)(nil)).Elem(), &BillingGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*BillingGroupArrayInput)(nil)).Elem(), BillingGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BillingGroupMapInput)(nil)).Elem(), BillingGroupMap{})
	pulumi.RegisterOutputType(BillingGroupOutput{})
	pulumi.RegisterOutputType(BillingGroupArrayOutput{})
	pulumi.RegisterOutputType(BillingGroupMapOutput{})
}
