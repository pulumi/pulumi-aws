// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package iot

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an IoT role alias.
type RoleAlias struct {
	s *pulumi.ResourceState
}

// NewRoleAlias registers a new resource with the given unique name, arguments, and options.
func NewRoleAlias(ctx *pulumi.Context,
	name string, args *RoleAliasArgs, opts ...pulumi.ResourceOpt) (*RoleAlias, error) {
	if args == nil || args.Alias == nil {
		return nil, errors.New("missing required argument 'Alias'")
	}
	if args == nil || args.RoleArn == nil {
		return nil, errors.New("missing required argument 'RoleArn'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["alias"] = nil
		inputs["credentialDuration"] = nil
		inputs["roleArn"] = nil
	} else {
		inputs["alias"] = args.Alias
		inputs["credentialDuration"] = args.CredentialDuration
		inputs["roleArn"] = args.RoleArn
	}
	s, err := ctx.RegisterResource("aws:iot/roleAlias:RoleAlias", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &RoleAlias{s: s}, nil
}

// GetRoleAlias gets an existing RoleAlias resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRoleAlias(ctx *pulumi.Context,
	name string, id pulumi.ID, state *RoleAliasState, opts ...pulumi.ResourceOpt) (*RoleAlias, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["alias"] = state.Alias
		inputs["credentialDuration"] = state.CredentialDuration
		inputs["roleArn"] = state.RoleArn
	}
	s, err := ctx.ReadResource("aws:iot/roleAlias:RoleAlias", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &RoleAlias{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *RoleAlias) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *RoleAlias) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// The name of the role alias.
func (r *RoleAlias) Alias() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["alias"])
}

// The duration of the credential, in seconds. If you do not specify a value for this setting, the default maximum of one hour is applied. This setting can have a value from 900 seconds (15 minutes) to 3600 seconds (60 minutes).
func (r *RoleAlias) CredentialDuration() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["credentialDuration"])
}

// The identity of the role to which the alias refers.
func (r *RoleAlias) RoleArn() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["roleArn"])
}

// Input properties used for looking up and filtering RoleAlias resources.
type RoleAliasState struct {
	// The name of the role alias.
	Alias interface{}
	// The duration of the credential, in seconds. If you do not specify a value for this setting, the default maximum of one hour is applied. This setting can have a value from 900 seconds (15 minutes) to 3600 seconds (60 minutes).
	CredentialDuration interface{}
	// The identity of the role to which the alias refers.
	RoleArn interface{}
}

// The set of arguments for constructing a RoleAlias resource.
type RoleAliasArgs struct {
	// The name of the role alias.
	Alias interface{}
	// The duration of the credential, in seconds. If you do not specify a value for this setting, the default maximum of one hour is applied. This setting can have a value from 900 seconds (15 minutes) to 3600 seconds (60 minutes).
	CredentialDuration interface{}
	// The identity of the role to which the alias refers.
	RoleArn interface{}
}
