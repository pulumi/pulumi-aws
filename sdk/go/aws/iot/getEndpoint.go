// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iot

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Returns a unique endpoint specific to the AWS account making the call.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/iot"
//	"github.com/pulumi/pulumi-kubernetes/sdk/v3/go/kubernetes"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := iot.GetEndpoint(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			_, err = kubernetes.NewKubernetes_pod(ctx, "agent", &kubernetes.Kubernetes_podArgs{
//				Metadata: []map[string]interface{}{
//					map[string]interface{}{
//						"name": "my-device",
//					},
//				},
//				Spec: []map[string]interface{}{
//					map[string]interface{}{
//						"container": []map[string]interface{}{
//							map[string]interface{}{
//								"image": "gcr.io/my-project/image-name",
//								"name":  "image-name",
//								"env": []map[string]interface{}{
//									map[string]interface{}{
//										"name":  "IOT_ENDPOINT",
//										"value": example.EndpointAddress,
//									},
//								},
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetEndpoint(ctx *pulumi.Context, args *GetEndpointArgs, opts ...pulumi.InvokeOption) (*GetEndpointResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetEndpointResult
	err := ctx.Invoke("aws:iot/getEndpoint:getEndpoint", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEndpoint.
type GetEndpointArgs struct {
	// Endpoint type. Valid values: `iot:CredentialProvider`, `iot:Data`, `iot:Data-ATS`, `iot:Jobs`.
	EndpointType *string `pulumi:"endpointType"`
}

// A collection of values returned by getEndpoint.
type GetEndpointResult struct {
	// Endpoint based on `endpointType`:
	// * No `endpointType`: Either `iot:Data` or `iot:Data-ATS` [depending on region](https://aws.amazon.com/blogs/iot/aws-iot-core-ats-endpoints/)
	// * `iot:CredentialsProvider`: `IDENTIFIER.credentials.iot.REGION.amazonaws.com`
	// * `iot:Data`: `IDENTIFIER.iot.REGION.amazonaws.com`
	// * `iot:Data-ATS`: `IDENTIFIER-ats.iot.REGION.amazonaws.com`
	// * `iot:Jobs`: `IDENTIFIER.jobs.iot.REGION.amazonaws.com`
	EndpointAddress string  `pulumi:"endpointAddress"`
	EndpointType    *string `pulumi:"endpointType"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}

func GetEndpointOutput(ctx *pulumi.Context, args GetEndpointOutputArgs, opts ...pulumi.InvokeOption) GetEndpointResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetEndpointResult, error) {
			args := v.(GetEndpointArgs)
			r, err := GetEndpoint(ctx, &args, opts...)
			var s GetEndpointResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetEndpointResultOutput)
}

// A collection of arguments for invoking getEndpoint.
type GetEndpointOutputArgs struct {
	// Endpoint type. Valid values: `iot:CredentialProvider`, `iot:Data`, `iot:Data-ATS`, `iot:Jobs`.
	EndpointType pulumi.StringPtrInput `pulumi:"endpointType"`
}

func (GetEndpointOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointArgs)(nil)).Elem()
}

// A collection of values returned by getEndpoint.
type GetEndpointResultOutput struct{ *pulumi.OutputState }

func (GetEndpointResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEndpointResult)(nil)).Elem()
}

func (o GetEndpointResultOutput) ToGetEndpointResultOutput() GetEndpointResultOutput {
	return o
}

func (o GetEndpointResultOutput) ToGetEndpointResultOutputWithContext(ctx context.Context) GetEndpointResultOutput {
	return o
}

func (o GetEndpointResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetEndpointResult] {
	return pulumix.Output[GetEndpointResult]{
		OutputState: o.OutputState,
	}
}

// Endpoint based on `endpointType`:
// * No `endpointType`: Either `iot:Data` or `iot:Data-ATS` [depending on region](https://aws.amazon.com/blogs/iot/aws-iot-core-ats-endpoints/)
// * `iot:CredentialsProvider`: `IDENTIFIER.credentials.iot.REGION.amazonaws.com`
// * `iot:Data`: `IDENTIFIER.iot.REGION.amazonaws.com`
// * `iot:Data-ATS`: `IDENTIFIER-ats.iot.REGION.amazonaws.com`
// * `iot:Jobs`: `IDENTIFIER.jobs.iot.REGION.amazonaws.com`
func (o GetEndpointResultOutput) EndpointAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointResult) string { return v.EndpointAddress }).(pulumi.StringOutput)
}

func (o GetEndpointResultOutput) EndpointType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEndpointResult) *string { return v.EndpointType }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetEndpointResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEndpointResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetEndpointResultOutput{})
}
