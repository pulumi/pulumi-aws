// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iot

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Managing [IoT Thing indexing](https://docs.aws.amazon.com/iot/latest/developerguide/managing-index.html).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/iot"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iot.NewIndexingConfiguration(ctx, "example", &iot.IndexingConfigurationArgs{
//				ThingIndexingConfiguration: &iot.IndexingConfigurationThingIndexingConfigurationArgs{
//					CustomFields: iot.IndexingConfigurationThingIndexingConfigurationCustomFieldArray{
//						&iot.IndexingConfigurationThingIndexingConfigurationCustomFieldArgs{
//							Name: pulumi.String("shadow.desired.power"),
//							Type: pulumi.String("Boolean"),
//						},
//						&iot.IndexingConfigurationThingIndexingConfigurationCustomFieldArgs{
//							Name: pulumi.String("attributes.version"),
//							Type: pulumi.String("Number"),
//						},
//						&iot.IndexingConfigurationThingIndexingConfigurationCustomFieldArgs{
//							Name: pulumi.String("shadow.name.thing1shadow.desired.DefaultDesired"),
//							Type: pulumi.String("String"),
//						},
//						&iot.IndexingConfigurationThingIndexingConfigurationCustomFieldArgs{
//							Name: pulumi.String("deviceDefender.securityProfile1.NUMBER_VALUE_BEHAVIOR.lastViolationValue.number"),
//							Type: pulumi.String("Number"),
//						},
//					},
//					DeviceDefenderIndexingMode: pulumi.String("VIOLATIONS"),
//					Filter: &iot.IndexingConfigurationThingIndexingConfigurationFilterArgs{
//						NamedShadowNames: pulumi.StringArray{
//							pulumi.String("thing1shadow"),
//						},
//					},
//					NamedShadowIndexingMode:       pulumi.String("ON"),
//					ThingConnectivityIndexingMode: pulumi.String("STATUS"),
//					ThingIndexingMode:             pulumi.String("REGISTRY_AND_SHADOW"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type IndexingConfiguration struct {
	pulumi.CustomResourceState

	// Thing group indexing configuration. See below.
	ThingGroupIndexingConfiguration IndexingConfigurationThingGroupIndexingConfigurationOutput `pulumi:"thingGroupIndexingConfiguration"`
	// Thing indexing configuration. See below.
	ThingIndexingConfiguration IndexingConfigurationThingIndexingConfigurationOutput `pulumi:"thingIndexingConfiguration"`
}

// NewIndexingConfiguration registers a new resource with the given unique name, arguments, and options.
func NewIndexingConfiguration(ctx *pulumi.Context,
	name string, args *IndexingConfigurationArgs, opts ...pulumi.ResourceOption) (*IndexingConfiguration, error) {
	if args == nil {
		args = &IndexingConfigurationArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IndexingConfiguration
	err := ctx.RegisterResource("aws:iot/indexingConfiguration:IndexingConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIndexingConfiguration gets an existing IndexingConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIndexingConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IndexingConfigurationState, opts ...pulumi.ResourceOption) (*IndexingConfiguration, error) {
	var resource IndexingConfiguration
	err := ctx.ReadResource("aws:iot/indexingConfiguration:IndexingConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IndexingConfiguration resources.
type indexingConfigurationState struct {
	// Thing group indexing configuration. See below.
	ThingGroupIndexingConfiguration *IndexingConfigurationThingGroupIndexingConfiguration `pulumi:"thingGroupIndexingConfiguration"`
	// Thing indexing configuration. See below.
	ThingIndexingConfiguration *IndexingConfigurationThingIndexingConfiguration `pulumi:"thingIndexingConfiguration"`
}

type IndexingConfigurationState struct {
	// Thing group indexing configuration. See below.
	ThingGroupIndexingConfiguration IndexingConfigurationThingGroupIndexingConfigurationPtrInput
	// Thing indexing configuration. See below.
	ThingIndexingConfiguration IndexingConfigurationThingIndexingConfigurationPtrInput
}

func (IndexingConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*indexingConfigurationState)(nil)).Elem()
}

type indexingConfigurationArgs struct {
	// Thing group indexing configuration. See below.
	ThingGroupIndexingConfiguration *IndexingConfigurationThingGroupIndexingConfiguration `pulumi:"thingGroupIndexingConfiguration"`
	// Thing indexing configuration. See below.
	ThingIndexingConfiguration *IndexingConfigurationThingIndexingConfiguration `pulumi:"thingIndexingConfiguration"`
}

// The set of arguments for constructing a IndexingConfiguration resource.
type IndexingConfigurationArgs struct {
	// Thing group indexing configuration. See below.
	ThingGroupIndexingConfiguration IndexingConfigurationThingGroupIndexingConfigurationPtrInput
	// Thing indexing configuration. See below.
	ThingIndexingConfiguration IndexingConfigurationThingIndexingConfigurationPtrInput
}

func (IndexingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*indexingConfigurationArgs)(nil)).Elem()
}

type IndexingConfigurationInput interface {
	pulumi.Input

	ToIndexingConfigurationOutput() IndexingConfigurationOutput
	ToIndexingConfigurationOutputWithContext(ctx context.Context) IndexingConfigurationOutput
}

func (*IndexingConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**IndexingConfiguration)(nil)).Elem()
}

func (i *IndexingConfiguration) ToIndexingConfigurationOutput() IndexingConfigurationOutput {
	return i.ToIndexingConfigurationOutputWithContext(context.Background())
}

func (i *IndexingConfiguration) ToIndexingConfigurationOutputWithContext(ctx context.Context) IndexingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexingConfigurationOutput)
}

// IndexingConfigurationArrayInput is an input type that accepts IndexingConfigurationArray and IndexingConfigurationArrayOutput values.
// You can construct a concrete instance of `IndexingConfigurationArrayInput` via:
//
//	IndexingConfigurationArray{ IndexingConfigurationArgs{...} }
type IndexingConfigurationArrayInput interface {
	pulumi.Input

	ToIndexingConfigurationArrayOutput() IndexingConfigurationArrayOutput
	ToIndexingConfigurationArrayOutputWithContext(context.Context) IndexingConfigurationArrayOutput
}

type IndexingConfigurationArray []IndexingConfigurationInput

func (IndexingConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IndexingConfiguration)(nil)).Elem()
}

func (i IndexingConfigurationArray) ToIndexingConfigurationArrayOutput() IndexingConfigurationArrayOutput {
	return i.ToIndexingConfigurationArrayOutputWithContext(context.Background())
}

func (i IndexingConfigurationArray) ToIndexingConfigurationArrayOutputWithContext(ctx context.Context) IndexingConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexingConfigurationArrayOutput)
}

// IndexingConfigurationMapInput is an input type that accepts IndexingConfigurationMap and IndexingConfigurationMapOutput values.
// You can construct a concrete instance of `IndexingConfigurationMapInput` via:
//
//	IndexingConfigurationMap{ "key": IndexingConfigurationArgs{...} }
type IndexingConfigurationMapInput interface {
	pulumi.Input

	ToIndexingConfigurationMapOutput() IndexingConfigurationMapOutput
	ToIndexingConfigurationMapOutputWithContext(context.Context) IndexingConfigurationMapOutput
}

type IndexingConfigurationMap map[string]IndexingConfigurationInput

func (IndexingConfigurationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IndexingConfiguration)(nil)).Elem()
}

func (i IndexingConfigurationMap) ToIndexingConfigurationMapOutput() IndexingConfigurationMapOutput {
	return i.ToIndexingConfigurationMapOutputWithContext(context.Background())
}

func (i IndexingConfigurationMap) ToIndexingConfigurationMapOutputWithContext(ctx context.Context) IndexingConfigurationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexingConfigurationMapOutput)
}

type IndexingConfigurationOutput struct{ *pulumi.OutputState }

func (IndexingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IndexingConfiguration)(nil)).Elem()
}

func (o IndexingConfigurationOutput) ToIndexingConfigurationOutput() IndexingConfigurationOutput {
	return o
}

func (o IndexingConfigurationOutput) ToIndexingConfigurationOutputWithContext(ctx context.Context) IndexingConfigurationOutput {
	return o
}

// Thing group indexing configuration. See below.
func (o IndexingConfigurationOutput) ThingGroupIndexingConfiguration() IndexingConfigurationThingGroupIndexingConfigurationOutput {
	return o.ApplyT(func(v *IndexingConfiguration) IndexingConfigurationThingGroupIndexingConfigurationOutput {
		return v.ThingGroupIndexingConfiguration
	}).(IndexingConfigurationThingGroupIndexingConfigurationOutput)
}

// Thing indexing configuration. See below.
func (o IndexingConfigurationOutput) ThingIndexingConfiguration() IndexingConfigurationThingIndexingConfigurationOutput {
	return o.ApplyT(func(v *IndexingConfiguration) IndexingConfigurationThingIndexingConfigurationOutput {
		return v.ThingIndexingConfiguration
	}).(IndexingConfigurationThingIndexingConfigurationOutput)
}

type IndexingConfigurationArrayOutput struct{ *pulumi.OutputState }

func (IndexingConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IndexingConfiguration)(nil)).Elem()
}

func (o IndexingConfigurationArrayOutput) ToIndexingConfigurationArrayOutput() IndexingConfigurationArrayOutput {
	return o
}

func (o IndexingConfigurationArrayOutput) ToIndexingConfigurationArrayOutputWithContext(ctx context.Context) IndexingConfigurationArrayOutput {
	return o
}

func (o IndexingConfigurationArrayOutput) Index(i pulumi.IntInput) IndexingConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IndexingConfiguration {
		return vs[0].([]*IndexingConfiguration)[vs[1].(int)]
	}).(IndexingConfigurationOutput)
}

type IndexingConfigurationMapOutput struct{ *pulumi.OutputState }

func (IndexingConfigurationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IndexingConfiguration)(nil)).Elem()
}

func (o IndexingConfigurationMapOutput) ToIndexingConfigurationMapOutput() IndexingConfigurationMapOutput {
	return o
}

func (o IndexingConfigurationMapOutput) ToIndexingConfigurationMapOutputWithContext(ctx context.Context) IndexingConfigurationMapOutput {
	return o
}

func (o IndexingConfigurationMapOutput) MapIndex(k pulumi.StringInput) IndexingConfigurationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IndexingConfiguration {
		return vs[0].(map[string]*IndexingConfiguration)[vs[1].(string)]
	}).(IndexingConfigurationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IndexingConfigurationInput)(nil)).Elem(), &IndexingConfiguration{})
	pulumi.RegisterInputType(reflect.TypeOf((*IndexingConfigurationArrayInput)(nil)).Elem(), IndexingConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IndexingConfigurationMapInput)(nil)).Elem(), IndexingConfigurationMap{})
	pulumi.RegisterOutputType(IndexingConfigurationOutput{})
	pulumi.RegisterOutputType(IndexingConfigurationArrayOutput{})
	pulumi.RegisterOutputType(IndexingConfigurationMapOutput{})
}
