// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.OpenSearch
{
    public static class GetServerlessAccessPolicy
    {
        /// <summary>
        /// Data source for managing an AWS OpenSearch Serverless Access Policy.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.OpenSearch.GetServerlessAccessPolicy.Invoke(new()
        ///     {
        ///         Name = aws_opensearchserverless_access_policy.Example.Name,
        ///         Type = aws_opensearchserverless_access_policy.Example.Type,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetServerlessAccessPolicyResult> InvokeAsync(GetServerlessAccessPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetServerlessAccessPolicyResult>("aws:opensearch/getServerlessAccessPolicy:getServerlessAccessPolicy", args ?? new GetServerlessAccessPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for managing an AWS OpenSearch Serverless Access Policy.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.OpenSearch.GetServerlessAccessPolicy.Invoke(new()
        ///     {
        ///         Name = aws_opensearchserverless_access_policy.Example.Name,
        ///         Type = aws_opensearchserverless_access_policy.Example.Type,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetServerlessAccessPolicyResult> Invoke(GetServerlessAccessPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetServerlessAccessPolicyResult>("aws:opensearch/getServerlessAccessPolicy:getServerlessAccessPolicy", args ?? new GetServerlessAccessPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServerlessAccessPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the policy.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// Type of access policy. Must be `data`.
        /// </summary>
        [Input("type", required: true)]
        public string Type { get; set; } = null!;

        public GetServerlessAccessPolicyArgs()
        {
        }
        public static new GetServerlessAccessPolicyArgs Empty => new GetServerlessAccessPolicyArgs();
    }

    public sealed class GetServerlessAccessPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the policy.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Type of access policy. Must be `data`.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public GetServerlessAccessPolicyInvokeArgs()
        {
        }
        public static new GetServerlessAccessPolicyInvokeArgs Empty => new GetServerlessAccessPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetServerlessAccessPolicyResult
    {
        /// <summary>
        /// Description of the policy. Typically used to store information about the permissions defined in the policy.
        /// </summary>
        public readonly string Description;
        public readonly string Id;
        public readonly string Name;
        /// <summary>
        /// JSON policy document to use as the content for the new policy.
        /// </summary>
        public readonly string Policy;
        /// <summary>
        /// Version of the policy.
        /// </summary>
        public readonly string PolicyVersion;
        public readonly string Type;

        [OutputConstructor]
        private GetServerlessAccessPolicyResult(
            string description,

            string id,

            string name,

            string policy,

            string policyVersion,

            string type)
        {
            Description = description;
            Id = id;
            Name = name;
            Policy = policy;
            PolicyVersion = policyVersion;
            Type = type;
        }
    }
}
