// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.OpenSearch
{
    public static class GetServerlessLifecyclePolicy
    {
        /// <summary>
        /// Data source for managing an AWS OpenSearch Serverless Lifecycle Policy.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.OpenSearch.GetServerlessLifecyclePolicy.Invoke(new()
        ///     {
        ///         Name = "example-lifecycle-policy",
        ///         Type = "retention",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetServerlessLifecyclePolicyResult> InvokeAsync(GetServerlessLifecyclePolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetServerlessLifecyclePolicyResult>("aws:opensearch/getServerlessLifecyclePolicy:getServerlessLifecyclePolicy", args ?? new GetServerlessLifecyclePolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for managing an AWS OpenSearch Serverless Lifecycle Policy.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.OpenSearch.GetServerlessLifecyclePolicy.Invoke(new()
        ///     {
        ///         Name = "example-lifecycle-policy",
        ///         Type = "retention",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetServerlessLifecyclePolicyResult> Invoke(GetServerlessLifecyclePolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetServerlessLifecyclePolicyResult>("aws:opensearch/getServerlessLifecyclePolicy:getServerlessLifecyclePolicy", args ?? new GetServerlessLifecyclePolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServerlessLifecyclePolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the policy
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// Type of lifecycle policy. Must be `retention`.
        /// </summary>
        [Input("type", required: true)]
        public string Type { get; set; } = null!;

        public GetServerlessLifecyclePolicyArgs()
        {
        }
        public static new GetServerlessLifecyclePolicyArgs Empty => new GetServerlessLifecyclePolicyArgs();
    }

    public sealed class GetServerlessLifecyclePolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the policy
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Type of lifecycle policy. Must be `retention`.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public GetServerlessLifecyclePolicyInvokeArgs()
        {
        }
        public static new GetServerlessLifecyclePolicyInvokeArgs Empty => new GetServerlessLifecyclePolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetServerlessLifecyclePolicyResult
    {
        /// <summary>
        /// The date the lifecycle policy was created.
        /// </summary>
        public readonly string CreatedDate;
        /// <summary>
        /// Description of the policy. Typically used to store information about the permissions defined in the policy.
        /// </summary>
        public readonly string Description;
        public readonly string Id;
        /// <summary>
        /// The date the lifecycle policy was last modified.
        /// </summary>
        public readonly string LastModifiedDate;
        public readonly string Name;
        /// <summary>
        /// JSON policy document to use as the content for the new policy.
        /// </summary>
        public readonly string Policy;
        /// <summary>
        /// Version of the policy.
        /// </summary>
        public readonly string PolicyVersion;
        public readonly string Type;

        [OutputConstructor]
        private GetServerlessLifecyclePolicyResult(
            string createdDate,

            string description,

            string id,

            string lastModifiedDate,

            string name,

            string policy,

            string policyVersion,

            string type)
        {
            CreatedDate = createdDate;
            Description = description;
            Id = id;
            LastModifiedDate = lastModifiedDate;
            Name = name;
            Policy = policy;
            PolicyVersion = policyVersion;
            Type = type;
        }
    }
}
