// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.OpenSearch
{
    /// <summary>
    /// Resource for managing an AWS OpenSearch Serverless Security Config.
    /// 
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// terraform import {
    /// 
    ///  to = aws_opensearchserverless_security_config.example
    /// 
    ///  id = "saml/123456789012/example" } Using `pulumi import`, import OpenSearchServerless Access Policy using the `name` argument prefixed with the string `saml/account_id/`. For exampleconsole % pulumi import aws_opensearchserverless_security_config.example saml/123456789012/example
    /// </summary>
    [AwsResourceType("aws:opensearch/serverlessSecurityConfig:ServerlessSecurityConfig")]
    public partial class ServerlessSecurityConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Version of the configuration.
        /// </summary>
        [Output("configVersion")]
        public Output<string> ConfigVersion { get; private set; } = null!;

        /// <summary>
        /// Description of the security configuration.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Name of the policy.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Configuration block for SAML options.
        /// </summary>
        [Output("samlOptions")]
        public Output<Outputs.ServerlessSecurityConfigSamlOptions?> SamlOptions { get; private set; } = null!;

        /// <summary>
        /// Type of configuration. Must be `saml`.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a ServerlessSecurityConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServerlessSecurityConfig(string name, ServerlessSecurityConfigArgs args, CustomResourceOptions? options = null)
            : base("aws:opensearch/serverlessSecurityConfig:ServerlessSecurityConfig", name, args ?? new ServerlessSecurityConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ServerlessSecurityConfig(string name, Input<string> id, ServerlessSecurityConfigState? state = null, CustomResourceOptions? options = null)
            : base("aws:opensearch/serverlessSecurityConfig:ServerlessSecurityConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ServerlessSecurityConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ServerlessSecurityConfig Get(string name, Input<string> id, ServerlessSecurityConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new ServerlessSecurityConfig(name, id, state, options);
        }
    }

    public sealed class ServerlessSecurityConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description of the security configuration.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Name of the policy.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Configuration block for SAML options.
        /// </summary>
        [Input("samlOptions")]
        public Input<Inputs.ServerlessSecurityConfigSamlOptionsArgs>? SamlOptions { get; set; }

        /// <summary>
        /// Type of configuration. Must be `saml`.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public ServerlessSecurityConfigArgs()
        {
        }
        public static new ServerlessSecurityConfigArgs Empty => new ServerlessSecurityConfigArgs();
    }

    public sealed class ServerlessSecurityConfigState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Version of the configuration.
        /// </summary>
        [Input("configVersion")]
        public Input<string>? ConfigVersion { get; set; }

        /// <summary>
        /// Description of the security configuration.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Name of the policy.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Configuration block for SAML options.
        /// </summary>
        [Input("samlOptions")]
        public Input<Inputs.ServerlessSecurityConfigSamlOptionsGetArgs>? SamlOptions { get; set; }

        /// <summary>
        /// Type of configuration. Must be `saml`.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public ServerlessSecurityConfigState()
        {
        }
        public static new ServerlessSecurityConfigState Empty => new ServerlessSecurityConfigState();
    }
}
