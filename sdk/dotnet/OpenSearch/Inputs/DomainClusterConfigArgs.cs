// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.OpenSearch.Inputs
{

    public sealed class DomainClusterConfigArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Number of dedicated main nodes in the cluster.
        /// </summary>
        [Input("dedicatedMasterCount")]
        public Input<int>? DedicatedMasterCount { get; set; }

        /// <summary>
        /// Whether dedicated main nodes are enabled for the cluster.
        /// </summary>
        [Input("dedicatedMasterEnabled")]
        public Input<bool>? DedicatedMasterEnabled { get; set; }

        /// <summary>
        /// Instance type of the dedicated main nodes in the cluster.
        /// </summary>
        [Input("dedicatedMasterType")]
        public Input<string>? DedicatedMasterType { get; set; }

        /// <summary>
        /// Number of instances in the cluster.
        /// </summary>
        [Input("instanceCount")]
        public Input<int>? InstanceCount { get; set; }

        /// <summary>
        /// Instance type of data nodes in the cluster.
        /// </summary>
        [Input("instanceType")]
        public Input<string>? InstanceType { get; set; }

        /// <summary>
        /// Number of warm nodes in the cluster. Valid values are between `2` and `150`. `warm_count` can be only and must be set when `warm_enabled` is set to `true`.
        /// </summary>
        [Input("warmCount")]
        public Input<int>? WarmCount { get; set; }

        /// <summary>
        /// Whether to enable warm storage.
        /// </summary>
        [Input("warmEnabled")]
        public Input<bool>? WarmEnabled { get; set; }

        /// <summary>
        /// Instance type for the OpenSearch cluster's warm nodes. Valid values are `ultrawarm1.medium.search`, `ultrawarm1.large.search` and `ultrawarm1.xlarge.search`. `warm_type` can be only and must be set when `warm_enabled` is set to `true`.
        /// </summary>
        [Input("warmType")]
        public Input<string>? WarmType { get; set; }

        /// <summary>
        /// Configuration block containing zone awareness settings. Detailed below.
        /// </summary>
        [Input("zoneAwarenessConfig")]
        public Input<Inputs.DomainClusterConfigZoneAwarenessConfigArgs>? ZoneAwarenessConfig { get; set; }

        /// <summary>
        /// Whether zone awareness is enabled, set to `true` for multi-az deployment. To enable awareness with three Availability Zones, the `availability_zone_count` within the `zone_awareness_config` must be set to `3`.
        /// </summary>
        [Input("zoneAwarenessEnabled")]
        public Input<bool>? ZoneAwarenessEnabled { get; set; }

        public DomainClusterConfigArgs()
        {
        }
    }
}
