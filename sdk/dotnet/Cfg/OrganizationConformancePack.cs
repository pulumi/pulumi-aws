// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Cfg
{
    /// <summary>
    /// Manages a Config Organization Conformance Pack. More information can be found in the [Managing Conformance Packs Across all Accounts in Your Organization](https://docs.aws.amazon.com/config/latest/developerguide/conformance-pack-organization-apis.html) and [AWS Config Managed Rules](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_use-managed-rules.html) documentation. Example conformance pack templates may be found in the [AWS Config Rules Repository](https://github.com/awslabs/aws-config-rules/tree/master/aws-config-conformance-packs).
    /// 
    /// &gt; **NOTE:** This resource must be created in the Organization master account or a delegated administrator account, and the Organization must have all features enabled. Every Organization account except those configured in the `excluded_accounts` argument must have a Configuration Recorder with proper IAM permissions before the Organization Conformance Pack will successfully create or update. See also the `aws.cfg.Recorder` resource.
    /// 
    /// ## Example Usage
    /// ### Using Template Body
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var exampleOrganization = new Aws.Organizations.Organization("exampleOrganization", new Aws.Organizations.OrganizationArgs
    ///         {
    ///             AwsServiceAccessPrincipals = 
    ///             {
    ///                 "config-multiaccountsetup.amazonaws.com",
    ///             },
    ///             FeatureSet = "ALL",
    ///         });
    ///         var exampleOrganizationConformancePack = new Aws.Cfg.OrganizationConformancePack("exampleOrganizationConformancePack", new Aws.Cfg.OrganizationConformancePackArgs
    ///         {
    ///             InputParameters = 
    ///             {
    ///                 new Aws.Cfg.Inputs.OrganizationConformancePackInputParameterArgs
    ///                 {
    ///                     ParameterName = "AccessKeysRotatedParameterMaxAccessKeyAge",
    ///                     ParameterValue = "90",
    ///                 },
    ///             },
    ///             TemplateBody = @"Parameters:
    ///   AccessKeysRotatedParameterMaxAccessKeyAge:
    ///     Type: String
    /// Resources:
    ///   IAMPasswordPolicy:
    ///     Properties:
    ///       ConfigRuleName: IAMPasswordPolicy
    ///       Source:
    ///         Owner: AWS
    ///         SourceIdentifier: IAM_PASSWORD_POLICY
    ///     Type: AWS::Config::ConfigRule
    /// ",
    ///         }, new CustomResourceOptions
    ///         {
    ///             DependsOn = 
    ///             {
    ///                 aws_config_configuration_recorder.Example,
    ///                 exampleOrganization,
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// ### Using Template S3 URI
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var exampleOrganization = new Aws.Organizations.Organization("exampleOrganization", new Aws.Organizations.OrganizationArgs
    ///         {
    ///             AwsServiceAccessPrincipals = 
    ///             {
    ///                 "config-multiaccountsetup.amazonaws.com",
    ///             },
    ///             FeatureSet = "ALL",
    ///         });
    ///         var exampleBucketV2 = new Aws.S3.BucketV2("exampleBucketV2", new Aws.S3.BucketV2Args
    ///         {
    ///             Bucket = "example",
    ///         });
    ///         var exampleBucketObjectv2 = new Aws.S3.BucketObjectv2("exampleBucketObjectv2", new Aws.S3.BucketObjectv2Args
    ///         {
    ///             Bucket = exampleBucketV2.Id,
    ///             Key = "example-key",
    ///             Content = @"Resources:
    ///   IAMPasswordPolicy:
    ///     Properties:
    ///       ConfigRuleName: IAMPasswordPolicy
    ///       Source:
    ///         Owner: AWS
    ///         SourceIdentifier: IAM_PASSWORD_POLICY
    ///     Type: AWS::Config::ConfigRule
    /// ",
    ///         });
    ///         var exampleOrganizationConformancePack = new Aws.Cfg.OrganizationConformancePack("exampleOrganizationConformancePack", new Aws.Cfg.OrganizationConformancePackArgs
    ///         {
    ///             TemplateS3Uri = Output.Tuple(exampleBucketV2.Bucket, exampleBucketObjectv2.Key).Apply(values =&gt;
    ///             {
    ///                 var bucket = values.Item1;
    ///                 var key = values.Item2;
    ///                 return $"s3://{bucket}/{key}";
    ///             }),
    ///         }, new CustomResourceOptions
    ///         {
    ///             DependsOn = 
    ///             {
    ///                 aws_config_configuration_recorder.Example,
    ///                 exampleOrganization,
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// Config Organization Conformance Packs can be imported using the `name`, e.g.,
    /// 
    /// ```sh
    ///  $ pulumi import aws:cfg/organizationConformancePack:OrganizationConformancePack example example
    /// ```
    /// </summary>
    [AwsResourceType("aws:cfg/organizationConformancePack:OrganizationConformancePack")]
    public partial class OrganizationConformancePack : Pulumi.CustomResource
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the organization conformance pack.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// Amazon S3 bucket where AWS Config stores conformance pack templates. Delivery bucket must begin with `awsconfigconforms` prefix. Maximum length of 63.
        /// </summary>
        [Output("deliveryS3Bucket")]
        public Output<string?> DeliveryS3Bucket { get; private set; } = null!;

        /// <summary>
        /// The prefix for the Amazon S3 bucket. Maximum length of 1024.
        /// </summary>
        [Output("deliveryS3KeyPrefix")]
        public Output<string?> DeliveryS3KeyPrefix { get; private set; } = null!;

        /// <summary>
        /// Set of AWS accounts to be excluded from an organization conformance pack while deploying a conformance pack. Maximum of 1000 accounts.
        /// </summary>
        [Output("excludedAccounts")]
        public Output<ImmutableArray<string>> ExcludedAccounts { get; private set; } = null!;

        /// <summary>
        /// Set of configuration blocks describing input parameters passed to the conformance pack template. Documented below. When configured, the parameters must also be included in the `template_body` or in the template stored in Amazon S3 if using `template_s3_uri`.
        /// </summary>
        [Output("inputParameters")]
        public Output<ImmutableArray<Outputs.OrganizationConformancePackInputParameter>> InputParameters { get; private set; } = null!;

        /// <summary>
        /// The name of the organization conformance pack. Must begin with a letter and contain from 1 to 128 alphanumeric characters and hyphens.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// A string containing full conformance pack template body. Maximum length of 51200. Drift detection is not possible with this argument.
        /// </summary>
        [Output("templateBody")]
        public Output<string?> TemplateBody { get; private set; } = null!;

        /// <summary>
        /// Location of file, e.g., `s3://bucketname/prefix`, containing the template body. The uri must point to the conformance pack template that is located in an Amazon S3 bucket in the same region as the conformance pack. Maximum length of 1024. Drift detection is not possible with this argument.
        /// </summary>
        [Output("templateS3Uri")]
        public Output<string?> TemplateS3Uri { get; private set; } = null!;


        /// <summary>
        /// Create a OrganizationConformancePack resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OrganizationConformancePack(string name, OrganizationConformancePackArgs? args = null, CustomResourceOptions? options = null)
            : base("aws:cfg/organizationConformancePack:OrganizationConformancePack", name, args ?? new OrganizationConformancePackArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OrganizationConformancePack(string name, Input<string> id, OrganizationConformancePackState? state = null, CustomResourceOptions? options = null)
            : base("aws:cfg/organizationConformancePack:OrganizationConformancePack", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OrganizationConformancePack resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OrganizationConformancePack Get(string name, Input<string> id, OrganizationConformancePackState? state = null, CustomResourceOptions? options = null)
        {
            return new OrganizationConformancePack(name, id, state, options);
        }
    }

    public sealed class OrganizationConformancePackArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Amazon S3 bucket where AWS Config stores conformance pack templates. Delivery bucket must begin with `awsconfigconforms` prefix. Maximum length of 63.
        /// </summary>
        [Input("deliveryS3Bucket")]
        public Input<string>? DeliveryS3Bucket { get; set; }

        /// <summary>
        /// The prefix for the Amazon S3 bucket. Maximum length of 1024.
        /// </summary>
        [Input("deliveryS3KeyPrefix")]
        public Input<string>? DeliveryS3KeyPrefix { get; set; }

        [Input("excludedAccounts")]
        private InputList<string>? _excludedAccounts;

        /// <summary>
        /// Set of AWS accounts to be excluded from an organization conformance pack while deploying a conformance pack. Maximum of 1000 accounts.
        /// </summary>
        public InputList<string> ExcludedAccounts
        {
            get => _excludedAccounts ?? (_excludedAccounts = new InputList<string>());
            set => _excludedAccounts = value;
        }

        [Input("inputParameters")]
        private InputList<Inputs.OrganizationConformancePackInputParameterArgs>? _inputParameters;

        /// <summary>
        /// Set of configuration blocks describing input parameters passed to the conformance pack template. Documented below. When configured, the parameters must also be included in the `template_body` or in the template stored in Amazon S3 if using `template_s3_uri`.
        /// </summary>
        public InputList<Inputs.OrganizationConformancePackInputParameterArgs> InputParameters
        {
            get => _inputParameters ?? (_inputParameters = new InputList<Inputs.OrganizationConformancePackInputParameterArgs>());
            set => _inputParameters = value;
        }

        /// <summary>
        /// The name of the organization conformance pack. Must begin with a letter and contain from 1 to 128 alphanumeric characters and hyphens.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A string containing full conformance pack template body. Maximum length of 51200. Drift detection is not possible with this argument.
        /// </summary>
        [Input("templateBody")]
        public Input<string>? TemplateBody { get; set; }

        /// <summary>
        /// Location of file, e.g., `s3://bucketname/prefix`, containing the template body. The uri must point to the conformance pack template that is located in an Amazon S3 bucket in the same region as the conformance pack. Maximum length of 1024. Drift detection is not possible with this argument.
        /// </summary>
        [Input("templateS3Uri")]
        public Input<string>? TemplateS3Uri { get; set; }

        public OrganizationConformancePackArgs()
        {
        }
    }

    public sealed class OrganizationConformancePackState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the organization conformance pack.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// Amazon S3 bucket where AWS Config stores conformance pack templates. Delivery bucket must begin with `awsconfigconforms` prefix. Maximum length of 63.
        /// </summary>
        [Input("deliveryS3Bucket")]
        public Input<string>? DeliveryS3Bucket { get; set; }

        /// <summary>
        /// The prefix for the Amazon S3 bucket. Maximum length of 1024.
        /// </summary>
        [Input("deliveryS3KeyPrefix")]
        public Input<string>? DeliveryS3KeyPrefix { get; set; }

        [Input("excludedAccounts")]
        private InputList<string>? _excludedAccounts;

        /// <summary>
        /// Set of AWS accounts to be excluded from an organization conformance pack while deploying a conformance pack. Maximum of 1000 accounts.
        /// </summary>
        public InputList<string> ExcludedAccounts
        {
            get => _excludedAccounts ?? (_excludedAccounts = new InputList<string>());
            set => _excludedAccounts = value;
        }

        [Input("inputParameters")]
        private InputList<Inputs.OrganizationConformancePackInputParameterGetArgs>? _inputParameters;

        /// <summary>
        /// Set of configuration blocks describing input parameters passed to the conformance pack template. Documented below. When configured, the parameters must also be included in the `template_body` or in the template stored in Amazon S3 if using `template_s3_uri`.
        /// </summary>
        public InputList<Inputs.OrganizationConformancePackInputParameterGetArgs> InputParameters
        {
            get => _inputParameters ?? (_inputParameters = new InputList<Inputs.OrganizationConformancePackInputParameterGetArgs>());
            set => _inputParameters = value;
        }

        /// <summary>
        /// The name of the organization conformance pack. Must begin with a letter and contain from 1 to 128 alphanumeric characters and hyphens.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A string containing full conformance pack template body. Maximum length of 51200. Drift detection is not possible with this argument.
        /// </summary>
        [Input("templateBody")]
        public Input<string>? TemplateBody { get; set; }

        /// <summary>
        /// Location of file, e.g., `s3://bucketname/prefix`, containing the template body. The uri must point to the conformance pack template that is located in an Amazon S3 bucket in the same region as the conformance pack. Maximum length of 1024. Drift detection is not possible with this argument.
        /// </summary>
        [Input("templateS3Uri")]
        public Input<string>? TemplateS3Uri { get; set; }

        public OrganizationConformancePackState()
        {
        }
    }
}
