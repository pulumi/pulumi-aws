// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Route53Domains.Inputs
{

    public sealed class DomainBillingContactGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// First line of the contact's address.
        /// </summary>
        [Input("addressLine1", required: true)]
        public Input<string> AddressLine1 { get; set; } = null!;

        /// <summary>
        /// Second line of contact's address, if any.
        /// </summary>
        [Input("addressLine2", required: true)]
        public Input<string> AddressLine2 { get; set; } = null!;

        /// <summary>
        /// The city of the contact's address.
        /// </summary>
        [Input("city", required: true)]
        public Input<string> City { get; set; } = null!;

        /// <summary>
        /// Indicates whether the contact is a person, company, association, or public organization. See the [AWS API documentation](https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_ContactDetail.html#Route53Domains-Type-domains_ContactDetail-ContactType) for valid values.
        /// </summary>
        [Input("contactType", required: true)]
        public Input<string> ContactType { get; set; } = null!;

        /// <summary>
        /// Code for the country of the contact's address. See the [AWS API documentation](https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_ContactDetail.html#Route53Domains-Type-domains_ContactDetail-CountryCode) for valid values.
        /// </summary>
        [Input("countryCode", required: true)]
        public Input<string> CountryCode { get; set; } = null!;

        /// <summary>
        /// Email address of the contact.
        /// </summary>
        [Input("email", required: true)]
        public Input<string> Email { get; set; } = null!;

        [Input("extraParams", required: true)]
        private InputList<Inputs.DomainBillingContactExtraParamGetArgs>? _extraParams;

        /// <summary>
        /// A list of name-value pairs for parameters required by certain top-level domains.
        /// </summary>
        public InputList<Inputs.DomainBillingContactExtraParamGetArgs> ExtraParams
        {
            get => _extraParams ?? (_extraParams = new InputList<Inputs.DomainBillingContactExtraParamGetArgs>());
            set => _extraParams = value;
        }

        /// <summary>
        /// Fax number of the contact. Phone number must be specified in the format "+[country dialing code].[number including any area code]".
        /// </summary>
        [Input("fax", required: true)]
        public Input<string> Fax { get; set; } = null!;

        /// <summary>
        /// First name of contact.
        /// </summary>
        [Input("firstName", required: true)]
        public Input<string> FirstName { get; set; } = null!;

        /// <summary>
        /// Last name of contact.
        /// </summary>
        [Input("lastName", required: true)]
        public Input<string> LastName { get; set; } = null!;

        /// <summary>
        /// Name of the organization for contact types other than `PERSON`.
        /// </summary>
        [Input("organizationName", required: true)]
        public Input<string> OrganizationName { get; set; } = null!;

        /// <summary>
        /// The phone number of the contact. Phone number must be specified in the format "+[country dialing code].[number including any area code]".
        /// </summary>
        [Input("phoneNumber", required: true)]
        public Input<string> PhoneNumber { get; set; } = null!;

        /// <summary>
        /// The state or province of the contact's city.
        /// </summary>
        [Input("state", required: true)]
        public Input<string> State { get; set; } = null!;

        /// <summary>
        /// The zip or postal code of the contact's address.
        /// </summary>
        [Input("zipCode", required: true)]
        public Input<string> ZipCode { get; set; } = null!;

        public DomainBillingContactGetArgs()
        {
        }
        public static new DomainBillingContactGetArgs Empty => new DomainBillingContactGetArgs();
    }
}
