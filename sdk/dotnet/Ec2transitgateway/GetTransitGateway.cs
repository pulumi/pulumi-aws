// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2TransitGateway
{
    public static partial class Invokes
    {
        /// <summary>
        /// Get information on an EC2 Transit Gateway.
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/d/ec2_transit_gateway.html.markdown.
        /// </summary>
        public static Task<GetTransitGatewayResult> GetTransitGateway(GetTransitGatewayArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetTransitGatewayResult>("aws:ec2transitgateway/getTransitGateway:getTransitGateway", args ?? InvokeArgs.Empty, options.WithVersion());
    }

    public sealed class GetTransitGatewayArgs : Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetTransitGatewayFiltersArgs>? _filters;

        /// <summary>
        /// One or more configuration blocks containing name-values filters. Detailed below.
        /// </summary>
        public List<Inputs.GetTransitGatewayFiltersArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetTransitGatewayFiltersArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Identifier of the EC2 Transit Gateway.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        [Input("tags")]
        private Dictionary<string, object>? _tags;
        public Dictionary<string, object> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, object>());
            set => _tags = value;
        }

        public GetTransitGatewayArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetTransitGatewayResult
    {
        /// <summary>
        /// Private Autonomous System Number (ASN) for the Amazon side of a BGP session
        /// </summary>
        public readonly int AmazonSideAsn;
        /// <summary>
        /// EC2 Transit Gateway Amazon Resource Name (ARN)
        /// </summary>
        public readonly string Arn;
        /// <summary>
        /// Identifier of the default association route table
        /// </summary>
        public readonly string AssociationDefaultRouteTableId;
        /// <summary>
        /// Whether resource attachment requests are automatically accepted.
        /// </summary>
        public readonly string AutoAcceptSharedAttachments;
        /// <summary>
        /// Whether resource attachments are automatically associated with the default association route table.
        /// </summary>
        public readonly string DefaultRouteTableAssociation;
        /// <summary>
        /// Whether resource attachments automatically propagate routes to the default propagation route table.
        /// </summary>
        public readonly string DefaultRouteTablePropagation;
        /// <summary>
        /// Description of the EC2 Transit Gateway
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Whether DNS support is enabled.
        /// </summary>
        public readonly string DnsSupport;
        public readonly ImmutableArray<Outputs.GetTransitGatewayFiltersResult> Filters;
        /// <summary>
        /// EC2 Transit Gateway identifier
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Identifier of the AWS account that owns the EC2 Transit Gateway
        /// </summary>
        public readonly string OwnerId;
        /// <summary>
        /// Identifier of the default propagation route table.
        /// </summary>
        public readonly string PropagationDefaultRouteTableId;
        /// <summary>
        /// Key-value tags for the EC2 Transit Gateway
        /// </summary>
        public readonly ImmutableDictionary<string, object> Tags;
        /// <summary>
        /// Whether VPN Equal Cost Multipath Protocol support is enabled.
        /// </summary>
        public readonly string VpnEcmpSupport;

        [OutputConstructor]
        private GetTransitGatewayResult(
            int amazonSideAsn,
            string arn,
            string associationDefaultRouteTableId,
            string autoAcceptSharedAttachments,
            string defaultRouteTableAssociation,
            string defaultRouteTablePropagation,
            string description,
            string dnsSupport,
            ImmutableArray<Outputs.GetTransitGatewayFiltersResult> filters,
            string? id,
            string ownerId,
            string propagationDefaultRouteTableId,
            ImmutableDictionary<string, object> tags,
            string vpnEcmpSupport)
        {
            AmazonSideAsn = amazonSideAsn;
            Arn = arn;
            AssociationDefaultRouteTableId = associationDefaultRouteTableId;
            AutoAcceptSharedAttachments = autoAcceptSharedAttachments;
            DefaultRouteTableAssociation = defaultRouteTableAssociation;
            DefaultRouteTablePropagation = defaultRouteTablePropagation;
            Description = description;
            DnsSupport = dnsSupport;
            Filters = filters;
            Id = id;
            OwnerId = ownerId;
            PropagationDefaultRouteTableId = propagationDefaultRouteTableId;
            Tags = tags;
            VpnEcmpSupport = vpnEcmpSupport;
        }
    }

    namespace Inputs
    {

    public sealed class GetTransitGatewayFiltersArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the filter.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("values", required: true)]
        private List<string>? _values;

        /// <summary>
        /// List of one or more values for the filter.
        /// </summary>
        public List<string> Values
        {
            get => _values ?? (_values = new List<string>());
            set => _values = value;
        }

        public GetTransitGatewayFiltersArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class GetTransitGatewayFiltersResult
    {
        /// <summary>
        /// Name of the filter.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// List of one or more values for the filter.
        /// </summary>
        public readonly ImmutableArray<string> Values;

        [OutputConstructor]
        private GetTransitGatewayFiltersResult(
            string name,
            ImmutableArray<string> values)
        {
            Name = name;
            Values = values;
        }
    }
    }
}
