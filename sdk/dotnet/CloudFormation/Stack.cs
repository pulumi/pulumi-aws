// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CloudFormation
{
    [AwsResourceType("aws:cloudformation/stack:Stack")]
    public partial class Stack : global::Pulumi.CustomResource
    {
        [Output("capabilities")]
        public Output<ImmutableArray<string>> Capabilities { get; private set; } = null!;

        [Output("disableRollback")]
        public Output<bool?> DisableRollback { get; private set; } = null!;

        [Output("iamRoleArn")]
        public Output<string?> IamRoleArn { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("notificationArns")]
        public Output<ImmutableArray<string>> NotificationArns { get; private set; } = null!;

        [Output("onFailure")]
        public Output<string?> OnFailure { get; private set; } = null!;

        [Output("outputs")]
        public Output<ImmutableDictionary<string, string>> Outputs { get; private set; } = null!;

        [Output("parameters")]
        public Output<ImmutableDictionary<string, string>> Parameters { get; private set; } = null!;

        [Output("policyBody")]
        public Output<string> PolicyBody { get; private set; } = null!;

        [Output("policyUrl")]
        public Output<string?> PolicyUrl { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("templateBody")]
        public Output<string> TemplateBody { get; private set; } = null!;

        [Output("templateUrl")]
        public Output<string?> TemplateUrl { get; private set; } = null!;

        [Output("timeoutInMinutes")]
        public Output<int?> TimeoutInMinutes { get; private set; } = null!;


        /// <summary>
        /// Create a Stack resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Stack(string name, StackArgs? args = null, CustomResourceOptions? options = null)
            : base("aws:cloudformation/stack:Stack", name, args ?? new StackArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Stack(string name, Input<string> id, StackState? state = null, CustomResourceOptions? options = null)
            : base("aws:cloudformation/stack:Stack", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Stack resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Stack Get(string name, Input<string> id, StackState? state = null, CustomResourceOptions? options = null)
        {
            return new Stack(name, id, state, options);
        }
    }

    public sealed class StackArgs : global::Pulumi.ResourceArgs
    {
        [Input("capabilities")]
        private InputList<string>? _capabilities;
        public InputList<string> Capabilities
        {
            get => _capabilities ?? (_capabilities = new InputList<string>());
            set => _capabilities = value;
        }

        [Input("disableRollback")]
        public Input<bool>? DisableRollback { get; set; }

        [Input("iamRoleArn")]
        public Input<string>? IamRoleArn { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("notificationArns")]
        private InputList<string>? _notificationArns;
        public InputList<string> NotificationArns
        {
            get => _notificationArns ?? (_notificationArns = new InputList<string>());
            set => _notificationArns = value;
        }

        [Input("onFailure")]
        public Input<string>? OnFailure { get; set; }

        [Input("parameters")]
        private InputMap<string>? _parameters;
        public InputMap<string> Parameters
        {
            get => _parameters ?? (_parameters = new InputMap<string>());
            set => _parameters = value;
        }

        [Input("policyBody")]
        public Input<string>? PolicyBody { get; set; }

        [Input("policyUrl")]
        public Input<string>? PolicyUrl { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("templateBody")]
        public Input<string>? TemplateBody { get; set; }

        [Input("templateUrl")]
        public Input<string>? TemplateUrl { get; set; }

        [Input("timeoutInMinutes")]
        public Input<int>? TimeoutInMinutes { get; set; }

        public StackArgs()
        {
        }
        public static new StackArgs Empty => new StackArgs();
    }

    public sealed class StackState : global::Pulumi.ResourceArgs
    {
        [Input("capabilities")]
        private InputList<string>? _capabilities;
        public InputList<string> Capabilities
        {
            get => _capabilities ?? (_capabilities = new InputList<string>());
            set => _capabilities = value;
        }

        [Input("disableRollback")]
        public Input<bool>? DisableRollback { get; set; }

        [Input("iamRoleArn")]
        public Input<string>? IamRoleArn { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("notificationArns")]
        private InputList<string>? _notificationArns;
        public InputList<string> NotificationArns
        {
            get => _notificationArns ?? (_notificationArns = new InputList<string>());
            set => _notificationArns = value;
        }

        [Input("onFailure")]
        public Input<string>? OnFailure { get; set; }

        [Input("outputs")]
        private InputMap<string>? _outputs;
        public InputMap<string> Outputs
        {
            get => _outputs ?? (_outputs = new InputMap<string>());
            set => _outputs = value;
        }

        [Input("parameters")]
        private InputMap<string>? _parameters;
        public InputMap<string> Parameters
        {
            get => _parameters ?? (_parameters = new InputMap<string>());
            set => _parameters = value;
        }

        [Input("policyBody")]
        public Input<string>? PolicyBody { get; set; }

        [Input("policyUrl")]
        public Input<string>? PolicyUrl { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("templateBody")]
        public Input<string>? TemplateBody { get; set; }

        [Input("templateUrl")]
        public Input<string>? TemplateUrl { get; set; }

        [Input("timeoutInMinutes")]
        public Input<int>? TimeoutInMinutes { get; set; }

        public StackState()
        {
        }
        public static new StackState Empty => new StackState();
    }
}
