// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CloudFormation
{
    [AwsResourceType("aws:cloudformation/stackSet:StackSet")]
    public partial class StackSet : global::Pulumi.CustomResource
    {
        [Output("administrationRoleArn")]
        public Output<string?> AdministrationRoleArn { get; private set; } = null!;

        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("autoDeployment")]
        public Output<Outputs.StackSetAutoDeployment?> AutoDeployment { get; private set; } = null!;

        [Output("callAs")]
        public Output<string?> CallAs { get; private set; } = null!;

        [Output("capabilities")]
        public Output<ImmutableArray<string>> Capabilities { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("executionRoleName")]
        public Output<string> ExecutionRoleName { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("operationPreferences")]
        public Output<Outputs.StackSetOperationPreferences?> OperationPreferences { get; private set; } = null!;

        [Output("parameters")]
        public Output<ImmutableDictionary<string, string>?> Parameters { get; private set; } = null!;

        [Output("permissionModel")]
        public Output<string?> PermissionModel { get; private set; } = null!;

        [Output("stackSetId")]
        public Output<string> StackSetId { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("templateBody")]
        public Output<string> TemplateBody { get; private set; } = null!;

        [Output("templateUrl")]
        public Output<string?> TemplateUrl { get; private set; } = null!;


        /// <summary>
        /// Create a StackSet resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public StackSet(string name, StackSetArgs? args = null, CustomResourceOptions? options = null)
            : base("aws:cloudformation/stackSet:StackSet", name, args ?? new StackSetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private StackSet(string name, Input<string> id, StackSetState? state = null, CustomResourceOptions? options = null)
            : base("aws:cloudformation/stackSet:StackSet", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing StackSet resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static StackSet Get(string name, Input<string> id, StackSetState? state = null, CustomResourceOptions? options = null)
        {
            return new StackSet(name, id, state, options);
        }
    }

    public sealed class StackSetArgs : global::Pulumi.ResourceArgs
    {
        [Input("administrationRoleArn")]
        public Input<string>? AdministrationRoleArn { get; set; }

        [Input("autoDeployment")]
        public Input<Inputs.StackSetAutoDeploymentArgs>? AutoDeployment { get; set; }

        [Input("callAs")]
        public Input<string>? CallAs { get; set; }

        [Input("capabilities")]
        private InputList<string>? _capabilities;
        public InputList<string> Capabilities
        {
            get => _capabilities ?? (_capabilities = new InputList<string>());
            set => _capabilities = value;
        }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("executionRoleName")]
        public Input<string>? ExecutionRoleName { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("operationPreferences")]
        public Input<Inputs.StackSetOperationPreferencesArgs>? OperationPreferences { get; set; }

        [Input("parameters")]
        private InputMap<string>? _parameters;
        public InputMap<string> Parameters
        {
            get => _parameters ?? (_parameters = new InputMap<string>());
            set => _parameters = value;
        }

        [Input("permissionModel")]
        public Input<string>? PermissionModel { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("templateBody")]
        public Input<string>? TemplateBody { get; set; }

        [Input("templateUrl")]
        public Input<string>? TemplateUrl { get; set; }

        public StackSetArgs()
        {
        }
        public static new StackSetArgs Empty => new StackSetArgs();
    }

    public sealed class StackSetState : global::Pulumi.ResourceArgs
    {
        [Input("administrationRoleArn")]
        public Input<string>? AdministrationRoleArn { get; set; }

        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("autoDeployment")]
        public Input<Inputs.StackSetAutoDeploymentGetArgs>? AutoDeployment { get; set; }

        [Input("callAs")]
        public Input<string>? CallAs { get; set; }

        [Input("capabilities")]
        private InputList<string>? _capabilities;
        public InputList<string> Capabilities
        {
            get => _capabilities ?? (_capabilities = new InputList<string>());
            set => _capabilities = value;
        }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("executionRoleName")]
        public Input<string>? ExecutionRoleName { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("operationPreferences")]
        public Input<Inputs.StackSetOperationPreferencesGetArgs>? OperationPreferences { get; set; }

        [Input("parameters")]
        private InputMap<string>? _parameters;
        public InputMap<string> Parameters
        {
            get => _parameters ?? (_parameters = new InputMap<string>());
            set => _parameters = value;
        }

        [Input("permissionModel")]
        public Input<string>? PermissionModel { get; set; }

        [Input("stackSetId")]
        public Input<string>? StackSetId { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("templateBody")]
        public Input<string>? TemplateBody { get; set; }

        [Input("templateUrl")]
        public Input<string>? TemplateUrl { get; set; }

        public StackSetState()
        {
        }
        public static new StackSetState Empty => new StackSetState();
    }
}
