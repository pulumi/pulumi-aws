// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CloudFormation
{
    public static class GetStack
    {
        public static Task<GetStackResult> InvokeAsync(GetStackArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetStackResult>("aws:cloudformation/getStack:getStack", args ?? new GetStackArgs(), options.WithDefaults());

        public static Output<GetStackResult> Invoke(GetStackInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetStackResult>("aws:cloudformation/getStack:getStack", args ?? new GetStackInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStackArgs : global::Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("tags")]
        private Dictionary<string, string>? _tags;
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetStackArgs()
        {
        }
        public static new GetStackArgs Empty => new GetStackArgs();
    }

    public sealed class GetStackInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetStackInvokeArgs()
        {
        }
        public static new GetStackInvokeArgs Empty => new GetStackInvokeArgs();
    }


    [OutputType]
    public sealed class GetStackResult
    {
        public readonly ImmutableArray<string> Capabilities;
        public readonly string Description;
        public readonly bool DisableRollback;
        public readonly string IamRoleArn;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly ImmutableArray<string> NotificationArns;
        public readonly ImmutableDictionary<string, string> Outputs;
        public readonly ImmutableDictionary<string, string> Parameters;
        public readonly ImmutableDictionary<string, string> Tags;
        public readonly string TemplateBody;
        public readonly int TimeoutInMinutes;

        [OutputConstructor]
        private GetStackResult(
            ImmutableArray<string> capabilities,

            string description,

            bool disableRollback,

            string iamRoleArn,

            string id,

            string name,

            ImmutableArray<string> notificationArns,

            ImmutableDictionary<string, string> outputs,

            ImmutableDictionary<string, string> parameters,

            ImmutableDictionary<string, string> tags,

            string templateBody,

            int timeoutInMinutes)
        {
            Capabilities = capabilities;
            Description = description;
            DisableRollback = disableRollback;
            IamRoleArn = iamRoleArn;
            Id = id;
            Name = name;
            NotificationArns = notificationArns;
            Outputs = outputs;
            Parameters = parameters;
            Tags = tags;
            TemplateBody = templateBody;
            TimeoutInMinutes = timeoutInMinutes;
        }
    }
}
