// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Vpc
{
    /// <summary>
    /// Provides a resource for managing association between VPC (Virtual Private Cloud) route server and a VPC.
    /// 
    /// ## Example Usage
    /// 
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Vpc.RouteServerVpcAssociation("example", new()
    ///     {
    ///         RouteServerId = exampleAwsVpcRouteServer.RouteServerId,
    ///         VpcId = exampleAwsVpc.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, to  to import VPC (Virtual Private Cloud) Route Server Association using the associated resource ID and VPC Id separated by a comma (,). For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:vpc/routeServerVpcAssociation:RouteServerVpcAssociation example rs-12345678,vpc-0f001273ec18911b1
    /// ```
    /// </summary>
    [AwsResourceType("aws:vpc/routeServerVpcAssociation:RouteServerVpcAssociation")]
    public partial class RouteServerVpcAssociation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// The unique identifier for the route server to be associated.
        /// </summary>
        [Output("routeServerId")]
        public Output<string> RouteServerId { get; private set; } = null!;

        [Output("timeouts")]
        public Output<Outputs.RouteServerVpcAssociationTimeouts?> Timeouts { get; private set; } = null!;

        /// <summary>
        /// The ID of the VPC to associate with the route server.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;


        /// <summary>
        /// Create a RouteServerVpcAssociation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RouteServerVpcAssociation(string name, RouteServerVpcAssociationArgs args, CustomResourceOptions? options = null)
            : base("aws:vpc/routeServerVpcAssociation:RouteServerVpcAssociation", name, args ?? new RouteServerVpcAssociationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RouteServerVpcAssociation(string name, Input<string> id, RouteServerVpcAssociationState? state = null, CustomResourceOptions? options = null)
            : base("aws:vpc/routeServerVpcAssociation:RouteServerVpcAssociation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RouteServerVpcAssociation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RouteServerVpcAssociation Get(string name, Input<string> id, RouteServerVpcAssociationState? state = null, CustomResourceOptions? options = null)
        {
            return new RouteServerVpcAssociation(name, id, state, options);
        }
    }

    public sealed class RouteServerVpcAssociationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The unique identifier for the route server to be associated.
        /// </summary>
        [Input("routeServerId", required: true)]
        public Input<string> RouteServerId { get; set; } = null!;

        [Input("timeouts")]
        public Input<Inputs.RouteServerVpcAssociationTimeoutsArgs>? Timeouts { get; set; }

        /// <summary>
        /// The ID of the VPC to associate with the route server.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("vpcId", required: true)]
        public Input<string> VpcId { get; set; } = null!;

        public RouteServerVpcAssociationArgs()
        {
        }
        public static new RouteServerVpcAssociationArgs Empty => new RouteServerVpcAssociationArgs();
    }

    public sealed class RouteServerVpcAssociationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The unique identifier for the route server to be associated.
        /// </summary>
        [Input("routeServerId")]
        public Input<string>? RouteServerId { get; set; }

        [Input("timeouts")]
        public Input<Inputs.RouteServerVpcAssociationTimeoutsGetArgs>? Timeouts { get; set; }

        /// <summary>
        /// The ID of the VPC to associate with the route server.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public RouteServerVpcAssociationState()
        {
        }
        public static new RouteServerVpcAssociationState Empty => new RouteServerVpcAssociationState();
    }
}
