// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Vpc
{
    /// <summary>
    /// Resource for managing Security Group VPC Associations.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Vpc.SecurityGroupVpcAssociation("example", new()
    ///     {
    ///         SecurityGroupId = "sg-05f1f54ab49bb39a3",
    ///         VpcId = "vpc-01df9d105095412ba",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import a Security Group VPC Association using the `security_group_id` and `vpc_id` arguments, separated by a comma (`,`). For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:vpc/securityGroupVpcAssociation:SecurityGroupVpcAssociation example sg-12345,vpc-67890
    /// ```
    /// </summary>
    [AwsResourceType("aws:vpc/securityGroupVpcAssociation:SecurityGroupVpcAssociation")]
    public partial class SecurityGroupVpcAssociation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the security group.
        /// </summary>
        [Output("securityGroupId")]
        public Output<string> SecurityGroupId { get; private set; } = null!;

        /// <summary>
        /// State of the VPC association. See the [AWS documentation](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SecurityGroupVpcAssociation.html) for possible values.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        [Output("timeouts")]
        public Output<Outputs.SecurityGroupVpcAssociationTimeouts?> Timeouts { get; private set; } = null!;

        /// <summary>
        /// The ID of the VPC to make the association with.
        /// </summary>
        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;


        /// <summary>
        /// Create a SecurityGroupVpcAssociation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SecurityGroupVpcAssociation(string name, SecurityGroupVpcAssociationArgs args, CustomResourceOptions? options = null)
            : base("aws:vpc/securityGroupVpcAssociation:SecurityGroupVpcAssociation", name, args ?? new SecurityGroupVpcAssociationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SecurityGroupVpcAssociation(string name, Input<string> id, SecurityGroupVpcAssociationState? state = null, CustomResourceOptions? options = null)
            : base("aws:vpc/securityGroupVpcAssociation:SecurityGroupVpcAssociation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SecurityGroupVpcAssociation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SecurityGroupVpcAssociation Get(string name, Input<string> id, SecurityGroupVpcAssociationState? state = null, CustomResourceOptions? options = null)
        {
            return new SecurityGroupVpcAssociation(name, id, state, options);
        }
    }

    public sealed class SecurityGroupVpcAssociationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the security group.
        /// </summary>
        [Input("securityGroupId", required: true)]
        public Input<string> SecurityGroupId { get; set; } = null!;

        [Input("timeouts")]
        public Input<Inputs.SecurityGroupVpcAssociationTimeoutsArgs>? Timeouts { get; set; }

        /// <summary>
        /// The ID of the VPC to make the association with.
        /// </summary>
        [Input("vpcId", required: true)]
        public Input<string> VpcId { get; set; } = null!;

        public SecurityGroupVpcAssociationArgs()
        {
        }
        public static new SecurityGroupVpcAssociationArgs Empty => new SecurityGroupVpcAssociationArgs();
    }

    public sealed class SecurityGroupVpcAssociationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the security group.
        /// </summary>
        [Input("securityGroupId")]
        public Input<string>? SecurityGroupId { get; set; }

        /// <summary>
        /// State of the VPC association. See the [AWS documentation](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SecurityGroupVpcAssociation.html) for possible values.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("timeouts")]
        public Input<Inputs.SecurityGroupVpcAssociationTimeoutsGetArgs>? Timeouts { get; set; }

        /// <summary>
        /// The ID of the VPC to make the association with.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public SecurityGroupVpcAssociationState()
        {
        }
        public static new SecurityGroupVpcAssociationState Empty => new SecurityGroupVpcAssociationState();
    }
}
