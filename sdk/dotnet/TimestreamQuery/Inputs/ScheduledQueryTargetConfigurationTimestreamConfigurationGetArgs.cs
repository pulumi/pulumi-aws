// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.TimestreamQuery.Inputs
{

    public sealed class ScheduledQueryTargetConfigurationTimestreamConfigurationGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of Timestream database to which the query result will be written.
        /// </summary>
        [Input("databaseName", required: true)]
        public Input<string> DatabaseName { get; set; } = null!;

        [Input("dimensionMappings")]
        private InputList<Inputs.ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingGetArgs>? _dimensionMappings;

        /// <summary>
        /// Configuration block for mapping of column(s) from the query result to the dimension in the destination table. See below.
        /// </summary>
        public InputList<Inputs.ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingGetArgs> DimensionMappings
        {
            get => _dimensionMappings ?? (_dimensionMappings = new InputList<Inputs.ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingGetArgs>());
            set => _dimensionMappings = value;
        }

        /// <summary>
        /// Name of the measure column.
        /// </summary>
        [Input("measureNameColumn")]
        public Input<string>? MeasureNameColumn { get; set; }

        [Input("mixedMeasureMappings")]
        private InputList<Inputs.ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingGetArgs>? _mixedMeasureMappings;

        /// <summary>
        /// Configuration block for how to map measures to multi-measure records. See below.
        /// </summary>
        public InputList<Inputs.ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingGetArgs> MixedMeasureMappings
        {
            get => _mixedMeasureMappings ?? (_mixedMeasureMappings = new InputList<Inputs.ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingGetArgs>());
            set => _mixedMeasureMappings = value;
        }

        /// <summary>
        /// Configuration block for multi-measure mappings. Only one of `mixed_measure_mappings` or `multi_measure_mappings` can be provided. `multi_measure_mappings` can be used to ingest data as multi measures in the derived table. See below.
        /// </summary>
        [Input("multiMeasureMappings")]
        public Input<Inputs.ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsGetArgs>? MultiMeasureMappings { get; set; }

        /// <summary>
        /// Name of Timestream table that the query result will be written to. The table should be within the same database that is provided in Timestream configuration.
        /// </summary>
        [Input("tableName", required: true)]
        public Input<string> TableName { get; set; } = null!;

        /// <summary>
        /// Column from query result that should be used as the time column in destination table. Column type for this should be TIMESTAMP.
        /// </summary>
        [Input("timeColumn", required: true)]
        public Input<string> TimeColumn { get; set; } = null!;

        public ScheduledQueryTargetConfigurationTimestreamConfigurationGetArgs()
        {
        }
        public static new ScheduledQueryTargetConfigurationTimestreamConfigurationGetArgs Empty => new ScheduledQueryTargetConfigurationTimestreamConfigurationGetArgs();
    }
}
