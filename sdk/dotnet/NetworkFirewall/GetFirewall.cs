// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.NetworkFirewall
{
    public static class GetFirewall
    {
        public static Task<GetFirewallResult> InvokeAsync(GetFirewallArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFirewallResult>("aws:networkfirewall/getFirewall:getFirewall", args ?? new GetFirewallArgs(), options.WithDefaults());

        public static Output<GetFirewallResult> Invoke(GetFirewallInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFirewallResult>("aws:networkfirewall/getFirewall:getFirewall", args ?? new GetFirewallInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFirewallArgs : global::Pulumi.InvokeArgs
    {
        [Input("arn")]
        public string? Arn { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        [Input("tags")]
        private Dictionary<string, string>? _tags;
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetFirewallArgs()
        {
        }
        public static new GetFirewallArgs Empty => new GetFirewallArgs();
    }

    public sealed class GetFirewallInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetFirewallInvokeArgs()
        {
        }
        public static new GetFirewallInvokeArgs Empty => new GetFirewallInvokeArgs();
    }


    [OutputType]
    public sealed class GetFirewallResult
    {
        public readonly string Arn;
        public readonly bool DeleteProtection;
        public readonly string Description;
        public readonly ImmutableArray<Outputs.GetFirewallEncryptionConfigurationResult> EncryptionConfigurations;
        public readonly string FirewallPolicyArn;
        public readonly bool FirewallPolicyChangeProtection;
        public readonly ImmutableArray<Outputs.GetFirewallFirewallStatusResult> FirewallStatuses;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly bool SubnetChangeProtection;
        public readonly ImmutableArray<Outputs.GetFirewallSubnetMappingResult> SubnetMappings;
        public readonly ImmutableDictionary<string, string>? Tags;
        public readonly string UpdateToken;
        public readonly string VpcId;

        [OutputConstructor]
        private GetFirewallResult(
            string arn,

            bool deleteProtection,

            string description,

            ImmutableArray<Outputs.GetFirewallEncryptionConfigurationResult> encryptionConfigurations,

            string firewallPolicyArn,

            bool firewallPolicyChangeProtection,

            ImmutableArray<Outputs.GetFirewallFirewallStatusResult> firewallStatuses,

            string id,

            string name,

            bool subnetChangeProtection,

            ImmutableArray<Outputs.GetFirewallSubnetMappingResult> subnetMappings,

            ImmutableDictionary<string, string>? tags,

            string updateToken,

            string vpcId)
        {
            Arn = arn;
            DeleteProtection = deleteProtection;
            Description = description;
            EncryptionConfigurations = encryptionConfigurations;
            FirewallPolicyArn = firewallPolicyArn;
            FirewallPolicyChangeProtection = firewallPolicyChangeProtection;
            FirewallStatuses = firewallStatuses;
            Id = id;
            Name = name;
            SubnetChangeProtection = subnetChangeProtection;
            SubnetMappings = subnetMappings;
            Tags = tags;
            UpdateToken = updateToken;
            VpcId = vpcId;
        }
    }
}
