// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.NetworkFirewall.Inputs
{

    public sealed class FirewallPolicyFirewallPolicyArgs : global::Pulumi.ResourceArgs
    {
        [Input("statefulDefaultActions")]
        private InputList<string>? _statefulDefaultActions;

        /// <summary>
        /// Set of actions to take on a packet if it does not match any stateful rules in the policy. This can only be specified if the policy has a `stateful_engine_options` block with a `rule_order` value of `STRICT_ORDER`. You can specify one of either or neither values of `aws:drop_strict` or `aws:drop_established`, as well as any combination of `aws:alert_strict` and `aws:alert_established`.
        /// </summary>
        public InputList<string> StatefulDefaultActions
        {
            get => _statefulDefaultActions ?? (_statefulDefaultActions = new InputList<string>());
            set => _statefulDefaultActions = value;
        }

        /// <summary>
        /// A configuration block that defines options on how the policy handles stateful rules. See Stateful Engine Options below for details.
        /// </summary>
        [Input("statefulEngineOptions")]
        public Input<Inputs.FirewallPolicyFirewallPolicyStatefulEngineOptionsArgs>? StatefulEngineOptions { get; set; }

        [Input("statefulRuleGroupReferences")]
        private InputList<Inputs.FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceArgs>? _statefulRuleGroupReferences;

        /// <summary>
        /// Set of configuration blocks containing references to the stateful rule groups that are used in the policy. See Stateful Rule Group Reference below for details.
        /// </summary>
        public InputList<Inputs.FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceArgs> StatefulRuleGroupReferences
        {
            get => _statefulRuleGroupReferences ?? (_statefulRuleGroupReferences = new InputList<Inputs.FirewallPolicyFirewallPolicyStatefulRuleGroupReferenceArgs>());
            set => _statefulRuleGroupReferences = value;
        }

        [Input("statelessCustomActions")]
        private InputList<Inputs.FirewallPolicyFirewallPolicyStatelessCustomActionArgs>? _statelessCustomActions;

        /// <summary>
        /// Set of configuration blocks describing the custom action definitions that are available for use in the firewall policy's `stateless_default_actions`. See Stateless Custom Action below for details.
        /// </summary>
        public InputList<Inputs.FirewallPolicyFirewallPolicyStatelessCustomActionArgs> StatelessCustomActions
        {
            get => _statelessCustomActions ?? (_statelessCustomActions = new InputList<Inputs.FirewallPolicyFirewallPolicyStatelessCustomActionArgs>());
            set => _statelessCustomActions = value;
        }

        [Input("statelessDefaultActions", required: true)]
        private InputList<string>? _statelessDefaultActions;

        /// <summary>
        /// Set of actions to take on a packet if it does not match any of the stateless rules in the policy. You must specify one of the standard actions including: `aws:drop`, `aws:pass`, or `aws:forward_to_sfe`.
        /// In addition, you can specify custom actions that are compatible with your standard action choice. If you want non-matching packets to be forwarded for stateful inspection, specify `aws:forward_to_sfe`.
        /// </summary>
        public InputList<string> StatelessDefaultActions
        {
            get => _statelessDefaultActions ?? (_statelessDefaultActions = new InputList<string>());
            set => _statelessDefaultActions = value;
        }

        [Input("statelessFragmentDefaultActions", required: true)]
        private InputList<string>? _statelessFragmentDefaultActions;

        /// <summary>
        /// Set of actions to take on a fragmented packet if it does not match any of the stateless rules in the policy. You must specify one of the standard actions including: `aws:drop`, `aws:pass`, or `aws:forward_to_sfe`.
        /// In addition, you can specify custom actions that are compatible with your standard action choice. If you want non-matching packets to be forwarded for stateful inspection, specify `aws:forward_to_sfe`.
        /// </summary>
        public InputList<string> StatelessFragmentDefaultActions
        {
            get => _statelessFragmentDefaultActions ?? (_statelessFragmentDefaultActions = new InputList<string>());
            set => _statelessFragmentDefaultActions = value;
        }

        [Input("statelessRuleGroupReferences")]
        private InputList<Inputs.FirewallPolicyFirewallPolicyStatelessRuleGroupReferenceArgs>? _statelessRuleGroupReferences;

        /// <summary>
        /// Set of configuration blocks containing references to the stateless rule groups that are used in the policy. See Stateless Rule Group Reference below for details.
        /// </summary>
        public InputList<Inputs.FirewallPolicyFirewallPolicyStatelessRuleGroupReferenceArgs> StatelessRuleGroupReferences
        {
            get => _statelessRuleGroupReferences ?? (_statelessRuleGroupReferences = new InputList<Inputs.FirewallPolicyFirewallPolicyStatelessRuleGroupReferenceArgs>());
            set => _statelessRuleGroupReferences = value;
        }

        public FirewallPolicyFirewallPolicyArgs()
        {
        }
        public static new FirewallPolicyFirewallPolicyArgs Empty => new FirewallPolicyFirewallPolicyArgs();
    }
}
