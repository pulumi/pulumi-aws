// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.NetworkFirewall
{
    /// <summary>
    /// Manages a firewall endpoint for an AWS Network Firewall firewall.
    /// 
    /// Use `aws.networkfirewall.VpcEndpointAssociation` to establish new firewall endpoints in any Availability Zone where the firewall is already being used. The first use of a firewall in an Availability Zone must be defined by `aws.networkfirewall.Firewall` resource and `SubnetMapping` argument.
    /// 
    /// ## Example Usage
    /// 
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.NetworkFirewall.VpcEndpointAssociation("example", new()
    ///     {
    ///         FirewallArn = exampleAwsNetworkfirewallFirewall.Arn,
    ///         VpcId = exampleAwsVpc.Id,
    ///         SubnetMapping = new Aws.NetworkFirewall.Inputs.VpcEndpointAssociationSubnetMappingArgs
    ///         {
    ///             SubnetId = exampleTwo.Id,
    ///         },
    ///         Tags = 
    ///         {
    ///             { "Name", "example endpoint" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import Network Firewall VPC Endpoint Association using the `vpc_endpoint_association_arn`. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:networkfirewall/vpcEndpointAssociation:VpcEndpointAssociation example arn:aws:network-firewall:us-west-1:123456789012:vpc-endpoint-association/example
    /// ```
    /// </summary>
    [AwsResourceType("aws:networkfirewall/vpcEndpointAssociation:VpcEndpointAssociation")]
    public partial class VpcEndpointAssociation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A description of the VPC endpoint association.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) that identifies the firewall.
        /// </summary>
        [Output("firewallArn")]
        public Output<string> FirewallArn { get; private set; } = null!;

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// The ID for a subnet that's used in an association with a firewall. See Subnet Mapping below for details.
        /// </summary>
        [Output("subnetMapping")]
        public Output<Outputs.VpcEndpointAssociationSubnetMapping?> SubnetMapping { get; private set; } = null!;

        /// <summary>
        /// Map of resource tags to associate with the resource. If configured with a provider `DefaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `DefaultTags` configuration block.
        /// </summary>
        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("timeouts")]
        public Output<Outputs.VpcEndpointAssociationTimeouts?> Timeouts { get; private set; } = null!;

        /// <summary>
        /// ARN of the VPC Endpoint Association.
        /// </summary>
        [Output("vpcEndpointAssociationArn")]
        public Output<string> VpcEndpointAssociationArn { get; private set; } = null!;

        /// <summary>
        /// The unique identifier of the VPC endpoint association.
        /// </summary>
        [Output("vpcEndpointAssociationId")]
        public Output<string> VpcEndpointAssociationId { get; private set; } = null!;

        /// <summary>
        /// Nested list of information about the current status of the VPC Endpoint Association.
        /// </summary>
        [Output("vpcEndpointAssociationStatuses")]
        public Output<ImmutableArray<Outputs.VpcEndpointAssociationVpcEndpointAssociationStatus>> VpcEndpointAssociationStatuses { get; private set; } = null!;

        /// <summary>
        /// The unique identifier of the VPC for the endpoint association.
        /// </summary>
        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;


        /// <summary>
        /// Create a VpcEndpointAssociation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VpcEndpointAssociation(string name, VpcEndpointAssociationArgs args, CustomResourceOptions? options = null)
            : base("aws:networkfirewall/vpcEndpointAssociation:VpcEndpointAssociation", name, args ?? new VpcEndpointAssociationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VpcEndpointAssociation(string name, Input<string> id, VpcEndpointAssociationState? state = null, CustomResourceOptions? options = null)
            : base("aws:networkfirewall/vpcEndpointAssociation:VpcEndpointAssociation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VpcEndpointAssociation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VpcEndpointAssociation Get(string name, Input<string> id, VpcEndpointAssociationState? state = null, CustomResourceOptions? options = null)
        {
            return new VpcEndpointAssociation(name, id, state, options);
        }
    }

    public sealed class VpcEndpointAssociationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A description of the VPC endpoint association.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The Amazon Resource Name (ARN) that identifies the firewall.
        /// </summary>
        [Input("firewallArn", required: true)]
        public Input<string> FirewallArn { get; set; } = null!;

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The ID for a subnet that's used in an association with a firewall. See Subnet Mapping below for details.
        /// </summary>
        [Input("subnetMapping")]
        public Input<Inputs.VpcEndpointAssociationSubnetMappingArgs>? SubnetMapping { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Map of resource tags to associate with the resource. If configured with a provider `DefaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("timeouts")]
        public Input<Inputs.VpcEndpointAssociationTimeoutsArgs>? Timeouts { get; set; }

        /// <summary>
        /// The unique identifier of the VPC for the endpoint association.
        /// </summary>
        [Input("vpcId", required: true)]
        public Input<string> VpcId { get; set; } = null!;

        public VpcEndpointAssociationArgs()
        {
        }
        public static new VpcEndpointAssociationArgs Empty => new VpcEndpointAssociationArgs();
    }

    public sealed class VpcEndpointAssociationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A description of the VPC endpoint association.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The Amazon Resource Name (ARN) that identifies the firewall.
        /// </summary>
        [Input("firewallArn")]
        public Input<string>? FirewallArn { get; set; }

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The ID for a subnet that's used in an association with a firewall. See Subnet Mapping below for details.
        /// </summary>
        [Input("subnetMapping")]
        public Input<Inputs.VpcEndpointAssociationSubnetMappingGetArgs>? SubnetMapping { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Map of resource tags to associate with the resource. If configured with a provider `DefaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `DefaultTags` configuration block.
        /// </summary>
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("timeouts")]
        public Input<Inputs.VpcEndpointAssociationTimeoutsGetArgs>? Timeouts { get; set; }

        /// <summary>
        /// ARN of the VPC Endpoint Association.
        /// </summary>
        [Input("vpcEndpointAssociationArn")]
        public Input<string>? VpcEndpointAssociationArn { get; set; }

        /// <summary>
        /// The unique identifier of the VPC endpoint association.
        /// </summary>
        [Input("vpcEndpointAssociationId")]
        public Input<string>? VpcEndpointAssociationId { get; set; }

        [Input("vpcEndpointAssociationStatuses")]
        private InputList<Inputs.VpcEndpointAssociationVpcEndpointAssociationStatusGetArgs>? _vpcEndpointAssociationStatuses;

        /// <summary>
        /// Nested list of information about the current status of the VPC Endpoint Association.
        /// </summary>
        public InputList<Inputs.VpcEndpointAssociationVpcEndpointAssociationStatusGetArgs> VpcEndpointAssociationStatuses
        {
            get => _vpcEndpointAssociationStatuses ?? (_vpcEndpointAssociationStatuses = new InputList<Inputs.VpcEndpointAssociationVpcEndpointAssociationStatusGetArgs>());
            set => _vpcEndpointAssociationStatuses = value;
        }

        /// <summary>
        /// The unique identifier of the VPC for the endpoint association.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public VpcEndpointAssociationState()
        {
        }
        public static new VpcEndpointAssociationState Empty => new VpcEndpointAssociationState();
    }
}
