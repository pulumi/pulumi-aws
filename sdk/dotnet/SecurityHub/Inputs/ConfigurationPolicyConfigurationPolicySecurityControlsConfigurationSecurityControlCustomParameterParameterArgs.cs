// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.SecurityHub.Inputs
{

    public sealed class ConfigurationPolicyConfigurationPolicySecurityControlsConfigurationSecurityControlCustomParameterParameterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The bool `value` for a Boolean-typed Security Hub Control Parameter.
        /// </summary>
        [Input("bool")]
        public Input<Inputs.ConfigurationPolicyConfigurationPolicySecurityControlsConfigurationSecurityControlCustomParameterParameterBoolArgs>? Bool { get; set; }

        /// <summary>
        /// The float `value` for a Double-typed Security Hub Control Parameter.
        /// </summary>
        [Input("double")]
        public Input<Inputs.ConfigurationPolicyConfigurationPolicySecurityControlsConfigurationSecurityControlCustomParameterParameterDoubleArgs>? Double { get; set; }

        /// <summary>
        /// The string `value` for a Enum-typed Security Hub Control Parameter.
        /// </summary>
        [Input("enum")]
        public Input<Inputs.ConfigurationPolicyConfigurationPolicySecurityControlsConfigurationSecurityControlCustomParameterParameterEnumArgs>? Enum { get; set; }

        /// <summary>
        /// The string list `value` for a EnumList-typed Security Hub Control Parameter.
        /// </summary>
        [Input("enumList")]
        public Input<Inputs.ConfigurationPolicyConfigurationPolicySecurityControlsConfigurationSecurityControlCustomParameterParameterEnumListArgs>? EnumList { get; set; }

        /// <summary>
        /// The int `value` for a Int-typed Security Hub Control Parameter.
        /// </summary>
        [Input("int")]
        public Input<Inputs.ConfigurationPolicyConfigurationPolicySecurityControlsConfigurationSecurityControlCustomParameterParameterIntArgs>? Int { get; set; }

        /// <summary>
        /// The int list `value` for a IntList-typed Security Hub Control Parameter.
        /// </summary>
        [Input("intList")]
        public Input<Inputs.ConfigurationPolicyConfigurationPolicySecurityControlsConfigurationSecurityControlCustomParameterParameterIntListArgs>? IntList { get; set; }

        /// <summary>
        /// The name of the control parameter. For more information see the [Security Hub controls reference] documentation.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The string `value` for a String-typed Security Hub Control Parameter.
        /// </summary>
        [Input("string")]
        public Input<Inputs.ConfigurationPolicyConfigurationPolicySecurityControlsConfigurationSecurityControlCustomParameterParameterStringArgs>? String { get; set; }

        /// <summary>
        /// The string list `value` for a StringList-typed Security Hub Control Parameter.
        /// </summary>
        [Input("stringList")]
        public Input<Inputs.ConfigurationPolicyConfigurationPolicySecurityControlsConfigurationSecurityControlCustomParameterParameterStringListArgs>? StringList { get; set; }

        /// <summary>
        /// Identifies whether a control parameter uses a custom user-defined value or subscribes to the default Security Hub behavior. Valid values: `DEFAULT`, `CUSTOM`.
        /// </summary>
        [Input("valueType", required: true)]
        public Input<string> ValueType { get; set; } = null!;

        public ConfigurationPolicyConfigurationPolicySecurityControlsConfigurationSecurityControlCustomParameterParameterArgs()
        {
        }
        public static new ConfigurationPolicyConfigurationPolicySecurityControlsConfigurationSecurityControlCustomParameterParameterArgs Empty => new ConfigurationPolicyConfigurationPolicySecurityControlsConfigurationSecurityControlCustomParameterParameterArgs();
    }
}
