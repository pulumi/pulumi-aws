// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.SecurityHub
{
    /// <summary>
    /// Manages Security Hub configuration policy associations.
    /// 
    /// &gt; **NOTE:** This resource requires `aws.securityhub.OrganizationConfiguration` to be configured with type `CENTRAL`. More information about Security Hub central configuration and configuration policies can be found in the [How Security Hub configuration policies work](https://docs.aws.amazon.com/securityhub/latest/userguide/configuration-policies-overview.html) documentation.
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.SecurityHub.FindingAggregator("example", new()
    ///     {
    ///         LinkingMode = "ALL_REGIONS",
    ///     });
    /// 
    ///     var exampleOrganizationConfiguration = new Aws.SecurityHub.OrganizationConfiguration("example", new()
    ///     {
    ///         AutoEnable = false,
    ///         AutoEnableStandards = "NONE",
    ///         OrganizationConfigurationDetails = new Aws.SecurityHub.Inputs.OrganizationConfigurationOrganizationConfigurationArgs
    ///         {
    ///             ConfigurationType = "CENTRAL",
    ///         },
    ///     });
    /// 
    ///     var exampleConfigurationPolicy = new Aws.SecurityHub.ConfigurationPolicy("example", new()
    ///     {
    ///         Name = "Example",
    ///         Description = "This is an example configuration policy",
    ///         ConfigurationPolicyDetails = new Aws.SecurityHub.Inputs.ConfigurationPolicyConfigurationPolicyArgs
    ///         {
    ///             ServiceEnabled = true,
    ///             EnabledStandardArns = new[]
    ///             {
    ///                 "arn:aws:securityhub:us-east-1::standards/aws-foundational-security-best-practices/v/1.0.0",
    ///                 "arn:aws:securityhub:::ruleset/cis-aws-foundations-benchmark/v/1.2.0",
    ///             },
    ///             SecurityControlsConfiguration = new Aws.SecurityHub.Inputs.ConfigurationPolicyConfigurationPolicySecurityControlsConfigurationArgs
    ///             {
    ///                 DisabledControlIdentifiers = new() { },
    ///             },
    ///         },
    ///     });
    /// 
    ///     var accountExample = new Aws.SecurityHub.ConfigurationPolicyAssociation("account_example", new()
    ///     {
    ///         TargetId = "123456789012",
    ///         PolicyId = exampleConfigurationPolicy.Id,
    ///     });
    /// 
    ///     var rootExample = new Aws.SecurityHub.ConfigurationPolicyAssociation("root_example", new()
    ///     {
    ///         TargetId = "r-abcd",
    ///         PolicyId = exampleConfigurationPolicy.Id,
    ///     });
    /// 
    ///     var ouExample = new Aws.SecurityHub.ConfigurationPolicyAssociation("ou_example", new()
    ///     {
    ///         TargetId = "ou-abcd-12345678",
    ///         PolicyId = exampleConfigurationPolicy.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import an existing Security Hub enabled account using the universally unique identifier (UUID) of the policy. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:securityhub/configurationPolicyAssociation:ConfigurationPolicyAssociation example_account_association 123456789012
    /// ```
    /// </summary>
    [AwsResourceType("aws:securityhub/configurationPolicyAssociation:ConfigurationPolicyAssociation")]
    public partial class ConfigurationPolicyAssociation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The universally unique identifier (UUID) of the configuration policy.
        /// </summary>
        [Output("policyId")]
        public Output<string> PolicyId { get; private set; } = null!;

        /// <summary>
        /// The identifier of the target account, organizational unit, or the root to associate with the specified configuration.
        /// </summary>
        [Output("targetId")]
        public Output<string> TargetId { get; private set; } = null!;


        /// <summary>
        /// Create a ConfigurationPolicyAssociation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ConfigurationPolicyAssociation(string name, ConfigurationPolicyAssociationArgs args, CustomResourceOptions? options = null)
            : base("aws:securityhub/configurationPolicyAssociation:ConfigurationPolicyAssociation", name, args ?? new ConfigurationPolicyAssociationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ConfigurationPolicyAssociation(string name, Input<string> id, ConfigurationPolicyAssociationState? state = null, CustomResourceOptions? options = null)
            : base("aws:securityhub/configurationPolicyAssociation:ConfigurationPolicyAssociation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ConfigurationPolicyAssociation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ConfigurationPolicyAssociation Get(string name, Input<string> id, ConfigurationPolicyAssociationState? state = null, CustomResourceOptions? options = null)
        {
            return new ConfigurationPolicyAssociation(name, id, state, options);
        }
    }

    public sealed class ConfigurationPolicyAssociationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The universally unique identifier (UUID) of the configuration policy.
        /// </summary>
        [Input("policyId", required: true)]
        public Input<string> PolicyId { get; set; } = null!;

        /// <summary>
        /// The identifier of the target account, organizational unit, or the root to associate with the specified configuration.
        /// </summary>
        [Input("targetId", required: true)]
        public Input<string> TargetId { get; set; } = null!;

        public ConfigurationPolicyAssociationArgs()
        {
        }
        public static new ConfigurationPolicyAssociationArgs Empty => new ConfigurationPolicyAssociationArgs();
    }

    public sealed class ConfigurationPolicyAssociationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The universally unique identifier (UUID) of the configuration policy.
        /// </summary>
        [Input("policyId")]
        public Input<string>? PolicyId { get; set; }

        /// <summary>
        /// The identifier of the target account, organizational unit, or the root to associate with the specified configuration.
        /// </summary>
        [Input("targetId")]
        public Input<string>? TargetId { get; set; }

        public ConfigurationPolicyAssociationState()
        {
        }
        public static new ConfigurationPolicyAssociationState Empty => new ConfigurationPolicyAssociationState();
    }
}
