// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2ClientVpn
{
    [AwsResourceType("aws:ec2clientvpn/authorizationRule:AuthorizationRule")]
    public partial class AuthorizationRule : global::Pulumi.CustomResource
    {
        [Output("accessGroupId")]
        public Output<string?> AccessGroupId { get; private set; } = null!;

        [Output("authorizeAllGroups")]
        public Output<bool?> AuthorizeAllGroups { get; private set; } = null!;

        [Output("clientVpnEndpointId")]
        public Output<string> ClientVpnEndpointId { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("targetNetworkCidr")]
        public Output<string> TargetNetworkCidr { get; private set; } = null!;


        /// <summary>
        /// Create a AuthorizationRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AuthorizationRule(string name, AuthorizationRuleArgs args, CustomResourceOptions? options = null)
            : base("aws:ec2clientvpn/authorizationRule:AuthorizationRule", name, args ?? new AuthorizationRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AuthorizationRule(string name, Input<string> id, AuthorizationRuleState? state = null, CustomResourceOptions? options = null)
            : base("aws:ec2clientvpn/authorizationRule:AuthorizationRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AuthorizationRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AuthorizationRule Get(string name, Input<string> id, AuthorizationRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new AuthorizationRule(name, id, state, options);
        }
    }

    public sealed class AuthorizationRuleArgs : global::Pulumi.ResourceArgs
    {
        [Input("accessGroupId")]
        public Input<string>? AccessGroupId { get; set; }

        [Input("authorizeAllGroups")]
        public Input<bool>? AuthorizeAllGroups { get; set; }

        [Input("clientVpnEndpointId", required: true)]
        public Input<string> ClientVpnEndpointId { get; set; } = null!;

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("targetNetworkCidr", required: true)]
        public Input<string> TargetNetworkCidr { get; set; } = null!;

        public AuthorizationRuleArgs()
        {
        }
        public static new AuthorizationRuleArgs Empty => new AuthorizationRuleArgs();
    }

    public sealed class AuthorizationRuleState : global::Pulumi.ResourceArgs
    {
        [Input("accessGroupId")]
        public Input<string>? AccessGroupId { get; set; }

        [Input("authorizeAllGroups")]
        public Input<bool>? AuthorizeAllGroups { get; set; }

        [Input("clientVpnEndpointId")]
        public Input<string>? ClientVpnEndpointId { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("targetNetworkCidr")]
        public Input<string>? TargetNetworkCidr { get; set; }

        public AuthorizationRuleState()
        {
        }
        public static new AuthorizationRuleState Empty => new AuthorizationRuleState();
    }
}
