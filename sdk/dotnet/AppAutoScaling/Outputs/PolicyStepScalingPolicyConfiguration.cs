// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.AppAutoScaling.Outputs
{

    [OutputType]
    public sealed class PolicyStepScalingPolicyConfiguration
    {
        /// <summary>
        /// Whether the adjustment is an absolute number or a percentage of the current capacity. Valid values are `ChangeInCapacity`, `ExactCapacity`, and `PercentChangeInCapacity`.
        /// </summary>
        public readonly string? AdjustmentType;
        /// <summary>
        /// Amount of time, in seconds, after a scaling activity completes and before the next scaling activity can start.
        /// </summary>
        public readonly int? Cooldown;
        /// <summary>
        /// Aggregation type for the policy's metrics. Valid values are "Minimum", "Maximum", and "Average". Without a value, AWS will treat the aggregation type as "Average".
        /// </summary>
        public readonly string? MetricAggregationType;
        /// <summary>
        /// Minimum number to adjust your scalable dimension as a result of a scaling activity. If the adjustment type is PercentChangeInCapacity, the scaling policy changes the scalable dimension of the scalable target by this amount.
        /// </summary>
        public readonly int? MinAdjustmentMagnitude;
        /// <summary>
        /// Set of adjustments that manage scaling. These have the following structure:
        /// </summary>
        public readonly ImmutableArray<Outputs.PolicyStepScalingPolicyConfigurationStepAdjustment> StepAdjustments;

        [OutputConstructor]
        private PolicyStepScalingPolicyConfiguration(
            string? adjustmentType,

            int? cooldown,

            string? metricAggregationType,

            int? minAdjustmentMagnitude,

            ImmutableArray<Outputs.PolicyStepScalingPolicyConfigurationStepAdjustment> stepAdjustments)
        {
            AdjustmentType = adjustmentType;
            Cooldown = cooldown;
            MetricAggregationType = metricAggregationType;
            MinAdjustmentMagnitude = minAdjustmentMagnitude;
            StepAdjustments = stepAdjustments;
        }
    }
}
