// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.AppAutoScaling.Inputs
{

    public sealed class PolicyPredictiveScalingPolicyConfigurationGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The behavior that should be applied if the forecast capacity approaches or exceeds the maximum capacity. Valid values are `HonorMaxCapacity` and `IncreaseMaxCapacity`.
        /// </summary>
        [Input("maxCapacityBreachBehavior")]
        public Input<string>? MaxCapacityBreachBehavior { get; set; }

        /// <summary>
        /// Size of the capacity buffer to use when the forecast capacity is close to or exceeds the maximum capacity. The value is specified as a percentage relative to the forecast capacity. Required if the `MaxCapacityBreachBehavior` argument is set to `IncreaseMaxCapacity`, and cannot be used otherwise.
        /// </summary>
        [Input("maxCapacityBuffer")]
        public Input<int>? MaxCapacityBuffer { get; set; }

        [Input("metricSpecifications", required: true)]
        private InputList<Inputs.PolicyPredictiveScalingPolicyConfigurationMetricSpecificationGetArgs>? _metricSpecifications;

        /// <summary>
        /// Metrics and target utilization to use for predictive scaling. See supported fields below.
        /// </summary>
        public InputList<Inputs.PolicyPredictiveScalingPolicyConfigurationMetricSpecificationGetArgs> MetricSpecifications
        {
            get => _metricSpecifications ?? (_metricSpecifications = new InputList<Inputs.PolicyPredictiveScalingPolicyConfigurationMetricSpecificationGetArgs>());
            set => _metricSpecifications = value;
        }

        /// <summary>
        /// Predictive scaling mode. Valid values are `ForecastOnly` and `ForecastAndScale`.
        /// </summary>
        [Input("mode")]
        public Input<string>? Mode { get; set; }

        /// <summary>
        /// Amount of time, in seconds, that the start time can be advanced.
        /// </summary>
        [Input("schedulingBufferTime")]
        public Input<int>? SchedulingBufferTime { get; set; }

        public PolicyPredictiveScalingPolicyConfigurationGetArgs()
        {
        }
        public static new PolicyPredictiveScalingPolicyConfigurationGetArgs Empty => new PolicyPredictiveScalingPolicyConfigurationGetArgs();
    }
}
