// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Sfn
{
    /// <summary>
    /// Provides a Step Function State Machine Alias.
    /// 
    /// ## Example Usage
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var sfnAlias = new Aws.Sfn.Alias("sfnAlias", new()
    ///     {
    ///         Name = "my_sfn_alias",
    ///         RoutingConfigurations = new[]
    ///         {
    ///             new Aws.Sfn.Inputs.AliasRoutingConfigurationArgs
    ///             {
    ///                 StateMachineVersionArn = aws_sfn_state_machine.Sfn_test.State_machine_version_arn,
    ///                 Weight = 100,
    ///             },
    ///         },
    ///     });
    /// 
    ///     var mySfnAlias = new Aws.Sfn.Alias("mySfnAlias", new()
    ///     {
    ///         Name = "my_sfn_alias",
    ///         RoutingConfigurations = new[]
    ///         {
    ///             new Aws.Sfn.Inputs.AliasRoutingConfigurationArgs
    ///             {
    ///                 StateMachineVersionArn = "arn:aws:states:us-east-1:12345:stateMachine:demo:3",
    ///                 Weight = 50,
    ///             },
    ///             new Aws.Sfn.Inputs.AliasRoutingConfigurationArgs
    ///             {
    ///                 StateMachineVersionArn = "arn:aws:states:us-east-1:12345:stateMachine:demo:2",
    ///                 Weight = 50,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// terraform import {
    /// 
    ///  to = aws_sfn_alias.foo
    /// 
    ///  id = "arn:aws:states:us-east-1:123456789098:stateMachine:myStateMachine:foo" } Using `pulumi import`, import SFN (Step Functions) Alias using the `arn`. For exampleconsole % pulumi import aws_sfn_alias.foo arn:aws:states:us-east-1:123456789098:stateMachine:myStateMachine:foo
    /// </summary>
    [AwsResourceType("aws:sfn/alias:Alias")]
    public partial class Alias : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) identifying your state machine alias.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// The date the state machine alias was created.
        /// </summary>
        [Output("creationDate")]
        public Output<string> CreationDate { get; private set; } = null!;

        /// <summary>
        /// Description of the alias.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Name for the alias you are creating.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The StateMachine alias' route configuration settings. Fields documented below
        /// </summary>
        [Output("routingConfigurations")]
        public Output<ImmutableArray<Outputs.AliasRoutingConfiguration>> RoutingConfigurations { get; private set; } = null!;


        /// <summary>
        /// Create a Alias resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Alias(string name, AliasArgs args, CustomResourceOptions? options = null)
            : base("aws:sfn/alias:Alias", name, args ?? new AliasArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Alias(string name, Input<string> id, AliasState? state = null, CustomResourceOptions? options = null)
            : base("aws:sfn/alias:Alias", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Alias resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Alias Get(string name, Input<string> id, AliasState? state = null, CustomResourceOptions? options = null)
        {
            return new Alias(name, id, state, options);
        }
    }

    public sealed class AliasArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description of the alias.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Name for the alias you are creating.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("routingConfigurations", required: true)]
        private InputList<Inputs.AliasRoutingConfigurationArgs>? _routingConfigurations;

        /// <summary>
        /// The StateMachine alias' route configuration settings. Fields documented below
        /// </summary>
        public InputList<Inputs.AliasRoutingConfigurationArgs> RoutingConfigurations
        {
            get => _routingConfigurations ?? (_routingConfigurations = new InputList<Inputs.AliasRoutingConfigurationArgs>());
            set => _routingConfigurations = value;
        }

        public AliasArgs()
        {
        }
        public static new AliasArgs Empty => new AliasArgs();
    }

    public sealed class AliasState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) identifying your state machine alias.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// The date the state machine alias was created.
        /// </summary>
        [Input("creationDate")]
        public Input<string>? CreationDate { get; set; }

        /// <summary>
        /// Description of the alias.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Name for the alias you are creating.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("routingConfigurations")]
        private InputList<Inputs.AliasRoutingConfigurationGetArgs>? _routingConfigurations;

        /// <summary>
        /// The StateMachine alias' route configuration settings. Fields documented below
        /// </summary>
        public InputList<Inputs.AliasRoutingConfigurationGetArgs> RoutingConfigurations
        {
            get => _routingConfigurations ?? (_routingConfigurations = new InputList<Inputs.AliasRoutingConfigurationGetArgs>());
            set => _routingConfigurations = value;
        }

        public AliasState()
        {
        }
        public static new AliasState Empty => new AliasState();
    }
}
