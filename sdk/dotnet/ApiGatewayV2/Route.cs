// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.ApiGatewayV2
{
    [AwsResourceType("aws:apigatewayv2/route:Route")]
    public partial class Route : global::Pulumi.CustomResource
    {
        [Output("apiId")]
        public Output<string> ApiId { get; private set; } = null!;

        [Output("apiKeyRequired")]
        public Output<bool?> ApiKeyRequired { get; private set; } = null!;

        [Output("authorizationScopes")]
        public Output<ImmutableArray<string>> AuthorizationScopes { get; private set; } = null!;

        [Output("authorizationType")]
        public Output<string?> AuthorizationType { get; private set; } = null!;

        [Output("authorizerId")]
        public Output<string?> AuthorizerId { get; private set; } = null!;

        [Output("modelSelectionExpression")]
        public Output<string?> ModelSelectionExpression { get; private set; } = null!;

        [Output("operationName")]
        public Output<string?> OperationName { get; private set; } = null!;

        [Output("requestModels")]
        public Output<ImmutableDictionary<string, string>?> RequestModels { get; private set; } = null!;

        [Output("requestParameters")]
        public Output<ImmutableArray<Outputs.RouteRequestParameter>> RequestParameters { get; private set; } = null!;

        [Output("routeKey")]
        public Output<string> RouteKey { get; private set; } = null!;

        [Output("routeResponseSelectionExpression")]
        public Output<string?> RouteResponseSelectionExpression { get; private set; } = null!;

        [Output("target")]
        public Output<string?> Target { get; private set; } = null!;


        /// <summary>
        /// Create a Route resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Route(string name, RouteArgs args, CustomResourceOptions? options = null)
            : base("aws:apigatewayv2/route:Route", name, args ?? new RouteArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Route(string name, Input<string> id, RouteState? state = null, CustomResourceOptions? options = null)
            : base("aws:apigatewayv2/route:Route", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Route resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Route Get(string name, Input<string> id, RouteState? state = null, CustomResourceOptions? options = null)
        {
            return new Route(name, id, state, options);
        }
    }

    public sealed class RouteArgs : global::Pulumi.ResourceArgs
    {
        [Input("apiId", required: true)]
        public Input<string> ApiId { get; set; } = null!;

        [Input("apiKeyRequired")]
        public Input<bool>? ApiKeyRequired { get; set; }

        [Input("authorizationScopes")]
        private InputList<string>? _authorizationScopes;
        public InputList<string> AuthorizationScopes
        {
            get => _authorizationScopes ?? (_authorizationScopes = new InputList<string>());
            set => _authorizationScopes = value;
        }

        [Input("authorizationType")]
        public Input<string>? AuthorizationType { get; set; }

        [Input("authorizerId")]
        public Input<string>? AuthorizerId { get; set; }

        [Input("modelSelectionExpression")]
        public Input<string>? ModelSelectionExpression { get; set; }

        [Input("operationName")]
        public Input<string>? OperationName { get; set; }

        [Input("requestModels")]
        private InputMap<string>? _requestModels;
        public InputMap<string> RequestModels
        {
            get => _requestModels ?? (_requestModels = new InputMap<string>());
            set => _requestModels = value;
        }

        [Input("requestParameters")]
        private InputList<Inputs.RouteRequestParameterArgs>? _requestParameters;
        public InputList<Inputs.RouteRequestParameterArgs> RequestParameters
        {
            get => _requestParameters ?? (_requestParameters = new InputList<Inputs.RouteRequestParameterArgs>());
            set => _requestParameters = value;
        }

        [Input("routeKey", required: true)]
        public Input<string> RouteKey { get; set; } = null!;

        [Input("routeResponseSelectionExpression")]
        public Input<string>? RouteResponseSelectionExpression { get; set; }

        [Input("target")]
        public Input<string>? Target { get; set; }

        public RouteArgs()
        {
        }
        public static new RouteArgs Empty => new RouteArgs();
    }

    public sealed class RouteState : global::Pulumi.ResourceArgs
    {
        [Input("apiId")]
        public Input<string>? ApiId { get; set; }

        [Input("apiKeyRequired")]
        public Input<bool>? ApiKeyRequired { get; set; }

        [Input("authorizationScopes")]
        private InputList<string>? _authorizationScopes;
        public InputList<string> AuthorizationScopes
        {
            get => _authorizationScopes ?? (_authorizationScopes = new InputList<string>());
            set => _authorizationScopes = value;
        }

        [Input("authorizationType")]
        public Input<string>? AuthorizationType { get; set; }

        [Input("authorizerId")]
        public Input<string>? AuthorizerId { get; set; }

        [Input("modelSelectionExpression")]
        public Input<string>? ModelSelectionExpression { get; set; }

        [Input("operationName")]
        public Input<string>? OperationName { get; set; }

        [Input("requestModels")]
        private InputMap<string>? _requestModels;
        public InputMap<string> RequestModels
        {
            get => _requestModels ?? (_requestModels = new InputMap<string>());
            set => _requestModels = value;
        }

        [Input("requestParameters")]
        private InputList<Inputs.RouteRequestParameterGetArgs>? _requestParameters;
        public InputList<Inputs.RouteRequestParameterGetArgs> RequestParameters
        {
            get => _requestParameters ?? (_requestParameters = new InputList<Inputs.RouteRequestParameterGetArgs>());
            set => _requestParameters = value;
        }

        [Input("routeKey")]
        public Input<string>? RouteKey { get; set; }

        [Input("routeResponseSelectionExpression")]
        public Input<string>? RouteResponseSelectionExpression { get; set; }

        [Input("target")]
        public Input<string>? Target { get; set; }

        public RouteState()
        {
        }
        public static new RouteState Empty => new RouteState();
    }
}
