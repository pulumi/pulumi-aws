// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.ApiGatewayV2
{
    [AwsResourceType("aws:apigatewayv2/authorizer:Authorizer")]
    public partial class Authorizer : global::Pulumi.CustomResource
    {
        [Output("apiId")]
        public Output<string> ApiId { get; private set; } = null!;

        [Output("authorizerCredentialsArn")]
        public Output<string?> AuthorizerCredentialsArn { get; private set; } = null!;

        [Output("authorizerPayloadFormatVersion")]
        public Output<string?> AuthorizerPayloadFormatVersion { get; private set; } = null!;

        [Output("authorizerResultTtlInSeconds")]
        public Output<int> AuthorizerResultTtlInSeconds { get; private set; } = null!;

        [Output("authorizerType")]
        public Output<string> AuthorizerType { get; private set; } = null!;

        [Output("authorizerUri")]
        public Output<string?> AuthorizerUri { get; private set; } = null!;

        [Output("enableSimpleResponses")]
        public Output<bool?> EnableSimpleResponses { get; private set; } = null!;

        [Output("identitySources")]
        public Output<ImmutableArray<string>> IdentitySources { get; private set; } = null!;

        [Output("jwtConfiguration")]
        public Output<Outputs.AuthorizerJwtConfiguration?> JwtConfiguration { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a Authorizer resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Authorizer(string name, AuthorizerArgs args, CustomResourceOptions? options = null)
            : base("aws:apigatewayv2/authorizer:Authorizer", name, args ?? new AuthorizerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Authorizer(string name, Input<string> id, AuthorizerState? state = null, CustomResourceOptions? options = null)
            : base("aws:apigatewayv2/authorizer:Authorizer", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Authorizer resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Authorizer Get(string name, Input<string> id, AuthorizerState? state = null, CustomResourceOptions? options = null)
        {
            return new Authorizer(name, id, state, options);
        }
    }

    public sealed class AuthorizerArgs : global::Pulumi.ResourceArgs
    {
        [Input("apiId", required: true)]
        public Input<string> ApiId { get; set; } = null!;

        [Input("authorizerCredentialsArn")]
        public Input<string>? AuthorizerCredentialsArn { get; set; }

        [Input("authorizerPayloadFormatVersion")]
        public Input<string>? AuthorizerPayloadFormatVersion { get; set; }

        [Input("authorizerResultTtlInSeconds")]
        public Input<int>? AuthorizerResultTtlInSeconds { get; set; }

        [Input("authorizerType", required: true)]
        public Input<string> AuthorizerType { get; set; } = null!;

        [Input("authorizerUri")]
        public Input<string>? AuthorizerUri { get; set; }

        [Input("enableSimpleResponses")]
        public Input<bool>? EnableSimpleResponses { get; set; }

        [Input("identitySources")]
        private InputList<string>? _identitySources;
        public InputList<string> IdentitySources
        {
            get => _identitySources ?? (_identitySources = new InputList<string>());
            set => _identitySources = value;
        }

        [Input("jwtConfiguration")]
        public Input<Inputs.AuthorizerJwtConfigurationArgs>? JwtConfiguration { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        public AuthorizerArgs()
        {
        }
        public static new AuthorizerArgs Empty => new AuthorizerArgs();
    }

    public sealed class AuthorizerState : global::Pulumi.ResourceArgs
    {
        [Input("apiId")]
        public Input<string>? ApiId { get; set; }

        [Input("authorizerCredentialsArn")]
        public Input<string>? AuthorizerCredentialsArn { get; set; }

        [Input("authorizerPayloadFormatVersion")]
        public Input<string>? AuthorizerPayloadFormatVersion { get; set; }

        [Input("authorizerResultTtlInSeconds")]
        public Input<int>? AuthorizerResultTtlInSeconds { get; set; }

        [Input("authorizerType")]
        public Input<string>? AuthorizerType { get; set; }

        [Input("authorizerUri")]
        public Input<string>? AuthorizerUri { get; set; }

        [Input("enableSimpleResponses")]
        public Input<bool>? EnableSimpleResponses { get; set; }

        [Input("identitySources")]
        private InputList<string>? _identitySources;
        public InputList<string> IdentitySources
        {
            get => _identitySources ?? (_identitySources = new InputList<string>());
            set => _identitySources = value;
        }

        [Input("jwtConfiguration")]
        public Input<Inputs.AuthorizerJwtConfigurationGetArgs>? JwtConfiguration { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        public AuthorizerState()
        {
        }
        public static new AuthorizerState Empty => new AuthorizerState();
    }
}
