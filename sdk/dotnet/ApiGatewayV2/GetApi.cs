// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.ApiGatewayV2
{
    public static class GetApi
    {
        public static Task<GetApiResult> InvokeAsync(GetApiArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApiResult>("aws:apigatewayv2/getApi:getApi", args ?? new GetApiArgs(), options.WithDefaults());

        public static Output<GetApiResult> Invoke(GetApiInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApiResult>("aws:apigatewayv2/getApi:getApi", args ?? new GetApiInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApiArgs : global::Pulumi.InvokeArgs
    {
        [Input("apiId", required: true)]
        public string ApiId { get; set; } = null!;

        [Input("tags")]
        private Dictionary<string, string>? _tags;
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetApiArgs()
        {
        }
        public static new GetApiArgs Empty => new GetApiArgs();
    }

    public sealed class GetApiInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("apiId", required: true)]
        public Input<string> ApiId { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetApiInvokeArgs()
        {
        }
        public static new GetApiInvokeArgs Empty => new GetApiInvokeArgs();
    }


    [OutputType]
    public sealed class GetApiResult
    {
        public readonly string ApiEndpoint;
        public readonly string ApiId;
        public readonly string ApiKeySelectionExpression;
        public readonly string Arn;
        public readonly ImmutableArray<Outputs.GetApiCorsConfigurationResult> CorsConfigurations;
        public readonly string Description;
        public readonly bool DisableExecuteApiEndpoint;
        public readonly string ExecutionArn;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly string ProtocolType;
        public readonly string RouteSelectionExpression;
        public readonly ImmutableDictionary<string, string> Tags;
        public readonly string Version;

        [OutputConstructor]
        private GetApiResult(
            string apiEndpoint,

            string apiId,

            string apiKeySelectionExpression,

            string arn,

            ImmutableArray<Outputs.GetApiCorsConfigurationResult> corsConfigurations,

            string description,

            bool disableExecuteApiEndpoint,

            string executionArn,

            string id,

            string name,

            string protocolType,

            string routeSelectionExpression,

            ImmutableDictionary<string, string> tags,

            string version)
        {
            ApiEndpoint = apiEndpoint;
            ApiId = apiId;
            ApiKeySelectionExpression = apiKeySelectionExpression;
            Arn = arn;
            CorsConfigurations = corsConfigurations;
            Description = description;
            DisableExecuteApiEndpoint = disableExecuteApiEndpoint;
            ExecutionArn = executionArn;
            Id = id;
            Name = name;
            ProtocolType = protocolType;
            RouteSelectionExpression = routeSelectionExpression;
            Tags = tags;
            Version = version;
        }
    }
}
