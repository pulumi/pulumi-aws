// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.S3Control.Outputs
{

    [OutputType]
    public sealed class StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestination
    {
        /// <summary>
        /// The account ID of the owner of the S3 Storage Lens metrics export bucket.
        /// </summary>
        public readonly string AccountId;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the bucket.
        /// </summary>
        public readonly string Arn;
        /// <summary>
        /// Encryption of the metrics exports in this bucket. See Encryption below for more details.
        /// </summary>
        public readonly Outputs.StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryption? Encryption;
        /// <summary>
        /// The export format. Valid values: `CSV`, `Parquet`.
        /// </summary>
        public readonly string Format;
        /// <summary>
        /// The schema version of the export file. Valid values: `V_1`.
        /// </summary>
        public readonly string OutputSchemaVersion;
        /// <summary>
        /// The prefix of the destination bucket where the metrics export will be delivered.
        /// </summary>
        public readonly string? Prefix;

        [OutputConstructor]
        private StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestination(
            string accountId,

            string arn,

            Outputs.StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryption? encryption,

            string format,

            string outputSchemaVersion,

            string? prefix)
        {
            AccountId = accountId;
            Arn = arn;
            Encryption = encryption;
            Format = format;
            OutputSchemaVersion = outputSchemaVersion;
            Prefix = prefix;
        }
    }
}
