// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.S3Control
{
    /// <summary>
    /// Provides a resource to manage an S3 Access Point resource policy.
    /// 
    /// &gt; **NOTE on Access Points and Access Point Policies:** The provider provides both a standalone Access Point Policy resource and an Access Point resource with a resource policy defined in-line. You cannot use an Access Point with in-line resource policy in conjunction with an Access Point Policy resource. Doing so will cause a conflict of policies and will overwrite the access point's resource policy.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using System.Text.Json;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleBucketV2 = new Aws.S3.BucketV2("exampleBucketV2");
    /// 
    ///     var exampleAccessPoint = new Aws.S3.AccessPoint("exampleAccessPoint", new()
    ///     {
    ///         Bucket = exampleBucketV2.Id,
    ///         PublicAccessBlockConfiguration = new Aws.S3.Inputs.AccessPointPublicAccessBlockConfigurationArgs
    ///         {
    ///             BlockPublicAcls = true,
    ///             BlockPublicPolicy = false,
    ///             IgnorePublicAcls = true,
    ///             RestrictPublicBuckets = false,
    ///         },
    ///     });
    /// 
    ///     var exampleAccessPointPolicy = new Aws.S3Control.AccessPointPolicy("exampleAccessPointPolicy", new()
    ///     {
    ///         AccessPointArn = exampleAccessPoint.Arn,
    ///         Policy = exampleAccessPoint.Arn.Apply(arn =&gt; JsonSerializer.Serialize(new Dictionary&lt;string, object?&gt;
    ///         {
    ///             ["Version"] = "2008-10-17",
    ///             ["Statement"] = new[]
    ///             {
    ///                 new Dictionary&lt;string, object?&gt;
    ///                 {
    ///                     ["Effect"] = "Allow",
    ///                     ["Action"] = "s3:GetObjectTagging",
    ///                     ["Principal"] = new Dictionary&lt;string, object?&gt;
    ///                     {
    ///                         ["AWS"] = "*",
    ///                     },
    ///                     ["Resource"] = $"{arn}/object/*",
    ///                 },
    ///             },
    ///         })),
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import Access Point policies using the `access_point_arn`. For example:
    /// 
    /// ```sh
    ///  $ pulumi import aws:s3control/accessPointPolicy:AccessPointPolicy example arn:aws:s3:us-west-2:123456789012:accesspoint/example
    /// ```
    /// </summary>
    [AwsResourceType("aws:s3control/accessPointPolicy:AccessPointPolicy")]
    public partial class AccessPointPolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ARN of the access point that you want to associate with the specified policy.
        /// </summary>
        [Output("accessPointArn")]
        public Output<string> AccessPointArn { get; private set; } = null!;

        /// <summary>
        /// Indicates whether this access point currently has a policy that allows public access.
        /// </summary>
        [Output("hasPublicAccessPolicy")]
        public Output<bool> HasPublicAccessPolicy { get; private set; } = null!;

        /// <summary>
        /// The policy that you want to apply to the specified access point.
        /// </summary>
        [Output("policy")]
        public Output<string> Policy { get; private set; } = null!;


        /// <summary>
        /// Create a AccessPointPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AccessPointPolicy(string name, AccessPointPolicyArgs args, CustomResourceOptions? options = null)
            : base("aws:s3control/accessPointPolicy:AccessPointPolicy", name, args ?? new AccessPointPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AccessPointPolicy(string name, Input<string> id, AccessPointPolicyState? state = null, CustomResourceOptions? options = null)
            : base("aws:s3control/accessPointPolicy:AccessPointPolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AccessPointPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AccessPointPolicy Get(string name, Input<string> id, AccessPointPolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new AccessPointPolicy(name, id, state, options);
        }
    }

    public sealed class AccessPointPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ARN of the access point that you want to associate with the specified policy.
        /// </summary>
        [Input("accessPointArn", required: true)]
        public Input<string> AccessPointArn { get; set; } = null!;

        /// <summary>
        /// The policy that you want to apply to the specified access point.
        /// </summary>
        [Input("policy", required: true)]
        public Input<string> Policy { get; set; } = null!;

        public AccessPointPolicyArgs()
        {
        }
        public static new AccessPointPolicyArgs Empty => new AccessPointPolicyArgs();
    }

    public sealed class AccessPointPolicyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ARN of the access point that you want to associate with the specified policy.
        /// </summary>
        [Input("accessPointArn")]
        public Input<string>? AccessPointArn { get; set; }

        /// <summary>
        /// Indicates whether this access point currently has a policy that allows public access.
        /// </summary>
        [Input("hasPublicAccessPolicy")]
        public Input<bool>? HasPublicAccessPolicy { get; set; }

        /// <summary>
        /// The policy that you want to apply to the specified access point.
        /// </summary>
        [Input("policy")]
        public Input<string>? Policy { get; set; }

        public AccessPointPolicyState()
        {
        }
        public static new AccessPointPolicyState Empty => new AccessPointPolicyState();
    }
}
