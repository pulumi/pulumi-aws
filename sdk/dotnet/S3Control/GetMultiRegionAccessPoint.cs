// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.S3Control
{
    public static class GetMultiRegionAccessPoint
    {
        /// <summary>
        /// Provides details on a specific S3 Multi-Region Access Point.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const example = aws.s3control.getMultiRegionAccessPoint({
        ///     name: "example",
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// example = aws.s3control.get_multi_region_access_point(name="example")
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.S3Control.GetMultiRegionAccessPoint.Invoke(new()
        ///     {
        ///         Name = "example",
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/s3control"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := s3control.LookupMultiRegionAccessPoint(ctx, &amp;s3control.LookupMultiRegionAccessPointArgs{
        /// 			Name: "example",
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.s3control.S3controlFunctions;
        /// import com.pulumi.aws.s3control.inputs.GetMultiRegionAccessPointArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var example = S3controlFunctions.getMultiRegionAccessPoint(GetMultiRegionAccessPointArgs.builder()
        ///             .name("example")
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   example:
        ///     fn::invoke:
        ///       Function: aws:s3control:getMultiRegionAccessPoint
        ///       Arguments:
        ///         name: example
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetMultiRegionAccessPointResult> InvokeAsync(GetMultiRegionAccessPointArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMultiRegionAccessPointResult>("aws:s3control/getMultiRegionAccessPoint:getMultiRegionAccessPoint", args ?? new GetMultiRegionAccessPointArgs(), options.WithDefaults());

        /// <summary>
        /// Provides details on a specific S3 Multi-Region Access Point.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const example = aws.s3control.getMultiRegionAccessPoint({
        ///     name: "example",
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// example = aws.s3control.get_multi_region_access_point(name="example")
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.S3Control.GetMultiRegionAccessPoint.Invoke(new()
        ///     {
        ///         Name = "example",
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/s3control"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := s3control.LookupMultiRegionAccessPoint(ctx, &amp;s3control.LookupMultiRegionAccessPointArgs{
        /// 			Name: "example",
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.s3control.S3controlFunctions;
        /// import com.pulumi.aws.s3control.inputs.GetMultiRegionAccessPointArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var example = S3controlFunctions.getMultiRegionAccessPoint(GetMultiRegionAccessPointArgs.builder()
        ///             .name("example")
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   example:
        ///     fn::invoke:
        ///       Function: aws:s3control:getMultiRegionAccessPoint
        ///       Arguments:
        ///         name: example
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetMultiRegionAccessPointResult> Invoke(GetMultiRegionAccessPointInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMultiRegionAccessPointResult>("aws:s3control/getMultiRegionAccessPoint:getMultiRegionAccessPoint", args ?? new GetMultiRegionAccessPointInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMultiRegionAccessPointArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The AWS account ID of the S3 Multi-Region Access Point. Defaults to automatically determined account ID of the AWS provider.
        /// </summary>
        [Input("accountId")]
        public string? AccountId { get; set; }

        /// <summary>
        /// The name of the Multi-Region Access Point.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetMultiRegionAccessPointArgs()
        {
        }
        public static new GetMultiRegionAccessPointArgs Empty => new GetMultiRegionAccessPointArgs();
    }

    public sealed class GetMultiRegionAccessPointInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The AWS account ID of the S3 Multi-Region Access Point. Defaults to automatically determined account ID of the AWS provider.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// The name of the Multi-Region Access Point.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetMultiRegionAccessPointInvokeArgs()
        {
        }
        public static new GetMultiRegionAccessPointInvokeArgs Empty => new GetMultiRegionAccessPointInvokeArgs();
    }


    [OutputType]
    public sealed class GetMultiRegionAccessPointResult
    {
        public readonly string AccountId;
        /// <summary>
        /// The alias for the Multi-Region Access Point.
        /// </summary>
        public readonly string Alias;
        /// <summary>
        /// Amazon Resource Name (ARN) of the Multi-Region Access Point.
        /// </summary>
        public readonly string Arn;
        /// <summary>
        /// Timestamp when the resource has been created.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// The DNS domain name of the S3 Multi-Region Access Point in the format _`alias`_.accesspoint.s3-global.amazonaws.com. For more information, see the documentation on [Multi-Region Access Point Requests](https://docs.aws.amazon.com/AmazonS3/latest/userguide/MultiRegionAccessPointRequests.html).
        /// </summary>
        public readonly string DomainName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        /// <summary>
        /// Public Access Block of the Multi-Region Access Point. Detailed below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMultiRegionAccessPointPublicAccessBlockResult> PublicAccessBlocks;
        /// <summary>
        /// A collection of the regions and buckets associated with the Multi-Region Access Point.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMultiRegionAccessPointRegionResult> Regions;
        /// <summary>
        /// The current status of the Multi-Region Access Point.
        /// </summary>
        public readonly string Status;

        [OutputConstructor]
        private GetMultiRegionAccessPointResult(
            string accountId,

            string alias,

            string arn,

            string createdAt,

            string domainName,

            string id,

            string name,

            ImmutableArray<Outputs.GetMultiRegionAccessPointPublicAccessBlockResult> publicAccessBlocks,

            ImmutableArray<Outputs.GetMultiRegionAccessPointRegionResult> regions,

            string status)
        {
            AccountId = accountId;
            Alias = alias;
            Arn = arn;
            CreatedAt = createdAt;
            DomainName = domainName;
            Id = id;
            Name = name;
            PublicAccessBlocks = publicAccessBlocks;
            Regions = regions;
            Status = status;
        }
    }
}
