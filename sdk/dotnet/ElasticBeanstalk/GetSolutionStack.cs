// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.ElasticBeanstalk
{
    public static class GetSolutionStack
    {
        /// <summary>
        /// Use this data source to get the name of a elastic beanstalk solution stack.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var multiDocker = Aws.ElasticBeanstalk.GetSolutionStack.Invoke(new()
        ///     {
        ///         MostRecent = true,
        ///         NameRegex = "^64bit Amazon Linux (.*) Multi-container Docker (.*)$",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetSolutionStackResult> InvokeAsync(GetSolutionStackArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSolutionStackResult>("aws:elasticbeanstalk/getSolutionStack:getSolutionStack", args ?? new GetSolutionStackArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get the name of a elastic beanstalk solution stack.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var multiDocker = Aws.ElasticBeanstalk.GetSolutionStack.Invoke(new()
        ///     {
        ///         MostRecent = true,
        ///         NameRegex = "^64bit Amazon Linux (.*) Multi-container Docker (.*)$",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetSolutionStackResult> Invoke(GetSolutionStackInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetSolutionStackResult>("aws:elasticbeanstalk/getSolutionStack:getSolutionStack", args ?? new GetSolutionStackInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSolutionStackArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// If more than one result is returned, use the most
        /// recent solution stack.
        /// </summary>
        [Input("mostRecent")]
        public bool? MostRecent { get; set; }

        /// <summary>
        /// Regex string to apply to the solution stack list returned
        /// by AWS. See [Elastic Beanstalk Supported Platforms][beanstalk-platforms] from
        /// AWS documentation for reference solution stack names.
        /// </summary>
        [Input("nameRegex", required: true)]
        public string NameRegex { get; set; } = null!;

        public GetSolutionStackArgs()
        {
        }
        public static new GetSolutionStackArgs Empty => new GetSolutionStackArgs();
    }

    public sealed class GetSolutionStackInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// If more than one result is returned, use the most
        /// recent solution stack.
        /// </summary>
        [Input("mostRecent")]
        public Input<bool>? MostRecent { get; set; }

        /// <summary>
        /// Regex string to apply to the solution stack list returned
        /// by AWS. See [Elastic Beanstalk Supported Platforms][beanstalk-platforms] from
        /// AWS documentation for reference solution stack names.
        /// </summary>
        [Input("nameRegex", required: true)]
        public Input<string> NameRegex { get; set; } = null!;

        public GetSolutionStackInvokeArgs()
        {
        }
        public static new GetSolutionStackInvokeArgs Empty => new GetSolutionStackInvokeArgs();
    }


    [OutputType]
    public sealed class GetSolutionStackResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool? MostRecent;
        /// <summary>
        /// Name of the solution stack.
        /// </summary>
        public readonly string Name;
        public readonly string NameRegex;

        [OutputConstructor]
        private GetSolutionStackResult(
            string id,

            bool? mostRecent,

            string name,

            string nameRegex)
        {
            Id = id;
            MostRecent = mostRecent;
            Name = name;
            NameRegex = nameRegex;
        }
    }
}
