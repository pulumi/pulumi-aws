// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi.Utilities;

namespace Pulumi.Aws.ElasticBeanstalk
{
    public static class GetApplication
    {
        /// <summary>
        /// Retrieve information about an Elastic Beanstalk Application.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(Aws.ElasticBeanstalk.GetApplication.InvokeAsync(new Aws.ElasticBeanstalk.GetApplicationArgs
        ///         {
        ///             Name = "example",
        ///         }));
        ///         this.Arn = example.Apply(example =&gt; example.Arn);
        ///         this.Description = example.Apply(example =&gt; example.Description);
        ///     }
        /// 
        ///     [Output("arn")]
        ///     public Output&lt;string&gt; Arn { get; set; }
        ///     [Output("description")]
        ///     public Output&lt;string&gt; Description { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetApplicationResult> InvokeAsync(GetApplicationArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetApplicationResult>("aws:elasticbeanstalk/getApplication:getApplication", args ?? new GetApplicationArgs(), options.WithVersion());

        /// <summary>
        /// Retrieve information about an Elastic Beanstalk Application.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(Aws.ElasticBeanstalk.GetApplication.InvokeAsync(new Aws.ElasticBeanstalk.GetApplicationArgs
        ///         {
        ///             Name = "example",
        ///         }));
        ///         this.Arn = example.Apply(example =&gt; example.Arn);
        ///         this.Description = example.Apply(example =&gt; example.Description);
        ///     }
        /// 
        ///     [Output("arn")]
        ///     public Output&lt;string&gt; Arn { get; set; }
        ///     [Output("description")]
        ///     public Output&lt;string&gt; Description { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetApplicationResult> Invoke(GetApplicationInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetApplicationResult>("aws:elasticbeanstalk/getApplication:getApplication", args ?? new GetApplicationInvokeArgs(), options.WithVersion());
    }


    public sealed class GetApplicationArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the application
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetApplicationArgs()
        {
        }
    }

    public sealed class GetApplicationInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the application
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetApplicationInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetApplicationResult
    {
        public readonly Outputs.GetApplicationAppversionLifecycleResult AppversionLifecycle;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the application.
        /// </summary>
        public readonly string Arn;
        /// <summary>
        /// Short description of the application
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;

        [OutputConstructor]
        private GetApplicationResult(
            Outputs.GetApplicationAppversionLifecycleResult appversionLifecycle,

            string arn,

            string description,

            string id,

            string name)
        {
            AppversionLifecycle = appversionLifecycle;
            Arn = arn;
            Description = description;
            Id = id;
            Name = name;
        }
    }
}
