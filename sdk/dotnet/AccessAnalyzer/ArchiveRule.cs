// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.AccessAnalyzer
{
    /// <summary>
    /// ## Example Usage
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.AccessAnalyzer.ArchiveRule("example", new()
    ///     {
    ///         AnalyzerName = "example-analyzer",
    ///         Filters = new[]
    ///         {
    ///             new Aws.AccessAnalyzer.Inputs.ArchiveRuleFilterArgs
    ///             {
    ///                 Criteria = "condition.aws:UserId",
    ///                 Eqs = new[]
    ///                 {
    ///                     "userid",
    ///                 },
    ///             },
    ///             new Aws.AccessAnalyzer.Inputs.ArchiveRuleFilterArgs
    ///             {
    ///                 Criteria = "error",
    ///                 Exists = "true",
    ///             },
    ///             new Aws.AccessAnalyzer.Inputs.ArchiveRuleFilterArgs
    ///             {
    ///                 Criteria = "isPublic",
    ///                 Eqs = new[]
    ///                 {
    ///                     "false",
    ///                 },
    ///             },
    ///         },
    ///         RuleName = "example-rule",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// AccessAnalyzer ArchiveRule can be imported using the `analyzer_name/rule_name`, e.g.,
    /// 
    /// ```sh
    ///  $ pulumi import aws:accessanalyzer/archiveRule:ArchiveRule example example-analyzer/example-rule
    /// ```
    /// </summary>
    [AwsResourceType("aws:accessanalyzer/archiveRule:ArchiveRule")]
    public partial class ArchiveRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Analyzer name.
        /// </summary>
        [Output("analyzerName")]
        public Output<string> AnalyzerName { get; private set; } = null!;

        /// <summary>
        /// Filter criteria for the archive rule. See Filter for more details.
        /// </summary>
        [Output("filters")]
        public Output<ImmutableArray<Outputs.ArchiveRuleFilter>> Filters { get; private set; } = null!;

        /// <summary>
        /// Rule name.
        /// </summary>
        [Output("ruleName")]
        public Output<string> RuleName { get; private set; } = null!;


        /// <summary>
        /// Create a ArchiveRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ArchiveRule(string name, ArchiveRuleArgs args, CustomResourceOptions? options = null)
            : base("aws:accessanalyzer/archiveRule:ArchiveRule", name, args ?? new ArchiveRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ArchiveRule(string name, Input<string> id, ArchiveRuleState? state = null, CustomResourceOptions? options = null)
            : base("aws:accessanalyzer/archiveRule:ArchiveRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ArchiveRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ArchiveRule Get(string name, Input<string> id, ArchiveRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new ArchiveRule(name, id, state, options);
        }
    }

    public sealed class ArchiveRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Analyzer name.
        /// </summary>
        [Input("analyzerName", required: true)]
        public Input<string> AnalyzerName { get; set; } = null!;

        [Input("filters", required: true)]
        private InputList<Inputs.ArchiveRuleFilterArgs>? _filters;

        /// <summary>
        /// Filter criteria for the archive rule. See Filter for more details.
        /// </summary>
        public InputList<Inputs.ArchiveRuleFilterArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.ArchiveRuleFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Rule name.
        /// </summary>
        [Input("ruleName", required: true)]
        public Input<string> RuleName { get; set; } = null!;

        public ArchiveRuleArgs()
        {
        }
        public static new ArchiveRuleArgs Empty => new ArchiveRuleArgs();
    }

    public sealed class ArchiveRuleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Analyzer name.
        /// </summary>
        [Input("analyzerName")]
        public Input<string>? AnalyzerName { get; set; }

        [Input("filters")]
        private InputList<Inputs.ArchiveRuleFilterGetArgs>? _filters;

        /// <summary>
        /// Filter criteria for the archive rule. See Filter for more details.
        /// </summary>
        public InputList<Inputs.ArchiveRuleFilterGetArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.ArchiveRuleFilterGetArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Rule name.
        /// </summary>
        [Input("ruleName")]
        public Input<string>? RuleName { get; set; }

        public ArchiveRuleState()
        {
        }
        public static new ArchiveRuleState Empty => new ArchiveRuleState();
    }
}
