// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.AppConfig
{
    public static class GetEnvironments
    {
        /// <summary>
        /// Provides access to all Environments for an AppConfig Application. This will allow you to pass Environment IDs to another
        /// resource.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.AppConfig.GetEnvironments.Invoke(new()
        ///     {
        ///         ApplicationId = "a1d3rpe",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetEnvironmentsResult> InvokeAsync(GetEnvironmentsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEnvironmentsResult>("aws:appconfig/getEnvironments:getEnvironments", args ?? new GetEnvironmentsArgs(), options.WithDefaults());

        /// <summary>
        /// Provides access to all Environments for an AppConfig Application. This will allow you to pass Environment IDs to another
        /// resource.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.AppConfig.GetEnvironments.Invoke(new()
        ///     {
        ///         ApplicationId = "a1d3rpe",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetEnvironmentsResult> Invoke(GetEnvironmentsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEnvironmentsResult>("aws:appconfig/getEnvironments:getEnvironments", args ?? new GetEnvironmentsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEnvironmentsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the AppConfig Application.
        /// </summary>
        [Input("applicationId", required: true)]
        public string ApplicationId { get; set; } = null!;

        public GetEnvironmentsArgs()
        {
        }
        public static new GetEnvironmentsArgs Empty => new GetEnvironmentsArgs();
    }

    public sealed class GetEnvironmentsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the AppConfig Application.
        /// </summary>
        [Input("applicationId", required: true)]
        public Input<string> ApplicationId { get; set; } = null!;

        public GetEnvironmentsInvokeArgs()
        {
        }
        public static new GetEnvironmentsInvokeArgs Empty => new GetEnvironmentsInvokeArgs();
    }


    [OutputType]
    public sealed class GetEnvironmentsResult
    {
        public readonly string ApplicationId;
        /// <summary>
        /// Set of Environment IDs associated with this AppConfig Application.
        /// </summary>
        public readonly ImmutableArray<string> EnvironmentIds;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetEnvironmentsResult(
            string applicationId,

            ImmutableArray<string> environmentIds,

            string id)
        {
            ApplicationId = applicationId;
            EnvironmentIds = environmentIds;
            Id = id;
        }
    }
}
