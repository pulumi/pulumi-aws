// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.AppConfig
{
    public static class GetConfigurationProfile
    {
        public static Task<GetConfigurationProfileResult> InvokeAsync(GetConfigurationProfileArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetConfigurationProfileResult>("aws:appconfig/getConfigurationProfile:getConfigurationProfile", args ?? new GetConfigurationProfileArgs(), options.WithDefaults());

        public static Output<GetConfigurationProfileResult> Invoke(GetConfigurationProfileInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetConfigurationProfileResult>("aws:appconfig/getConfigurationProfile:getConfigurationProfile", args ?? new GetConfigurationProfileInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetConfigurationProfileArgs : global::Pulumi.InvokeArgs
    {
        [Input("applicationId", required: true)]
        public string ApplicationId { get; set; } = null!;

        [Input("configurationProfileId", required: true)]
        public string ConfigurationProfileId { get; set; } = null!;

        [Input("tags")]
        private Dictionary<string, string>? _tags;
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetConfigurationProfileArgs()
        {
        }
        public static new GetConfigurationProfileArgs Empty => new GetConfigurationProfileArgs();
    }

    public sealed class GetConfigurationProfileInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("applicationId", required: true)]
        public Input<string> ApplicationId { get; set; } = null!;

        [Input("configurationProfileId", required: true)]
        public Input<string> ConfigurationProfileId { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetConfigurationProfileInvokeArgs()
        {
        }
        public static new GetConfigurationProfileInvokeArgs Empty => new GetConfigurationProfileInvokeArgs();
    }


    [OutputType]
    public sealed class GetConfigurationProfileResult
    {
        public readonly string ApplicationId;
        public readonly string Arn;
        public readonly string ConfigurationProfileId;
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string LocationUri;
        public readonly string Name;
        public readonly string RetrievalRoleArn;
        public readonly ImmutableDictionary<string, string> Tags;
        public readonly string Type;
        public readonly ImmutableArray<Outputs.GetConfigurationProfileValidatorResult> Validators;

        [OutputConstructor]
        private GetConfigurationProfileResult(
            string applicationId,

            string arn,

            string configurationProfileId,

            string description,

            string id,

            string locationUri,

            string name,

            string retrievalRoleArn,

            ImmutableDictionary<string, string> tags,

            string type,

            ImmutableArray<Outputs.GetConfigurationProfileValidatorResult> validators)
        {
            ApplicationId = applicationId;
            Arn = arn;
            ConfigurationProfileId = configurationProfileId;
            Description = description;
            Id = id;
            LocationUri = locationUri;
            Name = name;
            RetrievalRoleArn = retrievalRoleArn;
            Tags = tags;
            Type = type;
            Validators = validators;
        }
    }
}
