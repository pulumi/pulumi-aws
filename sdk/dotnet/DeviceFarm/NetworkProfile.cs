// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.DeviceFarm
{
    /// <summary>
    /// Provides a resource to manage AWS Device Farm Network Profiles.
    /// âˆ‚
    /// &gt; **NOTE:** AWS currently has limited regional support for Device Farm (e.g., `us-west-2`). See [AWS Device Farm endpoints and quotas](https://docs.aws.amazon.com/general/latest/gr/devicefarm.html) for information on supported regions.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleProject = new Aws.DeviceFarm.Project("exampleProject");
    /// 
    ///     var exampleNetworkProfile = new Aws.DeviceFarm.NetworkProfile("exampleNetworkProfile", new()
    ///     {
    ///         ProjectArn = exampleProject.Arn,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import DeviceFarm Network Profiles using their ARN. For example:
    /// 
    /// ```sh
    ///  $ pulumi import aws:devicefarm/networkProfile:NetworkProfile example arn:aws:devicefarm:us-west-2:123456789012:networkprofile:4fa784c7-ccb4-4dbf-ba4f-02198320daa1
    /// ```
    /// </summary>
    [AwsResourceType("aws:devicefarm/networkProfile:NetworkProfile")]
    public partial class NetworkProfile : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Amazon Resource Name of this network profile.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// The description of the network profile.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The data throughput rate in bits per second, as an integer from `0` to `104857600`. Default value is `104857600`.
        /// </summary>
        [Output("downlinkBandwidthBits")]
        public Output<int?> DownlinkBandwidthBits { get; private set; } = null!;

        /// <summary>
        /// Delay time for all packets to destination in milliseconds as an integer from `0` to `2000`.
        /// </summary>
        [Output("downlinkDelayMs")]
        public Output<int?> DownlinkDelayMs { get; private set; } = null!;

        /// <summary>
        /// Time variation in the delay of received packets in milliseconds as an integer from `0` to `2000`.
        /// </summary>
        [Output("downlinkJitterMs")]
        public Output<int?> DownlinkJitterMs { get; private set; } = null!;

        /// <summary>
        /// Proportion of received packets that fail to arrive from `0` to `100` percent.
        /// </summary>
        [Output("downlinkLossPercent")]
        public Output<int?> DownlinkLossPercent { get; private set; } = null!;

        /// <summary>
        /// The name for the network profile.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ARN of the project for the network profile.
        /// </summary>
        [Output("projectArn")]
        public Output<string> ProjectArn { get; private set; } = null!;

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        /// <summary>
        /// The type of network profile to create. Valid values are listed are `PRIVATE` and `CURATED`.
        /// </summary>
        [Output("type")]
        public Output<string?> Type { get; private set; } = null!;

        /// <summary>
        /// The data throughput rate in bits per second, as an integer from `0` to `104857600`. Default value is `104857600`.
        /// </summary>
        [Output("uplinkBandwidthBits")]
        public Output<int?> UplinkBandwidthBits { get; private set; } = null!;

        /// <summary>
        /// Delay time for all packets to destination in milliseconds as an integer from `0` to `2000`.
        /// </summary>
        [Output("uplinkDelayMs")]
        public Output<int?> UplinkDelayMs { get; private set; } = null!;

        /// <summary>
        /// Time variation in the delay of received packets in milliseconds as an integer from `0` to `2000`.
        /// </summary>
        [Output("uplinkJitterMs")]
        public Output<int?> UplinkJitterMs { get; private set; } = null!;

        /// <summary>
        /// Proportion of received packets that fail to arrive from `0` to `100` percent.
        /// </summary>
        [Output("uplinkLossPercent")]
        public Output<int?> UplinkLossPercent { get; private set; } = null!;


        /// <summary>
        /// Create a NetworkProfile resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NetworkProfile(string name, NetworkProfileArgs args, CustomResourceOptions? options = null)
            : base("aws:devicefarm/networkProfile:NetworkProfile", name, args ?? new NetworkProfileArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NetworkProfile(string name, Input<string> id, NetworkProfileState? state = null, CustomResourceOptions? options = null)
            : base("aws:devicefarm/networkProfile:NetworkProfile", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NetworkProfile resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NetworkProfile Get(string name, Input<string> id, NetworkProfileState? state = null, CustomResourceOptions? options = null)
        {
            return new NetworkProfile(name, id, state, options);
        }
    }

    public sealed class NetworkProfileArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the network profile.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The data throughput rate in bits per second, as an integer from `0` to `104857600`. Default value is `104857600`.
        /// </summary>
        [Input("downlinkBandwidthBits")]
        public Input<int>? DownlinkBandwidthBits { get; set; }

        /// <summary>
        /// Delay time for all packets to destination in milliseconds as an integer from `0` to `2000`.
        /// </summary>
        [Input("downlinkDelayMs")]
        public Input<int>? DownlinkDelayMs { get; set; }

        /// <summary>
        /// Time variation in the delay of received packets in milliseconds as an integer from `0` to `2000`.
        /// </summary>
        [Input("downlinkJitterMs")]
        public Input<int>? DownlinkJitterMs { get; set; }

        /// <summary>
        /// Proportion of received packets that fail to arrive from `0` to `100` percent.
        /// </summary>
        [Input("downlinkLossPercent")]
        public Input<int>? DownlinkLossPercent { get; set; }

        /// <summary>
        /// The name for the network profile.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ARN of the project for the network profile.
        /// </summary>
        [Input("projectArn", required: true)]
        public Input<string> ProjectArn { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The type of network profile to create. Valid values are listed are `PRIVATE` and `CURATED`.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// The data throughput rate in bits per second, as an integer from `0` to `104857600`. Default value is `104857600`.
        /// </summary>
        [Input("uplinkBandwidthBits")]
        public Input<int>? UplinkBandwidthBits { get; set; }

        /// <summary>
        /// Delay time for all packets to destination in milliseconds as an integer from `0` to `2000`.
        /// </summary>
        [Input("uplinkDelayMs")]
        public Input<int>? UplinkDelayMs { get; set; }

        /// <summary>
        /// Time variation in the delay of received packets in milliseconds as an integer from `0` to `2000`.
        /// </summary>
        [Input("uplinkJitterMs")]
        public Input<int>? UplinkJitterMs { get; set; }

        /// <summary>
        /// Proportion of received packets that fail to arrive from `0` to `100` percent.
        /// </summary>
        [Input("uplinkLossPercent")]
        public Input<int>? UplinkLossPercent { get; set; }

        public NetworkProfileArgs()
        {
        }
        public static new NetworkProfileArgs Empty => new NetworkProfileArgs();
    }

    public sealed class NetworkProfileState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Amazon Resource Name of this network profile.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// The description of the network profile.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The data throughput rate in bits per second, as an integer from `0` to `104857600`. Default value is `104857600`.
        /// </summary>
        [Input("downlinkBandwidthBits")]
        public Input<int>? DownlinkBandwidthBits { get; set; }

        /// <summary>
        /// Delay time for all packets to destination in milliseconds as an integer from `0` to `2000`.
        /// </summary>
        [Input("downlinkDelayMs")]
        public Input<int>? DownlinkDelayMs { get; set; }

        /// <summary>
        /// Time variation in the delay of received packets in milliseconds as an integer from `0` to `2000`.
        /// </summary>
        [Input("downlinkJitterMs")]
        public Input<int>? DownlinkJitterMs { get; set; }

        /// <summary>
        /// Proportion of received packets that fail to arrive from `0` to `100` percent.
        /// </summary>
        [Input("downlinkLossPercent")]
        public Input<int>? DownlinkLossPercent { get; set; }

        /// <summary>
        /// The name for the network profile.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ARN of the project for the network profile.
        /// </summary>
        [Input("projectArn")]
        public Input<string>? ProjectArn { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        /// <summary>
        /// The type of network profile to create. Valid values are listed are `PRIVATE` and `CURATED`.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// The data throughput rate in bits per second, as an integer from `0` to `104857600`. Default value is `104857600`.
        /// </summary>
        [Input("uplinkBandwidthBits")]
        public Input<int>? UplinkBandwidthBits { get; set; }

        /// <summary>
        /// Delay time for all packets to destination in milliseconds as an integer from `0` to `2000`.
        /// </summary>
        [Input("uplinkDelayMs")]
        public Input<int>? UplinkDelayMs { get; set; }

        /// <summary>
        /// Time variation in the delay of received packets in milliseconds as an integer from `0` to `2000`.
        /// </summary>
        [Input("uplinkJitterMs")]
        public Input<int>? UplinkJitterMs { get; set; }

        /// <summary>
        /// Proportion of received packets that fail to arrive from `0` to `100` percent.
        /// </summary>
        [Input("uplinkLossPercent")]
        public Input<int>? UplinkLossPercent { get; set; }

        public NetworkProfileState()
        {
        }
        public static new NetworkProfileState Empty => new NetworkProfileState();
    }
}
