// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.MediaLive
{
    /// <summary>
    /// Resource for managing an AWS MediaLive InputSecurityGroup.
    /// 
    /// ## Example Usage
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.MediaLive.InputSecurityGroup("example", new()
    ///     {
    ///         Tags = 
    ///         {
    ///             { "ENVIRONMENT", "prod" },
    ///         },
    ///         WhitelistRules = new[]
    ///         {
    ///             new Aws.MediaLive.Inputs.InputSecurityGroupWhitelistRuleArgs
    ///             {
    ///                 Cidr = "10.0.0.8/32",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// MediaLive InputSecurityGroup can be imported using the `id`, e.g.,
    /// 
    /// ```sh
    ///  $ pulumi import aws:medialive/inputSecurityGroup:InputSecurityGroup example 123456
    /// ```
    /// </summary>
    [AwsResourceType("aws:medialive/inputSecurityGroup:InputSecurityGroup")]
    public partial class InputSecurityGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ARN of the InputSecurityGroup.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// The list of inputs currently using this InputSecurityGroup.
        /// </summary>
        [Output("inputs")]
        public Output<ImmutableArray<string>> Inputs { get; private set; } = null!;

        /// <summary>
        /// A map of tags to assign to the InputSecurityGroup. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        /// <summary>
        /// Whitelist rules. See Whitelist Rules for more details.
        /// </summary>
        [Output("whitelistRules")]
        public Output<ImmutableArray<Outputs.InputSecurityGroupWhitelistRule>> WhitelistRules { get; private set; } = null!;


        /// <summary>
        /// Create a InputSecurityGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public InputSecurityGroup(string name, InputSecurityGroupArgs args, CustomResourceOptions? options = null)
            : base("aws:medialive/inputSecurityGroup:InputSecurityGroup", name, args ?? new InputSecurityGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private InputSecurityGroup(string name, Input<string> id, InputSecurityGroupState? state = null, CustomResourceOptions? options = null)
            : base("aws:medialive/inputSecurityGroup:InputSecurityGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing InputSecurityGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static InputSecurityGroup Get(string name, Input<string> id, InputSecurityGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new InputSecurityGroup(name, id, state, options);
        }
    }

    public sealed class InputSecurityGroupArgs : global::Pulumi.ResourceArgs
    {
        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the InputSecurityGroup. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("whitelistRules", required: true)]
        private InputList<Inputs.InputSecurityGroupWhitelistRuleArgs>? _whitelistRules;

        /// <summary>
        /// Whitelist rules. See Whitelist Rules for more details.
        /// </summary>
        public InputList<Inputs.InputSecurityGroupWhitelistRuleArgs> WhitelistRules
        {
            get => _whitelistRules ?? (_whitelistRules = new InputList<Inputs.InputSecurityGroupWhitelistRuleArgs>());
            set => _whitelistRules = value;
        }

        public InputSecurityGroupArgs()
        {
        }
        public static new InputSecurityGroupArgs Empty => new InputSecurityGroupArgs();
    }

    public sealed class InputSecurityGroupState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ARN of the InputSecurityGroup.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("inputs")]
        private InputList<string>? _inputs;

        /// <summary>
        /// The list of inputs currently using this InputSecurityGroup.
        /// </summary>
        public InputList<string> Inputs
        {
            get => _inputs ?? (_inputs = new InputList<string>());
            set => _inputs = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the InputSecurityGroup. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("whitelistRules")]
        private InputList<Inputs.InputSecurityGroupWhitelistRuleGetArgs>? _whitelistRules;

        /// <summary>
        /// Whitelist rules. See Whitelist Rules for more details.
        /// </summary>
        public InputList<Inputs.InputSecurityGroupWhitelistRuleGetArgs> WhitelistRules
        {
            get => _whitelistRules ?? (_whitelistRules = new InputList<Inputs.InputSecurityGroupWhitelistRuleGetArgs>());
            set => _whitelistRules = value;
        }

        public InputSecurityGroupState()
        {
        }
        public static new InputSecurityGroupState Empty => new InputSecurityGroupState();
    }
}
