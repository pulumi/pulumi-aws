// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.MediaLive.Inputs
{

    public sealed class ChannelEncoderSettingsOutputGroupOutputGroupSettingsMsSmoothGroupSettingsGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("acquisitionPointId")]
        public Input<string>? AcquisitionPointId { get; set; }

        [Input("audioOnlyTimecodeControl")]
        public Input<string>? AudioOnlyTimecodeControl { get; set; }

        /// <summary>
        /// Setting to allow self signed or verified RTMP certificates.
        /// </summary>
        [Input("certificateMode")]
        public Input<string>? CertificateMode { get; set; }

        /// <summary>
        /// Number of seconds to wait before retrying connection to the flash media server if the connection is lost.
        /// </summary>
        [Input("connectionRetryInterval")]
        public Input<int>? ConnectionRetryInterval { get; set; }

        /// <summary>
        /// A director and base filename where archive files should be written. See Destination for more details.
        /// </summary>
        [Input("destination", required: true)]
        public Input<Inputs.ChannelEncoderSettingsOutputGroupOutputGroupSettingsMsSmoothGroupSettingsDestinationGetArgs> Destination { get; set; } = null!;

        [Input("eventId")]
        public Input<string>? EventId { get; set; }

        [Input("eventIdMode")]
        public Input<string>? EventIdMode { get; set; }

        [Input("eventStopBehavior")]
        public Input<string>? EventStopBehavior { get; set; }

        [Input("filecacheDuration")]
        public Input<int>? FilecacheDuration { get; set; }

        [Input("fragmentLength")]
        public Input<int>? FragmentLength { get; set; }

        /// <summary>
        /// Controls the behavior of the RTMP group if input becomes unavailable.
        /// </summary>
        [Input("inputLossAction")]
        public Input<string>? InputLossAction { get; set; }

        /// <summary>
        /// Number of retry attempts.
        /// </summary>
        [Input("numRetries")]
        public Input<int>? NumRetries { get; set; }

        /// <summary>
        /// Number of seconds to wait until a restart is initiated.
        /// </summary>
        [Input("restartDelay")]
        public Input<int>? RestartDelay { get; set; }

        [Input("segmentationMode")]
        public Input<string>? SegmentationMode { get; set; }

        [Input("sendDelayMs")]
        public Input<int>? SendDelayMs { get; set; }

        [Input("sparseTrackType")]
        public Input<string>? SparseTrackType { get; set; }

        [Input("streamManifestBehavior")]
        public Input<string>? StreamManifestBehavior { get; set; }

        [Input("timestampOffset")]
        public Input<string>? TimestampOffset { get; set; }

        [Input("timestampOffsetMode")]
        public Input<string>? TimestampOffsetMode { get; set; }

        public ChannelEncoderSettingsOutputGroupOutputGroupSettingsMsSmoothGroupSettingsGetArgs()
        {
        }
        public static new ChannelEncoderSettingsOutputGroupOutputGroupSettingsMsSmoothGroupSettingsGetArgs Empty => new ChannelEncoderSettingsOutputGroupOutputGroupSettingsMsSmoothGroupSettingsGetArgs();
    }
}
