// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.MediaLive.Outputs
{

    [OutputType]
    public sealed class ChannelEncoderSettingsVideoDescriptionCodecSettingsH264Settings
    {
        /// <summary>
        /// Enables or disables adaptive quantization.
        /// </summary>
        public readonly string? AdaptiveQuantization;
        /// <summary>
        /// Indicates that AFD values will be written into the output stream.
        /// </summary>
        public readonly string? AfdSignaling;
        /// <summary>
        /// Average bitrate in bits/second.
        /// </summary>
        public readonly int? Bitrate;
        public readonly int? BufFillPct;
        /// <summary>
        /// Size of buffer in bits.
        /// </summary>
        public readonly int? BufSize;
        /// <summary>
        /// Includes color space metadata in the output.
        /// </summary>
        public readonly string? ColorMetadata;
        /// <summary>
        /// Entropy encoding mode.
        /// </summary>
        public readonly string? EntropyEncoding;
        /// <summary>
        /// Filters to apply to an encode. See H264 Filter Settings for more details.
        /// </summary>
        public readonly Outputs.ChannelEncoderSettingsVideoDescriptionCodecSettingsH264SettingsFilterSettings? FilterSettings;
        /// <summary>
        /// Four bit AFD value to write on all frames of video in the output stream.
        /// </summary>
        public readonly string? FixedAfd;
        public readonly string? FlickerAq;
        /// <summary>
        /// Controls whether coding is performed on a field basis or on a frame basis.
        /// </summary>
        public readonly string? ForceFieldPictures;
        /// <summary>
        /// Indicates how the output video frame rate is specified.
        /// </summary>
        public readonly string? FramerateControl;
        /// <summary>
        /// Framerate denominator.
        /// </summary>
        public readonly int? FramerateDenominator;
        /// <summary>
        /// Framerate numerator.
        /// </summary>
        public readonly int? FramerateNumerator;
        /// <summary>
        /// GOP-B reference.
        /// </summary>
        public readonly string? GopBReference;
        /// <summary>
        /// Frequency of closed GOPs.
        /// </summary>
        public readonly int? GopClosedCadence;
        /// <summary>
        /// Number of B-frames between reference frames.
        /// </summary>
        public readonly int? GopNumBFrames;
        /// <summary>
        /// GOP size in units of either frames of seconds per `gop_size_units`.
        /// </summary>
        public readonly double? GopSize;
        /// <summary>
        /// Indicates if the `gop_size` is specified in frames or seconds.
        /// </summary>
        public readonly string? GopSizeUnits;
        /// <summary>
        /// H264 level.
        /// </summary>
        public readonly string? Level;
        /// <summary>
        /// Amount of lookahead.
        /// </summary>
        public readonly string? LookAheadRateControl;
        /// <summary>
        /// Set the maximum bitrate in order to accommodate expected spikes in the complexity of the video.
        /// </summary>
        public readonly int? MaxBitrate;
        public readonly int? MinIInterval;
        /// <summary>
        /// Number of reference frames to use.
        /// </summary>
        public readonly int? NumRefFrames;
        /// <summary>
        /// Indicates how the output pixel aspect ratio is specified.
        /// </summary>
        public readonly string? ParControl;
        /// <summary>
        /// Pixel Aspect Ratio denominator.
        /// </summary>
        public readonly int? ParDenominator;
        /// <summary>
        /// Pixel Aspect Ratio numerator.
        /// </summary>
        public readonly int? ParNumerator;
        /// <summary>
        /// AAC profile.
        /// </summary>
        public readonly string? Profile;
        /// <summary>
        /// Quality level.
        /// </summary>
        public readonly string? QualityLevel;
        /// <summary>
        /// Controls the target quality for the video encode.
        /// </summary>
        public readonly int? QvbrQualityLevel;
        /// <summary>
        /// The rate control mode.
        /// </summary>
        public readonly string? RateControlMode;
        /// <summary>
        /// Sets the scan type of the output.
        /// </summary>
        public readonly string? ScanType;
        /// <summary>
        /// Scene change detection.
        /// </summary>
        public readonly string? SceneChangeDetect;
        /// <summary>
        /// Number of slices per picture.
        /// </summary>
        public readonly int? Slices;
        /// <summary>
        /// Softness.
        /// </summary>
        public readonly int? Softness;
        /// <summary>
        /// Makes adjustments within each frame based on spatial variation of content complexity.
        /// </summary>
        public readonly string? SpatialAq;
        /// <summary>
        /// Subgop length.
        /// </summary>
        public readonly string? SubgopLength;
        /// <summary>
        /// Produces a bitstream compliant with SMPTE RP-2027.
        /// </summary>
        public readonly string? Syntax;
        /// <summary>
        /// Makes adjustments within each frame based on temporal variation of content complexity.
        /// </summary>
        public readonly string? TemporalAq;
        /// <summary>
        /// Determines how timecodes should be inserted into the video elementary stream.
        /// </summary>
        public readonly string? TimecodeInsertion;

        [OutputConstructor]
        private ChannelEncoderSettingsVideoDescriptionCodecSettingsH264Settings(
            string? adaptiveQuantization,

            string? afdSignaling,

            int? bitrate,

            int? bufFillPct,

            int? bufSize,

            string? colorMetadata,

            string? entropyEncoding,

            Outputs.ChannelEncoderSettingsVideoDescriptionCodecSettingsH264SettingsFilterSettings? filterSettings,

            string? fixedAfd,

            string? flickerAq,

            string? forceFieldPictures,

            string? framerateControl,

            int? framerateDenominator,

            int? framerateNumerator,

            string? gopBReference,

            int? gopClosedCadence,

            int? gopNumBFrames,

            double? gopSize,

            string? gopSizeUnits,

            string? level,

            string? lookAheadRateControl,

            int? maxBitrate,

            int? minIInterval,

            int? numRefFrames,

            string? parControl,

            int? parDenominator,

            int? parNumerator,

            string? profile,

            string? qualityLevel,

            int? qvbrQualityLevel,

            string? rateControlMode,

            string? scanType,

            string? sceneChangeDetect,

            int? slices,

            int? softness,

            string? spatialAq,

            string? subgopLength,

            string? syntax,

            string? temporalAq,

            string? timecodeInsertion)
        {
            AdaptiveQuantization = adaptiveQuantization;
            AfdSignaling = afdSignaling;
            Bitrate = bitrate;
            BufFillPct = bufFillPct;
            BufSize = bufSize;
            ColorMetadata = colorMetadata;
            EntropyEncoding = entropyEncoding;
            FilterSettings = filterSettings;
            FixedAfd = fixedAfd;
            FlickerAq = flickerAq;
            ForceFieldPictures = forceFieldPictures;
            FramerateControl = framerateControl;
            FramerateDenominator = framerateDenominator;
            FramerateNumerator = framerateNumerator;
            GopBReference = gopBReference;
            GopClosedCadence = gopClosedCadence;
            GopNumBFrames = gopNumBFrames;
            GopSize = gopSize;
            GopSizeUnits = gopSizeUnits;
            Level = level;
            LookAheadRateControl = lookAheadRateControl;
            MaxBitrate = maxBitrate;
            MinIInterval = minIInterval;
            NumRefFrames = numRefFrames;
            ParControl = parControl;
            ParDenominator = parDenominator;
            ParNumerator = parNumerator;
            Profile = profile;
            QualityLevel = qualityLevel;
            QvbrQualityLevel = qvbrQualityLevel;
            RateControlMode = rateControlMode;
            ScanType = scanType;
            SceneChangeDetect = sceneChangeDetect;
            Slices = slices;
            Softness = softness;
            SpatialAq = spatialAq;
            SubgopLength = subgopLength;
            Syntax = syntax;
            TemporalAq = temporalAq;
            TimecodeInsertion = timecodeInsertion;
        }
    }
}
