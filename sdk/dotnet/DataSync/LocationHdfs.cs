// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.DataSync
{
    [AwsResourceType("aws:datasync/locationHdfs:LocationHdfs")]
    public partial class LocationHdfs : global::Pulumi.CustomResource
    {
        [Output("agentArns")]
        public Output<ImmutableArray<string>> AgentArns { get; private set; } = null!;

        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("authenticationType")]
        public Output<string?> AuthenticationType { get; private set; } = null!;

        [Output("blockSize")]
        public Output<int?> BlockSize { get; private set; } = null!;

        [Output("kerberosKeytab")]
        public Output<string?> KerberosKeytab { get; private set; } = null!;

        [Output("kerberosKrb5Conf")]
        public Output<string?> KerberosKrb5Conf { get; private set; } = null!;

        [Output("kerberosPrincipal")]
        public Output<string?> KerberosPrincipal { get; private set; } = null!;

        [Output("kmsKeyProviderUri")]
        public Output<string?> KmsKeyProviderUri { get; private set; } = null!;

        [Output("nameNodes")]
        public Output<ImmutableArray<Outputs.LocationHdfsNameNode>> NameNodes { get; private set; } = null!;

        [Output("qopConfiguration")]
        public Output<Outputs.LocationHdfsQopConfiguration?> QopConfiguration { get; private set; } = null!;

        [Output("replicationFactor")]
        public Output<int?> ReplicationFactor { get; private set; } = null!;

        [Output("simpleUser")]
        public Output<string?> SimpleUser { get; private set; } = null!;

        [Output("subdirectory")]
        public Output<string?> Subdirectory { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("uri")]
        public Output<string> Uri { get; private set; } = null!;


        /// <summary>
        /// Create a LocationHdfs resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LocationHdfs(string name, LocationHdfsArgs args, CustomResourceOptions? options = null)
            : base("aws:datasync/locationHdfs:LocationHdfs", name, args ?? new LocationHdfsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LocationHdfs(string name, Input<string> id, LocationHdfsState? state = null, CustomResourceOptions? options = null)
            : base("aws:datasync/locationHdfs:LocationHdfs", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LocationHdfs resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LocationHdfs Get(string name, Input<string> id, LocationHdfsState? state = null, CustomResourceOptions? options = null)
        {
            return new LocationHdfs(name, id, state, options);
        }
    }

    public sealed class LocationHdfsArgs : global::Pulumi.ResourceArgs
    {
        [Input("agentArns", required: true)]
        private InputList<string>? _agentArns;
        public InputList<string> AgentArns
        {
            get => _agentArns ?? (_agentArns = new InputList<string>());
            set => _agentArns = value;
        }

        [Input("authenticationType")]
        public Input<string>? AuthenticationType { get; set; }

        [Input("blockSize")]
        public Input<int>? BlockSize { get; set; }

        [Input("kerberosKeytab")]
        public Input<string>? KerberosKeytab { get; set; }

        [Input("kerberosKrb5Conf")]
        public Input<string>? KerberosKrb5Conf { get; set; }

        [Input("kerberosPrincipal")]
        public Input<string>? KerberosPrincipal { get; set; }

        [Input("kmsKeyProviderUri")]
        public Input<string>? KmsKeyProviderUri { get; set; }

        [Input("nameNodes", required: true)]
        private InputList<Inputs.LocationHdfsNameNodeArgs>? _nameNodes;
        public InputList<Inputs.LocationHdfsNameNodeArgs> NameNodes
        {
            get => _nameNodes ?? (_nameNodes = new InputList<Inputs.LocationHdfsNameNodeArgs>());
            set => _nameNodes = value;
        }

        [Input("qopConfiguration")]
        public Input<Inputs.LocationHdfsQopConfigurationArgs>? QopConfiguration { get; set; }

        [Input("replicationFactor")]
        public Input<int>? ReplicationFactor { get; set; }

        [Input("simpleUser")]
        public Input<string>? SimpleUser { get; set; }

        [Input("subdirectory")]
        public Input<string>? Subdirectory { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public LocationHdfsArgs()
        {
        }
        public static new LocationHdfsArgs Empty => new LocationHdfsArgs();
    }

    public sealed class LocationHdfsState : global::Pulumi.ResourceArgs
    {
        [Input("agentArns")]
        private InputList<string>? _agentArns;
        public InputList<string> AgentArns
        {
            get => _agentArns ?? (_agentArns = new InputList<string>());
            set => _agentArns = value;
        }

        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("authenticationType")]
        public Input<string>? AuthenticationType { get; set; }

        [Input("blockSize")]
        public Input<int>? BlockSize { get; set; }

        [Input("kerberosKeytab")]
        public Input<string>? KerberosKeytab { get; set; }

        [Input("kerberosKrb5Conf")]
        public Input<string>? KerberosKrb5Conf { get; set; }

        [Input("kerberosPrincipal")]
        public Input<string>? KerberosPrincipal { get; set; }

        [Input("kmsKeyProviderUri")]
        public Input<string>? KmsKeyProviderUri { get; set; }

        [Input("nameNodes")]
        private InputList<Inputs.LocationHdfsNameNodeGetArgs>? _nameNodes;
        public InputList<Inputs.LocationHdfsNameNodeGetArgs> NameNodes
        {
            get => _nameNodes ?? (_nameNodes = new InputList<Inputs.LocationHdfsNameNodeGetArgs>());
            set => _nameNodes = value;
        }

        [Input("qopConfiguration")]
        public Input<Inputs.LocationHdfsQopConfigurationGetArgs>? QopConfiguration { get; set; }

        [Input("replicationFactor")]
        public Input<int>? ReplicationFactor { get; set; }

        [Input("simpleUser")]
        public Input<string>? SimpleUser { get; set; }

        [Input("subdirectory")]
        public Input<string>? Subdirectory { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("uri")]
        public Input<string>? Uri { get; set; }

        public LocationHdfsState()
        {
        }
        public static new LocationHdfsState Empty => new LocationHdfsState();
    }
}
