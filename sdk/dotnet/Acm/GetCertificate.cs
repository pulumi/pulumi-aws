// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Acm
{
    public static class GetCertificate
    {
        public static Task<GetCertificateResult> InvokeAsync(GetCertificateArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCertificateResult>("aws:acm/getCertificate:getCertificate", args ?? new GetCertificateArgs(), options.WithDefaults());

        public static Output<GetCertificateResult> Invoke(GetCertificateInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCertificateResult>("aws:acm/getCertificate:getCertificate", args ?? new GetCertificateInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCertificateArgs : global::Pulumi.InvokeArgs
    {
        [Input("domain", required: true)]
        public string Domain { get; set; } = null!;

        [Input("keyTypes")]
        private List<string>? _keyTypes;
        public List<string> KeyTypes
        {
            get => _keyTypes ?? (_keyTypes = new List<string>());
            set => _keyTypes = value;
        }

        [Input("mostRecent")]
        public bool? MostRecent { get; set; }

        [Input("statuses")]
        private List<string>? _statuses;
        public List<string> Statuses
        {
            get => _statuses ?? (_statuses = new List<string>());
            set => _statuses = value;
        }

        [Input("tags")]
        private Dictionary<string, string>? _tags;
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        [Input("types")]
        private List<string>? _types;
        public List<string> Types
        {
            get => _types ?? (_types = new List<string>());
            set => _types = value;
        }

        public GetCertificateArgs()
        {
        }
        public static new GetCertificateArgs Empty => new GetCertificateArgs();
    }

    public sealed class GetCertificateInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("domain", required: true)]
        public Input<string> Domain { get; set; } = null!;

        [Input("keyTypes")]
        private InputList<string>? _keyTypes;
        public InputList<string> KeyTypes
        {
            get => _keyTypes ?? (_keyTypes = new InputList<string>());
            set => _keyTypes = value;
        }

        [Input("mostRecent")]
        public Input<bool>? MostRecent { get; set; }

        [Input("statuses")]
        private InputList<string>? _statuses;
        public InputList<string> Statuses
        {
            get => _statuses ?? (_statuses = new InputList<string>());
            set => _statuses = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("types")]
        private InputList<string>? _types;
        public InputList<string> Types
        {
            get => _types ?? (_types = new InputList<string>());
            set => _types = value;
        }

        public GetCertificateInvokeArgs()
        {
        }
        public static new GetCertificateInvokeArgs Empty => new GetCertificateInvokeArgs();
    }


    [OutputType]
    public sealed class GetCertificateResult
    {
        public readonly string Arn;
        public readonly string Certificate;
        public readonly string CertificateChain;
        public readonly string Domain;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> KeyTypes;
        public readonly bool? MostRecent;
        public readonly string Status;
        public readonly ImmutableArray<string> Statuses;
        public readonly ImmutableDictionary<string, string> Tags;
        public readonly ImmutableArray<string> Types;

        [OutputConstructor]
        private GetCertificateResult(
            string arn,

            string certificate,

            string certificateChain,

            string domain,

            string id,

            ImmutableArray<string> keyTypes,

            bool? mostRecent,

            string status,

            ImmutableArray<string> statuses,

            ImmutableDictionary<string, string> tags,

            ImmutableArray<string> types)
        {
            Arn = arn;
            Certificate = certificate;
            CertificateChain = certificateChain;
            Domain = domain;
            Id = id;
            KeyTypes = keyTypes;
            MostRecent = mostRecent;
            Status = status;
            Statuses = statuses;
            Tags = tags;
            Types = types;
        }
    }
}
