// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.RedshiftData
{
    [AwsResourceType("aws:redshiftdata/statement:Statement")]
    public partial class Statement : global::Pulumi.CustomResource
    {
        [Output("clusterIdentifier")]
        public Output<string?> ClusterIdentifier { get; private set; } = null!;

        [Output("database")]
        public Output<string> Database { get; private set; } = null!;

        [Output("dbUser")]
        public Output<string?> DbUser { get; private set; } = null!;

        [Output("parameters")]
        public Output<ImmutableArray<Outputs.StatementParameter>> Parameters { get; private set; } = null!;

        [Output("secretArn")]
        public Output<string?> SecretArn { get; private set; } = null!;

        [Output("sql")]
        public Output<string> Sql { get; private set; } = null!;

        [Output("statementName")]
        public Output<string?> StatementName { get; private set; } = null!;

        [Output("withEvent")]
        public Output<bool?> WithEvent { get; private set; } = null!;

        [Output("workgroupName")]
        public Output<string?> WorkgroupName { get; private set; } = null!;


        /// <summary>
        /// Create a Statement resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Statement(string name, StatementArgs args, CustomResourceOptions? options = null)
            : base("aws:redshiftdata/statement:Statement", name, args ?? new StatementArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Statement(string name, Input<string> id, StatementState? state = null, CustomResourceOptions? options = null)
            : base("aws:redshiftdata/statement:Statement", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Statement resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Statement Get(string name, Input<string> id, StatementState? state = null, CustomResourceOptions? options = null)
        {
            return new Statement(name, id, state, options);
        }
    }

    public sealed class StatementArgs : global::Pulumi.ResourceArgs
    {
        [Input("clusterIdentifier")]
        public Input<string>? ClusterIdentifier { get; set; }

        [Input("database", required: true)]
        public Input<string> Database { get; set; } = null!;

        [Input("dbUser")]
        public Input<string>? DbUser { get; set; }

        [Input("parameters")]
        private InputList<Inputs.StatementParameterArgs>? _parameters;
        public InputList<Inputs.StatementParameterArgs> Parameters
        {
            get => _parameters ?? (_parameters = new InputList<Inputs.StatementParameterArgs>());
            set => _parameters = value;
        }

        [Input("secretArn")]
        public Input<string>? SecretArn { get; set; }

        [Input("sql", required: true)]
        public Input<string> Sql { get; set; } = null!;

        [Input("statementName")]
        public Input<string>? StatementName { get; set; }

        [Input("withEvent")]
        public Input<bool>? WithEvent { get; set; }

        [Input("workgroupName")]
        public Input<string>? WorkgroupName { get; set; }

        public StatementArgs()
        {
        }
        public static new StatementArgs Empty => new StatementArgs();
    }

    public sealed class StatementState : global::Pulumi.ResourceArgs
    {
        [Input("clusterIdentifier")]
        public Input<string>? ClusterIdentifier { get; set; }

        [Input("database")]
        public Input<string>? Database { get; set; }

        [Input("dbUser")]
        public Input<string>? DbUser { get; set; }

        [Input("parameters")]
        private InputList<Inputs.StatementParameterGetArgs>? _parameters;
        public InputList<Inputs.StatementParameterGetArgs> Parameters
        {
            get => _parameters ?? (_parameters = new InputList<Inputs.StatementParameterGetArgs>());
            set => _parameters = value;
        }

        [Input("secretArn")]
        public Input<string>? SecretArn { get; set; }

        [Input("sql")]
        public Input<string>? Sql { get; set; }

        [Input("statementName")]
        public Input<string>? StatementName { get; set; }

        [Input("withEvent")]
        public Input<bool>? WithEvent { get; set; }

        [Input("workgroupName")]
        public Input<string>? WorkgroupName { get; set; }

        public StatementState()
        {
        }
        public static new StatementState Empty => new StatementState();
    }
}
