// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.FinSpace.Inputs
{

    public sealed class KxDataviewSegmentConfigurationGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("dbPaths", required: true)]
        private InputList<string>? _dbPaths;

        /// <summary>
        /// The database path of the data that you want to place on each selected volume. Each segment must have a unique database path for each volume.
        /// </summary>
        public InputList<string> DbPaths
        {
            get => _dbPaths ?? (_dbPaths = new InputList<string>());
            set => _dbPaths = value;
        }

        /// <summary>
        /// Enables on-demand caching on the selected database path when a particular file or a column of the database is accessed. When on demand caching is **True**, dataviews perform minimal loading of files on the filesystem as needed. When it is set to **False**, everything is cached. The default value is **False**.
        /// </summary>
        [Input("onDemand")]
        public Input<bool>? OnDemand { get; set; }

        /// <summary>
        /// The name of the volume that you want to attach to a dataview. This volume must be in the same availability zone as the dataview that you are attaching to.
        /// </summary>
        [Input("volumeName", required: true)]
        public Input<string> VolumeName { get; set; } = null!;

        public KxDataviewSegmentConfigurationGetArgs()
        {
        }
        public static new KxDataviewSegmentConfigurationGetArgs Empty => new KxDataviewSegmentConfigurationGetArgs();
    }
}
