// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CloudHsmV2
{
    /// <summary>
    /// Creates an HSM module in Amazon CloudHSM v2 cluster.
    /// 
    /// ## Example Usage
    /// 
    /// The following example below creates an HSM module in CloudHSM cluster.
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var cluster = Output.Create(Aws.CloudHsmV2.GetCluster.InvokeAsync(new Aws.CloudHsmV2.GetClusterArgs
    ///         {
    ///             ClusterId = @var.Cloudhsm_cluster_id,
    ///         }));
    ///         var cloudhsmV2Hsm = new Aws.CloudHsmV2.Hsm("cloudhsmV2Hsm", new Aws.CloudHsmV2.HsmArgs
    ///         {
    ///             SubnetId = cluster.Apply(cluster =&gt; cluster.SubnetIds[0]),
    ///             ClusterId = cluster.Apply(cluster =&gt; cluster.ClusterId),
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// HSM modules can be imported using their HSM ID, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import aws:cloudhsmv2/hsm:Hsm bar hsm-quo8dahtaca
    /// ```
    /// </summary>
    public partial class Hsm : Pulumi.CustomResource
    {
        /// <summary>
        /// The IDs of AZ in which HSM module will be located. Do not use together with subnet_id.
        /// </summary>
        [Output("availabilityZone")]
        public Output<string> AvailabilityZone { get; private set; } = null!;

        /// <summary>
        /// The ID of Cloud HSM v2 cluster to which HSM will be added.
        /// </summary>
        [Output("clusterId")]
        public Output<string> ClusterId { get; private set; } = null!;

        /// <summary>
        /// The id of the ENI interface allocated for HSM module.
        /// </summary>
        [Output("hsmEniId")]
        public Output<string> HsmEniId { get; private set; } = null!;

        /// <summary>
        /// The id of the HSM module.
        /// </summary>
        [Output("hsmId")]
        public Output<string> HsmId { get; private set; } = null!;

        /// <summary>
        /// The state of the HSM module.
        /// </summary>
        [Output("hsmState")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The IP address of HSM module. Must be within the CIDR of selected subnet.
        /// </summary>
        [Output("ipAddress")]
        public Output<string> IpAddress { get; private set; } = null!;

        /// <summary>
        /// The ID of subnet in which HSM module will be located.
        /// </summary>
        [Output("subnetId")]
        public Output<string> SubnetId { get; private set; } = null!;


        /// <summary>
        /// Create a Hsm resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Hsm(string name, HsmArgs args, CustomResourceOptions? options = null)
            : base("aws:cloudhsmv2/hsm:Hsm", name, args ?? new HsmArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Hsm(string name, Input<string> id, HsmState? state = null, CustomResourceOptions? options = null)
            : base("aws:cloudhsmv2/hsm:Hsm", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Hsm resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Hsm Get(string name, Input<string> id, HsmState? state = null, CustomResourceOptions? options = null)
        {
            return new Hsm(name, id, state, options);
        }
    }

    public sealed class HsmArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The IDs of AZ in which HSM module will be located. Do not use together with subnet_id.
        /// </summary>
        [Input("availabilityZone")]
        public Input<string>? AvailabilityZone { get; set; }

        /// <summary>
        /// The ID of Cloud HSM v2 cluster to which HSM will be added.
        /// </summary>
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        /// <summary>
        /// The IP address of HSM module. Must be within the CIDR of selected subnet.
        /// </summary>
        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        /// <summary>
        /// The ID of subnet in which HSM module will be located.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        public HsmArgs()
        {
        }
    }

    public sealed class HsmState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The IDs of AZ in which HSM module will be located. Do not use together with subnet_id.
        /// </summary>
        [Input("availabilityZone")]
        public Input<string>? AvailabilityZone { get; set; }

        /// <summary>
        /// The ID of Cloud HSM v2 cluster to which HSM will be added.
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        /// <summary>
        /// The id of the ENI interface allocated for HSM module.
        /// </summary>
        [Input("hsmEniId")]
        public Input<string>? HsmEniId { get; set; }

        /// <summary>
        /// The id of the HSM module.
        /// </summary>
        [Input("hsmId")]
        public Input<string>? HsmId { get; set; }

        /// <summary>
        /// The state of the HSM module.
        /// </summary>
        [Input("hsmState")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The IP address of HSM module. Must be within the CIDR of selected subnet.
        /// </summary>
        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        /// <summary>
        /// The ID of subnet in which HSM module will be located.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        public HsmState()
        {
        }
    }
}
