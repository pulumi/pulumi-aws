// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CloudHsmV2
{
    public static class GetCluster
    {
        /// <summary>
        /// Use this data source to get information about a CloudHSM v2 cluster
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const cluster = aws.cloudhsmv2.getCluster({
        ///     clusterId: "cluster-testclusterid",
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// cluster = aws.cloudhsmv2.get_cluster(cluster_id="cluster-testclusterid")
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var cluster = Aws.CloudHsmV2.GetCluster.Invoke(new()
        ///     {
        ///         ClusterId = "cluster-testclusterid",
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/cloudhsmv2"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := cloudhsmv2.LookupCluster(ctx, &amp;cloudhsmv2.LookupClusterArgs{
        /// 			ClusterId: "cluster-testclusterid",
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.cloudhsmv2.Cloudhsmv2Functions;
        /// import com.pulumi.aws.cloudhsmv2.inputs.GetClusterArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var cluster = Cloudhsmv2Functions.getCluster(GetClusterArgs.builder()
        ///             .clusterId("cluster-testclusterid")
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   cluster:
        ///     fn::invoke:
        ///       Function: aws:cloudhsmv2:getCluster
        ///       Arguments:
        ///         clusterId: cluster-testclusterid
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetClusterResult> InvokeAsync(GetClusterArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetClusterResult>("aws:cloudhsmv2/getCluster:getCluster", args ?? new GetClusterArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get information about a CloudHSM v2 cluster
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const cluster = aws.cloudhsmv2.getCluster({
        ///     clusterId: "cluster-testclusterid",
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// cluster = aws.cloudhsmv2.get_cluster(cluster_id="cluster-testclusterid")
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var cluster = Aws.CloudHsmV2.GetCluster.Invoke(new()
        ///     {
        ///         ClusterId = "cluster-testclusterid",
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/cloudhsmv2"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := cloudhsmv2.LookupCluster(ctx, &amp;cloudhsmv2.LookupClusterArgs{
        /// 			ClusterId: "cluster-testclusterid",
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.cloudhsmv2.Cloudhsmv2Functions;
        /// import com.pulumi.aws.cloudhsmv2.inputs.GetClusterArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var cluster = Cloudhsmv2Functions.getCluster(GetClusterArgs.builder()
        ///             .clusterId("cluster-testclusterid")
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   cluster:
        ///     fn::invoke:
        ///       Function: aws:cloudhsmv2:getCluster
        ///       Arguments:
        ///         clusterId: cluster-testclusterid
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetClusterResult> Invoke(GetClusterInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetClusterResult>("aws:cloudhsmv2/getCluster:getCluster", args ?? new GetClusterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetClusterArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of Cloud HSM v2 cluster.
        /// </summary>
        [Input("clusterId", required: true)]
        public string ClusterId { get; set; } = null!;

        /// <summary>
        /// State of the cluster to be found.
        /// </summary>
        [Input("clusterState")]
        public string? ClusterState { get; set; }

        public GetClusterArgs()
        {
        }
        public static new GetClusterArgs Empty => new GetClusterArgs();
    }

    public sealed class GetClusterInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of Cloud HSM v2 cluster.
        /// </summary>
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        /// <summary>
        /// State of the cluster to be found.
        /// </summary>
        [Input("clusterState")]
        public Input<string>? ClusterState { get; set; }

        public GetClusterInvokeArgs()
        {
        }
        public static new GetClusterInvokeArgs Empty => new GetClusterInvokeArgs();
    }


    [OutputType]
    public sealed class GetClusterResult
    {
        /// <summary>
        /// The list of cluster certificates.
        /// * `cluster_certificates.0.cluster_certificate` - The cluster certificate issued (signed) by the issuing certificate authority (CA) of the cluster's owner.
        /// * `cluster_certificates.0.cluster_csr` - The certificate signing request (CSR). Available only in UNINITIALIZED state.
        /// * `cluster_certificates.0.aws_hardware_certificate` - The HSM hardware certificate issued (signed) by AWS CloudHSM.
        /// * `cluster_certificates.0.hsm_certificate` - The HSM certificate issued (signed) by the HSM hardware.
        /// * `cluster_certificates.0.manufacturer_hardware_certificate` - The HSM hardware certificate issued (signed) by the hardware manufacturer.
        /// The number of available cluster certificates may vary depending on state of the cluster.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterClusterCertificateResult> ClusterCertificates;
        public readonly string ClusterId;
        public readonly string ClusterState;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// ID of the security group associated with the CloudHSM cluster.
        /// </summary>
        public readonly string SecurityGroupId;
        /// <summary>
        /// IDs of subnets in which cluster operates.
        /// </summary>
        public readonly ImmutableArray<string> SubnetIds;
        /// <summary>
        /// ID of the VPC that the CloudHSM cluster resides in.
        /// </summary>
        public readonly string VpcId;

        [OutputConstructor]
        private GetClusterResult(
            ImmutableArray<Outputs.GetClusterClusterCertificateResult> clusterCertificates,

            string clusterId,

            string clusterState,

            string id,

            string securityGroupId,

            ImmutableArray<string> subnetIds,

            string vpcId)
        {
            ClusterCertificates = clusterCertificates;
            ClusterId = clusterId;
            ClusterState = clusterState;
            Id = id;
            SecurityGroupId = securityGroupId;
            SubnetIds = subnetIds;
            VpcId = vpcId;
        }
    }
}
