// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi.Utilities;

namespace Pulumi.Aws.Ses
{
    public static class GetDomainIdentity
    {
        /// <summary>
        /// Retrieve the SES domain identity
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(Aws.Ses.GetDomainIdentity.InvokeAsync(new Aws.Ses.GetDomainIdentityArgs
        ///         {
        ///             Domain = "example.com",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetDomainIdentityResult> InvokeAsync(GetDomainIdentityArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDomainIdentityResult>("aws:ses/getDomainIdentity:getDomainIdentity", args ?? new GetDomainIdentityArgs(), options.WithVersion());

        /// <summary>
        /// Retrieve the SES domain identity
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(Aws.Ses.GetDomainIdentity.InvokeAsync(new Aws.Ses.GetDomainIdentityArgs
        ///         {
        ///             Domain = "example.com",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetDomainIdentityResult> Invoke(GetDomainIdentityInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetDomainIdentityResult>("aws:ses/getDomainIdentity:getDomainIdentity", args ?? new GetDomainIdentityInvokeArgs(), options.WithVersion());
    }


    public sealed class GetDomainIdentityArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the domain
        /// </summary>
        [Input("domain", required: true)]
        public string Domain { get; set; } = null!;

        public GetDomainIdentityArgs()
        {
        }
    }

    public sealed class GetDomainIdentityInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the domain
        /// </summary>
        [Input("domain", required: true)]
        public Input<string> Domain { get; set; } = null!;

        public GetDomainIdentityInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDomainIdentityResult
    {
        /// <summary>
        /// The ARN of the domain identity.
        /// </summary>
        public readonly string Arn;
        /// <summary>
        /// The name of the domain
        /// </summary>
        public readonly string Domain;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A code which when added to the domain as a TXT record will signal to SES that the owner of the domain has authorized SES to act on their behalf.
        /// </summary>
        public readonly string VerificationToken;

        [OutputConstructor]
        private GetDomainIdentityResult(
            string arn,

            string domain,

            string id,

            string verificationToken)
        {
            Arn = arn;
            Domain = domain;
            Id = id;
            VerificationToken = verificationToken;
        }
    }
}
