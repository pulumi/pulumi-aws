// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ses
{
    /// <summary>
    /// Provides an SES configuration set resource
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var test = new Aws.Ses.ConfigurationSet("test", new Aws.Ses.ConfigurationSetArgs
    ///         {
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// SES Configuration Sets can be imported using their `name`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import aws:ses/configurationSet:ConfigurationSet test some-configuration-set-test
    /// ```
    /// </summary>
    public partial class ConfigurationSet : Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the configuration set
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a ConfigurationSet resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ConfigurationSet(string name, ConfigurationSetArgs? args = null, CustomResourceOptions? options = null)
            : base("aws:ses/configurationSet:ConfigurationSet", name, args ?? new ConfigurationSetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ConfigurationSet(string name, Input<string> id, ConfigurationSetState? state = null, CustomResourceOptions? options = null)
            : base("aws:ses/configurationSet:ConfigurationSet", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new Pulumi.Alias { Type = "aws:ses/confgurationSet:ConfgurationSet"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ConfigurationSet resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ConfigurationSet Get(string name, Input<string> id, ConfigurationSetState? state = null, CustomResourceOptions? options = null)
        {
            return new ConfigurationSet(name, id, state, options);
        }
    }

    public sealed class ConfigurationSetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the configuration set
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public ConfigurationSetArgs()
        {
        }
    }

    public sealed class ConfigurationSetState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the configuration set
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public ConfigurationSetState()
        {
        }
    }
}
