// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ses
{
    [AwsResourceType("aws:ses/eventDestination:EventDestination")]
    public partial class EventDestination : global::Pulumi.CustomResource
    {
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("cloudwatchDestinations")]
        public Output<ImmutableArray<Outputs.EventDestinationCloudwatchDestination>> CloudwatchDestinations { get; private set; } = null!;

        [Output("configurationSetName")]
        public Output<string> ConfigurationSetName { get; private set; } = null!;

        [Output("enabled")]
        public Output<bool?> Enabled { get; private set; } = null!;

        [Output("kinesisDestination")]
        public Output<Outputs.EventDestinationKinesisDestination?> KinesisDestination { get; private set; } = null!;

        [Output("matchingTypes")]
        public Output<ImmutableArray<string>> MatchingTypes { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("snsDestination")]
        public Output<Outputs.EventDestinationSnsDestination?> SnsDestination { get; private set; } = null!;


        /// <summary>
        /// Create a EventDestination resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EventDestination(string name, EventDestinationArgs args, CustomResourceOptions? options = null)
            : base("aws:ses/eventDestination:EventDestination", name, args ?? new EventDestinationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EventDestination(string name, Input<string> id, EventDestinationState? state = null, CustomResourceOptions? options = null)
            : base("aws:ses/eventDestination:EventDestination", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EventDestination resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EventDestination Get(string name, Input<string> id, EventDestinationState? state = null, CustomResourceOptions? options = null)
        {
            return new EventDestination(name, id, state, options);
        }
    }

    public sealed class EventDestinationArgs : global::Pulumi.ResourceArgs
    {
        [Input("cloudwatchDestinations")]
        private InputList<Inputs.EventDestinationCloudwatchDestinationArgs>? _cloudwatchDestinations;
        public InputList<Inputs.EventDestinationCloudwatchDestinationArgs> CloudwatchDestinations
        {
            get => _cloudwatchDestinations ?? (_cloudwatchDestinations = new InputList<Inputs.EventDestinationCloudwatchDestinationArgs>());
            set => _cloudwatchDestinations = value;
        }

        [Input("configurationSetName", required: true)]
        public Input<string> ConfigurationSetName { get; set; } = null!;

        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("kinesisDestination")]
        public Input<Inputs.EventDestinationKinesisDestinationArgs>? KinesisDestination { get; set; }

        [Input("matchingTypes", required: true)]
        private InputList<string>? _matchingTypes;
        public InputList<string> MatchingTypes
        {
            get => _matchingTypes ?? (_matchingTypes = new InputList<string>());
            set => _matchingTypes = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("snsDestination")]
        public Input<Inputs.EventDestinationSnsDestinationArgs>? SnsDestination { get; set; }

        public EventDestinationArgs()
        {
        }
        public static new EventDestinationArgs Empty => new EventDestinationArgs();
    }

    public sealed class EventDestinationState : global::Pulumi.ResourceArgs
    {
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("cloudwatchDestinations")]
        private InputList<Inputs.EventDestinationCloudwatchDestinationGetArgs>? _cloudwatchDestinations;
        public InputList<Inputs.EventDestinationCloudwatchDestinationGetArgs> CloudwatchDestinations
        {
            get => _cloudwatchDestinations ?? (_cloudwatchDestinations = new InputList<Inputs.EventDestinationCloudwatchDestinationGetArgs>());
            set => _cloudwatchDestinations = value;
        }

        [Input("configurationSetName")]
        public Input<string>? ConfigurationSetName { get; set; }

        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("kinesisDestination")]
        public Input<Inputs.EventDestinationKinesisDestinationGetArgs>? KinesisDestination { get; set; }

        [Input("matchingTypes")]
        private InputList<string>? _matchingTypes;
        public InputList<string> MatchingTypes
        {
            get => _matchingTypes ?? (_matchingTypes = new InputList<string>());
            set => _matchingTypes = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("snsDestination")]
        public Input<Inputs.EventDestinationSnsDestinationGetArgs>? SnsDestination { get; set; }

        public EventDestinationState()
        {
        }
        public static new EventDestinationState Empty => new EventDestinationState();
    }
}
