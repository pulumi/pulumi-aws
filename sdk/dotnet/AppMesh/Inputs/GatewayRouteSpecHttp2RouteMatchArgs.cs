// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.AppMesh.Inputs
{

    public sealed class GatewayRouteSpecHttp2RouteMatchArgs : global::Pulumi.ResourceArgs
    {
        [Input("headers")]
        private InputList<Inputs.GatewayRouteSpecHttp2RouteMatchHeaderArgs>? _headers;

        /// <summary>
        /// Client request headers to match on.
        /// </summary>
        public InputList<Inputs.GatewayRouteSpecHttp2RouteMatchHeaderArgs> Headers
        {
            get => _headers ?? (_headers = new InputList<Inputs.GatewayRouteSpecHttp2RouteMatchHeaderArgs>());
            set => _headers = value;
        }

        /// <summary>
        /// Host name to match on.
        /// </summary>
        [Input("hostname")]
        public Input<Inputs.GatewayRouteSpecHttp2RouteMatchHostnameArgs>? Hostname { get; set; }

        /// <summary>
        /// Client request path to match on.
        /// </summary>
        [Input("path")]
        public Input<Inputs.GatewayRouteSpecHttp2RouteMatchPathArgs>? Path { get; set; }

        /// <summary>
        /// The port number to match from the request.
        /// </summary>
        [Input("port")]
        public Input<int>? Port { get; set; }

        /// <summary>
        /// Header value sent by the client must begin with the specified characters.
        /// </summary>
        [Input("prefix")]
        public Input<string>? Prefix { get; set; }

        [Input("queryParameters")]
        private InputList<Inputs.GatewayRouteSpecHttp2RouteMatchQueryParameterArgs>? _queryParameters;

        /// <summary>
        /// Client request query parameters to match on.
        /// </summary>
        public InputList<Inputs.GatewayRouteSpecHttp2RouteMatchQueryParameterArgs> QueryParameters
        {
            get => _queryParameters ?? (_queryParameters = new InputList<Inputs.GatewayRouteSpecHttp2RouteMatchQueryParameterArgs>());
            set => _queryParameters = value;
        }

        public GatewayRouteSpecHttp2RouteMatchArgs()
        {
        }
        public static new GatewayRouteSpecHttp2RouteMatchArgs Empty => new GatewayRouteSpecHttp2RouteMatchArgs();
    }
}
