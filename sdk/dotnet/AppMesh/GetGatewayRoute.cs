// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.AppMesh
{
    public static class GetGatewayRoute
    {
        /// <summary>
        /// The App Mesh Gateway Route data source allows details of an App Mesh Gateway Route to be retrieved by its name, mesh_name, virtual_gateway_name, and optionally the mesh_owner.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const test = aws.appmesh.getGatewayRoute({
        ///     meshName: "test-mesh",
        ///     name: "test-route",
        ///     virtualGatewayName: "test-gateway",
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// test = aws.appmesh.get_gateway_route(mesh_name="test-mesh",
        ///     name="test-route",
        ///     virtual_gateway_name="test-gateway")
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.AppMesh.GetGatewayRoute.Invoke(new()
        ///     {
        ///         MeshName = "test-mesh",
        ///         Name = "test-route",
        ///         VirtualGatewayName = "test-gateway",
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/appmesh"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := appmesh.LookupGatewayRoute(ctx, &amp;appmesh.LookupGatewayRouteArgs{
        /// 			MeshName:           "test-mesh",
        /// 			Name:               "test-route",
        /// 			VirtualGatewayName: "test-gateway",
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.appmesh.AppmeshFunctions;
        /// import com.pulumi.aws.appmesh.inputs.GetGatewayRouteArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var test = AppmeshFunctions.getGatewayRoute(GetGatewayRouteArgs.builder()
        ///             .meshName("test-mesh")
        ///             .name("test-route")
        ///             .virtualGatewayName("test-gateway")
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   test:
        ///     fn::invoke:
        ///       Function: aws:appmesh:getGatewayRoute
        ///       Arguments:
        ///         meshName: test-mesh
        ///         name: test-route
        ///         virtualGatewayName: test-gateway
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetGatewayRouteResult> InvokeAsync(GetGatewayRouteArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGatewayRouteResult>("aws:appmesh/getGatewayRoute:getGatewayRoute", args ?? new GetGatewayRouteArgs(), options.WithDefaults());

        /// <summary>
        /// The App Mesh Gateway Route data source allows details of an App Mesh Gateway Route to be retrieved by its name, mesh_name, virtual_gateway_name, and optionally the mesh_owner.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const test = aws.appmesh.getGatewayRoute({
        ///     meshName: "test-mesh",
        ///     name: "test-route",
        ///     virtualGatewayName: "test-gateway",
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// test = aws.appmesh.get_gateway_route(mesh_name="test-mesh",
        ///     name="test-route",
        ///     virtual_gateway_name="test-gateway")
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.AppMesh.GetGatewayRoute.Invoke(new()
        ///     {
        ///         MeshName = "test-mesh",
        ///         Name = "test-route",
        ///         VirtualGatewayName = "test-gateway",
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/appmesh"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := appmesh.LookupGatewayRoute(ctx, &amp;appmesh.LookupGatewayRouteArgs{
        /// 			MeshName:           "test-mesh",
        /// 			Name:               "test-route",
        /// 			VirtualGatewayName: "test-gateway",
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.appmesh.AppmeshFunctions;
        /// import com.pulumi.aws.appmesh.inputs.GetGatewayRouteArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var test = AppmeshFunctions.getGatewayRoute(GetGatewayRouteArgs.builder()
        ///             .meshName("test-mesh")
        ///             .name("test-route")
        ///             .virtualGatewayName("test-gateway")
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   test:
        ///     fn::invoke:
        ///       Function: aws:appmesh:getGatewayRoute
        ///       Arguments:
        ///         meshName: test-mesh
        ///         name: test-route
        ///         virtualGatewayName: test-gateway
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetGatewayRouteResult> Invoke(GetGatewayRouteInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGatewayRouteResult>("aws:appmesh/getGatewayRoute:getGatewayRoute", args ?? new GetGatewayRouteInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGatewayRouteArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the service mesh in which the virtual gateway exists.
        /// </summary>
        [Input("meshName", required: true)]
        public string MeshName { get; set; } = null!;

        /// <summary>
        /// AWS account ID of the service mesh's owner.
        /// </summary>
        [Input("meshOwner")]
        public string? MeshOwner { get; set; }

        /// <summary>
        /// Name of the gateway route.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("tags")]
        private Dictionary<string, string>? _tags;

        /// <summary>
        /// Map of tags.
        /// </summary>
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        /// <summary>
        /// Name of the virtual gateway in which the route exists.
        /// </summary>
        [Input("virtualGatewayName", required: true)]
        public string VirtualGatewayName { get; set; } = null!;

        public GetGatewayRouteArgs()
        {
        }
        public static new GetGatewayRouteArgs Empty => new GetGatewayRouteArgs();
    }

    public sealed class GetGatewayRouteInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the service mesh in which the virtual gateway exists.
        /// </summary>
        [Input("meshName", required: true)]
        public Input<string> MeshName { get; set; } = null!;

        /// <summary>
        /// AWS account ID of the service mesh's owner.
        /// </summary>
        [Input("meshOwner")]
        public Input<string>? MeshOwner { get; set; }

        /// <summary>
        /// Name of the gateway route.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Map of tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Name of the virtual gateway in which the route exists.
        /// </summary>
        [Input("virtualGatewayName", required: true)]
        public Input<string> VirtualGatewayName { get; set; } = null!;

        public GetGatewayRouteInvokeArgs()
        {
        }
        public static new GetGatewayRouteInvokeArgs Empty => new GetGatewayRouteInvokeArgs();
    }


    [OutputType]
    public sealed class GetGatewayRouteResult
    {
        /// <summary>
        /// ARN of the gateway route.
        /// </summary>
        public readonly string Arn;
        /// <summary>
        /// Creation date of the gateway route.
        /// </summary>
        public readonly string CreatedDate;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Last update date of the gateway route.
        /// </summary>
        public readonly string LastUpdatedDate;
        public readonly string MeshName;
        public readonly string MeshOwner;
        public readonly string Name;
        /// <summary>
        /// Resource owner's AWS account ID.
        /// </summary>
        public readonly string ResourceOwner;
        /// <summary>
        /// Gateway route specification. See the `aws.appmesh.GatewayRoute` resource for details.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetGatewayRouteSpecResult> Specs;
        /// <summary>
        /// Map of tags.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        public readonly string VirtualGatewayName;

        [OutputConstructor]
        private GetGatewayRouteResult(
            string arn,

            string createdDate,

            string id,

            string lastUpdatedDate,

            string meshName,

            string meshOwner,

            string name,

            string resourceOwner,

            ImmutableArray<Outputs.GetGatewayRouteSpecResult> specs,

            ImmutableDictionary<string, string> tags,

            string virtualGatewayName)
        {
            Arn = arn;
            CreatedDate = createdDate;
            Id = id;
            LastUpdatedDate = lastUpdatedDate;
            MeshName = meshName;
            MeshOwner = meshOwner;
            Name = name;
            ResourceOwner = resourceOwner;
            Specs = specs;
            Tags = tags;
            VirtualGatewayName = virtualGatewayName;
        }
    }
}
