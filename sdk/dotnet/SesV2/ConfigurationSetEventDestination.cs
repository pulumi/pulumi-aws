// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.SesV2
{
    /// <summary>
    /// Resource for managing an AWS SESv2 (Simple Email V2) Configuration Set Event Destination.
    /// 
    /// ## Example Usage
    /// ### Cloud Watch Destination
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleConfigurationSet = new Aws.SesV2.ConfigurationSet("exampleConfigurationSet", new()
    ///     {
    ///         ConfigurationSetName = "example",
    ///     });
    /// 
    ///     var exampleConfigurationSetEventDestination = new Aws.SesV2.ConfigurationSetEventDestination("exampleConfigurationSetEventDestination", new()
    ///     {
    ///         ConfigurationSetName = exampleConfigurationSet.ConfigurationSetName,
    ///         EventDestinationName = "example",
    ///         EventDestination = new Aws.SesV2.Inputs.ConfigurationSetEventDestinationEventDestinationArgs
    ///         {
    ///             CloudWatchDestination = new Aws.SesV2.Inputs.ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationArgs
    ///             {
    ///                 DimensionConfigurations = new[]
    ///                 {
    ///                     new Aws.SesV2.Inputs.ConfigurationSetEventDestinationEventDestinationCloudWatchDestinationDimensionConfigurationArgs
    ///                     {
    ///                         DefaultDimensionValue = "example",
    ///                         DimensionName = "example",
    ///                         DimensionValueSource = "MESSAGE_TAG",
    ///                     },
    ///                 },
    ///             },
    ///             Enabled = true,
    ///             MatchingEventTypes = new[]
    ///             {
    ///                 "SEND",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### Kinesis Firehose Destination
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleConfigurationSet = new Aws.SesV2.ConfigurationSet("exampleConfigurationSet", new()
    ///     {
    ///         ConfigurationSetName = "example",
    ///     });
    /// 
    ///     var exampleConfigurationSetEventDestination = new Aws.SesV2.ConfigurationSetEventDestination("exampleConfigurationSetEventDestination", new()
    ///     {
    ///         ConfigurationSetName = exampleConfigurationSet.ConfigurationSetName,
    ///         EventDestinationName = "example",
    ///         EventDestination = new Aws.SesV2.Inputs.ConfigurationSetEventDestinationEventDestinationArgs
    ///         {
    ///             KinesisFirehoseDestination = new Aws.SesV2.Inputs.ConfigurationSetEventDestinationEventDestinationKinesisFirehoseDestinationArgs
    ///             {
    ///                 DeliveryStreamArn = aws_kinesis_firehose_delivery_stream.Example.Arn,
    ///                 IamRoleArn = aws_iam_role.Example.Arn,
    ///             },
    ///             Enabled = true,
    ///             MatchingEventTypes = new[]
    ///             {
    ///                 "SEND",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### Pinpoint Destination
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleConfigurationSet = new Aws.SesV2.ConfigurationSet("exampleConfigurationSet", new()
    ///     {
    ///         ConfigurationSetName = "example",
    ///     });
    /// 
    ///     var exampleConfigurationSetEventDestination = new Aws.SesV2.ConfigurationSetEventDestination("exampleConfigurationSetEventDestination", new()
    ///     {
    ///         ConfigurationSetName = exampleConfigurationSet.ConfigurationSetName,
    ///         EventDestinationName = "example",
    ///         EventDestination = new Aws.SesV2.Inputs.ConfigurationSetEventDestinationEventDestinationArgs
    ///         {
    ///             PinpointDestination = new Aws.SesV2.Inputs.ConfigurationSetEventDestinationEventDestinationPinpointDestinationArgs
    ///             {
    ///                 ApplicationArn = aws_pinpoint_app.Example.Arn,
    ///             },
    ///             Enabled = true,
    ///             MatchingEventTypes = new[]
    ///             {
    ///                 "SEND",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### SNS Destination
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleConfigurationSet = new Aws.SesV2.ConfigurationSet("exampleConfigurationSet", new()
    ///     {
    ///         ConfigurationSetName = "example",
    ///     });
    /// 
    ///     var exampleConfigurationSetEventDestination = new Aws.SesV2.ConfigurationSetEventDestination("exampleConfigurationSetEventDestination", new()
    ///     {
    ///         ConfigurationSetName = exampleConfigurationSet.ConfigurationSetName,
    ///         EventDestinationName = "example",
    ///         EventDestination = new Aws.SesV2.Inputs.ConfigurationSetEventDestinationEventDestinationArgs
    ///         {
    ///             SnsDestination = new Aws.SesV2.Inputs.ConfigurationSetEventDestinationEventDestinationSnsDestinationArgs
    ///             {
    ///                 TopicArn = aws_sns_topic.Example.Arn,
    ///             },
    ///             Enabled = true,
    ///             MatchingEventTypes = new[]
    ///             {
    ///                 "SEND",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// terraform import {
    /// 
    ///  to = aws_sesv2_configuration_set_event_destination.example
    /// 
    ///  id = "example_configuration_set|example_event_destination" } Using `pulumi import`, import SESv2 (Simple Email V2) Configuration Set Event Destination using the `id` (`configuration_set_name|event_destination_name`). For exampleconsole % pulumi import aws_sesv2_configuration_set_event_destination.example example_configuration_set|example_event_destination
    /// </summary>
    [AwsResourceType("aws:sesv2/configurationSetEventDestination:ConfigurationSetEventDestination")]
    public partial class ConfigurationSetEventDestination : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the configuration set.
        /// </summary>
        [Output("configurationSetName")]
        public Output<string> ConfigurationSetName { get; private set; } = null!;

        /// <summary>
        /// A name that identifies the event destination within the configuration set.
        /// </summary>
        [Output("eventDestination")]
        public Output<Outputs.ConfigurationSetEventDestinationEventDestination> EventDestination { get; private set; } = null!;

        /// <summary>
        /// An object that defines the event destination. See event_destination below.
        /// </summary>
        [Output("eventDestinationName")]
        public Output<string> EventDestinationName { get; private set; } = null!;


        /// <summary>
        /// Create a ConfigurationSetEventDestination resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ConfigurationSetEventDestination(string name, ConfigurationSetEventDestinationArgs args, CustomResourceOptions? options = null)
            : base("aws:sesv2/configurationSetEventDestination:ConfigurationSetEventDestination", name, args ?? new ConfigurationSetEventDestinationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ConfigurationSetEventDestination(string name, Input<string> id, ConfigurationSetEventDestinationState? state = null, CustomResourceOptions? options = null)
            : base("aws:sesv2/configurationSetEventDestination:ConfigurationSetEventDestination", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ConfigurationSetEventDestination resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ConfigurationSetEventDestination Get(string name, Input<string> id, ConfigurationSetEventDestinationState? state = null, CustomResourceOptions? options = null)
        {
            return new ConfigurationSetEventDestination(name, id, state, options);
        }
    }

    public sealed class ConfigurationSetEventDestinationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the configuration set.
        /// </summary>
        [Input("configurationSetName", required: true)]
        public Input<string> ConfigurationSetName { get; set; } = null!;

        /// <summary>
        /// A name that identifies the event destination within the configuration set.
        /// </summary>
        [Input("eventDestination", required: true)]
        public Input<Inputs.ConfigurationSetEventDestinationEventDestinationArgs> EventDestination { get; set; } = null!;

        /// <summary>
        /// An object that defines the event destination. See event_destination below.
        /// </summary>
        [Input("eventDestinationName", required: true)]
        public Input<string> EventDestinationName { get; set; } = null!;

        public ConfigurationSetEventDestinationArgs()
        {
        }
        public static new ConfigurationSetEventDestinationArgs Empty => new ConfigurationSetEventDestinationArgs();
    }

    public sealed class ConfigurationSetEventDestinationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the configuration set.
        /// </summary>
        [Input("configurationSetName")]
        public Input<string>? ConfigurationSetName { get; set; }

        /// <summary>
        /// A name that identifies the event destination within the configuration set.
        /// </summary>
        [Input("eventDestination")]
        public Input<Inputs.ConfigurationSetEventDestinationEventDestinationGetArgs>? EventDestination { get; set; }

        /// <summary>
        /// An object that defines the event destination. See event_destination below.
        /// </summary>
        [Input("eventDestinationName")]
        public Input<string>? EventDestinationName { get; set; }

        public ConfigurationSetEventDestinationState()
        {
        }
        public static new ConfigurationSetEventDestinationState Empty => new ConfigurationSetEventDestinationState();
    }
}
