// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.SesV2
{
    /// <summary>
    /// Resource for managing an AWS SESv2 (Simple Email V2) Email Identity.
    /// 
    /// ## Example Usage
    /// 
    /// ### Basic Usage
    /// ### Email Address Identity
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.SesV2.EmailIdentity("example", new()
    ///     {
    ///         EmailIdentityDetails = "testing@example.com",
    ///     });
    /// 
    /// });
    /// ```
    /// ### Domain Identity
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.SesV2.EmailIdentity("example", new()
    ///     {
    ///         EmailIdentityDetails = "example.com",
    ///     });
    /// 
    /// });
    /// ```
    /// ### Configuration Set
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleConfigurationSet = new Aws.SesV2.ConfigurationSet("exampleConfigurationSet", new()
    ///     {
    ///         ConfigurationSetName = "example",
    ///     });
    /// 
    ///     var exampleEmailIdentity = new Aws.SesV2.EmailIdentity("exampleEmailIdentity", new()
    ///     {
    ///         EmailIdentityDetails = "example.com",
    ///         ConfigurationSetName = exampleConfigurationSet.ConfigurationSetName,
    ///     });
    /// 
    /// });
    /// ```
    /// ### DKIM Signing Attributes (BYODKIM)
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.SesV2.EmailIdentity("example", new()
    ///     {
    ///         DkimSigningAttributes = new Aws.SesV2.Inputs.EmailIdentityDkimSigningAttributesArgs
    ///         {
    ///             DomainSigningPrivateKey = "MIIJKAIBAAKCAgEA2Se7p8zvnI4yh+Gh9j2rG5e2aRXjg03Y8saiupLnadPH9xvM...",
    ///             DomainSigningSelector = "example",
    ///         },
    ///         EmailIdentityDetails = "example.com",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// SESv2 (Simple Email V2) Email Identity can be imported using the `email_identity`, e.g.,
    /// 
    /// ```sh
    ///  $ pulumi import aws:sesv2/emailIdentity:EmailIdentity example example.com
    /// ```
    /// </summary>
    [AwsResourceType("aws:sesv2/emailIdentity:EmailIdentity")]
    public partial class EmailIdentity : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ARN of the Email Identity.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// The configuration set to use by default when sending from this identity. Note that any configuration set defined in the email sending request takes precedence.
        /// </summary>
        [Output("configurationSetName")]
        public Output<string?> ConfigurationSetName { get; private set; } = null!;

        /// <summary>
        /// The configuration of the DKIM authentication settings for an email domain identity.
        /// </summary>
        [Output("dkimSigningAttributes")]
        public Output<Outputs.EmailIdentityDkimSigningAttributes> DkimSigningAttributes { get; private set; } = null!;

        /// <summary>
        /// The email address or domain to verify.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Output("emailIdentity")]
        public Output<string> EmailIdentityDetails { get; private set; } = null!;

        /// <summary>
        /// The email identity type. Valid values: `EMAIL_ADDRESS`, `DOMAIN`.
        /// </summary>
        [Output("identityType")]
        public Output<string> IdentityType { get; private set; } = null!;

        /// <summary>
        /// Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        /// <summary>
        /// Specifies whether or not the identity is verified.
        /// </summary>
        [Output("verifiedForSendingStatus")]
        public Output<bool> VerifiedForSendingStatus { get; private set; } = null!;


        /// <summary>
        /// Create a EmailIdentity resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EmailIdentity(string name, EmailIdentityArgs args, CustomResourceOptions? options = null)
            : base("aws:sesv2/emailIdentity:EmailIdentity", name, args ?? new EmailIdentityArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EmailIdentity(string name, Input<string> id, EmailIdentityState? state = null, CustomResourceOptions? options = null)
            : base("aws:sesv2/emailIdentity:EmailIdentity", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EmailIdentity resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EmailIdentity Get(string name, Input<string> id, EmailIdentityState? state = null, CustomResourceOptions? options = null)
        {
            return new EmailIdentity(name, id, state, options);
        }
    }

    public sealed class EmailIdentityArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The configuration set to use by default when sending from this identity. Note that any configuration set defined in the email sending request takes precedence.
        /// </summary>
        [Input("configurationSetName")]
        public Input<string>? ConfigurationSetName { get; set; }

        /// <summary>
        /// The configuration of the DKIM authentication settings for an email domain identity.
        /// </summary>
        [Input("dkimSigningAttributes")]
        public Input<Inputs.EmailIdentityDkimSigningAttributesArgs>? DkimSigningAttributes { get; set; }

        /// <summary>
        /// The email address or domain to verify.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("emailIdentity", required: true)]
        public Input<string> EmailIdentityDetails { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public EmailIdentityArgs()
        {
        }
        public static new EmailIdentityArgs Empty => new EmailIdentityArgs();
    }

    public sealed class EmailIdentityState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ARN of the Email Identity.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// The configuration set to use by default when sending from this identity. Note that any configuration set defined in the email sending request takes precedence.
        /// </summary>
        [Input("configurationSetName")]
        public Input<string>? ConfigurationSetName { get; set; }

        /// <summary>
        /// The configuration of the DKIM authentication settings for an email domain identity.
        /// </summary>
        [Input("dkimSigningAttributes")]
        public Input<Inputs.EmailIdentityDkimSigningAttributesGetArgs>? DkimSigningAttributes { get; set; }

        /// <summary>
        /// The email address or domain to verify.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("emailIdentity")]
        public Input<string>? EmailIdentityDetails { get; set; }

        /// <summary>
        /// The email identity type. Valid values: `EMAIL_ADDRESS`, `DOMAIN`.
        /// </summary>
        [Input("identityType")]
        public Input<string>? IdentityType { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        /// <summary>
        /// Specifies whether or not the identity is verified.
        /// </summary>
        [Input("verifiedForSendingStatus")]
        public Input<bool>? VerifiedForSendingStatus { get; set; }

        public EmailIdentityState()
        {
        }
        public static new EmailIdentityState Empty => new EmailIdentityState();
    }
}
