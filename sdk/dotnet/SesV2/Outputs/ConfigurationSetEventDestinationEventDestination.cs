// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.SesV2.Outputs
{

    [OutputType]
    public sealed class ConfigurationSetEventDestinationEventDestination
    {
        /// <summary>
        /// An object that defines an Amazon CloudWatch destination for email events. See cloud_watch_destination below
        /// </summary>
        public readonly Outputs.ConfigurationSetEventDestinationEventDestinationCloudWatchDestination? CloudWatchDestination;
        /// <summary>
        /// When the event destination is enabled, the specified event types are sent to the destinations. Default: `false`.
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// An object that defines an Amazon Kinesis Data Firehose destination for email events. See kinesis_firehose_destination below.
        /// </summary>
        public readonly Outputs.ConfigurationSetEventDestinationEventDestinationKinesisFirehoseDestination? KinesisFirehoseDestination;
        /// <summary>
        /// An array that specifies which events the Amazon SES API v2 should send to the destinations. Valid values: `SEND`, `REJECT`, `BOUNCE`, `COMPLAINT`, `DELIVERY`, `OPEN`, `CLICK`, `RENDERING_FAILURE`, `DELIVERY_DELAY`, `SUBSCRIPTION`.
        /// 
        /// The following arguments are optional:
        /// </summary>
        public readonly ImmutableArray<string> MatchingEventTypes;
        /// <summary>
        /// An object that defines an Amazon Pinpoint project destination for email events. See pinpoint_destination below.
        /// </summary>
        public readonly Outputs.ConfigurationSetEventDestinationEventDestinationPinpointDestination? PinpointDestination;
        /// <summary>
        /// An object that defines an Amazon SNS destination for email events. See sns_destination below.
        /// </summary>
        public readonly Outputs.ConfigurationSetEventDestinationEventDestinationSnsDestination? SnsDestination;

        [OutputConstructor]
        private ConfigurationSetEventDestinationEventDestination(
            Outputs.ConfigurationSetEventDestinationEventDestinationCloudWatchDestination? cloudWatchDestination,

            bool? enabled,

            Outputs.ConfigurationSetEventDestinationEventDestinationKinesisFirehoseDestination? kinesisFirehoseDestination,

            ImmutableArray<string> matchingEventTypes,

            Outputs.ConfigurationSetEventDestinationEventDestinationPinpointDestination? pinpointDestination,

            Outputs.ConfigurationSetEventDestinationEventDestinationSnsDestination? snsDestination)
        {
            CloudWatchDestination = cloudWatchDestination;
            Enabled = enabled;
            KinesisFirehoseDestination = kinesisFirehoseDestination;
            MatchingEventTypes = matchingEventTypes;
            PinpointDestination = pinpointDestination;
            SnsDestination = snsDestination;
        }
    }
}
