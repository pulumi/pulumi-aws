// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Emr
{
    [AwsResourceType("aws:emr/cluster:Cluster")]
    public partial class Cluster : global::Pulumi.CustomResource
    {
        [Output("additionalInfo")]
        public Output<string?> AdditionalInfo { get; private set; } = null!;

        [Output("applications")]
        public Output<ImmutableArray<string>> Applications { get; private set; } = null!;

        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("autoTerminationPolicy")]
        public Output<Outputs.ClusterAutoTerminationPolicy?> AutoTerminationPolicy { get; private set; } = null!;

        [Output("autoscalingRole")]
        public Output<string?> AutoscalingRole { get; private set; } = null!;

        [Output("bootstrapActions")]
        public Output<ImmutableArray<Outputs.ClusterBootstrapAction>> BootstrapActions { get; private set; } = null!;

        [Output("clusterState")]
        public Output<string> State { get; private set; } = null!;

        [Output("configurations")]
        public Output<string?> Configurations { get; private set; } = null!;

        [Output("configurationsJson")]
        public Output<string?> ConfigurationsJson { get; private set; } = null!;

        [Output("coreInstanceFleet")]
        public Output<Outputs.ClusterCoreInstanceFleet> CoreInstanceFleet { get; private set; } = null!;

        [Output("coreInstanceGroup")]
        public Output<Outputs.ClusterCoreInstanceGroup> CoreInstanceGroup { get; private set; } = null!;

        [Output("customAmiId")]
        public Output<string?> CustomAmiId { get; private set; } = null!;

        [Output("ebsRootVolumeSize")]
        public Output<int?> EbsRootVolumeSize { get; private set; } = null!;

        [Output("ec2Attributes")]
        public Output<Outputs.ClusterEc2Attributes?> Ec2Attributes { get; private set; } = null!;

        [Output("keepJobFlowAliveWhenNoSteps")]
        public Output<bool> KeepJobFlowAliveWhenNoSteps { get; private set; } = null!;

        [Output("kerberosAttributes")]
        public Output<Outputs.ClusterKerberosAttributes?> KerberosAttributes { get; private set; } = null!;

        [Output("listStepsStates")]
        public Output<ImmutableArray<string>> ListStepsStates { get; private set; } = null!;

        [Output("logEncryptionKmsKeyId")]
        public Output<string?> LogEncryptionKmsKeyId { get; private set; } = null!;

        [Output("logUri")]
        public Output<string?> LogUri { get; private set; } = null!;

        [Output("masterInstanceFleet")]
        public Output<Outputs.ClusterMasterInstanceFleet> MasterInstanceFleet { get; private set; } = null!;

        [Output("masterInstanceGroup")]
        public Output<Outputs.ClusterMasterInstanceGroup> MasterInstanceGroup { get; private set; } = null!;

        [Output("masterPublicDns")]
        public Output<string> MasterPublicDns { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("releaseLabel")]
        public Output<string> ReleaseLabel { get; private set; } = null!;

        [Output("scaleDownBehavior")]
        public Output<string> ScaleDownBehavior { get; private set; } = null!;

        [Output("securityConfiguration")]
        public Output<string?> SecurityConfiguration { get; private set; } = null!;

        [Output("serviceRole")]
        public Output<string> ServiceRole { get; private set; } = null!;

        [Output("stepConcurrencyLevel")]
        public Output<int?> StepConcurrencyLevel { get; private set; } = null!;

        [Output("steps")]
        public Output<ImmutableArray<Outputs.ClusterStep>> Steps { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("terminationProtection")]
        public Output<bool> TerminationProtection { get; private set; } = null!;

        [Output("visibleToAllUsers")]
        public Output<bool?> VisibleToAllUsers { get; private set; } = null!;


        /// <summary>
        /// Create a Cluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Cluster(string name, ClusterArgs args, CustomResourceOptions? options = null)
            : base("aws:emr/cluster:Cluster", name, args ?? new ClusterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Cluster(string name, Input<string> id, ClusterState? state = null, CustomResourceOptions? options = null)
            : base("aws:emr/cluster:Cluster", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Cluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Cluster Get(string name, Input<string> id, ClusterState? state = null, CustomResourceOptions? options = null)
        {
            return new Cluster(name, id, state, options);
        }
    }

    public sealed class ClusterArgs : global::Pulumi.ResourceArgs
    {
        [Input("additionalInfo")]
        public Input<string>? AdditionalInfo { get; set; }

        [Input("applications")]
        private InputList<string>? _applications;
        public InputList<string> Applications
        {
            get => _applications ?? (_applications = new InputList<string>());
            set => _applications = value;
        }

        [Input("autoTerminationPolicy")]
        public Input<Inputs.ClusterAutoTerminationPolicyArgs>? AutoTerminationPolicy { get; set; }

        [Input("autoscalingRole")]
        public Input<string>? AutoscalingRole { get; set; }

        [Input("bootstrapActions")]
        private InputList<Inputs.ClusterBootstrapActionArgs>? _bootstrapActions;
        public InputList<Inputs.ClusterBootstrapActionArgs> BootstrapActions
        {
            get => _bootstrapActions ?? (_bootstrapActions = new InputList<Inputs.ClusterBootstrapActionArgs>());
            set => _bootstrapActions = value;
        }

        [Input("configurations")]
        public Input<string>? Configurations { get; set; }

        [Input("configurationsJson")]
        public Input<string>? ConfigurationsJson { get; set; }

        [Input("coreInstanceFleet")]
        public Input<Inputs.ClusterCoreInstanceFleetArgs>? CoreInstanceFleet { get; set; }

        [Input("coreInstanceGroup")]
        public Input<Inputs.ClusterCoreInstanceGroupArgs>? CoreInstanceGroup { get; set; }

        [Input("customAmiId")]
        public Input<string>? CustomAmiId { get; set; }

        [Input("ebsRootVolumeSize")]
        public Input<int>? EbsRootVolumeSize { get; set; }

        [Input("ec2Attributes")]
        public Input<Inputs.ClusterEc2AttributesArgs>? Ec2Attributes { get; set; }

        [Input("keepJobFlowAliveWhenNoSteps")]
        public Input<bool>? KeepJobFlowAliveWhenNoSteps { get; set; }

        [Input("kerberosAttributes")]
        public Input<Inputs.ClusterKerberosAttributesArgs>? KerberosAttributes { get; set; }

        [Input("listStepsStates")]
        private InputList<string>? _listStepsStates;
        public InputList<string> ListStepsStates
        {
            get => _listStepsStates ?? (_listStepsStates = new InputList<string>());
            set => _listStepsStates = value;
        }

        [Input("logEncryptionKmsKeyId")]
        public Input<string>? LogEncryptionKmsKeyId { get; set; }

        [Input("logUri")]
        public Input<string>? LogUri { get; set; }

        [Input("masterInstanceFleet")]
        public Input<Inputs.ClusterMasterInstanceFleetArgs>? MasterInstanceFleet { get; set; }

        [Input("masterInstanceGroup")]
        public Input<Inputs.ClusterMasterInstanceGroupArgs>? MasterInstanceGroup { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("releaseLabel", required: true)]
        public Input<string> ReleaseLabel { get; set; } = null!;

        [Input("scaleDownBehavior")]
        public Input<string>? ScaleDownBehavior { get; set; }

        [Input("securityConfiguration")]
        public Input<string>? SecurityConfiguration { get; set; }

        [Input("serviceRole", required: true)]
        public Input<string> ServiceRole { get; set; } = null!;

        [Input("stepConcurrencyLevel")]
        public Input<int>? StepConcurrencyLevel { get; set; }

        [Input("steps")]
        private InputList<Inputs.ClusterStepArgs>? _steps;
        public InputList<Inputs.ClusterStepArgs> Steps
        {
            get => _steps ?? (_steps = new InputList<Inputs.ClusterStepArgs>());
            set => _steps = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("terminationProtection")]
        public Input<bool>? TerminationProtection { get; set; }

        [Input("visibleToAllUsers")]
        public Input<bool>? VisibleToAllUsers { get; set; }

        public ClusterArgs()
        {
        }
        public static new ClusterArgs Empty => new ClusterArgs();
    }

    public sealed class ClusterState : global::Pulumi.ResourceArgs
    {
        [Input("additionalInfo")]
        public Input<string>? AdditionalInfo { get; set; }

        [Input("applications")]
        private InputList<string>? _applications;
        public InputList<string> Applications
        {
            get => _applications ?? (_applications = new InputList<string>());
            set => _applications = value;
        }

        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("autoTerminationPolicy")]
        public Input<Inputs.ClusterAutoTerminationPolicyGetArgs>? AutoTerminationPolicy { get; set; }

        [Input("autoscalingRole")]
        public Input<string>? AutoscalingRole { get; set; }

        [Input("bootstrapActions")]
        private InputList<Inputs.ClusterBootstrapActionGetArgs>? _bootstrapActions;
        public InputList<Inputs.ClusterBootstrapActionGetArgs> BootstrapActions
        {
            get => _bootstrapActions ?? (_bootstrapActions = new InputList<Inputs.ClusterBootstrapActionGetArgs>());
            set => _bootstrapActions = value;
        }

        [Input("clusterState")]
        public Input<string>? State { get; set; }

        [Input("configurations")]
        public Input<string>? Configurations { get; set; }

        [Input("configurationsJson")]
        public Input<string>? ConfigurationsJson { get; set; }

        [Input("coreInstanceFleet")]
        public Input<Inputs.ClusterCoreInstanceFleetGetArgs>? CoreInstanceFleet { get; set; }

        [Input("coreInstanceGroup")]
        public Input<Inputs.ClusterCoreInstanceGroupGetArgs>? CoreInstanceGroup { get; set; }

        [Input("customAmiId")]
        public Input<string>? CustomAmiId { get; set; }

        [Input("ebsRootVolumeSize")]
        public Input<int>? EbsRootVolumeSize { get; set; }

        [Input("ec2Attributes")]
        public Input<Inputs.ClusterEc2AttributesGetArgs>? Ec2Attributes { get; set; }

        [Input("keepJobFlowAliveWhenNoSteps")]
        public Input<bool>? KeepJobFlowAliveWhenNoSteps { get; set; }

        [Input("kerberosAttributes")]
        public Input<Inputs.ClusterKerberosAttributesGetArgs>? KerberosAttributes { get; set; }

        [Input("listStepsStates")]
        private InputList<string>? _listStepsStates;
        public InputList<string> ListStepsStates
        {
            get => _listStepsStates ?? (_listStepsStates = new InputList<string>());
            set => _listStepsStates = value;
        }

        [Input("logEncryptionKmsKeyId")]
        public Input<string>? LogEncryptionKmsKeyId { get; set; }

        [Input("logUri")]
        public Input<string>? LogUri { get; set; }

        [Input("masterInstanceFleet")]
        public Input<Inputs.ClusterMasterInstanceFleetGetArgs>? MasterInstanceFleet { get; set; }

        [Input("masterInstanceGroup")]
        public Input<Inputs.ClusterMasterInstanceGroupGetArgs>? MasterInstanceGroup { get; set; }

        [Input("masterPublicDns")]
        public Input<string>? MasterPublicDns { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("releaseLabel")]
        public Input<string>? ReleaseLabel { get; set; }

        [Input("scaleDownBehavior")]
        public Input<string>? ScaleDownBehavior { get; set; }

        [Input("securityConfiguration")]
        public Input<string>? SecurityConfiguration { get; set; }

        [Input("serviceRole")]
        public Input<string>? ServiceRole { get; set; }

        [Input("stepConcurrencyLevel")]
        public Input<int>? StepConcurrencyLevel { get; set; }

        [Input("steps")]
        private InputList<Inputs.ClusterStepGetArgs>? _steps;
        public InputList<Inputs.ClusterStepGetArgs> Steps
        {
            get => _steps ?? (_steps = new InputList<Inputs.ClusterStepGetArgs>());
            set => _steps = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("terminationProtection")]
        public Input<bool>? TerminationProtection { get; set; }

        [Input("visibleToAllUsers")]
        public Input<bool>? VisibleToAllUsers { get; set; }

        public ClusterState()
        {
        }
        public static new ClusterState Empty => new ClusterState();
    }
}
