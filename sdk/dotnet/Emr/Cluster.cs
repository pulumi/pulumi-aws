// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Emr
{
    /// <summary>
    /// Provides an Elastic MapReduce Cluster, a web service that makes it easy to
    /// process large amounts of data efficiently. See [Amazon Elastic MapReduce Documentation](https://aws.amazon.com/documentation/elastic-mapreduce/)
    /// for more information.
    /// 
    /// To configure [Instance Groups](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for [task nodes](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-task), see the [`aws.emr.InstanceGroup` resource](https://www.terraform.io/docs/providers/aws/r/emr_instance_group.html).
    /// 
    /// &gt; Support for [Instance Fleets](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-fleets) will be made available in an upcoming release.
    /// 
    /// ## core_instance_group Configuration Block
    /// 
    /// Supported arguments for the `core_instance_group` configuration block:
    /// 
    /// * `instance_type` - (Required) EC2 instance type for all instances in the instance group.
    /// * `autoscaling_policy` - (Optional) String containing the [EMR Auto Scaling Policy](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-automatic-scaling.html) JSON.
    /// * `bid_price` - (Optional) Bid price for each EC2 instance in the instance group, expressed in USD. By setting this attribute, the instance group is being declared as a Spot Instance, and will implicitly create a Spot request. Leave this blank to use On-Demand Instances.
    /// * `ebs_config` - (Optional) Configuration block(s) for EBS volumes attached to each instance in the instance group. Detailed below.
    /// * `instance_count` - (Optional) Target number of instances for the instance group. Must be at least 1. Defaults to 1.
    /// * `name` - (Optional) Friendly name given to the instance group.
    /// 
    /// ## ec2_attributes
    /// 
    /// Attributes for the Amazon EC2 instances running the job flow
    /// 
    /// * `key_name` - (Optional) Amazon EC2 key pair that can be used to ssh to the master node as the user called `hadoop`
    /// * `subnet_id` - (Optional) VPC subnet id where you want the job flow to launch. Cannot specify the `cc1.4xlarge` instance type for nodes of a job flow launched in a Amazon VPC
    /// * `additional_master_security_groups` - (Optional) String containing a comma separated list of additional Amazon EC2 security group IDs for the master node
    /// * `additional_slave_security_groups` - (Optional) String containing a comma separated list of additional Amazon EC2 security group IDs for the slave nodes as a comma separated string
    /// * `emr_managed_master_security_group` - (Optional) Identifier of the Amazon EC2 EMR-Managed security group for the master node
    /// * `emr_managed_slave_security_group` - (Optional) Identifier of the Amazon EC2 EMR-Managed security group for the slave nodes
    /// * `service_access_security_group` - (Optional) Identifier of the Amazon EC2 service-access security group - required when the cluster runs on a private subnet
    /// * `instance_profile` - (Required) Instance Profile for EC2 instances of the cluster assume this role
    /// 
    /// &gt; **NOTE on EMR-Managed security groups:** These security groups will have any
    /// missing inbound or outbound access rules added and maintained by AWS, to ensure
    /// proper communication between instances in a cluster. The EMR service will
    /// maintain these rules for groups provided in `emr_managed_master_security_group`
    /// and `emr_managed_slave_security_group`; attempts to remove the required rules
    /// may succeed, only for the EMR service to re-add them in a matter of minutes.
    /// This may cause this provider to fail to destroy an environment that contains an EMR
    /// cluster, because the EMR service does not revoke rules added on deletion,
    /// leaving a cyclic dependency between the security groups that prevents their
    /// deletion. To avoid this, use the `revoke_rules_on_delete` optional attribute for
    /// any Security Group used in `emr_managed_master_security_group` and
    /// `emr_managed_slave_security_group`. See [Amazon EMR-Managed Security
    /// Groups](http://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-man-sec-groups.html)
    /// for more information about the EMR-managed security group rules.
    /// 
    /// ## kerberos_attributes
    /// 
    /// Attributes for Kerberos configuration
    /// 
    /// * `ad_domain_join_password` - (Optional) The Active Directory password for `ad_domain_join_user`. This provider cannot perform drift detection of this configuration.
    /// * `ad_domain_join_user` - (Optional) Required only when establishing a cross-realm trust with an Active Directory domain. A user with sufficient privileges to join resources to the domain. This provider cannot perform drift detection of this configuration.
    /// * `cross_realm_trust_principal_password` - (Optional) Required only when establishing a cross-realm trust with a KDC in a different realm. The cross-realm principal password, which must be identical across realms. This provider cannot perform drift detection of this configuration.
    /// * `kdc_admin_password` - (Required) The password used within the cluster for the kadmin service on the cluster-dedicated KDC, which maintains Kerberos principals, password policies, and keytabs for the cluster. This provider cannot perform drift detection of this configuration.
    /// * `realm` - (Required) The name of the Kerberos realm to which all nodes in a cluster belong. For example, `EC2.INTERNAL`
    /// 
    /// ## instance_group
    /// 
    /// Attributes for each task instance group in the cluster
    /// 
    /// * `instance_role` - (Required) The role of the instance group in the cluster. Valid values are: `MASTER`, `CORE`, and `TASK`.
    /// * `instance_type` - (Required) The EC2 instance type for all instances in the instance group
    /// * `instance_count` - (Optional) Target number of instances for the instance group
    /// * `name` - (Optional) Friendly name given to the instance group
    /// * `bid_price` - (Optional) If set, the bid price for each EC2 instance in the instance group, expressed in USD. By setting this attribute, the instance group is being declared as a Spot Instance, and will implicitly create a Spot request. Leave this blank to use On-Demand Instances.
    /// * `ebs_config` - (Optional) A list of attributes for the EBS volumes attached to each instance in the instance group. Each `ebs_config` defined will result in additional EBS volumes being attached to _each_ instance in the instance group. Defined below
    /// * `autoscaling_policy` - (Optional) The autoscaling policy document. This is a JSON formatted string. See [EMR Auto Scaling](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-automatic-scaling.html)
    /// 
    /// ## master_instance_group Configuration Block
    /// 
    /// Supported nested arguments for the `master_instance_group` configuration block:
    /// 
    /// * `instance_type` - (Required) EC2 instance type for all instances in the instance group.
    /// * `bid_price` - (Optional) Bid price for each EC2 instance in the instance group, expressed in USD. By setting this attribute, the instance group is being declared as a Spot Instance, and will implicitly create a Spot request. Leave this blank to use On-Demand Instances.
    /// * `ebs_config` - (Optional) Configuration block(s) for EBS volumes attached to each instance in the instance group. Detailed below.
    /// * `instance_count` - (Optional) Target number of instances for the instance group. Must be 1 or 3. Defaults to 1. Launching with multiple master nodes is only supported in EMR version 5.23.0+, and requires this resource's `core_instance_group` to be configured. Public (Internet accessible) instances must be created in VPC subnets that have [map public IP on launch](https://www.terraform.io/docs/providers/aws/r/subnet.html#map_public_ip_on_launch) enabled. Termination protection is automatically enabled when launched with multiple master nodes and this provider must have the `termination_protection = false` configuration applied before destroying this resource.
    /// * `name` - (Optional) Friendly name given to the instance group.
    /// 
    /// ## ebs_config
    /// 
    /// Attributes for the EBS volumes attached to each EC2 instance in the `instance_group`
    /// 
    /// * `size` - (Required) The volume size, in gibibytes (GiB).
    /// * `type` - (Required) The volume type. Valid options are `gp2`, `io1`, `standard` and `st1`. See [EBS Volume Types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html).
    /// * `iops` - (Optional) The number of I/O operations per second (IOPS) that the volume supports
    /// * `volumes_per_instance` - (Optional) The number of EBS volumes with this configuration to attach to each EC2 instance in the instance group (default is 1)
    /// 
    /// ## bootstrap_action
    /// 
    /// * `name` - (Required) Name of the bootstrap action
    /// * `path` - (Required) Location of the script to run during a bootstrap action. Can be either a location in Amazon S3 or on a local file system
    /// * `args` - (Optional) List of command line arguments to pass to the bootstrap action script
    /// 
    /// ## step
    /// 
    /// Attributes for step configuration
    /// 
    /// * `action_on_failure` - (Required) The action to take if the step fails. Valid values: `TERMINATE_JOB_FLOW`, `TERMINATE_CLUSTER`, `CANCEL_AND_WAIT`, and `CONTINUE`
    /// * `hadoop_jar_step` - (Required) The JAR file used for the step. Defined below.
    /// * `name` - (Required) The name of the step.
    /// 
    /// ### hadoop_jar_step
    /// 
    /// Attributes for Hadoop job step configuration
    /// 
    /// * `args` - (Optional) List of command line arguments passed to the JAR file's main function when executed.
    /// * `jar` - (Required) Path to a JAR file run during the step.
    /// * `main_class` - (Optional) Name of the main class in the specified Java file. If not specified, the JAR file should specify a Main-Class in its manifest file.
    /// * `properties` - (Optional) Key-Value map of Java properties that are set when the step runs. You can use these properties to pass key value pairs to your main function.
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/emr_cluster.html.markdown.
    /// </summary>
    public partial class Cluster : Pulumi.CustomResource
    {
        /// <summary>
        /// A JSON string for selecting additional features such as adding proxy information. Note: Currently there is no API to retrieve the value of this argument after EMR cluster creation from provider, therefore this provider cannot detect drift from the actual EMR cluster if its value is changed outside this provider.
        /// </summary>
        [Output("additionalInfo")]
        public Output<string?> AdditionalInfo { get; private set; } = null!;

        /// <summary>
        /// A list of applications for the cluster. Valid values are: `Flink`, `Hadoop`, `Hive`, `Mahout`, `Pig`, `Spark`, and `JupyterHub` (as of EMR 5.14.0). Case insensitive
        /// </summary>
        [Output("applications")]
        public Output<ImmutableArray<string>> Applications { get; private set; } = null!;

        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// An IAM role for automatic scaling policies. The IAM role provides permissions that the automatic scaling feature requires to launch and terminate EC2 instances in an instance group.
        /// </summary>
        [Output("autoscalingRole")]
        public Output<string?> AutoscalingRole { get; private set; } = null!;

        /// <summary>
        /// List of bootstrap actions that will be run before Hadoop is started on the cluster nodes. Defined below
        /// </summary>
        [Output("bootstrapActions")]
        public Output<ImmutableArray<Outputs.ClusterBootstrapActions>> BootstrapActions { get; private set; } = null!;

        [Output("clusterState")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// List of configurations supplied for the EMR cluster you are creating
        /// </summary>
        [Output("configurations")]
        public Output<string?> Configurations { get; private set; } = null!;

        /// <summary>
        /// A JSON string for supplying list of configurations for the EMR cluster.
        /// </summary>
        [Output("configurationsJson")]
        public Output<string?> ConfigurationsJson { get; private set; } = null!;

        /// <summary>
        /// Use the `core_instance_group` configuration block `instance_count` argument instead. Number of Amazon EC2 instances used to execute the job flow. EMR will use one node as the cluster's master node and use the remainder of the nodes (`core_instance_count`-1) as core nodes. Cannot be specified if `core_instance_group` or `instance_group` configuration blocks are set. Default `1`
        /// </summary>
        [Output("coreInstanceCount")]
        public Output<int> CoreInstanceCount { get; private set; } = null!;

        /// <summary>
        /// Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [core node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-core). Cannot be specified if `core_instance_count` argument, `core_instance_type` argument, or `instance_group` configuration blocks are set. Detailed below.
        /// </summary>
        [Output("coreInstanceGroup")]
        public Output<Outputs.ClusterCoreInstanceGroup> CoreInstanceGroup { get; private set; } = null!;

        /// <summary>
        /// Use the `core_instance_group` configuration block `instance_type` argument instead. The EC2 instance type of the slave nodes. Cannot be specified if `core_instance_group` or `instance_group` configuration blocks are set.
        /// </summary>
        [Output("coreInstanceType")]
        public Output<string> CoreInstanceType { get; private set; } = null!;

        /// <summary>
        /// A custom Amazon Linux AMI for the cluster (instead of an EMR-owned AMI). Available in Amazon EMR version 5.7.0 and later.
        /// </summary>
        [Output("customAmiId")]
        public Output<string?> CustomAmiId { get; private set; } = null!;

        /// <summary>
        /// Size in GiB of the EBS root device volume of the Linux AMI that is used for each EC2 instance. Available in Amazon EMR version 4.x and later.
        /// </summary>
        [Output("ebsRootVolumeSize")]
        public Output<int?> EbsRootVolumeSize { get; private set; } = null!;

        /// <summary>
        /// Attributes for the EC2 instances running the job flow. Defined below
        /// </summary>
        [Output("ec2Attributes")]
        public Output<Outputs.ClusterEc2Attributes?> Ec2Attributes { get; private set; } = null!;

        /// <summary>
        /// Use the `master_instance_group` configuration block, `core_instance_group` configuration block and [`aws.emr.InstanceGroup` resource(s)](https://www.terraform.io/docs/providers/aws/r/emr_instance_group.html) instead. A list of `instance_group` objects for each instance group in the cluster. Exactly one of `master_instance_type` and `instance_group` must be specified. If `instance_group` is set, then it must contain a configuration block for at least the `MASTER` instance group type (as well as any additional instance groups). Cannot be specified if `master_instance_group` or `core_instance_group` configuration blocks are set. Defined below
        /// </summary>
        [Output("instanceGroups")]
        public Output<ImmutableArray<Outputs.ClusterInstanceGroups>> InstanceGroups { get; private set; } = null!;

        /// <summary>
        /// Switch on/off run cluster with no steps or when all steps are complete (default is on)
        /// </summary>
        [Output("keepJobFlowAliveWhenNoSteps")]
        public Output<bool> KeepJobFlowAliveWhenNoSteps { get; private set; } = null!;

        /// <summary>
        /// Kerberos configuration for the cluster. Defined below
        /// </summary>
        [Output("kerberosAttributes")]
        public Output<Outputs.ClusterKerberosAttributes?> KerberosAttributes { get; private set; } = null!;

        /// <summary>
        /// S3 bucket to write the log files of the job flow. If a value is not provided, logs are not created
        /// </summary>
        [Output("logUri")]
        public Output<string?> LogUri { get; private set; } = null!;

        /// <summary>
        /// Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [master node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-master). Cannot be specified if `master_instance_type` argument or `instance_group` configuration blocks are set. Detailed below.
        /// </summary>
        [Output("masterInstanceGroup")]
        public Output<Outputs.ClusterMasterInstanceGroup> MasterInstanceGroup { get; private set; } = null!;

        /// <summary>
        /// Use the `master_instance_group` configuration block `instance_type` argument instead. The EC2 instance type of the master node. Cannot be specified if `master_instance_group` or `instance_group` configuration blocks are set.
        /// </summary>
        [Output("masterInstanceType")]
        public Output<string> MasterInstanceType { get; private set; } = null!;

        /// <summary>
        /// The public DNS name of the master EC2 instance.
        /// * `core_instance_group.0.id` - Core node type Instance Group ID, if using Instance Group for this node type.
        /// </summary>
        [Output("masterPublicDns")]
        public Output<string> MasterPublicDns { get; private set; } = null!;

        /// <summary>
        /// The name of the job flow
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The release label for the Amazon EMR release
        /// </summary>
        [Output("releaseLabel")]
        public Output<string> ReleaseLabel { get; private set; } = null!;

        /// <summary>
        /// The way that individual Amazon EC2 instances terminate when an automatic scale-in activity occurs or an `instance group` is resized.
        /// </summary>
        [Output("scaleDownBehavior")]
        public Output<string> ScaleDownBehavior { get; private set; } = null!;

        /// <summary>
        /// The security configuration name to attach to the EMR cluster. Only valid for EMR clusters with `release_label` 4.8.0 or greater
        /// </summary>
        [Output("securityConfiguration")]
        public Output<string?> SecurityConfiguration { get; private set; } = null!;

        /// <summary>
        /// IAM role that will be assumed by the Amazon EMR service to access AWS resources
        /// </summary>
        [Output("serviceRole")]
        public Output<string> ServiceRole { get; private set; } = null!;

        /// <summary>
        /// List of steps to run when creating the cluster. Defined below. It is highly recommended to utilize the [lifecycle configuration block](https://www.terraform.io/docs/configuration/resources.html) with `ignore_changes` if other steps are being managed outside of this provider. This argument is processed in [attribute-as-blocks mode](https://www.terraform.io/docs/configuration/attr-as-blocks.html).
        /// </summary>
        [Output("steps")]
        public Output<ImmutableArray<Outputs.ClusterSteps>> Steps { get; private set; } = null!;

        /// <summary>
        /// The number of steps that can be executed concurrently. You can specify a maximum of 256 steps. Only valid for EMR clusters with `release_label` 5.28.0 or greater. (default is 1)
        /// </summary>
        [Output("stepConcurrencyLevel")]
        public Output<int?> StepConcurrencyLevel { get; private set; } = null!;

        /// <summary>
        /// list of tags to apply to the EMR Cluster
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, object>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Switch on/off termination protection (default is `false`, except when using multiple master nodes). Before attempting to destroy the resource when termination protection is enabled, this configuration must be applied with its value set to `false`.
        /// </summary>
        [Output("terminationProtection")]
        public Output<bool> TerminationProtection { get; private set; } = null!;

        /// <summary>
        /// Whether the job flow is visible to all IAM users of the AWS account associated with the job flow. Default `true`
        /// </summary>
        [Output("visibleToAllUsers")]
        public Output<bool?> VisibleToAllUsers { get; private set; } = null!;


        /// <summary>
        /// Create a Cluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Cluster(string name, ClusterArgs args, CustomResourceOptions? options = null)
            : base("aws:emr/cluster:Cluster", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private Cluster(string name, Input<string> id, ClusterState? state = null, CustomResourceOptions? options = null)
            : base("aws:emr/cluster:Cluster", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Cluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Cluster Get(string name, Input<string> id, ClusterState? state = null, CustomResourceOptions? options = null)
        {
            return new Cluster(name, id, state, options);
        }
    }

    public sealed class ClusterArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// A JSON string for selecting additional features such as adding proxy information. Note: Currently there is no API to retrieve the value of this argument after EMR cluster creation from provider, therefore this provider cannot detect drift from the actual EMR cluster if its value is changed outside this provider.
        /// </summary>
        [Input("additionalInfo")]
        public Input<string>? AdditionalInfo { get; set; }

        [Input("applications")]
        private InputList<string>? _applications;

        /// <summary>
        /// A list of applications for the cluster. Valid values are: `Flink`, `Hadoop`, `Hive`, `Mahout`, `Pig`, `Spark`, and `JupyterHub` (as of EMR 5.14.0). Case insensitive
        /// </summary>
        public InputList<string> Applications
        {
            get => _applications ?? (_applications = new InputList<string>());
            set => _applications = value;
        }

        /// <summary>
        /// An IAM role for automatic scaling policies. The IAM role provides permissions that the automatic scaling feature requires to launch and terminate EC2 instances in an instance group.
        /// </summary>
        [Input("autoscalingRole")]
        public Input<string>? AutoscalingRole { get; set; }

        [Input("bootstrapActions")]
        private InputList<Inputs.ClusterBootstrapActionsArgs>? _bootstrapActions;

        /// <summary>
        /// List of bootstrap actions that will be run before Hadoop is started on the cluster nodes. Defined below
        /// </summary>
        public InputList<Inputs.ClusterBootstrapActionsArgs> BootstrapActions
        {
            get => _bootstrapActions ?? (_bootstrapActions = new InputList<Inputs.ClusterBootstrapActionsArgs>());
            set => _bootstrapActions = value;
        }

        /// <summary>
        /// List of configurations supplied for the EMR cluster you are creating
        /// </summary>
        [Input("configurations")]
        public Input<string>? Configurations { get; set; }

        /// <summary>
        /// A JSON string for supplying list of configurations for the EMR cluster.
        /// </summary>
        [Input("configurationsJson")]
        public Input<string>? ConfigurationsJson { get; set; }

        /// <summary>
        /// Use the `core_instance_group` configuration block `instance_count` argument instead. Number of Amazon EC2 instances used to execute the job flow. EMR will use one node as the cluster's master node and use the remainder of the nodes (`core_instance_count`-1) as core nodes. Cannot be specified if `core_instance_group` or `instance_group` configuration blocks are set. Default `1`
        /// </summary>
        [Input("coreInstanceCount")]
        public Input<int>? CoreInstanceCount { get; set; }

        /// <summary>
        /// Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [core node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-core). Cannot be specified if `core_instance_count` argument, `core_instance_type` argument, or `instance_group` configuration blocks are set. Detailed below.
        /// </summary>
        [Input("coreInstanceGroup")]
        public Input<Inputs.ClusterCoreInstanceGroupArgs>? CoreInstanceGroup { get; set; }

        /// <summary>
        /// Use the `core_instance_group` configuration block `instance_type` argument instead. The EC2 instance type of the slave nodes. Cannot be specified if `core_instance_group` or `instance_group` configuration blocks are set.
        /// </summary>
        [Input("coreInstanceType")]
        public Input<string>? CoreInstanceType { get; set; }

        /// <summary>
        /// A custom Amazon Linux AMI for the cluster (instead of an EMR-owned AMI). Available in Amazon EMR version 5.7.0 and later.
        /// </summary>
        [Input("customAmiId")]
        public Input<string>? CustomAmiId { get; set; }

        /// <summary>
        /// Size in GiB of the EBS root device volume of the Linux AMI that is used for each EC2 instance. Available in Amazon EMR version 4.x and later.
        /// </summary>
        [Input("ebsRootVolumeSize")]
        public Input<int>? EbsRootVolumeSize { get; set; }

        /// <summary>
        /// Attributes for the EC2 instances running the job flow. Defined below
        /// </summary>
        [Input("ec2Attributes")]
        public Input<Inputs.ClusterEc2AttributesArgs>? Ec2Attributes { get; set; }

        [Input("instanceGroups")]
        private InputList<Inputs.ClusterInstanceGroupsArgs>? _instanceGroups;

        /// <summary>
        /// Use the `master_instance_group` configuration block, `core_instance_group` configuration block and [`aws.emr.InstanceGroup` resource(s)](https://www.terraform.io/docs/providers/aws/r/emr_instance_group.html) instead. A list of `instance_group` objects for each instance group in the cluster. Exactly one of `master_instance_type` and `instance_group` must be specified. If `instance_group` is set, then it must contain a configuration block for at least the `MASTER` instance group type (as well as any additional instance groups). Cannot be specified if `master_instance_group` or `core_instance_group` configuration blocks are set. Defined below
        /// </summary>
        [Obsolete(@"use `master_instance_group` configuration block, `core_instance_group` configuration block, and `aws_emr_instance_group` resource(s) instead")]
        public InputList<Inputs.ClusterInstanceGroupsArgs> InstanceGroups
        {
            get => _instanceGroups ?? (_instanceGroups = new InputList<Inputs.ClusterInstanceGroupsArgs>());
            set => _instanceGroups = value;
        }

        /// <summary>
        /// Switch on/off run cluster with no steps or when all steps are complete (default is on)
        /// </summary>
        [Input("keepJobFlowAliveWhenNoSteps")]
        public Input<bool>? KeepJobFlowAliveWhenNoSteps { get; set; }

        /// <summary>
        /// Kerberos configuration for the cluster. Defined below
        /// </summary>
        [Input("kerberosAttributes")]
        public Input<Inputs.ClusterKerberosAttributesArgs>? KerberosAttributes { get; set; }

        /// <summary>
        /// S3 bucket to write the log files of the job flow. If a value is not provided, logs are not created
        /// </summary>
        [Input("logUri")]
        public Input<string>? LogUri { get; set; }

        /// <summary>
        /// Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [master node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-master). Cannot be specified if `master_instance_type` argument or `instance_group` configuration blocks are set. Detailed below.
        /// </summary>
        [Input("masterInstanceGroup")]
        public Input<Inputs.ClusterMasterInstanceGroupArgs>? MasterInstanceGroup { get; set; }

        /// <summary>
        /// Use the `master_instance_group` configuration block `instance_type` argument instead. The EC2 instance type of the master node. Cannot be specified if `master_instance_group` or `instance_group` configuration blocks are set.
        /// </summary>
        [Input("masterInstanceType")]
        public Input<string>? MasterInstanceType { get; set; }

        /// <summary>
        /// The name of the job flow
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The release label for the Amazon EMR release
        /// </summary>
        [Input("releaseLabel", required: true)]
        public Input<string> ReleaseLabel { get; set; } = null!;

        /// <summary>
        /// The way that individual Amazon EC2 instances terminate when an automatic scale-in activity occurs or an `instance group` is resized.
        /// </summary>
        [Input("scaleDownBehavior")]
        public Input<string>? ScaleDownBehavior { get; set; }

        /// <summary>
        /// The security configuration name to attach to the EMR cluster. Only valid for EMR clusters with `release_label` 4.8.0 or greater
        /// </summary>
        [Input("securityConfiguration")]
        public Input<string>? SecurityConfiguration { get; set; }

        /// <summary>
        /// IAM role that will be assumed by the Amazon EMR service to access AWS resources
        /// </summary>
        [Input("serviceRole", required: true)]
        public Input<string> ServiceRole { get; set; } = null!;

        [Input("steps")]
        private InputList<Inputs.ClusterStepsArgs>? _steps;

        /// <summary>
        /// List of steps to run when creating the cluster. Defined below. It is highly recommended to utilize the [lifecycle configuration block](https://www.terraform.io/docs/configuration/resources.html) with `ignore_changes` if other steps are being managed outside of this provider. This argument is processed in [attribute-as-blocks mode](https://www.terraform.io/docs/configuration/attr-as-blocks.html).
        /// </summary>
        public InputList<Inputs.ClusterStepsArgs> Steps
        {
            get => _steps ?? (_steps = new InputList<Inputs.ClusterStepsArgs>());
            set => _steps = value;
        }

        /// <summary>
        /// The number of steps that can be executed concurrently. You can specify a maximum of 256 steps. Only valid for EMR clusters with `release_label` 5.28.0 or greater. (default is 1)
        /// </summary>
        [Input("stepConcurrencyLevel")]
        public Input<int>? StepConcurrencyLevel { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// list of tags to apply to the EMR Cluster
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        /// <summary>
        /// Switch on/off termination protection (default is `false`, except when using multiple master nodes). Before attempting to destroy the resource when termination protection is enabled, this configuration must be applied with its value set to `false`.
        /// </summary>
        [Input("terminationProtection")]
        public Input<bool>? TerminationProtection { get; set; }

        /// <summary>
        /// Whether the job flow is visible to all IAM users of the AWS account associated with the job flow. Default `true`
        /// </summary>
        [Input("visibleToAllUsers")]
        public Input<bool>? VisibleToAllUsers { get; set; }

        public ClusterArgs()
        {
        }
    }

    public sealed class ClusterState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// A JSON string for selecting additional features such as adding proxy information. Note: Currently there is no API to retrieve the value of this argument after EMR cluster creation from provider, therefore this provider cannot detect drift from the actual EMR cluster if its value is changed outside this provider.
        /// </summary>
        [Input("additionalInfo")]
        public Input<string>? AdditionalInfo { get; set; }

        [Input("applications")]
        private InputList<string>? _applications;

        /// <summary>
        /// A list of applications for the cluster. Valid values are: `Flink`, `Hadoop`, `Hive`, `Mahout`, `Pig`, `Spark`, and `JupyterHub` (as of EMR 5.14.0). Case insensitive
        /// </summary>
        public InputList<string> Applications
        {
            get => _applications ?? (_applications = new InputList<string>());
            set => _applications = value;
        }

        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// An IAM role for automatic scaling policies. The IAM role provides permissions that the automatic scaling feature requires to launch and terminate EC2 instances in an instance group.
        /// </summary>
        [Input("autoscalingRole")]
        public Input<string>? AutoscalingRole { get; set; }

        [Input("bootstrapActions")]
        private InputList<Inputs.ClusterBootstrapActionsGetArgs>? _bootstrapActions;

        /// <summary>
        /// List of bootstrap actions that will be run before Hadoop is started on the cluster nodes. Defined below
        /// </summary>
        public InputList<Inputs.ClusterBootstrapActionsGetArgs> BootstrapActions
        {
            get => _bootstrapActions ?? (_bootstrapActions = new InputList<Inputs.ClusterBootstrapActionsGetArgs>());
            set => _bootstrapActions = value;
        }

        [Input("clusterState")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// List of configurations supplied for the EMR cluster you are creating
        /// </summary>
        [Input("configurations")]
        public Input<string>? Configurations { get; set; }

        /// <summary>
        /// A JSON string for supplying list of configurations for the EMR cluster.
        /// </summary>
        [Input("configurationsJson")]
        public Input<string>? ConfigurationsJson { get; set; }

        /// <summary>
        /// Use the `core_instance_group` configuration block `instance_count` argument instead. Number of Amazon EC2 instances used to execute the job flow. EMR will use one node as the cluster's master node and use the remainder of the nodes (`core_instance_count`-1) as core nodes. Cannot be specified if `core_instance_group` or `instance_group` configuration blocks are set. Default `1`
        /// </summary>
        [Input("coreInstanceCount")]
        public Input<int>? CoreInstanceCount { get; set; }

        /// <summary>
        /// Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [core node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-core). Cannot be specified if `core_instance_count` argument, `core_instance_type` argument, or `instance_group` configuration blocks are set. Detailed below.
        /// </summary>
        [Input("coreInstanceGroup")]
        public Input<Inputs.ClusterCoreInstanceGroupGetArgs>? CoreInstanceGroup { get; set; }

        /// <summary>
        /// Use the `core_instance_group` configuration block `instance_type` argument instead. The EC2 instance type of the slave nodes. Cannot be specified if `core_instance_group` or `instance_group` configuration blocks are set.
        /// </summary>
        [Input("coreInstanceType")]
        public Input<string>? CoreInstanceType { get; set; }

        /// <summary>
        /// A custom Amazon Linux AMI for the cluster (instead of an EMR-owned AMI). Available in Amazon EMR version 5.7.0 and later.
        /// </summary>
        [Input("customAmiId")]
        public Input<string>? CustomAmiId { get; set; }

        /// <summary>
        /// Size in GiB of the EBS root device volume of the Linux AMI that is used for each EC2 instance. Available in Amazon EMR version 4.x and later.
        /// </summary>
        [Input("ebsRootVolumeSize")]
        public Input<int>? EbsRootVolumeSize { get; set; }

        /// <summary>
        /// Attributes for the EC2 instances running the job flow. Defined below
        /// </summary>
        [Input("ec2Attributes")]
        public Input<Inputs.ClusterEc2AttributesGetArgs>? Ec2Attributes { get; set; }

        [Input("instanceGroups")]
        private InputList<Inputs.ClusterInstanceGroupsGetArgs>? _instanceGroups;

        /// <summary>
        /// Use the `master_instance_group` configuration block, `core_instance_group` configuration block and [`aws.emr.InstanceGroup` resource(s)](https://www.terraform.io/docs/providers/aws/r/emr_instance_group.html) instead. A list of `instance_group` objects for each instance group in the cluster. Exactly one of `master_instance_type` and `instance_group` must be specified. If `instance_group` is set, then it must contain a configuration block for at least the `MASTER` instance group type (as well as any additional instance groups). Cannot be specified if `master_instance_group` or `core_instance_group` configuration blocks are set. Defined below
        /// </summary>
        [Obsolete(@"use `master_instance_group` configuration block, `core_instance_group` configuration block, and `aws_emr_instance_group` resource(s) instead")]
        public InputList<Inputs.ClusterInstanceGroupsGetArgs> InstanceGroups
        {
            get => _instanceGroups ?? (_instanceGroups = new InputList<Inputs.ClusterInstanceGroupsGetArgs>());
            set => _instanceGroups = value;
        }

        /// <summary>
        /// Switch on/off run cluster with no steps or when all steps are complete (default is on)
        /// </summary>
        [Input("keepJobFlowAliveWhenNoSteps")]
        public Input<bool>? KeepJobFlowAliveWhenNoSteps { get; set; }

        /// <summary>
        /// Kerberos configuration for the cluster. Defined below
        /// </summary>
        [Input("kerberosAttributes")]
        public Input<Inputs.ClusterKerberosAttributesGetArgs>? KerberosAttributes { get; set; }

        /// <summary>
        /// S3 bucket to write the log files of the job flow. If a value is not provided, logs are not created
        /// </summary>
        [Input("logUri")]
        public Input<string>? LogUri { get; set; }

        /// <summary>
        /// Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [master node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-master). Cannot be specified if `master_instance_type` argument or `instance_group` configuration blocks are set. Detailed below.
        /// </summary>
        [Input("masterInstanceGroup")]
        public Input<Inputs.ClusterMasterInstanceGroupGetArgs>? MasterInstanceGroup { get; set; }

        /// <summary>
        /// Use the `master_instance_group` configuration block `instance_type` argument instead. The EC2 instance type of the master node. Cannot be specified if `master_instance_group` or `instance_group` configuration blocks are set.
        /// </summary>
        [Input("masterInstanceType")]
        public Input<string>? MasterInstanceType { get; set; }

        /// <summary>
        /// The public DNS name of the master EC2 instance.
        /// * `core_instance_group.0.id` - Core node type Instance Group ID, if using Instance Group for this node type.
        /// </summary>
        [Input("masterPublicDns")]
        public Input<string>? MasterPublicDns { get; set; }

        /// <summary>
        /// The name of the job flow
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The release label for the Amazon EMR release
        /// </summary>
        [Input("releaseLabel")]
        public Input<string>? ReleaseLabel { get; set; }

        /// <summary>
        /// The way that individual Amazon EC2 instances terminate when an automatic scale-in activity occurs or an `instance group` is resized.
        /// </summary>
        [Input("scaleDownBehavior")]
        public Input<string>? ScaleDownBehavior { get; set; }

        /// <summary>
        /// The security configuration name to attach to the EMR cluster. Only valid for EMR clusters with `release_label` 4.8.0 or greater
        /// </summary>
        [Input("securityConfiguration")]
        public Input<string>? SecurityConfiguration { get; set; }

        /// <summary>
        /// IAM role that will be assumed by the Amazon EMR service to access AWS resources
        /// </summary>
        [Input("serviceRole")]
        public Input<string>? ServiceRole { get; set; }

        [Input("steps")]
        private InputList<Inputs.ClusterStepsGetArgs>? _steps;

        /// <summary>
        /// List of steps to run when creating the cluster. Defined below. It is highly recommended to utilize the [lifecycle configuration block](https://www.terraform.io/docs/configuration/resources.html) with `ignore_changes` if other steps are being managed outside of this provider. This argument is processed in [attribute-as-blocks mode](https://www.terraform.io/docs/configuration/attr-as-blocks.html).
        /// </summary>
        public InputList<Inputs.ClusterStepsGetArgs> Steps
        {
            get => _steps ?? (_steps = new InputList<Inputs.ClusterStepsGetArgs>());
            set => _steps = value;
        }

        /// <summary>
        /// The number of steps that can be executed concurrently. You can specify a maximum of 256 steps. Only valid for EMR clusters with `release_label` 5.28.0 or greater. (default is 1)
        /// </summary>
        [Input("stepConcurrencyLevel")]
        public Input<int>? StepConcurrencyLevel { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// list of tags to apply to the EMR Cluster
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        /// <summary>
        /// Switch on/off termination protection (default is `false`, except when using multiple master nodes). Before attempting to destroy the resource when termination protection is enabled, this configuration must be applied with its value set to `false`.
        /// </summary>
        [Input("terminationProtection")]
        public Input<bool>? TerminationProtection { get; set; }

        /// <summary>
        /// Whether the job flow is visible to all IAM users of the AWS account associated with the job flow. Default `true`
        /// </summary>
        [Input("visibleToAllUsers")]
        public Input<bool>? VisibleToAllUsers { get; set; }

        public ClusterState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class ClusterBootstrapActionsArgs : Pulumi.ResourceArgs
    {
        [Input("args")]
        private InputList<string>? _args;
        public InputList<string> Args
        {
            get => _args ?? (_args = new InputList<string>());
            set => _args = value;
        }

        /// <summary>
        /// The name of the job flow
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("path", required: true)]
        public Input<string> Path { get; set; } = null!;

        public ClusterBootstrapActionsArgs()
        {
        }
    }

    public sealed class ClusterBootstrapActionsGetArgs : Pulumi.ResourceArgs
    {
        [Input("args")]
        private InputList<string>? _args;
        public InputList<string> Args
        {
            get => _args ?? (_args = new InputList<string>());
            set => _args = value;
        }

        /// <summary>
        /// The name of the job flow
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("path", required: true)]
        public Input<string> Path { get; set; } = null!;

        public ClusterBootstrapActionsGetArgs()
        {
        }
    }

    public sealed class ClusterCoreInstanceGroupArgs : Pulumi.ResourceArgs
    {
        [Input("autoscalingPolicy")]
        public Input<string>? AutoscalingPolicy { get; set; }

        [Input("bidPrice")]
        public Input<string>? BidPrice { get; set; }

        [Input("ebsConfigs")]
        private InputList<ClusterCoreInstanceGroupEbsConfigsArgs>? _ebsConfigs;
        public InputList<ClusterCoreInstanceGroupEbsConfigsArgs> EbsConfigs
        {
            get => _ebsConfigs ?? (_ebsConfigs = new InputList<ClusterCoreInstanceGroupEbsConfigsArgs>());
            set => _ebsConfigs = value;
        }

        /// <summary>
        /// The ID of the EMR Cluster
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("instanceCount")]
        public Input<int>? InstanceCount { get; set; }

        [Input("instanceType", required: true)]
        public Input<string> InstanceType { get; set; } = null!;

        /// <summary>
        /// The name of the job flow
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public ClusterCoreInstanceGroupArgs()
        {
        }
    }

    public sealed class ClusterCoreInstanceGroupEbsConfigsArgs : Pulumi.ResourceArgs
    {
        [Input("iops")]
        public Input<int>? Iops { get; set; }

        [Input("size", required: true)]
        public Input<int> Size { get; set; } = null!;

        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        [Input("volumesPerInstance")]
        public Input<int>? VolumesPerInstance { get; set; }

        public ClusterCoreInstanceGroupEbsConfigsArgs()
        {
        }
    }

    public sealed class ClusterCoreInstanceGroupEbsConfigsGetArgs : Pulumi.ResourceArgs
    {
        [Input("iops")]
        public Input<int>? Iops { get; set; }

        [Input("size", required: true)]
        public Input<int> Size { get; set; } = null!;

        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        [Input("volumesPerInstance")]
        public Input<int>? VolumesPerInstance { get; set; }

        public ClusterCoreInstanceGroupEbsConfigsGetArgs()
        {
        }
    }

    public sealed class ClusterCoreInstanceGroupGetArgs : Pulumi.ResourceArgs
    {
        [Input("autoscalingPolicy")]
        public Input<string>? AutoscalingPolicy { get; set; }

        [Input("bidPrice")]
        public Input<string>? BidPrice { get; set; }

        [Input("ebsConfigs")]
        private InputList<ClusterCoreInstanceGroupEbsConfigsGetArgs>? _ebsConfigs;
        public InputList<ClusterCoreInstanceGroupEbsConfigsGetArgs> EbsConfigs
        {
            get => _ebsConfigs ?? (_ebsConfigs = new InputList<ClusterCoreInstanceGroupEbsConfigsGetArgs>());
            set => _ebsConfigs = value;
        }

        /// <summary>
        /// The ID of the EMR Cluster
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("instanceCount")]
        public Input<int>? InstanceCount { get; set; }

        [Input("instanceType", required: true)]
        public Input<string> InstanceType { get; set; } = null!;

        /// <summary>
        /// The name of the job flow
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public ClusterCoreInstanceGroupGetArgs()
        {
        }
    }

    public sealed class ClusterEc2AttributesArgs : Pulumi.ResourceArgs
    {
        [Input("additionalMasterSecurityGroups")]
        public Input<string>? AdditionalMasterSecurityGroups { get; set; }

        [Input("additionalSlaveSecurityGroups")]
        public Input<string>? AdditionalSlaveSecurityGroups { get; set; }

        [Input("emrManagedMasterSecurityGroup")]
        public Input<string>? EmrManagedMasterSecurityGroup { get; set; }

        [Input("emrManagedSlaveSecurityGroup")]
        public Input<string>? EmrManagedSlaveSecurityGroup { get; set; }

        [Input("instanceProfile", required: true)]
        public Input<string> InstanceProfile { get; set; } = null!;

        [Input("keyName")]
        public Input<string>? KeyName { get; set; }

        [Input("serviceAccessSecurityGroup")]
        public Input<string>? ServiceAccessSecurityGroup { get; set; }

        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        public ClusterEc2AttributesArgs()
        {
        }
    }

    public sealed class ClusterEc2AttributesGetArgs : Pulumi.ResourceArgs
    {
        [Input("additionalMasterSecurityGroups")]
        public Input<string>? AdditionalMasterSecurityGroups { get; set; }

        [Input("additionalSlaveSecurityGroups")]
        public Input<string>? AdditionalSlaveSecurityGroups { get; set; }

        [Input("emrManagedMasterSecurityGroup")]
        public Input<string>? EmrManagedMasterSecurityGroup { get; set; }

        [Input("emrManagedSlaveSecurityGroup")]
        public Input<string>? EmrManagedSlaveSecurityGroup { get; set; }

        [Input("instanceProfile", required: true)]
        public Input<string> InstanceProfile { get; set; } = null!;

        [Input("keyName")]
        public Input<string>? KeyName { get; set; }

        [Input("serviceAccessSecurityGroup")]
        public Input<string>? ServiceAccessSecurityGroup { get; set; }

        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        public ClusterEc2AttributesGetArgs()
        {
        }
    }

    public sealed class ClusterInstanceGroupsArgs : Pulumi.ResourceArgs
    {
        [Input("autoscalingPolicy")]
        public Input<string>? AutoscalingPolicy { get; set; }

        [Input("bidPrice")]
        public Input<string>? BidPrice { get; set; }

        [Input("ebsConfigs")]
        private InputList<ClusterInstanceGroupsEbsConfigsArgs>? _ebsConfigs;
        public InputList<ClusterInstanceGroupsEbsConfigsArgs> EbsConfigs
        {
            get => _ebsConfigs ?? (_ebsConfigs = new InputList<ClusterInstanceGroupsEbsConfigsArgs>());
            set => _ebsConfigs = value;
        }

        /// <summary>
        /// The ID of the EMR Cluster
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("instanceCount")]
        public Input<int>? InstanceCount { get; set; }

        [Input("instanceRole", required: true)]
        public Input<string> InstanceRole { get; set; } = null!;

        [Input("instanceType", required: true)]
        public Input<string> InstanceType { get; set; } = null!;

        /// <summary>
        /// The name of the job flow
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public ClusterInstanceGroupsArgs()
        {
        }
    }

    public sealed class ClusterInstanceGroupsEbsConfigsArgs : Pulumi.ResourceArgs
    {
        [Input("iops")]
        public Input<int>? Iops { get; set; }

        [Input("size", required: true)]
        public Input<int> Size { get; set; } = null!;

        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        [Input("volumesPerInstance")]
        public Input<int>? VolumesPerInstance { get; set; }

        public ClusterInstanceGroupsEbsConfigsArgs()
        {
        }
    }

    public sealed class ClusterInstanceGroupsEbsConfigsGetArgs : Pulumi.ResourceArgs
    {
        [Input("iops")]
        public Input<int>? Iops { get; set; }

        [Input("size", required: true)]
        public Input<int> Size { get; set; } = null!;

        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        [Input("volumesPerInstance")]
        public Input<int>? VolumesPerInstance { get; set; }

        public ClusterInstanceGroupsEbsConfigsGetArgs()
        {
        }
    }

    public sealed class ClusterInstanceGroupsGetArgs : Pulumi.ResourceArgs
    {
        [Input("autoscalingPolicy")]
        public Input<string>? AutoscalingPolicy { get; set; }

        [Input("bidPrice")]
        public Input<string>? BidPrice { get; set; }

        [Input("ebsConfigs")]
        private InputList<ClusterInstanceGroupsEbsConfigsGetArgs>? _ebsConfigs;
        public InputList<ClusterInstanceGroupsEbsConfigsGetArgs> EbsConfigs
        {
            get => _ebsConfigs ?? (_ebsConfigs = new InputList<ClusterInstanceGroupsEbsConfigsGetArgs>());
            set => _ebsConfigs = value;
        }

        /// <summary>
        /// The ID of the EMR Cluster
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("instanceCount")]
        public Input<int>? InstanceCount { get; set; }

        [Input("instanceRole", required: true)]
        public Input<string> InstanceRole { get; set; } = null!;

        [Input("instanceType", required: true)]
        public Input<string> InstanceType { get; set; } = null!;

        /// <summary>
        /// The name of the job flow
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public ClusterInstanceGroupsGetArgs()
        {
        }
    }

    public sealed class ClusterKerberosAttributesArgs : Pulumi.ResourceArgs
    {
        [Input("adDomainJoinPassword")]
        public Input<string>? AdDomainJoinPassword { get; set; }

        [Input("adDomainJoinUser")]
        public Input<string>? AdDomainJoinUser { get; set; }

        [Input("crossRealmTrustPrincipalPassword")]
        public Input<string>? CrossRealmTrustPrincipalPassword { get; set; }

        [Input("kdcAdminPassword", required: true)]
        public Input<string> KdcAdminPassword { get; set; } = null!;

        [Input("realm", required: true)]
        public Input<string> Realm { get; set; } = null!;

        public ClusterKerberosAttributesArgs()
        {
        }
    }

    public sealed class ClusterKerberosAttributesGetArgs : Pulumi.ResourceArgs
    {
        [Input("adDomainJoinPassword")]
        public Input<string>? AdDomainJoinPassword { get; set; }

        [Input("adDomainJoinUser")]
        public Input<string>? AdDomainJoinUser { get; set; }

        [Input("crossRealmTrustPrincipalPassword")]
        public Input<string>? CrossRealmTrustPrincipalPassword { get; set; }

        [Input("kdcAdminPassword", required: true)]
        public Input<string> KdcAdminPassword { get; set; } = null!;

        [Input("realm", required: true)]
        public Input<string> Realm { get; set; } = null!;

        public ClusterKerberosAttributesGetArgs()
        {
        }
    }

    public sealed class ClusterMasterInstanceGroupArgs : Pulumi.ResourceArgs
    {
        [Input("bidPrice")]
        public Input<string>? BidPrice { get; set; }

        [Input("ebsConfigs")]
        private InputList<ClusterMasterInstanceGroupEbsConfigsArgs>? _ebsConfigs;
        public InputList<ClusterMasterInstanceGroupEbsConfigsArgs> EbsConfigs
        {
            get => _ebsConfigs ?? (_ebsConfigs = new InputList<ClusterMasterInstanceGroupEbsConfigsArgs>());
            set => _ebsConfigs = value;
        }

        /// <summary>
        /// The ID of the EMR Cluster
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("instanceCount")]
        public Input<int>? InstanceCount { get; set; }

        [Input("instanceType", required: true)]
        public Input<string> InstanceType { get; set; } = null!;

        /// <summary>
        /// The name of the job flow
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public ClusterMasterInstanceGroupArgs()
        {
        }
    }

    public sealed class ClusterMasterInstanceGroupEbsConfigsArgs : Pulumi.ResourceArgs
    {
        [Input("iops")]
        public Input<int>? Iops { get; set; }

        [Input("size", required: true)]
        public Input<int> Size { get; set; } = null!;

        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        [Input("volumesPerInstance")]
        public Input<int>? VolumesPerInstance { get; set; }

        public ClusterMasterInstanceGroupEbsConfigsArgs()
        {
        }
    }

    public sealed class ClusterMasterInstanceGroupEbsConfigsGetArgs : Pulumi.ResourceArgs
    {
        [Input("iops")]
        public Input<int>? Iops { get; set; }

        [Input("size", required: true)]
        public Input<int> Size { get; set; } = null!;

        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        [Input("volumesPerInstance")]
        public Input<int>? VolumesPerInstance { get; set; }

        public ClusterMasterInstanceGroupEbsConfigsGetArgs()
        {
        }
    }

    public sealed class ClusterMasterInstanceGroupGetArgs : Pulumi.ResourceArgs
    {
        [Input("bidPrice")]
        public Input<string>? BidPrice { get; set; }

        [Input("ebsConfigs")]
        private InputList<ClusterMasterInstanceGroupEbsConfigsGetArgs>? _ebsConfigs;
        public InputList<ClusterMasterInstanceGroupEbsConfigsGetArgs> EbsConfigs
        {
            get => _ebsConfigs ?? (_ebsConfigs = new InputList<ClusterMasterInstanceGroupEbsConfigsGetArgs>());
            set => _ebsConfigs = value;
        }

        /// <summary>
        /// The ID of the EMR Cluster
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("instanceCount")]
        public Input<int>? InstanceCount { get; set; }

        [Input("instanceType", required: true)]
        public Input<string> InstanceType { get; set; } = null!;

        /// <summary>
        /// The name of the job flow
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public ClusterMasterInstanceGroupGetArgs()
        {
        }
    }

    public sealed class ClusterStepsArgs : Pulumi.ResourceArgs
    {
        [Input("actionOnFailure", required: true)]
        public Input<string> ActionOnFailure { get; set; } = null!;

        [Input("hadoopJarStep", required: true)]
        public Input<ClusterStepsHadoopJarStepArgs> HadoopJarStep { get; set; } = null!;

        /// <summary>
        /// The name of the job flow
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public ClusterStepsArgs()
        {
        }
    }

    public sealed class ClusterStepsGetArgs : Pulumi.ResourceArgs
    {
        [Input("actionOnFailure", required: true)]
        public Input<string> ActionOnFailure { get; set; } = null!;

        [Input("hadoopJarStep", required: true)]
        public Input<ClusterStepsHadoopJarStepGetArgs> HadoopJarStep { get; set; } = null!;

        /// <summary>
        /// The name of the job flow
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public ClusterStepsGetArgs()
        {
        }
    }

    public sealed class ClusterStepsHadoopJarStepArgs : Pulumi.ResourceArgs
    {
        [Input("args")]
        private InputList<string>? _args;
        public InputList<string> Args
        {
            get => _args ?? (_args = new InputList<string>());
            set => _args = value;
        }

        [Input("jar", required: true)]
        public Input<string> Jar { get; set; } = null!;

        [Input("mainClass")]
        public Input<string>? MainClass { get; set; }

        [Input("properties")]
        private InputMap<object>? _properties;
        public InputMap<object> Properties
        {
            get => _properties ?? (_properties = new InputMap<object>());
            set => _properties = value;
        }

        public ClusterStepsHadoopJarStepArgs()
        {
        }
    }

    public sealed class ClusterStepsHadoopJarStepGetArgs : Pulumi.ResourceArgs
    {
        [Input("args")]
        private InputList<string>? _args;
        public InputList<string> Args
        {
            get => _args ?? (_args = new InputList<string>());
            set => _args = value;
        }

        [Input("jar", required: true)]
        public Input<string> Jar { get; set; } = null!;

        [Input("mainClass")]
        public Input<string>? MainClass { get; set; }

        [Input("properties")]
        private InputMap<object>? _properties;
        public InputMap<object> Properties
        {
            get => _properties ?? (_properties = new InputMap<object>());
            set => _properties = value;
        }

        public ClusterStepsHadoopJarStepGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class ClusterBootstrapActions
    {
        public readonly ImmutableArray<string> Args;
        /// <summary>
        /// The name of the job flow
        /// </summary>
        public readonly string Name;
        public readonly string Path;

        [OutputConstructor]
        private ClusterBootstrapActions(
            ImmutableArray<string> args,
            string name,
            string path)
        {
            Args = args;
            Name = name;
            Path = path;
        }
    }

    [OutputType]
    public sealed class ClusterCoreInstanceGroup
    {
        public readonly string? AutoscalingPolicy;
        public readonly string? BidPrice;
        public readonly ImmutableArray<ClusterCoreInstanceGroupEbsConfigs> EbsConfigs;
        /// <summary>
        /// The ID of the EMR Cluster
        /// </summary>
        public readonly string Id;
        public readonly int? InstanceCount;
        public readonly string InstanceType;
        /// <summary>
        /// The name of the job flow
        /// </summary>
        public readonly string? Name;

        [OutputConstructor]
        private ClusterCoreInstanceGroup(
            string? autoscalingPolicy,
            string? bidPrice,
            ImmutableArray<ClusterCoreInstanceGroupEbsConfigs> ebsConfigs,
            string id,
            int? instanceCount,
            string instanceType,
            string? name)
        {
            AutoscalingPolicy = autoscalingPolicy;
            BidPrice = bidPrice;
            EbsConfigs = ebsConfigs;
            Id = id;
            InstanceCount = instanceCount;
            InstanceType = instanceType;
            Name = name;
        }
    }

    [OutputType]
    public sealed class ClusterCoreInstanceGroupEbsConfigs
    {
        public readonly int? Iops;
        public readonly int Size;
        public readonly string Type;
        public readonly int? VolumesPerInstance;

        [OutputConstructor]
        private ClusterCoreInstanceGroupEbsConfigs(
            int? iops,
            int size,
            string type,
            int? volumesPerInstance)
        {
            Iops = iops;
            Size = size;
            Type = type;
            VolumesPerInstance = volumesPerInstance;
        }
    }

    [OutputType]
    public sealed class ClusterEc2Attributes
    {
        public readonly string? AdditionalMasterSecurityGroups;
        public readonly string? AdditionalSlaveSecurityGroups;
        public readonly string EmrManagedMasterSecurityGroup;
        public readonly string EmrManagedSlaveSecurityGroup;
        public readonly string InstanceProfile;
        public readonly string? KeyName;
        public readonly string ServiceAccessSecurityGroup;
        public readonly string? SubnetId;

        [OutputConstructor]
        private ClusterEc2Attributes(
            string? additionalMasterSecurityGroups,
            string? additionalSlaveSecurityGroups,
            string emrManagedMasterSecurityGroup,
            string emrManagedSlaveSecurityGroup,
            string instanceProfile,
            string? keyName,
            string serviceAccessSecurityGroup,
            string? subnetId)
        {
            AdditionalMasterSecurityGroups = additionalMasterSecurityGroups;
            AdditionalSlaveSecurityGroups = additionalSlaveSecurityGroups;
            EmrManagedMasterSecurityGroup = emrManagedMasterSecurityGroup;
            EmrManagedSlaveSecurityGroup = emrManagedSlaveSecurityGroup;
            InstanceProfile = instanceProfile;
            KeyName = keyName;
            ServiceAccessSecurityGroup = serviceAccessSecurityGroup;
            SubnetId = subnetId;
        }
    }

    [OutputType]
    public sealed class ClusterInstanceGroups
    {
        public readonly string? AutoscalingPolicy;
        public readonly string? BidPrice;
        public readonly ImmutableArray<ClusterInstanceGroupsEbsConfigs> EbsConfigs;
        /// <summary>
        /// The ID of the EMR Cluster
        /// </summary>
        public readonly string Id;
        public readonly int? InstanceCount;
        public readonly string InstanceRole;
        public readonly string InstanceType;
        /// <summary>
        /// The name of the job flow
        /// </summary>
        public readonly string? Name;

        [OutputConstructor]
        private ClusterInstanceGroups(
            string? autoscalingPolicy,
            string? bidPrice,
            ImmutableArray<ClusterInstanceGroupsEbsConfigs> ebsConfigs,
            string id,
            int? instanceCount,
            string instanceRole,
            string instanceType,
            string? name)
        {
            AutoscalingPolicy = autoscalingPolicy;
            BidPrice = bidPrice;
            EbsConfigs = ebsConfigs;
            Id = id;
            InstanceCount = instanceCount;
            InstanceRole = instanceRole;
            InstanceType = instanceType;
            Name = name;
        }
    }

    [OutputType]
    public sealed class ClusterInstanceGroupsEbsConfigs
    {
        public readonly int? Iops;
        public readonly int Size;
        public readonly string Type;
        public readonly int? VolumesPerInstance;

        [OutputConstructor]
        private ClusterInstanceGroupsEbsConfigs(
            int? iops,
            int size,
            string type,
            int? volumesPerInstance)
        {
            Iops = iops;
            Size = size;
            Type = type;
            VolumesPerInstance = volumesPerInstance;
        }
    }

    [OutputType]
    public sealed class ClusterKerberosAttributes
    {
        public readonly string? AdDomainJoinPassword;
        public readonly string? AdDomainJoinUser;
        public readonly string? CrossRealmTrustPrincipalPassword;
        public readonly string KdcAdminPassword;
        public readonly string Realm;

        [OutputConstructor]
        private ClusterKerberosAttributes(
            string? adDomainJoinPassword,
            string? adDomainJoinUser,
            string? crossRealmTrustPrincipalPassword,
            string kdcAdminPassword,
            string realm)
        {
            AdDomainJoinPassword = adDomainJoinPassword;
            AdDomainJoinUser = adDomainJoinUser;
            CrossRealmTrustPrincipalPassword = crossRealmTrustPrincipalPassword;
            KdcAdminPassword = kdcAdminPassword;
            Realm = realm;
        }
    }

    [OutputType]
    public sealed class ClusterMasterInstanceGroup
    {
        public readonly string? BidPrice;
        public readonly ImmutableArray<ClusterMasterInstanceGroupEbsConfigs> EbsConfigs;
        /// <summary>
        /// The ID of the EMR Cluster
        /// </summary>
        public readonly string Id;
        public readonly int? InstanceCount;
        public readonly string InstanceType;
        /// <summary>
        /// The name of the job flow
        /// </summary>
        public readonly string? Name;

        [OutputConstructor]
        private ClusterMasterInstanceGroup(
            string? bidPrice,
            ImmutableArray<ClusterMasterInstanceGroupEbsConfigs> ebsConfigs,
            string id,
            int? instanceCount,
            string instanceType,
            string? name)
        {
            BidPrice = bidPrice;
            EbsConfigs = ebsConfigs;
            Id = id;
            InstanceCount = instanceCount;
            InstanceType = instanceType;
            Name = name;
        }
    }

    [OutputType]
    public sealed class ClusterMasterInstanceGroupEbsConfigs
    {
        public readonly int? Iops;
        public readonly int Size;
        public readonly string Type;
        public readonly int? VolumesPerInstance;

        [OutputConstructor]
        private ClusterMasterInstanceGroupEbsConfigs(
            int? iops,
            int size,
            string type,
            int? volumesPerInstance)
        {
            Iops = iops;
            Size = size;
            Type = type;
            VolumesPerInstance = volumesPerInstance;
        }
    }

    [OutputType]
    public sealed class ClusterSteps
    {
        public readonly string ActionOnFailure;
        public readonly ClusterStepsHadoopJarStep HadoopJarStep;
        /// <summary>
        /// The name of the job flow
        /// </summary>
        public readonly string Name;

        [OutputConstructor]
        private ClusterSteps(
            string actionOnFailure,
            ClusterStepsHadoopJarStep hadoopJarStep,
            string name)
        {
            ActionOnFailure = actionOnFailure;
            HadoopJarStep = hadoopJarStep;
            Name = name;
        }
    }

    [OutputType]
    public sealed class ClusterStepsHadoopJarStep
    {
        public readonly ImmutableArray<string> Args;
        public readonly string Jar;
        public readonly string? MainClass;
        public readonly ImmutableDictionary<string, object>? Properties;

        [OutputConstructor]
        private ClusterStepsHadoopJarStep(
            ImmutableArray<string> args,
            string jar,
            string? mainClass,
            ImmutableDictionary<string, object>? properties)
        {
            Args = args;
            Jar = jar;
            MainClass = mainClass;
            Properties = properties;
        }
    }
    }
}
