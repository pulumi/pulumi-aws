// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Emr
{
    public static class GetReleaseLabels
    {
        /// <summary>
        /// Retrieve information about EMR Release Labels.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(Aws.Emr.GetReleaseLabels.InvokeAsync(new Aws.Emr.GetReleaseLabelsArgs
        ///         {
        ///             Filters = new Aws.Emr.Inputs.GetReleaseLabelsFiltersArgs
        ///             {
        ///                 Application = "spark@2.1.0",
        ///                 Prefix = "emr-5",
        ///             },
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetReleaseLabelsResult> InvokeAsync(GetReleaseLabelsArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetReleaseLabelsResult>("aws:emr/getReleaseLabels:getReleaseLabels", args ?? new GetReleaseLabelsArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieve information about EMR Release Labels.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(Aws.Emr.GetReleaseLabels.InvokeAsync(new Aws.Emr.GetReleaseLabelsArgs
        ///         {
        ///             Filters = new Aws.Emr.Inputs.GetReleaseLabelsFiltersArgs
        ///             {
        ///                 Application = "spark@2.1.0",
        ///                 Prefix = "emr-5",
        ///             },
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetReleaseLabelsResult> Invoke(GetReleaseLabelsInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetReleaseLabelsResult>("aws:emr/getReleaseLabels:getReleaseLabels", args ?? new GetReleaseLabelsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetReleaseLabelsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Filters the results of the request. Prefix specifies the prefix of release labels to return. Application specifies the application (with/without version) of release labels to return. See Filters.
        /// </summary>
        [Input("filters")]
        public Inputs.GetReleaseLabelsFiltersArgs? Filters { get; set; }

        public GetReleaseLabelsArgs()
        {
        }
    }

    public sealed class GetReleaseLabelsInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Filters the results of the request. Prefix specifies the prefix of release labels to return. Application specifies the application (with/without version) of release labels to return. See Filters.
        /// </summary>
        [Input("filters")]
        public Input<Inputs.GetReleaseLabelsFiltersInputArgs>? Filters { get; set; }

        public GetReleaseLabelsInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetReleaseLabelsResult
    {
        public readonly Outputs.GetReleaseLabelsFiltersResult? Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The returned release labels.
        /// </summary>
        public readonly ImmutableArray<string> ReleaseLabels;

        [OutputConstructor]
        private GetReleaseLabelsResult(
            Outputs.GetReleaseLabelsFiltersResult? filters,

            string id,

            ImmutableArray<string> releaseLabels)
        {
            Filters = filters;
            Id = id;
            ReleaseLabels = releaseLabels;
        }
    }
}
