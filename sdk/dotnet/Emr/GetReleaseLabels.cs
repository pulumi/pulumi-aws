// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Emr
{
    public static class GetReleaseLabels
    {
        /// <summary>
        /// Retrieve information about EMR Release Labels.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const example = aws.emr.getReleaseLabels({
        ///     filters: {
        ///         application: "spark@2.1.0",
        ///         prefix: "emr-5",
        ///     },
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// example = aws.emr.get_release_labels(filters=aws.emr.GetReleaseLabelsFiltersArgs(
        ///     application="spark@2.1.0",
        ///     prefix="emr-5",
        /// ))
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Emr.GetReleaseLabels.Invoke(new()
        ///     {
        ///         Filters = new Aws.Emr.Inputs.GetReleaseLabelsFiltersInputArgs
        ///         {
        ///             Application = "spark@2.1.0",
        ///             Prefix = "emr-5",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/emr"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := emr.GetReleaseLabels(ctx, &amp;emr.GetReleaseLabelsArgs{
        /// 			Filters: emr.GetReleaseLabelsFilters{
        /// 				Application: pulumi.StringRef("spark@2.1.0"),
        /// 				Prefix:      pulumi.StringRef("emr-5"),
        /// 			},
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.emr.EmrFunctions;
        /// import com.pulumi.aws.emr.inputs.GetReleaseLabelsArgs;
        /// import com.pulumi.aws.emr.inputs.GetReleaseLabelsFiltersArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var example = EmrFunctions.getReleaseLabels(GetReleaseLabelsArgs.builder()
        ///             .filters(GetReleaseLabelsFiltersArgs.builder()
        ///                 .application("spark@2.1.0")
        ///                 .prefix("emr-5")
        ///                 .build())
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   example:
        ///     fn::invoke:
        ///       Function: aws:emr:getReleaseLabels
        ///       Arguments:
        ///         filters:
        ///           application: spark@2.1.0
        ///           prefix: emr-5
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetReleaseLabelsResult> InvokeAsync(GetReleaseLabelsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetReleaseLabelsResult>("aws:emr/getReleaseLabels:getReleaseLabels", args ?? new GetReleaseLabelsArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieve information about EMR Release Labels.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const example = aws.emr.getReleaseLabels({
        ///     filters: {
        ///         application: "spark@2.1.0",
        ///         prefix: "emr-5",
        ///     },
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// example = aws.emr.get_release_labels(filters=aws.emr.GetReleaseLabelsFiltersArgs(
        ///     application="spark@2.1.0",
        ///     prefix="emr-5",
        /// ))
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Emr.GetReleaseLabels.Invoke(new()
        ///     {
        ///         Filters = new Aws.Emr.Inputs.GetReleaseLabelsFiltersInputArgs
        ///         {
        ///             Application = "spark@2.1.0",
        ///             Prefix = "emr-5",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/emr"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := emr.GetReleaseLabels(ctx, &amp;emr.GetReleaseLabelsArgs{
        /// 			Filters: emr.GetReleaseLabelsFilters{
        /// 				Application: pulumi.StringRef("spark@2.1.0"),
        /// 				Prefix:      pulumi.StringRef("emr-5"),
        /// 			},
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.emr.EmrFunctions;
        /// import com.pulumi.aws.emr.inputs.GetReleaseLabelsArgs;
        /// import com.pulumi.aws.emr.inputs.GetReleaseLabelsFiltersArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var example = EmrFunctions.getReleaseLabels(GetReleaseLabelsArgs.builder()
        ///             .filters(GetReleaseLabelsFiltersArgs.builder()
        ///                 .application("spark@2.1.0")
        ///                 .prefix("emr-5")
        ///                 .build())
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   example:
        ///     fn::invoke:
        ///       Function: aws:emr:getReleaseLabels
        ///       Arguments:
        ///         filters:
        ///           application: spark@2.1.0
        ///           prefix: emr-5
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetReleaseLabelsResult> Invoke(GetReleaseLabelsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetReleaseLabelsResult>("aws:emr/getReleaseLabels:getReleaseLabels", args ?? new GetReleaseLabelsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetReleaseLabelsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Filters the results of the request. Prefix specifies the prefix of release labels to return. Application specifies the application (with/without version) of release labels to return. See Filters.
        /// </summary>
        [Input("filters")]
        public Inputs.GetReleaseLabelsFiltersArgs? Filters { get; set; }

        public GetReleaseLabelsArgs()
        {
        }
        public static new GetReleaseLabelsArgs Empty => new GetReleaseLabelsArgs();
    }

    public sealed class GetReleaseLabelsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Filters the results of the request. Prefix specifies the prefix of release labels to return. Application specifies the application (with/without version) of release labels to return. See Filters.
        /// </summary>
        [Input("filters")]
        public Input<Inputs.GetReleaseLabelsFiltersInputArgs>? Filters { get; set; }

        public GetReleaseLabelsInvokeArgs()
        {
        }
        public static new GetReleaseLabelsInvokeArgs Empty => new GetReleaseLabelsInvokeArgs();
    }


    [OutputType]
    public sealed class GetReleaseLabelsResult
    {
        public readonly Outputs.GetReleaseLabelsFiltersResult? Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Returned release labels.
        /// </summary>
        public readonly ImmutableArray<string> ReleaseLabels;

        [OutputConstructor]
        private GetReleaseLabelsResult(
            Outputs.GetReleaseLabelsFiltersResult? filters,

            string id,

            ImmutableArray<string> releaseLabels)
        {
            Filters = filters;
            Id = id;
            ReleaseLabels = releaseLabels;
        }
    }
}
