// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Emr.Inputs
{

    public sealed class ClusterCoreInstanceGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// String containing the [EMR Auto Scaling Policy](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-automatic-scaling.html) JSON.
        /// </summary>
        [Input("autoscalingPolicy")]
        public Input<string>? AutoscalingPolicy { get; set; }

        /// <summary>
        /// Bid price for each EC2 instance in the instance group, expressed in USD. By setting this attribute, the instance group is being declared as a Spot Instance, and will implicitly create a Spot request. Leave this blank to use On-Demand Instances.
        /// </summary>
        [Input("bidPrice")]
        public Input<string>? BidPrice { get; set; }

        [Input("ebsConfigs")]
        private InputList<Inputs.ClusterCoreInstanceGroupEbsConfigArgs>? _ebsConfigs;

        /// <summary>
        /// Configuration block(s) for EBS volumes attached to each instance in the instance group. Detailed below.
        /// </summary>
        public InputList<Inputs.ClusterCoreInstanceGroupEbsConfigArgs> EbsConfigs
        {
            get => _ebsConfigs ?? (_ebsConfigs = new InputList<Inputs.ClusterCoreInstanceGroupEbsConfigArgs>());
            set => _ebsConfigs = value;
        }

        /// <summary>
        /// ID of the cluster.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Target number of instances for the instance group. Must be at least 1. Defaults to 1.
        /// </summary>
        [Input("instanceCount")]
        public Input<int>? InstanceCount { get; set; }

        /// <summary>
        /// EC2 instance type for all instances in the instance group.
        /// </summary>
        [Input("instanceType", required: true)]
        public Input<string> InstanceType { get; set; } = null!;

        /// <summary>
        /// Friendly name given to the instance group.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public ClusterCoreInstanceGroupArgs()
        {
        }
        public static new ClusterCoreInstanceGroupArgs Empty => new ClusterCoreInstanceGroupArgs();
    }
}
