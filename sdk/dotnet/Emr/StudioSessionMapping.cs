// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Emr
{
    /// <summary>
    /// Provides an Elastic MapReduce Studio Session Mapping.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Emr.StudioSessionMapping("example", new()
    ///     {
    ///         StudioId = aws_emr_studio.Example.Id,
    ///         IdentityType = "USER",
    ///         IdentityId = "example",
    ///         SessionPolicyArn = aws_iam_policy.Example.Arn,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import EMR studio session mappings using `studio-id:identity-type:identity-id`. For example:
    /// 
    /// ```sh
    ///  $ pulumi import aws:emr/studioSessionMapping:StudioSessionMapping example es-xxxxx:USER:xxxxx-xxx-xxx
    /// ```
    /// </summary>
    [AwsResourceType("aws:emr/studioSessionMapping:StudioSessionMapping")]
    public partial class StudioSessionMapping : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The globally unique identifier (GUID) of the user or group from the Amazon Web Services SSO Identity Store.
        /// </summary>
        [Output("identityId")]
        public Output<string> IdentityId { get; private set; } = null!;

        /// <summary>
        /// The name of the user or group from the Amazon Web Services SSO Identity Store.
        /// </summary>
        [Output("identityName")]
        public Output<string> IdentityName { get; private set; } = null!;

        /// <summary>
        /// Specifies whether the identity to map to the Amazon EMR Studio is a `USER` or a `GROUP`.
        /// </summary>
        [Output("identityType")]
        public Output<string> IdentityType { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) for the session policy that will be applied to the user or group. You should specify the ARN for the session policy that you want to apply, not the ARN of your user role.
        /// </summary>
        [Output("sessionPolicyArn")]
        public Output<string> SessionPolicyArn { get; private set; } = null!;

        /// <summary>
        /// The ID of the Amazon EMR Studio to which the user or group will be mapped.
        /// </summary>
        [Output("studioId")]
        public Output<string> StudioId { get; private set; } = null!;


        /// <summary>
        /// Create a StudioSessionMapping resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public StudioSessionMapping(string name, StudioSessionMappingArgs args, CustomResourceOptions? options = null)
            : base("aws:emr/studioSessionMapping:StudioSessionMapping", name, args ?? new StudioSessionMappingArgs(), MakeResourceOptions(options, ""))
        {
        }

        private StudioSessionMapping(string name, Input<string> id, StudioSessionMappingState? state = null, CustomResourceOptions? options = null)
            : base("aws:emr/studioSessionMapping:StudioSessionMapping", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing StudioSessionMapping resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static StudioSessionMapping Get(string name, Input<string> id, StudioSessionMappingState? state = null, CustomResourceOptions? options = null)
        {
            return new StudioSessionMapping(name, id, state, options);
        }
    }

    public sealed class StudioSessionMappingArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The globally unique identifier (GUID) of the user or group from the Amazon Web Services SSO Identity Store.
        /// </summary>
        [Input("identityId")]
        public Input<string>? IdentityId { get; set; }

        /// <summary>
        /// The name of the user or group from the Amazon Web Services SSO Identity Store.
        /// </summary>
        [Input("identityName")]
        public Input<string>? IdentityName { get; set; }

        /// <summary>
        /// Specifies whether the identity to map to the Amazon EMR Studio is a `USER` or a `GROUP`.
        /// </summary>
        [Input("identityType", required: true)]
        public Input<string> IdentityType { get; set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) for the session policy that will be applied to the user or group. You should specify the ARN for the session policy that you want to apply, not the ARN of your user role.
        /// </summary>
        [Input("sessionPolicyArn", required: true)]
        public Input<string> SessionPolicyArn { get; set; } = null!;

        /// <summary>
        /// The ID of the Amazon EMR Studio to which the user or group will be mapped.
        /// </summary>
        [Input("studioId", required: true)]
        public Input<string> StudioId { get; set; } = null!;

        public StudioSessionMappingArgs()
        {
        }
        public static new StudioSessionMappingArgs Empty => new StudioSessionMappingArgs();
    }

    public sealed class StudioSessionMappingState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The globally unique identifier (GUID) of the user or group from the Amazon Web Services SSO Identity Store.
        /// </summary>
        [Input("identityId")]
        public Input<string>? IdentityId { get; set; }

        /// <summary>
        /// The name of the user or group from the Amazon Web Services SSO Identity Store.
        /// </summary>
        [Input("identityName")]
        public Input<string>? IdentityName { get; set; }

        /// <summary>
        /// Specifies whether the identity to map to the Amazon EMR Studio is a `USER` or a `GROUP`.
        /// </summary>
        [Input("identityType")]
        public Input<string>? IdentityType { get; set; }

        /// <summary>
        /// The Amazon Resource Name (ARN) for the session policy that will be applied to the user or group. You should specify the ARN for the session policy that you want to apply, not the ARN of your user role.
        /// </summary>
        [Input("sessionPolicyArn")]
        public Input<string>? SessionPolicyArn { get; set; }

        /// <summary>
        /// The ID of the Amazon EMR Studio to which the user or group will be mapped.
        /// </summary>
        [Input("studioId")]
        public Input<string>? StudioId { get; set; }

        public StudioSessionMappingState()
        {
        }
        public static new StudioSessionMappingState Empty => new StudioSessionMappingState();
    }
}
