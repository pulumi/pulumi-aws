// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Emr
{
    /// <summary>
    /// Resource for managing an AWS EMR block public access configuration. This region level security configuration restricts the launch of EMR clusters that have associated security groups permitting public access on unspecified ports. See the [EMR Block Public Access Configuration](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-block-public-access.html) documentation for further information.
    /// 
    /// ## Example Usage
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Emr.BlockPublicAccessConfiguration("example", new()
    ///     {
    ///         BlockPublicSecurityGroupRules = true,
    ///     });
    /// 
    /// });
    /// ```
    /// ### Default Configuration
    /// 
    /// By default, each AWS region is equipped with a block public access configuration that prevents EMR clusters from being launched if they have security group rules permitting public access on any port except for port 22. The default configuration can be managed using this resource.
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Emr.BlockPublicAccessConfiguration("example", new()
    ///     {
    ///         BlockPublicSecurityGroupRules = true,
    ///         PermittedPublicSecurityGroupRuleRanges = new[]
    ///         {
    ///             new Aws.Emr.Inputs.BlockPublicAccessConfigurationPermittedPublicSecurityGroupRuleRangeArgs
    ///             {
    ///                 MaxRange = 22,
    ///                 MinRange = 22,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// &gt; **NOTE:** If an `aws.emr.BlockPublicAccessConfiguration` resource is destroyed, the configuration will reset to this default configuration.
    /// ### Multiple Permitted Public Security Group Rule Ranges
    /// 
    /// The resource permits specification of multiple `permitted_public_security_group_rule_range` blocks.
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Emr.BlockPublicAccessConfiguration("example", new()
    ///     {
    ///         BlockPublicSecurityGroupRules = true,
    ///         PermittedPublicSecurityGroupRuleRanges = new[]
    ///         {
    ///             new Aws.Emr.Inputs.BlockPublicAccessConfigurationPermittedPublicSecurityGroupRuleRangeArgs
    ///             {
    ///                 MaxRange = 22,
    ///                 MinRange = 22,
    ///             },
    ///             new Aws.Emr.Inputs.BlockPublicAccessConfigurationPermittedPublicSecurityGroupRuleRangeArgs
    ///             {
    ///                 MaxRange = 101,
    ///                 MinRange = 100,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### Disabling Block Public Access
    /// 
    /// To permit EMR clusters to be launched in the configured region regardless of associated security group rules, the Block Public Access feature can be disabled using this resource.
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Emr.BlockPublicAccessConfiguration("example", new()
    ///     {
    ///         BlockPublicSecurityGroupRules = false,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// The current EMR Block Public Access Configuration can be imported, e.g.,
    /// 
    /// ```sh
    ///  $ pulumi import aws:emr/blockPublicAccessConfiguration:BlockPublicAccessConfiguration example current
    /// ```
    /// </summary>
    [AwsResourceType("aws:emr/blockPublicAccessConfiguration:BlockPublicAccessConfiguration")]
    public partial class BlockPublicAccessConfiguration : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Enable or disable EMR Block Public Access.
        /// </summary>
        [Output("blockPublicSecurityGroupRules")]
        public Output<bool> BlockPublicSecurityGroupRules { get; private set; } = null!;

        /// <summary>
        /// Configuration block for defining permitted public security group rule port ranges. Can be defined multiple times per resource. Only valid if `block_public_security_group_rules` is set to `true`.
        /// </summary>
        [Output("permittedPublicSecurityGroupRuleRanges")]
        public Output<ImmutableArray<Outputs.BlockPublicAccessConfigurationPermittedPublicSecurityGroupRuleRange>> PermittedPublicSecurityGroupRuleRanges { get; private set; } = null!;


        /// <summary>
        /// Create a BlockPublicAccessConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BlockPublicAccessConfiguration(string name, BlockPublicAccessConfigurationArgs args, CustomResourceOptions? options = null)
            : base("aws:emr/blockPublicAccessConfiguration:BlockPublicAccessConfiguration", name, args ?? new BlockPublicAccessConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BlockPublicAccessConfiguration(string name, Input<string> id, BlockPublicAccessConfigurationState? state = null, CustomResourceOptions? options = null)
            : base("aws:emr/blockPublicAccessConfiguration:BlockPublicAccessConfiguration", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BlockPublicAccessConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BlockPublicAccessConfiguration Get(string name, Input<string> id, BlockPublicAccessConfigurationState? state = null, CustomResourceOptions? options = null)
        {
            return new BlockPublicAccessConfiguration(name, id, state, options);
        }
    }

    public sealed class BlockPublicAccessConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable or disable EMR Block Public Access.
        /// </summary>
        [Input("blockPublicSecurityGroupRules", required: true)]
        public Input<bool> BlockPublicSecurityGroupRules { get; set; } = null!;

        [Input("permittedPublicSecurityGroupRuleRanges")]
        private InputList<Inputs.BlockPublicAccessConfigurationPermittedPublicSecurityGroupRuleRangeArgs>? _permittedPublicSecurityGroupRuleRanges;

        /// <summary>
        /// Configuration block for defining permitted public security group rule port ranges. Can be defined multiple times per resource. Only valid if `block_public_security_group_rules` is set to `true`.
        /// </summary>
        public InputList<Inputs.BlockPublicAccessConfigurationPermittedPublicSecurityGroupRuleRangeArgs> PermittedPublicSecurityGroupRuleRanges
        {
            get => _permittedPublicSecurityGroupRuleRanges ?? (_permittedPublicSecurityGroupRuleRanges = new InputList<Inputs.BlockPublicAccessConfigurationPermittedPublicSecurityGroupRuleRangeArgs>());
            set => _permittedPublicSecurityGroupRuleRanges = value;
        }

        public BlockPublicAccessConfigurationArgs()
        {
        }
        public static new BlockPublicAccessConfigurationArgs Empty => new BlockPublicAccessConfigurationArgs();
    }

    public sealed class BlockPublicAccessConfigurationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable or disable EMR Block Public Access.
        /// </summary>
        [Input("blockPublicSecurityGroupRules")]
        public Input<bool>? BlockPublicSecurityGroupRules { get; set; }

        [Input("permittedPublicSecurityGroupRuleRanges")]
        private InputList<Inputs.BlockPublicAccessConfigurationPermittedPublicSecurityGroupRuleRangeGetArgs>? _permittedPublicSecurityGroupRuleRanges;

        /// <summary>
        /// Configuration block for defining permitted public security group rule port ranges. Can be defined multiple times per resource. Only valid if `block_public_security_group_rules` is set to `true`.
        /// </summary>
        public InputList<Inputs.BlockPublicAccessConfigurationPermittedPublicSecurityGroupRuleRangeGetArgs> PermittedPublicSecurityGroupRuleRanges
        {
            get => _permittedPublicSecurityGroupRuleRanges ?? (_permittedPublicSecurityGroupRuleRanges = new InputList<Inputs.BlockPublicAccessConfigurationPermittedPublicSecurityGroupRuleRangeGetArgs>());
            set => _permittedPublicSecurityGroupRuleRanges = value;
        }

        public BlockPublicAccessConfigurationState()
        {
        }
        public static new BlockPublicAccessConfigurationState Empty => new BlockPublicAccessConfigurationState();
    }
}
