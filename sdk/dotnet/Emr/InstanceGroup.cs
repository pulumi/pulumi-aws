// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Emr
{
    [AwsResourceType("aws:emr/instanceGroup:InstanceGroup")]
    public partial class InstanceGroup : global::Pulumi.CustomResource
    {
        [Output("autoscalingPolicy")]
        public Output<string?> AutoscalingPolicy { get; private set; } = null!;

        [Output("bidPrice")]
        public Output<string?> BidPrice { get; private set; } = null!;

        [Output("clusterId")]
        public Output<string> ClusterId { get; private set; } = null!;

        [Output("configurationsJson")]
        public Output<string?> ConfigurationsJson { get; private set; } = null!;

        [Output("ebsConfigs")]
        public Output<ImmutableArray<Outputs.InstanceGroupEbsConfig>> EbsConfigs { get; private set; } = null!;

        [Output("ebsOptimized")]
        public Output<bool?> EbsOptimized { get; private set; } = null!;

        [Output("instanceCount")]
        public Output<int> InstanceCount { get; private set; } = null!;

        [Output("instanceType")]
        public Output<string> InstanceType { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("runningInstanceCount")]
        public Output<int> RunningInstanceCount { get; private set; } = null!;

        [Output("status")]
        public Output<string> Status { get; private set; } = null!;


        /// <summary>
        /// Create a InstanceGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public InstanceGroup(string name, InstanceGroupArgs args, CustomResourceOptions? options = null)
            : base("aws:emr/instanceGroup:InstanceGroup", name, args ?? new InstanceGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private InstanceGroup(string name, Input<string> id, InstanceGroupState? state = null, CustomResourceOptions? options = null)
            : base("aws:emr/instanceGroup:InstanceGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing InstanceGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static InstanceGroup Get(string name, Input<string> id, InstanceGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new InstanceGroup(name, id, state, options);
        }
    }

    public sealed class InstanceGroupArgs : global::Pulumi.ResourceArgs
    {
        [Input("autoscalingPolicy")]
        public Input<string>? AutoscalingPolicy { get; set; }

        [Input("bidPrice")]
        public Input<string>? BidPrice { get; set; }

        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        [Input("configurationsJson")]
        public Input<string>? ConfigurationsJson { get; set; }

        [Input("ebsConfigs")]
        private InputList<Inputs.InstanceGroupEbsConfigArgs>? _ebsConfigs;
        public InputList<Inputs.InstanceGroupEbsConfigArgs> EbsConfigs
        {
            get => _ebsConfigs ?? (_ebsConfigs = new InputList<Inputs.InstanceGroupEbsConfigArgs>());
            set => _ebsConfigs = value;
        }

        [Input("ebsOptimized")]
        public Input<bool>? EbsOptimized { get; set; }

        [Input("instanceCount")]
        public Input<int>? InstanceCount { get; set; }

        [Input("instanceType", required: true)]
        public Input<string> InstanceType { get; set; } = null!;

        [Input("name")]
        public Input<string>? Name { get; set; }

        public InstanceGroupArgs()
        {
        }
        public static new InstanceGroupArgs Empty => new InstanceGroupArgs();
    }

    public sealed class InstanceGroupState : global::Pulumi.ResourceArgs
    {
        [Input("autoscalingPolicy")]
        public Input<string>? AutoscalingPolicy { get; set; }

        [Input("bidPrice")]
        public Input<string>? BidPrice { get; set; }

        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        [Input("configurationsJson")]
        public Input<string>? ConfigurationsJson { get; set; }

        [Input("ebsConfigs")]
        private InputList<Inputs.InstanceGroupEbsConfigGetArgs>? _ebsConfigs;
        public InputList<Inputs.InstanceGroupEbsConfigGetArgs> EbsConfigs
        {
            get => _ebsConfigs ?? (_ebsConfigs = new InputList<Inputs.InstanceGroupEbsConfigGetArgs>());
            set => _ebsConfigs = value;
        }

        [Input("ebsOptimized")]
        public Input<bool>? EbsOptimized { get; set; }

        [Input("instanceCount")]
        public Input<int>? InstanceCount { get; set; }

        [Input("instanceType")]
        public Input<string>? InstanceType { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("runningInstanceCount")]
        public Input<int>? RunningInstanceCount { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        public InstanceGroupState()
        {
        }
        public static new InstanceGroupState Empty => new InstanceGroupState();
    }
}
