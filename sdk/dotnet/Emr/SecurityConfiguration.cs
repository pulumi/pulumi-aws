// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Emr
{
    /// <summary>
    /// Provides a resource to manage AWS EMR Security Configurations
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var foo = new Aws.Emr.SecurityConfiguration("foo", new Aws.Emr.SecurityConfigurationArgs
    ///         {
    ///             Configuration = @"{
    ///   ""EncryptionConfiguration"": {
    ///     ""AtRestEncryptionConfiguration"": {
    ///       ""S3EncryptionConfiguration"": {
    ///         ""EncryptionMode"": ""SSE-S3""
    ///       },
    ///       ""LocalDiskEncryptionConfiguration"": {
    ///         ""EncryptionKeyProviderType"": ""AwsKms"",
    ///         ""AwsKmsKey"": ""arn:aws:kms:us-west-2:187416307283:alias/tf_emr_test_key""
    ///       }
    ///     },
    ///     ""EnableInTransitEncryption"": false,
    ///     ""EnableAtRestEncryption"": true
    ///   }
    /// }
    /// 
    /// ",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// EMR Security Configurations can be imported using the `name`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import aws:emr/securityConfiguration:SecurityConfiguration sc example-sc-name
    /// ```
    /// </summary>
    public partial class SecurityConfiguration : Pulumi.CustomResource
    {
        /// <summary>
        /// A JSON formatted Security Configuration
        /// </summary>
        [Output("configuration")]
        public Output<string> Configuration { get; private set; } = null!;

        /// <summary>
        /// Date the Security Configuration was created
        /// </summary>
        [Output("creationDate")]
        public Output<string> CreationDate { get; private set; } = null!;

        /// <summary>
        /// The name of the EMR Security Configuration. By default generated by this provider.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Creates a unique name beginning with the specified
        /// prefix. Conflicts with `name`.
        /// </summary>
        [Output("namePrefix")]
        public Output<string?> NamePrefix { get; private set; } = null!;


        /// <summary>
        /// Create a SecurityConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SecurityConfiguration(string name, SecurityConfigurationArgs args, CustomResourceOptions? options = null)
            : base("aws:emr/securityConfiguration:SecurityConfiguration", name, args ?? new SecurityConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SecurityConfiguration(string name, Input<string> id, SecurityConfigurationState? state = null, CustomResourceOptions? options = null)
            : base("aws:emr/securityConfiguration:SecurityConfiguration", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SecurityConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SecurityConfiguration Get(string name, Input<string> id, SecurityConfigurationState? state = null, CustomResourceOptions? options = null)
        {
            return new SecurityConfiguration(name, id, state, options);
        }
    }

    public sealed class SecurityConfigurationArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// A JSON formatted Security Configuration
        /// </summary>
        [Input("configuration", required: true)]
        public Input<string> Configuration { get; set; } = null!;

        /// <summary>
        /// The name of the EMR Security Configuration. By default generated by this provider.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Creates a unique name beginning with the specified
        /// prefix. Conflicts with `name`.
        /// </summary>
        [Input("namePrefix")]
        public Input<string>? NamePrefix { get; set; }

        public SecurityConfigurationArgs()
        {
        }
    }

    public sealed class SecurityConfigurationState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// A JSON formatted Security Configuration
        /// </summary>
        [Input("configuration")]
        public Input<string>? Configuration { get; set; }

        /// <summary>
        /// Date the Security Configuration was created
        /// </summary>
        [Input("creationDate")]
        public Input<string>? CreationDate { get; set; }

        /// <summary>
        /// The name of the EMR Security Configuration. By default generated by this provider.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Creates a unique name beginning with the specified
        /// prefix. Conflicts with `name`.
        /// </summary>
        [Input("namePrefix")]
        public Input<string>? NamePrefix { get; set; }

        public SecurityConfigurationState()
        {
        }
    }
}
