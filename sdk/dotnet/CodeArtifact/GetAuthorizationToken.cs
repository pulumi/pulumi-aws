// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CodeArtifact
{
    public static class GetAuthorizationToken
    {
        public static Task<GetAuthorizationTokenResult> InvokeAsync(GetAuthorizationTokenArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAuthorizationTokenResult>("aws:codeartifact/getAuthorizationToken:getAuthorizationToken", args ?? new GetAuthorizationTokenArgs(), options.WithDefaults());

        public static Output<GetAuthorizationTokenResult> Invoke(GetAuthorizationTokenInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAuthorizationTokenResult>("aws:codeartifact/getAuthorizationToken:getAuthorizationToken", args ?? new GetAuthorizationTokenInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAuthorizationTokenArgs : global::Pulumi.InvokeArgs
    {
        [Input("domain", required: true)]
        public string Domain { get; set; } = null!;

        [Input("domainOwner")]
        public string? DomainOwner { get; set; }

        [Input("durationSeconds")]
        public int? DurationSeconds { get; set; }

        public GetAuthorizationTokenArgs()
        {
        }
        public static new GetAuthorizationTokenArgs Empty => new GetAuthorizationTokenArgs();
    }

    public sealed class GetAuthorizationTokenInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("domain", required: true)]
        public Input<string> Domain { get; set; } = null!;

        [Input("domainOwner")]
        public Input<string>? DomainOwner { get; set; }

        [Input("durationSeconds")]
        public Input<int>? DurationSeconds { get; set; }

        public GetAuthorizationTokenInvokeArgs()
        {
        }
        public static new GetAuthorizationTokenInvokeArgs Empty => new GetAuthorizationTokenInvokeArgs();
    }


    [OutputType]
    public sealed class GetAuthorizationTokenResult
    {
        public readonly string AuthorizationToken;
        public readonly string Domain;
        public readonly string DomainOwner;
        public readonly int? DurationSeconds;
        public readonly string Expiration;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetAuthorizationTokenResult(
            string authorizationToken,

            string domain,

            string domainOwner,

            int? durationSeconds,

            string expiration,

            string id)
        {
            AuthorizationToken = authorizationToken;
            Domain = domain;
            DomainOwner = domainOwner;
            DurationSeconds = durationSeconds;
            Expiration = expiration;
            Id = id;
        }
    }
}
