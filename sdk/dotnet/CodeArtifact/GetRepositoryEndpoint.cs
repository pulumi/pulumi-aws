// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CodeArtifact
{
    public static class GetRepositoryEndpoint
    {
        /// <summary>
        /// The CodeArtifact Repository Endpoint data source returns the endpoint of a repository for a specific package format.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const test = aws.codeartifact.getRepositoryEndpoint({
        ///     domain: aws_codeartifact_domain.test.domain,
        ///     repository: aws_codeartifact_repository.test.repository,
        ///     format: "npm",
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// test = aws.codeartifact.get_repository_endpoint(domain=%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference),
        ///     repository=%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference),
        ///     format="npm")
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.CodeArtifact.GetRepositoryEndpoint.Invoke(new()
        ///     {
        ///         Domain = aws_codeartifact_domain.Test.Domain,
        ///         Repository = aws_codeartifact_repository.Test.Repository,
        ///         Format = "npm",
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/codeartifact"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := codeartifact.GetRepositoryEndpoint(ctx, &amp;codeartifact.GetRepositoryEndpointArgs{
        /// 			Domain:     aws_codeartifact_domain.Test.Domain,
        /// 			Repository: aws_codeartifact_repository.Test.Repository,
        /// 			Format:     "npm",
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.codeartifact.CodeartifactFunctions;
        /// import com.pulumi.aws.codeartifact.inputs.GetRepositoryEndpointArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var test = CodeartifactFunctions.getRepositoryEndpoint(GetRepositoryEndpointArgs.builder()
        ///             .domain(aws_codeartifact_domain.test().domain())
        ///             .repository(aws_codeartifact_repository.test().repository())
        ///             .format("npm")
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   test:
        ///     fn::invoke:
        ///       Function: aws:codeartifact:getRepositoryEndpoint
        ///       Arguments:
        ///         domain: ${aws_codeartifact_domain.test.domain}
        ///         repository: ${aws_codeartifact_repository.test.repository}
        ///         format: npm
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetRepositoryEndpointResult> InvokeAsync(GetRepositoryEndpointArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRepositoryEndpointResult>("aws:codeartifact/getRepositoryEndpoint:getRepositoryEndpoint", args ?? new GetRepositoryEndpointArgs(), options.WithDefaults());

        /// <summary>
        /// The CodeArtifact Repository Endpoint data source returns the endpoint of a repository for a specific package format.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const test = aws.codeartifact.getRepositoryEndpoint({
        ///     domain: aws_codeartifact_domain.test.domain,
        ///     repository: aws_codeartifact_repository.test.repository,
        ///     format: "npm",
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// test = aws.codeartifact.get_repository_endpoint(domain=%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference),
        ///     repository=%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference),
        ///     format="npm")
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.CodeArtifact.GetRepositoryEndpoint.Invoke(new()
        ///     {
        ///         Domain = aws_codeartifact_domain.Test.Domain,
        ///         Repository = aws_codeartifact_repository.Test.Repository,
        ///         Format = "npm",
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/codeartifact"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := codeartifact.GetRepositoryEndpoint(ctx, &amp;codeartifact.GetRepositoryEndpointArgs{
        /// 			Domain:     aws_codeartifact_domain.Test.Domain,
        /// 			Repository: aws_codeartifact_repository.Test.Repository,
        /// 			Format:     "npm",
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.codeartifact.CodeartifactFunctions;
        /// import com.pulumi.aws.codeartifact.inputs.GetRepositoryEndpointArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var test = CodeartifactFunctions.getRepositoryEndpoint(GetRepositoryEndpointArgs.builder()
        ///             .domain(aws_codeartifact_domain.test().domain())
        ///             .repository(aws_codeartifact_repository.test().repository())
        ///             .format("npm")
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   test:
        ///     fn::invoke:
        ///       Function: aws:codeartifact:getRepositoryEndpoint
        ///       Arguments:
        ///         domain: ${aws_codeartifact_domain.test.domain}
        ///         repository: ${aws_codeartifact_repository.test.repository}
        ///         format: npm
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetRepositoryEndpointResult> Invoke(GetRepositoryEndpointInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRepositoryEndpointResult>("aws:codeartifact/getRepositoryEndpoint:getRepositoryEndpoint", args ?? new GetRepositoryEndpointInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRepositoryEndpointArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the domain that contains the repository.
        /// </summary>
        [Input("domain", required: true)]
        public string Domain { get; set; } = null!;

        /// <summary>
        /// Account number of the AWS account that owns the domain.
        /// </summary>
        [Input("domainOwner")]
        public string? DomainOwner { get; set; }

        /// <summary>
        /// Which endpoint of a repository to return. A repository has one endpoint for each package format: `npm`, `pypi`, `maven`, and `nuget`.
        /// </summary>
        [Input("format", required: true)]
        public string Format { get; set; } = null!;

        /// <summary>
        /// Name of the repository.
        /// </summary>
        [Input("repository", required: true)]
        public string Repository { get; set; } = null!;

        public GetRepositoryEndpointArgs()
        {
        }
        public static new GetRepositoryEndpointArgs Empty => new GetRepositoryEndpointArgs();
    }

    public sealed class GetRepositoryEndpointInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the domain that contains the repository.
        /// </summary>
        [Input("domain", required: true)]
        public Input<string> Domain { get; set; } = null!;

        /// <summary>
        /// Account number of the AWS account that owns the domain.
        /// </summary>
        [Input("domainOwner")]
        public Input<string>? DomainOwner { get; set; }

        /// <summary>
        /// Which endpoint of a repository to return. A repository has one endpoint for each package format: `npm`, `pypi`, `maven`, and `nuget`.
        /// </summary>
        [Input("format", required: true)]
        public Input<string> Format { get; set; } = null!;

        /// <summary>
        /// Name of the repository.
        /// </summary>
        [Input("repository", required: true)]
        public Input<string> Repository { get; set; } = null!;

        public GetRepositoryEndpointInvokeArgs()
        {
        }
        public static new GetRepositoryEndpointInvokeArgs Empty => new GetRepositoryEndpointInvokeArgs();
    }


    [OutputType]
    public sealed class GetRepositoryEndpointResult
    {
        public readonly string Domain;
        public readonly string DomainOwner;
        public readonly string Format;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Repository;
        /// <summary>
        /// URL of the returned endpoint.
        /// </summary>
        public readonly string RepositoryEndpoint;

        [OutputConstructor]
        private GetRepositoryEndpointResult(
            string domain,

            string domainOwner,

            string format,

            string id,

            string repository,

            string repositoryEndpoint)
        {
            Domain = domain;
            DomainOwner = domainOwner;
            Format = format;
            Id = id;
            Repository = repository;
            RepositoryEndpoint = repositoryEndpoint;
        }
    }
}
