// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Transfer
{
    /// <summary>
    /// Provides a AWS Transfer Workflow resource.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Transfer.Workflow("example", new()
    ///     {
    ///         Steps = new[]
    ///         {
    ///             new Aws.Transfer.Inputs.WorkflowStepArgs
    ///             {
    ///                 DeleteStepDetails = new Aws.Transfer.Inputs.WorkflowStepDeleteStepDetailsArgs
    ///                 {
    ///                     Name = "example",
    ///                     SourceFileLocation = original.File,
    ///                 },
    ///                 Type = "DELETE",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Transfer Workflows can be imported using the `worflow_id`.
    /// 
    /// ```sh
    ///  $ pulumi import aws:transfer/workflow:Workflow example example
    /// ```
    /// </summary>
    [AwsResourceType("aws:transfer/workflow:Workflow")]
    public partial class Workflow : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Workflow ARN.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// A textual description for the workflow.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Specifies the steps (actions) to take if errors are encountered during execution of the workflow. See Workflow Steps below.
        /// </summary>
        [Output("onExceptionSteps")]
        public Output<ImmutableArray<Outputs.WorkflowOnExceptionStep>> OnExceptionSteps { get; private set; } = null!;

        /// <summary>
        /// Specifies the details for the steps that are in the specified workflow. See Workflow Steps below.
        /// </summary>
        [Output("steps")]
        public Output<ImmutableArray<Outputs.WorkflowStep>> Steps { get; private set; } = null!;

        /// <summary>
        /// Array that contains from 1 to 10 key/value pairs. See S3 Tags below.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;


        /// <summary>
        /// Create a Workflow resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Workflow(string name, WorkflowArgs args, CustomResourceOptions? options = null)
            : base("aws:transfer/workflow:Workflow", name, args ?? new WorkflowArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Workflow(string name, Input<string> id, WorkflowState? state = null, CustomResourceOptions? options = null)
            : base("aws:transfer/workflow:Workflow", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Workflow resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Workflow Get(string name, Input<string> id, WorkflowState? state = null, CustomResourceOptions? options = null)
        {
            return new Workflow(name, id, state, options);
        }
    }

    public sealed class WorkflowArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A textual description for the workflow.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("onExceptionSteps")]
        private InputList<Inputs.WorkflowOnExceptionStepArgs>? _onExceptionSteps;

        /// <summary>
        /// Specifies the steps (actions) to take if errors are encountered during execution of the workflow. See Workflow Steps below.
        /// </summary>
        public InputList<Inputs.WorkflowOnExceptionStepArgs> OnExceptionSteps
        {
            get => _onExceptionSteps ?? (_onExceptionSteps = new InputList<Inputs.WorkflowOnExceptionStepArgs>());
            set => _onExceptionSteps = value;
        }

        [Input("steps", required: true)]
        private InputList<Inputs.WorkflowStepArgs>? _steps;

        /// <summary>
        /// Specifies the details for the steps that are in the specified workflow. See Workflow Steps below.
        /// </summary>
        public InputList<Inputs.WorkflowStepArgs> Steps
        {
            get => _steps ?? (_steps = new InputList<Inputs.WorkflowStepArgs>());
            set => _steps = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Array that contains from 1 to 10 key/value pairs. See S3 Tags below.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public WorkflowArgs()
        {
        }
        public static new WorkflowArgs Empty => new WorkflowArgs();
    }

    public sealed class WorkflowState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Workflow ARN.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// A textual description for the workflow.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("onExceptionSteps")]
        private InputList<Inputs.WorkflowOnExceptionStepGetArgs>? _onExceptionSteps;

        /// <summary>
        /// Specifies the steps (actions) to take if errors are encountered during execution of the workflow. See Workflow Steps below.
        /// </summary>
        public InputList<Inputs.WorkflowOnExceptionStepGetArgs> OnExceptionSteps
        {
            get => _onExceptionSteps ?? (_onExceptionSteps = new InputList<Inputs.WorkflowOnExceptionStepGetArgs>());
            set => _onExceptionSteps = value;
        }

        [Input("steps")]
        private InputList<Inputs.WorkflowStepGetArgs>? _steps;

        /// <summary>
        /// Specifies the details for the steps that are in the specified workflow. See Workflow Steps below.
        /// </summary>
        public InputList<Inputs.WorkflowStepGetArgs> Steps
        {
            get => _steps ?? (_steps = new InputList<Inputs.WorkflowStepGetArgs>());
            set => _steps = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Array that contains from 1 to 10 key/value pairs. See S3 Tags below.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        public WorkflowState()
        {
        }
        public static new WorkflowState Empty => new WorkflowState();
    }
}
