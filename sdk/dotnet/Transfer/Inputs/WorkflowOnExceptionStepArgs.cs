// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Transfer.Inputs
{

    public sealed class WorkflowOnExceptionStepArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Details for a step that performs a file copy. See Copy Step Details below.
        /// </summary>
        [Input("copyStepDetails")]
        public Input<Inputs.WorkflowOnExceptionStepCopyStepDetailsArgs>? CopyStepDetails { get; set; }

        /// <summary>
        /// Details for a step that invokes a lambda function.
        /// </summary>
        [Input("customStepDetails")]
        public Input<Inputs.WorkflowOnExceptionStepCustomStepDetailsArgs>? CustomStepDetails { get; set; }

        /// <summary>
        /// Details for a step that decrypts the file.
        /// </summary>
        [Input("decryptStepDetails")]
        public Input<Inputs.WorkflowOnExceptionStepDecryptStepDetailsArgs>? DecryptStepDetails { get; set; }

        /// <summary>
        /// Details for a step that deletes the file.
        /// </summary>
        [Input("deleteStepDetails")]
        public Input<Inputs.WorkflowOnExceptionStepDeleteStepDetailsArgs>? DeleteStepDetails { get; set; }

        /// <summary>
        /// Details for a step that creates one or more tags.
        /// </summary>
        [Input("tagStepDetails")]
        public Input<Inputs.WorkflowOnExceptionStepTagStepDetailsArgs>? TagStepDetails { get; set; }

        /// <summary>
        /// The type of encryption used. Currently, this value must be `"PGP"`.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public WorkflowOnExceptionStepArgs()
        {
        }
        public static new WorkflowOnExceptionStepArgs Empty => new WorkflowOnExceptionStepArgs();
    }
}
