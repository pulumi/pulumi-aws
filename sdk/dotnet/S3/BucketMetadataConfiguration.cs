// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.S3
{
    /// <summary>
    /// Manages Amazon S3 Metadata for a bucket.
    /// 
    /// ## Example Usage
    /// 
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.S3.BucketMetadataConfiguration("example", new()
    ///     {
    ///         Bucket = exampleAwsS3Bucket.Bucket,
    ///         MetadataConfiguration = new Aws.S3.Inputs.BucketMetadataConfigurationMetadataConfigurationArgs
    ///         {
    ///             InventoryTableConfiguration = new Aws.S3.Inputs.BucketMetadataConfigurationMetadataConfigurationInventoryTableConfigurationArgs
    ///             {
    ///                 ConfigurationState = "ENABLED",
    ///             },
    ///             JournalTableConfiguration = new Aws.S3.Inputs.BucketMetadataConfigurationMetadataConfigurationJournalTableConfigurationArgs
    ///             {
    ///                 RecordExpiration = new Aws.S3.Inputs.BucketMetadataConfigurationMetadataConfigurationJournalTableConfigurationRecordExpirationArgs
    ///                 {
    ///                     Days = 7,
    ///                     Expiration = "ENABLED",
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// If the owner (account ID) of the source bucket differs from the account used to configure the Terraform AWS Provider, import using the `bucket` and `expected_bucket_owner` separated by a comma (`,`):
    /// 
    /// __Using `pulumi import` to import__ S3 bucket metadata configuration using the `bucket` or using the `bucket` and `expected_bucket_owner` separated by a comma (`,`). For example:
    /// 
    /// If the owner (account ID) of the source bucket is the same account used to configure the Terraform AWS Provider, import using the `bucket`:
    /// 
    /// ```sh
    /// $ pulumi import aws:s3/bucketMetadataConfiguration:BucketMetadataConfiguration example bucket-name
    /// ```
    /// If the owner (account ID) of the source bucket differs from the account used to configure the Terraform AWS Provider, import using the `bucket` and `expected_bucket_owner` separated by a comma (`,`):
    /// 
    /// ```sh
    /// $ pulumi import aws:s3/bucketMetadataConfiguration:BucketMetadataConfiguration example bucket-name,123456789012
    /// ```
    /// </summary>
    [AwsResourceType("aws:s3/bucketMetadataConfiguration:BucketMetadataConfiguration")]
    public partial class BucketMetadataConfiguration : global::Pulumi.CustomResource
    {
        /// <summary>
        /// General purpose bucket that you want to create the metadata configuration for.
        /// </summary>
        [Output("bucket")]
        public Output<string> Bucket { get; private set; } = null!;

        [Output("expectedBucketOwner")]
        public Output<string?> ExpectedBucketOwner { get; private set; } = null!;

        /// <summary>
        /// Metadata configuration. See `metadataConfiguration` Block for details.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Output("metadataConfiguration")]
        public Output<Outputs.BucketMetadataConfigurationMetadataConfiguration?> MetadataConfiguration { get; private set; } = null!;

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        [Output("timeouts")]
        public Output<Outputs.BucketMetadataConfigurationTimeouts?> Timeouts { get; private set; } = null!;


        /// <summary>
        /// Create a BucketMetadataConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BucketMetadataConfiguration(string name, BucketMetadataConfigurationArgs args, CustomResourceOptions? options = null)
            : base("aws:s3/bucketMetadataConfiguration:BucketMetadataConfiguration", name, args ?? new BucketMetadataConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BucketMetadataConfiguration(string name, Input<string> id, BucketMetadataConfigurationState? state = null, CustomResourceOptions? options = null)
            : base("aws:s3/bucketMetadataConfiguration:BucketMetadataConfiguration", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BucketMetadataConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BucketMetadataConfiguration Get(string name, Input<string> id, BucketMetadataConfigurationState? state = null, CustomResourceOptions? options = null)
        {
            return new BucketMetadataConfiguration(name, id, state, options);
        }
    }

    public sealed class BucketMetadataConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// General purpose bucket that you want to create the metadata configuration for.
        /// </summary>
        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        [Input("expectedBucketOwner")]
        public Input<string>? ExpectedBucketOwner { get; set; }

        /// <summary>
        /// Metadata configuration. See `metadataConfiguration` Block for details.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("metadataConfiguration")]
        public Input<Inputs.BucketMetadataConfigurationMetadataConfigurationArgs>? MetadataConfiguration { get; set; }

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("timeouts")]
        public Input<Inputs.BucketMetadataConfigurationTimeoutsArgs>? Timeouts { get; set; }

        public BucketMetadataConfigurationArgs()
        {
        }
        public static new BucketMetadataConfigurationArgs Empty => new BucketMetadataConfigurationArgs();
    }

    public sealed class BucketMetadataConfigurationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// General purpose bucket that you want to create the metadata configuration for.
        /// </summary>
        [Input("bucket")]
        public Input<string>? Bucket { get; set; }

        [Input("expectedBucketOwner")]
        public Input<string>? ExpectedBucketOwner { get; set; }

        /// <summary>
        /// Metadata configuration. See `metadataConfiguration` Block for details.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("metadataConfiguration")]
        public Input<Inputs.BucketMetadataConfigurationMetadataConfigurationGetArgs>? MetadataConfiguration { get; set; }

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("timeouts")]
        public Input<Inputs.BucketMetadataConfigurationTimeoutsGetArgs>? Timeouts { get; set; }

        public BucketMetadataConfigurationState()
        {
        }
        public static new BucketMetadataConfigurationState Empty => new BucketMetadataConfigurationState();
    }
}
