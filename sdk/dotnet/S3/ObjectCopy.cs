// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.S3
{
    [AwsResourceType("aws:s3/objectCopy:ObjectCopy")]
    public partial class ObjectCopy : global::Pulumi.CustomResource
    {
        [Output("acl")]
        public Output<string?> Acl { get; private set; } = null!;

        [Output("bucket")]
        public Output<string> Bucket { get; private set; } = null!;

        [Output("bucketKeyEnabled")]
        public Output<bool> BucketKeyEnabled { get; private set; } = null!;

        [Output("cacheControl")]
        public Output<string> CacheControl { get; private set; } = null!;

        [Output("contentDisposition")]
        public Output<string> ContentDisposition { get; private set; } = null!;

        [Output("contentEncoding")]
        public Output<string> ContentEncoding { get; private set; } = null!;

        [Output("contentLanguage")]
        public Output<string> ContentLanguage { get; private set; } = null!;

        [Output("contentType")]
        public Output<string> ContentType { get; private set; } = null!;

        [Output("copyIfMatch")]
        public Output<string?> CopyIfMatch { get; private set; } = null!;

        [Output("copyIfModifiedSince")]
        public Output<string?> CopyIfModifiedSince { get; private set; } = null!;

        [Output("copyIfNoneMatch")]
        public Output<string?> CopyIfNoneMatch { get; private set; } = null!;

        [Output("copyIfUnmodifiedSince")]
        public Output<string?> CopyIfUnmodifiedSince { get; private set; } = null!;

        [Output("customerAlgorithm")]
        public Output<string> CustomerAlgorithm { get; private set; } = null!;

        [Output("customerKey")]
        public Output<string?> CustomerKey { get; private set; } = null!;

        [Output("customerKeyMd5")]
        public Output<string> CustomerKeyMd5 { get; private set; } = null!;

        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        [Output("expectedBucketOwner")]
        public Output<string?> ExpectedBucketOwner { get; private set; } = null!;

        [Output("expectedSourceBucketOwner")]
        public Output<string?> ExpectedSourceBucketOwner { get; private set; } = null!;

        [Output("expiration")]
        public Output<string> Expiration { get; private set; } = null!;

        [Output("expires")]
        public Output<string?> Expires { get; private set; } = null!;

        [Output("forceDestroy")]
        public Output<bool?> ForceDestroy { get; private set; } = null!;

        [Output("grants")]
        public Output<ImmutableArray<Outputs.ObjectCopyGrant>> Grants { get; private set; } = null!;

        [Output("key")]
        public Output<string> Key { get; private set; } = null!;

        [Output("kmsEncryptionContext")]
        public Output<string> KmsEncryptionContext { get; private set; } = null!;

        [Output("kmsKeyId")]
        public Output<string> KmsKeyId { get; private set; } = null!;

        [Output("lastModified")]
        public Output<string> LastModified { get; private set; } = null!;

        [Output("metadata")]
        public Output<ImmutableDictionary<string, string>> Metadata { get; private set; } = null!;

        [Output("metadataDirective")]
        public Output<string?> MetadataDirective { get; private set; } = null!;

        [Output("objectLockLegalHoldStatus")]
        public Output<string> ObjectLockLegalHoldStatus { get; private set; } = null!;

        [Output("objectLockMode")]
        public Output<string> ObjectLockMode { get; private set; } = null!;

        [Output("objectLockRetainUntilDate")]
        public Output<string> ObjectLockRetainUntilDate { get; private set; } = null!;

        [Output("requestCharged")]
        public Output<bool> RequestCharged { get; private set; } = null!;

        [Output("requestPayer")]
        public Output<string?> RequestPayer { get; private set; } = null!;

        [Output("serverSideEncryption")]
        public Output<string> ServerSideEncryption { get; private set; } = null!;

        [Output("source")]
        public Output<string> Source { get; private set; } = null!;

        [Output("sourceCustomerAlgorithm")]
        public Output<string?> SourceCustomerAlgorithm { get; private set; } = null!;

        [Output("sourceCustomerKey")]
        public Output<string?> SourceCustomerKey { get; private set; } = null!;

        [Output("sourceCustomerKeyMd5")]
        public Output<string?> SourceCustomerKeyMd5 { get; private set; } = null!;

        [Output("sourceVersionId")]
        public Output<string> SourceVersionId { get; private set; } = null!;

        [Output("storageClass")]
        public Output<string> StorageClass { get; private set; } = null!;

        [Output("taggingDirective")]
        public Output<string?> TaggingDirective { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("versionId")]
        public Output<string> VersionId { get; private set; } = null!;

        [Output("websiteRedirect")]
        public Output<string> WebsiteRedirect { get; private set; } = null!;


        /// <summary>
        /// Create a ObjectCopy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ObjectCopy(string name, ObjectCopyArgs args, CustomResourceOptions? options = null)
            : base("aws:s3/objectCopy:ObjectCopy", name, args ?? new ObjectCopyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ObjectCopy(string name, Input<string> id, ObjectCopyState? state = null, CustomResourceOptions? options = null)
            : base("aws:s3/objectCopy:ObjectCopy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "customerKey",
                    "kmsEncryptionContext",
                    "kmsKeyId",
                    "sourceCustomerKey",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ObjectCopy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ObjectCopy Get(string name, Input<string> id, ObjectCopyState? state = null, CustomResourceOptions? options = null)
        {
            return new ObjectCopy(name, id, state, options);
        }
    }

    public sealed class ObjectCopyArgs : global::Pulumi.ResourceArgs
    {
        [Input("acl")]
        public Input<string>? Acl { get; set; }

        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        [Input("bucketKeyEnabled")]
        public Input<bool>? BucketKeyEnabled { get; set; }

        [Input("cacheControl")]
        public Input<string>? CacheControl { get; set; }

        [Input("contentDisposition")]
        public Input<string>? ContentDisposition { get; set; }

        [Input("contentEncoding")]
        public Input<string>? ContentEncoding { get; set; }

        [Input("contentLanguage")]
        public Input<string>? ContentLanguage { get; set; }

        [Input("contentType")]
        public Input<string>? ContentType { get; set; }

        [Input("copyIfMatch")]
        public Input<string>? CopyIfMatch { get; set; }

        [Input("copyIfModifiedSince")]
        public Input<string>? CopyIfModifiedSince { get; set; }

        [Input("copyIfNoneMatch")]
        public Input<string>? CopyIfNoneMatch { get; set; }

        [Input("copyIfUnmodifiedSince")]
        public Input<string>? CopyIfUnmodifiedSince { get; set; }

        [Input("customerAlgorithm")]
        public Input<string>? CustomerAlgorithm { get; set; }

        [Input("customerKey")]
        private Input<string>? _customerKey;
        public Input<string>? CustomerKey
        {
            get => _customerKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _customerKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("customerKeyMd5")]
        public Input<string>? CustomerKeyMd5 { get; set; }

        [Input("expectedBucketOwner")]
        public Input<string>? ExpectedBucketOwner { get; set; }

        [Input("expectedSourceBucketOwner")]
        public Input<string>? ExpectedSourceBucketOwner { get; set; }

        [Input("expires")]
        public Input<string>? Expires { get; set; }

        [Input("forceDestroy")]
        public Input<bool>? ForceDestroy { get; set; }

        [Input("grants")]
        private InputList<Inputs.ObjectCopyGrantArgs>? _grants;
        public InputList<Inputs.ObjectCopyGrantArgs> Grants
        {
            get => _grants ?? (_grants = new InputList<Inputs.ObjectCopyGrantArgs>());
            set => _grants = value;
        }

        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        [Input("kmsEncryptionContext")]
        private Input<string>? _kmsEncryptionContext;
        public Input<string>? KmsEncryptionContext
        {
            get => _kmsEncryptionContext;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _kmsEncryptionContext = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("kmsKeyId")]
        private Input<string>? _kmsKeyId;
        public Input<string>? KmsKeyId
        {
            get => _kmsKeyId;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _kmsKeyId = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("metadata")]
        private InputMap<string>? _metadata;
        public InputMap<string> Metadata
        {
            get => _metadata ?? (_metadata = new InputMap<string>());
            set => _metadata = value;
        }

        [Input("metadataDirective")]
        public Input<string>? MetadataDirective { get; set; }

        [Input("objectLockLegalHoldStatus")]
        public Input<string>? ObjectLockLegalHoldStatus { get; set; }

        [Input("objectLockMode")]
        public Input<string>? ObjectLockMode { get; set; }

        [Input("objectLockRetainUntilDate")]
        public Input<string>? ObjectLockRetainUntilDate { get; set; }

        [Input("requestPayer")]
        public Input<string>? RequestPayer { get; set; }

        [Input("serverSideEncryption")]
        public Input<string>? ServerSideEncryption { get; set; }

        [Input("source", required: true)]
        public Input<string> Source { get; set; } = null!;

        [Input("sourceCustomerAlgorithm")]
        public Input<string>? SourceCustomerAlgorithm { get; set; }

        [Input("sourceCustomerKey")]
        private Input<string>? _sourceCustomerKey;
        public Input<string>? SourceCustomerKey
        {
            get => _sourceCustomerKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _sourceCustomerKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("sourceCustomerKeyMd5")]
        public Input<string>? SourceCustomerKeyMd5 { get; set; }

        [Input("storageClass")]
        public Input<string>? StorageClass { get; set; }

        [Input("taggingDirective")]
        public Input<string>? TaggingDirective { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("websiteRedirect")]
        public Input<string>? WebsiteRedirect { get; set; }

        public ObjectCopyArgs()
        {
        }
        public static new ObjectCopyArgs Empty => new ObjectCopyArgs();
    }

    public sealed class ObjectCopyState : global::Pulumi.ResourceArgs
    {
        [Input("acl")]
        public Input<string>? Acl { get; set; }

        [Input("bucket")]
        public Input<string>? Bucket { get; set; }

        [Input("bucketKeyEnabled")]
        public Input<bool>? BucketKeyEnabled { get; set; }

        [Input("cacheControl")]
        public Input<string>? CacheControl { get; set; }

        [Input("contentDisposition")]
        public Input<string>? ContentDisposition { get; set; }

        [Input("contentEncoding")]
        public Input<string>? ContentEncoding { get; set; }

        [Input("contentLanguage")]
        public Input<string>? ContentLanguage { get; set; }

        [Input("contentType")]
        public Input<string>? ContentType { get; set; }

        [Input("copyIfMatch")]
        public Input<string>? CopyIfMatch { get; set; }

        [Input("copyIfModifiedSince")]
        public Input<string>? CopyIfModifiedSince { get; set; }

        [Input("copyIfNoneMatch")]
        public Input<string>? CopyIfNoneMatch { get; set; }

        [Input("copyIfUnmodifiedSince")]
        public Input<string>? CopyIfUnmodifiedSince { get; set; }

        [Input("customerAlgorithm")]
        public Input<string>? CustomerAlgorithm { get; set; }

        [Input("customerKey")]
        private Input<string>? _customerKey;
        public Input<string>? CustomerKey
        {
            get => _customerKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _customerKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("customerKeyMd5")]
        public Input<string>? CustomerKeyMd5 { get; set; }

        [Input("etag")]
        public Input<string>? Etag { get; set; }

        [Input("expectedBucketOwner")]
        public Input<string>? ExpectedBucketOwner { get; set; }

        [Input("expectedSourceBucketOwner")]
        public Input<string>? ExpectedSourceBucketOwner { get; set; }

        [Input("expiration")]
        public Input<string>? Expiration { get; set; }

        [Input("expires")]
        public Input<string>? Expires { get; set; }

        [Input("forceDestroy")]
        public Input<bool>? ForceDestroy { get; set; }

        [Input("grants")]
        private InputList<Inputs.ObjectCopyGrantGetArgs>? _grants;
        public InputList<Inputs.ObjectCopyGrantGetArgs> Grants
        {
            get => _grants ?? (_grants = new InputList<Inputs.ObjectCopyGrantGetArgs>());
            set => _grants = value;
        }

        [Input("key")]
        public Input<string>? Key { get; set; }

        [Input("kmsEncryptionContext")]
        private Input<string>? _kmsEncryptionContext;
        public Input<string>? KmsEncryptionContext
        {
            get => _kmsEncryptionContext;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _kmsEncryptionContext = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("kmsKeyId")]
        private Input<string>? _kmsKeyId;
        public Input<string>? KmsKeyId
        {
            get => _kmsKeyId;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _kmsKeyId = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("lastModified")]
        public Input<string>? LastModified { get; set; }

        [Input("metadata")]
        private InputMap<string>? _metadata;
        public InputMap<string> Metadata
        {
            get => _metadata ?? (_metadata = new InputMap<string>());
            set => _metadata = value;
        }

        [Input("metadataDirective")]
        public Input<string>? MetadataDirective { get; set; }

        [Input("objectLockLegalHoldStatus")]
        public Input<string>? ObjectLockLegalHoldStatus { get; set; }

        [Input("objectLockMode")]
        public Input<string>? ObjectLockMode { get; set; }

        [Input("objectLockRetainUntilDate")]
        public Input<string>? ObjectLockRetainUntilDate { get; set; }

        [Input("requestCharged")]
        public Input<bool>? RequestCharged { get; set; }

        [Input("requestPayer")]
        public Input<string>? RequestPayer { get; set; }

        [Input("serverSideEncryption")]
        public Input<string>? ServerSideEncryption { get; set; }

        [Input("source")]
        public Input<string>? Source { get; set; }

        [Input("sourceCustomerAlgorithm")]
        public Input<string>? SourceCustomerAlgorithm { get; set; }

        [Input("sourceCustomerKey")]
        private Input<string>? _sourceCustomerKey;
        public Input<string>? SourceCustomerKey
        {
            get => _sourceCustomerKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _sourceCustomerKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("sourceCustomerKeyMd5")]
        public Input<string>? SourceCustomerKeyMd5 { get; set; }

        [Input("sourceVersionId")]
        public Input<string>? SourceVersionId { get; set; }

        [Input("storageClass")]
        public Input<string>? StorageClass { get; set; }

        [Input("taggingDirective")]
        public Input<string>? TaggingDirective { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("versionId")]
        public Input<string>? VersionId { get; set; }

        [Input("websiteRedirect")]
        public Input<string>? WebsiteRedirect { get; set; }

        public ObjectCopyState()
        {
        }
        public static new ObjectCopyState Empty => new ObjectCopyState();
    }
}
