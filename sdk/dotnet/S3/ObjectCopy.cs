// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.S3
{
    /// <summary>
    /// Provides a resource for copying an S3 object.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var test = new Aws.S3.ObjectCopy("test", new()
    ///     {
    ///         Bucket = "destination_bucket",
    ///         Grants = new[]
    ///         {
    ///             new Aws.S3.Inputs.ObjectCopyGrantArgs
    ///             {
    ///                 Permissions = new[]
    ///                 {
    ///                     "READ",
    ///                 },
    ///                 Type = "Group",
    ///                 Uri = "http://acs.amazonaws.com/groups/global/AllUsers",
    ///             },
    ///         },
    ///         Key = "destination_key",
    ///         Source = "source_bucket/source_key",
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [AwsResourceType("aws:s3/objectCopy:ObjectCopy")]
    public partial class ObjectCopy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// [Canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) to apply. Defaults to `private`. Valid values are `private`, `public-read`, `public-read-write`, `authenticated-read`, `aws-exec-read`, `bucket-owner-read`, and `bucket-owner-full-control`. Conflicts with `grant`.
        /// </summary>
        [Output("acl")]
        public Output<string?> Acl { get; private set; } = null!;

        /// <summary>
        /// Name of the bucket to put the file in.
        /// </summary>
        [Output("bucket")]
        public Output<string> Bucket { get; private set; } = null!;

        [Output("bucketKeyEnabled")]
        public Output<bool> BucketKeyEnabled { get; private set; } = null!;

        /// <summary>
        /// Specifies caching behavior along the request/reply chain Read [w3c cache_control](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9) for further details.
        /// </summary>
        [Output("cacheControl")]
        public Output<string> CacheControl { get; private set; } = null!;

        /// <summary>
        /// Specifies presentational information for the object. Read [w3c content_disposition](http://www.w3.org/Protocols/rfc2616/rfc2616-sec19.html#sec19.5.1) for further information.
        /// </summary>
        [Output("contentDisposition")]
        public Output<string> ContentDisposition { get; private set; } = null!;

        /// <summary>
        /// Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field. Read [w3c content encoding](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.11) for further information.
        /// </summary>
        [Output("contentEncoding")]
        public Output<string> ContentEncoding { get; private set; } = null!;

        /// <summary>
        /// Language the content is in e.g., en-US or en-GB.
        /// </summary>
        [Output("contentLanguage")]
        public Output<string> ContentLanguage { get; private set; } = null!;

        /// <summary>
        /// Standard MIME type describing the format of the object data, e.g., `application/octet-stream`. All Valid MIME Types are valid for this input.
        /// </summary>
        [Output("contentType")]
        public Output<string> ContentType { get; private set; } = null!;

        /// <summary>
        /// Copies the object if its entity tag (ETag) matches the specified tag.
        /// </summary>
        [Output("copyIfMatch")]
        public Output<string?> CopyIfMatch { get; private set; } = null!;

        /// <summary>
        /// Copies the object if it has been modified since the specified time, in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).
        /// </summary>
        [Output("copyIfModifiedSince")]
        public Output<string?> CopyIfModifiedSince { get; private set; } = null!;

        /// <summary>
        /// Copies the object if its entity tag (ETag) is different than the specified ETag.
        /// </summary>
        [Output("copyIfNoneMatch")]
        public Output<string?> CopyIfNoneMatch { get; private set; } = null!;

        /// <summary>
        /// Copies the object if it hasn't been modified since the specified time, in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).
        /// </summary>
        [Output("copyIfUnmodifiedSince")]
        public Output<string?> CopyIfUnmodifiedSince { get; private set; } = null!;

        /// <summary>
        /// Specifies the algorithm to use to when encrypting the object (for example, AES256).
        /// </summary>
        [Output("customerAlgorithm")]
        public Output<string> CustomerAlgorithm { get; private set; } = null!;

        /// <summary>
        /// Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon S3 does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side-encryption-customer-algorithm header.
        /// </summary>
        [Output("customerKey")]
        public Output<string?> CustomerKey { get; private set; } = null!;

        /// <summary>
        /// Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.
        /// </summary>
        [Output("customerKeyMd5")]
        public Output<string> CustomerKeyMd5 { get; private set; } = null!;

        /// <summary>
        /// The ETag generated for the object (an MD5 sum of the object content). For plaintext objects or objects encrypted with an AWS-managed key, the hash is an MD5 digest of the object data. For objects encrypted with a KMS key or objects created by either the Multipart Upload or Part Copy operation, the hash is not an MD5 digest, regardless of the method of encryption. More information on possible values can be found on [Common Response Headers](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTCommonResponseHeaders.html).
        /// </summary>
        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        /// <summary>
        /// Account id of the expected destination bucket owner. If the destination bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
        /// </summary>
        [Output("expectedBucketOwner")]
        public Output<string?> ExpectedBucketOwner { get; private set; } = null!;

        /// <summary>
        /// Account id of the expected source bucket owner. If the source bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
        /// </summary>
        [Output("expectedSourceBucketOwner")]
        public Output<string?> ExpectedSourceBucketOwner { get; private set; } = null!;

        /// <summary>
        /// If the object expiration is configured, this attribute will be set.
        /// </summary>
        [Output("expiration")]
        public Output<string> Expiration { get; private set; } = null!;

        /// <summary>
        /// Date and time at which the object is no longer cacheable, in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).
        /// </summary>
        [Output("expires")]
        public Output<string?> Expires { get; private set; } = null!;

        /// <summary>
        /// Allow the object to be deleted by removing any legal hold on any object version. Default is `false`. This value should be set to `true` only if the bucket has S3 object lock enabled.
        /// </summary>
        [Output("forceDestroy")]
        public Output<bool?> ForceDestroy { get; private set; } = null!;

        /// <summary>
        /// Configuration block for header grants. Documented below. Conflicts with `acl`.
        /// </summary>
        [Output("grants")]
        public Output<ImmutableArray<Outputs.ObjectCopyGrant>> Grants { get; private set; } = null!;

        /// <summary>
        /// Name of the object once it is in the bucket.
        /// </summary>
        [Output("key")]
        public Output<string> Key { get; private set; } = null!;

        /// <summary>
        /// Specifies the AWS KMS Encryption Context to use for object encryption. The value is a base64-encoded UTF-8 string holding JSON with the encryption context key-value pairs.
        /// </summary>
        [Output("kmsEncryptionContext")]
        public Output<string> KmsEncryptionContext { get; private set; } = null!;

        /// <summary>
        /// Specifies the AWS KMS Key ARN to use for object encryption. This value is a fully qualified **ARN** of the KMS Key. If using `aws.kms.Key`, use the exported `arn` attribute: `kms_key_id = aws_kms_key.foo.arn`
        /// </summary>
        [Output("kmsKeyId")]
        public Output<string> KmsKeyId { get; private set; } = null!;

        /// <summary>
        /// Returns the date that the object was last modified, in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).
        /// </summary>
        [Output("lastModified")]
        public Output<string> LastModified { get; private set; } = null!;

        /// <summary>
        /// A map of keys/values to provision metadata (will be automatically prefixed by `x-amz-meta-`, note that only lowercase label are currently supported by the AWS Go API).
        /// </summary>
        [Output("metadata")]
        public Output<ImmutableDictionary<string, string>> Metadata { get; private set; } = null!;

        /// <summary>
        /// Specifies whether the metadata is copied from the source object or replaced with metadata provided in the request. Valid values are `COPY` and `REPLACE`.
        /// </summary>
        [Output("metadataDirective")]
        public Output<string?> MetadataDirective { get; private set; } = null!;

        /// <summary>
        /// The [legal hold](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html#object-lock-legal-holds) status that you want to apply to the specified object. Valid values are `ON` and `OFF`.
        /// </summary>
        [Output("objectLockLegalHoldStatus")]
        public Output<string> ObjectLockLegalHoldStatus { get; private set; } = null!;

        /// <summary>
        /// The object lock [retention mode](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html#object-lock-retention-modes) that you want to apply to this object. Valid values are `GOVERNANCE` and `COMPLIANCE`.
        /// </summary>
        [Output("objectLockMode")]
        public Output<string> ObjectLockMode { get; private set; } = null!;

        /// <summary>
        /// The date and time, in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8), when this object's object lock will [expire](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html#object-lock-retention-periods).
        /// </summary>
        [Output("objectLockRetainUntilDate")]
        public Output<string> ObjectLockRetainUntilDate { get; private set; } = null!;

        /// <summary>
        /// If present, indicates that the requester was successfully charged for the request.
        /// </summary>
        [Output("requestCharged")]
        public Output<bool> RequestCharged { get; private set; } = null!;

        /// <summary>
        /// Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from requester pays buckets, see Downloading Objects in Requestor Pays Buckets (https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html) in the Amazon S3 Developer Guide. If included, the only valid value is `requester`.
        /// </summary>
        [Output("requestPayer")]
        public Output<string?> RequestPayer { get; private set; } = null!;

        /// <summary>
        /// Specifies server-side encryption of the object in S3. Valid values are `AES256` and `aws:kms`.
        /// </summary>
        [Output("serverSideEncryption")]
        public Output<string> ServerSideEncryption { get; private set; } = null!;

        /// <summary>
        /// Specifies the source object for the copy operation. You specify the value in one of two formats. For objects not accessed through an access point, specify the name of the source bucket and the key of the source object, separated by a slash (`/`). For example, `testbucket/test1.json`. For objects accessed through access points, specify the Amazon Resource Name (ARN) of the object as accessed through the access point, in the format `arn:aws:s3:&lt;Region&gt;:&lt;account-id&gt;:accesspoint/&lt;access-point-name&gt;/object/&lt;key&gt;`. For example, `arn:aws:s3:us-west-2:9999912999:accesspoint/my-access-point/object/testbucket/test1.json`.
        /// </summary>
        [Output("source")]
        public Output<string> Source { get; private set; } = null!;

        /// <summary>
        /// Specifies the algorithm to use when decrypting the source object (for example, AES256).
        /// </summary>
        [Output("sourceCustomerAlgorithm")]
        public Output<string?> SourceCustomerAlgorithm { get; private set; } = null!;

        /// <summary>
        /// Specifies the customer-provided encryption key for Amazon S3 to use to decrypt the source object. The encryption key provided in this header must be one that was used when the source object was created.
        /// </summary>
        [Output("sourceCustomerKey")]
        public Output<string?> SourceCustomerKey { get; private set; } = null!;

        /// <summary>
        /// Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.
        /// </summary>
        [Output("sourceCustomerKeyMd5")]
        public Output<string?> SourceCustomerKeyMd5 { get; private set; } = null!;

        /// <summary>
        /// Version of the copied object in the source bucket.
        /// </summary>
        [Output("sourceVersionId")]
        public Output<string> SourceVersionId { get; private set; } = null!;

        /// <summary>
        /// Specifies the desired [storage class](https://docs.aws.amazon.com/AmazonS3/latest/API/API_CopyObject.html#AmazonS3-CopyObject-request-header-StorageClass) for the object. Defaults to `STANDARD`.
        /// </summary>
        [Output("storageClass")]
        public Output<string> StorageClass { get; private set; } = null!;

        /// <summary>
        /// Specifies whether the object tag-set are copied from the source object or replaced with tag-set provided in the request. Valid values are `COPY` and `REPLACE`.
        /// </summary>
        [Output("taggingDirective")]
        public Output<string?> TaggingDirective { get; private set; } = null!;

        /// <summary>
        /// A map of tags to assign to the object. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        /// <summary>
        /// Version ID of the newly created copy.
        /// </summary>
        [Output("versionId")]
        public Output<string> VersionId { get; private set; } = null!;

        /// <summary>
        /// Specifies a target URL for [website redirect](http://docs.aws.amazon.com/AmazonS3/latest/dev/how-to-page-redirect.html).
        /// </summary>
        [Output("websiteRedirect")]
        public Output<string> WebsiteRedirect { get; private set; } = null!;


        /// <summary>
        /// Create a ObjectCopy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ObjectCopy(string name, ObjectCopyArgs args, CustomResourceOptions? options = null)
            : base("aws:s3/objectCopy:ObjectCopy", name, args ?? new ObjectCopyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ObjectCopy(string name, Input<string> id, ObjectCopyState? state = null, CustomResourceOptions? options = null)
            : base("aws:s3/objectCopy:ObjectCopy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "customerKey",
                    "kmsEncryptionContext",
                    "kmsKeyId",
                    "sourceCustomerKey",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ObjectCopy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ObjectCopy Get(string name, Input<string> id, ObjectCopyState? state = null, CustomResourceOptions? options = null)
        {
            return new ObjectCopy(name, id, state, options);
        }
    }

    public sealed class ObjectCopyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// [Canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) to apply. Defaults to `private`. Valid values are `private`, `public-read`, `public-read-write`, `authenticated-read`, `aws-exec-read`, `bucket-owner-read`, and `bucket-owner-full-control`. Conflicts with `grant`.
        /// </summary>
        [Input("acl")]
        public Input<string>? Acl { get; set; }

        /// <summary>
        /// Name of the bucket to put the file in.
        /// </summary>
        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        [Input("bucketKeyEnabled")]
        public Input<bool>? BucketKeyEnabled { get; set; }

        /// <summary>
        /// Specifies caching behavior along the request/reply chain Read [w3c cache_control](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9) for further details.
        /// </summary>
        [Input("cacheControl")]
        public Input<string>? CacheControl { get; set; }

        /// <summary>
        /// Specifies presentational information for the object. Read [w3c content_disposition](http://www.w3.org/Protocols/rfc2616/rfc2616-sec19.html#sec19.5.1) for further information.
        /// </summary>
        [Input("contentDisposition")]
        public Input<string>? ContentDisposition { get; set; }

        /// <summary>
        /// Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field. Read [w3c content encoding](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.11) for further information.
        /// </summary>
        [Input("contentEncoding")]
        public Input<string>? ContentEncoding { get; set; }

        /// <summary>
        /// Language the content is in e.g., en-US or en-GB.
        /// </summary>
        [Input("contentLanguage")]
        public Input<string>? ContentLanguage { get; set; }

        /// <summary>
        /// Standard MIME type describing the format of the object data, e.g., `application/octet-stream`. All Valid MIME Types are valid for this input.
        /// </summary>
        [Input("contentType")]
        public Input<string>? ContentType { get; set; }

        /// <summary>
        /// Copies the object if its entity tag (ETag) matches the specified tag.
        /// </summary>
        [Input("copyIfMatch")]
        public Input<string>? CopyIfMatch { get; set; }

        /// <summary>
        /// Copies the object if it has been modified since the specified time, in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).
        /// </summary>
        [Input("copyIfModifiedSince")]
        public Input<string>? CopyIfModifiedSince { get; set; }

        /// <summary>
        /// Copies the object if its entity tag (ETag) is different than the specified ETag.
        /// </summary>
        [Input("copyIfNoneMatch")]
        public Input<string>? CopyIfNoneMatch { get; set; }

        /// <summary>
        /// Copies the object if it hasn't been modified since the specified time, in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).
        /// </summary>
        [Input("copyIfUnmodifiedSince")]
        public Input<string>? CopyIfUnmodifiedSince { get; set; }

        /// <summary>
        /// Specifies the algorithm to use to when encrypting the object (for example, AES256).
        /// </summary>
        [Input("customerAlgorithm")]
        public Input<string>? CustomerAlgorithm { get; set; }

        [Input("customerKey")]
        private Input<string>? _customerKey;

        /// <summary>
        /// Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon S3 does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side-encryption-customer-algorithm header.
        /// </summary>
        public Input<string>? CustomerKey
        {
            get => _customerKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _customerKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.
        /// </summary>
        [Input("customerKeyMd5")]
        public Input<string>? CustomerKeyMd5 { get; set; }

        /// <summary>
        /// Account id of the expected destination bucket owner. If the destination bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
        /// </summary>
        [Input("expectedBucketOwner")]
        public Input<string>? ExpectedBucketOwner { get; set; }

        /// <summary>
        /// Account id of the expected source bucket owner. If the source bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
        /// </summary>
        [Input("expectedSourceBucketOwner")]
        public Input<string>? ExpectedSourceBucketOwner { get; set; }

        /// <summary>
        /// Date and time at which the object is no longer cacheable, in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).
        /// </summary>
        [Input("expires")]
        public Input<string>? Expires { get; set; }

        /// <summary>
        /// Allow the object to be deleted by removing any legal hold on any object version. Default is `false`. This value should be set to `true` only if the bucket has S3 object lock enabled.
        /// </summary>
        [Input("forceDestroy")]
        public Input<bool>? ForceDestroy { get; set; }

        [Input("grants")]
        private InputList<Inputs.ObjectCopyGrantArgs>? _grants;

        /// <summary>
        /// Configuration block for header grants. Documented below. Conflicts with `acl`.
        /// </summary>
        public InputList<Inputs.ObjectCopyGrantArgs> Grants
        {
            get => _grants ?? (_grants = new InputList<Inputs.ObjectCopyGrantArgs>());
            set => _grants = value;
        }

        /// <summary>
        /// Name of the object once it is in the bucket.
        /// </summary>
        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        [Input("kmsEncryptionContext")]
        private Input<string>? _kmsEncryptionContext;

        /// <summary>
        /// Specifies the AWS KMS Encryption Context to use for object encryption. The value is a base64-encoded UTF-8 string holding JSON with the encryption context key-value pairs.
        /// </summary>
        public Input<string>? KmsEncryptionContext
        {
            get => _kmsEncryptionContext;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _kmsEncryptionContext = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("kmsKeyId")]
        private Input<string>? _kmsKeyId;

        /// <summary>
        /// Specifies the AWS KMS Key ARN to use for object encryption. This value is a fully qualified **ARN** of the KMS Key. If using `aws.kms.Key`, use the exported `arn` attribute: `kms_key_id = aws_kms_key.foo.arn`
        /// </summary>
        public Input<string>? KmsKeyId
        {
            get => _kmsKeyId;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _kmsKeyId = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("metadata")]
        private InputMap<string>? _metadata;

        /// <summary>
        /// A map of keys/values to provision metadata (will be automatically prefixed by `x-amz-meta-`, note that only lowercase label are currently supported by the AWS Go API).
        /// </summary>
        public InputMap<string> Metadata
        {
            get => _metadata ?? (_metadata = new InputMap<string>());
            set => _metadata = value;
        }

        /// <summary>
        /// Specifies whether the metadata is copied from the source object or replaced with metadata provided in the request. Valid values are `COPY` and `REPLACE`.
        /// </summary>
        [Input("metadataDirective")]
        public Input<string>? MetadataDirective { get; set; }

        /// <summary>
        /// The [legal hold](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html#object-lock-legal-holds) status that you want to apply to the specified object. Valid values are `ON` and `OFF`.
        /// </summary>
        [Input("objectLockLegalHoldStatus")]
        public Input<string>? ObjectLockLegalHoldStatus { get; set; }

        /// <summary>
        /// The object lock [retention mode](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html#object-lock-retention-modes) that you want to apply to this object. Valid values are `GOVERNANCE` and `COMPLIANCE`.
        /// </summary>
        [Input("objectLockMode")]
        public Input<string>? ObjectLockMode { get; set; }

        /// <summary>
        /// The date and time, in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8), when this object's object lock will [expire](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html#object-lock-retention-periods).
        /// </summary>
        [Input("objectLockRetainUntilDate")]
        public Input<string>? ObjectLockRetainUntilDate { get; set; }

        /// <summary>
        /// Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from requester pays buckets, see Downloading Objects in Requestor Pays Buckets (https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html) in the Amazon S3 Developer Guide. If included, the only valid value is `requester`.
        /// </summary>
        [Input("requestPayer")]
        public Input<string>? RequestPayer { get; set; }

        /// <summary>
        /// Specifies server-side encryption of the object in S3. Valid values are `AES256` and `aws:kms`.
        /// </summary>
        [Input("serverSideEncryption")]
        public Input<string>? ServerSideEncryption { get; set; }

        /// <summary>
        /// Specifies the source object for the copy operation. You specify the value in one of two formats. For objects not accessed through an access point, specify the name of the source bucket and the key of the source object, separated by a slash (`/`). For example, `testbucket/test1.json`. For objects accessed through access points, specify the Amazon Resource Name (ARN) of the object as accessed through the access point, in the format `arn:aws:s3:&lt;Region&gt;:&lt;account-id&gt;:accesspoint/&lt;access-point-name&gt;/object/&lt;key&gt;`. For example, `arn:aws:s3:us-west-2:9999912999:accesspoint/my-access-point/object/testbucket/test1.json`.
        /// </summary>
        [Input("source", required: true)]
        public Input<string> Source { get; set; } = null!;

        /// <summary>
        /// Specifies the algorithm to use when decrypting the source object (for example, AES256).
        /// </summary>
        [Input("sourceCustomerAlgorithm")]
        public Input<string>? SourceCustomerAlgorithm { get; set; }

        [Input("sourceCustomerKey")]
        private Input<string>? _sourceCustomerKey;

        /// <summary>
        /// Specifies the customer-provided encryption key for Amazon S3 to use to decrypt the source object. The encryption key provided in this header must be one that was used when the source object was created.
        /// </summary>
        public Input<string>? SourceCustomerKey
        {
            get => _sourceCustomerKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _sourceCustomerKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.
        /// </summary>
        [Input("sourceCustomerKeyMd5")]
        public Input<string>? SourceCustomerKeyMd5 { get; set; }

        /// <summary>
        /// Specifies the desired [storage class](https://docs.aws.amazon.com/AmazonS3/latest/API/API_CopyObject.html#AmazonS3-CopyObject-request-header-StorageClass) for the object. Defaults to `STANDARD`.
        /// </summary>
        [Input("storageClass")]
        public Input<string>? StorageClass { get; set; }

        /// <summary>
        /// Specifies whether the object tag-set are copied from the source object or replaced with tag-set provided in the request. Valid values are `COPY` and `REPLACE`.
        /// </summary>
        [Input("taggingDirective")]
        public Input<string>? TaggingDirective { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the object. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Specifies a target URL for [website redirect](http://docs.aws.amazon.com/AmazonS3/latest/dev/how-to-page-redirect.html).
        /// </summary>
        [Input("websiteRedirect")]
        public Input<string>? WebsiteRedirect { get; set; }

        public ObjectCopyArgs()
        {
        }
        public static new ObjectCopyArgs Empty => new ObjectCopyArgs();
    }

    public sealed class ObjectCopyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// [Canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) to apply. Defaults to `private`. Valid values are `private`, `public-read`, `public-read-write`, `authenticated-read`, `aws-exec-read`, `bucket-owner-read`, and `bucket-owner-full-control`. Conflicts with `grant`.
        /// </summary>
        [Input("acl")]
        public Input<string>? Acl { get; set; }

        /// <summary>
        /// Name of the bucket to put the file in.
        /// </summary>
        [Input("bucket")]
        public Input<string>? Bucket { get; set; }

        [Input("bucketKeyEnabled")]
        public Input<bool>? BucketKeyEnabled { get; set; }

        /// <summary>
        /// Specifies caching behavior along the request/reply chain Read [w3c cache_control](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9) for further details.
        /// </summary>
        [Input("cacheControl")]
        public Input<string>? CacheControl { get; set; }

        /// <summary>
        /// Specifies presentational information for the object. Read [w3c content_disposition](http://www.w3.org/Protocols/rfc2616/rfc2616-sec19.html#sec19.5.1) for further information.
        /// </summary>
        [Input("contentDisposition")]
        public Input<string>? ContentDisposition { get; set; }

        /// <summary>
        /// Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field. Read [w3c content encoding](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.11) for further information.
        /// </summary>
        [Input("contentEncoding")]
        public Input<string>? ContentEncoding { get; set; }

        /// <summary>
        /// Language the content is in e.g., en-US or en-GB.
        /// </summary>
        [Input("contentLanguage")]
        public Input<string>? ContentLanguage { get; set; }

        /// <summary>
        /// Standard MIME type describing the format of the object data, e.g., `application/octet-stream`. All Valid MIME Types are valid for this input.
        /// </summary>
        [Input("contentType")]
        public Input<string>? ContentType { get; set; }

        /// <summary>
        /// Copies the object if its entity tag (ETag) matches the specified tag.
        /// </summary>
        [Input("copyIfMatch")]
        public Input<string>? CopyIfMatch { get; set; }

        /// <summary>
        /// Copies the object if it has been modified since the specified time, in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).
        /// </summary>
        [Input("copyIfModifiedSince")]
        public Input<string>? CopyIfModifiedSince { get; set; }

        /// <summary>
        /// Copies the object if its entity tag (ETag) is different than the specified ETag.
        /// </summary>
        [Input("copyIfNoneMatch")]
        public Input<string>? CopyIfNoneMatch { get; set; }

        /// <summary>
        /// Copies the object if it hasn't been modified since the specified time, in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).
        /// </summary>
        [Input("copyIfUnmodifiedSince")]
        public Input<string>? CopyIfUnmodifiedSince { get; set; }

        /// <summary>
        /// Specifies the algorithm to use to when encrypting the object (for example, AES256).
        /// </summary>
        [Input("customerAlgorithm")]
        public Input<string>? CustomerAlgorithm { get; set; }

        [Input("customerKey")]
        private Input<string>? _customerKey;

        /// <summary>
        /// Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon S3 does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side-encryption-customer-algorithm header.
        /// </summary>
        public Input<string>? CustomerKey
        {
            get => _customerKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _customerKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.
        /// </summary>
        [Input("customerKeyMd5")]
        public Input<string>? CustomerKeyMd5 { get; set; }

        /// <summary>
        /// The ETag generated for the object (an MD5 sum of the object content). For plaintext objects or objects encrypted with an AWS-managed key, the hash is an MD5 digest of the object data. For objects encrypted with a KMS key or objects created by either the Multipart Upload or Part Copy operation, the hash is not an MD5 digest, regardless of the method of encryption. More information on possible values can be found on [Common Response Headers](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTCommonResponseHeaders.html).
        /// </summary>
        [Input("etag")]
        public Input<string>? Etag { get; set; }

        /// <summary>
        /// Account id of the expected destination bucket owner. If the destination bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
        /// </summary>
        [Input("expectedBucketOwner")]
        public Input<string>? ExpectedBucketOwner { get; set; }

        /// <summary>
        /// Account id of the expected source bucket owner. If the source bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
        /// </summary>
        [Input("expectedSourceBucketOwner")]
        public Input<string>? ExpectedSourceBucketOwner { get; set; }

        /// <summary>
        /// If the object expiration is configured, this attribute will be set.
        /// </summary>
        [Input("expiration")]
        public Input<string>? Expiration { get; set; }

        /// <summary>
        /// Date and time at which the object is no longer cacheable, in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).
        /// </summary>
        [Input("expires")]
        public Input<string>? Expires { get; set; }

        /// <summary>
        /// Allow the object to be deleted by removing any legal hold on any object version. Default is `false`. This value should be set to `true` only if the bucket has S3 object lock enabled.
        /// </summary>
        [Input("forceDestroy")]
        public Input<bool>? ForceDestroy { get; set; }

        [Input("grants")]
        private InputList<Inputs.ObjectCopyGrantGetArgs>? _grants;

        /// <summary>
        /// Configuration block for header grants. Documented below. Conflicts with `acl`.
        /// </summary>
        public InputList<Inputs.ObjectCopyGrantGetArgs> Grants
        {
            get => _grants ?? (_grants = new InputList<Inputs.ObjectCopyGrantGetArgs>());
            set => _grants = value;
        }

        /// <summary>
        /// Name of the object once it is in the bucket.
        /// </summary>
        [Input("key")]
        public Input<string>? Key { get; set; }

        [Input("kmsEncryptionContext")]
        private Input<string>? _kmsEncryptionContext;

        /// <summary>
        /// Specifies the AWS KMS Encryption Context to use for object encryption. The value is a base64-encoded UTF-8 string holding JSON with the encryption context key-value pairs.
        /// </summary>
        public Input<string>? KmsEncryptionContext
        {
            get => _kmsEncryptionContext;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _kmsEncryptionContext = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("kmsKeyId")]
        private Input<string>? _kmsKeyId;

        /// <summary>
        /// Specifies the AWS KMS Key ARN to use for object encryption. This value is a fully qualified **ARN** of the KMS Key. If using `aws.kms.Key`, use the exported `arn` attribute: `kms_key_id = aws_kms_key.foo.arn`
        /// </summary>
        public Input<string>? KmsKeyId
        {
            get => _kmsKeyId;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _kmsKeyId = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Returns the date that the object was last modified, in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).
        /// </summary>
        [Input("lastModified")]
        public Input<string>? LastModified { get; set; }

        [Input("metadata")]
        private InputMap<string>? _metadata;

        /// <summary>
        /// A map of keys/values to provision metadata (will be automatically prefixed by `x-amz-meta-`, note that only lowercase label are currently supported by the AWS Go API).
        /// </summary>
        public InputMap<string> Metadata
        {
            get => _metadata ?? (_metadata = new InputMap<string>());
            set => _metadata = value;
        }

        /// <summary>
        /// Specifies whether the metadata is copied from the source object or replaced with metadata provided in the request. Valid values are `COPY` and `REPLACE`.
        /// </summary>
        [Input("metadataDirective")]
        public Input<string>? MetadataDirective { get; set; }

        /// <summary>
        /// The [legal hold](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html#object-lock-legal-holds) status that you want to apply to the specified object. Valid values are `ON` and `OFF`.
        /// </summary>
        [Input("objectLockLegalHoldStatus")]
        public Input<string>? ObjectLockLegalHoldStatus { get; set; }

        /// <summary>
        /// The object lock [retention mode](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html#object-lock-retention-modes) that you want to apply to this object. Valid values are `GOVERNANCE` and `COMPLIANCE`.
        /// </summary>
        [Input("objectLockMode")]
        public Input<string>? ObjectLockMode { get; set; }

        /// <summary>
        /// The date and time, in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8), when this object's object lock will [expire](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html#object-lock-retention-periods).
        /// </summary>
        [Input("objectLockRetainUntilDate")]
        public Input<string>? ObjectLockRetainUntilDate { get; set; }

        /// <summary>
        /// If present, indicates that the requester was successfully charged for the request.
        /// </summary>
        [Input("requestCharged")]
        public Input<bool>? RequestCharged { get; set; }

        /// <summary>
        /// Confirms that the requester knows that they will be charged for the request. Bucket owners need not specify this parameter in their requests. For information about downloading objects from requester pays buckets, see Downloading Objects in Requestor Pays Buckets (https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html) in the Amazon S3 Developer Guide. If included, the only valid value is `requester`.
        /// </summary>
        [Input("requestPayer")]
        public Input<string>? RequestPayer { get; set; }

        /// <summary>
        /// Specifies server-side encryption of the object in S3. Valid values are `AES256` and `aws:kms`.
        /// </summary>
        [Input("serverSideEncryption")]
        public Input<string>? ServerSideEncryption { get; set; }

        /// <summary>
        /// Specifies the source object for the copy operation. You specify the value in one of two formats. For objects not accessed through an access point, specify the name of the source bucket and the key of the source object, separated by a slash (`/`). For example, `testbucket/test1.json`. For objects accessed through access points, specify the Amazon Resource Name (ARN) of the object as accessed through the access point, in the format `arn:aws:s3:&lt;Region&gt;:&lt;account-id&gt;:accesspoint/&lt;access-point-name&gt;/object/&lt;key&gt;`. For example, `arn:aws:s3:us-west-2:9999912999:accesspoint/my-access-point/object/testbucket/test1.json`.
        /// </summary>
        [Input("source")]
        public Input<string>? Source { get; set; }

        /// <summary>
        /// Specifies the algorithm to use when decrypting the source object (for example, AES256).
        /// </summary>
        [Input("sourceCustomerAlgorithm")]
        public Input<string>? SourceCustomerAlgorithm { get; set; }

        [Input("sourceCustomerKey")]
        private Input<string>? _sourceCustomerKey;

        /// <summary>
        /// Specifies the customer-provided encryption key for Amazon S3 to use to decrypt the source object. The encryption key provided in this header must be one that was used when the source object was created.
        /// </summary>
        public Input<string>? SourceCustomerKey
        {
            get => _sourceCustomerKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _sourceCustomerKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.
        /// </summary>
        [Input("sourceCustomerKeyMd5")]
        public Input<string>? SourceCustomerKeyMd5 { get; set; }

        /// <summary>
        /// Version of the copied object in the source bucket.
        /// </summary>
        [Input("sourceVersionId")]
        public Input<string>? SourceVersionId { get; set; }

        /// <summary>
        /// Specifies the desired [storage class](https://docs.aws.amazon.com/AmazonS3/latest/API/API_CopyObject.html#AmazonS3-CopyObject-request-header-StorageClass) for the object. Defaults to `STANDARD`.
        /// </summary>
        [Input("storageClass")]
        public Input<string>? StorageClass { get; set; }

        /// <summary>
        /// Specifies whether the object tag-set are copied from the source object or replaced with tag-set provided in the request. Valid values are `COPY` and `REPLACE`.
        /// </summary>
        [Input("taggingDirective")]
        public Input<string>? TaggingDirective { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the object. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        /// <summary>
        /// Version ID of the newly created copy.
        /// </summary>
        [Input("versionId")]
        public Input<string>? VersionId { get; set; }

        /// <summary>
        /// Specifies a target URL for [website redirect](http://docs.aws.amazon.com/AmazonS3/latest/dev/how-to-page-redirect.html).
        /// </summary>
        [Input("websiteRedirect")]
        public Input<string>? WebsiteRedirect { get; set; }

        public ObjectCopyState()
        {
        }
        public static new ObjectCopyState Empty => new ObjectCopyState();
    }
}
