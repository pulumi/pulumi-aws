// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.S3
{
    /// <summary>
    /// Provides a resource for controlling versioning on an S3 bucket.
    /// Deleting this resource will either suspend versioning on the associated S3 bucket or
    /// simply remove the resource from state if the associated S3 bucket is unversioned.
    /// 
    /// For more information, see [How S3 versioning works](https://docs.aws.amazon.com/AmazonS3/latest/userguide/manage-versioning-examples.html).
    /// 
    /// &gt; **NOTE:** If you are enabling versioning on the bucket for the first time, AWS recommends that you wait for 15 minutes after enabling versioning before issuing write operations (PUT or DELETE) on objects in the bucket.
    /// 
    /// ## Example Usage
    /// ### With Versioning Enabled
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleBucketV2 = new Aws.S3.BucketV2("exampleBucketV2");
    /// 
    ///     var exampleBucketAclV2 = new Aws.S3.BucketAclV2("exampleBucketAclV2", new()
    ///     {
    ///         Bucket = exampleBucketV2.Id,
    ///         Acl = "private",
    ///     });
    /// 
    ///     var versioningExample = new Aws.S3.BucketVersioningV2("versioningExample", new()
    ///     {
    ///         Bucket = exampleBucketV2.Id,
    ///         VersioningConfiguration = new Aws.S3.Inputs.BucketVersioningV2VersioningConfigurationArgs
    ///         {
    ///             Status = "Enabled",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### With Versioning Disabled
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleBucketV2 = new Aws.S3.BucketV2("exampleBucketV2");
    /// 
    ///     var exampleBucketAclV2 = new Aws.S3.BucketAclV2("exampleBucketAclV2", new()
    ///     {
    ///         Bucket = exampleBucketV2.Id,
    ///         Acl = "private",
    ///     });
    /// 
    ///     var versioningExample = new Aws.S3.BucketVersioningV2("versioningExample", new()
    ///     {
    ///         Bucket = exampleBucketV2.Id,
    ///         VersioningConfiguration = new Aws.S3.Inputs.BucketVersioningV2VersioningConfigurationArgs
    ///         {
    ///             Status = "Disabled",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### Object Dependency On Versioning
    /// 
    /// When you create an object whose `version_id` you need and an `aws.s3.BucketVersioningV2` resource in the same configuration, you are more likely to have success by ensuring the `s3_object` depends either implicitly (see below) or explicitly (i.e., using `depends_on = [aws_s3_bucket_versioning.example]`) on the `aws.s3.BucketVersioningV2` resource.
    /// 
    /// &gt; **NOTE:** For critical and/or production S3 objects, do not create a bucket, enable versioning, and create an object in the bucket within the same configuration. Doing so will not allow the AWS-recommended 15 minutes between enabling versioning and writing to the bucket.
    /// 
    /// This example shows the `aws_s3_object.example` depending implicitly on the versioning resource through the reference to `aws_s3_bucket_versioning.example.bucket` to define `bucket`:
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleBucketV2 = new Aws.S3.BucketV2("exampleBucketV2");
    /// 
    ///     var exampleBucketVersioningV2 = new Aws.S3.BucketVersioningV2("exampleBucketVersioningV2", new()
    ///     {
    ///         Bucket = exampleBucketV2.Id,
    ///         VersioningConfiguration = new Aws.S3.Inputs.BucketVersioningV2VersioningConfigurationArgs
    ///         {
    ///             Status = "Enabled",
    ///         },
    ///     });
    /// 
    ///     var exampleBucketObjectv2 = new Aws.S3.BucketObjectv2("exampleBucketObjectv2", new()
    ///     {
    ///         Bucket = exampleBucketVersioningV2.Id,
    ///         Key = "droeloe",
    ///         Source = new FileAsset("example.txt"),
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// If the owner (account ID) of the source bucket is the same account used to configure the AWS Provider, import using the `bucket`:
    /// 
    /// If the owner (account ID) of the source bucket differs from the account used to configure the AWS Provider, import using the `bucket` and `expected_bucket_owner` separated by a comma (`,`):
    /// 
    /// __Using `pulumi import` to import__ S3 bucket versioning using the `bucket` or using the `bucket` and `expected_bucket_owner` separated by a comma (`,`). For example:
    /// 
    /// If the owner (account ID) of the source bucket is the same account used to configure the AWS Provider, import using the `bucket`:
    /// 
    /// ```sh
    ///  $ pulumi import aws:s3/bucketVersioningV2:BucketVersioningV2 example bucket-name
    /// ```
    ///  If the owner (account ID) of the source bucket differs from the account used to configure the AWS Provider, import using the `bucket` and `expected_bucket_owner` separated by a comma (`,`):
    /// 
    /// ```sh
    ///  $ pulumi import aws:s3/bucketVersioningV2:BucketVersioningV2 example bucket-name,123456789012
    /// ```
    /// </summary>
    [AwsResourceType("aws:s3/bucketVersioningV2:BucketVersioningV2")]
    public partial class BucketVersioningV2 : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Name of the S3 bucket.
        /// </summary>
        [Output("bucket")]
        public Output<string> Bucket { get; private set; } = null!;

        /// <summary>
        /// Account ID of the expected bucket owner.
        /// </summary>
        [Output("expectedBucketOwner")]
        public Output<string?> ExpectedBucketOwner { get; private set; } = null!;

        /// <summary>
        /// Concatenation of the authentication device's serial number, a space, and the value that is displayed on your authentication device.
        /// </summary>
        [Output("mfa")]
        public Output<string?> Mfa { get; private set; } = null!;

        /// <summary>
        /// Configuration block for the versioning parameters. See below.
        /// </summary>
        [Output("versioningConfiguration")]
        public Output<Outputs.BucketVersioningV2VersioningConfiguration> VersioningConfiguration { get; private set; } = null!;


        /// <summary>
        /// Create a BucketVersioningV2 resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BucketVersioningV2(string name, BucketVersioningV2Args args, CustomResourceOptions? options = null)
            : base("aws:s3/bucketVersioningV2:BucketVersioningV2", name, args ?? new BucketVersioningV2Args(), MakeResourceOptions(options, ""))
        {
        }

        private BucketVersioningV2(string name, Input<string> id, BucketVersioningV2State? state = null, CustomResourceOptions? options = null)
            : base("aws:s3/bucketVersioningV2:BucketVersioningV2", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BucketVersioningV2 resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BucketVersioningV2 Get(string name, Input<string> id, BucketVersioningV2State? state = null, CustomResourceOptions? options = null)
        {
            return new BucketVersioningV2(name, id, state, options);
        }
    }

    public sealed class BucketVersioningV2Args : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the S3 bucket.
        /// </summary>
        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        /// <summary>
        /// Account ID of the expected bucket owner.
        /// </summary>
        [Input("expectedBucketOwner")]
        public Input<string>? ExpectedBucketOwner { get; set; }

        /// <summary>
        /// Concatenation of the authentication device's serial number, a space, and the value that is displayed on your authentication device.
        /// </summary>
        [Input("mfa")]
        public Input<string>? Mfa { get; set; }

        /// <summary>
        /// Configuration block for the versioning parameters. See below.
        /// </summary>
        [Input("versioningConfiguration", required: true)]
        public Input<Inputs.BucketVersioningV2VersioningConfigurationArgs> VersioningConfiguration { get; set; } = null!;

        public BucketVersioningV2Args()
        {
        }
        public static new BucketVersioningV2Args Empty => new BucketVersioningV2Args();
    }

    public sealed class BucketVersioningV2State : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the S3 bucket.
        /// </summary>
        [Input("bucket")]
        public Input<string>? Bucket { get; set; }

        /// <summary>
        /// Account ID of the expected bucket owner.
        /// </summary>
        [Input("expectedBucketOwner")]
        public Input<string>? ExpectedBucketOwner { get; set; }

        /// <summary>
        /// Concatenation of the authentication device's serial number, a space, and the value that is displayed on your authentication device.
        /// </summary>
        [Input("mfa")]
        public Input<string>? Mfa { get; set; }

        /// <summary>
        /// Configuration block for the versioning parameters. See below.
        /// </summary>
        [Input("versioningConfiguration")]
        public Input<Inputs.BucketVersioningV2VersioningConfigurationGetArgs>? VersioningConfiguration { get; set; }

        public BucketVersioningV2State()
        {
        }
        public static new BucketVersioningV2State Empty => new BucketVersioningV2State();
    }
}
