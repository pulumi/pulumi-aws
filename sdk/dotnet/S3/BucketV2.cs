// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.S3
{
    /// <summary>
    /// Provides a S3 bucket resource.
    /// 
    /// &gt; This functionality is for managing S3 in an AWS Partition. To manage [S3 on Outposts](https://docs.aws.amazon.com/AmazonS3/latest/dev/S3onOutposts.html), see the `aws.s3control.Bucket` resource.
    /// 
    /// &gt; In April 2023, [AWS introduced](https://aws.amazon.com/about-aws/whats-new/2022/12/amazon-s3-automatically-enable-block-public-access-disable-access-control-lists-buckets-april-2023/) updated security defaults for new S3 buckets. See this issue for a information on how this affects the `aws.s3.BucketV2` resource.
    /// 
    /// ## Example Usage
    /// ### Private Bucket With Tags
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.S3.BucketV2("example", new()
    ///     {
    ///         Tags = 
    ///         {
    ///             { "Environment", "Dev" },
    ///             { "Name", "My bucket" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### Static Website Hosting
    /// 
    /// &gt; **NOTE:** The `website` attribute is deprecated.
    /// See `aws.s3.BucketWebsiteConfigurationV2` for examples with static website hosting configured.
    /// 
    /// ### CORS Rules
    /// 
    /// &gt; **NOTE:** The `cors_rule` attribute is deprecated.
    /// See `aws.s3.BucketCorsConfigurationV2` for examples with CORS rules configured.
    /// 
    /// ### Versioning
    /// 
    /// &gt; **NOTE:** The `versioning` attribute is deprecated.
    /// See `aws.s3.BucketVersioningV2` for examples with versioning configured.
    /// 
    /// ### Logging
    /// 
    /// &gt; **NOTE:** The `logging` attribute is deprecated.
    /// See `aws.s3.BucketLoggingV2` for examples with logging enabled.
    /// 
    /// ### Object Lifecycle Rules
    /// 
    /// &gt; **NOTE:** The `lifecycle_rule` attribute is deprecated.
    /// See `aws.s3.BucketLifecycleConfigurationV2` for examples with object lifecycle rules.
    /// 
    /// ### Object Lock Configuration
    /// 
    /// &gt; **NOTE:** The `object_lock_configuration` attribute is deprecated.
    /// See `aws.s3.BucketObjectLockConfigurationV2` for examples with object lock configurations on both new and existing buckets.
    /// 
    /// ### Replication Configuration
    /// 
    /// &gt; **NOTE:** The `replication_configuration` attribute is deprecated.
    /// See `aws.s3.BucketReplicationConfig` for examples with replication configured.
    /// 
    /// ### Enable SSE-KMS Server Side Encryption
    /// 
    /// &gt; **NOTE:** The `server_side_encryption_configuration` attribute is deprecated.
    /// See `aws.s3.BucketServerSideEncryptionConfigurationV2` for examples with server side encryption configured.
    /// 
    /// ### ACL Policy Grants
    /// 
    /// &gt; **NOTE:** The `acl` and `grant` attributes are deprecated.
    /// See `aws.s3.BucketAclV2` for examples with ACL grants.
    /// 
    /// ## Import
    /// 
    /// terraform import {
    /// 
    ///  to = aws_s3_bucket.bucket
    /// 
    ///  id = "bucket-name" } Using `pulumi import`, import S3 bucket using the `bucket`. For exampleconsole % pulumi import aws_s3_bucket.bucket bucket-name
    /// </summary>
    [AwsResourceType("aws:s3/bucketV2:BucketV2")]
    public partial class BucketV2 : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Sets the accelerate configuration of an existing bucket. Can be `Enabled` or `Suspended`. Cannot be used in `cn-north-1` or `us-gov-west-1`. This provider will only perform drift detection if a configuration value is provided.
        /// Use the resource `aws.s3.BucketAccelerateConfigurationV2` instead.
        /// </summary>
        [Output("accelerationStatus")]
        public Output<string> AccelerationStatus { get; private set; } = null!;

        /// <summary>
        /// The [canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) to apply. Valid values are `private`, `public-read`, `public-read-write`, `aws-exec-read`, `authenticated-read`, and `log-delivery-write`. Defaults to `private`.  Conflicts with `grant`. The provider will only perform drift detection if a configuration value is provided. Use the resource `aws.s3.BucketAclV2` instead.
        /// </summary>
        [Output("acl")]
        public Output<string> Acl { get; private set; } = null!;

        /// <summary>
        /// ARN of the bucket. Will be of format `arn:aws:s3:::bucketname`.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// Name of the bucket. If omitted, the provider will assign a random, unique name. Must be lowercase and less than or equal to 63 characters in length. A full list of bucket naming rules [may be found here](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html).
        /// </summary>
        [Output("bucket")]
        public Output<string> Bucket { get; private set; } = null!;

        /// <summary>
        /// Bucket domain name. Will be of format `bucketname.s3.amazonaws.com`.
        /// </summary>
        [Output("bucketDomainName")]
        public Output<string> BucketDomainName { get; private set; } = null!;

        /// <summary>
        /// Creates a unique bucket name beginning with the specified prefix. Conflicts with `bucket`. Must be lowercase and less than or equal to 37 characters in length. A full list of bucket naming rules [may be found here](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html).
        /// </summary>
        [Output("bucketPrefix")]
        public Output<string> BucketPrefix { get; private set; } = null!;

        /// <summary>
        /// The bucket region-specific domain name. The bucket domain name including the region name. Please refer to the [S3 endpoints reference](https://docs.aws.amazon.com/general/latest/gr/s3.html#s3_region) for format. Note: AWS CloudFront allows specifying an S3 region-specific endpoint when creating an S3 origin. This will prevent redirect issues from CloudFront to the S3 Origin URL. For more information, see the [Virtual Hosted-Style Requests for Other Regions](https://docs.aws.amazon.com/AmazonS3/latest/userguide/VirtualHosting.html#deprecated-global-endpoint) section in the AWS S3 User Guide.
        /// </summary>
        [Output("bucketRegionalDomainName")]
        public Output<string> BucketRegionalDomainName { get; private set; } = null!;

        /// <summary>
        /// Rule of [Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html). See CORS rule below for details. This provider will only perform drift detection if a configuration value is provided. Use the resource `aws.s3.BucketCorsConfigurationV2` instead.
        /// </summary>
        [Output("corsRules")]
        public Output<ImmutableArray<Outputs.BucketV2CorsRule>> CorsRules { get; private set; } = null!;

        /// <summary>
        /// Boolean that indicates all objects (including any [locked objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html)) should be deleted from the bucket *when the bucket is destroyed* so that the bucket can be destroyed without error. These objects are *not* recoverable. This only deletes objects when the bucket is destroyed, *not* when setting this parameter to `true`. Once this parameter is set to `true`, there must be a successful `pulumi up` run before a destroy is required to update this value in the resource state. Without a successful `pulumi up` after this parameter is set, this flag will have no effect. If setting this field in the same operation that would require replacing the bucket or destroying the bucket, this flag will not work. Additionally when importing a bucket, a successful `pulumi up` is required to set this value in state before it will take effect on a destroy operation.
        /// </summary>
        [Output("forceDestroy")]
        public Output<bool?> ForceDestroy { get; private set; } = null!;

        /// <summary>
        /// An [ACL policy grant](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#sample-acl). See Grant below for details. Conflicts with `acl`. The provider will only perform drift detection if a configuration value is provided. Use the resource `aws.s3.BucketAclV2` instead.
        /// </summary>
        [Output("grants")]
        public Output<ImmutableArray<Outputs.BucketV2Grant>> Grants { get; private set; } = null!;

        /// <summary>
        /// [Route 53 Hosted Zone ID](https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_website_region_endpoints) for this bucket's region.
        /// </summary>
        [Output("hostedZoneId")]
        public Output<string> HostedZoneId { get; private set; } = null!;

        /// <summary>
        /// Configuration of [object lifecycle management](http://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html). See Lifecycle Rule below for details. The provider will only perform drift detection if a configuration value is provided.
        /// Use the resource `aws.s3.BucketLifecycleConfigurationV2` instead.
        /// </summary>
        [Output("lifecycleRules")]
        public Output<ImmutableArray<Outputs.BucketV2LifecycleRule>> LifecycleRules { get; private set; } = null!;

        /// <summary>
        /// Configuration of [S3 bucket logging](https://docs.aws.amazon.com/AmazonS3/latest/UG/ManagingBucketLogging.html) parameters. See Logging below for details. The provider will only perform drift detection if a configuration value is provided.
        /// Use the resource `aws.s3.BucketLoggingV2` instead.
        /// </summary>
        [Output("loggings")]
        public Output<ImmutableArray<Outputs.BucketV2Logging>> Loggings { get; private set; } = null!;

        /// <summary>
        /// Configuration of [S3 object locking](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html). See Object Lock Configuration below for details.
        /// The provider wil only perform drift detection if a configuration value is provided.
        /// Use the `object_lock_enabled` parameter and the resource `aws.s3.BucketObjectLockConfigurationV2` instead.
        /// </summary>
        [Output("objectLockConfiguration")]
        public Output<Outputs.BucketV2ObjectLockConfiguration> ObjectLockConfiguration { get; private set; } = null!;

        /// <summary>
        /// Indicates whether this bucket has an Object Lock configuration enabled. Valid values are `true` or `false`. This argument is not supported in all regions or partitions.
        /// </summary>
        [Output("objectLockEnabled")]
        public Output<bool> ObjectLockEnabled { get; private set; } = null!;

        /// <summary>
        /// Valid [bucket policy](https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html) JSON document. Note that if the policy document is not specific enough (but still valid), this provider may view the policy as constantly changing. In this case, please make sure you use the verbose/specific version of the policy. For more information about building AWS IAM policy documents with this provider, see the AWS IAM Policy Document Guide.
        /// The provider will only perform drift detection if a configuration value is provided.
        /// Use the resource `aws.s3.BucketPolicy` instead.
        /// </summary>
        [Output("policy")]
        public Output<string> Policy { get; private set; } = null!;

        /// <summary>
        /// AWS region this bucket resides in.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// Configuration of [replication configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/crr.html). See Replication Configuration below for details. The provider will only perform drift detection if a configuration value is provided.
        /// Use the resource `aws.s3.BucketReplicationConfig` instead.
        /// </summary>
        [Output("replicationConfigurations")]
        public Output<ImmutableArray<Outputs.BucketV2ReplicationConfiguration>> ReplicationConfigurations { get; private set; } = null!;

        /// <summary>
        /// Specifies who should bear the cost of Amazon S3 data transfer.
        /// Can be either `BucketOwner` or `Requester`. By default, the owner of the S3 bucket would incur the costs of any data transfer.
        /// See [Requester Pays Buckets](http://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html) developer guide for more information.
        /// The provider will only perform drift detection if a configuration value is provided.
        /// Use the resource `aws.s3.BucketRequestPaymentConfigurationV2` instead.
        /// </summary>
        [Output("requestPayer")]
        public Output<string> RequestPayer { get; private set; } = null!;

        /// <summary>
        /// Configuration of [server-side encryption configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html). See Server Side Encryption Configuration below for details.
        /// The provider will only perform drift detection if a configuration value is provided.
        /// Use the resource `aws.s3.BucketServerSideEncryptionConfigurationV2` instead.
        /// </summary>
        [Output("serverSideEncryptionConfigurations")]
        public Output<ImmutableArray<Outputs.BucketV2ServerSideEncryptionConfiguration>> ServerSideEncryptionConfigurations { get; private set; } = null!;

        /// <summary>
        /// Map of tags to assign to the bucket. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// 
        /// The following arguments are deprecated, and will be removed in a future major version:
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        /// <summary>
        /// Configuration of the [S3 bucket versioning state](https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html). See Versioning below for details. The provider will only perform drift detection if a configuration value is provided. Use the resource `aws.s3.BucketVersioningV2` instead.
        /// </summary>
        [Output("versionings")]
        public Output<ImmutableArray<Outputs.BucketV2Versioning>> Versionings { get; private set; } = null!;

        /// <summary>
        /// (**Deprecated**) Domain of the website endpoint, if the bucket is configured with a website. If not, this will be an empty string. This is used to create Route 53 alias records. Use the resource `aws.s3.BucketWebsiteConfigurationV2` instead.
        /// </summary>
        [Output("websiteDomain")]
        public Output<string> WebsiteDomain { get; private set; } = null!;

        /// <summary>
        /// (**Deprecated**) Website endpoint, if the bucket is configured with a website. If not, this will be an empty string. Use the resource `aws.s3.BucketWebsiteConfigurationV2` instead.
        /// </summary>
        [Output("websiteEndpoint")]
        public Output<string> WebsiteEndpoint { get; private set; } = null!;

        /// <summary>
        /// Configuration of the [S3 bucket website](https://docs.aws.amazon.com/AmazonS3/latest/userguide/WebsiteHosting.html). See Website below for details. The provider will only perform drift detection if a configuration value is provided.
        /// Use the resource `aws.s3.BucketWebsiteConfigurationV2` instead.
        /// </summary>
        [Output("websites")]
        public Output<ImmutableArray<Outputs.BucketV2Website>> Websites { get; private set; } = null!;


        /// <summary>
        /// Create a BucketV2 resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BucketV2(string name, BucketV2Args? args = null, CustomResourceOptions? options = null)
            : base("aws:s3/bucketV2:BucketV2", name, args ?? new BucketV2Args(), MakeResourceOptions(options, ""))
        {
        }

        private BucketV2(string name, Input<string> id, BucketV2State? state = null, CustomResourceOptions? options = null)
            : base("aws:s3/bucketV2:BucketV2", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "aws:s3/bucket:Bucket"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BucketV2 resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BucketV2 Get(string name, Input<string> id, BucketV2State? state = null, CustomResourceOptions? options = null)
        {
            return new BucketV2(name, id, state, options);
        }
    }

    public sealed class BucketV2Args : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Sets the accelerate configuration of an existing bucket. Can be `Enabled` or `Suspended`. Cannot be used in `cn-north-1` or `us-gov-west-1`. This provider will only perform drift detection if a configuration value is provided.
        /// Use the resource `aws.s3.BucketAccelerateConfigurationV2` instead.
        /// </summary>
        [Input("accelerationStatus")]
        public Input<string>? AccelerationStatus { get; set; }

        /// <summary>
        /// The [canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) to apply. Valid values are `private`, `public-read`, `public-read-write`, `aws-exec-read`, `authenticated-read`, and `log-delivery-write`. Defaults to `private`.  Conflicts with `grant`. The provider will only perform drift detection if a configuration value is provided. Use the resource `aws.s3.BucketAclV2` instead.
        /// </summary>
        [Input("acl")]
        public Input<string>? Acl { get; set; }

        /// <summary>
        /// Name of the bucket. If omitted, the provider will assign a random, unique name. Must be lowercase and less than or equal to 63 characters in length. A full list of bucket naming rules [may be found here](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html).
        /// </summary>
        [Input("bucket")]
        public Input<string>? Bucket { get; set; }

        /// <summary>
        /// Creates a unique bucket name beginning with the specified prefix. Conflicts with `bucket`. Must be lowercase and less than or equal to 37 characters in length. A full list of bucket naming rules [may be found here](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html).
        /// </summary>
        [Input("bucketPrefix")]
        public Input<string>? BucketPrefix { get; set; }

        [Input("corsRules")]
        private InputList<Inputs.BucketV2CorsRuleArgs>? _corsRules;

        /// <summary>
        /// Rule of [Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html). See CORS rule below for details. This provider will only perform drift detection if a configuration value is provided. Use the resource `aws.s3.BucketCorsConfigurationV2` instead.
        /// </summary>
        [Obsolete(@"Use the aws_s3_bucket_cors_configuration resource instead")]
        public InputList<Inputs.BucketV2CorsRuleArgs> CorsRules
        {
            get => _corsRules ?? (_corsRules = new InputList<Inputs.BucketV2CorsRuleArgs>());
            set => _corsRules = value;
        }

        /// <summary>
        /// Boolean that indicates all objects (including any [locked objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html)) should be deleted from the bucket *when the bucket is destroyed* so that the bucket can be destroyed without error. These objects are *not* recoverable. This only deletes objects when the bucket is destroyed, *not* when setting this parameter to `true`. Once this parameter is set to `true`, there must be a successful `pulumi up` run before a destroy is required to update this value in the resource state. Without a successful `pulumi up` after this parameter is set, this flag will have no effect. If setting this field in the same operation that would require replacing the bucket or destroying the bucket, this flag will not work. Additionally when importing a bucket, a successful `pulumi up` is required to set this value in state before it will take effect on a destroy operation.
        /// </summary>
        [Input("forceDestroy")]
        public Input<bool>? ForceDestroy { get; set; }

        [Input("grants")]
        private InputList<Inputs.BucketV2GrantArgs>? _grants;

        /// <summary>
        /// An [ACL policy grant](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#sample-acl). See Grant below for details. Conflicts with `acl`. The provider will only perform drift detection if a configuration value is provided. Use the resource `aws.s3.BucketAclV2` instead.
        /// </summary>
        [Obsolete(@"Use the aws_s3_bucket_acl resource instead")]
        public InputList<Inputs.BucketV2GrantArgs> Grants
        {
            get => _grants ?? (_grants = new InputList<Inputs.BucketV2GrantArgs>());
            set => _grants = value;
        }

        [Input("lifecycleRules")]
        private InputList<Inputs.BucketV2LifecycleRuleArgs>? _lifecycleRules;

        /// <summary>
        /// Configuration of [object lifecycle management](http://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html). See Lifecycle Rule below for details. The provider will only perform drift detection if a configuration value is provided.
        /// Use the resource `aws.s3.BucketLifecycleConfigurationV2` instead.
        /// </summary>
        [Obsolete(@"Use the aws_s3_bucket_lifecycle_configuration resource instead")]
        public InputList<Inputs.BucketV2LifecycleRuleArgs> LifecycleRules
        {
            get => _lifecycleRules ?? (_lifecycleRules = new InputList<Inputs.BucketV2LifecycleRuleArgs>());
            set => _lifecycleRules = value;
        }

        [Input("loggings")]
        private InputList<Inputs.BucketV2LoggingArgs>? _loggings;

        /// <summary>
        /// Configuration of [S3 bucket logging](https://docs.aws.amazon.com/AmazonS3/latest/UG/ManagingBucketLogging.html) parameters. See Logging below for details. The provider will only perform drift detection if a configuration value is provided.
        /// Use the resource `aws.s3.BucketLoggingV2` instead.
        /// </summary>
        [Obsolete(@"Use the aws_s3_bucket_logging resource instead")]
        public InputList<Inputs.BucketV2LoggingArgs> Loggings
        {
            get => _loggings ?? (_loggings = new InputList<Inputs.BucketV2LoggingArgs>());
            set => _loggings = value;
        }

        /// <summary>
        /// Configuration of [S3 object locking](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html). See Object Lock Configuration below for details.
        /// The provider wil only perform drift detection if a configuration value is provided.
        /// Use the `object_lock_enabled` parameter and the resource `aws.s3.BucketObjectLockConfigurationV2` instead.
        /// </summary>
        [Input("objectLockConfiguration")]
        public Input<Inputs.BucketV2ObjectLockConfigurationArgs>? ObjectLockConfiguration { get; set; }

        /// <summary>
        /// Indicates whether this bucket has an Object Lock configuration enabled. Valid values are `true` or `false`. This argument is not supported in all regions or partitions.
        /// </summary>
        [Input("objectLockEnabled")]
        public Input<bool>? ObjectLockEnabled { get; set; }

        /// <summary>
        /// Valid [bucket policy](https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html) JSON document. Note that if the policy document is not specific enough (but still valid), this provider may view the policy as constantly changing. In this case, please make sure you use the verbose/specific version of the policy. For more information about building AWS IAM policy documents with this provider, see the AWS IAM Policy Document Guide.
        /// The provider will only perform drift detection if a configuration value is provided.
        /// Use the resource `aws.s3.BucketPolicy` instead.
        /// </summary>
        [Input("policy")]
        public Input<string>? Policy { get; set; }

        [Input("replicationConfigurations")]
        private InputList<Inputs.BucketV2ReplicationConfigurationArgs>? _replicationConfigurations;

        /// <summary>
        /// Configuration of [replication configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/crr.html). See Replication Configuration below for details. The provider will only perform drift detection if a configuration value is provided.
        /// Use the resource `aws.s3.BucketReplicationConfig` instead.
        /// </summary>
        [Obsolete(@"Use the aws_s3_bucket_replication_configuration resource instead")]
        public InputList<Inputs.BucketV2ReplicationConfigurationArgs> ReplicationConfigurations
        {
            get => _replicationConfigurations ?? (_replicationConfigurations = new InputList<Inputs.BucketV2ReplicationConfigurationArgs>());
            set => _replicationConfigurations = value;
        }

        /// <summary>
        /// Specifies who should bear the cost of Amazon S3 data transfer.
        /// Can be either `BucketOwner` or `Requester`. By default, the owner of the S3 bucket would incur the costs of any data transfer.
        /// See [Requester Pays Buckets](http://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html) developer guide for more information.
        /// The provider will only perform drift detection if a configuration value is provided.
        /// Use the resource `aws.s3.BucketRequestPaymentConfigurationV2` instead.
        /// </summary>
        [Input("requestPayer")]
        public Input<string>? RequestPayer { get; set; }

        [Input("serverSideEncryptionConfigurations")]
        private InputList<Inputs.BucketV2ServerSideEncryptionConfigurationArgs>? _serverSideEncryptionConfigurations;

        /// <summary>
        /// Configuration of [server-side encryption configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html). See Server Side Encryption Configuration below for details.
        /// The provider will only perform drift detection if a configuration value is provided.
        /// Use the resource `aws.s3.BucketServerSideEncryptionConfigurationV2` instead.
        /// </summary>
        [Obsolete(@"Use the aws_s3_bucket_server_side_encryption_configuration resource instead")]
        public InputList<Inputs.BucketV2ServerSideEncryptionConfigurationArgs> ServerSideEncryptionConfigurations
        {
            get => _serverSideEncryptionConfigurations ?? (_serverSideEncryptionConfigurations = new InputList<Inputs.BucketV2ServerSideEncryptionConfigurationArgs>());
            set => _serverSideEncryptionConfigurations = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Map of tags to assign to the bucket. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// 
        /// The following arguments are deprecated, and will be removed in a future major version:
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("versionings")]
        private InputList<Inputs.BucketV2VersioningArgs>? _versionings;

        /// <summary>
        /// Configuration of the [S3 bucket versioning state](https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html). See Versioning below for details. The provider will only perform drift detection if a configuration value is provided. Use the resource `aws.s3.BucketVersioningV2` instead.
        /// </summary>
        [Obsolete(@"Use the aws_s3_bucket_versioning resource instead")]
        public InputList<Inputs.BucketV2VersioningArgs> Versionings
        {
            get => _versionings ?? (_versionings = new InputList<Inputs.BucketV2VersioningArgs>());
            set => _versionings = value;
        }

        [Input("websites")]
        private InputList<Inputs.BucketV2WebsiteArgs>? _websites;

        /// <summary>
        /// Configuration of the [S3 bucket website](https://docs.aws.amazon.com/AmazonS3/latest/userguide/WebsiteHosting.html). See Website below for details. The provider will only perform drift detection if a configuration value is provided.
        /// Use the resource `aws.s3.BucketWebsiteConfigurationV2` instead.
        /// </summary>
        [Obsolete(@"Use the aws_s3_bucket_website_configuration resource instead")]
        public InputList<Inputs.BucketV2WebsiteArgs> Websites
        {
            get => _websites ?? (_websites = new InputList<Inputs.BucketV2WebsiteArgs>());
            set => _websites = value;
        }

        public BucketV2Args()
        {
        }
        public static new BucketV2Args Empty => new BucketV2Args();
    }

    public sealed class BucketV2State : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Sets the accelerate configuration of an existing bucket. Can be `Enabled` or `Suspended`. Cannot be used in `cn-north-1` or `us-gov-west-1`. This provider will only perform drift detection if a configuration value is provided.
        /// Use the resource `aws.s3.BucketAccelerateConfigurationV2` instead.
        /// </summary>
        [Input("accelerationStatus")]
        public Input<string>? AccelerationStatus { get; set; }

        /// <summary>
        /// The [canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) to apply. Valid values are `private`, `public-read`, `public-read-write`, `aws-exec-read`, `authenticated-read`, and `log-delivery-write`. Defaults to `private`.  Conflicts with `grant`. The provider will only perform drift detection if a configuration value is provided. Use the resource `aws.s3.BucketAclV2` instead.
        /// </summary>
        [Input("acl")]
        public Input<string>? Acl { get; set; }

        /// <summary>
        /// ARN of the bucket. Will be of format `arn:aws:s3:::bucketname`.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// Name of the bucket. If omitted, the provider will assign a random, unique name. Must be lowercase and less than or equal to 63 characters in length. A full list of bucket naming rules [may be found here](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html).
        /// </summary>
        [Input("bucket")]
        public Input<string>? Bucket { get; set; }

        /// <summary>
        /// Bucket domain name. Will be of format `bucketname.s3.amazonaws.com`.
        /// </summary>
        [Input("bucketDomainName")]
        public Input<string>? BucketDomainName { get; set; }

        /// <summary>
        /// Creates a unique bucket name beginning with the specified prefix. Conflicts with `bucket`. Must be lowercase and less than or equal to 37 characters in length. A full list of bucket naming rules [may be found here](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html).
        /// </summary>
        [Input("bucketPrefix")]
        public Input<string>? BucketPrefix { get; set; }

        /// <summary>
        /// The bucket region-specific domain name. The bucket domain name including the region name. Please refer to the [S3 endpoints reference](https://docs.aws.amazon.com/general/latest/gr/s3.html#s3_region) for format. Note: AWS CloudFront allows specifying an S3 region-specific endpoint when creating an S3 origin. This will prevent redirect issues from CloudFront to the S3 Origin URL. For more information, see the [Virtual Hosted-Style Requests for Other Regions](https://docs.aws.amazon.com/AmazonS3/latest/userguide/VirtualHosting.html#deprecated-global-endpoint) section in the AWS S3 User Guide.
        /// </summary>
        [Input("bucketRegionalDomainName")]
        public Input<string>? BucketRegionalDomainName { get; set; }

        [Input("corsRules")]
        private InputList<Inputs.BucketV2CorsRuleGetArgs>? _corsRules;

        /// <summary>
        /// Rule of [Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html). See CORS rule below for details. This provider will only perform drift detection if a configuration value is provided. Use the resource `aws.s3.BucketCorsConfigurationV2` instead.
        /// </summary>
        [Obsolete(@"Use the aws_s3_bucket_cors_configuration resource instead")]
        public InputList<Inputs.BucketV2CorsRuleGetArgs> CorsRules
        {
            get => _corsRules ?? (_corsRules = new InputList<Inputs.BucketV2CorsRuleGetArgs>());
            set => _corsRules = value;
        }

        /// <summary>
        /// Boolean that indicates all objects (including any [locked objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html)) should be deleted from the bucket *when the bucket is destroyed* so that the bucket can be destroyed without error. These objects are *not* recoverable. This only deletes objects when the bucket is destroyed, *not* when setting this parameter to `true`. Once this parameter is set to `true`, there must be a successful `pulumi up` run before a destroy is required to update this value in the resource state. Without a successful `pulumi up` after this parameter is set, this flag will have no effect. If setting this field in the same operation that would require replacing the bucket or destroying the bucket, this flag will not work. Additionally when importing a bucket, a successful `pulumi up` is required to set this value in state before it will take effect on a destroy operation.
        /// </summary>
        [Input("forceDestroy")]
        public Input<bool>? ForceDestroy { get; set; }

        [Input("grants")]
        private InputList<Inputs.BucketV2GrantGetArgs>? _grants;

        /// <summary>
        /// An [ACL policy grant](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#sample-acl). See Grant below for details. Conflicts with `acl`. The provider will only perform drift detection if a configuration value is provided. Use the resource `aws.s3.BucketAclV2` instead.
        /// </summary>
        [Obsolete(@"Use the aws_s3_bucket_acl resource instead")]
        public InputList<Inputs.BucketV2GrantGetArgs> Grants
        {
            get => _grants ?? (_grants = new InputList<Inputs.BucketV2GrantGetArgs>());
            set => _grants = value;
        }

        /// <summary>
        /// [Route 53 Hosted Zone ID](https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_website_region_endpoints) for this bucket's region.
        /// </summary>
        [Input("hostedZoneId")]
        public Input<string>? HostedZoneId { get; set; }

        [Input("lifecycleRules")]
        private InputList<Inputs.BucketV2LifecycleRuleGetArgs>? _lifecycleRules;

        /// <summary>
        /// Configuration of [object lifecycle management](http://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html). See Lifecycle Rule below for details. The provider will only perform drift detection if a configuration value is provided.
        /// Use the resource `aws.s3.BucketLifecycleConfigurationV2` instead.
        /// </summary>
        [Obsolete(@"Use the aws_s3_bucket_lifecycle_configuration resource instead")]
        public InputList<Inputs.BucketV2LifecycleRuleGetArgs> LifecycleRules
        {
            get => _lifecycleRules ?? (_lifecycleRules = new InputList<Inputs.BucketV2LifecycleRuleGetArgs>());
            set => _lifecycleRules = value;
        }

        [Input("loggings")]
        private InputList<Inputs.BucketV2LoggingGetArgs>? _loggings;

        /// <summary>
        /// Configuration of [S3 bucket logging](https://docs.aws.amazon.com/AmazonS3/latest/UG/ManagingBucketLogging.html) parameters. See Logging below for details. The provider will only perform drift detection if a configuration value is provided.
        /// Use the resource `aws.s3.BucketLoggingV2` instead.
        /// </summary>
        [Obsolete(@"Use the aws_s3_bucket_logging resource instead")]
        public InputList<Inputs.BucketV2LoggingGetArgs> Loggings
        {
            get => _loggings ?? (_loggings = new InputList<Inputs.BucketV2LoggingGetArgs>());
            set => _loggings = value;
        }

        /// <summary>
        /// Configuration of [S3 object locking](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html). See Object Lock Configuration below for details.
        /// The provider wil only perform drift detection if a configuration value is provided.
        /// Use the `object_lock_enabled` parameter and the resource `aws.s3.BucketObjectLockConfigurationV2` instead.
        /// </summary>
        [Input("objectLockConfiguration")]
        public Input<Inputs.BucketV2ObjectLockConfigurationGetArgs>? ObjectLockConfiguration { get; set; }

        /// <summary>
        /// Indicates whether this bucket has an Object Lock configuration enabled. Valid values are `true` or `false`. This argument is not supported in all regions or partitions.
        /// </summary>
        [Input("objectLockEnabled")]
        public Input<bool>? ObjectLockEnabled { get; set; }

        /// <summary>
        /// Valid [bucket policy](https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html) JSON document. Note that if the policy document is not specific enough (but still valid), this provider may view the policy as constantly changing. In this case, please make sure you use the verbose/specific version of the policy. For more information about building AWS IAM policy documents with this provider, see the AWS IAM Policy Document Guide.
        /// The provider will only perform drift detection if a configuration value is provided.
        /// Use the resource `aws.s3.BucketPolicy` instead.
        /// </summary>
        [Input("policy")]
        public Input<string>? Policy { get; set; }

        /// <summary>
        /// AWS region this bucket resides in.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("replicationConfigurations")]
        private InputList<Inputs.BucketV2ReplicationConfigurationGetArgs>? _replicationConfigurations;

        /// <summary>
        /// Configuration of [replication configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/crr.html). See Replication Configuration below for details. The provider will only perform drift detection if a configuration value is provided.
        /// Use the resource `aws.s3.BucketReplicationConfig` instead.
        /// </summary>
        [Obsolete(@"Use the aws_s3_bucket_replication_configuration resource instead")]
        public InputList<Inputs.BucketV2ReplicationConfigurationGetArgs> ReplicationConfigurations
        {
            get => _replicationConfigurations ?? (_replicationConfigurations = new InputList<Inputs.BucketV2ReplicationConfigurationGetArgs>());
            set => _replicationConfigurations = value;
        }

        /// <summary>
        /// Specifies who should bear the cost of Amazon S3 data transfer.
        /// Can be either `BucketOwner` or `Requester`. By default, the owner of the S3 bucket would incur the costs of any data transfer.
        /// See [Requester Pays Buckets](http://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html) developer guide for more information.
        /// The provider will only perform drift detection if a configuration value is provided.
        /// Use the resource `aws.s3.BucketRequestPaymentConfigurationV2` instead.
        /// </summary>
        [Input("requestPayer")]
        public Input<string>? RequestPayer { get; set; }

        [Input("serverSideEncryptionConfigurations")]
        private InputList<Inputs.BucketV2ServerSideEncryptionConfigurationGetArgs>? _serverSideEncryptionConfigurations;

        /// <summary>
        /// Configuration of [server-side encryption configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html). See Server Side Encryption Configuration below for details.
        /// The provider will only perform drift detection if a configuration value is provided.
        /// Use the resource `aws.s3.BucketServerSideEncryptionConfigurationV2` instead.
        /// </summary>
        [Obsolete(@"Use the aws_s3_bucket_server_side_encryption_configuration resource instead")]
        public InputList<Inputs.BucketV2ServerSideEncryptionConfigurationGetArgs> ServerSideEncryptionConfigurations
        {
            get => _serverSideEncryptionConfigurations ?? (_serverSideEncryptionConfigurations = new InputList<Inputs.BucketV2ServerSideEncryptionConfigurationGetArgs>());
            set => _serverSideEncryptionConfigurations = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Map of tags to assign to the bucket. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// 
        /// The following arguments are deprecated, and will be removed in a future major version:
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("versionings")]
        private InputList<Inputs.BucketV2VersioningGetArgs>? _versionings;

        /// <summary>
        /// Configuration of the [S3 bucket versioning state](https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html). See Versioning below for details. The provider will only perform drift detection if a configuration value is provided. Use the resource `aws.s3.BucketVersioningV2` instead.
        /// </summary>
        [Obsolete(@"Use the aws_s3_bucket_versioning resource instead")]
        public InputList<Inputs.BucketV2VersioningGetArgs> Versionings
        {
            get => _versionings ?? (_versionings = new InputList<Inputs.BucketV2VersioningGetArgs>());
            set => _versionings = value;
        }

        /// <summary>
        /// (**Deprecated**) Domain of the website endpoint, if the bucket is configured with a website. If not, this will be an empty string. This is used to create Route 53 alias records. Use the resource `aws.s3.BucketWebsiteConfigurationV2` instead.
        /// </summary>
        [Input("websiteDomain")]
        public Input<string>? WebsiteDomain { get; set; }

        /// <summary>
        /// (**Deprecated**) Website endpoint, if the bucket is configured with a website. If not, this will be an empty string. Use the resource `aws.s3.BucketWebsiteConfigurationV2` instead.
        /// </summary>
        [Input("websiteEndpoint")]
        public Input<string>? WebsiteEndpoint { get; set; }

        [Input("websites")]
        private InputList<Inputs.BucketV2WebsiteGetArgs>? _websites;

        /// <summary>
        /// Configuration of the [S3 bucket website](https://docs.aws.amazon.com/AmazonS3/latest/userguide/WebsiteHosting.html). See Website below for details. The provider will only perform drift detection if a configuration value is provided.
        /// Use the resource `aws.s3.BucketWebsiteConfigurationV2` instead.
        /// </summary>
        [Obsolete(@"Use the aws_s3_bucket_website_configuration resource instead")]
        public InputList<Inputs.BucketV2WebsiteGetArgs> Websites
        {
            get => _websites ?? (_websites = new InputList<Inputs.BucketV2WebsiteGetArgs>());
            set => _websites = value;
        }

        public BucketV2State()
        {
        }
        public static new BucketV2State Empty => new BucketV2State();
    }
}
