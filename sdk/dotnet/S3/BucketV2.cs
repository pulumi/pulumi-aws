// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.S3
{
    /// <summary>
    /// Provides a S3 bucket resource.
    /// 
    /// &gt; This functionality is for managing S3 in an AWS Partition. To manage [S3 on Outposts](https://docs.aws.amazon.com/AmazonS3/latest/dev/S3onOutposts.html), see the `aws.s3control.Bucket` resource.
    /// 
    /// &gt; **NOTE on S3 Bucket Accelerate Configuration:** S3 Bucket Accelerate can be configured in either the standalone resource `aws.s3.BucketAccelerateConfigurationV2`
    /// or with the deprecated parameter `acceleration_status` in the resource `aws.s3.BucketV2`.
    /// Configuring with both will cause inconsistencies and may overwrite configuration.
    /// 
    /// &gt; **NOTE on S3 Bucket canned ACL Configuration:** S3 Bucket canned ACL can be configured in either the standalone resource `aws.s3.BucketAclV2`
    /// or with the deprecated parameter `acl` in the resource `aws.s3.BucketV2`.
    /// Configuring with both will cause inconsistencies and may overwrite configuration.
    /// 
    /// &gt; **NOTE on S3 Bucket ACL Grants Configuration:** S3 Bucket grants can be configured in either the standalone resource `aws.s3.BucketAclV2`
    /// or with the deprecated parameter `grant` in the resource `aws.s3.BucketV2`.
    /// Configuring with both will cause inconsistencies and may overwrite configuration.
    /// 
    /// &gt; **NOTE on S3 Bucket CORS Configuration:** S3 Bucket CORS can be configured in either the standalone resource `aws.s3.BucketCorsConfigurationV2`
    /// or with the deprecated parameter `cors_rule` in the resource `aws.s3.BucketV2`.
    /// Configuring with both will cause inconsistencies and may overwrite configuration.
    /// 
    /// &gt; **NOTE on S3 Bucket Lifecycle Configuration:** S3 Bucket Lifecycle can be configured in either the standalone resource `aws.s3.BucketLifecycleConfigurationV2`
    /// or with the deprecated parameter `lifecycle_rule` in the resource `aws.s3.BucketV2`.
    /// Configuring with both will cause inconsistencies and may overwrite configuration.
    /// 
    /// &gt; **NOTE on S3 Bucket Logging Configuration:** S3 Bucket logging can be configured in either the standalone resource `aws.s3.BucketLoggingV2`
    /// or with the deprecated parameter `logging` in the resource `aws.s3.BucketV2`.
    /// Configuring with both will cause inconsistencies and may overwrite configuration.
    /// 
    /// &gt; **NOTE on S3 Bucket Object Lock Configuration:** S3 Bucket Object Lock can be configured in either the standalone resource `aws.s3.BucketObjectLockConfigurationV2`
    /// or with the deprecated parameter `object_lock_configuration` in the resource `aws.s3.BucketV2`.
    /// Configuring with both will cause inconsistencies and may overwrite configuration.
    /// 
    /// &gt; **NOTE on S3 Bucket Policy Configuration:** S3 Bucket Policy can be configured in either the standalone resource `aws.s3.BucketPolicy`
    /// or with the deprecated parameter `policy` in the resource `aws.s3.BucketV2`.
    /// Configuring with both will cause inconsistencies and may overwrite configuration.
    /// 
    /// &gt; **NOTE on S3 Bucket Replication Configuration:** S3 Bucket Replication can be configured in either the standalone resource `aws_s3_bucket_replicaton_configuration`
    /// or with the deprecated parameter `replication_configuration` in the resource `aws.s3.BucketV2`.
    /// Configuring with both will cause inconsistencies and may overwrite configuration.
    /// 
    /// &gt; **NOTE on S3 Bucket Request Payment Configuration:** S3 Bucket Request Payment can be configured in either the standalone resource `aws.s3.BucketRequestPaymentConfigurationV2`
    /// or with the deprecated parameter `request_payer` in the resource `aws.s3.BucketV2`.
    /// Configuring with both will cause inconsistencies and may overwrite configuration.
    /// 
    /// &gt; **NOTE on S3 Bucket Server Side Encryption Configuration:** S3 Bucket Server Side Encryption can be configured in either the standalone resource `aws.s3.BucketServerSideEncryptionConfigurationV2`
    /// or with the deprecated parameter `server_side_encryption_configuration` in the resource `aws.s3.BucketV2`.
    /// Configuring with both will cause inconsistencies and may overwrite configuration.
    /// 
    /// &gt; **NOTE on S3 Bucket Versioning Configuration:** S3 Bucket versioning can be configured in either the standalone resource `aws.s3.BucketVersioningV2`
    /// or with the deprecated parameter `versioning` in the resource `aws.s3.BucketV2`.
    /// Configuring with both will cause inconsistencies and may overwrite configuration.
    /// 
    /// &gt; **NOTE on S3 Bucket Website Configuration:** S3 Bucket Website can be configured in either the standalone resource `aws.s3.BucketWebsiteConfigurationV2`
    /// or with the deprecated parameter `website` in the resource `aws.s3.BucketV2`.
    /// Configuring with both will cause inconsistencies and may overwrite configuration.
    /// 
    /// ## Example Usage
    /// ### Private Bucket w/ Tags
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var bucketV2 = new Aws.S3.BucketV2("bucketV2", new Aws.S3.BucketV2Args
    ///         {
    ///             Tags = 
    ///             {
    ///                 { "Name", "My bucket" },
    ///                 { "Environment", "Dev" },
    ///             },
    ///         });
    ///         var example = new Aws.S3.BucketAclV2("example", new Aws.S3.BucketAclV2Args
    ///         {
    ///             Bucket = bucketV2.Id,
    ///             Acl = "private",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// ### Static Website Hosting
    /// 
    /// &lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD
    /// The `website` argument is read-only as of the last major version of the Provider.
    /// See the `aws.s3.BucketWebsiteConfigurationV2` resource for configuration details.
    /// 
    /// ### Using CORS
    /// 
    /// The `cors_rule` argument is read-only as of the last major version of the Provider.
    /// See the `aws.s3.BucketCorsConfigurationV2` resource for configuration details.
    /// 
    /// ### Using versioning
    /// 
    /// The `versioning` argument is read-only as of the last major version of the Provider.
    /// See the `aws.s3.BucketVersioningV2` resource for configuration details.
    /// 
    /// ### Enable Logging
    /// 
    /// The `logging` argument is read-only as of the last major version of the Provider.
    /// See the `aws.s3.BucketLoggingV2` resource for configuration details.
    /// ### Using object lifecycle
    /// 
    /// The `lifecycle_rule` argument is read-only as of the last major version of the Provider.
    /// See the `aws.s3.BucketLifecycleConfigurationV2` resource for configuration details.
    /// ===
    /// &gt; **NOTE:** The parameter `website` is deprecated.
    /// Use the resource `aws.s3.BucketWebsiteConfigurationV2` instead.
    /// 
    /// ```csharp
    /// using System.IO;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var bucketV2 = new Aws.S3.BucketV2("bucketV2", new Aws.S3.BucketV2Args
    ///         {
    ///             Acl = "public-read",
    ///             Policy = File.ReadAllText("policy.json"),
    ///             Website = new Aws.S3.Inputs.BucketV2WebsiteArgs
    ///             {
    ///                 IndexDocument = "index.html",
    ///                 ErrorDocument = "error.html",
    ///                 RoutingRules = @"[{
    ///     ""Condition"": {
    ///         ""KeyPrefixEquals"": ""docs/""
    ///     },
    ///     ""Redirect"": {
    ///         ""ReplaceKeyPrefixWith"": ""documents/""
    ///     }
    /// }]
    /// ",
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// ### Using CORS
    /// 
    /// &gt; **NOTE:** The parameter `cors_rule` is deprecated.
    /// Use the resource `aws.s3.BucketCorsConfigurationV2` instead.
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var bucketV2 = new Aws.S3.BucketV2("bucketV2", new Aws.S3.BucketV2Args
    ///         {
    ///             Acl = "public-read",
    ///             CorsRules = 
    ///             {
    ///                 new Aws.S3.Inputs.BucketV2CorsRuleArgs
    ///                 {
    ///                     AllowedHeaders = 
    ///                     {
    ///                         "*",
    ///                     },
    ///                     AllowedMethods = 
    ///                     {
    ///                         "PUT",
    ///                         "POST",
    ///                     },
    ///                     AllowedOrigins = 
    ///                     {
    ///                         "https://s3-website-test.hashicorp.com",
    ///                     },
    ///                     ExposeHeaders = 
    ///                     {
    ///                         "ETag",
    ///                     },
    ///                     MaxAgeSeconds = 3000,
    ///                 },
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// ### Using versioning
    /// 
    /// &gt; **NOTE:** The parameter `versioning` is deprecated.
    /// Use the resource `aws.s3.BucketVersioningV2` instead.
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var bucketV2 = new Aws.S3.BucketV2("bucketV2", new Aws.S3.BucketV2Args
    ///         {
    ///             Acl = "private",
    ///             Versioning = new Aws.S3.Inputs.BucketV2VersioningArgs
    ///             {
    ///                 Enabled = true,
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// ### Enable Logging
    /// 
    /// &gt; **NOTE:** The parameter `logging` is deprecated.
    /// Use the resource `aws.s3.BucketLoggingV2` instead.
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var logBucket = new Aws.S3.BucketV2("logBucket", new Aws.S3.BucketV2Args
    ///         {
    ///             Acl = "log-delivery-write",
    ///         });
    ///         var bucketV2 = new Aws.S3.BucketV2("bucketV2", new Aws.S3.BucketV2Args
    ///         {
    ///             Acl = "private",
    ///             Logging = new Aws.S3.Inputs.BucketV2LoggingArgs
    ///             {
    ///                 TargetBucket = logBucket.Id,
    ///                 TargetPrefix = "log/",
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// ### Using object lifecycle
    /// 
    /// &gt; **NOTE:** The parameter `lifecycle_rule` is deprecated.
    /// Use the resource `aws.s3.BucketLifecycleConfigurationV2` instead.
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var bucket = new Aws.S3.BucketV2("bucket", new Aws.S3.BucketV2Args
    ///         {
    ///             Acl = "private",
    ///             LifecycleRules = 
    ///             {
    ///                 new Aws.S3.Inputs.BucketV2LifecycleRuleArgs
    ///                 {
    ///                     Enabled = true,
    ///                     Expiration = new Aws.S3.Inputs.BucketV2LifecycleRuleExpirationArgs
    ///                     {
    ///                         Days = 90,
    ///                     },
    ///                     Id = "log",
    ///                     Prefix = "log/",
    ///                     Tags = 
    ///                     {
    ///                         { "autoclean", "true" },
    ///                         { "rule", "log" },
    ///                     },
    ///                     Transitions = 
    ///                     {
    ///                         new Aws.S3.Inputs.BucketV2LifecycleRuleTransitionArgs
    ///                         {
    ///                             Days = 30,
    ///                             StorageClass = "STANDARD_IA",
    ///                         },
    ///                         new Aws.S3.Inputs.BucketV2LifecycleRuleTransitionArgs
    ///                         {
    ///                             Days = 60,
    ///                             StorageClass = "GLACIER",
    ///                         },
    ///                     },
    ///                 },
    ///                 new Aws.S3.Inputs.BucketV2LifecycleRuleArgs
    ///                 {
    ///                     Enabled = true,
    ///                     Expiration = new Aws.S3.Inputs.BucketV2LifecycleRuleExpirationArgs
    ///                     {
    ///                         Date = "2016-01-12",
    ///                     },
    ///                     Id = "tmp",
    ///                     Prefix = "tmp/",
    ///                 },
    ///             },
    ///         });
    ///         var versioningBucket = new Aws.S3.BucketV2("versioningBucket", new Aws.S3.BucketV2Args
    ///         {
    ///             Acl = "private",
    ///             LifecycleRules = 
    ///             {
    ///                 new Aws.S3.Inputs.BucketV2LifecycleRuleArgs
    ///                 {
    ///                     Enabled = true,
    ///                     NoncurrentVersionExpiration = new Aws.S3.Inputs.BucketV2LifecycleRuleNoncurrentVersionExpirationArgs
    ///                     {
    ///                         Days = 90,
    ///                     },
    ///                     NoncurrentVersionTransitions = 
    ///                     {
    ///                         new Aws.S3.Inputs.BucketV2LifecycleRuleNoncurrentVersionTransitionArgs
    ///                         {
    ///                             Days = 30,
    ///                             StorageClass = "STANDARD_IA",
    ///                         },
    ///                         new Aws.S3.Inputs.BucketV2LifecycleRuleNoncurrentVersionTransitionArgs
    ///                         {
    ///                             Days = 60,
    ///                             StorageClass = "GLACIER",
    ///                         },
    ///                     },
    ///                     Prefix = "config/",
    ///                 },
    ///             },
    ///             Versioning = new Aws.S3.Inputs.BucketV2VersioningArgs
    ///             {
    ///                 Enabled = true,
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// ### Using object lock configuration
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var example = new Aws.S3.BucketV2("example", new Aws.S3.BucketV2Args
    ///         {
    ///             ObjectLockConfiguration = new Aws.S3.Inputs.BucketV2ObjectLockConfigurationArgs
    ///             {
    ///                 ObjectLockEnabled = "Enabled",
    ///                 Rule = new Aws.S3.Inputs.BucketV2ObjectLockConfigurationRuleArgs
    ///                 {
    ///                     DefaultRetention = new Aws.S3.Inputs.BucketV2ObjectLockConfigurationRuleDefaultRetentionArgs
    ///                     {
    ///                         Days = 5,
    ///                         Mode = "COMPLIANCE",
    ///                     },
    ///                 },
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// ### Using replication configuration
    /// 
    /// &lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD
    /// The `replication_configuration` argument is read-only as of the last major version of the Provider.
    /// See the `aws.s3.BucketReplicationConfig` resource for configuration details.
    /// 
    /// ### Enable Default Server Side Encryption
    /// 
    /// The `server_side_encryption_configuration` argument is read-only as of the last major version of the Provider.
    /// See the `aws.s3.BucketServerSideEncryptionConfigurationV2` resource for configuration details.
    /// ### Using ACL policy grants
    /// 
    /// The `acl` and `grant` arguments are read-only as of the last major version of the Provider.
    /// See the `aws.s3.BucketAclV2` resource for configuration details.
    /// ===
    /// &gt; **NOTE:** The parameter `replication_configuration` is deprecated.
    /// Use the resource `aws.s3.BucketReplicationConfig` instead.
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var central = new Aws.Provider("central", new Aws.ProviderArgs
    ///         {
    ///             Region = "eu-central-1",
    ///         });
    ///         var replicationRole = new Aws.Iam.Role("replicationRole", new Aws.Iam.RoleArgs
    ///         {
    ///             AssumeRolePolicy = @"{
    ///   ""Version"": ""2012-10-17"",
    ///   ""Statement"": [
    ///     {
    ///       ""Action"": ""sts:AssumeRole"",
    ///       ""Principal"": {
    ///         ""Service"": ""s3.amazonaws.com""
    ///       },
    ///       ""Effect"": ""Allow"",
    ///       ""Sid"": """"
    ///     }
    ///   ]
    /// }
    /// ",
    ///         });
    ///         var destination = new Aws.S3.BucketV2("destination", new Aws.S3.BucketV2Args
    ///         {
    ///             Versioning = new Aws.S3.Inputs.BucketV2VersioningArgs
    ///             {
    ///                 Enabled = true,
    ///             },
    ///         });
    ///         var source = new Aws.S3.BucketV2("source", new Aws.S3.BucketV2Args
    ///         {
    ///             Acl = "private",
    ///             Versioning = new Aws.S3.Inputs.BucketV2VersioningArgs
    ///             {
    ///                 Enabled = true,
    ///             },
    ///             ReplicationConfiguration = new Aws.S3.Inputs.BucketV2ReplicationConfigurationArgs
    ///             {
    ///                 Role = replicationRole.Arn,
    ///                 Rules = 
    ///                 {
    ///                     new Aws.S3.Inputs.BucketV2ReplicationConfigurationRuleArgs
    ///                     {
    ///                         Id = "foobar",
    ///                         Status = "Enabled",
    ///                         Filter = new Aws.S3.Inputs.BucketV2ReplicationConfigurationRuleFilterArgs
    ///                         {
    ///                             Tags = ,
    ///                         },
    ///                         Destination = new Aws.S3.Inputs.BucketV2ReplicationConfigurationRuleDestinationArgs
    ///                         {
    ///                             Bucket = destination.Arn,
    ///                             StorageClass = "STANDARD",
    ///                             ReplicationTime = new Aws.S3.Inputs.BucketV2ReplicationConfigurationRuleDestinationReplicationTimeArgs
    ///                             {
    ///                                 Status = "Enabled",
    ///                                 Minutes = 15,
    ///                             },
    ///                             Metrics = new Aws.S3.Inputs.BucketV2ReplicationConfigurationRuleDestinationMetricsArgs
    ///                             {
    ///                                 Status = "Enabled",
    ///                                 Minutes = 15,
    ///                             },
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///         }, new CustomResourceOptions
    ///         {
    ///             Provider = aws.Central,
    ///         });
    ///         var replicationPolicy = new Aws.Iam.Policy("replicationPolicy", new Aws.Iam.PolicyArgs
    ///         {
    ///             Policy = Output.Tuple(source.Arn, source.Arn, destination.Arn).Apply(values =&gt;
    ///             {
    ///                 var sourceArn = values.Item1;
    ///                 var sourceArn1 = values.Item2;
    ///                 var destinationArn = values.Item3;
    ///                 return @$"{{
    ///   ""Version"": ""2012-10-17"",
    ///   ""Statement"": [
    ///     {{
    ///       ""Action"": [
    ///         ""s3:GetReplicationConfiguration"",
    ///         ""s3:ListBucket""
    ///       ],
    ///       ""Effect"": ""Allow"",
    ///       ""Resource"": [
    ///         ""{sourceArn}""
    ///       ]
    ///     }},
    ///     {{
    ///       ""Action"": [
    ///         ""s3:GetObjectVersionForReplication"",
    ///         ""s3:GetObjectVersionAcl"",
    ///          ""s3:GetObjectVersionTagging""
    ///       ],
    ///       ""Effect"": ""Allow"",
    ///       ""Resource"": [
    ///         ""{sourceArn1}/*""
    ///       ]
    ///     }},
    ///     {{
    ///       ""Action"": [
    ///         ""s3:ReplicateObject"",
    ///         ""s3:ReplicateDelete"",
    ///         ""s3:ReplicateTags""
    ///       ],
    ///       ""Effect"": ""Allow"",
    ///       ""Resource"": ""{destinationArn}/*""
    ///     }}
    ///   ]
    /// }}
    /// ";
    ///             }),
    ///         });
    ///         var replicationRolePolicyAttachment = new Aws.Iam.RolePolicyAttachment("replicationRolePolicyAttachment", new Aws.Iam.RolePolicyAttachmentArgs
    ///         {
    ///             Role = replicationRole.Name,
    ///             PolicyArn = replicationPolicy.Arn,
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// ### Enable Default Server Side Encryption
    /// 
    /// &gt; **NOTE:** The parameter `server_side_encryption_configuration` is deprecated.
    /// Use the resource `aws.s3.BucketServerSideEncryptionConfigurationV2` instead.
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var mykey = new Aws.Kms.Key("mykey", new Aws.Kms.KeyArgs
    ///         {
    ///             Description = "This key is used to encrypt bucket objects",
    ///             DeletionWindowInDays = 10,
    ///         });
    ///         var mybucket = new Aws.S3.BucketV2("mybucket", new Aws.S3.BucketV2Args
    ///         {
    ///             ServerSideEncryptionConfiguration = new Aws.S3.Inputs.BucketV2ServerSideEncryptionConfigurationArgs
    ///             {
    ///                 Rule = new Aws.S3.Inputs.BucketV2ServerSideEncryptionConfigurationRuleArgs
    ///                 {
    ///                     ApplyServerSideEncryptionByDefault = new Aws.S3.Inputs.BucketV2ServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs
    ///                     {
    ///                         KmsMasterKeyId = mykey.Arn,
    ///                         SseAlgorithm = "aws:kms",
    ///                     },
    ///                 },
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// ### Using ACL policy grants
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var currentUser = Output.Create(Aws.S3.GetCanonicalUserId.InvokeAsync());
    ///         var bucket = new Aws.S3.BucketV2("bucket", new Aws.S3.BucketV2Args
    ///         {
    ///             Grants = 
    ///             {
    ///                 new Aws.S3.Inputs.BucketV2GrantArgs
    ///                 {
    ///                     Id = currentUser.Apply(currentUser =&gt; currentUser.Id),
    ///                     Type = "CanonicalUser",
    ///                     Permissions = 
    ///                     {
    ///                         "FULL_CONTROL",
    ///                     },
    ///                 },
    ///                 new Aws.S3.Inputs.BucketV2GrantArgs
    ///                 {
    ///                     Type = "Group",
    ///                     Permissions = 
    ///                     {
    ///                         "READ_ACP",
    ///                         "WRITE",
    ///                     },
    ///                     Uri = "http://acs.amazonaws.com/groups/s3/LogDelivery",
    ///                 },
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// S3 bucket can be imported using the `bucket`, e.g.,
    /// 
    /// ```sh
    ///  $ pulumi import aws:s3/bucketV2:BucketV2 bucket bucket-name
    /// ```
    /// </summary>
    [AwsResourceType("aws:s3/bucketV2:BucketV2")]
    public partial class BucketV2 : Pulumi.CustomResource
    {
        [Output("accelerationStatus")]
        public Output<string> AccelerationStatus { get; private set; } = null!;

        [Output("acl")]
        public Output<string> Acl { get; private set; } = null!;

        /// <summary>
        /// The ARN of the bucket. Will be of format `arn:aws:s3:::bucketname`.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// The name of the bucket. If omitted, this provider will assign a random, unique name. Must be lowercase and less than or equal to 63 characters in length. A full list of bucket naming rules [may be found here](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html).
        /// </summary>
        [Output("bucket")]
        public Output<string> Bucket { get; private set; } = null!;

        /// <summary>
        /// The bucket domain name. Will be of format `bucketname.s3.amazonaws.com`.
        /// </summary>
        [Output("bucketDomainName")]
        public Output<string> BucketDomainName { get; private set; } = null!;

        /// <summary>
        /// Creates a unique bucket name beginning with the specified prefix. Conflicts with `bucket`. Must be lowercase and less than or equal to 37 characters in length. A full list of bucket naming rules [may be found here](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html).
        /// </summary>
        [Output("bucketPrefix")]
        public Output<string?> BucketPrefix { get; private set; } = null!;

        /// <summary>
        /// The bucket region-specific domain name. The bucket domain name including the region name, please refer [here](https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region) for format. Note: The AWS CloudFront allows specifying S3 region-specific endpoint when creating S3 origin, it will prevent [redirect issues](https://forums.aws.amazon.com/thread.jspa?threadID=216814) from CloudFront to S3 Origin URL.
        /// </summary>
        [Output("bucketRegionalDomainName")]
        public Output<string> BucketRegionalDomainName { get; private set; } = null!;

        [Output("corsRules")]
        public Output<ImmutableArray<Outputs.BucketV2CorsRule>> CorsRules { get; private set; } = null!;

        /// <summary>
        /// A boolean that indicates all objects (including any [locked objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html)) should be deleted from the bucket so that the bucket can be destroyed without error. These objects are *not* recoverable.
        /// </summary>
        [Output("forceDestroy")]
        public Output<bool?> ForceDestroy { get; private set; } = null!;

        [Output("grants")]
        public Output<ImmutableArray<Outputs.BucketV2Grant>> Grants { get; private set; } = null!;

        /// <summary>
        /// The [Route 53 Hosted Zone ID](https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_website_region_endpoints) for this bucket's region.
        /// </summary>
        [Output("hostedZoneId")]
        public Output<string> HostedZoneId { get; private set; } = null!;

        [Output("lifecycleRules")]
        public Output<ImmutableArray<Outputs.BucketV2LifecycleRule>> LifecycleRules { get; private set; } = null!;

        [Output("logging")]
        public Output<Outputs.BucketV2Logging> Logging { get; private set; } = null!;

        [Output("objectLockConfiguration")]
        public Output<Outputs.BucketV2ObjectLockConfiguration> ObjectLockConfiguration { get; private set; } = null!;

        /// <summary>
        /// Indicates whether this bucket has an Object Lock configuration enabled.
        /// &lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD
        /// </summary>
        [Output("objectLockEnabled")]
        public Output<bool> ObjectLockEnabled { get; private set; } = null!;

        [Output("policy")]
        public Output<string> Policy { get; private set; } = null!;

        /// <summary>
        /// The AWS region this bucket resides in.
        /// &lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// The [replication configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/crr.html).
        /// </summary>
        [Output("replicationConfiguration")]
        public Output<Outputs.BucketV2ReplicationConfiguration> ReplicationConfiguration { get; private set; } = null!;

        /// <summary>
        /// Either `BucketOwner` or `Requester` that pays for the download and request fees.
        /// </summary>
        [Output("requestPayer")]
        public Output<string> RequestPayer { get; private set; } = null!;

        /// <summary>
        /// The [server-side encryption configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html).
        /// </summary>
        [Output("serverSideEncryptionConfiguration")]
        public Output<Outputs.BucketV2ServerSideEncryptionConfiguration> ServerSideEncryptionConfiguration { get; private set; } = null!;

        /// <summary>
        /// A map of tags to assign to the bucket. If configured with a provider [`default_tags` configuration block](https://www.terraform.io/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        /// <summary>
        /// The [versioning](https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html) state of the bucket.
        /// </summary>
        [Output("versioning")]
        public Output<Outputs.BucketV2Versioning> Versioning { get; private set; } = null!;

        /// <summary>
        /// The website configuration, if configured.
        /// </summary>
        [Output("website")]
        public Output<Outputs.BucketV2Website> Website { get; private set; } = null!;

        /// <summary>
        /// The domain of the website endpoint, if the bucket is configured with a website. If not, this will be an empty string. This is used to create Route 53 alias records.
        /// </summary>
        [Output("websiteDomain")]
        public Output<string> WebsiteDomain { get; private set; } = null!;

        /// <summary>
        /// The website endpoint, if the bucket is configured with a website. If not, this will be an empty string.
        /// </summary>
        [Output("websiteEndpoint")]
        public Output<string> WebsiteEndpoint { get; private set; } = null!;


        /// <summary>
        /// Create a BucketV2 resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BucketV2(string name, BucketV2Args? args = null, CustomResourceOptions? options = null)
            : base("aws:s3/bucketV2:BucketV2", name, args ?? new BucketV2Args(), MakeResourceOptions(options, ""))
        {
        }

        private BucketV2(string name, Input<string> id, BucketV2State? state = null, CustomResourceOptions? options = null)
            : base("aws:s3/bucketV2:BucketV2", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new Pulumi.Alias { Type = "aws:s3/bucket:Bucket"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BucketV2 resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BucketV2 Get(string name, Input<string> id, BucketV2State? state = null, CustomResourceOptions? options = null)
        {
            return new BucketV2(name, id, state, options);
        }
    }

    public sealed class BucketV2Args : Pulumi.ResourceArgs
    {
        [Input("accelerationStatus")]
        public Input<string>? AccelerationStatus { get; set; }

        [Input("acl")]
        public Input<string>? Acl { get; set; }

        /// <summary>
        /// The ARN of the bucket. Will be of format `arn:aws:s3:::bucketname`.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// The name of the bucket. If omitted, this provider will assign a random, unique name. Must be lowercase and less than or equal to 63 characters in length. A full list of bucket naming rules [may be found here](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html).
        /// </summary>
        [Input("bucket")]
        public Input<string>? Bucket { get; set; }

        /// <summary>
        /// Creates a unique bucket name beginning with the specified prefix. Conflicts with `bucket`. Must be lowercase and less than or equal to 37 characters in length. A full list of bucket naming rules [may be found here](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html).
        /// </summary>
        [Input("bucketPrefix")]
        public Input<string>? BucketPrefix { get; set; }

        [Input("corsRules")]
        private InputList<Inputs.BucketV2CorsRuleArgs>? _corsRules;
        [Obsolete(@"Use the aws_s3_bucket_cors_configuration resource instead")]
        public InputList<Inputs.BucketV2CorsRuleArgs> CorsRules
        {
            get => _corsRules ?? (_corsRules = new InputList<Inputs.BucketV2CorsRuleArgs>());
            set => _corsRules = value;
        }

        /// <summary>
        /// A boolean that indicates all objects (including any [locked objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html)) should be deleted from the bucket so that the bucket can be destroyed without error. These objects are *not* recoverable.
        /// </summary>
        [Input("forceDestroy")]
        public Input<bool>? ForceDestroy { get; set; }

        [Input("grants")]
        private InputList<Inputs.BucketV2GrantArgs>? _grants;
        [Obsolete(@"Use the aws_s3_bucket_acl resource instead")]
        public InputList<Inputs.BucketV2GrantArgs> Grants
        {
            get => _grants ?? (_grants = new InputList<Inputs.BucketV2GrantArgs>());
            set => _grants = value;
        }

        /// <summary>
        /// The [Route 53 Hosted Zone ID](https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_website_region_endpoints) for this bucket's region.
        /// </summary>
        [Input("hostedZoneId")]
        public Input<string>? HostedZoneId { get; set; }

        [Input("lifecycleRules")]
        private InputList<Inputs.BucketV2LifecycleRuleArgs>? _lifecycleRules;
        [Obsolete(@"Use the aws_s3_bucket_lifecycle_configuration resource instead")]
        public InputList<Inputs.BucketV2LifecycleRuleArgs> LifecycleRules
        {
            get => _lifecycleRules ?? (_lifecycleRules = new InputList<Inputs.BucketV2LifecycleRuleArgs>());
            set => _lifecycleRules = value;
        }

        [Input("logging")]
        public Input<Inputs.BucketV2LoggingArgs>? Logging { get; set; }

        [Input("objectLockConfiguration")]
        public Input<Inputs.BucketV2ObjectLockConfigurationArgs>? ObjectLockConfiguration { get; set; }

        /// <summary>
        /// Indicates whether this bucket has an Object Lock configuration enabled.
        /// &lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD
        /// </summary>
        [Input("objectLockEnabled")]
        public Input<bool>? ObjectLockEnabled { get; set; }

        [Input("policy")]
        public Input<string>? Policy { get; set; }

        /// <summary>
        /// The [replication configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/crr.html).
        /// </summary>
        [Input("replicationConfiguration")]
        public Input<Inputs.BucketV2ReplicationConfigurationArgs>? ReplicationConfiguration { get; set; }

        /// <summary>
        /// Either `BucketOwner` or `Requester` that pays for the download and request fees.
        /// </summary>
        [Input("requestPayer")]
        public Input<string>? RequestPayer { get; set; }

        /// <summary>
        /// The [server-side encryption configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html).
        /// </summary>
        [Input("serverSideEncryptionConfiguration")]
        public Input<Inputs.BucketV2ServerSideEncryptionConfigurationArgs>? ServerSideEncryptionConfiguration { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the bucket. If configured with a provider [`default_tags` configuration block](https://www.terraform.io/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The [versioning](https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html) state of the bucket.
        /// </summary>
        [Input("versioning")]
        public Input<Inputs.BucketV2VersioningArgs>? Versioning { get; set; }

        /// <summary>
        /// The website configuration, if configured.
        /// </summary>
        [Input("website")]
        public Input<Inputs.BucketV2WebsiteArgs>? Website { get; set; }

        public BucketV2Args()
        {
        }
    }

    public sealed class BucketV2State : Pulumi.ResourceArgs
    {
        [Input("accelerationStatus")]
        public Input<string>? AccelerationStatus { get; set; }

        [Input("acl")]
        public Input<string>? Acl { get; set; }

        /// <summary>
        /// The ARN of the bucket. Will be of format `arn:aws:s3:::bucketname`.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// The name of the bucket. If omitted, this provider will assign a random, unique name. Must be lowercase and less than or equal to 63 characters in length. A full list of bucket naming rules [may be found here](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html).
        /// </summary>
        [Input("bucket")]
        public Input<string>? Bucket { get; set; }

        /// <summary>
        /// The bucket domain name. Will be of format `bucketname.s3.amazonaws.com`.
        /// </summary>
        [Input("bucketDomainName")]
        public Input<string>? BucketDomainName { get; set; }

        /// <summary>
        /// Creates a unique bucket name beginning with the specified prefix. Conflicts with `bucket`. Must be lowercase and less than or equal to 37 characters in length. A full list of bucket naming rules [may be found here](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html).
        /// </summary>
        [Input("bucketPrefix")]
        public Input<string>? BucketPrefix { get; set; }

        /// <summary>
        /// The bucket region-specific domain name. The bucket domain name including the region name, please refer [here](https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region) for format. Note: The AWS CloudFront allows specifying S3 region-specific endpoint when creating S3 origin, it will prevent [redirect issues](https://forums.aws.amazon.com/thread.jspa?threadID=216814) from CloudFront to S3 Origin URL.
        /// </summary>
        [Input("bucketRegionalDomainName")]
        public Input<string>? BucketRegionalDomainName { get; set; }

        [Input("corsRules")]
        private InputList<Inputs.BucketV2CorsRuleGetArgs>? _corsRules;
        [Obsolete(@"Use the aws_s3_bucket_cors_configuration resource instead")]
        public InputList<Inputs.BucketV2CorsRuleGetArgs> CorsRules
        {
            get => _corsRules ?? (_corsRules = new InputList<Inputs.BucketV2CorsRuleGetArgs>());
            set => _corsRules = value;
        }

        /// <summary>
        /// A boolean that indicates all objects (including any [locked objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html)) should be deleted from the bucket so that the bucket can be destroyed without error. These objects are *not* recoverable.
        /// </summary>
        [Input("forceDestroy")]
        public Input<bool>? ForceDestroy { get; set; }

        [Input("grants")]
        private InputList<Inputs.BucketV2GrantGetArgs>? _grants;
        [Obsolete(@"Use the aws_s3_bucket_acl resource instead")]
        public InputList<Inputs.BucketV2GrantGetArgs> Grants
        {
            get => _grants ?? (_grants = new InputList<Inputs.BucketV2GrantGetArgs>());
            set => _grants = value;
        }

        /// <summary>
        /// The [Route 53 Hosted Zone ID](https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_website_region_endpoints) for this bucket's region.
        /// </summary>
        [Input("hostedZoneId")]
        public Input<string>? HostedZoneId { get; set; }

        [Input("lifecycleRules")]
        private InputList<Inputs.BucketV2LifecycleRuleGetArgs>? _lifecycleRules;
        [Obsolete(@"Use the aws_s3_bucket_lifecycle_configuration resource instead")]
        public InputList<Inputs.BucketV2LifecycleRuleGetArgs> LifecycleRules
        {
            get => _lifecycleRules ?? (_lifecycleRules = new InputList<Inputs.BucketV2LifecycleRuleGetArgs>());
            set => _lifecycleRules = value;
        }

        [Input("logging")]
        public Input<Inputs.BucketV2LoggingGetArgs>? Logging { get; set; }

        [Input("objectLockConfiguration")]
        public Input<Inputs.BucketV2ObjectLockConfigurationGetArgs>? ObjectLockConfiguration { get; set; }

        /// <summary>
        /// Indicates whether this bucket has an Object Lock configuration enabled.
        /// &lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD
        /// </summary>
        [Input("objectLockEnabled")]
        public Input<bool>? ObjectLockEnabled { get; set; }

        [Input("policy")]
        public Input<string>? Policy { get; set; }

        /// <summary>
        /// The AWS region this bucket resides in.
        /// &lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The [replication configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/crr.html).
        /// </summary>
        [Input("replicationConfiguration")]
        public Input<Inputs.BucketV2ReplicationConfigurationGetArgs>? ReplicationConfiguration { get; set; }

        /// <summary>
        /// Either `BucketOwner` or `Requester` that pays for the download and request fees.
        /// </summary>
        [Input("requestPayer")]
        public Input<string>? RequestPayer { get; set; }

        /// <summary>
        /// The [server-side encryption configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html).
        /// </summary>
        [Input("serverSideEncryptionConfiguration")]
        public Input<Inputs.BucketV2ServerSideEncryptionConfigurationGetArgs>? ServerSideEncryptionConfiguration { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the bucket. If configured with a provider [`default_tags` configuration block](https://www.terraform.io/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        /// <summary>
        /// The [versioning](https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html) state of the bucket.
        /// </summary>
        [Input("versioning")]
        public Input<Inputs.BucketV2VersioningGetArgs>? Versioning { get; set; }

        /// <summary>
        /// The website configuration, if configured.
        /// </summary>
        [Input("website")]
        public Input<Inputs.BucketV2WebsiteGetArgs>? Website { get; set; }

        /// <summary>
        /// The domain of the website endpoint, if the bucket is configured with a website. If not, this will be an empty string. This is used to create Route 53 alias records.
        /// </summary>
        [Input("websiteDomain")]
        public Input<string>? WebsiteDomain { get; set; }

        /// <summary>
        /// The website endpoint, if the bucket is configured with a website. If not, this will be an empty string.
        /// </summary>
        [Input("websiteEndpoint")]
        public Input<string>? WebsiteEndpoint { get; set; }

        public BucketV2State()
        {
        }
    }
}
