// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.S3
{
    [AwsResourceType("aws:s3/bucketV2:BucketV2")]
    public partial class BucketV2 : global::Pulumi.CustomResource
    {
        [Output("accelerationStatus")]
        public Output<string> AccelerationStatus { get; private set; } = null!;

        [Output("acl")]
        public Output<string> Acl { get; private set; } = null!;

        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("bucket")]
        public Output<string> Bucket { get; private set; } = null!;

        [Output("bucketDomainName")]
        public Output<string> BucketDomainName { get; private set; } = null!;

        [Output("bucketPrefix")]
        public Output<string?> BucketPrefix { get; private set; } = null!;

        [Output("bucketRegionalDomainName")]
        public Output<string> BucketRegionalDomainName { get; private set; } = null!;

        [Output("corsRules")]
        public Output<ImmutableArray<Outputs.BucketV2CorsRule>> CorsRules { get; private set; } = null!;

        [Output("forceDestroy")]
        public Output<bool?> ForceDestroy { get; private set; } = null!;

        [Output("grants")]
        public Output<ImmutableArray<Outputs.BucketV2Grant>> Grants { get; private set; } = null!;

        [Output("hostedZoneId")]
        public Output<string> HostedZoneId { get; private set; } = null!;

        [Output("lifecycleRules")]
        public Output<ImmutableArray<Outputs.BucketV2LifecycleRule>> LifecycleRules { get; private set; } = null!;

        [Output("loggings")]
        public Output<ImmutableArray<Outputs.BucketV2Logging>> Loggings { get; private set; } = null!;

        [Output("objectLockConfiguration")]
        public Output<Outputs.BucketV2ObjectLockConfiguration> ObjectLockConfiguration { get; private set; } = null!;

        [Output("objectLockEnabled")]
        public Output<bool> ObjectLockEnabled { get; private set; } = null!;

        [Output("policy")]
        public Output<string> Policy { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        [Output("replicationConfigurations")]
        public Output<ImmutableArray<Outputs.BucketV2ReplicationConfiguration>> ReplicationConfigurations { get; private set; } = null!;

        [Output("requestPayer")]
        public Output<string> RequestPayer { get; private set; } = null!;

        [Output("serverSideEncryptionConfigurations")]
        public Output<ImmutableArray<Outputs.BucketV2ServerSideEncryptionConfiguration>> ServerSideEncryptionConfigurations { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("versionings")]
        public Output<ImmutableArray<Outputs.BucketV2Versioning>> Versionings { get; private set; } = null!;

        [Output("websiteDomain")]
        public Output<string> WebsiteDomain { get; private set; } = null!;

        [Output("websiteEndpoint")]
        public Output<string> WebsiteEndpoint { get; private set; } = null!;

        [Output("websites")]
        public Output<ImmutableArray<Outputs.BucketV2Website>> Websites { get; private set; } = null!;


        /// <summary>
        /// Create a BucketV2 resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BucketV2(string name, BucketV2Args? args = null, CustomResourceOptions? options = null)
            : base("aws:s3/bucketV2:BucketV2", name, args ?? new BucketV2Args(), MakeResourceOptions(options, ""))
        {
        }

        private BucketV2(string name, Input<string> id, BucketV2State? state = null, CustomResourceOptions? options = null)
            : base("aws:s3/bucketV2:BucketV2", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "aws:s3/bucket:Bucket"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BucketV2 resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BucketV2 Get(string name, Input<string> id, BucketV2State? state = null, CustomResourceOptions? options = null)
        {
            return new BucketV2(name, id, state, options);
        }
    }

    public sealed class BucketV2Args : global::Pulumi.ResourceArgs
    {
        [Input("accelerationStatus")]
        public Input<string>? AccelerationStatus { get; set; }

        [Input("acl")]
        public Input<string>? Acl { get; set; }

        [Input("bucket")]
        public Input<string>? Bucket { get; set; }

        [Input("bucketPrefix")]
        public Input<string>? BucketPrefix { get; set; }

        [Input("corsRules")]
        private InputList<Inputs.BucketV2CorsRuleArgs>? _corsRules;
        [Obsolete(@"Use the aws_s3_bucket_cors_configuration resource instead")]
        public InputList<Inputs.BucketV2CorsRuleArgs> CorsRules
        {
            get => _corsRules ?? (_corsRules = new InputList<Inputs.BucketV2CorsRuleArgs>());
            set => _corsRules = value;
        }

        [Input("forceDestroy")]
        public Input<bool>? ForceDestroy { get; set; }

        [Input("grants")]
        private InputList<Inputs.BucketV2GrantArgs>? _grants;
        [Obsolete(@"Use the aws_s3_bucket_acl resource instead")]
        public InputList<Inputs.BucketV2GrantArgs> Grants
        {
            get => _grants ?? (_grants = new InputList<Inputs.BucketV2GrantArgs>());
            set => _grants = value;
        }

        [Input("lifecycleRules")]
        private InputList<Inputs.BucketV2LifecycleRuleArgs>? _lifecycleRules;
        [Obsolete(@"Use the aws_s3_bucket_lifecycle_configuration resource instead")]
        public InputList<Inputs.BucketV2LifecycleRuleArgs> LifecycleRules
        {
            get => _lifecycleRules ?? (_lifecycleRules = new InputList<Inputs.BucketV2LifecycleRuleArgs>());
            set => _lifecycleRules = value;
        }

        [Input("loggings")]
        private InputList<Inputs.BucketV2LoggingArgs>? _loggings;
        [Obsolete(@"Use the aws_s3_bucket_logging resource instead")]
        public InputList<Inputs.BucketV2LoggingArgs> Loggings
        {
            get => _loggings ?? (_loggings = new InputList<Inputs.BucketV2LoggingArgs>());
            set => _loggings = value;
        }

        [Input("objectLockConfiguration")]
        public Input<Inputs.BucketV2ObjectLockConfigurationArgs>? ObjectLockConfiguration { get; set; }

        [Input("objectLockEnabled")]
        public Input<bool>? ObjectLockEnabled { get; set; }

        [Input("policy")]
        public Input<string>? Policy { get; set; }

        [Input("replicationConfigurations")]
        private InputList<Inputs.BucketV2ReplicationConfigurationArgs>? _replicationConfigurations;
        [Obsolete(@"Use the aws_s3_bucket_replication_configuration resource instead")]
        public InputList<Inputs.BucketV2ReplicationConfigurationArgs> ReplicationConfigurations
        {
            get => _replicationConfigurations ?? (_replicationConfigurations = new InputList<Inputs.BucketV2ReplicationConfigurationArgs>());
            set => _replicationConfigurations = value;
        }

        [Input("requestPayer")]
        public Input<string>? RequestPayer { get; set; }

        [Input("serverSideEncryptionConfigurations")]
        private InputList<Inputs.BucketV2ServerSideEncryptionConfigurationArgs>? _serverSideEncryptionConfigurations;
        [Obsolete(@"Use the aws_s3_bucket_server_side_encryption_configuration resource instead")]
        public InputList<Inputs.BucketV2ServerSideEncryptionConfigurationArgs> ServerSideEncryptionConfigurations
        {
            get => _serverSideEncryptionConfigurations ?? (_serverSideEncryptionConfigurations = new InputList<Inputs.BucketV2ServerSideEncryptionConfigurationArgs>());
            set => _serverSideEncryptionConfigurations = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("versionings")]
        private InputList<Inputs.BucketV2VersioningArgs>? _versionings;
        [Obsolete(@"Use the aws_s3_bucket_versioning resource instead")]
        public InputList<Inputs.BucketV2VersioningArgs> Versionings
        {
            get => _versionings ?? (_versionings = new InputList<Inputs.BucketV2VersioningArgs>());
            set => _versionings = value;
        }

        [Input("websites")]
        private InputList<Inputs.BucketV2WebsiteArgs>? _websites;
        [Obsolete(@"Use the aws_s3_bucket_website_configuration resource instead")]
        public InputList<Inputs.BucketV2WebsiteArgs> Websites
        {
            get => _websites ?? (_websites = new InputList<Inputs.BucketV2WebsiteArgs>());
            set => _websites = value;
        }

        public BucketV2Args()
        {
        }
        public static new BucketV2Args Empty => new BucketV2Args();
    }

    public sealed class BucketV2State : global::Pulumi.ResourceArgs
    {
        [Input("accelerationStatus")]
        public Input<string>? AccelerationStatus { get; set; }

        [Input("acl")]
        public Input<string>? Acl { get; set; }

        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("bucket")]
        public Input<string>? Bucket { get; set; }

        [Input("bucketDomainName")]
        public Input<string>? BucketDomainName { get; set; }

        [Input("bucketPrefix")]
        public Input<string>? BucketPrefix { get; set; }

        [Input("bucketRegionalDomainName")]
        public Input<string>? BucketRegionalDomainName { get; set; }

        [Input("corsRules")]
        private InputList<Inputs.BucketV2CorsRuleGetArgs>? _corsRules;
        [Obsolete(@"Use the aws_s3_bucket_cors_configuration resource instead")]
        public InputList<Inputs.BucketV2CorsRuleGetArgs> CorsRules
        {
            get => _corsRules ?? (_corsRules = new InputList<Inputs.BucketV2CorsRuleGetArgs>());
            set => _corsRules = value;
        }

        [Input("forceDestroy")]
        public Input<bool>? ForceDestroy { get; set; }

        [Input("grants")]
        private InputList<Inputs.BucketV2GrantGetArgs>? _grants;
        [Obsolete(@"Use the aws_s3_bucket_acl resource instead")]
        public InputList<Inputs.BucketV2GrantGetArgs> Grants
        {
            get => _grants ?? (_grants = new InputList<Inputs.BucketV2GrantGetArgs>());
            set => _grants = value;
        }

        [Input("hostedZoneId")]
        public Input<string>? HostedZoneId { get; set; }

        [Input("lifecycleRules")]
        private InputList<Inputs.BucketV2LifecycleRuleGetArgs>? _lifecycleRules;
        [Obsolete(@"Use the aws_s3_bucket_lifecycle_configuration resource instead")]
        public InputList<Inputs.BucketV2LifecycleRuleGetArgs> LifecycleRules
        {
            get => _lifecycleRules ?? (_lifecycleRules = new InputList<Inputs.BucketV2LifecycleRuleGetArgs>());
            set => _lifecycleRules = value;
        }

        [Input("loggings")]
        private InputList<Inputs.BucketV2LoggingGetArgs>? _loggings;
        [Obsolete(@"Use the aws_s3_bucket_logging resource instead")]
        public InputList<Inputs.BucketV2LoggingGetArgs> Loggings
        {
            get => _loggings ?? (_loggings = new InputList<Inputs.BucketV2LoggingGetArgs>());
            set => _loggings = value;
        }

        [Input("objectLockConfiguration")]
        public Input<Inputs.BucketV2ObjectLockConfigurationGetArgs>? ObjectLockConfiguration { get; set; }

        [Input("objectLockEnabled")]
        public Input<bool>? ObjectLockEnabled { get; set; }

        [Input("policy")]
        public Input<string>? Policy { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("replicationConfigurations")]
        private InputList<Inputs.BucketV2ReplicationConfigurationGetArgs>? _replicationConfigurations;
        [Obsolete(@"Use the aws_s3_bucket_replication_configuration resource instead")]
        public InputList<Inputs.BucketV2ReplicationConfigurationGetArgs> ReplicationConfigurations
        {
            get => _replicationConfigurations ?? (_replicationConfigurations = new InputList<Inputs.BucketV2ReplicationConfigurationGetArgs>());
            set => _replicationConfigurations = value;
        }

        [Input("requestPayer")]
        public Input<string>? RequestPayer { get; set; }

        [Input("serverSideEncryptionConfigurations")]
        private InputList<Inputs.BucketV2ServerSideEncryptionConfigurationGetArgs>? _serverSideEncryptionConfigurations;
        [Obsolete(@"Use the aws_s3_bucket_server_side_encryption_configuration resource instead")]
        public InputList<Inputs.BucketV2ServerSideEncryptionConfigurationGetArgs> ServerSideEncryptionConfigurations
        {
            get => _serverSideEncryptionConfigurations ?? (_serverSideEncryptionConfigurations = new InputList<Inputs.BucketV2ServerSideEncryptionConfigurationGetArgs>());
            set => _serverSideEncryptionConfigurations = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("versionings")]
        private InputList<Inputs.BucketV2VersioningGetArgs>? _versionings;
        [Obsolete(@"Use the aws_s3_bucket_versioning resource instead")]
        public InputList<Inputs.BucketV2VersioningGetArgs> Versionings
        {
            get => _versionings ?? (_versionings = new InputList<Inputs.BucketV2VersioningGetArgs>());
            set => _versionings = value;
        }

        [Input("websiteDomain")]
        public Input<string>? WebsiteDomain { get; set; }

        [Input("websiteEndpoint")]
        public Input<string>? WebsiteEndpoint { get; set; }

        [Input("websites")]
        private InputList<Inputs.BucketV2WebsiteGetArgs>? _websites;
        [Obsolete(@"Use the aws_s3_bucket_website_configuration resource instead")]
        public InputList<Inputs.BucketV2WebsiteGetArgs> Websites
        {
            get => _websites ?? (_websites = new InputList<Inputs.BucketV2WebsiteGetArgs>());
            set => _websites = value;
        }

        public BucketV2State()
        {
        }
        public static new BucketV2State Empty => new BucketV2State();
    }
}
