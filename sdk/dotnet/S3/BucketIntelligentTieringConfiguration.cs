// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.S3
{
    [AwsResourceType("aws:s3/bucketIntelligentTieringConfiguration:BucketIntelligentTieringConfiguration")]
    public partial class BucketIntelligentTieringConfiguration : global::Pulumi.CustomResource
    {
        [Output("bucket")]
        public Output<string> Bucket { get; private set; } = null!;

        [Output("filter")]
        public Output<Outputs.BucketIntelligentTieringConfigurationFilter?> Filter { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("status")]
        public Output<string?> Status { get; private set; } = null!;

        [Output("tierings")]
        public Output<ImmutableArray<Outputs.BucketIntelligentTieringConfigurationTiering>> Tierings { get; private set; } = null!;


        /// <summary>
        /// Create a BucketIntelligentTieringConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BucketIntelligentTieringConfiguration(string name, BucketIntelligentTieringConfigurationArgs args, CustomResourceOptions? options = null)
            : base("aws:s3/bucketIntelligentTieringConfiguration:BucketIntelligentTieringConfiguration", name, args ?? new BucketIntelligentTieringConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BucketIntelligentTieringConfiguration(string name, Input<string> id, BucketIntelligentTieringConfigurationState? state = null, CustomResourceOptions? options = null)
            : base("aws:s3/bucketIntelligentTieringConfiguration:BucketIntelligentTieringConfiguration", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BucketIntelligentTieringConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BucketIntelligentTieringConfiguration Get(string name, Input<string> id, BucketIntelligentTieringConfigurationState? state = null, CustomResourceOptions? options = null)
        {
            return new BucketIntelligentTieringConfiguration(name, id, state, options);
        }
    }

    public sealed class BucketIntelligentTieringConfigurationArgs : global::Pulumi.ResourceArgs
    {
        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        [Input("filter")]
        public Input<Inputs.BucketIntelligentTieringConfigurationFilterArgs>? Filter { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tierings", required: true)]
        private InputList<Inputs.BucketIntelligentTieringConfigurationTieringArgs>? _tierings;
        public InputList<Inputs.BucketIntelligentTieringConfigurationTieringArgs> Tierings
        {
            get => _tierings ?? (_tierings = new InputList<Inputs.BucketIntelligentTieringConfigurationTieringArgs>());
            set => _tierings = value;
        }

        public BucketIntelligentTieringConfigurationArgs()
        {
        }
        public static new BucketIntelligentTieringConfigurationArgs Empty => new BucketIntelligentTieringConfigurationArgs();
    }

    public sealed class BucketIntelligentTieringConfigurationState : global::Pulumi.ResourceArgs
    {
        [Input("bucket")]
        public Input<string>? Bucket { get; set; }

        [Input("filter")]
        public Input<Inputs.BucketIntelligentTieringConfigurationFilterGetArgs>? Filter { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tierings")]
        private InputList<Inputs.BucketIntelligentTieringConfigurationTieringGetArgs>? _tierings;
        public InputList<Inputs.BucketIntelligentTieringConfigurationTieringGetArgs> Tierings
        {
            get => _tierings ?? (_tierings = new InputList<Inputs.BucketIntelligentTieringConfigurationTieringGetArgs>());
            set => _tierings = value;
        }

        public BucketIntelligentTieringConfigurationState()
        {
        }
        public static new BucketIntelligentTieringConfigurationState Empty => new BucketIntelligentTieringConfigurationState();
    }
}
