// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.S3
{
    public static class GetBucketPolicy
    {
        /// <summary>
        /// The bucket policy data source returns IAM policy of an S3 bucket.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// The following example retrieves IAM policy of a specified S3 bucket.
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(Aws.S3.GetBucketPolicy.InvokeAsync(new Aws.S3.GetBucketPolicyArgs
        ///         {
        ///             Bucket = "example-bucket-name",
        ///         }));
        ///         this.Foo = example.Apply(example =&gt; example.Policy);
        ///     }
        /// 
        ///     [Output("foo")]
        ///     public Output&lt;string&gt; Foo { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetBucketPolicyResult> InvokeAsync(GetBucketPolicyArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetBucketPolicyResult>("aws:s3/getBucketPolicy:getBucketPolicy", args ?? new GetBucketPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// The bucket policy data source returns IAM policy of an S3 bucket.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// The following example retrieves IAM policy of a specified S3 bucket.
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(Aws.S3.GetBucketPolicy.InvokeAsync(new Aws.S3.GetBucketPolicyArgs
        ///         {
        ///             Bucket = "example-bucket-name",
        ///         }));
        ///         this.Foo = example.Apply(example =&gt; example.Policy);
        ///     }
        /// 
        ///     [Output("foo")]
        ///     public Output&lt;string&gt; Foo { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetBucketPolicyResult> Invoke(GetBucketPolicyInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetBucketPolicyResult>("aws:s3/getBucketPolicy:getBucketPolicy", args ?? new GetBucketPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBucketPolicyArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The bucket name.
        /// </summary>
        [Input("bucket", required: true)]
        public string Bucket { get; set; } = null!;

        public GetBucketPolicyArgs()
        {
        }
    }

    public sealed class GetBucketPolicyInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The bucket name.
        /// </summary>
        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        public GetBucketPolicyInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetBucketPolicyResult
    {
        public readonly string Bucket;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// IAM bucket policy.
        /// </summary>
        public readonly string Policy;

        [OutputConstructor]
        private GetBucketPolicyResult(
            string bucket,

            string id,

            string policy)
        {
            Bucket = bucket;
            Id = id;
            Policy = policy;
        }
    }
}
