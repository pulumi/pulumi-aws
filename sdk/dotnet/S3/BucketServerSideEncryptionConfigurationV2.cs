// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.S3
{
    /// <summary>
    /// Provides a S3 bucket server-side encryption configuration resource.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var mykey = new Aws.Kms.Key("mykey", new()
    ///     {
    ///         Description = "This key is used to encrypt bucket objects",
    ///         DeletionWindowInDays = 10,
    ///     });
    /// 
    ///     var mybucket = new Aws.S3.BucketV2("mybucket");
    /// 
    ///     var example = new Aws.S3.BucketServerSideEncryptionConfigurationV2("example", new()
    ///     {
    ///         Bucket = mybucket.Id,
    ///         Rules = new[]
    ///         {
    ///             new Aws.S3.Inputs.BucketServerSideEncryptionConfigurationV2RuleArgs
    ///             {
    ///                 ApplyServerSideEncryptionByDefault = new Aws.S3.Inputs.BucketServerSideEncryptionConfigurationV2RuleApplyServerSideEncryptionByDefaultArgs
    ///                 {
    ///                     KmsMasterKeyId = mykey.Arn,
    ///                     SseAlgorithm = "aws:kms",
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// S3 bucket server-side encryption configuration can be imported in one of two ways. If the owner (account ID) of the source bucket is the same account used to configure the AWS Provider, the S3 server-side encryption configuration resource should be imported using the `bucket` e.g.,
    /// 
    /// ```sh
    ///  $ pulumi import aws:s3/bucketServerSideEncryptionConfigurationV2:BucketServerSideEncryptionConfigurationV2 example bucket-name
    /// ```
    /// 
    ///  If the owner (account ID) of the source bucket differs from the account used to configure the AWS Provider, the S3 bucket server-side encryption configuration resource should be imported using the `bucket` and `expected_bucket_owner` separated by a comma (`,`) e.g.,
    /// 
    /// ```sh
    ///  $ pulumi import aws:s3/bucketServerSideEncryptionConfigurationV2:BucketServerSideEncryptionConfigurationV2 example bucket-name,123456789012
    /// ```
    /// </summary>
    [AwsResourceType("aws:s3/bucketServerSideEncryptionConfigurationV2:BucketServerSideEncryptionConfigurationV2")]
    public partial class BucketServerSideEncryptionConfigurationV2 : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ID (name) of the bucket.
        /// </summary>
        [Output("bucket")]
        public Output<string> Bucket { get; private set; } = null!;

        /// <summary>
        /// Account ID of the expected bucket owner.
        /// </summary>
        [Output("expectedBucketOwner")]
        public Output<string?> ExpectedBucketOwner { get; private set; } = null!;

        /// <summary>
        /// Set of server-side encryption configuration rules. See below. Currently, only a single rule is supported.
        /// </summary>
        [Output("rules")]
        public Output<ImmutableArray<Outputs.BucketServerSideEncryptionConfigurationV2Rule>> Rules { get; private set; } = null!;


        /// <summary>
        /// Create a BucketServerSideEncryptionConfigurationV2 resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BucketServerSideEncryptionConfigurationV2(string name, BucketServerSideEncryptionConfigurationV2Args args, CustomResourceOptions? options = null)
            : base("aws:s3/bucketServerSideEncryptionConfigurationV2:BucketServerSideEncryptionConfigurationV2", name, args ?? new BucketServerSideEncryptionConfigurationV2Args(), MakeResourceOptions(options, ""))
        {
        }

        private BucketServerSideEncryptionConfigurationV2(string name, Input<string> id, BucketServerSideEncryptionConfigurationV2State? state = null, CustomResourceOptions? options = null)
            : base("aws:s3/bucketServerSideEncryptionConfigurationV2:BucketServerSideEncryptionConfigurationV2", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BucketServerSideEncryptionConfigurationV2 resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BucketServerSideEncryptionConfigurationV2 Get(string name, Input<string> id, BucketServerSideEncryptionConfigurationV2State? state = null, CustomResourceOptions? options = null)
        {
            return new BucketServerSideEncryptionConfigurationV2(name, id, state, options);
        }
    }

    public sealed class BucketServerSideEncryptionConfigurationV2Args : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ID (name) of the bucket.
        /// </summary>
        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        /// <summary>
        /// Account ID of the expected bucket owner.
        /// </summary>
        [Input("expectedBucketOwner")]
        public Input<string>? ExpectedBucketOwner { get; set; }

        [Input("rules", required: true)]
        private InputList<Inputs.BucketServerSideEncryptionConfigurationV2RuleArgs>? _rules;

        /// <summary>
        /// Set of server-side encryption configuration rules. See below. Currently, only a single rule is supported.
        /// </summary>
        public InputList<Inputs.BucketServerSideEncryptionConfigurationV2RuleArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.BucketServerSideEncryptionConfigurationV2RuleArgs>());
            set => _rules = value;
        }

        public BucketServerSideEncryptionConfigurationV2Args()
        {
        }
        public static new BucketServerSideEncryptionConfigurationV2Args Empty => new BucketServerSideEncryptionConfigurationV2Args();
    }

    public sealed class BucketServerSideEncryptionConfigurationV2State : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ID (name) of the bucket.
        /// </summary>
        [Input("bucket")]
        public Input<string>? Bucket { get; set; }

        /// <summary>
        /// Account ID of the expected bucket owner.
        /// </summary>
        [Input("expectedBucketOwner")]
        public Input<string>? ExpectedBucketOwner { get; set; }

        [Input("rules")]
        private InputList<Inputs.BucketServerSideEncryptionConfigurationV2RuleGetArgs>? _rules;

        /// <summary>
        /// Set of server-side encryption configuration rules. See below. Currently, only a single rule is supported.
        /// </summary>
        public InputList<Inputs.BucketServerSideEncryptionConfigurationV2RuleGetArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.BucketServerSideEncryptionConfigurationV2RuleGetArgs>());
            set => _rules = value;
        }

        public BucketServerSideEncryptionConfigurationV2State()
        {
        }
        public static new BucketServerSideEncryptionConfigurationV2State Empty => new BucketServerSideEncryptionConfigurationV2State();
    }
}
