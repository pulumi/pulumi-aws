// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.S3
{
    /// <summary>
    /// Provides an S3 bucket CORS configuration resource. For more information about CORS, go to [Enabling Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/userguide/cors.html) in the Amazon S3 User Guide.
    /// 
    /// &gt; **NOTE:** S3 Buckets only support a single CORS configuration. Declaring multiple `aws.s3.BucketCorsConfiguration` resources to the same S3 Bucket will cause a perpetual difference in configuration.
    /// 
    /// &gt; This resource cannot be used with S3 directory buckets.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.S3.Bucket("example", new()
    ///     {
    ///         BucketName = "mybucket",
    ///     });
    /// 
    ///     var exampleBucketCorsConfiguration = new Aws.S3.BucketCorsConfiguration("example", new()
    ///     {
    ///         Bucket = example.Id,
    ///         CorsRules = new[]
    ///         {
    ///             new Aws.S3.Inputs.BucketCorsConfigurationCorsRuleArgs
    ///             {
    ///                 AllowedHeaders = new[]
    ///                 {
    ///                     "*",
    ///                 },
    ///                 AllowedMethods = new[]
    ///                 {
    ///                     "PUT",
    ///                     "POST",
    ///                 },
    ///                 AllowedOrigins = new[]
    ///                 {
    ///                     "https://s3-website-test.domain.example",
    ///                 },
    ///                 ExposeHeaders = new[]
    ///                 {
    ///                     "ETag",
    ///                 },
    ///                 MaxAgeSeconds = 3000,
    ///             },
    ///             new Aws.S3.Inputs.BucketCorsConfigurationCorsRuleArgs
    ///             {
    ///                 AllowedMethods = new[]
    ///                 {
    ///                     "GET",
    ///                 },
    ///                 AllowedOrigins = new[]
    ///                 {
    ///                     "*",
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ### Identity Schema
    /// 
    /// #### Required
    /// 
    /// * `bucket` (String) S3 bucket name.
    /// 
    /// #### Optional
    /// 
    /// * `account_id` (String) AWS Account where this resource is managed.
    /// 
    /// * `expected_bucket_owner` (String) Account ID of the expected bucket owner.
    /// 
    /// * `region` (String) Region where this resource is managed.
    /// 
    /// If the owner (account ID) of the source bucket differs from the account used to configure the AWS Provider, import using the `bucket` and `expected_bucket_owner` separated by a comma (`,`):
    /// 
    /// terraform
    /// 
    /// import {
    /// 
    ///   to = aws_s3_bucket_cors_configuration.example
    /// 
    ///   id = "bucket-name,123456789012"
    /// 
    /// }
    /// 
    /// **Using `pulumi import` to import** S3 bucket CORS configuration using the `bucket` or using the `bucket` and `expected_bucket_owner` separated by a comma (`,`). For example:
    /// 
    /// If the owner (account ID) of the source bucket is the same account used to configure the AWS Provider, import using the `bucket`:
    /// 
    /// console
    /// 
    /// % pulumi import aws_s3_bucket_cors_configuration.example bucket-name
    /// 
    /// If the owner (account ID) of the source bucket differs from the account used to configure the AWS Provider, import using the `bucket` and `expected_bucket_owner` separated by a comma (`,`):
    /// 
    /// console
    /// 
    /// % pulumi import aws_s3_bucket_cors_configuration.example bucket-name,123456789012
    /// </summary>
    [AwsResourceType("aws:s3/bucketCorsConfiguration:BucketCorsConfiguration")]
    public partial class BucketCorsConfiguration : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Name of the bucket.
        /// </summary>
        [Output("bucket")]
        public Output<string> Bucket { get; private set; } = null!;

        /// <summary>
        /// Set of origins and methods (cross-origin access that you want to allow). See below. You can configure up to 100 rules.
        /// </summary>
        [Output("corsRules")]
        public Output<ImmutableArray<Outputs.BucketCorsConfigurationCorsRule>> CorsRules { get; private set; } = null!;

        /// <summary>
        /// Account ID of the expected bucket owner.
        /// </summary>
        [Output("expectedBucketOwner")]
        public Output<string?> ExpectedBucketOwner { get; private set; } = null!;

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;


        /// <summary>
        /// Create a BucketCorsConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BucketCorsConfiguration(string name, BucketCorsConfigurationArgs args, CustomResourceOptions? options = null)
            : base("aws:s3/bucketCorsConfiguration:BucketCorsConfiguration", name, args ?? new BucketCorsConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BucketCorsConfiguration(string name, Input<string> id, BucketCorsConfigurationState? state = null, CustomResourceOptions? options = null)
            : base("aws:s3/bucketCorsConfiguration:BucketCorsConfiguration", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "aws:s3/bucketCorsConfigurationV2:BucketCorsConfigurationV2" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BucketCorsConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BucketCorsConfiguration Get(string name, Input<string> id, BucketCorsConfigurationState? state = null, CustomResourceOptions? options = null)
        {
            return new BucketCorsConfiguration(name, id, state, options);
        }
    }

    public sealed class BucketCorsConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the bucket.
        /// </summary>
        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        [Input("corsRules", required: true)]
        private InputList<Inputs.BucketCorsConfigurationCorsRuleArgs>? _corsRules;

        /// <summary>
        /// Set of origins and methods (cross-origin access that you want to allow). See below. You can configure up to 100 rules.
        /// </summary>
        public InputList<Inputs.BucketCorsConfigurationCorsRuleArgs> CorsRules
        {
            get => _corsRules ?? (_corsRules = new InputList<Inputs.BucketCorsConfigurationCorsRuleArgs>());
            set => _corsRules = value;
        }

        /// <summary>
        /// Account ID of the expected bucket owner.
        /// </summary>
        [Input("expectedBucketOwner")]
        public Input<string>? ExpectedBucketOwner { get; set; }

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public BucketCorsConfigurationArgs()
        {
        }
        public static new BucketCorsConfigurationArgs Empty => new BucketCorsConfigurationArgs();
    }

    public sealed class BucketCorsConfigurationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the bucket.
        /// </summary>
        [Input("bucket")]
        public Input<string>? Bucket { get; set; }

        [Input("corsRules")]
        private InputList<Inputs.BucketCorsConfigurationCorsRuleGetArgs>? _corsRules;

        /// <summary>
        /// Set of origins and methods (cross-origin access that you want to allow). See below. You can configure up to 100 rules.
        /// </summary>
        public InputList<Inputs.BucketCorsConfigurationCorsRuleGetArgs> CorsRules
        {
            get => _corsRules ?? (_corsRules = new InputList<Inputs.BucketCorsConfigurationCorsRuleGetArgs>());
            set => _corsRules = value;
        }

        /// <summary>
        /// Account ID of the expected bucket owner.
        /// </summary>
        [Input("expectedBucketOwner")]
        public Input<string>? ExpectedBucketOwner { get; set; }

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public BucketCorsConfigurationState()
        {
        }
        public static new BucketCorsConfigurationState Empty => new BucketCorsConfigurationState();
    }
}
