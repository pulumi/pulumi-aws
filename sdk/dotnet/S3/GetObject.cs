// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.S3
{
    public static class GetObject
    {
        public static Task<GetObjectResult> InvokeAsync(GetObjectArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetObjectResult>("aws:s3/getObject:getObject", args ?? new GetObjectArgs(), options.WithDefaults());

        public static Output<GetObjectResult> Invoke(GetObjectInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetObjectResult>("aws:s3/getObject:getObject", args ?? new GetObjectInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetObjectArgs : global::Pulumi.InvokeArgs
    {
        [Input("bucket", required: true)]
        public string Bucket { get; set; } = null!;

        [Input("key", required: true)]
        public string Key { get; set; } = null!;

        [Input("range")]
        public string? Range { get; set; }

        [Input("tags")]
        private Dictionary<string, string>? _tags;
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        [Input("versionId")]
        public string? VersionId { get; set; }

        public GetObjectArgs()
        {
        }
        public static new GetObjectArgs Empty => new GetObjectArgs();
    }

    public sealed class GetObjectInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        [Input("range")]
        public Input<string>? Range { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("versionId")]
        public Input<string>? VersionId { get; set; }

        public GetObjectInvokeArgs()
        {
        }
        public static new GetObjectInvokeArgs Empty => new GetObjectInvokeArgs();
    }


    [OutputType]
    public sealed class GetObjectResult
    {
        public readonly string Body;
        public readonly string Bucket;
        public readonly bool BucketKeyEnabled;
        public readonly string CacheControl;
        public readonly string ContentDisposition;
        public readonly string ContentEncoding;
        public readonly string ContentLanguage;
        public readonly int ContentLength;
        public readonly string ContentType;
        public readonly string Etag;
        public readonly string Expiration;
        public readonly string Expires;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Key;
        public readonly string LastModified;
        public readonly ImmutableDictionary<string, string> Metadata;
        public readonly string ObjectLockLegalHoldStatus;
        public readonly string ObjectLockMode;
        public readonly string ObjectLockRetainUntilDate;
        public readonly string? Range;
        public readonly string ServerSideEncryption;
        public readonly string SseKmsKeyId;
        public readonly string StorageClass;
        public readonly ImmutableDictionary<string, string> Tags;
        public readonly string VersionId;
        public readonly string WebsiteRedirectLocation;

        [OutputConstructor]
        private GetObjectResult(
            string body,

            string bucket,

            bool bucketKeyEnabled,

            string cacheControl,

            string contentDisposition,

            string contentEncoding,

            string contentLanguage,

            int contentLength,

            string contentType,

            string etag,

            string expiration,

            string expires,

            string id,

            string key,

            string lastModified,

            ImmutableDictionary<string, string> metadata,

            string objectLockLegalHoldStatus,

            string objectLockMode,

            string objectLockRetainUntilDate,

            string? range,

            string serverSideEncryption,

            string sseKmsKeyId,

            string storageClass,

            ImmutableDictionary<string, string> tags,

            string versionId,

            string websiteRedirectLocation)
        {
            Body = body;
            Bucket = bucket;
            BucketKeyEnabled = bucketKeyEnabled;
            CacheControl = cacheControl;
            ContentDisposition = contentDisposition;
            ContentEncoding = contentEncoding;
            ContentLanguage = contentLanguage;
            ContentLength = contentLength;
            ContentType = contentType;
            Etag = etag;
            Expiration = expiration;
            Expires = expires;
            Id = id;
            Key = key;
            LastModified = lastModified;
            Metadata = metadata;
            ObjectLockLegalHoldStatus = objectLockLegalHoldStatus;
            ObjectLockMode = objectLockMode;
            ObjectLockRetainUntilDate = objectLockRetainUntilDate;
            Range = range;
            ServerSideEncryption = serverSideEncryption;
            SseKmsKeyId = sseKmsKeyId;
            StorageClass = storageClass;
            Tags = tags;
            VersionId = versionId;
            WebsiteRedirectLocation = websiteRedirectLocation;
        }
    }
}
