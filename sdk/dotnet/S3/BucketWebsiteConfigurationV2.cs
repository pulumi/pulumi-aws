// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.S3
{
    [AwsResourceType("aws:s3/bucketWebsiteConfigurationV2:BucketWebsiteConfigurationV2")]
    public partial class BucketWebsiteConfigurationV2 : global::Pulumi.CustomResource
    {
        [Output("bucket")]
        public Output<string> Bucket { get; private set; } = null!;

        [Output("errorDocument")]
        public Output<Outputs.BucketWebsiteConfigurationV2ErrorDocument?> ErrorDocument { get; private set; } = null!;

        [Output("expectedBucketOwner")]
        public Output<string?> ExpectedBucketOwner { get; private set; } = null!;

        [Output("indexDocument")]
        public Output<Outputs.BucketWebsiteConfigurationV2IndexDocument?> IndexDocument { get; private set; } = null!;

        [Output("redirectAllRequestsTo")]
        public Output<Outputs.BucketWebsiteConfigurationV2RedirectAllRequestsTo?> RedirectAllRequestsTo { get; private set; } = null!;

        [Output("routingRuleDetails")]
        public Output<string> RoutingRuleDetails { get; private set; } = null!;

        [Output("routingRules")]
        public Output<ImmutableArray<Outputs.BucketWebsiteConfigurationV2RoutingRule>> RoutingRules { get; private set; } = null!;

        [Output("websiteDomain")]
        public Output<string> WebsiteDomain { get; private set; } = null!;

        [Output("websiteEndpoint")]
        public Output<string> WebsiteEndpoint { get; private set; } = null!;


        /// <summary>
        /// Create a BucketWebsiteConfigurationV2 resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BucketWebsiteConfigurationV2(string name, BucketWebsiteConfigurationV2Args args, CustomResourceOptions? options = null)
            : base("aws:s3/bucketWebsiteConfigurationV2:BucketWebsiteConfigurationV2", name, args ?? new BucketWebsiteConfigurationV2Args(), MakeResourceOptions(options, ""))
        {
        }

        private BucketWebsiteConfigurationV2(string name, Input<string> id, BucketWebsiteConfigurationV2State? state = null, CustomResourceOptions? options = null)
            : base("aws:s3/bucketWebsiteConfigurationV2:BucketWebsiteConfigurationV2", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BucketWebsiteConfigurationV2 resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BucketWebsiteConfigurationV2 Get(string name, Input<string> id, BucketWebsiteConfigurationV2State? state = null, CustomResourceOptions? options = null)
        {
            return new BucketWebsiteConfigurationV2(name, id, state, options);
        }
    }

    public sealed class BucketWebsiteConfigurationV2Args : global::Pulumi.ResourceArgs
    {
        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        [Input("errorDocument")]
        public Input<Inputs.BucketWebsiteConfigurationV2ErrorDocumentArgs>? ErrorDocument { get; set; }

        [Input("expectedBucketOwner")]
        public Input<string>? ExpectedBucketOwner { get; set; }

        [Input("indexDocument")]
        public Input<Inputs.BucketWebsiteConfigurationV2IndexDocumentArgs>? IndexDocument { get; set; }

        [Input("redirectAllRequestsTo")]
        public Input<Inputs.BucketWebsiteConfigurationV2RedirectAllRequestsToArgs>? RedirectAllRequestsTo { get; set; }

        [Input("routingRuleDetails")]
        public Input<string>? RoutingRuleDetails { get; set; }

        [Input("routingRules")]
        private InputList<Inputs.BucketWebsiteConfigurationV2RoutingRuleArgs>? _routingRules;
        public InputList<Inputs.BucketWebsiteConfigurationV2RoutingRuleArgs> RoutingRules
        {
            get => _routingRules ?? (_routingRules = new InputList<Inputs.BucketWebsiteConfigurationV2RoutingRuleArgs>());
            set => _routingRules = value;
        }

        public BucketWebsiteConfigurationV2Args()
        {
        }
        public static new BucketWebsiteConfigurationV2Args Empty => new BucketWebsiteConfigurationV2Args();
    }

    public sealed class BucketWebsiteConfigurationV2State : global::Pulumi.ResourceArgs
    {
        [Input("bucket")]
        public Input<string>? Bucket { get; set; }

        [Input("errorDocument")]
        public Input<Inputs.BucketWebsiteConfigurationV2ErrorDocumentGetArgs>? ErrorDocument { get; set; }

        [Input("expectedBucketOwner")]
        public Input<string>? ExpectedBucketOwner { get; set; }

        [Input("indexDocument")]
        public Input<Inputs.BucketWebsiteConfigurationV2IndexDocumentGetArgs>? IndexDocument { get; set; }

        [Input("redirectAllRequestsTo")]
        public Input<Inputs.BucketWebsiteConfigurationV2RedirectAllRequestsToGetArgs>? RedirectAllRequestsTo { get; set; }

        [Input("routingRuleDetails")]
        public Input<string>? RoutingRuleDetails { get; set; }

        [Input("routingRules")]
        private InputList<Inputs.BucketWebsiteConfigurationV2RoutingRuleGetArgs>? _routingRules;
        public InputList<Inputs.BucketWebsiteConfigurationV2RoutingRuleGetArgs> RoutingRules
        {
            get => _routingRules ?? (_routingRules = new InputList<Inputs.BucketWebsiteConfigurationV2RoutingRuleGetArgs>());
            set => _routingRules = value;
        }

        [Input("websiteDomain")]
        public Input<string>? WebsiteDomain { get; set; }

        [Input("websiteEndpoint")]
        public Input<string>? WebsiteEndpoint { get; set; }

        public BucketWebsiteConfigurationV2State()
        {
        }
        public static new BucketWebsiteConfigurationV2State Empty => new BucketWebsiteConfigurationV2State();
    }
}
