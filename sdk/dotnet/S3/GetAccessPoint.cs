// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.S3
{
    public static class GetAccessPoint
    {
        /// <summary>
        /// Provides details about a specific S3 access point.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.S3.GetAccessPoint.Invoke(new()
        ///     {
        ///         Name = "example-access-point",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetAccessPointResult> InvokeAsync(GetAccessPointArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAccessPointResult>("aws:s3/getAccessPoint:getAccessPoint", args ?? new GetAccessPointArgs(), options.WithDefaults());

        /// <summary>
        /// Provides details about a specific S3 access point.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.S3.GetAccessPoint.Invoke(new()
        ///     {
        ///         Name = "example-access-point",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAccessPointResult> Invoke(GetAccessPointInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAccessPointResult>("aws:s3/getAccessPoint:getAccessPoint", args ?? new GetAccessPointInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Provides details about a specific S3 access point.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.S3.GetAccessPoint.Invoke(new()
        ///     {
        ///         Name = "example-access-point",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAccessPointResult> Invoke(GetAccessPointInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAccessPointResult>("aws:s3/getAccessPoint:getAccessPoint", args ?? new GetAccessPointInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAccessPointArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// AWS account ID for the account that owns the specified access point.
        /// </summary>
        [Input("accountId")]
        public string? AccountId { get; set; }

        /// <summary>
        /// Name of the access point.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public string? Region { get; set; }

        public GetAccessPointArgs()
        {
        }
        public static new GetAccessPointArgs Empty => new GetAccessPointArgs();
    }

    public sealed class GetAccessPointInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// AWS account ID for the account that owns the specified access point.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// Name of the access point.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public GetAccessPointInvokeArgs()
        {
        }
        public static new GetAccessPointInvokeArgs Empty => new GetAccessPointInvokeArgs();
    }


    [OutputType]
    public sealed class GetAccessPointResult
    {
        public readonly string AccountId;
        /// <summary>
        /// Access point alias.
        /// </summary>
        public readonly string Alias;
        /// <summary>
        /// Access point ARN.
        /// </summary>
        public readonly string Arn;
        /// <summary>
        /// Name of the bucket associated with the access point.
        /// </summary>
        public readonly string Bucket;
        /// <summary>
        /// AWS account ID associated with the S3 bucket associated with the access point.
        /// </summary>
        public readonly string BucketAccountId;
        /// <summary>
        /// Unique identifier for the data source of the access point.
        /// </summary>
        public readonly string DataSourceId;
        /// <summary>
        /// Type of the data source that the access point is attached to.
        /// </summary>
        public readonly string DataSourceType;
        /// <summary>
        /// VPC endpoint for the access point.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Endpoints;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        /// <summary>
        /// Indicates whether the access point allows access from the public Internet.
        /// </summary>
        public readonly string NetworkOrigin;
        /// <summary>
        /// `PublicAccessBlock` configuration for the access point.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAccessPointPublicAccessBlockConfigurationResult> PublicAccessBlockConfigurations;
        public readonly string Region;
        /// <summary>
        /// VPC configuration for the access point.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAccessPointVpcConfigurationResult> VpcConfigurations;

        [OutputConstructor]
        private GetAccessPointResult(
            string accountId,

            string alias,

            string arn,

            string bucket,

            string bucketAccountId,

            string dataSourceId,

            string dataSourceType,

            ImmutableDictionary<string, string> endpoints,

            string id,

            string name,

            string networkOrigin,

            ImmutableArray<Outputs.GetAccessPointPublicAccessBlockConfigurationResult> publicAccessBlockConfigurations,

            string region,

            ImmutableArray<Outputs.GetAccessPointVpcConfigurationResult> vpcConfigurations)
        {
            AccountId = accountId;
            Alias = alias;
            Arn = arn;
            Bucket = bucket;
            BucketAccountId = bucketAccountId;
            DataSourceId = dataSourceId;
            DataSourceType = dataSourceType;
            Endpoints = endpoints;
            Id = id;
            Name = name;
            NetworkOrigin = networkOrigin;
            PublicAccessBlockConfigurations = publicAccessBlockConfigurations;
            Region = region;
            VpcConfigurations = vpcConfigurations;
        }
    }
}
