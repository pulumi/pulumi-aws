// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.S3
{
    /// <summary>
    /// Provides an S3 bucket website configuration resource. For more information, see [Hosting Websites on S3](https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html).
    /// 
    /// &gt; This resource cannot be used with S3 directory buckets.
    /// 
    /// ## Example Usage
    /// 
    /// ### With `routing_rule` configured
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.S3.BucketWebsiteConfiguration("example", new()
    ///     {
    ///         Bucket = exampleAwsS3Bucket.Id,
    ///         IndexDocument = new Aws.S3.Inputs.BucketWebsiteConfigurationIndexDocumentArgs
    ///         {
    ///             Suffix = "index.html",
    ///         },
    ///         ErrorDocument = new Aws.S3.Inputs.BucketWebsiteConfigurationErrorDocumentArgs
    ///         {
    ///             Key = "error.html",
    ///         },
    ///         RoutingRules = new[]
    ///         {
    ///             new Aws.S3.Inputs.BucketWebsiteConfigurationRoutingRuleArgs
    ///             {
    ///                 Condition = new Aws.S3.Inputs.BucketWebsiteConfigurationRoutingRuleConditionArgs
    ///                 {
    ///                     KeyPrefixEquals = "docs/",
    ///                 },
    ///                 Redirect = new Aws.S3.Inputs.BucketWebsiteConfigurationRoutingRuleRedirectArgs
    ///                 {
    ///                     ReplaceKeyPrefixWith = "documents/",
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ### With `routing_rules` configured
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.S3.BucketWebsiteConfiguration("example", new()
    ///     {
    ///         Bucket = exampleAwsS3Bucket.Id,
    ///         IndexDocument = new Aws.S3.Inputs.BucketWebsiteConfigurationIndexDocumentArgs
    ///         {
    ///             Suffix = "index.html",
    ///         },
    ///         ErrorDocument = new Aws.S3.Inputs.BucketWebsiteConfigurationErrorDocumentArgs
    ///         {
    ///             Key = "error.html",
    ///         },
    ///         RoutingRuleDetails = @"[{
    ///     ""Condition"": {
    ///         ""KeyPrefixEquals"": ""docs/""
    ///     },
    ///     ""Redirect"": {
    ///         ""ReplaceKeyPrefixWith"": """"
    ///     }
    /// }]
    /// ",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ### Identity Schema
    /// 
    /// #### Required
    /// 
    /// * `bucket` (String) S3 bucket name.
    /// 
    /// #### Optional
    /// 
    /// * `account_id` (String) AWS Account where this resource is managed.
    /// 
    /// * `expected_bucket_owner` (String) Account ID of the expected bucket owner.
    /// 
    /// * `region` (String) Region where this resource is managed.
    /// 
    /// If the owner (account ID) of the source bucket differs from the account used to configure the AWS Provider, import using the `bucket` and `expected_bucket_owner` separated by a comma (`,`):
    /// 
    /// terraform
    /// 
    /// import {
    /// 
    ///   to = aws_s3_bucket_website_configuration.example
    /// 
    ///   id = "bucket-name,123456789012"
    /// 
    /// }
    /// 
    /// **Using `pulumi import` to import** S3 bucket website configuration using the `bucket` or using the `bucket` and `expected_bucket_owner` separated by a comma (`,`). For example:
    /// 
    /// If the owner (account ID) of the source bucket is the same account used to configure the AWS Provider, import using the `bucket`:
    /// 
    /// console
    /// 
    /// % pulumi import aws_s3_bucket_website_configuration.example bucket-name
    /// 
    /// If the owner (account ID) of the source bucket differs from the account used to configure the AWS Provider, import using the `bucket` and `expected_bucket_owner` separated by a comma (`,`):
    /// 
    /// console
    /// 
    /// % pulumi import aws_s3_bucket_website_configuration.example bucket-name,123456789012
    /// </summary>
    [AwsResourceType("aws:s3/bucketWebsiteConfiguration:BucketWebsiteConfiguration")]
    public partial class BucketWebsiteConfiguration : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Name of the bucket.
        /// </summary>
        [Output("bucket")]
        public Output<string> Bucket { get; private set; } = null!;

        /// <summary>
        /// Name of the error document for the website. See below.
        /// </summary>
        [Output("errorDocument")]
        public Output<Outputs.BucketWebsiteConfigurationErrorDocument?> ErrorDocument { get; private set; } = null!;

        /// <summary>
        /// Account ID of the expected bucket owner.
        /// </summary>
        [Output("expectedBucketOwner")]
        public Output<string?> ExpectedBucketOwner { get; private set; } = null!;

        /// <summary>
        /// Name of the index document for the website. See below.
        /// </summary>
        [Output("indexDocument")]
        public Output<Outputs.BucketWebsiteConfigurationIndexDocument?> IndexDocument { get; private set; } = null!;

        /// <summary>
        /// Redirect behavior for every request to this bucket's website endpoint. See below. Conflicts with `error_document`, `index_document`, and `routing_rule`.
        /// </summary>
        [Output("redirectAllRequestsTo")]
        public Output<Outputs.BucketWebsiteConfigurationRedirectAllRequestsTo?> RedirectAllRequestsTo { get; private set; } = null!;

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// JSON array containing [routing rules](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html)
        /// describing redirect behavior and when redirects are applied. Use this parameter when your routing rules contain empty String values (`""`) as seen in the example above.
        /// </summary>
        [Output("routingRuleDetails")]
        public Output<string> RoutingRuleDetails { get; private set; } = null!;

        /// <summary>
        /// List of rules that define when a redirect is applied and the redirect behavior. See below.
        /// </summary>
        [Output("routingRules")]
        public Output<ImmutableArray<Outputs.BucketWebsiteConfigurationRoutingRule>> RoutingRules { get; private set; } = null!;

        /// <summary>
        /// Domain of the website endpoint. This is used to create Route 53 alias records.
        /// </summary>
        [Output("websiteDomain")]
        public Output<string> WebsiteDomain { get; private set; } = null!;

        /// <summary>
        /// Website endpoint.
        /// </summary>
        [Output("websiteEndpoint")]
        public Output<string> WebsiteEndpoint { get; private set; } = null!;


        /// <summary>
        /// Create a BucketWebsiteConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BucketWebsiteConfiguration(string name, BucketWebsiteConfigurationArgs args, CustomResourceOptions? options = null)
            : base("aws:s3/bucketWebsiteConfiguration:BucketWebsiteConfiguration", name, args ?? new BucketWebsiteConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BucketWebsiteConfiguration(string name, Input<string> id, BucketWebsiteConfigurationState? state = null, CustomResourceOptions? options = null)
            : base("aws:s3/bucketWebsiteConfiguration:BucketWebsiteConfiguration", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "aws:s3/bucketWebsiteConfigurationV2:BucketWebsiteConfigurationV2" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BucketWebsiteConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BucketWebsiteConfiguration Get(string name, Input<string> id, BucketWebsiteConfigurationState? state = null, CustomResourceOptions? options = null)
        {
            return new BucketWebsiteConfiguration(name, id, state, options);
        }
    }

    public sealed class BucketWebsiteConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the bucket.
        /// </summary>
        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        /// <summary>
        /// Name of the error document for the website. See below.
        /// </summary>
        [Input("errorDocument")]
        public Input<Inputs.BucketWebsiteConfigurationErrorDocumentArgs>? ErrorDocument { get; set; }

        /// <summary>
        /// Account ID of the expected bucket owner.
        /// </summary>
        [Input("expectedBucketOwner")]
        public Input<string>? ExpectedBucketOwner { get; set; }

        /// <summary>
        /// Name of the index document for the website. See below.
        /// </summary>
        [Input("indexDocument")]
        public Input<Inputs.BucketWebsiteConfigurationIndexDocumentArgs>? IndexDocument { get; set; }

        /// <summary>
        /// Redirect behavior for every request to this bucket's website endpoint. See below. Conflicts with `error_document`, `index_document`, and `routing_rule`.
        /// </summary>
        [Input("redirectAllRequestsTo")]
        public Input<Inputs.BucketWebsiteConfigurationRedirectAllRequestsToArgs>? RedirectAllRequestsTo { get; set; }

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// JSON array containing [routing rules](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html)
        /// describing redirect behavior and when redirects are applied. Use this parameter when your routing rules contain empty String values (`""`) as seen in the example above.
        /// </summary>
        [Input("routingRuleDetails")]
        public Input<string>? RoutingRuleDetails { get; set; }

        [Input("routingRules")]
        private InputList<Inputs.BucketWebsiteConfigurationRoutingRuleArgs>? _routingRules;

        /// <summary>
        /// List of rules that define when a redirect is applied and the redirect behavior. See below.
        /// </summary>
        public InputList<Inputs.BucketWebsiteConfigurationRoutingRuleArgs> RoutingRules
        {
            get => _routingRules ?? (_routingRules = new InputList<Inputs.BucketWebsiteConfigurationRoutingRuleArgs>());
            set => _routingRules = value;
        }

        public BucketWebsiteConfigurationArgs()
        {
        }
        public static new BucketWebsiteConfigurationArgs Empty => new BucketWebsiteConfigurationArgs();
    }

    public sealed class BucketWebsiteConfigurationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the bucket.
        /// </summary>
        [Input("bucket")]
        public Input<string>? Bucket { get; set; }

        /// <summary>
        /// Name of the error document for the website. See below.
        /// </summary>
        [Input("errorDocument")]
        public Input<Inputs.BucketWebsiteConfigurationErrorDocumentGetArgs>? ErrorDocument { get; set; }

        /// <summary>
        /// Account ID of the expected bucket owner.
        /// </summary>
        [Input("expectedBucketOwner")]
        public Input<string>? ExpectedBucketOwner { get; set; }

        /// <summary>
        /// Name of the index document for the website. See below.
        /// </summary>
        [Input("indexDocument")]
        public Input<Inputs.BucketWebsiteConfigurationIndexDocumentGetArgs>? IndexDocument { get; set; }

        /// <summary>
        /// Redirect behavior for every request to this bucket's website endpoint. See below. Conflicts with `error_document`, `index_document`, and `routing_rule`.
        /// </summary>
        [Input("redirectAllRequestsTo")]
        public Input<Inputs.BucketWebsiteConfigurationRedirectAllRequestsToGetArgs>? RedirectAllRequestsTo { get; set; }

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// JSON array containing [routing rules](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html)
        /// describing redirect behavior and when redirects are applied. Use this parameter when your routing rules contain empty String values (`""`) as seen in the example above.
        /// </summary>
        [Input("routingRuleDetails")]
        public Input<string>? RoutingRuleDetails { get; set; }

        [Input("routingRules")]
        private InputList<Inputs.BucketWebsiteConfigurationRoutingRuleGetArgs>? _routingRules;

        /// <summary>
        /// List of rules that define when a redirect is applied and the redirect behavior. See below.
        /// </summary>
        public InputList<Inputs.BucketWebsiteConfigurationRoutingRuleGetArgs> RoutingRules
        {
            get => _routingRules ?? (_routingRules = new InputList<Inputs.BucketWebsiteConfigurationRoutingRuleGetArgs>());
            set => _routingRules = value;
        }

        /// <summary>
        /// Domain of the website endpoint. This is used to create Route 53 alias records.
        /// </summary>
        [Input("websiteDomain")]
        public Input<string>? WebsiteDomain { get; set; }

        /// <summary>
        /// Website endpoint.
        /// </summary>
        [Input("websiteEndpoint")]
        public Input<string>? WebsiteEndpoint { get; set; }

        public BucketWebsiteConfigurationState()
        {
        }
        public static new BucketWebsiteConfigurationState Empty => new BucketWebsiteConfigurationState();
    }
}
