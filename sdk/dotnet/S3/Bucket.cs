// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.S3
{
    /// <summary>
    /// Provides a S3 bucket resource.
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/s3_bucket.html.markdown.
    /// </summary>
    public partial class Bucket : Pulumi.CustomResource
    {
        /// <summary>
        /// Sets the accelerate configuration of an existing bucket. Can be `Enabled` or `Suspended`.
        /// </summary>
        [Output("accelerationStatus")]
        public Output<string> AccelerationStatus { get; private set; } = null!;

        /// <summary>
        /// The [canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) to apply. Defaults to "private".  Conflicts with `grant`.
        /// </summary>
        [Output("acl")]
        public Output<string?> Acl { get; private set; } = null!;

        /// <summary>
        /// The ARN of the bucket. Will be of format `arn:aws:s3:::bucketname`.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// The name of the bucket. If omitted, this provider will assign a random, unique name.
        /// </summary>
        [Output("bucket")]
        public Output<string> BucketName { get; private set; } = null!;

        /// <summary>
        /// The bucket domain name. Will be of format `bucketname.s3.amazonaws.com`.
        /// </summary>
        [Output("bucketDomainName")]
        public Output<string> BucketDomainName { get; private set; } = null!;

        /// <summary>
        /// Creates a unique bucket name beginning with the specified prefix. Conflicts with `bucket`.
        /// </summary>
        [Output("bucketPrefix")]
        public Output<string?> BucketPrefix { get; private set; } = null!;

        /// <summary>
        /// The bucket region-specific domain name. The bucket domain name including the region name, please refer [here](https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region) for format. Note: The AWS CloudFront allows specifying S3 region-specific endpoint when creating S3 origin, it will prevent [redirect issues](https://forums.aws.amazon.com/thread.jspa?threadID=216814) from CloudFront to S3 Origin URL.
        /// </summary>
        [Output("bucketRegionalDomainName")]
        public Output<string> BucketRegionalDomainName { get; private set; } = null!;

        /// <summary>
        /// A rule of [Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html) (documented below).
        /// </summary>
        [Output("corsRules")]
        public Output<ImmutableArray<Outputs.BucketCorsRules>> CorsRules { get; private set; } = null!;

        /// <summary>
        /// A boolean that indicates all objects (including any [locked objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html)) should be deleted from the bucket so that the bucket can be destroyed without error. These objects are *not* recoverable.
        /// </summary>
        [Output("forceDestroy")]
        public Output<bool?> ForceDestroy { get; private set; } = null!;

        /// <summary>
        /// An [ACL policy grant](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#sample-acl) (documented below). Conflicts with `acl`.
        /// </summary>
        [Output("grants")]
        public Output<ImmutableArray<Outputs.BucketGrants>> Grants { get; private set; } = null!;

        /// <summary>
        /// The [Route 53 Hosted Zone ID](https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_website_region_endpoints) for this bucket's region.
        /// </summary>
        [Output("hostedZoneId")]
        public Output<string> HostedZoneId { get; private set; } = null!;

        /// <summary>
        /// A configuration of [object lifecycle management](http://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html) (documented below).
        /// </summary>
        [Output("lifecycleRules")]
        public Output<ImmutableArray<Outputs.BucketLifecycleRules>> LifecycleRules { get; private set; } = null!;

        /// <summary>
        /// A settings of [bucket logging](https://docs.aws.amazon.com/AmazonS3/latest/UG/ManagingBucketLogging.html) (documented below).
        /// </summary>
        [Output("loggings")]
        public Output<ImmutableArray<Outputs.BucketLoggings>> Loggings { get; private set; } = null!;

        /// <summary>
        /// A configuration of [S3 object locking](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html) (documented below)
        /// </summary>
        [Output("objectLockConfiguration")]
        public Output<Outputs.BucketObjectLockConfiguration?> ObjectLockConfiguration { get; private set; } = null!;

        /// <summary>
        /// A valid [bucket policy](https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html) JSON document.
        /// </summary>
        [Output("policy")]
        public Output<string?> Policy { get; private set; } = null!;

        /// <summary>
        /// If specified, the AWS region this bucket should reside in. Otherwise, the region used by the callee.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// A configuration of [replication configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/crr.html) (documented below).
        /// </summary>
        [Output("replicationConfiguration")]
        public Output<Outputs.BucketReplicationConfiguration?> ReplicationConfiguration { get; private set; } = null!;

        /// <summary>
        /// Specifies who should bear the cost of Amazon S3 data transfer.
        /// Can be either `BucketOwner` or `Requester`. By default, the owner of the S3 bucket would incur
        /// the costs of any data transfer. See [Requester Pays Buckets](http://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html)
        /// developer guide for more information.
        /// </summary>
        [Output("requestPayer")]
        public Output<string> RequestPayer { get; private set; } = null!;

        /// <summary>
        /// A configuration of [server-side encryption configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html) (documented below)
        /// </summary>
        [Output("serverSideEncryptionConfiguration")]
        public Output<Outputs.BucketServerSideEncryptionConfiguration?> ServerSideEncryptionConfiguration { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags to assign to the bucket.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, object>?> Tags { get; private set; } = null!;

        /// <summary>
        /// A state of [versioning](https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html) (documented below)
        /// </summary>
        [Output("versioning")]
        public Output<Outputs.BucketVersioning> Versioning { get; private set; } = null!;

        /// <summary>
        /// A website object (documented below).
        /// </summary>
        [Output("website")]
        public Output<Outputs.BucketWebsite?> Website { get; private set; } = null!;

        /// <summary>
        /// The domain of the website endpoint, if the bucket is configured with a website. If not, this will be an empty string. This is used to create Route 53 alias records.
        /// </summary>
        [Output("websiteDomain")]
        public Output<string> WebsiteDomain { get; private set; } = null!;

        /// <summary>
        /// The website endpoint, if the bucket is configured with a website. If not, this will be an empty string.
        /// </summary>
        [Output("websiteEndpoint")]
        public Output<string> WebsiteEndpoint { get; private set; } = null!;


        /// <summary>
        /// Create a Bucket resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Bucket(string name, BucketArgs? args = null, CustomResourceOptions? options = null)
            : base("aws:s3/bucket:Bucket", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private Bucket(string name, Input<string> id, BucketState? state = null, CustomResourceOptions? options = null)
            : base("aws:s3/bucket:Bucket", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Bucket resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Bucket Get(string name, Input<string> id, BucketState? state = null, CustomResourceOptions? options = null)
        {
            return new Bucket(name, id, state, options);
        }
    }

    public sealed class BucketArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Sets the accelerate configuration of an existing bucket. Can be `Enabled` or `Suspended`.
        /// </summary>
        [Input("accelerationStatus")]
        public Input<string>? AccelerationStatus { get; set; }

        /// <summary>
        /// The [canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) to apply. Defaults to "private".  Conflicts with `grant`.
        /// </summary>
        [Input("acl")]
        public Input<string>? Acl { get; set; }

        /// <summary>
        /// The ARN of the bucket. Will be of format `arn:aws:s3:::bucketname`.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// The name of the bucket. If omitted, this provider will assign a random, unique name.
        /// </summary>
        [Input("bucket")]
        public Input<string>? BucketName { get; set; }

        /// <summary>
        /// Creates a unique bucket name beginning with the specified prefix. Conflicts with `bucket`.
        /// </summary>
        [Input("bucketPrefix")]
        public Input<string>? BucketPrefix { get; set; }

        [Input("corsRules")]
        private InputList<Inputs.BucketCorsRulesArgs>? _corsRules;

        /// <summary>
        /// A rule of [Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html) (documented below).
        /// </summary>
        public InputList<Inputs.BucketCorsRulesArgs> CorsRules
        {
            get => _corsRules ?? (_corsRules = new InputList<Inputs.BucketCorsRulesArgs>());
            set => _corsRules = value;
        }

        /// <summary>
        /// A boolean that indicates all objects (including any [locked objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html)) should be deleted from the bucket so that the bucket can be destroyed without error. These objects are *not* recoverable.
        /// </summary>
        [Input("forceDestroy")]
        public Input<bool>? ForceDestroy { get; set; }

        [Input("grants")]
        private InputList<Inputs.BucketGrantsArgs>? _grants;

        /// <summary>
        /// An [ACL policy grant](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#sample-acl) (documented below). Conflicts with `acl`.
        /// </summary>
        public InputList<Inputs.BucketGrantsArgs> Grants
        {
            get => _grants ?? (_grants = new InputList<Inputs.BucketGrantsArgs>());
            set => _grants = value;
        }

        /// <summary>
        /// The [Route 53 Hosted Zone ID](https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_website_region_endpoints) for this bucket's region.
        /// </summary>
        [Input("hostedZoneId")]
        public Input<string>? HostedZoneId { get; set; }

        [Input("lifecycleRules")]
        private InputList<Inputs.BucketLifecycleRulesArgs>? _lifecycleRules;

        /// <summary>
        /// A configuration of [object lifecycle management](http://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html) (documented below).
        /// </summary>
        public InputList<Inputs.BucketLifecycleRulesArgs> LifecycleRules
        {
            get => _lifecycleRules ?? (_lifecycleRules = new InputList<Inputs.BucketLifecycleRulesArgs>());
            set => _lifecycleRules = value;
        }

        [Input("loggings")]
        private InputList<Inputs.BucketLoggingsArgs>? _loggings;

        /// <summary>
        /// A settings of [bucket logging](https://docs.aws.amazon.com/AmazonS3/latest/UG/ManagingBucketLogging.html) (documented below).
        /// </summary>
        public InputList<Inputs.BucketLoggingsArgs> Loggings
        {
            get => _loggings ?? (_loggings = new InputList<Inputs.BucketLoggingsArgs>());
            set => _loggings = value;
        }

        /// <summary>
        /// A configuration of [S3 object locking](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html) (documented below)
        /// </summary>
        [Input("objectLockConfiguration")]
        public Input<Inputs.BucketObjectLockConfigurationArgs>? ObjectLockConfiguration { get; set; }

        /// <summary>
        /// A valid [bucket policy](https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html) JSON document.
        /// </summary>
        [Input("policy")]
        public Input<string>? Policy { get; set; }

        /// <summary>
        /// If specified, the AWS region this bucket should reside in. Otherwise, the region used by the callee.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// A configuration of [replication configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/crr.html) (documented below).
        /// </summary>
        [Input("replicationConfiguration")]
        public Input<Inputs.BucketReplicationConfigurationArgs>? ReplicationConfiguration { get; set; }

        /// <summary>
        /// Specifies who should bear the cost of Amazon S3 data transfer.
        /// Can be either `BucketOwner` or `Requester`. By default, the owner of the S3 bucket would incur
        /// the costs of any data transfer. See [Requester Pays Buckets](http://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html)
        /// developer guide for more information.
        /// </summary>
        [Input("requestPayer")]
        public Input<string>? RequestPayer { get; set; }

        /// <summary>
        /// A configuration of [server-side encryption configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html) (documented below)
        /// </summary>
        [Input("serverSideEncryptionConfiguration")]
        public Input<Inputs.BucketServerSideEncryptionConfigurationArgs>? ServerSideEncryptionConfiguration { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the bucket.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        /// <summary>
        /// A state of [versioning](https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html) (documented below)
        /// </summary>
        [Input("versioning")]
        public Input<Inputs.BucketVersioningArgs>? Versioning { get; set; }

        /// <summary>
        /// A website object (documented below).
        /// </summary>
        [Input("website")]
        public Input<Inputs.BucketWebsiteArgs>? Website { get; set; }

        /// <summary>
        /// The domain of the website endpoint, if the bucket is configured with a website. If not, this will be an empty string. This is used to create Route 53 alias records.
        /// </summary>
        [Input("websiteDomain")]
        public Input<string>? WebsiteDomain { get; set; }

        /// <summary>
        /// The website endpoint, if the bucket is configured with a website. If not, this will be an empty string.
        /// </summary>
        [Input("websiteEndpoint")]
        public Input<string>? WebsiteEndpoint { get; set; }

        public BucketArgs()
        {
        }
    }

    public sealed class BucketState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Sets the accelerate configuration of an existing bucket. Can be `Enabled` or `Suspended`.
        /// </summary>
        [Input("accelerationStatus")]
        public Input<string>? AccelerationStatus { get; set; }

        /// <summary>
        /// The [canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) to apply. Defaults to "private".  Conflicts with `grant`.
        /// </summary>
        [Input("acl")]
        public Input<string>? Acl { get; set; }

        /// <summary>
        /// The ARN of the bucket. Will be of format `arn:aws:s3:::bucketname`.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// The name of the bucket. If omitted, this provider will assign a random, unique name.
        /// </summary>
        [Input("bucket")]
        public Input<string>? BucketName { get; set; }

        /// <summary>
        /// The bucket domain name. Will be of format `bucketname.s3.amazonaws.com`.
        /// </summary>
        [Input("bucketDomainName")]
        public Input<string>? BucketDomainName { get; set; }

        /// <summary>
        /// Creates a unique bucket name beginning with the specified prefix. Conflicts with `bucket`.
        /// </summary>
        [Input("bucketPrefix")]
        public Input<string>? BucketPrefix { get; set; }

        /// <summary>
        /// The bucket region-specific domain name. The bucket domain name including the region name, please refer [here](https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region) for format. Note: The AWS CloudFront allows specifying S3 region-specific endpoint when creating S3 origin, it will prevent [redirect issues](https://forums.aws.amazon.com/thread.jspa?threadID=216814) from CloudFront to S3 Origin URL.
        /// </summary>
        [Input("bucketRegionalDomainName")]
        public Input<string>? BucketRegionalDomainName { get; set; }

        [Input("corsRules")]
        private InputList<Inputs.BucketCorsRulesGetArgs>? _corsRules;

        /// <summary>
        /// A rule of [Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html) (documented below).
        /// </summary>
        public InputList<Inputs.BucketCorsRulesGetArgs> CorsRules
        {
            get => _corsRules ?? (_corsRules = new InputList<Inputs.BucketCorsRulesGetArgs>());
            set => _corsRules = value;
        }

        /// <summary>
        /// A boolean that indicates all objects (including any [locked objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html)) should be deleted from the bucket so that the bucket can be destroyed without error. These objects are *not* recoverable.
        /// </summary>
        [Input("forceDestroy")]
        public Input<bool>? ForceDestroy { get; set; }

        [Input("grants")]
        private InputList<Inputs.BucketGrantsGetArgs>? _grants;

        /// <summary>
        /// An [ACL policy grant](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#sample-acl) (documented below). Conflicts with `acl`.
        /// </summary>
        public InputList<Inputs.BucketGrantsGetArgs> Grants
        {
            get => _grants ?? (_grants = new InputList<Inputs.BucketGrantsGetArgs>());
            set => _grants = value;
        }

        /// <summary>
        /// The [Route 53 Hosted Zone ID](https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_website_region_endpoints) for this bucket's region.
        /// </summary>
        [Input("hostedZoneId")]
        public Input<string>? HostedZoneId { get; set; }

        [Input("lifecycleRules")]
        private InputList<Inputs.BucketLifecycleRulesGetArgs>? _lifecycleRules;

        /// <summary>
        /// A configuration of [object lifecycle management](http://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html) (documented below).
        /// </summary>
        public InputList<Inputs.BucketLifecycleRulesGetArgs> LifecycleRules
        {
            get => _lifecycleRules ?? (_lifecycleRules = new InputList<Inputs.BucketLifecycleRulesGetArgs>());
            set => _lifecycleRules = value;
        }

        [Input("loggings")]
        private InputList<Inputs.BucketLoggingsGetArgs>? _loggings;

        /// <summary>
        /// A settings of [bucket logging](https://docs.aws.amazon.com/AmazonS3/latest/UG/ManagingBucketLogging.html) (documented below).
        /// </summary>
        public InputList<Inputs.BucketLoggingsGetArgs> Loggings
        {
            get => _loggings ?? (_loggings = new InputList<Inputs.BucketLoggingsGetArgs>());
            set => _loggings = value;
        }

        /// <summary>
        /// A configuration of [S3 object locking](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html) (documented below)
        /// </summary>
        [Input("objectLockConfiguration")]
        public Input<Inputs.BucketObjectLockConfigurationGetArgs>? ObjectLockConfiguration { get; set; }

        /// <summary>
        /// A valid [bucket policy](https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html) JSON document.
        /// </summary>
        [Input("policy")]
        public Input<string>? Policy { get; set; }

        /// <summary>
        /// If specified, the AWS region this bucket should reside in. Otherwise, the region used by the callee.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// A configuration of [replication configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/crr.html) (documented below).
        /// </summary>
        [Input("replicationConfiguration")]
        public Input<Inputs.BucketReplicationConfigurationGetArgs>? ReplicationConfiguration { get; set; }

        /// <summary>
        /// Specifies who should bear the cost of Amazon S3 data transfer.
        /// Can be either `BucketOwner` or `Requester`. By default, the owner of the S3 bucket would incur
        /// the costs of any data transfer. See [Requester Pays Buckets](http://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html)
        /// developer guide for more information.
        /// </summary>
        [Input("requestPayer")]
        public Input<string>? RequestPayer { get; set; }

        /// <summary>
        /// A configuration of [server-side encryption configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html) (documented below)
        /// </summary>
        [Input("serverSideEncryptionConfiguration")]
        public Input<Inputs.BucketServerSideEncryptionConfigurationGetArgs>? ServerSideEncryptionConfiguration { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the bucket.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        /// <summary>
        /// A state of [versioning](https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html) (documented below)
        /// </summary>
        [Input("versioning")]
        public Input<Inputs.BucketVersioningGetArgs>? Versioning { get; set; }

        /// <summary>
        /// A website object (documented below).
        /// </summary>
        [Input("website")]
        public Input<Inputs.BucketWebsiteGetArgs>? Website { get; set; }

        /// <summary>
        /// The domain of the website endpoint, if the bucket is configured with a website. If not, this will be an empty string. This is used to create Route 53 alias records.
        /// </summary>
        [Input("websiteDomain")]
        public Input<string>? WebsiteDomain { get; set; }

        /// <summary>
        /// The website endpoint, if the bucket is configured with a website. If not, this will be an empty string.
        /// </summary>
        [Input("websiteEndpoint")]
        public Input<string>? WebsiteEndpoint { get; set; }

        public BucketState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class BucketCorsRulesArgs : Pulumi.ResourceArgs
    {
        [Input("allowedHeaders")]
        private InputList<string>? _allowedHeaders;

        /// <summary>
        /// Specifies which headers are allowed.
        /// </summary>
        public InputList<string> AllowedHeaders
        {
            get => _allowedHeaders ?? (_allowedHeaders = new InputList<string>());
            set => _allowedHeaders = value;
        }

        [Input("allowedMethods", required: true)]
        private InputList<string>? _allowedMethods;

        /// <summary>
        /// Specifies which methods are allowed. Can be `GET`, `PUT`, `POST`, `DELETE` or `HEAD`.
        /// </summary>
        public InputList<string> AllowedMethods
        {
            get => _allowedMethods ?? (_allowedMethods = new InputList<string>());
            set => _allowedMethods = value;
        }

        [Input("allowedOrigins", required: true)]
        private InputList<string>? _allowedOrigins;

        /// <summary>
        /// Specifies which origins are allowed.
        /// </summary>
        public InputList<string> AllowedOrigins
        {
            get => _allowedOrigins ?? (_allowedOrigins = new InputList<string>());
            set => _allowedOrigins = value;
        }

        [Input("exposeHeaders")]
        private InputList<string>? _exposeHeaders;

        /// <summary>
        /// Specifies expose header in the response.
        /// </summary>
        public InputList<string> ExposeHeaders
        {
            get => _exposeHeaders ?? (_exposeHeaders = new InputList<string>());
            set => _exposeHeaders = value;
        }

        /// <summary>
        /// Specifies time in seconds that browser can cache the response for a preflight request.
        /// </summary>
        [Input("maxAgeSeconds")]
        public Input<int>? MaxAgeSeconds { get; set; }

        public BucketCorsRulesArgs()
        {
        }
    }

    public sealed class BucketCorsRulesGetArgs : Pulumi.ResourceArgs
    {
        [Input("allowedHeaders")]
        private InputList<string>? _allowedHeaders;

        /// <summary>
        /// Specifies which headers are allowed.
        /// </summary>
        public InputList<string> AllowedHeaders
        {
            get => _allowedHeaders ?? (_allowedHeaders = new InputList<string>());
            set => _allowedHeaders = value;
        }

        [Input("allowedMethods", required: true)]
        private InputList<string>? _allowedMethods;

        /// <summary>
        /// Specifies which methods are allowed. Can be `GET`, `PUT`, `POST`, `DELETE` or `HEAD`.
        /// </summary>
        public InputList<string> AllowedMethods
        {
            get => _allowedMethods ?? (_allowedMethods = new InputList<string>());
            set => _allowedMethods = value;
        }

        [Input("allowedOrigins", required: true)]
        private InputList<string>? _allowedOrigins;

        /// <summary>
        /// Specifies which origins are allowed.
        /// </summary>
        public InputList<string> AllowedOrigins
        {
            get => _allowedOrigins ?? (_allowedOrigins = new InputList<string>());
            set => _allowedOrigins = value;
        }

        [Input("exposeHeaders")]
        private InputList<string>? _exposeHeaders;

        /// <summary>
        /// Specifies expose header in the response.
        /// </summary>
        public InputList<string> ExposeHeaders
        {
            get => _exposeHeaders ?? (_exposeHeaders = new InputList<string>());
            set => _exposeHeaders = value;
        }

        /// <summary>
        /// Specifies time in seconds that browser can cache the response for a preflight request.
        /// </summary>
        [Input("maxAgeSeconds")]
        public Input<int>? MaxAgeSeconds { get; set; }

        public BucketCorsRulesGetArgs()
        {
        }
    }

    public sealed class BucketGrantsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Canonical user id to grant for. Used only when `type` is `CanonicalUser`.  
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("permissions", required: true)]
        private InputList<string>? _permissions;

        /// <summary>
        /// List of permissions to apply for grantee. Valid values are `READ`, `WRITE`, `READ_ACP`, `WRITE_ACP`, `FULL_ACCESS`.
        /// </summary>
        public InputList<string> Permissions
        {
            get => _permissions ?? (_permissions = new InputList<string>());
            set => _permissions = value;
        }

        /// <summary>
        /// - Type of grantee to apply for. Valid values are `CanonicalUser` and `Group`. `AmazonCustomerByEmail` is not supported.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        /// <summary>
        /// Uri address to grant for. Used only when `type` is `Group`.
        /// </summary>
        [Input("uri")]
        public Input<string>? Uri { get; set; }

        public BucketGrantsArgs()
        {
        }
    }

    public sealed class BucketGrantsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Canonical user id to grant for. Used only when `type` is `CanonicalUser`.  
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("permissions", required: true)]
        private InputList<string>? _permissions;

        /// <summary>
        /// List of permissions to apply for grantee. Valid values are `READ`, `WRITE`, `READ_ACP`, `WRITE_ACP`, `FULL_ACCESS`.
        /// </summary>
        public InputList<string> Permissions
        {
            get => _permissions ?? (_permissions = new InputList<string>());
            set => _permissions = value;
        }

        /// <summary>
        /// - Type of grantee to apply for. Valid values are `CanonicalUser` and `Group`. `AmazonCustomerByEmail` is not supported.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        /// <summary>
        /// Uri address to grant for. Used only when `type` is `Group`.
        /// </summary>
        [Input("uri")]
        public Input<string>? Uri { get; set; }

        public BucketGrantsGetArgs()
        {
        }
    }

    public sealed class BucketLifecycleRulesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the number of days after initiating a multipart upload when the multipart upload must be completed.
        /// </summary>
        [Input("abortIncompleteMultipartUploadDays")]
        public Input<int>? AbortIncompleteMultipartUploadDays { get; set; }

        /// <summary>
        /// Specifies lifecycle rule status.
        /// </summary>
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        /// <summary>
        /// Specifies a period in the object's expire (documented below).
        /// </summary>
        [Input("expiration")]
        public Input<BucketLifecycleRulesExpirationArgs>? Expiration { get; set; }

        /// <summary>
        /// Unique identifier for the rule.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Specifies when noncurrent object versions expire (documented below).
        /// </summary>
        [Input("noncurrentVersionExpiration")]
        public Input<BucketLifecycleRulesNoncurrentVersionExpirationArgs>? NoncurrentVersionExpiration { get; set; }

        [Input("noncurrentVersionTransitions")]
        private InputList<BucketLifecycleRulesNoncurrentVersionTransitionsArgs>? _noncurrentVersionTransitions;

        /// <summary>
        /// Specifies when noncurrent object versions transitions (documented below).
        /// </summary>
        public InputList<BucketLifecycleRulesNoncurrentVersionTransitionsArgs> NoncurrentVersionTransitions
        {
            get => _noncurrentVersionTransitions ?? (_noncurrentVersionTransitions = new InputList<BucketLifecycleRulesNoncurrentVersionTransitionsArgs>());
            set => _noncurrentVersionTransitions = value;
        }

        /// <summary>
        /// Object key prefix identifying one or more objects to which the rule applies.
        /// </summary>
        [Input("prefix")]
        public Input<string>? Prefix { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// Specifies object tags key and value.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        [Input("transitions")]
        private InputList<BucketLifecycleRulesTransitionsArgs>? _transitions;

        /// <summary>
        /// Specifies a period in the object's transitions (documented below).
        /// </summary>
        public InputList<BucketLifecycleRulesTransitionsArgs> Transitions
        {
            get => _transitions ?? (_transitions = new InputList<BucketLifecycleRulesTransitionsArgs>());
            set => _transitions = value;
        }

        public BucketLifecycleRulesArgs()
        {
        }
    }

    public sealed class BucketLifecycleRulesExpirationArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the date after which you want the corresponding action to take effect.
        /// </summary>
        [Input("date")]
        public Input<string>? Date { get; set; }

        /// <summary>
        /// Specifies the number of days after object creation when the specific rule action takes effect.
        /// </summary>
        [Input("days")]
        public Input<int>? Days { get; set; }

        /// <summary>
        /// On a versioned bucket (versioning-enabled or versioning-suspended bucket), you can add this element in the lifecycle configuration to direct Amazon S3 to delete expired object delete markers.
        /// </summary>
        [Input("expiredObjectDeleteMarker")]
        public Input<bool>? ExpiredObjectDeleteMarker { get; set; }

        public BucketLifecycleRulesExpirationArgs()
        {
        }
    }

    public sealed class BucketLifecycleRulesExpirationGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the date after which you want the corresponding action to take effect.
        /// </summary>
        [Input("date")]
        public Input<string>? Date { get; set; }

        /// <summary>
        /// Specifies the number of days after object creation when the specific rule action takes effect.
        /// </summary>
        [Input("days")]
        public Input<int>? Days { get; set; }

        /// <summary>
        /// On a versioned bucket (versioning-enabled or versioning-suspended bucket), you can add this element in the lifecycle configuration to direct Amazon S3 to delete expired object delete markers.
        /// </summary>
        [Input("expiredObjectDeleteMarker")]
        public Input<bool>? ExpiredObjectDeleteMarker { get; set; }

        public BucketLifecycleRulesExpirationGetArgs()
        {
        }
    }

    public sealed class BucketLifecycleRulesGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the number of days after initiating a multipart upload when the multipart upload must be completed.
        /// </summary>
        [Input("abortIncompleteMultipartUploadDays")]
        public Input<int>? AbortIncompleteMultipartUploadDays { get; set; }

        /// <summary>
        /// Specifies lifecycle rule status.
        /// </summary>
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        /// <summary>
        /// Specifies a period in the object's expire (documented below).
        /// </summary>
        [Input("expiration")]
        public Input<BucketLifecycleRulesExpirationGetArgs>? Expiration { get; set; }

        /// <summary>
        /// Unique identifier for the rule.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Specifies when noncurrent object versions expire (documented below).
        /// </summary>
        [Input("noncurrentVersionExpiration")]
        public Input<BucketLifecycleRulesNoncurrentVersionExpirationGetArgs>? NoncurrentVersionExpiration { get; set; }

        [Input("noncurrentVersionTransitions")]
        private InputList<BucketLifecycleRulesNoncurrentVersionTransitionsGetArgs>? _noncurrentVersionTransitions;

        /// <summary>
        /// Specifies when noncurrent object versions transitions (documented below).
        /// </summary>
        public InputList<BucketLifecycleRulesNoncurrentVersionTransitionsGetArgs> NoncurrentVersionTransitions
        {
            get => _noncurrentVersionTransitions ?? (_noncurrentVersionTransitions = new InputList<BucketLifecycleRulesNoncurrentVersionTransitionsGetArgs>());
            set => _noncurrentVersionTransitions = value;
        }

        /// <summary>
        /// Object key prefix identifying one or more objects to which the rule applies.
        /// </summary>
        [Input("prefix")]
        public Input<string>? Prefix { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// Specifies object tags key and value.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        [Input("transitions")]
        private InputList<BucketLifecycleRulesTransitionsGetArgs>? _transitions;

        /// <summary>
        /// Specifies a period in the object's transitions (documented below).
        /// </summary>
        public InputList<BucketLifecycleRulesTransitionsGetArgs> Transitions
        {
            get => _transitions ?? (_transitions = new InputList<BucketLifecycleRulesTransitionsGetArgs>());
            set => _transitions = value;
        }

        public BucketLifecycleRulesGetArgs()
        {
        }
    }

    public sealed class BucketLifecycleRulesNoncurrentVersionExpirationArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the number of days an object is noncurrent object versions expire.
        /// </summary>
        [Input("days")]
        public Input<int>? Days { get; set; }

        public BucketLifecycleRulesNoncurrentVersionExpirationArgs()
        {
        }
    }

    public sealed class BucketLifecycleRulesNoncurrentVersionExpirationGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the number of days an object is noncurrent object versions expire.
        /// </summary>
        [Input("days")]
        public Input<int>? Days { get; set; }

        public BucketLifecycleRulesNoncurrentVersionExpirationGetArgs()
        {
        }
    }

    public sealed class BucketLifecycleRulesNoncurrentVersionTransitionsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the number of days an object is noncurrent object versions expire.
        /// </summary>
        [Input("days")]
        public Input<int>? Days { get; set; }

        /// <summary>
        /// Specifies the Amazon S3 storage class to which you want the noncurrent versions object to transition. Can be `ONEZONE_IA`, `STANDARD_IA`, `INTELLIGENT_TIERING`, `GLACIER`, or `DEEP_ARCHIVE`.
        /// </summary>
        [Input("storageClass", required: true)]
        public Input<string> StorageClass { get; set; } = null!;

        public BucketLifecycleRulesNoncurrentVersionTransitionsArgs()
        {
        }
    }

    public sealed class BucketLifecycleRulesNoncurrentVersionTransitionsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the number of days an object is noncurrent object versions expire.
        /// </summary>
        [Input("days")]
        public Input<int>? Days { get; set; }

        /// <summary>
        /// Specifies the Amazon S3 storage class to which you want the noncurrent versions object to transition. Can be `ONEZONE_IA`, `STANDARD_IA`, `INTELLIGENT_TIERING`, `GLACIER`, or `DEEP_ARCHIVE`.
        /// </summary>
        [Input("storageClass", required: true)]
        public Input<string> StorageClass { get; set; } = null!;

        public BucketLifecycleRulesNoncurrentVersionTransitionsGetArgs()
        {
        }
    }

    public sealed class BucketLifecycleRulesTransitionsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the date after which you want the corresponding action to take effect.
        /// </summary>
        [Input("date")]
        public Input<string>? Date { get; set; }

        /// <summary>
        /// Specifies the number of days after object creation when the specific rule action takes effect.
        /// </summary>
        [Input("days")]
        public Input<int>? Days { get; set; }

        /// <summary>
        /// Specifies the Amazon S3 storage class to which you want the object to transition. Can be `ONEZONE_IA`, `STANDARD_IA`, `INTELLIGENT_TIERING`, `GLACIER`, or `DEEP_ARCHIVE`.
        /// </summary>
        [Input("storageClass", required: true)]
        public Input<string> StorageClass { get; set; } = null!;

        public BucketLifecycleRulesTransitionsArgs()
        {
        }
    }

    public sealed class BucketLifecycleRulesTransitionsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the date after which you want the corresponding action to take effect.
        /// </summary>
        [Input("date")]
        public Input<string>? Date { get; set; }

        /// <summary>
        /// Specifies the number of days after object creation when the specific rule action takes effect.
        /// </summary>
        [Input("days")]
        public Input<int>? Days { get; set; }

        /// <summary>
        /// Specifies the Amazon S3 storage class to which you want the object to transition. Can be `ONEZONE_IA`, `STANDARD_IA`, `INTELLIGENT_TIERING`, `GLACIER`, or `DEEP_ARCHIVE`.
        /// </summary>
        [Input("storageClass", required: true)]
        public Input<string> StorageClass { get; set; } = null!;

        public BucketLifecycleRulesTransitionsGetArgs()
        {
        }
    }

    public sealed class BucketLoggingsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the bucket that will receive the log objects.
        /// </summary>
        [Input("targetBucket", required: true)]
        public Input<string> TargetBucket { get; set; } = null!;

        /// <summary>
        /// To specify a key prefix for log objects.
        /// </summary>
        [Input("targetPrefix")]
        public Input<string>? TargetPrefix { get; set; }

        public BucketLoggingsArgs()
        {
        }
    }

    public sealed class BucketLoggingsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the bucket that will receive the log objects.
        /// </summary>
        [Input("targetBucket", required: true)]
        public Input<string> TargetBucket { get; set; } = null!;

        /// <summary>
        /// To specify a key prefix for log objects.
        /// </summary>
        [Input("targetPrefix")]
        public Input<string>? TargetPrefix { get; set; }

        public BucketLoggingsGetArgs()
        {
        }
    }

    public sealed class BucketObjectLockConfigurationArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Indicates whether this bucket has an Object Lock configuration enabled. Valid value is `Enabled`.
        /// </summary>
        [Input("objectLockEnabled", required: true)]
        public Input<string> ObjectLockEnabled { get; set; } = null!;

        /// <summary>
        /// The Object Lock rule in place for this bucket.
        /// </summary>
        [Input("rule")]
        public Input<BucketObjectLockConfigurationRuleArgs>? Rule { get; set; }

        public BucketObjectLockConfigurationArgs()
        {
        }
    }

    public sealed class BucketObjectLockConfigurationGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Indicates whether this bucket has an Object Lock configuration enabled. Valid value is `Enabled`.
        /// </summary>
        [Input("objectLockEnabled", required: true)]
        public Input<string> ObjectLockEnabled { get; set; } = null!;

        /// <summary>
        /// The Object Lock rule in place for this bucket.
        /// </summary>
        [Input("rule")]
        public Input<BucketObjectLockConfigurationRuleGetArgs>? Rule { get; set; }

        public BucketObjectLockConfigurationGetArgs()
        {
        }
    }

    public sealed class BucketObjectLockConfigurationRuleArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The default retention period that you want to apply to new objects placed in this bucket.
        /// </summary>
        [Input("defaultRetention", required: true)]
        public Input<BucketObjectLockConfigurationRuleDefaultRetentionArgs> DefaultRetention { get; set; } = null!;

        public BucketObjectLockConfigurationRuleArgs()
        {
        }
    }

    public sealed class BucketObjectLockConfigurationRuleDefaultRetentionArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The number of days that you want to specify for the default retention period.
        /// </summary>
        [Input("days")]
        public Input<int>? Days { get; set; }

        /// <summary>
        /// The default Object Lock retention mode you want to apply to new objects placed in this bucket. Valid values are `GOVERNANCE` and `COMPLIANCE`.
        /// </summary>
        [Input("mode", required: true)]
        public Input<string> Mode { get; set; } = null!;

        /// <summary>
        /// The number of years that you want to specify for the default retention period.
        /// </summary>
        [Input("years")]
        public Input<int>? Years { get; set; }

        public BucketObjectLockConfigurationRuleDefaultRetentionArgs()
        {
        }
    }

    public sealed class BucketObjectLockConfigurationRuleDefaultRetentionGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The number of days that you want to specify for the default retention period.
        /// </summary>
        [Input("days")]
        public Input<int>? Days { get; set; }

        /// <summary>
        /// The default Object Lock retention mode you want to apply to new objects placed in this bucket. Valid values are `GOVERNANCE` and `COMPLIANCE`.
        /// </summary>
        [Input("mode", required: true)]
        public Input<string> Mode { get; set; } = null!;

        /// <summary>
        /// The number of years that you want to specify for the default retention period.
        /// </summary>
        [Input("years")]
        public Input<int>? Years { get; set; }

        public BucketObjectLockConfigurationRuleDefaultRetentionGetArgs()
        {
        }
    }

    public sealed class BucketObjectLockConfigurationRuleGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The default retention period that you want to apply to new objects placed in this bucket.
        /// </summary>
        [Input("defaultRetention", required: true)]
        public Input<BucketObjectLockConfigurationRuleDefaultRetentionGetArgs> DefaultRetention { get; set; } = null!;

        public BucketObjectLockConfigurationRuleGetArgs()
        {
        }
    }

    public sealed class BucketReplicationConfigurationArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ARN of the IAM role for Amazon S3 to assume when replicating the objects.
        /// </summary>
        [Input("role", required: true)]
        public Input<string> Role { get; set; } = null!;

        [Input("rules", required: true)]
        private InputList<BucketReplicationConfigurationRulesArgs>? _rules;

        /// <summary>
        /// Specifies the rules managing the replication (documented below).
        /// </summary>
        public InputList<BucketReplicationConfigurationRulesArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<BucketReplicationConfigurationRulesArgs>());
            set => _rules = value;
        }

        public BucketReplicationConfigurationArgs()
        {
        }
    }

    public sealed class BucketReplicationConfigurationGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ARN of the IAM role for Amazon S3 to assume when replicating the objects.
        /// </summary>
        [Input("role", required: true)]
        public Input<string> Role { get; set; } = null!;

        [Input("rules", required: true)]
        private InputList<BucketReplicationConfigurationRulesGetArgs>? _rules;

        /// <summary>
        /// Specifies the rules managing the replication (documented below).
        /// </summary>
        public InputList<BucketReplicationConfigurationRulesGetArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<BucketReplicationConfigurationRulesGetArgs>());
            set => _rules = value;
        }

        public BucketReplicationConfigurationGetArgs()
        {
        }
    }

    public sealed class BucketReplicationConfigurationRulesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the destination for the rule (documented below).
        /// </summary>
        [Input("destination", required: true)]
        public Input<BucketReplicationConfigurationRulesDestinationArgs> Destination { get; set; } = null!;

        /// <summary>
        /// Filter that identifies subset of objects to which the replication rule applies (documented below).
        /// </summary>
        [Input("filter")]
        public Input<BucketReplicationConfigurationRulesFilterArgs>? Filter { get; set; }

        /// <summary>
        /// Unique identifier for the rule.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Object keyname prefix identifying one or more objects to which the rule applies.
        /// </summary>
        [Input("prefix")]
        public Input<string>? Prefix { get; set; }

        /// <summary>
        /// The priority associated with the rule.
        /// </summary>
        [Input("priority")]
        public Input<int>? Priority { get; set; }

        /// <summary>
        /// Specifies special object selection criteria (documented below).
        /// </summary>
        [Input("sourceSelectionCriteria")]
        public Input<BucketReplicationConfigurationRulesSourceSelectionCriteriaArgs>? SourceSelectionCriteria { get; set; }

        /// <summary>
        /// The status of the rule. Either `Enabled` or `Disabled`. The rule is ignored if status is not Enabled.
        /// </summary>
        [Input("status", required: true)]
        public Input<string> Status { get; set; } = null!;

        public BucketReplicationConfigurationRulesArgs()
        {
        }
    }

    public sealed class BucketReplicationConfigurationRulesDestinationAccessControlTranslationArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The override value for the owner on replicated objects. Currently only `Destination` is supported.
        /// </summary>
        [Input("owner", required: true)]
        public Input<string> Owner { get; set; } = null!;

        public BucketReplicationConfigurationRulesDestinationAccessControlTranslationArgs()
        {
        }
    }

    public sealed class BucketReplicationConfigurationRulesDestinationAccessControlTranslationGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The override value for the owner on replicated objects. Currently only `Destination` is supported.
        /// </summary>
        [Input("owner", required: true)]
        public Input<string> Owner { get; set; } = null!;

        public BucketReplicationConfigurationRulesDestinationAccessControlTranslationGetArgs()
        {
        }
    }

    public sealed class BucketReplicationConfigurationRulesDestinationArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the overrides to use for object owners on replication. Must be used in conjunction with `account_id` owner override configuration.
        /// </summary>
        [Input("accessControlTranslation")]
        public Input<BucketReplicationConfigurationRulesDestinationAccessControlTranslationArgs>? AccessControlTranslation { get; set; }

        /// <summary>
        /// The Account ID to use for overriding the object owner on replication. Must be used in conjunction with `access_control_translation` override configuration.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// The ARN of the S3 bucket where you want Amazon S3 to store replicas of the object identified by the rule.
        /// </summary>
        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        /// <summary>
        /// Destination KMS encryption key ARN for SSE-KMS replication. Must be used in conjunction with
        /// `sse_kms_encrypted_objects` source selection criteria.
        /// </summary>
        [Input("replicaKmsKeyId")]
        public Input<string>? ReplicaKmsKeyId { get; set; }

        /// <summary>
        /// The class of storage used to store the object. Can be `STANDARD`, `REDUCED_REDUNDANCY`, `STANDARD_IA`, `ONEZONE_IA`, `INTELLIGENT_TIERING`, `GLACIER`, or `DEEP_ARCHIVE`.
        /// </summary>
        [Input("storageClass")]
        public Input<string>? StorageClass { get; set; }

        public BucketReplicationConfigurationRulesDestinationArgs()
        {
        }
    }

    public sealed class BucketReplicationConfigurationRulesDestinationGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the overrides to use for object owners on replication. Must be used in conjunction with `account_id` owner override configuration.
        /// </summary>
        [Input("accessControlTranslation")]
        public Input<BucketReplicationConfigurationRulesDestinationAccessControlTranslationGetArgs>? AccessControlTranslation { get; set; }

        /// <summary>
        /// The Account ID to use for overriding the object owner on replication. Must be used in conjunction with `access_control_translation` override configuration.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// The ARN of the S3 bucket where you want Amazon S3 to store replicas of the object identified by the rule.
        /// </summary>
        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        /// <summary>
        /// Destination KMS encryption key ARN for SSE-KMS replication. Must be used in conjunction with
        /// `sse_kms_encrypted_objects` source selection criteria.
        /// </summary>
        [Input("replicaKmsKeyId")]
        public Input<string>? ReplicaKmsKeyId { get; set; }

        /// <summary>
        /// The class of storage used to store the object. Can be `STANDARD`, `REDUCED_REDUNDANCY`, `STANDARD_IA`, `ONEZONE_IA`, `INTELLIGENT_TIERING`, `GLACIER`, or `DEEP_ARCHIVE`.
        /// </summary>
        [Input("storageClass")]
        public Input<string>? StorageClass { get; set; }

        public BucketReplicationConfigurationRulesDestinationGetArgs()
        {
        }
    }

    public sealed class BucketReplicationConfigurationRulesFilterArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Object keyname prefix that identifies subset of objects to which the rule applies.
        /// </summary>
        [Input("prefix")]
        public Input<string>? Prefix { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// A mapping of tags that identifies subset of objects to which the rule applies.
        /// The rule applies only to objects having all the tags in its tagset.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        public BucketReplicationConfigurationRulesFilterArgs()
        {
        }
    }

    public sealed class BucketReplicationConfigurationRulesFilterGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Object keyname prefix that identifies subset of objects to which the rule applies.
        /// </summary>
        [Input("prefix")]
        public Input<string>? Prefix { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// A mapping of tags that identifies subset of objects to which the rule applies.
        /// The rule applies only to objects having all the tags in its tagset.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        public BucketReplicationConfigurationRulesFilterGetArgs()
        {
        }
    }

    public sealed class BucketReplicationConfigurationRulesGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the destination for the rule (documented below).
        /// </summary>
        [Input("destination", required: true)]
        public Input<BucketReplicationConfigurationRulesDestinationGetArgs> Destination { get; set; } = null!;

        /// <summary>
        /// Filter that identifies subset of objects to which the replication rule applies (documented below).
        /// </summary>
        [Input("filter")]
        public Input<BucketReplicationConfigurationRulesFilterGetArgs>? Filter { get; set; }

        /// <summary>
        /// Unique identifier for the rule.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Object keyname prefix identifying one or more objects to which the rule applies.
        /// </summary>
        [Input("prefix")]
        public Input<string>? Prefix { get; set; }

        /// <summary>
        /// The priority associated with the rule.
        /// </summary>
        [Input("priority")]
        public Input<int>? Priority { get; set; }

        /// <summary>
        /// Specifies special object selection criteria (documented below).
        /// </summary>
        [Input("sourceSelectionCriteria")]
        public Input<BucketReplicationConfigurationRulesSourceSelectionCriteriaGetArgs>? SourceSelectionCriteria { get; set; }

        /// <summary>
        /// The status of the rule. Either `Enabled` or `Disabled`. The rule is ignored if status is not Enabled.
        /// </summary>
        [Input("status", required: true)]
        public Input<string> Status { get; set; } = null!;

        public BucketReplicationConfigurationRulesGetArgs()
        {
        }
    }

    public sealed class BucketReplicationConfigurationRulesSourceSelectionCriteriaArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Match SSE-KMS encrypted objects (documented below). If specified, `replica_kms_key_id`
        /// in `destination` must be specified as well.
        /// </summary>
        [Input("sseKmsEncryptedObjects")]
        public Input<BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjectsArgs>? SseKmsEncryptedObjects { get; set; }

        public BucketReplicationConfigurationRulesSourceSelectionCriteriaArgs()
        {
        }
    }

    public sealed class BucketReplicationConfigurationRulesSourceSelectionCriteriaGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Match SSE-KMS encrypted objects (documented below). If specified, `replica_kms_key_id`
        /// in `destination` must be specified as well.
        /// </summary>
        [Input("sseKmsEncryptedObjects")]
        public Input<BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjectsGetArgs>? SseKmsEncryptedObjects { get; set; }

        public BucketReplicationConfigurationRulesSourceSelectionCriteriaGetArgs()
        {
        }
    }

    public sealed class BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjectsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Boolean which indicates if this criteria is enabled.
        /// </summary>
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        public BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjectsArgs()
        {
        }
    }

    public sealed class BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjectsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Boolean which indicates if this criteria is enabled.
        /// </summary>
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        public BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjectsGetArgs()
        {
        }
    }

    public sealed class BucketServerSideEncryptionConfigurationArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// A single object for server-side encryption by default configuration. (documented below)
        /// </summary>
        [Input("rule", required: true)]
        public Input<BucketServerSideEncryptionConfigurationRuleArgs> Rule { get; set; } = null!;

        public BucketServerSideEncryptionConfigurationArgs()
        {
        }
    }

    public sealed class BucketServerSideEncryptionConfigurationGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// A single object for server-side encryption by default configuration. (documented below)
        /// </summary>
        [Input("rule", required: true)]
        public Input<BucketServerSideEncryptionConfigurationRuleGetArgs> Rule { get; set; } = null!;

        public BucketServerSideEncryptionConfigurationGetArgs()
        {
        }
    }

    public sealed class BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The AWS KMS master key ID used for the SSE-KMS encryption. This can only be used when you set the value of `sse_algorithm` as `aws:kms`. The default `aws/s3` AWS KMS master key is used if this element is absent while the `sse_algorithm` is `aws:kms`.
        /// </summary>
        [Input("kmsMasterKeyId")]
        public Input<string>? KmsMasterKeyId { get; set; }

        /// <summary>
        /// The server-side encryption algorithm to use. Valid values are `AES256` and `aws:kms`
        /// </summary>
        [Input("sseAlgorithm", required: true)]
        public Input<string> SseAlgorithm { get; set; } = null!;

        public BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs()
        {
        }
    }

    public sealed class BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The AWS KMS master key ID used for the SSE-KMS encryption. This can only be used when you set the value of `sse_algorithm` as `aws:kms`. The default `aws/s3` AWS KMS master key is used if this element is absent while the `sse_algorithm` is `aws:kms`.
        /// </summary>
        [Input("kmsMasterKeyId")]
        public Input<string>? KmsMasterKeyId { get; set; }

        /// <summary>
        /// The server-side encryption algorithm to use. Valid values are `AES256` and `aws:kms`
        /// </summary>
        [Input("sseAlgorithm", required: true)]
        public Input<string> SseAlgorithm { get; set; } = null!;

        public BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultGetArgs()
        {
        }
    }

    public sealed class BucketServerSideEncryptionConfigurationRuleArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// A single object for setting server-side encryption by default. (documented below)
        /// </summary>
        [Input("applyServerSideEncryptionByDefault", required: true)]
        public Input<BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs> ApplyServerSideEncryptionByDefault { get; set; } = null!;

        public BucketServerSideEncryptionConfigurationRuleArgs()
        {
        }
    }

    public sealed class BucketServerSideEncryptionConfigurationRuleGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// A single object for setting server-side encryption by default. (documented below)
        /// </summary>
        [Input("applyServerSideEncryptionByDefault", required: true)]
        public Input<BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultGetArgs> ApplyServerSideEncryptionByDefault { get; set; } = null!;

        public BucketServerSideEncryptionConfigurationRuleGetArgs()
        {
        }
    }

    public sealed class BucketVersioningArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable versioning. Once you version-enable a bucket, it can never return to an unversioned state. You can, however, suspend versioning on that bucket.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Enable MFA delete for either `Change the versioning state of your bucket` or `Permanently delete an object version`. Default is `false`.
        /// </summary>
        [Input("mfaDelete")]
        public Input<bool>? MfaDelete { get; set; }

        public BucketVersioningArgs()
        {
        }
    }

    public sealed class BucketVersioningGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable versioning. Once you version-enable a bucket, it can never return to an unversioned state. You can, however, suspend versioning on that bucket.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Enable MFA delete for either `Change the versioning state of your bucket` or `Permanently delete an object version`. Default is `false`.
        /// </summary>
        [Input("mfaDelete")]
        public Input<bool>? MfaDelete { get; set; }

        public BucketVersioningGetArgs()
        {
        }
    }

    public sealed class BucketWebsiteArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// An absolute path to the document to return in case of a 4XX error.
        /// </summary>
        [Input("errorDocument")]
        public Input<string>? ErrorDocument { get; set; }

        /// <summary>
        /// Amazon S3 returns this index document when requests are made to the root domain or any of the subfolders.
        /// </summary>
        [Input("indexDocument")]
        public Input<string>? IndexDocument { get; set; }

        /// <summary>
        /// A hostname to redirect all website requests for this bucket to. Hostname can optionally be prefixed with a protocol (`http://` or `https://`) to use when redirecting requests. The default is the protocol that is used in the original request.
        /// </summary>
        [Input("redirectAllRequestsTo")]
        public Input<string>? RedirectAllRequestsTo { get; set; }

        /// <summary>
        /// A json array containing [routing rules](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html)
        /// describing redirect behavior and when redirects are applied.
        /// </summary>
        [Input("routingRules")]
        public Input<string>? RoutingRules { get; set; }

        public BucketWebsiteArgs()
        {
        }
    }

    public sealed class BucketWebsiteGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// An absolute path to the document to return in case of a 4XX error.
        /// </summary>
        [Input("errorDocument")]
        public Input<string>? ErrorDocument { get; set; }

        /// <summary>
        /// Amazon S3 returns this index document when requests are made to the root domain or any of the subfolders.
        /// </summary>
        [Input("indexDocument")]
        public Input<string>? IndexDocument { get; set; }

        /// <summary>
        /// A hostname to redirect all website requests for this bucket to. Hostname can optionally be prefixed with a protocol (`http://` or `https://`) to use when redirecting requests. The default is the protocol that is used in the original request.
        /// </summary>
        [Input("redirectAllRequestsTo")]
        public Input<string>? RedirectAllRequestsTo { get; set; }

        /// <summary>
        /// A json array containing [routing rules](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html)
        /// describing redirect behavior and when redirects are applied.
        /// </summary>
        [Input("routingRules")]
        public Input<string>? RoutingRules { get; set; }

        public BucketWebsiteGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class BucketCorsRules
    {
        /// <summary>
        /// Specifies which headers are allowed.
        /// </summary>
        public readonly ImmutableArray<string> AllowedHeaders;
        /// <summary>
        /// Specifies which methods are allowed. Can be `GET`, `PUT`, `POST`, `DELETE` or `HEAD`.
        /// </summary>
        public readonly ImmutableArray<string> AllowedMethods;
        /// <summary>
        /// Specifies which origins are allowed.
        /// </summary>
        public readonly ImmutableArray<string> AllowedOrigins;
        /// <summary>
        /// Specifies expose header in the response.
        /// </summary>
        public readonly ImmutableArray<string> ExposeHeaders;
        /// <summary>
        /// Specifies time in seconds that browser can cache the response for a preflight request.
        /// </summary>
        public readonly int? MaxAgeSeconds;

        [OutputConstructor]
        private BucketCorsRules(
            ImmutableArray<string> allowedHeaders,
            ImmutableArray<string> allowedMethods,
            ImmutableArray<string> allowedOrigins,
            ImmutableArray<string> exposeHeaders,
            int? maxAgeSeconds)
        {
            AllowedHeaders = allowedHeaders;
            AllowedMethods = allowedMethods;
            AllowedOrigins = allowedOrigins;
            ExposeHeaders = exposeHeaders;
            MaxAgeSeconds = maxAgeSeconds;
        }
    }

    [OutputType]
    public sealed class BucketGrants
    {
        /// <summary>
        /// Canonical user id to grant for. Used only when `type` is `CanonicalUser`.  
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// List of permissions to apply for grantee. Valid values are `READ`, `WRITE`, `READ_ACP`, `WRITE_ACP`, `FULL_ACCESS`.
        /// </summary>
        public readonly ImmutableArray<string> Permissions;
        /// <summary>
        /// - Type of grantee to apply for. Valid values are `CanonicalUser` and `Group`. `AmazonCustomerByEmail` is not supported.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Uri address to grant for. Used only when `type` is `Group`.
        /// </summary>
        public readonly string? Uri;

        [OutputConstructor]
        private BucketGrants(
            string? id,
            ImmutableArray<string> permissions,
            string type,
            string? uri)
        {
            Id = id;
            Permissions = permissions;
            Type = type;
            Uri = uri;
        }
    }

    [OutputType]
    public sealed class BucketLifecycleRules
    {
        /// <summary>
        /// Specifies the number of days after initiating a multipart upload when the multipart upload must be completed.
        /// </summary>
        public readonly int? AbortIncompleteMultipartUploadDays;
        /// <summary>
        /// Specifies lifecycle rule status.
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// Specifies a period in the object's expire (documented below).
        /// </summary>
        public readonly BucketLifecycleRulesExpiration? Expiration;
        /// <summary>
        /// Unique identifier for the rule.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Specifies when noncurrent object versions expire (documented below).
        /// </summary>
        public readonly BucketLifecycleRulesNoncurrentVersionExpiration? NoncurrentVersionExpiration;
        /// <summary>
        /// Specifies when noncurrent object versions transitions (documented below).
        /// </summary>
        public readonly ImmutableArray<BucketLifecycleRulesNoncurrentVersionTransitions> NoncurrentVersionTransitions;
        /// <summary>
        /// Object key prefix identifying one or more objects to which the rule applies.
        /// </summary>
        public readonly string? Prefix;
        /// <summary>
        /// Specifies object tags key and value.
        /// </summary>
        public readonly ImmutableDictionary<string, object>? Tags;
        /// <summary>
        /// Specifies a period in the object's transitions (documented below).
        /// </summary>
        public readonly ImmutableArray<BucketLifecycleRulesTransitions> Transitions;

        [OutputConstructor]
        private BucketLifecycleRules(
            int? abortIncompleteMultipartUploadDays,
            bool enabled,
            BucketLifecycleRulesExpiration? expiration,
            string id,
            BucketLifecycleRulesNoncurrentVersionExpiration? noncurrentVersionExpiration,
            ImmutableArray<BucketLifecycleRulesNoncurrentVersionTransitions> noncurrentVersionTransitions,
            string? prefix,
            ImmutableDictionary<string, object>? tags,
            ImmutableArray<BucketLifecycleRulesTransitions> transitions)
        {
            AbortIncompleteMultipartUploadDays = abortIncompleteMultipartUploadDays;
            Enabled = enabled;
            Expiration = expiration;
            Id = id;
            NoncurrentVersionExpiration = noncurrentVersionExpiration;
            NoncurrentVersionTransitions = noncurrentVersionTransitions;
            Prefix = prefix;
            Tags = tags;
            Transitions = transitions;
        }
    }

    [OutputType]
    public sealed class BucketLifecycleRulesExpiration
    {
        /// <summary>
        /// Specifies the date after which you want the corresponding action to take effect.
        /// </summary>
        public readonly string? Date;
        /// <summary>
        /// Specifies the number of days after object creation when the specific rule action takes effect.
        /// </summary>
        public readonly int? Days;
        /// <summary>
        /// On a versioned bucket (versioning-enabled or versioning-suspended bucket), you can add this element in the lifecycle configuration to direct Amazon S3 to delete expired object delete markers.
        /// </summary>
        public readonly bool? ExpiredObjectDeleteMarker;

        [OutputConstructor]
        private BucketLifecycleRulesExpiration(
            string? date,
            int? days,
            bool? expiredObjectDeleteMarker)
        {
            Date = date;
            Days = days;
            ExpiredObjectDeleteMarker = expiredObjectDeleteMarker;
        }
    }

    [OutputType]
    public sealed class BucketLifecycleRulesNoncurrentVersionExpiration
    {
        /// <summary>
        /// Specifies the number of days an object is noncurrent object versions expire.
        /// </summary>
        public readonly int? Days;

        [OutputConstructor]
        private BucketLifecycleRulesNoncurrentVersionExpiration(int? days)
        {
            Days = days;
        }
    }

    [OutputType]
    public sealed class BucketLifecycleRulesNoncurrentVersionTransitions
    {
        /// <summary>
        /// Specifies the number of days an object is noncurrent object versions expire.
        /// </summary>
        public readonly int? Days;
        /// <summary>
        /// Specifies the Amazon S3 storage class to which you want the noncurrent versions object to transition. Can be `ONEZONE_IA`, `STANDARD_IA`, `INTELLIGENT_TIERING`, `GLACIER`, or `DEEP_ARCHIVE`.
        /// </summary>
        public readonly string StorageClass;

        [OutputConstructor]
        private BucketLifecycleRulesNoncurrentVersionTransitions(
            int? days,
            string storageClass)
        {
            Days = days;
            StorageClass = storageClass;
        }
    }

    [OutputType]
    public sealed class BucketLifecycleRulesTransitions
    {
        /// <summary>
        /// Specifies the date after which you want the corresponding action to take effect.
        /// </summary>
        public readonly string? Date;
        /// <summary>
        /// Specifies the number of days after object creation when the specific rule action takes effect.
        /// </summary>
        public readonly int? Days;
        /// <summary>
        /// Specifies the Amazon S3 storage class to which you want the object to transition. Can be `ONEZONE_IA`, `STANDARD_IA`, `INTELLIGENT_TIERING`, `GLACIER`, or `DEEP_ARCHIVE`.
        /// </summary>
        public readonly string StorageClass;

        [OutputConstructor]
        private BucketLifecycleRulesTransitions(
            string? date,
            int? days,
            string storageClass)
        {
            Date = date;
            Days = days;
            StorageClass = storageClass;
        }
    }

    [OutputType]
    public sealed class BucketLoggings
    {
        /// <summary>
        /// The name of the bucket that will receive the log objects.
        /// </summary>
        public readonly string TargetBucket;
        /// <summary>
        /// To specify a key prefix for log objects.
        /// </summary>
        public readonly string? TargetPrefix;

        [OutputConstructor]
        private BucketLoggings(
            string targetBucket,
            string? targetPrefix)
        {
            TargetBucket = targetBucket;
            TargetPrefix = targetPrefix;
        }
    }

    [OutputType]
    public sealed class BucketObjectLockConfiguration
    {
        /// <summary>
        /// Indicates whether this bucket has an Object Lock configuration enabled. Valid value is `Enabled`.
        /// </summary>
        public readonly string ObjectLockEnabled;
        /// <summary>
        /// The Object Lock rule in place for this bucket.
        /// </summary>
        public readonly BucketObjectLockConfigurationRule? Rule;

        [OutputConstructor]
        private BucketObjectLockConfiguration(
            string objectLockEnabled,
            BucketObjectLockConfigurationRule? rule)
        {
            ObjectLockEnabled = objectLockEnabled;
            Rule = rule;
        }
    }

    [OutputType]
    public sealed class BucketObjectLockConfigurationRule
    {
        /// <summary>
        /// The default retention period that you want to apply to new objects placed in this bucket.
        /// </summary>
        public readonly BucketObjectLockConfigurationRuleDefaultRetention DefaultRetention;

        [OutputConstructor]
        private BucketObjectLockConfigurationRule(BucketObjectLockConfigurationRuleDefaultRetention defaultRetention)
        {
            DefaultRetention = defaultRetention;
        }
    }

    [OutputType]
    public sealed class BucketObjectLockConfigurationRuleDefaultRetention
    {
        /// <summary>
        /// The number of days that you want to specify for the default retention period.
        /// </summary>
        public readonly int? Days;
        /// <summary>
        /// The default Object Lock retention mode you want to apply to new objects placed in this bucket. Valid values are `GOVERNANCE` and `COMPLIANCE`.
        /// </summary>
        public readonly string Mode;
        /// <summary>
        /// The number of years that you want to specify for the default retention period.
        /// </summary>
        public readonly int? Years;

        [OutputConstructor]
        private BucketObjectLockConfigurationRuleDefaultRetention(
            int? days,
            string mode,
            int? years)
        {
            Days = days;
            Mode = mode;
            Years = years;
        }
    }

    [OutputType]
    public sealed class BucketReplicationConfiguration
    {
        /// <summary>
        /// The ARN of the IAM role for Amazon S3 to assume when replicating the objects.
        /// </summary>
        public readonly string Role;
        /// <summary>
        /// Specifies the rules managing the replication (documented below).
        /// </summary>
        public readonly ImmutableArray<BucketReplicationConfigurationRules> Rules;

        [OutputConstructor]
        private BucketReplicationConfiguration(
            string role,
            ImmutableArray<BucketReplicationConfigurationRules> rules)
        {
            Role = role;
            Rules = rules;
        }
    }

    [OutputType]
    public sealed class BucketReplicationConfigurationRules
    {
        /// <summary>
        /// Specifies the destination for the rule (documented below).
        /// </summary>
        public readonly BucketReplicationConfigurationRulesDestination Destination;
        /// <summary>
        /// Filter that identifies subset of objects to which the replication rule applies (documented below).
        /// </summary>
        public readonly BucketReplicationConfigurationRulesFilter? Filter;
        /// <summary>
        /// Unique identifier for the rule.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Object keyname prefix identifying one or more objects to which the rule applies.
        /// </summary>
        public readonly string? Prefix;
        /// <summary>
        /// The priority associated with the rule.
        /// </summary>
        public readonly int? Priority;
        /// <summary>
        /// Specifies special object selection criteria (documented below).
        /// </summary>
        public readonly BucketReplicationConfigurationRulesSourceSelectionCriteria? SourceSelectionCriteria;
        /// <summary>
        /// The status of the rule. Either `Enabled` or `Disabled`. The rule is ignored if status is not Enabled.
        /// </summary>
        public readonly string Status;

        [OutputConstructor]
        private BucketReplicationConfigurationRules(
            BucketReplicationConfigurationRulesDestination destination,
            BucketReplicationConfigurationRulesFilter? filter,
            string? id,
            string? prefix,
            int? priority,
            BucketReplicationConfigurationRulesSourceSelectionCriteria? sourceSelectionCriteria,
            string status)
        {
            Destination = destination;
            Filter = filter;
            Id = id;
            Prefix = prefix;
            Priority = priority;
            SourceSelectionCriteria = sourceSelectionCriteria;
            Status = status;
        }
    }

    [OutputType]
    public sealed class BucketReplicationConfigurationRulesDestination
    {
        /// <summary>
        /// Specifies the overrides to use for object owners on replication. Must be used in conjunction with `account_id` owner override configuration.
        /// </summary>
        public readonly BucketReplicationConfigurationRulesDestinationAccessControlTranslation? AccessControlTranslation;
        /// <summary>
        /// The Account ID to use for overriding the object owner on replication. Must be used in conjunction with `access_control_translation` override configuration.
        /// </summary>
        public readonly string? AccountId;
        /// <summary>
        /// The ARN of the S3 bucket where you want Amazon S3 to store replicas of the object identified by the rule.
        /// </summary>
        public readonly string Bucket;
        /// <summary>
        /// Destination KMS encryption key ARN for SSE-KMS replication. Must be used in conjunction with
        /// `sse_kms_encrypted_objects` source selection criteria.
        /// </summary>
        public readonly string? ReplicaKmsKeyId;
        /// <summary>
        /// The class of storage used to store the object. Can be `STANDARD`, `REDUCED_REDUNDANCY`, `STANDARD_IA`, `ONEZONE_IA`, `INTELLIGENT_TIERING`, `GLACIER`, or `DEEP_ARCHIVE`.
        /// </summary>
        public readonly string? StorageClass;

        [OutputConstructor]
        private BucketReplicationConfigurationRulesDestination(
            BucketReplicationConfigurationRulesDestinationAccessControlTranslation? accessControlTranslation,
            string? accountId,
            string bucket,
            string? replicaKmsKeyId,
            string? storageClass)
        {
            AccessControlTranslation = accessControlTranslation;
            AccountId = accountId;
            Bucket = bucket;
            ReplicaKmsKeyId = replicaKmsKeyId;
            StorageClass = storageClass;
        }
    }

    [OutputType]
    public sealed class BucketReplicationConfigurationRulesDestinationAccessControlTranslation
    {
        /// <summary>
        /// The override value for the owner on replicated objects. Currently only `Destination` is supported.
        /// </summary>
        public readonly string Owner;

        [OutputConstructor]
        private BucketReplicationConfigurationRulesDestinationAccessControlTranslation(string owner)
        {
            Owner = owner;
        }
    }

    [OutputType]
    public sealed class BucketReplicationConfigurationRulesFilter
    {
        /// <summary>
        /// Object keyname prefix that identifies subset of objects to which the rule applies.
        /// </summary>
        public readonly string? Prefix;
        /// <summary>
        /// A mapping of tags that identifies subset of objects to which the rule applies.
        /// The rule applies only to objects having all the tags in its tagset.
        /// </summary>
        public readonly ImmutableDictionary<string, object>? Tags;

        [OutputConstructor]
        private BucketReplicationConfigurationRulesFilter(
            string? prefix,
            ImmutableDictionary<string, object>? tags)
        {
            Prefix = prefix;
            Tags = tags;
        }
    }

    [OutputType]
    public sealed class BucketReplicationConfigurationRulesSourceSelectionCriteria
    {
        /// <summary>
        /// Match SSE-KMS encrypted objects (documented below). If specified, `replica_kms_key_id`
        /// in `destination` must be specified as well.
        /// </summary>
        public readonly BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjects? SseKmsEncryptedObjects;

        [OutputConstructor]
        private BucketReplicationConfigurationRulesSourceSelectionCriteria(BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjects? sseKmsEncryptedObjects)
        {
            SseKmsEncryptedObjects = sseKmsEncryptedObjects;
        }
    }

    [OutputType]
    public sealed class BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjects
    {
        /// <summary>
        /// Boolean which indicates if this criteria is enabled.
        /// </summary>
        public readonly bool Enabled;

        [OutputConstructor]
        private BucketReplicationConfigurationRulesSourceSelectionCriteriaSseKmsEncryptedObjects(bool enabled)
        {
            Enabled = enabled;
        }
    }

    [OutputType]
    public sealed class BucketServerSideEncryptionConfiguration
    {
        /// <summary>
        /// A single object for server-side encryption by default configuration. (documented below)
        /// </summary>
        public readonly BucketServerSideEncryptionConfigurationRule Rule;

        [OutputConstructor]
        private BucketServerSideEncryptionConfiguration(BucketServerSideEncryptionConfigurationRule rule)
        {
            Rule = rule;
        }
    }

    [OutputType]
    public sealed class BucketServerSideEncryptionConfigurationRule
    {
        /// <summary>
        /// A single object for setting server-side encryption by default. (documented below)
        /// </summary>
        public readonly BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault ApplyServerSideEncryptionByDefault;

        [OutputConstructor]
        private BucketServerSideEncryptionConfigurationRule(BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault applyServerSideEncryptionByDefault)
        {
            ApplyServerSideEncryptionByDefault = applyServerSideEncryptionByDefault;
        }
    }

    [OutputType]
    public sealed class BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault
    {
        /// <summary>
        /// The AWS KMS master key ID used for the SSE-KMS encryption. This can only be used when you set the value of `sse_algorithm` as `aws:kms`. The default `aws/s3` AWS KMS master key is used if this element is absent while the `sse_algorithm` is `aws:kms`.
        /// </summary>
        public readonly string? KmsMasterKeyId;
        /// <summary>
        /// The server-side encryption algorithm to use. Valid values are `AES256` and `aws:kms`
        /// </summary>
        public readonly string SseAlgorithm;

        [OutputConstructor]
        private BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault(
            string? kmsMasterKeyId,
            string sseAlgorithm)
        {
            KmsMasterKeyId = kmsMasterKeyId;
            SseAlgorithm = sseAlgorithm;
        }
    }

    [OutputType]
    public sealed class BucketVersioning
    {
        /// <summary>
        /// Enable versioning. Once you version-enable a bucket, it can never return to an unversioned state. You can, however, suspend versioning on that bucket.
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// Enable MFA delete for either `Change the versioning state of your bucket` or `Permanently delete an object version`. Default is `false`.
        /// </summary>
        public readonly bool? MfaDelete;

        [OutputConstructor]
        private BucketVersioning(
            bool? enabled,
            bool? mfaDelete)
        {
            Enabled = enabled;
            MfaDelete = mfaDelete;
        }
    }

    [OutputType]
    public sealed class BucketWebsite
    {
        /// <summary>
        /// An absolute path to the document to return in case of a 4XX error.
        /// </summary>
        public readonly string? ErrorDocument;
        /// <summary>
        /// Amazon S3 returns this index document when requests are made to the root domain or any of the subfolders.
        /// </summary>
        public readonly string? IndexDocument;
        /// <summary>
        /// A hostname to redirect all website requests for this bucket to. Hostname can optionally be prefixed with a protocol (`http://` or `https://`) to use when redirecting requests. The default is the protocol that is used in the original request.
        /// </summary>
        public readonly string? RedirectAllRequestsTo;
        /// <summary>
        /// A json array containing [routing rules](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html)
        /// describing redirect behavior and when redirects are applied.
        /// </summary>
        public readonly string? RoutingRules;

        [OutputConstructor]
        private BucketWebsite(
            string? errorDocument,
            string? indexDocument,
            string? redirectAllRequestsTo,
            string? routingRules)
        {
            ErrorDocument = errorDocument;
            IndexDocument = indexDocument;
            RedirectAllRequestsTo = redirectAllRequestsTo;
            RoutingRules = routingRules;
        }
    }
    }
}
