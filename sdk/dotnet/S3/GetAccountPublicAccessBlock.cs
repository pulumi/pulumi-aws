// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.S3
{
    public static class GetAccountPublicAccessBlock
    {
        /// <summary>
        /// The S3 account public access block data source returns account-level public access block configuration.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.S3.GetAccountPublicAccessBlock.Invoke();
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetAccountPublicAccessBlockResult> InvokeAsync(GetAccountPublicAccessBlockArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAccountPublicAccessBlockResult>("aws:s3/getAccountPublicAccessBlock:getAccountPublicAccessBlock", args ?? new GetAccountPublicAccessBlockArgs(), options.WithDefaults());

        /// <summary>
        /// The S3 account public access block data source returns account-level public access block configuration.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.S3.GetAccountPublicAccessBlock.Invoke();
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetAccountPublicAccessBlockResult> Invoke(GetAccountPublicAccessBlockInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetAccountPublicAccessBlockResult>("aws:s3/getAccountPublicAccessBlock:getAccountPublicAccessBlock", args ?? new GetAccountPublicAccessBlockInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAccountPublicAccessBlockArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// AWS account ID to configure. Defaults to automatically determined account ID of the AWS provider.
        /// </summary>
        [Input("accountId")]
        public string? AccountId { get; set; }

        public GetAccountPublicAccessBlockArgs()
        {
        }
        public static new GetAccountPublicAccessBlockArgs Empty => new GetAccountPublicAccessBlockArgs();
    }

    public sealed class GetAccountPublicAccessBlockInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// AWS account ID to configure. Defaults to automatically determined account ID of the AWS provider.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        public GetAccountPublicAccessBlockInvokeArgs()
        {
        }
        public static new GetAccountPublicAccessBlockInvokeArgs Empty => new GetAccountPublicAccessBlockInvokeArgs();
    }


    [OutputType]
    public sealed class GetAccountPublicAccessBlockResult
    {
        public readonly string? AccountId;
        /// <summary>
        /// Whether or not Amazon S3 should block public ACLs for buckets in this account is enabled. Returns as `true` or `false`.
        /// </summary>
        public readonly bool BlockPublicAcls;
        /// <summary>
        /// Whether or not Amazon S3 should block public bucket policies for buckets in this account is enabled. Returns as `true` or `false`.
        /// </summary>
        public readonly bool BlockPublicPolicy;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Whether or not Amazon S3 should ignore public ACLs for buckets in this account is enabled. Returns as `true` or `false`.
        /// </summary>
        public readonly bool IgnorePublicAcls;
        /// <summary>
        /// Whether or not Amazon S3 should restrict public bucket policies for buckets in this account is enabled. Returns as `true` or `false`.
        /// </summary>
        public readonly bool RestrictPublicBuckets;

        [OutputConstructor]
        private GetAccountPublicAccessBlockResult(
            string? accountId,

            bool blockPublicAcls,

            bool blockPublicPolicy,

            string id,

            bool ignorePublicAcls,

            bool restrictPublicBuckets)
        {
            AccountId = accountId;
            BlockPublicAcls = blockPublicAcls;
            BlockPublicPolicy = blockPublicPolicy;
            Id = id;
            IgnorePublicAcls = ignorePublicAcls;
            RestrictPublicBuckets = restrictPublicBuckets;
        }
    }
}
