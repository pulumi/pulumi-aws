// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.S3
{
    /// <summary>
    /// Provides a S3 bucket server-side encryption configuration resource.
    /// 
    /// &gt; **NOTE:** Destroying an `aws.s3.BucketServerSideEncryptionConfiguration` resource resets the bucket to [Amazon S3 bucket default encryption](https://docs.aws.amazon.com/AmazonS3/latest/userguide/default-encryption-faq.html).
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var mykey = new Aws.Kms.Key("mykey", new()
    ///     {
    ///         Description = "This key is used to encrypt bucket objects",
    ///         DeletionWindowInDays = 10,
    ///     });
    /// 
    ///     var mybucket = new Aws.S3.Bucket("mybucket", new()
    ///     {
    ///         BucketName = "mybucket",
    ///     });
    /// 
    ///     var example = new Aws.S3.BucketServerSideEncryptionConfiguration("example", new()
    ///     {
    ///         Bucket = mybucket.Id,
    ///         Rules = new[]
    ///         {
    ///             new Aws.S3.Inputs.BucketServerSideEncryptionConfigurationRuleArgs
    ///             {
    ///                 ApplyServerSideEncryptionByDefault = new Aws.S3.Inputs.BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs
    ///                 {
    ///                     KmsMasterKeyId = mykey.Arn,
    ///                     SseAlgorithm = "aws:kms",
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// If the owner (account ID) of the source bucket differs from the account used to configure the AWS Provider, import using the `bucket` and `expected_bucket_owner` separated by a comma (`,`):
    /// 
    /// __Using `pulumi import` to import__ S3 bucket server-side encryption configuration using the `bucket` or using the `bucket` and `expected_bucket_owner` separated by a comma (`,`). For example:
    /// 
    /// If the owner (account ID) of the source bucket is the same account used to configure the AWS Provider, import using the `bucket`:
    /// 
    /// ```sh
    /// $ pulumi import aws:s3/bucketServerSideEncryptionConfiguration:BucketServerSideEncryptionConfiguration example bucket-name
    /// ```
    /// If the owner (account ID) of the source bucket differs from the account used to configure the AWS Provider, import using the `bucket` and `expected_bucket_owner` separated by a comma (`,`):
    /// 
    /// ```sh
    /// $ pulumi import aws:s3/bucketServerSideEncryptionConfiguration:BucketServerSideEncryptionConfiguration example bucket-name,123456789012
    /// ```
    /// </summary>
    [AwsResourceType("aws:s3/bucketServerSideEncryptionConfiguration:BucketServerSideEncryptionConfiguration")]
    public partial class BucketServerSideEncryptionConfiguration : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ID (name) of the bucket.
        /// </summary>
        [Output("bucket")]
        public Output<string> Bucket { get; private set; } = null!;

        /// <summary>
        /// Account ID of the expected bucket owner.
        /// </summary>
        [Output("expectedBucketOwner")]
        public Output<string?> ExpectedBucketOwner { get; private set; } = null!;

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// Set of server-side encryption configuration rules. See below. Currently, only a single rule is supported.
        /// </summary>
        [Output("rules")]
        public Output<ImmutableArray<Outputs.BucketServerSideEncryptionConfigurationRule>> Rules { get; private set; } = null!;


        /// <summary>
        /// Create a BucketServerSideEncryptionConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BucketServerSideEncryptionConfiguration(string name, BucketServerSideEncryptionConfigurationArgs args, CustomResourceOptions? options = null)
            : base("aws:s3/bucketServerSideEncryptionConfiguration:BucketServerSideEncryptionConfiguration", name, args ?? new BucketServerSideEncryptionConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BucketServerSideEncryptionConfiguration(string name, Input<string> id, BucketServerSideEncryptionConfigurationState? state = null, CustomResourceOptions? options = null)
            : base("aws:s3/bucketServerSideEncryptionConfiguration:BucketServerSideEncryptionConfiguration", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "aws:s3/bucketServerSideEncryptionConfigurationV2:BucketServerSideEncryptionConfigurationV2" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BucketServerSideEncryptionConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BucketServerSideEncryptionConfiguration Get(string name, Input<string> id, BucketServerSideEncryptionConfigurationState? state = null, CustomResourceOptions? options = null)
        {
            return new BucketServerSideEncryptionConfiguration(name, id, state, options);
        }
    }

    public sealed class BucketServerSideEncryptionConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ID (name) of the bucket.
        /// </summary>
        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        /// <summary>
        /// Account ID of the expected bucket owner.
        /// </summary>
        [Input("expectedBucketOwner")]
        public Input<string>? ExpectedBucketOwner { get; set; }

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("rules", required: true)]
        private InputList<Inputs.BucketServerSideEncryptionConfigurationRuleArgs>? _rules;

        /// <summary>
        /// Set of server-side encryption configuration rules. See below. Currently, only a single rule is supported.
        /// </summary>
        public InputList<Inputs.BucketServerSideEncryptionConfigurationRuleArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.BucketServerSideEncryptionConfigurationRuleArgs>());
            set => _rules = value;
        }

        public BucketServerSideEncryptionConfigurationArgs()
        {
        }
        public static new BucketServerSideEncryptionConfigurationArgs Empty => new BucketServerSideEncryptionConfigurationArgs();
    }

    public sealed class BucketServerSideEncryptionConfigurationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ID (name) of the bucket.
        /// </summary>
        [Input("bucket")]
        public Input<string>? Bucket { get; set; }

        /// <summary>
        /// Account ID of the expected bucket owner.
        /// </summary>
        [Input("expectedBucketOwner")]
        public Input<string>? ExpectedBucketOwner { get; set; }

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("rules")]
        private InputList<Inputs.BucketServerSideEncryptionConfigurationRuleGetArgs>? _rules;

        /// <summary>
        /// Set of server-side encryption configuration rules. See below. Currently, only a single rule is supported.
        /// </summary>
        public InputList<Inputs.BucketServerSideEncryptionConfigurationRuleGetArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.BucketServerSideEncryptionConfigurationRuleGetArgs>());
            set => _rules = value;
        }

        public BucketServerSideEncryptionConfigurationState()
        {
        }
        public static new BucketServerSideEncryptionConfigurationState Empty => new BucketServerSideEncryptionConfigurationState();
    }
}
