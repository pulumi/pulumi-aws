// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.S3
{
    [AwsResourceType("aws:s3/inventory:Inventory")]
    public partial class Inventory : global::Pulumi.CustomResource
    {
        [Output("bucket")]
        public Output<string> Bucket { get; private set; } = null!;

        [Output("destination")]
        public Output<Outputs.InventoryDestination> Destination { get; private set; } = null!;

        [Output("enabled")]
        public Output<bool?> Enabled { get; private set; } = null!;

        [Output("filter")]
        public Output<Outputs.InventoryFilter?> Filter { get; private set; } = null!;

        [Output("includedObjectVersions")]
        public Output<string> IncludedObjectVersions { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("optionalFields")]
        public Output<ImmutableArray<string>> OptionalFields { get; private set; } = null!;

        [Output("schedule")]
        public Output<Outputs.InventorySchedule> Schedule { get; private set; } = null!;


        /// <summary>
        /// Create a Inventory resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Inventory(string name, InventoryArgs args, CustomResourceOptions? options = null)
            : base("aws:s3/inventory:Inventory", name, args ?? new InventoryArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Inventory(string name, Input<string> id, InventoryState? state = null, CustomResourceOptions? options = null)
            : base("aws:s3/inventory:Inventory", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Inventory resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Inventory Get(string name, Input<string> id, InventoryState? state = null, CustomResourceOptions? options = null)
        {
            return new Inventory(name, id, state, options);
        }
    }

    public sealed class InventoryArgs : global::Pulumi.ResourceArgs
    {
        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        [Input("destination", required: true)]
        public Input<Inputs.InventoryDestinationArgs> Destination { get; set; } = null!;

        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("filter")]
        public Input<Inputs.InventoryFilterArgs>? Filter { get; set; }

        [Input("includedObjectVersions", required: true)]
        public Input<string> IncludedObjectVersions { get; set; } = null!;

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("optionalFields")]
        private InputList<string>? _optionalFields;
        public InputList<string> OptionalFields
        {
            get => _optionalFields ?? (_optionalFields = new InputList<string>());
            set => _optionalFields = value;
        }

        [Input("schedule", required: true)]
        public Input<Inputs.InventoryScheduleArgs> Schedule { get; set; } = null!;

        public InventoryArgs()
        {
        }
        public static new InventoryArgs Empty => new InventoryArgs();
    }

    public sealed class InventoryState : global::Pulumi.ResourceArgs
    {
        [Input("bucket")]
        public Input<string>? Bucket { get; set; }

        [Input("destination")]
        public Input<Inputs.InventoryDestinationGetArgs>? Destination { get; set; }

        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("filter")]
        public Input<Inputs.InventoryFilterGetArgs>? Filter { get; set; }

        [Input("includedObjectVersions")]
        public Input<string>? IncludedObjectVersions { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("optionalFields")]
        private InputList<string>? _optionalFields;
        public InputList<string> OptionalFields
        {
            get => _optionalFields ?? (_optionalFields = new InputList<string>());
            set => _optionalFields = value;
        }

        [Input("schedule")]
        public Input<Inputs.InventoryScheduleGetArgs>? Schedule { get; set; }

        public InventoryState()
        {
        }
        public static new InventoryState Empty => new InventoryState();
    }
}
