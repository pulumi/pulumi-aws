// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.S3
{
    /// <summary>
    /// Provides a S3 bucket [inventory configuration](https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-inventory.html) resource.
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/s3_bucket_inventory.html.markdown.
    /// </summary>
    public partial class Inventory : Pulumi.CustomResource
    {
        /// <summary>
        /// The S3 bucket configuration where inventory results are published (documented below).
        /// </summary>
        [Output("bucket")]
        public Output<string> Bucket { get; private set; } = null!;

        /// <summary>
        /// Contains information about where to publish the inventory results (documented below).
        /// </summary>
        [Output("destination")]
        public Output<Outputs.InventoryDestination> Destination { get; private set; } = null!;

        /// <summary>
        /// Specifies whether the inventory is enabled or disabled.
        /// </summary>
        [Output("enabled")]
        public Output<bool?> Enabled { get; private set; } = null!;

        /// <summary>
        /// Specifies an inventory filter. The inventory only includes objects that meet the filter's criteria (documented below).
        /// </summary>
        [Output("filter")]
        public Output<Outputs.InventoryFilter?> Filter { get; private set; } = null!;

        /// <summary>
        /// Object versions to include in the inventory list. Valid values: `All`, `Current`.
        /// </summary>
        [Output("includedObjectVersions")]
        public Output<string> IncludedObjectVersions { get; private set; } = null!;

        /// <summary>
        /// Unique identifier of the inventory configuration for the bucket.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// List of optional fields that are included in the inventory results.
        /// Valid values: `Size`, `LastModifiedDate`, `StorageClass`, `ETag`, `IsMultipartUploaded`, `ReplicationStatus`, `EncryptionStatus`, `ObjectLockRetainUntilDate`, `ObjectLockMode`, `ObjectLockLegalHoldStatus`, `IntelligentTieringAccessTier`.
        /// </summary>
        [Output("optionalFields")]
        public Output<ImmutableArray<string>> OptionalFields { get; private set; } = null!;

        /// <summary>
        /// Specifies the schedule for generating inventory results (documented below).
        /// </summary>
        [Output("schedule")]
        public Output<Outputs.InventorySchedule> Schedule { get; private set; } = null!;


        /// <summary>
        /// Create a Inventory resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Inventory(string name, InventoryArgs args, CustomResourceOptions? options = null)
            : base("aws:s3/inventory:Inventory", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private Inventory(string name, Input<string> id, InventoryState? state = null, CustomResourceOptions? options = null)
            : base("aws:s3/inventory:Inventory", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Inventory resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Inventory Get(string name, Input<string> id, InventoryState? state = null, CustomResourceOptions? options = null)
        {
            return new Inventory(name, id, state, options);
        }
    }

    public sealed class InventoryArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The S3 bucket configuration where inventory results are published (documented below).
        /// </summary>
        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        /// <summary>
        /// Contains information about where to publish the inventory results (documented below).
        /// </summary>
        [Input("destination", required: true)]
        public Input<Inputs.InventoryDestinationArgs> Destination { get; set; } = null!;

        /// <summary>
        /// Specifies whether the inventory is enabled or disabled.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Specifies an inventory filter. The inventory only includes objects that meet the filter's criteria (documented below).
        /// </summary>
        [Input("filter")]
        public Input<Inputs.InventoryFilterArgs>? Filter { get; set; }

        /// <summary>
        /// Object versions to include in the inventory list. Valid values: `All`, `Current`.
        /// </summary>
        [Input("includedObjectVersions", required: true)]
        public Input<string> IncludedObjectVersions { get; set; } = null!;

        /// <summary>
        /// Unique identifier of the inventory configuration for the bucket.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("optionalFields")]
        private InputList<string>? _optionalFields;

        /// <summary>
        /// List of optional fields that are included in the inventory results.
        /// Valid values: `Size`, `LastModifiedDate`, `StorageClass`, `ETag`, `IsMultipartUploaded`, `ReplicationStatus`, `EncryptionStatus`, `ObjectLockRetainUntilDate`, `ObjectLockMode`, `ObjectLockLegalHoldStatus`, `IntelligentTieringAccessTier`.
        /// </summary>
        public InputList<string> OptionalFields
        {
            get => _optionalFields ?? (_optionalFields = new InputList<string>());
            set => _optionalFields = value;
        }

        /// <summary>
        /// Specifies the schedule for generating inventory results (documented below).
        /// </summary>
        [Input("schedule", required: true)]
        public Input<Inputs.InventoryScheduleArgs> Schedule { get; set; } = null!;

        public InventoryArgs()
        {
        }
    }

    public sealed class InventoryState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The S3 bucket configuration where inventory results are published (documented below).
        /// </summary>
        [Input("bucket")]
        public Input<string>? Bucket { get; set; }

        /// <summary>
        /// Contains information about where to publish the inventory results (documented below).
        /// </summary>
        [Input("destination")]
        public Input<Inputs.InventoryDestinationGetArgs>? Destination { get; set; }

        /// <summary>
        /// Specifies whether the inventory is enabled or disabled.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Specifies an inventory filter. The inventory only includes objects that meet the filter's criteria (documented below).
        /// </summary>
        [Input("filter")]
        public Input<Inputs.InventoryFilterGetArgs>? Filter { get; set; }

        /// <summary>
        /// Object versions to include in the inventory list. Valid values: `All`, `Current`.
        /// </summary>
        [Input("includedObjectVersions")]
        public Input<string>? IncludedObjectVersions { get; set; }

        /// <summary>
        /// Unique identifier of the inventory configuration for the bucket.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("optionalFields")]
        private InputList<string>? _optionalFields;

        /// <summary>
        /// List of optional fields that are included in the inventory results.
        /// Valid values: `Size`, `LastModifiedDate`, `StorageClass`, `ETag`, `IsMultipartUploaded`, `ReplicationStatus`, `EncryptionStatus`, `ObjectLockRetainUntilDate`, `ObjectLockMode`, `ObjectLockLegalHoldStatus`, `IntelligentTieringAccessTier`.
        /// </summary>
        public InputList<string> OptionalFields
        {
            get => _optionalFields ?? (_optionalFields = new InputList<string>());
            set => _optionalFields = value;
        }

        /// <summary>
        /// Specifies the schedule for generating inventory results (documented below).
        /// </summary>
        [Input("schedule")]
        public Input<Inputs.InventoryScheduleGetArgs>? Schedule { get; set; }

        public InventoryState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class InventoryDestinationArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The S3 bucket configuration where inventory results are published (documented below).
        /// </summary>
        [Input("bucket", required: true)]
        public Input<InventoryDestinationBucketArgs> Bucket { get; set; } = null!;

        public InventoryDestinationArgs()
        {
        }
    }

    public sealed class InventoryDestinationBucketArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the account that owns the destination bucket. Recommended to be set to prevent problems if the destination bucket ownership changes.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// The Amazon S3 bucket ARN of the destination.
        /// </summary>
        [Input("bucketArn", required: true)]
        public Input<string> BucketArn { get; set; } = null!;

        /// <summary>
        /// Contains the type of server-side encryption to use to encrypt the inventory (documented below).
        /// </summary>
        [Input("encryption")]
        public Input<InventoryDestinationBucketEncryptionArgs>? Encryption { get; set; }

        /// <summary>
        /// Specifies the output format of the inventory results. Can be `CSV`, [`ORC`](https://orc.apache.org/) or [`Parquet`](https://parquet.apache.org/).
        /// </summary>
        [Input("format", required: true)]
        public Input<string> Format { get; set; } = null!;

        /// <summary>
        /// The prefix that is prepended to all inventory results.
        /// </summary>
        [Input("prefix")]
        public Input<string>? Prefix { get; set; }

        public InventoryDestinationBucketArgs()
        {
        }
    }

    public sealed class InventoryDestinationBucketEncryptionArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies to use server-side encryption with AWS KMS-managed keys to encrypt the inventory file (documented below).
        /// </summary>
        [Input("sseKms")]
        public Input<InventoryDestinationBucketEncryptionSseKmsArgs>? SseKms { get; set; }

        /// <summary>
        /// Specifies to use server-side encryption with Amazon S3-managed keys (SSE-S3) to encrypt the inventory file.
        /// </summary>
        [Input("sseS3")]
        public Input<InventoryDestinationBucketEncryptionSseS3Args>? SseS3 { get; set; }

        public InventoryDestinationBucketEncryptionArgs()
        {
        }
    }

    public sealed class InventoryDestinationBucketEncryptionGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies to use server-side encryption with AWS KMS-managed keys to encrypt the inventory file (documented below).
        /// </summary>
        [Input("sseKms")]
        public Input<InventoryDestinationBucketEncryptionSseKmsGetArgs>? SseKms { get; set; }

        /// <summary>
        /// Specifies to use server-side encryption with Amazon S3-managed keys (SSE-S3) to encrypt the inventory file.
        /// </summary>
        [Input("sseS3")]
        public Input<InventoryDestinationBucketEncryptionSseS3GetArgs>? SseS3 { get; set; }

        public InventoryDestinationBucketEncryptionGetArgs()
        {
        }
    }

    public sealed class InventoryDestinationBucketEncryptionSseKmsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ARN of the KMS customer master key (CMK) used to encrypt the inventory file.
        /// </summary>
        [Input("keyId", required: true)]
        public Input<string> KeyId { get; set; } = null!;

        public InventoryDestinationBucketEncryptionSseKmsArgs()
        {
        }
    }

    public sealed class InventoryDestinationBucketEncryptionSseKmsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ARN of the KMS customer master key (CMK) used to encrypt the inventory file.
        /// </summary>
        [Input("keyId", required: true)]
        public Input<string> KeyId { get; set; } = null!;

        public InventoryDestinationBucketEncryptionSseKmsGetArgs()
        {
        }
    }

    public sealed class InventoryDestinationBucketEncryptionSseS3Args : Pulumi.ResourceArgs
    {
        public InventoryDestinationBucketEncryptionSseS3Args()
        {
        }
    }

    public sealed class InventoryDestinationBucketEncryptionSseS3GetArgs : Pulumi.ResourceArgs
    {
        public InventoryDestinationBucketEncryptionSseS3GetArgs()
        {
        }
    }

    public sealed class InventoryDestinationBucketGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the account that owns the destination bucket. Recommended to be set to prevent problems if the destination bucket ownership changes.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// The Amazon S3 bucket ARN of the destination.
        /// </summary>
        [Input("bucketArn", required: true)]
        public Input<string> BucketArn { get; set; } = null!;

        /// <summary>
        /// Contains the type of server-side encryption to use to encrypt the inventory (documented below).
        /// </summary>
        [Input("encryption")]
        public Input<InventoryDestinationBucketEncryptionGetArgs>? Encryption { get; set; }

        /// <summary>
        /// Specifies the output format of the inventory results. Can be `CSV`, [`ORC`](https://orc.apache.org/) or [`Parquet`](https://parquet.apache.org/).
        /// </summary>
        [Input("format", required: true)]
        public Input<string> Format { get; set; } = null!;

        /// <summary>
        /// The prefix that is prepended to all inventory results.
        /// </summary>
        [Input("prefix")]
        public Input<string>? Prefix { get; set; }

        public InventoryDestinationBucketGetArgs()
        {
        }
    }

    public sealed class InventoryDestinationGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The S3 bucket configuration where inventory results are published (documented below).
        /// </summary>
        [Input("bucket", required: true)]
        public Input<InventoryDestinationBucketGetArgs> Bucket { get; set; } = null!;

        public InventoryDestinationGetArgs()
        {
        }
    }

    public sealed class InventoryFilterArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The prefix that is prepended to all inventory results.
        /// </summary>
        [Input("prefix")]
        public Input<string>? Prefix { get; set; }

        public InventoryFilterArgs()
        {
        }
    }

    public sealed class InventoryFilterGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The prefix that is prepended to all inventory results.
        /// </summary>
        [Input("prefix")]
        public Input<string>? Prefix { get; set; }

        public InventoryFilterGetArgs()
        {
        }
    }

    public sealed class InventoryScheduleArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies how frequently inventory results are produced. Valid values: `Daily`, `Weekly`.
        /// </summary>
        [Input("frequency", required: true)]
        public Input<string> Frequency { get; set; } = null!;

        public InventoryScheduleArgs()
        {
        }
    }

    public sealed class InventoryScheduleGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies how frequently inventory results are produced. Valid values: `Daily`, `Weekly`.
        /// </summary>
        [Input("frequency", required: true)]
        public Input<string> Frequency { get; set; } = null!;

        public InventoryScheduleGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class InventoryDestination
    {
        /// <summary>
        /// The S3 bucket configuration where inventory results are published (documented below).
        /// </summary>
        public readonly InventoryDestinationBucket Bucket;

        [OutputConstructor]
        private InventoryDestination(InventoryDestinationBucket bucket)
        {
            Bucket = bucket;
        }
    }

    [OutputType]
    public sealed class InventoryDestinationBucket
    {
        /// <summary>
        /// The ID of the account that owns the destination bucket. Recommended to be set to prevent problems if the destination bucket ownership changes.
        /// </summary>
        public readonly string? AccountId;
        /// <summary>
        /// The Amazon S3 bucket ARN of the destination.
        /// </summary>
        public readonly string BucketArn;
        /// <summary>
        /// Contains the type of server-side encryption to use to encrypt the inventory (documented below).
        /// </summary>
        public readonly InventoryDestinationBucketEncryption? Encryption;
        /// <summary>
        /// Specifies the output format of the inventory results. Can be `CSV`, [`ORC`](https://orc.apache.org/) or [`Parquet`](https://parquet.apache.org/).
        /// </summary>
        public readonly string Format;
        /// <summary>
        /// The prefix that is prepended to all inventory results.
        /// </summary>
        public readonly string? Prefix;

        [OutputConstructor]
        private InventoryDestinationBucket(
            string? accountId,
            string bucketArn,
            InventoryDestinationBucketEncryption? encryption,
            string format,
            string? prefix)
        {
            AccountId = accountId;
            BucketArn = bucketArn;
            Encryption = encryption;
            Format = format;
            Prefix = prefix;
        }
    }

    [OutputType]
    public sealed class InventoryDestinationBucketEncryption
    {
        /// <summary>
        /// Specifies to use server-side encryption with AWS KMS-managed keys to encrypt the inventory file (documented below).
        /// </summary>
        public readonly InventoryDestinationBucketEncryptionSseKms? SseKms;
        /// <summary>
        /// Specifies to use server-side encryption with Amazon S3-managed keys (SSE-S3) to encrypt the inventory file.
        /// </summary>
        public readonly InventoryDestinationBucketEncryptionSseS3? SseS3;

        [OutputConstructor]
        private InventoryDestinationBucketEncryption(
            InventoryDestinationBucketEncryptionSseKms? sseKms,
            InventoryDestinationBucketEncryptionSseS3? sseS3)
        {
            SseKms = sseKms;
            SseS3 = sseS3;
        }
    }

    [OutputType]
    public sealed class InventoryDestinationBucketEncryptionSseKms
    {
        /// <summary>
        /// The ARN of the KMS customer master key (CMK) used to encrypt the inventory file.
        /// </summary>
        public readonly string KeyId;

        [OutputConstructor]
        private InventoryDestinationBucketEncryptionSseKms(string keyId)
        {
            KeyId = keyId;
        }
    }

    [OutputType]
    public sealed class InventoryDestinationBucketEncryptionSseS3
    {
        [OutputConstructor]
        private InventoryDestinationBucketEncryptionSseS3()
        {
        }
    }

    [OutputType]
    public sealed class InventoryFilter
    {
        /// <summary>
        /// The prefix that is prepended to all inventory results.
        /// </summary>
        public readonly string? Prefix;

        [OutputConstructor]
        private InventoryFilter(string? prefix)
        {
            Prefix = prefix;
        }
    }

    [OutputType]
    public sealed class InventorySchedule
    {
        /// <summary>
        /// Specifies how frequently inventory results are produced. Valid values: `Daily`, `Weekly`.
        /// </summary>
        public readonly string Frequency;

        [OutputConstructor]
        private InventorySchedule(string frequency)
        {
            Frequency = frequency;
        }
    }
    }
}
