// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.S3
{
    /// <summary>
    /// ## Import
    /// 
    /// Using `pulumi import`, import S3 bucket replication configuration using the `bucket`. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:s3/bucketReplicationConfig:BucketReplicationConfig replication bucket-name
    /// ```
    /// </summary>
    [AwsResourceType("aws:s3/bucketReplicationConfig:BucketReplicationConfig")]
    public partial class BucketReplicationConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Name of the source S3 bucket you want Amazon S3 to monitor.
        /// </summary>
        [Output("bucket")]
        public Output<string> Bucket { get; private set; } = null!;

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// ARN of the IAM role for Amazon S3 to assume when replicating the objects.
        /// </summary>
        [Output("role")]
        public Output<string> Role { get; private set; } = null!;

        /// <summary>
        /// List of configuration blocks describing the rules managing the replication. See below.
        /// &gt; **NOTE:** Replication to multiple destination buckets requires that `priority` is specified in the `rule` object. If the corresponding rule requires no filter, an empty configuration block `filter {}` must be specified.
        /// 
        /// &gt; **NOTE:** Amazon S3's latest version of the replication configuration is V2, which includes the `filter` attribute for replication rules.
        /// 
        /// &gt; **NOTE:** The `existingObjectReplication` parameter is not supported by Amazon S3 at this time and should not be included in your `rule` configurations. Specifying this parameter will result in `MalformedXML` errors.
        /// To replicate existing objects, please refer to the [Replicating existing objects with S3 Batch Replication](https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-batch-replication-batch.html) documentation in the Amazon S3 User Guide.
        /// </summary>
        [Output("rules")]
        public Output<ImmutableArray<Outputs.BucketReplicationConfigRule>> Rules { get; private set; } = null!;

        /// <summary>
        /// Token to allow replication to be enabled on an Object Lock-enabled bucket. You must contact AWS support for the bucket's "Object Lock token".
        /// For more details, see [Using S3 Object Lock with replication](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock-managing.html#object-lock-managing-replication).
        /// </summary>
        [Output("token")]
        public Output<string?> Token { get; private set; } = null!;


        /// <summary>
        /// Create a BucketReplicationConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BucketReplicationConfig(string name, BucketReplicationConfigArgs args, CustomResourceOptions? options = null)
            : base("aws:s3/bucketReplicationConfig:BucketReplicationConfig", name, args ?? new BucketReplicationConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BucketReplicationConfig(string name, Input<string> id, BucketReplicationConfigState? state = null, CustomResourceOptions? options = null)
            : base("aws:s3/bucketReplicationConfig:BucketReplicationConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "token",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BucketReplicationConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BucketReplicationConfig Get(string name, Input<string> id, BucketReplicationConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new BucketReplicationConfig(name, id, state, options);
        }
    }

    public sealed class BucketReplicationConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the source S3 bucket you want Amazon S3 to monitor.
        /// </summary>
        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// ARN of the IAM role for Amazon S3 to assume when replicating the objects.
        /// </summary>
        [Input("role", required: true)]
        public Input<string> Role { get; set; } = null!;

        [Input("rules", required: true)]
        private InputList<Inputs.BucketReplicationConfigRuleArgs>? _rules;

        /// <summary>
        /// List of configuration blocks describing the rules managing the replication. See below.
        /// &gt; **NOTE:** Replication to multiple destination buckets requires that `priority` is specified in the `rule` object. If the corresponding rule requires no filter, an empty configuration block `filter {}` must be specified.
        /// 
        /// &gt; **NOTE:** Amazon S3's latest version of the replication configuration is V2, which includes the `filter` attribute for replication rules.
        /// 
        /// &gt; **NOTE:** The `existingObjectReplication` parameter is not supported by Amazon S3 at this time and should not be included in your `rule` configurations. Specifying this parameter will result in `MalformedXML` errors.
        /// To replicate existing objects, please refer to the [Replicating existing objects with S3 Batch Replication](https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-batch-replication-batch.html) documentation in the Amazon S3 User Guide.
        /// </summary>
        public InputList<Inputs.BucketReplicationConfigRuleArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.BucketReplicationConfigRuleArgs>());
            set => _rules = value;
        }

        [Input("token")]
        private Input<string>? _token;

        /// <summary>
        /// Token to allow replication to be enabled on an Object Lock-enabled bucket. You must contact AWS support for the bucket's "Object Lock token".
        /// For more details, see [Using S3 Object Lock with replication](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock-managing.html#object-lock-managing-replication).
        /// </summary>
        public Input<string>? Token
        {
            get => _token;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _token = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        public BucketReplicationConfigArgs()
        {
        }
        public static new BucketReplicationConfigArgs Empty => new BucketReplicationConfigArgs();
    }

    public sealed class BucketReplicationConfigState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the source S3 bucket you want Amazon S3 to monitor.
        /// </summary>
        [Input("bucket")]
        public Input<string>? Bucket { get; set; }

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// ARN of the IAM role for Amazon S3 to assume when replicating the objects.
        /// </summary>
        [Input("role")]
        public Input<string>? Role { get; set; }

        [Input("rules")]
        private InputList<Inputs.BucketReplicationConfigRuleGetArgs>? _rules;

        /// <summary>
        /// List of configuration blocks describing the rules managing the replication. See below.
        /// &gt; **NOTE:** Replication to multiple destination buckets requires that `priority` is specified in the `rule` object. If the corresponding rule requires no filter, an empty configuration block `filter {}` must be specified.
        /// 
        /// &gt; **NOTE:** Amazon S3's latest version of the replication configuration is V2, which includes the `filter` attribute for replication rules.
        /// 
        /// &gt; **NOTE:** The `existingObjectReplication` parameter is not supported by Amazon S3 at this time and should not be included in your `rule` configurations. Specifying this parameter will result in `MalformedXML` errors.
        /// To replicate existing objects, please refer to the [Replicating existing objects with S3 Batch Replication](https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-batch-replication-batch.html) documentation in the Amazon S3 User Guide.
        /// </summary>
        public InputList<Inputs.BucketReplicationConfigRuleGetArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.BucketReplicationConfigRuleGetArgs>());
            set => _rules = value;
        }

        [Input("token")]
        private Input<string>? _token;

        /// <summary>
        /// Token to allow replication to be enabled on an Object Lock-enabled bucket. You must contact AWS support for the bucket's "Object Lock token".
        /// For more details, see [Using S3 Object Lock with replication](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock-managing.html#object-lock-managing-replication).
        /// </summary>
        public Input<string>? Token
        {
            get => _token;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _token = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        public BucketReplicationConfigState()
        {
        }
        public static new BucketReplicationConfigState Empty => new BucketReplicationConfigState();
    }
}
