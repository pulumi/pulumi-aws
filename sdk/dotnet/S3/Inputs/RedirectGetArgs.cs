// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.S3.Inputs
{

    /// <summary>
    /// Provides instructions for redirecting the request. You can redirect requests to another host or another page, or you can specify another protocol to use. At least one property must be set.
    /// </summary>
    public sealed class RedirectGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The hostname to be used in the Location header that is returned in the response. If another property is set, `HostName` is not required.
        /// </summary>
        [Input("HostName")]
        public Input<string>? HostName { get; set; }

        /// <summary>
        /// The HTTP redirect code to be used in the Location header that is returned in the response. If another property is set, `HttpRedirectCode` is not required.
        /// </summary>
        [Input("HttpRedirectCode")]
        public Input<string>? HttpRedirectCode { get; set; }

        /// <summary>
        /// The protocol, http or https, to be used in the Location header that is returned in the response. If another property is set, `Protocol` is not required.
        /// </summary>
        [Input("Protocol")]
        public Input<string>? Protocol { get; set; }

        /// <summary>
        /// The prefix of the object key name that replaces the value of `KeyPrefixEquals` in the redirect request. If another property is set, `ReplaceKeyPrefixWith` is not required. It can be set only if `ReplaceKeyWith` is not set.
        /// </summary>
        [Input("ReplaceKeyPrefixWith")]
        public Input<string>? ReplaceKeyPrefixWith { get; set; }

        /// <summary>
        /// The object key to be used in the Location header that is returned in the response. If another property is set, `ReplaceKeyWith` is not required. It can be set only if `ReplaceKeyPrefixWith` is not set.
        /// </summary>
        [Input("ReplaceKeyWith")]
        public Input<string>? ReplaceKeyWith { get; set; }

        public RedirectGetArgs()
        {
        }
        public static new RedirectGetArgs Empty => new RedirectGetArgs();
    }
}
