// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.S3.Inputs
{

    public sealed class BucketV2LifecycleRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the number of days after initiating a multipart upload when the multipart upload must be completed.
        /// </summary>
        [Input("abortIncompleteMultipartUploadDays")]
        public Input<int>? AbortIncompleteMultipartUploadDays { get; set; }

        /// <summary>
        /// Specifies lifecycle rule status.
        /// </summary>
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        [Input("expirations")]
        private InputList<Inputs.BucketV2LifecycleRuleExpirationArgs>? _expirations;

        /// <summary>
        /// Specifies a period in the object's expire. See Expiration below for details.
        /// </summary>
        public InputList<Inputs.BucketV2LifecycleRuleExpirationArgs> Expirations
        {
            get => _expirations ?? (_expirations = new InputList<Inputs.BucketV2LifecycleRuleExpirationArgs>());
            set => _expirations = value;
        }

        /// <summary>
        /// Unique identifier for the rule. Must be less than or equal to 255 characters in length.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("noncurrentVersionExpirations")]
        private InputList<Inputs.BucketV2LifecycleRuleNoncurrentVersionExpirationArgs>? _noncurrentVersionExpirations;

        /// <summary>
        /// Specifies when noncurrent object versions expire. See Noncurrent Version Expiration below for details.
        /// </summary>
        public InputList<Inputs.BucketV2LifecycleRuleNoncurrentVersionExpirationArgs> NoncurrentVersionExpirations
        {
            get => _noncurrentVersionExpirations ?? (_noncurrentVersionExpirations = new InputList<Inputs.BucketV2LifecycleRuleNoncurrentVersionExpirationArgs>());
            set => _noncurrentVersionExpirations = value;
        }

        [Input("noncurrentVersionTransitions")]
        private InputList<Inputs.BucketV2LifecycleRuleNoncurrentVersionTransitionArgs>? _noncurrentVersionTransitions;

        /// <summary>
        /// Specifies when noncurrent object versions transitions. See Noncurrent Version Transition below for details.
        /// </summary>
        public InputList<Inputs.BucketV2LifecycleRuleNoncurrentVersionTransitionArgs> NoncurrentVersionTransitions
        {
            get => _noncurrentVersionTransitions ?? (_noncurrentVersionTransitions = new InputList<Inputs.BucketV2LifecycleRuleNoncurrentVersionTransitionArgs>());
            set => _noncurrentVersionTransitions = value;
        }

        /// <summary>
        /// Object key prefix identifying one or more objects to which the rule applies.
        /// </summary>
        [Input("prefix")]
        public Input<string>? Prefix { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Specifies object tags key and value.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("transitions")]
        private InputList<Inputs.BucketV2LifecycleRuleTransitionArgs>? _transitions;

        /// <summary>
        /// Specifies a period in the object's transitions. See Transition below for details.
        /// </summary>
        public InputList<Inputs.BucketV2LifecycleRuleTransitionArgs> Transitions
        {
            get => _transitions ?? (_transitions = new InputList<Inputs.BucketV2LifecycleRuleTransitionArgs>());
            set => _transitions = value;
        }

        public BucketV2LifecycleRuleArgs()
        {
        }
        public static new BucketV2LifecycleRuleArgs Empty => new BucketV2LifecycleRuleArgs();
    }
}
