// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.S3.Inputs
{

    public sealed class BucketLifecycleConfigurationV2RuleArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Configuration block that specifies the days since the initiation of an incomplete multipart upload that Amazon S3 will wait before permanently removing all parts of the upload documented below.
        /// </summary>
        [Input("abortIncompleteMultipartUpload")]
        public Input<Inputs.BucketLifecycleConfigurationV2RuleAbortIncompleteMultipartUploadArgs>? AbortIncompleteMultipartUpload { get; set; }

        /// <summary>
        /// Configuration block that specifies the expiration for the lifecycle of the object in the form of date, days and, whether the object has a delete marker documented below.
        /// </summary>
        [Input("expiration")]
        public Input<Inputs.BucketLifecycleConfigurationV2RuleExpirationArgs>? Expiration { get; set; }

        /// <summary>
        /// Configuration block used to identify objects that a Lifecycle Rule applies to documented below.
        /// </summary>
        [Input("filter")]
        public Input<Inputs.BucketLifecycleConfigurationV2RuleFilterArgs>? Filter { get; set; }

        /// <summary>
        /// Unique identifier for the rule. The value cannot be longer than 255 characters.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        /// <summary>
        /// Configuration block that specifies when noncurrent object versions expire documented below.
        /// </summary>
        [Input("noncurrentVersionExpiration")]
        public Input<Inputs.BucketLifecycleConfigurationV2RuleNoncurrentVersionExpirationArgs>? NoncurrentVersionExpiration { get; set; }

        [Input("noncurrentVersionTransitions")]
        private InputList<Inputs.BucketLifecycleConfigurationV2RuleNoncurrentVersionTransitionArgs>? _noncurrentVersionTransitions;

        /// <summary>
        /// Set of configuration blocks that specify the transition rule for the lifecycle rule that describes when noncurrent objects transition to a specific storage class documented below.
        /// </summary>
        public InputList<Inputs.BucketLifecycleConfigurationV2RuleNoncurrentVersionTransitionArgs> NoncurrentVersionTransitions
        {
            get => _noncurrentVersionTransitions ?? (_noncurrentVersionTransitions = new InputList<Inputs.BucketLifecycleConfigurationV2RuleNoncurrentVersionTransitionArgs>());
            set => _noncurrentVersionTransitions = value;
        }

        /// <summary>
        /// Prefix identifying one or more objects to which the rule applies. This has been deprecated by Amazon S3 and `filter` should be used instead.
        /// </summary>
        [Input("prefix")]
        public Input<string>? Prefix { get; set; }

        /// <summary>
        /// Whether the rule is currently being applied. Valid values: `Enabled` or `Disabled`.
        /// </summary>
        [Input("status", required: true)]
        public Input<string> Status { get; set; } = null!;

        [Input("transitions")]
        private InputList<Inputs.BucketLifecycleConfigurationV2RuleTransitionArgs>? _transitions;

        /// <summary>
        /// Set of configuration blocks that specify when an Amazon S3 object transitions to a specified storage class documented below.
        /// </summary>
        public InputList<Inputs.BucketLifecycleConfigurationV2RuleTransitionArgs> Transitions
        {
            get => _transitions ?? (_transitions = new InputList<Inputs.BucketLifecycleConfigurationV2RuleTransitionArgs>());
            set => _transitions = value;
        }

        public BucketLifecycleConfigurationV2RuleArgs()
        {
        }
    }
}
