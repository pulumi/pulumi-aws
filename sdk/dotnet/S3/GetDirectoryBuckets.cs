// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.S3
{
    public static class GetDirectoryBuckets
    {
        /// <summary>
        /// Lists Amazon S3 Express directory buckets.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.S3.GetDirectoryBuckets.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetDirectoryBucketsResult> InvokeAsync(GetDirectoryBucketsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDirectoryBucketsResult>("aws:s3/getDirectoryBuckets:getDirectoryBuckets", args ?? new GetDirectoryBucketsArgs(), options.WithDefaults());

        /// <summary>
        /// Lists Amazon S3 Express directory buckets.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.S3.GetDirectoryBuckets.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDirectoryBucketsResult> Invoke(GetDirectoryBucketsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDirectoryBucketsResult>("aws:s3/getDirectoryBuckets:getDirectoryBuckets", args ?? new GetDirectoryBucketsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Lists Amazon S3 Express directory buckets.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.S3.GetDirectoryBuckets.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDirectoryBucketsResult> Invoke(GetDirectoryBucketsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDirectoryBucketsResult>("aws:s3/getDirectoryBuckets:getDirectoryBuckets", args ?? new GetDirectoryBucketsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDirectoryBucketsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public string? Region { get; set; }

        public GetDirectoryBucketsArgs()
        {
        }
        public static new GetDirectoryBucketsArgs Empty => new GetDirectoryBucketsArgs();
    }

    public sealed class GetDirectoryBucketsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public GetDirectoryBucketsInvokeArgs()
        {
        }
        public static new GetDirectoryBucketsInvokeArgs Empty => new GetDirectoryBucketsInvokeArgs();
    }


    [OutputType]
    public sealed class GetDirectoryBucketsResult
    {
        /// <summary>
        /// Bucket ARNs.
        /// </summary>
        public readonly ImmutableArray<string> Arns;
        /// <summary>
        /// Buckets names.
        /// </summary>
        public readonly ImmutableArray<string> Buckets;
        public readonly string Id;
        public readonly string Region;

        [OutputConstructor]
        private GetDirectoryBucketsResult(
            ImmutableArray<string> arns,

            ImmutableArray<string> buckets,

            string id,

            string region)
        {
            Arns = arns;
            Buckets = buckets;
            Id = id;
            Region = region;
        }
    }
}
