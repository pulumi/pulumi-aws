// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.ResourceGroupsTaggingApi
{
    public static class GetResources
    {
        /// <summary>
        /// Provides details about resource tagging.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### Get All Resource Tag Mappings
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const test = aws.resourcegroupstaggingapi.getResources({});
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// test = aws.resourcegroupstaggingapi.get_resources()
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.ResourceGroupsTaggingApi.GetResources.Invoke();
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/resourcegroupstaggingapi"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := resourcegroupstaggingapi.GetResources(ctx, nil, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.resourcegroupstaggingapi.ResourcegroupstaggingapiFunctions;
        /// import com.pulumi.aws.resourcegroupstaggingapi.inputs.GetResourcesArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var test = ResourcegroupstaggingapiFunctions.getResources();
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   test:
        ///     fn::invoke:
        ///       Function: aws:resourcegroupstaggingapi:getResources
        ///       Arguments: {}
        /// ```
        /// {{% /example %}}
        /// {{% example %}}
        /// ### Filter By Tag Key and Value
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const test = aws.resourcegroupstaggingapi.getResources({
        ///     tagFilters: [{
        ///         key: "tag-key",
        ///         values: [
        ///             "tag-value-1",
        ///             "tag-value-2",
        ///         ],
        ///     }],
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// test = aws.resourcegroupstaggingapi.get_resources(tag_filters=[aws.resourcegroupstaggingapi.GetResourcesTagFilterArgs(
        ///     key="tag-key",
        ///     values=[
        ///         "tag-value-1",
        ///         "tag-value-2",
        ///     ],
        /// )])
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.ResourceGroupsTaggingApi.GetResources.Invoke(new()
        ///     {
        ///         TagFilters = new[]
        ///         {
        ///             new Aws.ResourceGroupsTaggingApi.Inputs.GetResourcesTagFilterInputArgs
        ///             {
        ///                 Key = "tag-key",
        ///                 Values = new[]
        ///                 {
        ///                     "tag-value-1",
        ///                     "tag-value-2",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/resourcegroupstaggingapi"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := resourcegroupstaggingapi.GetResources(ctx, &amp;resourcegroupstaggingapi.GetResourcesArgs{
        /// 			TagFilters: []resourcegroupstaggingapi.GetResourcesTagFilter{
        /// 				{
        /// 					Key: "tag-key",
        /// 					Values: []string{
        /// 						"tag-value-1",
        /// 						"tag-value-2",
        /// 					},
        /// 				},
        /// 			},
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.resourcegroupstaggingapi.ResourcegroupstaggingapiFunctions;
        /// import com.pulumi.aws.resourcegroupstaggingapi.inputs.GetResourcesArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var test = ResourcegroupstaggingapiFunctions.getResources(GetResourcesArgs.builder()
        ///             .tagFilters(GetResourcesTagFilterArgs.builder()
        ///                 .key("tag-key")
        ///                 .values(                
        ///                     "tag-value-1",
        ///                     "tag-value-2")
        ///                 .build())
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   test:
        ///     fn::invoke:
        ///       Function: aws:resourcegroupstaggingapi:getResources
        ///       Arguments:
        ///         tagFilters:
        ///           - key: tag-key
        ///             values:
        ///               - tag-value-1
        ///               - tag-value-2
        /// ```
        /// {{% /example %}}
        /// {{% example %}}
        /// ### Filter By Resource Type
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const test = aws.resourcegroupstaggingapi.getResources({
        ///     resourceTypeFilters: ["ec2:instance"],
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// test = aws.resourcegroupstaggingapi.get_resources(resource_type_filters=["ec2:instance"])
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.ResourceGroupsTaggingApi.GetResources.Invoke(new()
        ///     {
        ///         ResourceTypeFilters = new[]
        ///         {
        ///             "ec2:instance",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/resourcegroupstaggingapi"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := resourcegroupstaggingapi.GetResources(ctx, &amp;resourcegroupstaggingapi.GetResourcesArgs{
        /// 			ResourceTypeFilters: []string{
        /// 				"ec2:instance",
        /// 			},
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.resourcegroupstaggingapi.ResourcegroupstaggingapiFunctions;
        /// import com.pulumi.aws.resourcegroupstaggingapi.inputs.GetResourcesArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var test = ResourcegroupstaggingapiFunctions.getResources(GetResourcesArgs.builder()
        ///             .resourceTypeFilters("ec2:instance")
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   test:
        ///     fn::invoke:
        ///       Function: aws:resourcegroupstaggingapi:getResources
        ///       Arguments:
        ///         resourceTypeFilters:
        ///           - ec2:instance
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetResourcesResult> InvokeAsync(GetResourcesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetResourcesResult>("aws:resourcegroupstaggingapi/getResources:getResources", args ?? new GetResourcesArgs(), options.WithDefaults());

        /// <summary>
        /// Provides details about resource tagging.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### Get All Resource Tag Mappings
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const test = aws.resourcegroupstaggingapi.getResources({});
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// test = aws.resourcegroupstaggingapi.get_resources()
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.ResourceGroupsTaggingApi.GetResources.Invoke();
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/resourcegroupstaggingapi"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := resourcegroupstaggingapi.GetResources(ctx, nil, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.resourcegroupstaggingapi.ResourcegroupstaggingapiFunctions;
        /// import com.pulumi.aws.resourcegroupstaggingapi.inputs.GetResourcesArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var test = ResourcegroupstaggingapiFunctions.getResources();
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   test:
        ///     fn::invoke:
        ///       Function: aws:resourcegroupstaggingapi:getResources
        ///       Arguments: {}
        /// ```
        /// {{% /example %}}
        /// {{% example %}}
        /// ### Filter By Tag Key and Value
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const test = aws.resourcegroupstaggingapi.getResources({
        ///     tagFilters: [{
        ///         key: "tag-key",
        ///         values: [
        ///             "tag-value-1",
        ///             "tag-value-2",
        ///         ],
        ///     }],
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// test = aws.resourcegroupstaggingapi.get_resources(tag_filters=[aws.resourcegroupstaggingapi.GetResourcesTagFilterArgs(
        ///     key="tag-key",
        ///     values=[
        ///         "tag-value-1",
        ///         "tag-value-2",
        ///     ],
        /// )])
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.ResourceGroupsTaggingApi.GetResources.Invoke(new()
        ///     {
        ///         TagFilters = new[]
        ///         {
        ///             new Aws.ResourceGroupsTaggingApi.Inputs.GetResourcesTagFilterInputArgs
        ///             {
        ///                 Key = "tag-key",
        ///                 Values = new[]
        ///                 {
        ///                     "tag-value-1",
        ///                     "tag-value-2",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/resourcegroupstaggingapi"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := resourcegroupstaggingapi.GetResources(ctx, &amp;resourcegroupstaggingapi.GetResourcesArgs{
        /// 			TagFilters: []resourcegroupstaggingapi.GetResourcesTagFilter{
        /// 				{
        /// 					Key: "tag-key",
        /// 					Values: []string{
        /// 						"tag-value-1",
        /// 						"tag-value-2",
        /// 					},
        /// 				},
        /// 			},
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.resourcegroupstaggingapi.ResourcegroupstaggingapiFunctions;
        /// import com.pulumi.aws.resourcegroupstaggingapi.inputs.GetResourcesArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var test = ResourcegroupstaggingapiFunctions.getResources(GetResourcesArgs.builder()
        ///             .tagFilters(GetResourcesTagFilterArgs.builder()
        ///                 .key("tag-key")
        ///                 .values(                
        ///                     "tag-value-1",
        ///                     "tag-value-2")
        ///                 .build())
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   test:
        ///     fn::invoke:
        ///       Function: aws:resourcegroupstaggingapi:getResources
        ///       Arguments:
        ///         tagFilters:
        ///           - key: tag-key
        ///             values:
        ///               - tag-value-1
        ///               - tag-value-2
        /// ```
        /// {{% /example %}}
        /// {{% example %}}
        /// ### Filter By Resource Type
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const test = aws.resourcegroupstaggingapi.getResources({
        ///     resourceTypeFilters: ["ec2:instance"],
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// test = aws.resourcegroupstaggingapi.get_resources(resource_type_filters=["ec2:instance"])
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.ResourceGroupsTaggingApi.GetResources.Invoke(new()
        ///     {
        ///         ResourceTypeFilters = new[]
        ///         {
        ///             "ec2:instance",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/resourcegroupstaggingapi"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := resourcegroupstaggingapi.GetResources(ctx, &amp;resourcegroupstaggingapi.GetResourcesArgs{
        /// 			ResourceTypeFilters: []string{
        /// 				"ec2:instance",
        /// 			},
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.resourcegroupstaggingapi.ResourcegroupstaggingapiFunctions;
        /// import com.pulumi.aws.resourcegroupstaggingapi.inputs.GetResourcesArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var test = ResourcegroupstaggingapiFunctions.getResources(GetResourcesArgs.builder()
        ///             .resourceTypeFilters("ec2:instance")
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   test:
        ///     fn::invoke:
        ///       Function: aws:resourcegroupstaggingapi:getResources
        ///       Arguments:
        ///         resourceTypeFilters:
        ///           - ec2:instance
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetResourcesResult> Invoke(GetResourcesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetResourcesResult>("aws:resourcegroupstaggingapi/getResources:getResources", args ?? new GetResourcesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetResourcesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specifies whether to exclude resources that are compliant with the tag policy. You can use this parameter only if the `include_compliance_details` argument is also set to `true`.
        /// </summary>
        [Input("excludeCompliantResources")]
        public bool? ExcludeCompliantResources { get; set; }

        /// <summary>
        /// Specifies whether to include details regarding the compliance with the effective tag policy.
        /// </summary>
        [Input("includeComplianceDetails")]
        public bool? IncludeComplianceDetails { get; set; }

        [Input("resourceArnLists")]
        private List<string>? _resourceArnLists;

        /// <summary>
        /// Specifies a list of ARNs of resources for which you want to retrieve tag data. Conflicts with `filter`.
        /// </summary>
        public List<string> ResourceArnLists
        {
            get => _resourceArnLists ?? (_resourceArnLists = new List<string>());
            set => _resourceArnLists = value;
        }

        [Input("resourceTypeFilters")]
        private List<string>? _resourceTypeFilters;

        /// <summary>
        /// Constraints on the resources that you want returned. The format of each resource type is `service:resourceType`. For example, specifying a resource type of `ec2` returns all Amazon EC2 resources (which includes EC2 instances). Specifying a resource type of `ec2:instance` returns only EC2 instances.
        /// </summary>
        public List<string> ResourceTypeFilters
        {
            get => _resourceTypeFilters ?? (_resourceTypeFilters = new List<string>());
            set => _resourceTypeFilters = value;
        }

        [Input("tagFilters")]
        private List<Inputs.GetResourcesTagFilterArgs>? _tagFilters;

        /// <summary>
        /// Specifies a list of Tag Filters (keys and values) to restrict the output to only those resources that have the specified tag and, if included, the specified value. See Tag Filter below. Conflicts with `resource_arn_list`.
        /// </summary>
        public List<Inputs.GetResourcesTagFilterArgs> TagFilters
        {
            get => _tagFilters ?? (_tagFilters = new List<Inputs.GetResourcesTagFilterArgs>());
            set => _tagFilters = value;
        }

        public GetResourcesArgs()
        {
        }
        public static new GetResourcesArgs Empty => new GetResourcesArgs();
    }

    public sealed class GetResourcesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specifies whether to exclude resources that are compliant with the tag policy. You can use this parameter only if the `include_compliance_details` argument is also set to `true`.
        /// </summary>
        [Input("excludeCompliantResources")]
        public Input<bool>? ExcludeCompliantResources { get; set; }

        /// <summary>
        /// Specifies whether to include details regarding the compliance with the effective tag policy.
        /// </summary>
        [Input("includeComplianceDetails")]
        public Input<bool>? IncludeComplianceDetails { get; set; }

        [Input("resourceArnLists")]
        private InputList<string>? _resourceArnLists;

        /// <summary>
        /// Specifies a list of ARNs of resources for which you want to retrieve tag data. Conflicts with `filter`.
        /// </summary>
        public InputList<string> ResourceArnLists
        {
            get => _resourceArnLists ?? (_resourceArnLists = new InputList<string>());
            set => _resourceArnLists = value;
        }

        [Input("resourceTypeFilters")]
        private InputList<string>? _resourceTypeFilters;

        /// <summary>
        /// Constraints on the resources that you want returned. The format of each resource type is `service:resourceType`. For example, specifying a resource type of `ec2` returns all Amazon EC2 resources (which includes EC2 instances). Specifying a resource type of `ec2:instance` returns only EC2 instances.
        /// </summary>
        public InputList<string> ResourceTypeFilters
        {
            get => _resourceTypeFilters ?? (_resourceTypeFilters = new InputList<string>());
            set => _resourceTypeFilters = value;
        }

        [Input("tagFilters")]
        private InputList<Inputs.GetResourcesTagFilterInputArgs>? _tagFilters;

        /// <summary>
        /// Specifies a list of Tag Filters (keys and values) to restrict the output to only those resources that have the specified tag and, if included, the specified value. See Tag Filter below. Conflicts with `resource_arn_list`.
        /// </summary>
        public InputList<Inputs.GetResourcesTagFilterInputArgs> TagFilters
        {
            get => _tagFilters ?? (_tagFilters = new InputList<Inputs.GetResourcesTagFilterInputArgs>());
            set => _tagFilters = value;
        }

        public GetResourcesInvokeArgs()
        {
        }
        public static new GetResourcesInvokeArgs Empty => new GetResourcesInvokeArgs();
    }


    [OutputType]
    public sealed class GetResourcesResult
    {
        public readonly bool? ExcludeCompliantResources;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool? IncludeComplianceDetails;
        public readonly ImmutableArray<string> ResourceArnLists;
        /// <summary>
        /// List of objects matching the search criteria.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetResourcesResourceTagMappingListResult> ResourceTagMappingLists;
        public readonly ImmutableArray<string> ResourceTypeFilters;
        public readonly ImmutableArray<Outputs.GetResourcesTagFilterResult> TagFilters;

        [OutputConstructor]
        private GetResourcesResult(
            bool? excludeCompliantResources,

            string id,

            bool? includeComplianceDetails,

            ImmutableArray<string> resourceArnLists,

            ImmutableArray<Outputs.GetResourcesResourceTagMappingListResult> resourceTagMappingLists,

            ImmutableArray<string> resourceTypeFilters,

            ImmutableArray<Outputs.GetResourcesTagFilterResult> tagFilters)
        {
            ExcludeCompliantResources = excludeCompliantResources;
            Id = id;
            IncludeComplianceDetails = includeComplianceDetails;
            ResourceArnLists = resourceArnLists;
            ResourceTagMappingLists = resourceTagMappingLists;
            ResourceTypeFilters = resourceTypeFilters;
            TagFilters = tagFilters;
        }
    }
}
