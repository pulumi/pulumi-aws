// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Fsx
{
    [AwsResourceType("aws:fsx/windowsFileSystem:WindowsFileSystem")]
    public partial class WindowsFileSystem : global::Pulumi.CustomResource
    {
        [Output("activeDirectoryId")]
        public Output<string?> ActiveDirectoryId { get; private set; } = null!;

        [Output("aliases")]
        public Output<ImmutableArray<string>> Aliases { get; private set; } = null!;

        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("auditLogConfiguration")]
        public Output<Outputs.WindowsFileSystemAuditLogConfiguration> AuditLogConfiguration { get; private set; } = null!;

        [Output("automaticBackupRetentionDays")]
        public Output<int?> AutomaticBackupRetentionDays { get; private set; } = null!;

        [Output("backupId")]
        public Output<string?> BackupId { get; private set; } = null!;

        [Output("copyTagsToBackups")]
        public Output<bool?> CopyTagsToBackups { get; private set; } = null!;

        [Output("dailyAutomaticBackupStartTime")]
        public Output<string> DailyAutomaticBackupStartTime { get; private set; } = null!;

        [Output("deploymentType")]
        public Output<string?> DeploymentType { get; private set; } = null!;

        [Output("dnsName")]
        public Output<string> DnsName { get; private set; } = null!;

        [Output("kmsKeyId")]
        public Output<string> KmsKeyId { get; private set; } = null!;

        [Output("networkInterfaceIds")]
        public Output<ImmutableArray<string>> NetworkInterfaceIds { get; private set; } = null!;

        [Output("ownerId")]
        public Output<string> OwnerId { get; private set; } = null!;

        [Output("preferredFileServerIp")]
        public Output<string> PreferredFileServerIp { get; private set; } = null!;

        [Output("preferredSubnetId")]
        public Output<string> PreferredSubnetId { get; private set; } = null!;

        [Output("remoteAdministrationEndpoint")]
        public Output<string> RemoteAdministrationEndpoint { get; private set; } = null!;

        [Output("securityGroupIds")]
        public Output<ImmutableArray<string>> SecurityGroupIds { get; private set; } = null!;

        [Output("selfManagedActiveDirectory")]
        public Output<Outputs.WindowsFileSystemSelfManagedActiveDirectory?> SelfManagedActiveDirectory { get; private set; } = null!;

        [Output("skipFinalBackup")]
        public Output<bool?> SkipFinalBackup { get; private set; } = null!;

        [Output("storageCapacity")]
        public Output<int> StorageCapacity { get; private set; } = null!;

        [Output("storageType")]
        public Output<string?> StorageType { get; private set; } = null!;

        [Output("subnetIds")]
        public Output<ImmutableArray<string>> SubnetIds { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("throughputCapacity")]
        public Output<int> ThroughputCapacity { get; private set; } = null!;

        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;

        [Output("weeklyMaintenanceStartTime")]
        public Output<string> WeeklyMaintenanceStartTime { get; private set; } = null!;


        /// <summary>
        /// Create a WindowsFileSystem resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WindowsFileSystem(string name, WindowsFileSystemArgs args, CustomResourceOptions? options = null)
            : base("aws:fsx/windowsFileSystem:WindowsFileSystem", name, args ?? new WindowsFileSystemArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WindowsFileSystem(string name, Input<string> id, WindowsFileSystemState? state = null, CustomResourceOptions? options = null)
            : base("aws:fsx/windowsFileSystem:WindowsFileSystem", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WindowsFileSystem resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WindowsFileSystem Get(string name, Input<string> id, WindowsFileSystemState? state = null, CustomResourceOptions? options = null)
        {
            return new WindowsFileSystem(name, id, state, options);
        }
    }

    public sealed class WindowsFileSystemArgs : global::Pulumi.ResourceArgs
    {
        [Input("activeDirectoryId")]
        public Input<string>? ActiveDirectoryId { get; set; }

        [Input("aliases")]
        private InputList<string>? _aliases;
        public InputList<string> Aliases
        {
            get => _aliases ?? (_aliases = new InputList<string>());
            set => _aliases = value;
        }

        [Input("auditLogConfiguration")]
        public Input<Inputs.WindowsFileSystemAuditLogConfigurationArgs>? AuditLogConfiguration { get; set; }

        [Input("automaticBackupRetentionDays")]
        public Input<int>? AutomaticBackupRetentionDays { get; set; }

        [Input("backupId")]
        public Input<string>? BackupId { get; set; }

        [Input("copyTagsToBackups")]
        public Input<bool>? CopyTagsToBackups { get; set; }

        [Input("dailyAutomaticBackupStartTime")]
        public Input<string>? DailyAutomaticBackupStartTime { get; set; }

        [Input("deploymentType")]
        public Input<string>? DeploymentType { get; set; }

        [Input("kmsKeyId")]
        public Input<string>? KmsKeyId { get; set; }

        [Input("preferredSubnetId")]
        public Input<string>? PreferredSubnetId { get; set; }

        [Input("securityGroupIds")]
        private InputList<string>? _securityGroupIds;
        public InputList<string> SecurityGroupIds
        {
            get => _securityGroupIds ?? (_securityGroupIds = new InputList<string>());
            set => _securityGroupIds = value;
        }

        [Input("selfManagedActiveDirectory")]
        public Input<Inputs.WindowsFileSystemSelfManagedActiveDirectoryArgs>? SelfManagedActiveDirectory { get; set; }

        [Input("skipFinalBackup")]
        public Input<bool>? SkipFinalBackup { get; set; }

        [Input("storageCapacity")]
        public Input<int>? StorageCapacity { get; set; }

        [Input("storageType")]
        public Input<string>? StorageType { get; set; }

        [Input("subnetIds", required: true)]
        private InputList<string>? _subnetIds;
        public InputList<string> SubnetIds
        {
            get => _subnetIds ?? (_subnetIds = new InputList<string>());
            set => _subnetIds = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("throughputCapacity", required: true)]
        public Input<int> ThroughputCapacity { get; set; } = null!;

        [Input("weeklyMaintenanceStartTime")]
        public Input<string>? WeeklyMaintenanceStartTime { get; set; }

        public WindowsFileSystemArgs()
        {
        }
        public static new WindowsFileSystemArgs Empty => new WindowsFileSystemArgs();
    }

    public sealed class WindowsFileSystemState : global::Pulumi.ResourceArgs
    {
        [Input("activeDirectoryId")]
        public Input<string>? ActiveDirectoryId { get; set; }

        [Input("aliases")]
        private InputList<string>? _aliases;
        public InputList<string> Aliases
        {
            get => _aliases ?? (_aliases = new InputList<string>());
            set => _aliases = value;
        }

        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("auditLogConfiguration")]
        public Input<Inputs.WindowsFileSystemAuditLogConfigurationGetArgs>? AuditLogConfiguration { get; set; }

        [Input("automaticBackupRetentionDays")]
        public Input<int>? AutomaticBackupRetentionDays { get; set; }

        [Input("backupId")]
        public Input<string>? BackupId { get; set; }

        [Input("copyTagsToBackups")]
        public Input<bool>? CopyTagsToBackups { get; set; }

        [Input("dailyAutomaticBackupStartTime")]
        public Input<string>? DailyAutomaticBackupStartTime { get; set; }

        [Input("deploymentType")]
        public Input<string>? DeploymentType { get; set; }

        [Input("dnsName")]
        public Input<string>? DnsName { get; set; }

        [Input("kmsKeyId")]
        public Input<string>? KmsKeyId { get; set; }

        [Input("networkInterfaceIds")]
        private InputList<string>? _networkInterfaceIds;
        public InputList<string> NetworkInterfaceIds
        {
            get => _networkInterfaceIds ?? (_networkInterfaceIds = new InputList<string>());
            set => _networkInterfaceIds = value;
        }

        [Input("ownerId")]
        public Input<string>? OwnerId { get; set; }

        [Input("preferredFileServerIp")]
        public Input<string>? PreferredFileServerIp { get; set; }

        [Input("preferredSubnetId")]
        public Input<string>? PreferredSubnetId { get; set; }

        [Input("remoteAdministrationEndpoint")]
        public Input<string>? RemoteAdministrationEndpoint { get; set; }

        [Input("securityGroupIds")]
        private InputList<string>? _securityGroupIds;
        public InputList<string> SecurityGroupIds
        {
            get => _securityGroupIds ?? (_securityGroupIds = new InputList<string>());
            set => _securityGroupIds = value;
        }

        [Input("selfManagedActiveDirectory")]
        public Input<Inputs.WindowsFileSystemSelfManagedActiveDirectoryGetArgs>? SelfManagedActiveDirectory { get; set; }

        [Input("skipFinalBackup")]
        public Input<bool>? SkipFinalBackup { get; set; }

        [Input("storageCapacity")]
        public Input<int>? StorageCapacity { get; set; }

        [Input("storageType")]
        public Input<string>? StorageType { get; set; }

        [Input("subnetIds")]
        private InputList<string>? _subnetIds;
        public InputList<string> SubnetIds
        {
            get => _subnetIds ?? (_subnetIds = new InputList<string>());
            set => _subnetIds = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("throughputCapacity")]
        public Input<int>? ThroughputCapacity { get; set; }

        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        [Input("weeklyMaintenanceStartTime")]
        public Input<string>? WeeklyMaintenanceStartTime { get; set; }

        public WindowsFileSystemState()
        {
        }
        public static new WindowsFileSystemState Empty => new WindowsFileSystemState();
    }
}
