// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Fsx
{
    /// <summary>
    /// Manages a FSx ONTAP Volume.
    /// See the [FSx ONTAP User Guide](https://docs.aws.amazon.com/fsx/latest/ONTAPGuide/managing-volumes.html) for more information.
    /// 
    /// ## Example Usage
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var test = new Aws.Fsx.OntapVolume("test", new()
    ///     {
    ///         JunctionPath = "/test",
    ///         SizeInMegabytes = 1024,
    ///         StorageEfficiencyEnabled = true,
    ///         StorageVirtualMachineId = aws_fsx_ontap_storage_virtual_machine.Test.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// ### Using Tiering Policy
    /// 
    /// Additional information on tiering policy with ONTAP Volumes can be found in the [FSx ONTAP Guide](https://docs.aws.amazon.com/fsx/latest/ONTAPGuide/managing-volumes.html).
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var test = new Aws.Fsx.OntapVolume("test", new()
    ///     {
    ///         JunctionPath = "/test",
    ///         SizeInMegabytes = 1024,
    ///         StorageEfficiencyEnabled = true,
    ///         StorageVirtualMachineId = aws_fsx_ontap_storage_virtual_machine.Test.Id,
    ///         TieringPolicy = new Aws.Fsx.Inputs.OntapVolumeTieringPolicyArgs
    ///         {
    ///             Name = "AUTO",
    ///             CoolingPeriod = 31,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import FSx ONTAP volume using the `id`. For example:
    /// 
    /// ```sh
    ///  $ pulumi import aws:fsx/ontapVolume:OntapVolume example fsvol-12345678abcdef123
    /// ```
    /// </summary>
    [AwsResourceType("aws:fsx/ontapVolume:OntapVolume")]
    public partial class OntapVolume : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Amazon Resource Name of the volune.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// Describes the file system for the volume, e.g. `fs-12345679`
        /// </summary>
        [Output("fileSystemId")]
        public Output<string> FileSystemId { get; private set; } = null!;

        /// <summary>
        /// Specifies the FlexCache endpoint type of the volume, Valid values are `NONE`, `ORIGIN`, `CACHE`. Default value is `NONE`. These can be set by the ONTAP CLI or API and are use with FlexCache feature.
        /// </summary>
        [Output("flexcacheEndpointType")]
        public Output<string> FlexcacheEndpointType { get; private set; } = null!;

        /// <summary>
        /// Specifies the location in the storage virtual machine's namespace where the volume is mounted. The junction_path must have a leading forward slash, such as `/vol3`
        /// </summary>
        [Output("junctionPath")]
        public Output<string?> JunctionPath { get; private set; } = null!;

        /// <summary>
        /// The name of the Volume. You can use a maximum of 203 alphanumeric characters, plus the underscore (_) special character.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Specifies the type of volume, valid values are `RW`, `DP`. Default value is `RW`. These can be set by the ONTAP CLI or API. This setting is used as part of migration and replication [Migrating to Amazon FSx for NetApp ONTAP](https://docs.aws.amazon.com/fsx/latest/ONTAPGuide/migrating-fsx-ontap.html)
        /// </summary>
        [Output("ontapVolumeType")]
        public Output<string> OntapVolumeType { get; private set; } = null!;

        /// <summary>
        /// Specifies the volume security style, Valid values are `UNIX`, `NTFS`, and `MIXED`.
        /// </summary>
        [Output("securityStyle")]
        public Output<string> SecurityStyle { get; private set; } = null!;

        /// <summary>
        /// Specifies the size of the volume, in megabytes (MB), that you are creating.
        /// </summary>
        [Output("sizeInMegabytes")]
        public Output<int> SizeInMegabytes { get; private set; } = null!;

        /// <summary>
        /// When enabled, will skip the default final backup taken when the volume is deleted. This configuration must be applied separately before attempting to delete the resource to have the desired behavior. Defaults to `false`.
        /// </summary>
        [Output("skipFinalBackup")]
        public Output<bool?> SkipFinalBackup { get; private set; } = null!;

        /// <summary>
        /// Set to true to enable deduplication, compression, and compaction storage efficiency features on the volume.
        /// </summary>
        [Output("storageEfficiencyEnabled")]
        public Output<bool?> StorageEfficiencyEnabled { get; private set; } = null!;

        /// <summary>
        /// Specifies the storage virtual machine in which to create the volume.
        /// </summary>
        [Output("storageVirtualMachineId")]
        public Output<string> StorageVirtualMachineId { get; private set; } = null!;

        /// <summary>
        /// A map of tags to assign to the volume. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("tieringPolicy")]
        public Output<Outputs.OntapVolumeTieringPolicy?> TieringPolicy { get; private set; } = null!;

        /// <summary>
        /// The Volume's UUID (universally unique identifier).
        /// </summary>
        [Output("uuid")]
        public Output<string> Uuid { get; private set; } = null!;

        /// <summary>
        /// The type of volume, currently the only valid value is `ONTAP`.
        /// </summary>
        [Output("volumeType")]
        public Output<string?> VolumeType { get; private set; } = null!;


        /// <summary>
        /// Create a OntapVolume resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OntapVolume(string name, OntapVolumeArgs args, CustomResourceOptions? options = null)
            : base("aws:fsx/ontapVolume:OntapVolume", name, args ?? new OntapVolumeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OntapVolume(string name, Input<string> id, OntapVolumeState? state = null, CustomResourceOptions? options = null)
            : base("aws:fsx/ontapVolume:OntapVolume", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OntapVolume resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OntapVolume Get(string name, Input<string> id, OntapVolumeState? state = null, CustomResourceOptions? options = null)
        {
            return new OntapVolume(name, id, state, options);
        }
    }

    public sealed class OntapVolumeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the location in the storage virtual machine's namespace where the volume is mounted. The junction_path must have a leading forward slash, such as `/vol3`
        /// </summary>
        [Input("junctionPath")]
        public Input<string>? JunctionPath { get; set; }

        /// <summary>
        /// The name of the Volume. You can use a maximum of 203 alphanumeric characters, plus the underscore (_) special character.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies the type of volume, valid values are `RW`, `DP`. Default value is `RW`. These can be set by the ONTAP CLI or API. This setting is used as part of migration and replication [Migrating to Amazon FSx for NetApp ONTAP](https://docs.aws.amazon.com/fsx/latest/ONTAPGuide/migrating-fsx-ontap.html)
        /// </summary>
        [Input("ontapVolumeType")]
        public Input<string>? OntapVolumeType { get; set; }

        /// <summary>
        /// Specifies the volume security style, Valid values are `UNIX`, `NTFS`, and `MIXED`.
        /// </summary>
        [Input("securityStyle")]
        public Input<string>? SecurityStyle { get; set; }

        /// <summary>
        /// Specifies the size of the volume, in megabytes (MB), that you are creating.
        /// </summary>
        [Input("sizeInMegabytes", required: true)]
        public Input<int> SizeInMegabytes { get; set; } = null!;

        /// <summary>
        /// When enabled, will skip the default final backup taken when the volume is deleted. This configuration must be applied separately before attempting to delete the resource to have the desired behavior. Defaults to `false`.
        /// </summary>
        [Input("skipFinalBackup")]
        public Input<bool>? SkipFinalBackup { get; set; }

        /// <summary>
        /// Set to true to enable deduplication, compression, and compaction storage efficiency features on the volume.
        /// </summary>
        [Input("storageEfficiencyEnabled")]
        public Input<bool>? StorageEfficiencyEnabled { get; set; }

        /// <summary>
        /// Specifies the storage virtual machine in which to create the volume.
        /// </summary>
        [Input("storageVirtualMachineId", required: true)]
        public Input<string> StorageVirtualMachineId { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the volume. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tieringPolicy")]
        public Input<Inputs.OntapVolumeTieringPolicyArgs>? TieringPolicy { get; set; }

        /// <summary>
        /// The type of volume, currently the only valid value is `ONTAP`.
        /// </summary>
        [Input("volumeType")]
        public Input<string>? VolumeType { get; set; }

        public OntapVolumeArgs()
        {
        }
        public static new OntapVolumeArgs Empty => new OntapVolumeArgs();
    }

    public sealed class OntapVolumeState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Amazon Resource Name of the volune.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// Describes the file system for the volume, e.g. `fs-12345679`
        /// </summary>
        [Input("fileSystemId")]
        public Input<string>? FileSystemId { get; set; }

        /// <summary>
        /// Specifies the FlexCache endpoint type of the volume, Valid values are `NONE`, `ORIGIN`, `CACHE`. Default value is `NONE`. These can be set by the ONTAP CLI or API and are use with FlexCache feature.
        /// </summary>
        [Input("flexcacheEndpointType")]
        public Input<string>? FlexcacheEndpointType { get; set; }

        /// <summary>
        /// Specifies the location in the storage virtual machine's namespace where the volume is mounted. The junction_path must have a leading forward slash, such as `/vol3`
        /// </summary>
        [Input("junctionPath")]
        public Input<string>? JunctionPath { get; set; }

        /// <summary>
        /// The name of the Volume. You can use a maximum of 203 alphanumeric characters, plus the underscore (_) special character.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies the type of volume, valid values are `RW`, `DP`. Default value is `RW`. These can be set by the ONTAP CLI or API. This setting is used as part of migration and replication [Migrating to Amazon FSx for NetApp ONTAP](https://docs.aws.amazon.com/fsx/latest/ONTAPGuide/migrating-fsx-ontap.html)
        /// </summary>
        [Input("ontapVolumeType")]
        public Input<string>? OntapVolumeType { get; set; }

        /// <summary>
        /// Specifies the volume security style, Valid values are `UNIX`, `NTFS`, and `MIXED`.
        /// </summary>
        [Input("securityStyle")]
        public Input<string>? SecurityStyle { get; set; }

        /// <summary>
        /// Specifies the size of the volume, in megabytes (MB), that you are creating.
        /// </summary>
        [Input("sizeInMegabytes")]
        public Input<int>? SizeInMegabytes { get; set; }

        /// <summary>
        /// When enabled, will skip the default final backup taken when the volume is deleted. This configuration must be applied separately before attempting to delete the resource to have the desired behavior. Defaults to `false`.
        /// </summary>
        [Input("skipFinalBackup")]
        public Input<bool>? SkipFinalBackup { get; set; }

        /// <summary>
        /// Set to true to enable deduplication, compression, and compaction storage efficiency features on the volume.
        /// </summary>
        [Input("storageEfficiencyEnabled")]
        public Input<bool>? StorageEfficiencyEnabled { get; set; }

        /// <summary>
        /// Specifies the storage virtual machine in which to create the volume.
        /// </summary>
        [Input("storageVirtualMachineId")]
        public Input<string>? StorageVirtualMachineId { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the volume. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("tieringPolicy")]
        public Input<Inputs.OntapVolumeTieringPolicyGetArgs>? TieringPolicy { get; set; }

        /// <summary>
        /// The Volume's UUID (universally unique identifier).
        /// </summary>
        [Input("uuid")]
        public Input<string>? Uuid { get; set; }

        /// <summary>
        /// The type of volume, currently the only valid value is `ONTAP`.
        /// </summary>
        [Input("volumeType")]
        public Input<string>? VolumeType { get; set; }

        public OntapVolumeState()
        {
        }
        public static new OntapVolumeState Empty => new OntapVolumeState();
    }
}
