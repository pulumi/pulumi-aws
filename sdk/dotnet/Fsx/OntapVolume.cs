// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Fsx
{
    [AwsResourceType("aws:fsx/ontapVolume:OntapVolume")]
    public partial class OntapVolume : global::Pulumi.CustomResource
    {
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("fileSystemId")]
        public Output<string> FileSystemId { get; private set; } = null!;

        [Output("flexcacheEndpointType")]
        public Output<string> FlexcacheEndpointType { get; private set; } = null!;

        [Output("junctionPath")]
        public Output<string> JunctionPath { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("ontapVolumeType")]
        public Output<string> OntapVolumeType { get; private set; } = null!;

        [Output("securityStyle")]
        public Output<string?> SecurityStyle { get; private set; } = null!;

        [Output("sizeInMegabytes")]
        public Output<int> SizeInMegabytes { get; private set; } = null!;

        [Output("storageEfficiencyEnabled")]
        public Output<bool> StorageEfficiencyEnabled { get; private set; } = null!;

        [Output("storageVirtualMachineId")]
        public Output<string> StorageVirtualMachineId { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("tieringPolicy")]
        public Output<Outputs.OntapVolumeTieringPolicy?> TieringPolicy { get; private set; } = null!;

        [Output("uuid")]
        public Output<string> Uuid { get; private set; } = null!;

        [Output("volumeType")]
        public Output<string?> VolumeType { get; private set; } = null!;


        /// <summary>
        /// Create a OntapVolume resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OntapVolume(string name, OntapVolumeArgs args, CustomResourceOptions? options = null)
            : base("aws:fsx/ontapVolume:OntapVolume", name, args ?? new OntapVolumeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OntapVolume(string name, Input<string> id, OntapVolumeState? state = null, CustomResourceOptions? options = null)
            : base("aws:fsx/ontapVolume:OntapVolume", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OntapVolume resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OntapVolume Get(string name, Input<string> id, OntapVolumeState? state = null, CustomResourceOptions? options = null)
        {
            return new OntapVolume(name, id, state, options);
        }
    }

    public sealed class OntapVolumeArgs : global::Pulumi.ResourceArgs
    {
        [Input("junctionPath", required: true)]
        public Input<string> JunctionPath { get; set; } = null!;

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("securityStyle")]
        public Input<string>? SecurityStyle { get; set; }

        [Input("sizeInMegabytes", required: true)]
        public Input<int> SizeInMegabytes { get; set; } = null!;

        [Input("storageEfficiencyEnabled", required: true)]
        public Input<bool> StorageEfficiencyEnabled { get; set; } = null!;

        [Input("storageVirtualMachineId", required: true)]
        public Input<string> StorageVirtualMachineId { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tieringPolicy")]
        public Input<Inputs.OntapVolumeTieringPolicyArgs>? TieringPolicy { get; set; }

        [Input("volumeType")]
        public Input<string>? VolumeType { get; set; }

        public OntapVolumeArgs()
        {
        }
        public static new OntapVolumeArgs Empty => new OntapVolumeArgs();
    }

    public sealed class OntapVolumeState : global::Pulumi.ResourceArgs
    {
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("fileSystemId")]
        public Input<string>? FileSystemId { get; set; }

        [Input("flexcacheEndpointType")]
        public Input<string>? FlexcacheEndpointType { get; set; }

        [Input("junctionPath")]
        public Input<string>? JunctionPath { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("ontapVolumeType")]
        public Input<string>? OntapVolumeType { get; set; }

        [Input("securityStyle")]
        public Input<string>? SecurityStyle { get; set; }

        [Input("sizeInMegabytes")]
        public Input<int>? SizeInMegabytes { get; set; }

        [Input("storageEfficiencyEnabled")]
        public Input<bool>? StorageEfficiencyEnabled { get; set; }

        [Input("storageVirtualMachineId")]
        public Input<string>? StorageVirtualMachineId { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("tieringPolicy")]
        public Input<Inputs.OntapVolumeTieringPolicyGetArgs>? TieringPolicy { get; set; }

        [Input("uuid")]
        public Input<string>? Uuid { get; set; }

        [Input("volumeType")]
        public Input<string>? VolumeType { get; set; }

        public OntapVolumeState()
        {
        }
        public static new OntapVolumeState Empty => new OntapVolumeState();
    }
}
