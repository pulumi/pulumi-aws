// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Fsx
{
    /// <summary>
    /// Manages an Amazon FSx S3 Access Point attachment.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Fsx.S3AccessPointAttachment("example", new()
    ///     {
    ///         Name = "example-attachment",
    ///         Type = "OPENZFS",
    ///         OpenzfsConfiguration = new Aws.Fsx.Inputs.S3AccessPointAttachmentOpenzfsConfigurationArgs
    ///         {
    ///             VolumeId = exampleAwsFsxOpenzfsVolume.Id,
    ///             FileSystemIdentity = new Aws.Fsx.Inputs.S3AccessPointAttachmentOpenzfsConfigurationFileSystemIdentityArgs
    ///             {
    ///                 Type = "POSIX",
    ///                 PosixUser = new Aws.Fsx.Inputs.S3AccessPointAttachmentOpenzfsConfigurationFileSystemIdentityPosixUserArgs
    ///                 {
    ///                     Uid = 1001,
    ///                     Gid = 1001,
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import FSx S3 Access Point attachments using the `name`. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:fsx/s3AccessPointAttachment:S3AccessPointAttachment example example-attachment
    /// ```
    /// </summary>
    [AwsResourceType("aws:fsx/s3AccessPointAttachment:S3AccessPointAttachment")]
    public partial class S3AccessPointAttachment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Name of the S3 access point.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Configuration to use when creating and attaching an S3 access point to an FSx for OpenZFS volume. See `openzfs_configuration` Block for details.
        /// </summary>
        [Output("openzfsConfiguration")]
        public Output<Outputs.S3AccessPointAttachmentOpenzfsConfiguration?> OpenzfsConfiguration { get; private set; } = null!;

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// S3 access point configuration. See `s3_access_point` Block for details.
        /// </summary>
        [Output("s3AccessPoint")]
        public Output<Outputs.S3AccessPointAttachmentS3AccessPoint?> S3AccessPoint { get; private set; } = null!;

        /// <summary>
        /// S3 access point's alias.
        /// </summary>
        [Output("s3AccessPointAlias")]
        public Output<string> S3AccessPointAlias { get; private set; } = null!;

        /// <summary>
        /// S3 access point's ARN.
        /// </summary>
        [Output("s3AccessPointArn")]
        public Output<string> S3AccessPointArn { get; private set; } = null!;

        [Output("timeouts")]
        public Output<Outputs.S3AccessPointAttachmentTimeouts?> Timeouts { get; private set; } = null!;

        /// <summary>
        /// Type of S3 access point. Valid values: `OpenZFS`.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a S3AccessPointAttachment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public S3AccessPointAttachment(string name, S3AccessPointAttachmentArgs args, CustomResourceOptions? options = null)
            : base("aws:fsx/s3AccessPointAttachment:S3AccessPointAttachment", name, args ?? new S3AccessPointAttachmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private S3AccessPointAttachment(string name, Input<string> id, S3AccessPointAttachmentState? state = null, CustomResourceOptions? options = null)
            : base("aws:fsx/s3AccessPointAttachment:S3AccessPointAttachment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing S3AccessPointAttachment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static S3AccessPointAttachment Get(string name, Input<string> id, S3AccessPointAttachmentState? state = null, CustomResourceOptions? options = null)
        {
            return new S3AccessPointAttachment(name, id, state, options);
        }
    }

    public sealed class S3AccessPointAttachmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the S3 access point.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Configuration to use when creating and attaching an S3 access point to an FSx for OpenZFS volume. See `openzfs_configuration` Block for details.
        /// </summary>
        [Input("openzfsConfiguration")]
        public Input<Inputs.S3AccessPointAttachmentOpenzfsConfigurationArgs>? OpenzfsConfiguration { get; set; }

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// S3 access point configuration. See `s3_access_point` Block for details.
        /// </summary>
        [Input("s3AccessPoint")]
        public Input<Inputs.S3AccessPointAttachmentS3AccessPointArgs>? S3AccessPoint { get; set; }

        [Input("timeouts")]
        public Input<Inputs.S3AccessPointAttachmentTimeoutsArgs>? Timeouts { get; set; }

        /// <summary>
        /// Type of S3 access point. Valid values: `OpenZFS`.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public S3AccessPointAttachmentArgs()
        {
        }
        public static new S3AccessPointAttachmentArgs Empty => new S3AccessPointAttachmentArgs();
    }

    public sealed class S3AccessPointAttachmentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the S3 access point.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Configuration to use when creating and attaching an S3 access point to an FSx for OpenZFS volume. See `openzfs_configuration` Block for details.
        /// </summary>
        [Input("openzfsConfiguration")]
        public Input<Inputs.S3AccessPointAttachmentOpenzfsConfigurationGetArgs>? OpenzfsConfiguration { get; set; }

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// S3 access point configuration. See `s3_access_point` Block for details.
        /// </summary>
        [Input("s3AccessPoint")]
        public Input<Inputs.S3AccessPointAttachmentS3AccessPointGetArgs>? S3AccessPoint { get; set; }

        /// <summary>
        /// S3 access point's alias.
        /// </summary>
        [Input("s3AccessPointAlias")]
        public Input<string>? S3AccessPointAlias { get; set; }

        /// <summary>
        /// S3 access point's ARN.
        /// </summary>
        [Input("s3AccessPointArn")]
        public Input<string>? S3AccessPointArn { get; set; }

        [Input("timeouts")]
        public Input<Inputs.S3AccessPointAttachmentTimeoutsGetArgs>? Timeouts { get; set; }

        /// <summary>
        /// Type of S3 access point. Valid values: `OpenZFS`.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public S3AccessPointAttachmentState()
        {
        }
        public static new S3AccessPointAttachmentState Empty => new S3AccessPointAttachmentState();
    }
}
