// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Fsx
{
    public static class GetOntapStorageVirtualMachine
    {
        /// <summary>
        /// Retrieve information on FSx ONTAP Storage Virtual Machine (SVM).
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Fsx.GetOntapStorageVirtualMachine.Invoke(new()
        ///     {
        ///         Id = "svm-12345678",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% example %}}
        /// ### Filter Example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Fsx.GetOntapStorageVirtualMachine.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Aws.Fsx.Inputs.GetOntapStorageVirtualMachineFilterInputArgs
        ///             {
        ///                 Name = "file-system-id",
        ///                 Values = new[]
        ///                 {
        ///                     "fs-12345678",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetOntapStorageVirtualMachineResult> InvokeAsync(GetOntapStorageVirtualMachineArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOntapStorageVirtualMachineResult>("aws:fsx/getOntapStorageVirtualMachine:getOntapStorageVirtualMachine", args ?? new GetOntapStorageVirtualMachineArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieve information on FSx ONTAP Storage Virtual Machine (SVM).
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Fsx.GetOntapStorageVirtualMachine.Invoke(new()
        ///     {
        ///         Id = "svm-12345678",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% example %}}
        /// ### Filter Example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Fsx.GetOntapStorageVirtualMachine.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Aws.Fsx.Inputs.GetOntapStorageVirtualMachineFilterInputArgs
        ///             {
        ///                 Name = "file-system-id",
        ///                 Values = new[]
        ///                 {
        ///                     "fs-12345678",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetOntapStorageVirtualMachineResult> Invoke(GetOntapStorageVirtualMachineInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOntapStorageVirtualMachineResult>("aws:fsx/getOntapStorageVirtualMachine:getOntapStorageVirtualMachine", args ?? new GetOntapStorageVirtualMachineInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOntapStorageVirtualMachineArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetOntapStorageVirtualMachineFilterArgs>? _filters;

        /// <summary>
        /// Configuration block. Detailed below.
        /// </summary>
        public List<Inputs.GetOntapStorageVirtualMachineFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetOntapStorageVirtualMachineFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Identifier of the storage virtual machine (e.g. `svm-12345678`).
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        [Input("tags")]
        private Dictionary<string, string>? _tags;
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetOntapStorageVirtualMachineArgs()
        {
        }
        public static new GetOntapStorageVirtualMachineArgs Empty => new GetOntapStorageVirtualMachineArgs();
    }

    public sealed class GetOntapStorageVirtualMachineInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetOntapStorageVirtualMachineFilterInputArgs>? _filters;

        /// <summary>
        /// Configuration block. Detailed below.
        /// </summary>
        public InputList<Inputs.GetOntapStorageVirtualMachineFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetOntapStorageVirtualMachineFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Identifier of the storage virtual machine (e.g. `svm-12345678`).
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetOntapStorageVirtualMachineInvokeArgs()
        {
        }
        public static new GetOntapStorageVirtualMachineInvokeArgs Empty => new GetOntapStorageVirtualMachineInvokeArgs();
    }


    [OutputType]
    public sealed class GetOntapStorageVirtualMachineResult
    {
        /// <summary>
        /// The Microsoft Active Directory configuration to which the SVM is joined, if applicable. See Active Directory Configuration below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetOntapStorageVirtualMachineActiveDirectoryConfigurationResult> ActiveDirectoryConfigurations;
        /// <summary>
        /// Amazon Resource Name of the SVM.
        /// </summary>
        public readonly string Arn;
        /// <summary>
        /// The time that the SVM was created.
        /// </summary>
        public readonly string CreationTime;
        /// <summary>
        /// The endpoints that are used to access data or to manage the SVM using the NetApp ONTAP CLI, REST API, or NetApp CloudManager. They are the Iscsi, Management, Nfs, and Smb endpoints. See SVM Endpoints below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetOntapStorageVirtualMachineEndpointResult> Endpoints;
        /// <summary>
        /// Identifier of the file system (e.g. `fs-12345678`).
        /// </summary>
        public readonly string FileSystemId;
        public readonly ImmutableArray<Outputs.GetOntapStorageVirtualMachineFilterResult> Filters;
        /// <summary>
        /// The SVM's system generated unique ID.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The SVM's lifecycle status.
        /// </summary>
        public readonly string LifecycleStatus;
        /// <summary>
        /// Describes why the SVM lifecycle state changed. See Lifecycle Transition Reason below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetOntapStorageVirtualMachineLifecycleTransitionReasonResult> LifecycleTransitionReasons;
        /// <summary>
        /// The name of the SVM, if provisioned.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The SVM's subtype.
        /// </summary>
        public readonly string Subtype;
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// The SVM's UUID.
        /// </summary>
        public readonly string Uuid;

        [OutputConstructor]
        private GetOntapStorageVirtualMachineResult(
            ImmutableArray<Outputs.GetOntapStorageVirtualMachineActiveDirectoryConfigurationResult> activeDirectoryConfigurations,

            string arn,

            string creationTime,

            ImmutableArray<Outputs.GetOntapStorageVirtualMachineEndpointResult> endpoints,

            string fileSystemId,

            ImmutableArray<Outputs.GetOntapStorageVirtualMachineFilterResult> filters,

            string id,

            string lifecycleStatus,

            ImmutableArray<Outputs.GetOntapStorageVirtualMachineLifecycleTransitionReasonResult> lifecycleTransitionReasons,

            string name,

            string subtype,

            ImmutableDictionary<string, string> tags,

            string uuid)
        {
            ActiveDirectoryConfigurations = activeDirectoryConfigurations;
            Arn = arn;
            CreationTime = creationTime;
            Endpoints = endpoints;
            FileSystemId = fileSystemId;
            Filters = filters;
            Id = id;
            LifecycleStatus = lifecycleStatus;
            LifecycleTransitionReasons = lifecycleTransitionReasons;
            Name = name;
            Subtype = subtype;
            Tags = tags;
            Uuid = uuid;
        }
    }
}
