// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.NetworkManager
{
    public static class GetCoreNetworkPolicyDocument
    {
        public static Task<GetCoreNetworkPolicyDocumentResult> InvokeAsync(GetCoreNetworkPolicyDocumentArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCoreNetworkPolicyDocumentResult>("aws:networkmanager/getCoreNetworkPolicyDocument:getCoreNetworkPolicyDocument", args ?? new GetCoreNetworkPolicyDocumentArgs(), options.WithDefaults());

        public static Output<GetCoreNetworkPolicyDocumentResult> Invoke(GetCoreNetworkPolicyDocumentInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCoreNetworkPolicyDocumentResult>("aws:networkmanager/getCoreNetworkPolicyDocument:getCoreNetworkPolicyDocument", args ?? new GetCoreNetworkPolicyDocumentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCoreNetworkPolicyDocumentArgs : global::Pulumi.InvokeArgs
    {
        [Input("attachmentPolicies")]
        private List<Inputs.GetCoreNetworkPolicyDocumentAttachmentPolicyArgs>? _attachmentPolicies;
        public List<Inputs.GetCoreNetworkPolicyDocumentAttachmentPolicyArgs> AttachmentPolicies
        {
            get => _attachmentPolicies ?? (_attachmentPolicies = new List<Inputs.GetCoreNetworkPolicyDocumentAttachmentPolicyArgs>());
            set => _attachmentPolicies = value;
        }

        [Input("coreNetworkConfigurations", required: true)]
        private List<Inputs.GetCoreNetworkPolicyDocumentCoreNetworkConfigurationArgs>? _coreNetworkConfigurations;
        public List<Inputs.GetCoreNetworkPolicyDocumentCoreNetworkConfigurationArgs> CoreNetworkConfigurations
        {
            get => _coreNetworkConfigurations ?? (_coreNetworkConfigurations = new List<Inputs.GetCoreNetworkPolicyDocumentCoreNetworkConfigurationArgs>());
            set => _coreNetworkConfigurations = value;
        }

        [Input("segmentActions")]
        private List<Inputs.GetCoreNetworkPolicyDocumentSegmentActionArgs>? _segmentActions;
        public List<Inputs.GetCoreNetworkPolicyDocumentSegmentActionArgs> SegmentActions
        {
            get => _segmentActions ?? (_segmentActions = new List<Inputs.GetCoreNetworkPolicyDocumentSegmentActionArgs>());
            set => _segmentActions = value;
        }

        [Input("segments", required: true)]
        private List<Inputs.GetCoreNetworkPolicyDocumentSegmentArgs>? _segments;
        public List<Inputs.GetCoreNetworkPolicyDocumentSegmentArgs> Segments
        {
            get => _segments ?? (_segments = new List<Inputs.GetCoreNetworkPolicyDocumentSegmentArgs>());
            set => _segments = value;
        }

        [Input("version")]
        public string? Version { get; set; }

        public GetCoreNetworkPolicyDocumentArgs()
        {
        }
        public static new GetCoreNetworkPolicyDocumentArgs Empty => new GetCoreNetworkPolicyDocumentArgs();
    }

    public sealed class GetCoreNetworkPolicyDocumentInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("attachmentPolicies")]
        private InputList<Inputs.GetCoreNetworkPolicyDocumentAttachmentPolicyInputArgs>? _attachmentPolicies;
        public InputList<Inputs.GetCoreNetworkPolicyDocumentAttachmentPolicyInputArgs> AttachmentPolicies
        {
            get => _attachmentPolicies ?? (_attachmentPolicies = new InputList<Inputs.GetCoreNetworkPolicyDocumentAttachmentPolicyInputArgs>());
            set => _attachmentPolicies = value;
        }

        [Input("coreNetworkConfigurations", required: true)]
        private InputList<Inputs.GetCoreNetworkPolicyDocumentCoreNetworkConfigurationInputArgs>? _coreNetworkConfigurations;
        public InputList<Inputs.GetCoreNetworkPolicyDocumentCoreNetworkConfigurationInputArgs> CoreNetworkConfigurations
        {
            get => _coreNetworkConfigurations ?? (_coreNetworkConfigurations = new InputList<Inputs.GetCoreNetworkPolicyDocumentCoreNetworkConfigurationInputArgs>());
            set => _coreNetworkConfigurations = value;
        }

        [Input("segmentActions")]
        private InputList<Inputs.GetCoreNetworkPolicyDocumentSegmentActionInputArgs>? _segmentActions;
        public InputList<Inputs.GetCoreNetworkPolicyDocumentSegmentActionInputArgs> SegmentActions
        {
            get => _segmentActions ?? (_segmentActions = new InputList<Inputs.GetCoreNetworkPolicyDocumentSegmentActionInputArgs>());
            set => _segmentActions = value;
        }

        [Input("segments", required: true)]
        private InputList<Inputs.GetCoreNetworkPolicyDocumentSegmentInputArgs>? _segments;
        public InputList<Inputs.GetCoreNetworkPolicyDocumentSegmentInputArgs> Segments
        {
            get => _segments ?? (_segments = new InputList<Inputs.GetCoreNetworkPolicyDocumentSegmentInputArgs>());
            set => _segments = value;
        }

        [Input("version")]
        public Input<string>? Version { get; set; }

        public GetCoreNetworkPolicyDocumentInvokeArgs()
        {
        }
        public static new GetCoreNetworkPolicyDocumentInvokeArgs Empty => new GetCoreNetworkPolicyDocumentInvokeArgs();
    }


    [OutputType]
    public sealed class GetCoreNetworkPolicyDocumentResult
    {
        public readonly ImmutableArray<Outputs.GetCoreNetworkPolicyDocumentAttachmentPolicyResult> AttachmentPolicies;
        public readonly ImmutableArray<Outputs.GetCoreNetworkPolicyDocumentCoreNetworkConfigurationResult> CoreNetworkConfigurations;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Json;
        public readonly ImmutableArray<Outputs.GetCoreNetworkPolicyDocumentSegmentActionResult> SegmentActions;
        public readonly ImmutableArray<Outputs.GetCoreNetworkPolicyDocumentSegmentResult> Segments;
        public readonly string? Version;

        [OutputConstructor]
        private GetCoreNetworkPolicyDocumentResult(
            ImmutableArray<Outputs.GetCoreNetworkPolicyDocumentAttachmentPolicyResult> attachmentPolicies,

            ImmutableArray<Outputs.GetCoreNetworkPolicyDocumentCoreNetworkConfigurationResult> coreNetworkConfigurations,

            string id,

            string json,

            ImmutableArray<Outputs.GetCoreNetworkPolicyDocumentSegmentActionResult> segmentActions,

            ImmutableArray<Outputs.GetCoreNetworkPolicyDocumentSegmentResult> segments,

            string? version)
        {
            AttachmentPolicies = attachmentPolicies;
            CoreNetworkConfigurations = coreNetworkConfigurations;
            Id = id;
            Json = json;
            SegmentActions = segmentActions;
            Segments = segments;
            Version = version;
        }
    }
}
