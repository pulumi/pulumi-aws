// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.NetworkManager.Inputs
{

    public sealed class GetCoreNetworkPolicyDocumentAttachmentPolicyInputArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Action to take when a condition is true. Detailed Below.
        /// </summary>
        [Input("action", required: true)]
        public Input<Inputs.GetCoreNetworkPolicyDocumentAttachmentPolicyActionInputArgs> Action { get; set; } = null!;

        /// <summary>
        /// Valid values include `and` or `or`. This is a mandatory parameter only if you have more than one condition. The `condition_logic` apply to all of the conditions for a rule, which also means nested conditions of `and` or `or` are not supported. Use `or` if you want to associate the attachment with the segment by either the segment name or attachment tag value, or by the chosen conditions. Use `and` if you want to associate the attachment with the segment by either the segment name or attachment tag value and by the chosen conditions. Detailed Below.
        /// </summary>
        [Input("conditionLogic")]
        public Input<string>? ConditionLogic { get; set; }

        [Input("conditions", required: true)]
        private InputList<Inputs.GetCoreNetworkPolicyDocumentAttachmentPolicyConditionInputArgs>? _conditions;

        /// <summary>
        /// A block argument. Detailed Below.
        /// </summary>
        public InputList<Inputs.GetCoreNetworkPolicyDocumentAttachmentPolicyConditionInputArgs> Conditions
        {
            get => _conditions ?? (_conditions = new InputList<Inputs.GetCoreNetworkPolicyDocumentAttachmentPolicyConditionInputArgs>());
            set => _conditions = value;
        }

        /// <summary>
        /// A user-defined description that further helps identify the rule.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// An integer from `1` to `65535` indicating the rule's order number. Rules are processed in order from the lowest numbered rule to the highest. Rules stop processing when a rule is matched. It's important to make sure that you number your rules in the exact order that you want them processed.
        /// </summary>
        [Input("ruleNumber", required: true)]
        public Input<int> RuleNumber { get; set; } = null!;

        public GetCoreNetworkPolicyDocumentAttachmentPolicyInputArgs()
        {
        }
        public static new GetCoreNetworkPolicyDocumentAttachmentPolicyInputArgs Empty => new GetCoreNetworkPolicyDocumentAttachmentPolicyInputArgs();
    }
}
