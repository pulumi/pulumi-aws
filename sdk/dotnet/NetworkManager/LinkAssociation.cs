// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.NetworkManager
{
    /// <summary>
    /// Associates a link to a device.
    /// A device can be associated to multiple links and a link can be associated to multiple devices.
    /// The device and link must be in the same global network and the same site.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.NetworkManager.LinkAssociation("example", new()
    ///     {
    ///         GlobalNetworkId = aws_networkmanager_global_network.Example.Id,
    ///         LinkId = aws_networkmanager_link.Example.Id,
    ///         DeviceId = aws_networkmanager_device.Example.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import `aws_networkmanager_link_association` using the global network ID, link ID and device ID. For example:
    /// 
    /// ```sh
    ///  $ pulumi import aws:networkmanager/linkAssociation:LinkAssociation example global-network-0d47f6t230mz46dy4,link-444555aaabbb11223,device-07f6fd08867abc123
    /// ```
    /// </summary>
    [AwsResourceType("aws:networkmanager/linkAssociation:LinkAssociation")]
    public partial class LinkAssociation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the device.
        /// </summary>
        [Output("deviceId")]
        public Output<string> DeviceId { get; private set; } = null!;

        /// <summary>
        /// The ID of the global network.
        /// </summary>
        [Output("globalNetworkId")]
        public Output<string> GlobalNetworkId { get; private set; } = null!;

        /// <summary>
        /// The ID of the link.
        /// </summary>
        [Output("linkId")]
        public Output<string> LinkId { get; private set; } = null!;


        /// <summary>
        /// Create a LinkAssociation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LinkAssociation(string name, LinkAssociationArgs args, CustomResourceOptions? options = null)
            : base("aws:networkmanager/linkAssociation:LinkAssociation", name, args ?? new LinkAssociationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LinkAssociation(string name, Input<string> id, LinkAssociationState? state = null, CustomResourceOptions? options = null)
            : base("aws:networkmanager/linkAssociation:LinkAssociation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LinkAssociation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LinkAssociation Get(string name, Input<string> id, LinkAssociationState? state = null, CustomResourceOptions? options = null)
        {
            return new LinkAssociation(name, id, state, options);
        }
    }

    public sealed class LinkAssociationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the device.
        /// </summary>
        [Input("deviceId", required: true)]
        public Input<string> DeviceId { get; set; } = null!;

        /// <summary>
        /// The ID of the global network.
        /// </summary>
        [Input("globalNetworkId", required: true)]
        public Input<string> GlobalNetworkId { get; set; } = null!;

        /// <summary>
        /// The ID of the link.
        /// </summary>
        [Input("linkId", required: true)]
        public Input<string> LinkId { get; set; } = null!;

        public LinkAssociationArgs()
        {
        }
        public static new LinkAssociationArgs Empty => new LinkAssociationArgs();
    }

    public sealed class LinkAssociationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the device.
        /// </summary>
        [Input("deviceId")]
        public Input<string>? DeviceId { get; set; }

        /// <summary>
        /// The ID of the global network.
        /// </summary>
        [Input("globalNetworkId")]
        public Input<string>? GlobalNetworkId { get; set; }

        /// <summary>
        /// The ID of the link.
        /// </summary>
        [Input("linkId")]
        public Input<string>? LinkId { get; set; }

        public LinkAssociationState()
        {
        }
        public static new LinkAssociationState Empty => new LinkAssociationState();
    }
}
