// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.NetworkManager
{
    public static class GetLinks
    {
        public static Task<GetLinksResult> InvokeAsync(GetLinksArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLinksResult>("aws:networkmanager/getLinks:getLinks", args ?? new GetLinksArgs(), options.WithDefaults());

        public static Output<GetLinksResult> Invoke(GetLinksInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLinksResult>("aws:networkmanager/getLinks:getLinks", args ?? new GetLinksInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLinksArgs : global::Pulumi.InvokeArgs
    {
        [Input("globalNetworkId", required: true)]
        public string GlobalNetworkId { get; set; } = null!;

        [Input("providerName")]
        public string? ProviderName { get; set; }

        [Input("siteId")]
        public string? SiteId { get; set; }

        [Input("tags")]
        private Dictionary<string, string>? _tags;
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        [Input("type")]
        public string? Type { get; set; }

        public GetLinksArgs()
        {
        }
        public static new GetLinksArgs Empty => new GetLinksArgs();
    }

    public sealed class GetLinksInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("globalNetworkId", required: true)]
        public Input<string> GlobalNetworkId { get; set; } = null!;

        [Input("providerName")]
        public Input<string>? ProviderName { get; set; }

        [Input("siteId")]
        public Input<string>? SiteId { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("type")]
        public Input<string>? Type { get; set; }

        public GetLinksInvokeArgs()
        {
        }
        public static new GetLinksInvokeArgs Empty => new GetLinksInvokeArgs();
    }


    [OutputType]
    public sealed class GetLinksResult
    {
        public readonly string GlobalNetworkId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string? ProviderName;
        public readonly string? SiteId;
        public readonly ImmutableDictionary<string, string>? Tags;
        public readonly string? Type;

        [OutputConstructor]
        private GetLinksResult(
            string globalNetworkId,

            string id,

            ImmutableArray<string> ids,

            string? providerName,

            string? siteId,

            ImmutableDictionary<string, string>? tags,

            string? type)
        {
            GlobalNetworkId = globalNetworkId;
            Id = id;
            Ids = ids;
            ProviderName = providerName;
            SiteId = siteId;
            Tags = tags;
            Type = type;
        }
    }
}
