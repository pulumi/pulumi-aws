// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.NetworkManager
{
    /// <summary>
    /// Associates a transit gateway Connect peer with a device, and optionally, with a link.
    /// If you specify a link, it must be associated with the specified device.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.NetworkManager.TransitGatewayConnectPeerAssociation("example", new()
    ///     {
    ///         GlobalNetworkId = aws_networkmanager_global_network.Example.Id,
    ///         DeviceId = aws_networkmanager_device.Example.Id,
    ///         TransitGatewayConnectPeerArn = aws_ec2_transit_gateway_connect_peer.Example.Arn,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// `aws_networkmanager_transit_gateway_connect_peer_association` can be imported using the global network ID and customer gateway ARN, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import aws:networkmanager/transitGatewayConnectPeerAssociation:TransitGatewayConnectPeerAssociation example global-network-0d47f6t230mz46dy4,arn:aws:ec2:us-west-2:123456789012:transit-gateway-connect-peer/tgw-connect-peer-12345678
    /// ```
    /// </summary>
    [AwsResourceType("aws:networkmanager/transitGatewayConnectPeerAssociation:TransitGatewayConnectPeerAssociation")]
    public partial class TransitGatewayConnectPeerAssociation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the device.
        /// </summary>
        [Output("deviceId")]
        public Output<string> DeviceId { get; private set; } = null!;

        /// <summary>
        /// The ID of the global network.
        /// </summary>
        [Output("globalNetworkId")]
        public Output<string> GlobalNetworkId { get; private set; } = null!;

        /// <summary>
        /// The ID of the link.
        /// </summary>
        [Output("linkId")]
        public Output<string?> LinkId { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the Connect peer.
        /// </summary>
        [Output("transitGatewayConnectPeerArn")]
        public Output<string> TransitGatewayConnectPeerArn { get; private set; } = null!;


        /// <summary>
        /// Create a TransitGatewayConnectPeerAssociation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TransitGatewayConnectPeerAssociation(string name, TransitGatewayConnectPeerAssociationArgs args, CustomResourceOptions? options = null)
            : base("aws:networkmanager/transitGatewayConnectPeerAssociation:TransitGatewayConnectPeerAssociation", name, args ?? new TransitGatewayConnectPeerAssociationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TransitGatewayConnectPeerAssociation(string name, Input<string> id, TransitGatewayConnectPeerAssociationState? state = null, CustomResourceOptions? options = null)
            : base("aws:networkmanager/transitGatewayConnectPeerAssociation:TransitGatewayConnectPeerAssociation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TransitGatewayConnectPeerAssociation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TransitGatewayConnectPeerAssociation Get(string name, Input<string> id, TransitGatewayConnectPeerAssociationState? state = null, CustomResourceOptions? options = null)
        {
            return new TransitGatewayConnectPeerAssociation(name, id, state, options);
        }
    }

    public sealed class TransitGatewayConnectPeerAssociationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the device.
        /// </summary>
        [Input("deviceId", required: true)]
        public Input<string> DeviceId { get; set; } = null!;

        /// <summary>
        /// The ID of the global network.
        /// </summary>
        [Input("globalNetworkId", required: true)]
        public Input<string> GlobalNetworkId { get; set; } = null!;

        /// <summary>
        /// The ID of the link.
        /// </summary>
        [Input("linkId")]
        public Input<string>? LinkId { get; set; }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the Connect peer.
        /// </summary>
        [Input("transitGatewayConnectPeerArn", required: true)]
        public Input<string> TransitGatewayConnectPeerArn { get; set; } = null!;

        public TransitGatewayConnectPeerAssociationArgs()
        {
        }
        public static new TransitGatewayConnectPeerAssociationArgs Empty => new TransitGatewayConnectPeerAssociationArgs();
    }

    public sealed class TransitGatewayConnectPeerAssociationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the device.
        /// </summary>
        [Input("deviceId")]
        public Input<string>? DeviceId { get; set; }

        /// <summary>
        /// The ID of the global network.
        /// </summary>
        [Input("globalNetworkId")]
        public Input<string>? GlobalNetworkId { get; set; }

        /// <summary>
        /// The ID of the link.
        /// </summary>
        [Input("linkId")]
        public Input<string>? LinkId { get; set; }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the Connect peer.
        /// </summary>
        [Input("transitGatewayConnectPeerArn")]
        public Input<string>? TransitGatewayConnectPeerArn { get; set; }

        public TransitGatewayConnectPeerAssociationState()
        {
        }
        public static new TransitGatewayConnectPeerAssociationState Empty => new TransitGatewayConnectPeerAssociationState();
    }
}
