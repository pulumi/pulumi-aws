// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.NetworkManager
{
    public static class GetLink
    {
        /// <summary>
        /// Retrieve information about a link.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.NetworkManager.GetLink.Invoke(new()
        ///     {
        ///         GlobalNetworkId = @var.Global_network_id,
        ///         LinkId = @var.Link_id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetLinkResult> InvokeAsync(GetLinkArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetLinkResult>("aws:networkmanager/getLink:getLink", args ?? new GetLinkArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieve information about a link.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.NetworkManager.GetLink.Invoke(new()
        ///     {
        ///         GlobalNetworkId = @var.Global_network_id,
        ///         LinkId = @var.Link_id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetLinkResult> Invoke(GetLinkInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetLinkResult>("aws:networkmanager/getLink:getLink", args ?? new GetLinkInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLinkArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the Global Network of the link to retrieve.
        /// </summary>
        [Input("globalNetworkId", required: true)]
        public string GlobalNetworkId { get; set; } = null!;

        /// <summary>
        /// ID of the specific link to retrieve.
        /// </summary>
        [Input("linkId", required: true)]
        public string LinkId { get; set; } = null!;

        [Input("tags")]
        private Dictionary<string, string>? _tags;

        /// <summary>
        /// Key-value tags for the link.
        /// </summary>
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetLinkArgs()
        {
        }
        public static new GetLinkArgs Empty => new GetLinkArgs();
    }

    public sealed class GetLinkInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the Global Network of the link to retrieve.
        /// </summary>
        [Input("globalNetworkId", required: true)]
        public Input<string> GlobalNetworkId { get; set; } = null!;

        /// <summary>
        /// ID of the specific link to retrieve.
        /// </summary>
        [Input("linkId", required: true)]
        public Input<string> LinkId { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value tags for the link.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetLinkInvokeArgs()
        {
        }
        public static new GetLinkInvokeArgs Empty => new GetLinkInvokeArgs();
    }


    [OutputType]
    public sealed class GetLinkResult
    {
        /// <summary>
        /// ARN of the link.
        /// </summary>
        public readonly string Arn;
        /// <summary>
        /// Upload speed and download speed of the link as documented below
        /// </summary>
        public readonly ImmutableArray<Outputs.GetLinkBandwidthResult> Bandwidths;
        /// <summary>
        /// Description of the link.
        /// </summary>
        public readonly string Description;
        public readonly string GlobalNetworkId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string LinkId;
        /// <summary>
        /// Provider of the link.
        /// </summary>
        public readonly string ProviderName;
        /// <summary>
        /// ID of the site.
        /// </summary>
        public readonly string SiteId;
        /// <summary>
        /// Key-value tags for the link.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// Type of the link.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetLinkResult(
            string arn,

            ImmutableArray<Outputs.GetLinkBandwidthResult> bandwidths,

            string description,

            string globalNetworkId,

            string id,

            string linkId,

            string providerName,

            string siteId,

            ImmutableDictionary<string, string> tags,

            string type)
        {
            Arn = arn;
            Bandwidths = bandwidths;
            Description = description;
            GlobalNetworkId = globalNetworkId;
            Id = id;
            LinkId = linkId;
            ProviderName = providerName;
            SiteId = siteId;
            Tags = tags;
            Type = type;
        }
    }
}
