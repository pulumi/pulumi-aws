// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Eks
{
    public static class GetAddonVersion
    {
        /// <summary>
        /// Retrieve information about a specific EKS add-on version compatible with an EKS cluster version.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// export = async () =&gt; {
        ///     const defaultAddonVersion = await aws.eks.getAddonVersion({
        ///         addonName: "vpc-cni",
        ///         kubernetesVersion: aws_eks_cluster.example.version,
        ///     });
        ///     const latestAddonVersion = await aws.eks.getAddonVersion({
        ///         addonName: "vpc-cni",
        ///         kubernetesVersion: aws_eks_cluster.example.version,
        ///         mostRecent: true,
        ///     });
        ///     const vpcCni = new aws.eks.Addon("vpcCni", {
        ///         clusterName: aws_eks_cluster.example.name,
        ///         addonName: "vpc-cni",
        ///         addonVersion: latestAddonVersion.version,
        ///     });
        ///     const _default = defaultAddonVersion.version;
        ///     const latest = latestAddonVersion.version;
        ///     return {
        ///         "default": _default,
        ///         latest: latest,
        ///     };
        /// }
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// default_addon_version = aws.eks.get_addon_version(addon_name="vpc-cni",
        ///     kubernetes_version=%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
        /// latest_addon_version = aws.eks.get_addon_version(addon_name="vpc-cni",
        ///     kubernetes_version=%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference),
        ///     most_recent=True)
        /// vpc_cni = aws.eks.Addon("vpcCni",
        ///     cluster_name=aws_eks_cluster["example"]["name"],
        ///     addon_name="vpc-cni",
        ///     addon_version=latest_addon_version.version)
        /// pulumi.export("default", default_addon_version.version)
        /// pulumi.export("latest", latest_addon_version.version)
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var defaultAddonVersion = Aws.Eks.GetAddonVersion.Invoke(new()
        ///     {
        ///         AddonName = "vpc-cni",
        ///         KubernetesVersion = aws_eks_cluster.Example.Version,
        ///     });
        /// 
        ///     var latestAddonVersion = Aws.Eks.GetAddonVersion.Invoke(new()
        ///     {
        ///         AddonName = "vpc-cni",
        ///         KubernetesVersion = aws_eks_cluster.Example.Version,
        ///         MostRecent = true,
        ///     });
        /// 
        ///     var vpcCni = new Aws.Eks.Addon("vpcCni", new()
        ///     {
        ///         ClusterName = aws_eks_cluster.Example.Name,
        ///         AddonName = "vpc-cni",
        ///         AddonVersion = latestAddonVersion.Apply(getAddonVersionResult =&gt; getAddonVersionResult.Version),
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["default"] = defaultAddonVersion.Apply(getAddonVersionResult =&gt; getAddonVersionResult.Version),
        ///         ["latest"] = latestAddonVersion.Apply(getAddonVersionResult =&gt; getAddonVersionResult.Version),
        ///     };
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/eks"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		defaultAddonVersion, err := eks.GetAddonVersion(ctx, &amp;eks.GetAddonVersionArgs{
        /// 			AddonName:         "vpc-cni",
        /// 			KubernetesVersion: aws_eks_cluster.Example.Version,
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		latestAddonVersion, err := eks.GetAddonVersion(ctx, &amp;eks.GetAddonVersionArgs{
        /// 			AddonName:         "vpc-cni",
        /// 			KubernetesVersion: aws_eks_cluster.Example.Version,
        /// 			MostRecent:        pulumi.BoolRef(true),
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		_, err = eks.NewAddon(ctx, "vpcCni", &amp;eks.AddonArgs{
        /// 			ClusterName:  pulumi.Any(aws_eks_cluster.Example.Name),
        /// 			AddonName:    pulumi.String("vpc-cni"),
        /// 			AddonVersion: *pulumi.String(latestAddonVersion.Version),
        /// 		})
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		ctx.Export("default", defaultAddonVersion.Version)
        /// 		ctx.Export("latest", latestAddonVersion.Version)
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.eks.EksFunctions;
        /// import com.pulumi.aws.eks.inputs.GetAddonVersionArgs;
        /// import com.pulumi.aws.eks.Addon;
        /// import com.pulumi.aws.eks.AddonArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var defaultAddonVersion = EksFunctions.getAddonVersion(GetAddonVersionArgs.builder()
        ///             .addonName("vpc-cni")
        ///             .kubernetesVersion(aws_eks_cluster.example().version())
        ///             .build());
        /// 
        ///         final var latestAddonVersion = EksFunctions.getAddonVersion(GetAddonVersionArgs.builder()
        ///             .addonName("vpc-cni")
        ///             .kubernetesVersion(aws_eks_cluster.example().version())
        ///             .mostRecent(true)
        ///             .build());
        /// 
        ///         var vpcCni = new Addon("vpcCni", AddonArgs.builder()        
        ///             .clusterName(aws_eks_cluster.example().name())
        ///             .addonName("vpc-cni")
        ///             .addonVersion(latestAddonVersion.applyValue(getAddonVersionResult -&gt; getAddonVersionResult.version()))
        ///             .build());
        /// 
        ///         ctx.export("default", defaultAddonVersion.applyValue(getAddonVersionResult -&gt; getAddonVersionResult.version()));
        ///         ctx.export("latest", latestAddonVersion.applyValue(getAddonVersionResult -&gt; getAddonVersionResult.version()));
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// resources:
        ///   vpcCni:
        ///     type: aws:eks:Addon
        ///     properties:
        ///       clusterName: ${aws_eks_cluster.example.name}
        ///       addonName: vpc-cni
        ///       addonVersion: ${latestAddonVersion.version}
        /// variables:
        ///   defaultAddonVersion:
        ///     fn::invoke:
        ///       Function: aws:eks:getAddonVersion
        ///       Arguments:
        ///         addonName: vpc-cni
        ///         kubernetesVersion: ${aws_eks_cluster.example.version}
        ///   latestAddonVersion:
        ///     fn::invoke:
        ///       Function: aws:eks:getAddonVersion
        ///       Arguments:
        ///         addonName: vpc-cni
        ///         kubernetesVersion: ${aws_eks_cluster.example.version}
        ///         mostRecent: true
        /// outputs:
        ///   default: ${defaultAddonVersion.version}
        ///   latest: ${latestAddonVersion.version}
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetAddonVersionResult> InvokeAsync(GetAddonVersionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAddonVersionResult>("aws:eks/getAddonVersion:getAddonVersion", args ?? new GetAddonVersionArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieve information about a specific EKS add-on version compatible with an EKS cluster version.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// export = async () =&gt; {
        ///     const defaultAddonVersion = await aws.eks.getAddonVersion({
        ///         addonName: "vpc-cni",
        ///         kubernetesVersion: aws_eks_cluster.example.version,
        ///     });
        ///     const latestAddonVersion = await aws.eks.getAddonVersion({
        ///         addonName: "vpc-cni",
        ///         kubernetesVersion: aws_eks_cluster.example.version,
        ///         mostRecent: true,
        ///     });
        ///     const vpcCni = new aws.eks.Addon("vpcCni", {
        ///         clusterName: aws_eks_cluster.example.name,
        ///         addonName: "vpc-cni",
        ///         addonVersion: latestAddonVersion.version,
        ///     });
        ///     const _default = defaultAddonVersion.version;
        ///     const latest = latestAddonVersion.version;
        ///     return {
        ///         "default": _default,
        ///         latest: latest,
        ///     };
        /// }
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// default_addon_version = aws.eks.get_addon_version(addon_name="vpc-cni",
        ///     kubernetes_version=%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
        /// latest_addon_version = aws.eks.get_addon_version(addon_name="vpc-cni",
        ///     kubernetes_version=%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference),
        ///     most_recent=True)
        /// vpc_cni = aws.eks.Addon("vpcCni",
        ///     cluster_name=aws_eks_cluster["example"]["name"],
        ///     addon_name="vpc-cni",
        ///     addon_version=latest_addon_version.version)
        /// pulumi.export("default", default_addon_version.version)
        /// pulumi.export("latest", latest_addon_version.version)
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var defaultAddonVersion = Aws.Eks.GetAddonVersion.Invoke(new()
        ///     {
        ///         AddonName = "vpc-cni",
        ///         KubernetesVersion = aws_eks_cluster.Example.Version,
        ///     });
        /// 
        ///     var latestAddonVersion = Aws.Eks.GetAddonVersion.Invoke(new()
        ///     {
        ///         AddonName = "vpc-cni",
        ///         KubernetesVersion = aws_eks_cluster.Example.Version,
        ///         MostRecent = true,
        ///     });
        /// 
        ///     var vpcCni = new Aws.Eks.Addon("vpcCni", new()
        ///     {
        ///         ClusterName = aws_eks_cluster.Example.Name,
        ///         AddonName = "vpc-cni",
        ///         AddonVersion = latestAddonVersion.Apply(getAddonVersionResult =&gt; getAddonVersionResult.Version),
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["default"] = defaultAddonVersion.Apply(getAddonVersionResult =&gt; getAddonVersionResult.Version),
        ///         ["latest"] = latestAddonVersion.Apply(getAddonVersionResult =&gt; getAddonVersionResult.Version),
        ///     };
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/eks"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		defaultAddonVersion, err := eks.GetAddonVersion(ctx, &amp;eks.GetAddonVersionArgs{
        /// 			AddonName:         "vpc-cni",
        /// 			KubernetesVersion: aws_eks_cluster.Example.Version,
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		latestAddonVersion, err := eks.GetAddonVersion(ctx, &amp;eks.GetAddonVersionArgs{
        /// 			AddonName:         "vpc-cni",
        /// 			KubernetesVersion: aws_eks_cluster.Example.Version,
        /// 			MostRecent:        pulumi.BoolRef(true),
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		_, err = eks.NewAddon(ctx, "vpcCni", &amp;eks.AddonArgs{
        /// 			ClusterName:  pulumi.Any(aws_eks_cluster.Example.Name),
        /// 			AddonName:    pulumi.String("vpc-cni"),
        /// 			AddonVersion: *pulumi.String(latestAddonVersion.Version),
        /// 		})
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		ctx.Export("default", defaultAddonVersion.Version)
        /// 		ctx.Export("latest", latestAddonVersion.Version)
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.eks.EksFunctions;
        /// import com.pulumi.aws.eks.inputs.GetAddonVersionArgs;
        /// import com.pulumi.aws.eks.Addon;
        /// import com.pulumi.aws.eks.AddonArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var defaultAddonVersion = EksFunctions.getAddonVersion(GetAddonVersionArgs.builder()
        ///             .addonName("vpc-cni")
        ///             .kubernetesVersion(aws_eks_cluster.example().version())
        ///             .build());
        /// 
        ///         final var latestAddonVersion = EksFunctions.getAddonVersion(GetAddonVersionArgs.builder()
        ///             .addonName("vpc-cni")
        ///             .kubernetesVersion(aws_eks_cluster.example().version())
        ///             .mostRecent(true)
        ///             .build());
        /// 
        ///         var vpcCni = new Addon("vpcCni", AddonArgs.builder()        
        ///             .clusterName(aws_eks_cluster.example().name())
        ///             .addonName("vpc-cni")
        ///             .addonVersion(latestAddonVersion.applyValue(getAddonVersionResult -&gt; getAddonVersionResult.version()))
        ///             .build());
        /// 
        ///         ctx.export("default", defaultAddonVersion.applyValue(getAddonVersionResult -&gt; getAddonVersionResult.version()));
        ///         ctx.export("latest", latestAddonVersion.applyValue(getAddonVersionResult -&gt; getAddonVersionResult.version()));
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// resources:
        ///   vpcCni:
        ///     type: aws:eks:Addon
        ///     properties:
        ///       clusterName: ${aws_eks_cluster.example.name}
        ///       addonName: vpc-cni
        ///       addonVersion: ${latestAddonVersion.version}
        /// variables:
        ///   defaultAddonVersion:
        ///     fn::invoke:
        ///       Function: aws:eks:getAddonVersion
        ///       Arguments:
        ///         addonName: vpc-cni
        ///         kubernetesVersion: ${aws_eks_cluster.example.version}
        ///   latestAddonVersion:
        ///     fn::invoke:
        ///       Function: aws:eks:getAddonVersion
        ///       Arguments:
        ///         addonName: vpc-cni
        ///         kubernetesVersion: ${aws_eks_cluster.example.version}
        ///         mostRecent: true
        /// outputs:
        ///   default: ${defaultAddonVersion.version}
        ///   latest: ${latestAddonVersion.version}
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetAddonVersionResult> Invoke(GetAddonVersionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAddonVersionResult>("aws:eks/getAddonVersion:getAddonVersion", args ?? new GetAddonVersionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAddonVersionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the EKS add-on. The name must match one of
        /// the names returned by [list-addon](https://docs.aws.amazon.com/cli/latest/reference/eks/list-addons.html).
        /// </summary>
        [Input("addonName", required: true)]
        public string AddonName { get; set; } = null!;

        /// <summary>
        /// Version of the EKS Cluster. Must be between 1-100 characters in length. Must begin with an alphanumeric character, and must only contain alphanumeric characters, dashes and underscores (`^[0-9A-Za-z][A-Za-z0-9\-_]+$`).
        /// </summary>
        [Input("kubernetesVersion", required: true)]
        public string KubernetesVersion { get; set; } = null!;

        /// <summary>
        /// Determines if the most recent or default version of the addon should be returned.
        /// </summary>
        [Input("mostRecent")]
        public bool? MostRecent { get; set; }

        public GetAddonVersionArgs()
        {
        }
        public static new GetAddonVersionArgs Empty => new GetAddonVersionArgs();
    }

    public sealed class GetAddonVersionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the EKS add-on. The name must match one of
        /// the names returned by [list-addon](https://docs.aws.amazon.com/cli/latest/reference/eks/list-addons.html).
        /// </summary>
        [Input("addonName", required: true)]
        public Input<string> AddonName { get; set; } = null!;

        /// <summary>
        /// Version of the EKS Cluster. Must be between 1-100 characters in length. Must begin with an alphanumeric character, and must only contain alphanumeric characters, dashes and underscores (`^[0-9A-Za-z][A-Za-z0-9\-_]+$`).
        /// </summary>
        [Input("kubernetesVersion", required: true)]
        public Input<string> KubernetesVersion { get; set; } = null!;

        /// <summary>
        /// Determines if the most recent or default version of the addon should be returned.
        /// </summary>
        [Input("mostRecent")]
        public Input<bool>? MostRecent { get; set; }

        public GetAddonVersionInvokeArgs()
        {
        }
        public static new GetAddonVersionInvokeArgs Empty => new GetAddonVersionInvokeArgs();
    }


    [OutputType]
    public sealed class GetAddonVersionResult
    {
        public readonly string AddonName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string KubernetesVersion;
        public readonly bool? MostRecent;
        /// <summary>
        /// Version of the EKS add-on.
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private GetAddonVersionResult(
            string addonName,

            string id,

            string kubernetesVersion,

            bool? mostRecent,

            string version)
        {
            AddonName = addonName;
            Id = id;
            KubernetesVersion = kubernetesVersion;
            MostRecent = mostRecent;
            Version = version;
        }
    }
}
