// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Eks
{
    public static class GetAddonVersion
    {
        /// <summary>
        /// Retrieve information about a specific EKS add-on version compatible with an EKS cluster version.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var defaultAddonVersion = Output.Create(Aws.Eks.GetAddonVersion.InvokeAsync(new Aws.Eks.GetAddonVersionArgs
        ///         {
        ///             AddonName = "vpc-cni",
        ///             KubernetesVersion = aws_eks_cluster.Example.Version,
        ///         }));
        ///         var latestAddonVersion = Output.Create(Aws.Eks.GetAddonVersion.InvokeAsync(new Aws.Eks.GetAddonVersionArgs
        ///         {
        ///             AddonName = "vpc-cni",
        ///             KubernetesVersion = aws_eks_cluster.Example.Version,
        ///             MostRecent = true,
        ///         }));
        ///         var vpcCni = new Aws.Eks.Addon("vpcCni", new Aws.Eks.AddonArgs
        ///         {
        ///             ClusterName = aws_eks_cluster.Example.Name,
        ///             AddonName = "vpc-cni",
        ///             AddonVersion = latestAddonVersion.Apply(latestAddonVersion =&gt; latestAddonVersion.Version),
        ///         });
        ///         this.Default = defaultAddonVersion.Apply(defaultAddonVersion =&gt; defaultAddonVersion.Version);
        ///         this.Latest = latestAddonVersion.Apply(latestAddonVersion =&gt; latestAddonVersion.Version);
        ///     }
        /// 
        ///     [Output("default")]
        ///     public Output&lt;string&gt; Default { get; set; }
        ///     [Output("latest")]
        ///     public Output&lt;string&gt; Latest { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetAddonVersionResult> InvokeAsync(GetAddonVersionArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAddonVersionResult>("aws:eks/getAddonVersion:getAddonVersion", args ?? new GetAddonVersionArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieve information about a specific EKS add-on version compatible with an EKS cluster version.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var defaultAddonVersion = Output.Create(Aws.Eks.GetAddonVersion.InvokeAsync(new Aws.Eks.GetAddonVersionArgs
        ///         {
        ///             AddonName = "vpc-cni",
        ///             KubernetesVersion = aws_eks_cluster.Example.Version,
        ///         }));
        ///         var latestAddonVersion = Output.Create(Aws.Eks.GetAddonVersion.InvokeAsync(new Aws.Eks.GetAddonVersionArgs
        ///         {
        ///             AddonName = "vpc-cni",
        ///             KubernetesVersion = aws_eks_cluster.Example.Version,
        ///             MostRecent = true,
        ///         }));
        ///         var vpcCni = new Aws.Eks.Addon("vpcCni", new Aws.Eks.AddonArgs
        ///         {
        ///             ClusterName = aws_eks_cluster.Example.Name,
        ///             AddonName = "vpc-cni",
        ///             AddonVersion = latestAddonVersion.Apply(latestAddonVersion =&gt; latestAddonVersion.Version),
        ///         });
        ///         this.Default = defaultAddonVersion.Apply(defaultAddonVersion =&gt; defaultAddonVersion.Version);
        ///         this.Latest = latestAddonVersion.Apply(latestAddonVersion =&gt; latestAddonVersion.Version);
        ///     }
        /// 
        ///     [Output("default")]
        ///     public Output&lt;string&gt; Default { get; set; }
        ///     [Output("latest")]
        ///     public Output&lt;string&gt; Latest { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetAddonVersionResult> Invoke(GetAddonVersionInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetAddonVersionResult>("aws:eks/getAddonVersion:getAddonVersion", args ?? new GetAddonVersionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAddonVersionArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the EKS add-on. The name must match one of
        /// the names returned by [list-addon](https://docs.aws.amazon.com/cli/latest/reference/eks/list-addons.html).
        /// </summary>
        [Input("addonName", required: true)]
        public string AddonName { get; set; } = null!;

        /// <summary>
        /// Version of the EKS Cluster. Must be between 1-100 characters in length. Must begin with an alphanumeric character, and must only contain alphanumeric characters, dashes and underscores (`^[0-9A-Za-z][A-Za-z0-9\-_]+$`).
        /// </summary>
        [Input("kubernetesVersion", required: true)]
        public string KubernetesVersion { get; set; } = null!;

        /// <summary>
        /// Determines if the most recent or default version of the addon should be returned.
        /// </summary>
        [Input("mostRecent")]
        public bool? MostRecent { get; set; }

        public GetAddonVersionArgs()
        {
        }
    }

    public sealed class GetAddonVersionInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the EKS add-on. The name must match one of
        /// the names returned by [list-addon](https://docs.aws.amazon.com/cli/latest/reference/eks/list-addons.html).
        /// </summary>
        [Input("addonName", required: true)]
        public Input<string> AddonName { get; set; } = null!;

        /// <summary>
        /// Version of the EKS Cluster. Must be between 1-100 characters in length. Must begin with an alphanumeric character, and must only contain alphanumeric characters, dashes and underscores (`^[0-9A-Za-z][A-Za-z0-9\-_]+$`).
        /// </summary>
        [Input("kubernetesVersion", required: true)]
        public Input<string> KubernetesVersion { get; set; } = null!;

        /// <summary>
        /// Determines if the most recent or default version of the addon should be returned.
        /// </summary>
        [Input("mostRecent")]
        public Input<bool>? MostRecent { get; set; }

        public GetAddonVersionInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetAddonVersionResult
    {
        public readonly string AddonName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string KubernetesVersion;
        public readonly bool? MostRecent;
        /// <summary>
        /// The version of the EKS add-on.
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private GetAddonVersionResult(
            string addonName,

            string id,

            string kubernetesVersion,

            bool? mostRecent,

            string version)
        {
            AddonName = addonName;
            Id = id;
            KubernetesVersion = kubernetesVersion;
            MostRecent = mostRecent;
            Version = version;
        }
    }
}
