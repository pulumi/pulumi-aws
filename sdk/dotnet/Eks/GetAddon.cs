// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Eks
{
    public static class GetAddon
    {
        /// <summary>
        /// Retrieve information about an EKS add-on.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const example = aws.eks.getAddon({
        ///     addonName: "vpc-cni",
        ///     clusterName: aws_eks_cluster.example.name,
        /// });
        /// export const eksAddonOutputs = aws_eks_addon.example;
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// example = aws.eks.get_addon(addon_name="vpc-cni",
        ///     cluster_name=%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
        /// pulumi.export("eksAddonOutputs", aws_eks_addon["example"])
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Eks.GetAddon.Invoke(new()
        ///     {
        ///         AddonName = "vpc-cni",
        ///         ClusterName = aws_eks_cluster.Example.Name,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["eksAddonOutputs"] = aws_eks_addon.Example,
        ///     };
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/eks"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := eks.LookupAddon(ctx, &amp;eks.LookupAddonArgs{
        /// 			AddonName:   "vpc-cni",
        /// 			ClusterName: aws_eks_cluster.Example.Name,
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		ctx.Export("eksAddonOutputs", aws_eks_addon.Example)
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.eks.EksFunctions;
        /// import com.pulumi.aws.eks.inputs.GetAddonArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var example = EksFunctions.getAddon(GetAddonArgs.builder()
        ///             .addonName("vpc-cni")
        ///             .clusterName(aws_eks_cluster.example().name())
        ///             .build());
        /// 
        ///         ctx.export("eksAddonOutputs", aws_eks_addon.example());
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   example:
        ///     fn::invoke:
        ///       Function: aws:eks:getAddon
        ///       Arguments:
        ///         addonName: vpc-cni
        ///         clusterName: ${aws_eks_cluster.example.name}
        /// outputs:
        ///   eksAddonOutputs: ${aws_eks_addon.example}
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetAddonResult> InvokeAsync(GetAddonArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAddonResult>("aws:eks/getAddon:getAddon", args ?? new GetAddonArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieve information about an EKS add-on.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const example = aws.eks.getAddon({
        ///     addonName: "vpc-cni",
        ///     clusterName: aws_eks_cluster.example.name,
        /// });
        /// export const eksAddonOutputs = aws_eks_addon.example;
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// example = aws.eks.get_addon(addon_name="vpc-cni",
        ///     cluster_name=%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
        /// pulumi.export("eksAddonOutputs", aws_eks_addon["example"])
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Eks.GetAddon.Invoke(new()
        ///     {
        ///         AddonName = "vpc-cni",
        ///         ClusterName = aws_eks_cluster.Example.Name,
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["eksAddonOutputs"] = aws_eks_addon.Example,
        ///     };
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/eks"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := eks.LookupAddon(ctx, &amp;eks.LookupAddonArgs{
        /// 			AddonName:   "vpc-cni",
        /// 			ClusterName: aws_eks_cluster.Example.Name,
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		ctx.Export("eksAddonOutputs", aws_eks_addon.Example)
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.eks.EksFunctions;
        /// import com.pulumi.aws.eks.inputs.GetAddonArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var example = EksFunctions.getAddon(GetAddonArgs.builder()
        ///             .addonName("vpc-cni")
        ///             .clusterName(aws_eks_cluster.example().name())
        ///             .build());
        /// 
        ///         ctx.export("eksAddonOutputs", aws_eks_addon.example());
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   example:
        ///     fn::invoke:
        ///       Function: aws:eks:getAddon
        ///       Arguments:
        ///         addonName: vpc-cni
        ///         clusterName: ${aws_eks_cluster.example.name}
        /// outputs:
        ///   eksAddonOutputs: ${aws_eks_addon.example}
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetAddonResult> Invoke(GetAddonInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAddonResult>("aws:eks/getAddon:getAddon", args ?? new GetAddonInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAddonArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the EKS add-on. The name must match one of
        /// the names returned by [list-addon](https://docs.aws.amazon.com/cli/latest/reference/eks/list-addons.html).
        /// </summary>
        [Input("addonName", required: true)]
        public string AddonName { get; set; } = null!;

        /// <summary>
        /// Name of the EKS Cluster. Must be between 1-100 characters in length. Must begin with an alphanumeric character, and must only contain alphanumeric characters, dashes and underscores (`^[0-9A-Za-z][A-Za-z0-9\-_]+$`).
        /// </summary>
        [Input("clusterName", required: true)]
        public string ClusterName { get; set; } = null!;

        [Input("tags")]
        private Dictionary<string, string>? _tags;
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetAddonArgs()
        {
        }
        public static new GetAddonArgs Empty => new GetAddonArgs();
    }

    public sealed class GetAddonInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the EKS add-on. The name must match one of
        /// the names returned by [list-addon](https://docs.aws.amazon.com/cli/latest/reference/eks/list-addons.html).
        /// </summary>
        [Input("addonName", required: true)]
        public Input<string> AddonName { get; set; } = null!;

        /// <summary>
        /// Name of the EKS Cluster. Must be between 1-100 characters in length. Must begin with an alphanumeric character, and must only contain alphanumeric characters, dashes and underscores (`^[0-9A-Za-z][A-Za-z0-9\-_]+$`).
        /// </summary>
        [Input("clusterName", required: true)]
        public Input<string> ClusterName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetAddonInvokeArgs()
        {
        }
        public static new GetAddonInvokeArgs Empty => new GetAddonInvokeArgs();
    }


    [OutputType]
    public sealed class GetAddonResult
    {
        public readonly string AddonName;
        /// <summary>
        /// Version of EKS add-on.
        /// </summary>
        public readonly string AddonVersion;
        /// <summary>
        /// ARN of the EKS add-on.
        /// </summary>
        public readonly string Arn;
        public readonly string ClusterName;
        /// <summary>
        /// Configuration values for the addon with a single JSON string.
        /// </summary>
        public readonly string ConfigurationValues;
        /// <summary>
        /// Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) that the EKS add-on was created.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) that the EKS add-on was updated.
        /// </summary>
        public readonly string ModifiedAt;
        /// <summary>
        /// ARN of IAM role used for EKS add-on. If value is empty -
        /// then add-on uses the IAM role assigned to the EKS Cluster node.
        /// </summary>
        public readonly string ServiceAccountRoleArn;
        public readonly ImmutableDictionary<string, string> Tags;

        [OutputConstructor]
        private GetAddonResult(
            string addonName,

            string addonVersion,

            string arn,

            string clusterName,

            string configurationValues,

            string createdAt,

            string id,

            string modifiedAt,

            string serviceAccountRoleArn,

            ImmutableDictionary<string, string> tags)
        {
            AddonName = addonName;
            AddonVersion = addonVersion;
            Arn = arn;
            ClusterName = clusterName;
            ConfigurationValues = configurationValues;
            CreatedAt = createdAt;
            Id = id;
            ModifiedAt = modifiedAt;
            ServiceAccountRoleArn = serviceAccountRoleArn;
            Tags = tags;
        }
    }
}
