// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Eks
{
    /// <summary>
    /// Access Entry Policy Association for an EKS Cluster.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Eks.AccessPolicyAssociation("example", new()
    ///     {
    ///         ClusterName = aws_eks_cluster.Example.Name,
    ///         PolicyArn = "arn:aws:eks::aws:cluster-access-policy/AmazonEKSViewPolicy",
    ///         PrincipalArn = aws_iam_user.Example.Arn,
    ///         AccessScope = new Aws.Eks.Inputs.AccessPolicyAssociationAccessScopeArgs
    ///         {
    ///             Type = "namespace",
    ///             Namespaces = new[]
    ///             {
    ///                 "example-namespace",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import EKS access entry using the `cluster_name` `policy_arn` and `principal_arn` separated by a colon (`:`). For example:
    /// 
    /// ```sh
    ///  $ pulumi import aws:eks/accessPolicyAssociation:AccessPolicyAssociation my_eks_access_entry my_cluster_name:my_policy_arn:my_principal_arn
    /// ```
    /// </summary>
    [AwsResourceType("aws:eks/accessPolicyAssociation:AccessPolicyAssociation")]
    public partial class AccessPolicyAssociation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The configuration block to determine the scope of the access.
        /// </summary>
        [Output("accessScope")]
        public Output<Outputs.AccessPolicyAssociationAccessScope> AccessScope { get; private set; } = null!;

        /// <summary>
        /// Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) that the policy was associated.
        /// </summary>
        [Output("associatedAt")]
        public Output<string> AssociatedAt { get; private set; } = null!;

        /// <summary>
        /// Name of the EKS Cluster. Must be between 1-100 characters in length. Must begin with an alphanumeric character, and must only contain alphanumeric characters, dashes and underscores (`^[0-9A-Za-z][A-Za-z0-9\-_]+$`).
        /// </summary>
        [Output("clusterName")]
        public Output<string> ClusterName { get; private set; } = null!;

        /// <summary>
        /// Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) that the policy was updated.
        /// </summary>
        [Output("modifiedAt")]
        public Output<string> ModifiedAt { get; private set; } = null!;

        /// <summary>
        /// The ARN of the access policy that you're associating.
        /// </summary>
        [Output("policyArn")]
        public Output<string> PolicyArn { get; private set; } = null!;

        /// <summary>
        /// The IAM Princial ARN which requires Authentication access to the EKS cluster.
        /// </summary>
        [Output("principalArn")]
        public Output<string> PrincipalArn { get; private set; } = null!;


        /// <summary>
        /// Create a AccessPolicyAssociation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AccessPolicyAssociation(string name, AccessPolicyAssociationArgs args, CustomResourceOptions? options = null)
            : base("aws:eks/accessPolicyAssociation:AccessPolicyAssociation", name, args ?? new AccessPolicyAssociationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AccessPolicyAssociation(string name, Input<string> id, AccessPolicyAssociationState? state = null, CustomResourceOptions? options = null)
            : base("aws:eks/accessPolicyAssociation:AccessPolicyAssociation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AccessPolicyAssociation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AccessPolicyAssociation Get(string name, Input<string> id, AccessPolicyAssociationState? state = null, CustomResourceOptions? options = null)
        {
            return new AccessPolicyAssociation(name, id, state, options);
        }
    }

    public sealed class AccessPolicyAssociationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The configuration block to determine the scope of the access.
        /// </summary>
        [Input("accessScope", required: true)]
        public Input<Inputs.AccessPolicyAssociationAccessScopeArgs> AccessScope { get; set; } = null!;

        /// <summary>
        /// Name of the EKS Cluster. Must be between 1-100 characters in length. Must begin with an alphanumeric character, and must only contain alphanumeric characters, dashes and underscores (`^[0-9A-Za-z][A-Za-z0-9\-_]+$`).
        /// </summary>
        [Input("clusterName", required: true)]
        public Input<string> ClusterName { get; set; } = null!;

        /// <summary>
        /// The ARN of the access policy that you're associating.
        /// </summary>
        [Input("policyArn", required: true)]
        public Input<string> PolicyArn { get; set; } = null!;

        /// <summary>
        /// The IAM Princial ARN which requires Authentication access to the EKS cluster.
        /// </summary>
        [Input("principalArn", required: true)]
        public Input<string> PrincipalArn { get; set; } = null!;

        public AccessPolicyAssociationArgs()
        {
        }
        public static new AccessPolicyAssociationArgs Empty => new AccessPolicyAssociationArgs();
    }

    public sealed class AccessPolicyAssociationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The configuration block to determine the scope of the access.
        /// </summary>
        [Input("accessScope")]
        public Input<Inputs.AccessPolicyAssociationAccessScopeGetArgs>? AccessScope { get; set; }

        /// <summary>
        /// Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) that the policy was associated.
        /// </summary>
        [Input("associatedAt")]
        public Input<string>? AssociatedAt { get; set; }

        /// <summary>
        /// Name of the EKS Cluster. Must be between 1-100 characters in length. Must begin with an alphanumeric character, and must only contain alphanumeric characters, dashes and underscores (`^[0-9A-Za-z][A-Za-z0-9\-_]+$`).
        /// </summary>
        [Input("clusterName")]
        public Input<string>? ClusterName { get; set; }

        /// <summary>
        /// Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) that the policy was updated.
        /// </summary>
        [Input("modifiedAt")]
        public Input<string>? ModifiedAt { get; set; }

        /// <summary>
        /// The ARN of the access policy that you're associating.
        /// </summary>
        [Input("policyArn")]
        public Input<string>? PolicyArn { get; set; }

        /// <summary>
        /// The IAM Princial ARN which requires Authentication access to the EKS cluster.
        /// </summary>
        [Input("principalArn")]
        public Input<string>? PrincipalArn { get; set; }

        public AccessPolicyAssociationState()
        {
        }
        public static new AccessPolicyAssociationState Empty => new AccessPolicyAssociationState();
    }
}
