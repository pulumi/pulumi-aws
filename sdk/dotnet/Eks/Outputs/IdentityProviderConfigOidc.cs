// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Eks.Outputs
{

    [OutputType]
    public sealed class IdentityProviderConfigOidc
    {
        /// <summary>
        /// Client ID for the OpenID Connect identity provider.
        /// </summary>
        public readonly string ClientId;
        /// <summary>
        /// The JWT claim that the provider will use to return groups.
        /// </summary>
        public readonly string? GroupsClaim;
        /// <summary>
        /// A prefix that is prepended to group claims e.g., `oidc:`.
        /// </summary>
        public readonly string? GroupsPrefix;
        /// <summary>
        /// The name of the identity provider config.
        /// </summary>
        public readonly string IdentityProviderConfigName;
        /// <summary>
        /// Issuer URL for the OpenID Connect identity provider.
        /// </summary>
        public readonly string IssuerUrl;
        /// <summary>
        /// The key value pairs that describe required claims in the identity token.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? RequiredClaims;
        /// <summary>
        /// The JWT claim that the provider will use as the username.
        /// </summary>
        public readonly string? UsernameClaim;
        /// <summary>
        /// A prefix that is prepended to username claims.
        /// </summary>
        public readonly string? UsernamePrefix;

        [OutputConstructor]
        private IdentityProviderConfigOidc(
            string clientId,

            string? groupsClaim,

            string? groupsPrefix,

            string identityProviderConfigName,

            string issuerUrl,

            ImmutableDictionary<string, string>? requiredClaims,

            string? usernameClaim,

            string? usernamePrefix)
        {
            ClientId = clientId;
            GroupsClaim = groupsClaim;
            GroupsPrefix = groupsPrefix;
            IdentityProviderConfigName = identityProviderConfigName;
            IssuerUrl = issuerUrl;
            RequiredClaims = requiredClaims;
            UsernameClaim = usernameClaim;
            UsernamePrefix = usernamePrefix;
        }
    }
}
