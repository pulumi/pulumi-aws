// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Eks.Outputs
{

    [OutputType]
    public sealed class ClusterKubernetesNetworkConfig
    {
        /// <summary>
        /// Configuration block with elastic load balancing configuration for the cluster. Detailed below.
        /// </summary>
        public readonly Outputs.ClusterKubernetesNetworkConfigElasticLoadBalancing? ElasticLoadBalancing;
        /// <summary>
        /// The IP family used to assign Kubernetes pod and service addresses. Valid values are `ipv4` (default) and `ipv6`. You can only specify an IP family when you create a cluster, changing this value will force a new cluster to be created.
        /// </summary>
        public readonly string? IpFamily;
        /// <summary>
        /// The CIDR block to assign Kubernetes pod and service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks. We recommend that you specify a block that does not overlap with resources in other networks that are peered or connected to your VPC. You can only specify a custom CIDR block when you create a cluster, changing this value will force a new cluster to be created. The block must meet the following requirements:
        /// 
        /// * Within one of the following private IP address blocks: 10.0.0.0/8, 172.16.0.0/12, or 192.168.0.0/16.
        /// 
        /// * Doesn't overlap with any CIDR block assigned to the VPC that you selected for VPC.
        /// 
        /// * Between /24 and /12.
        /// </summary>
        public readonly string? ServiceIpv4Cidr;
        /// <summary>
        /// The CIDR block that Kubernetes pod and service IP addresses are assigned from if you specify `ipv6` for `ip_family` when you create the cluster. Kubernetes assigns service addresses from the unique local address range (fc00::/7) because you can't specify a custom IPv6 CIDR block when you create the cluster.
        /// </summary>
        public readonly string? ServiceIpv6Cidr;

        [OutputConstructor]
        private ClusterKubernetesNetworkConfig(
            Outputs.ClusterKubernetesNetworkConfigElasticLoadBalancing? elasticLoadBalancing,

            string? ipFamily,

            string? serviceIpv4Cidr,

            string? serviceIpv6Cidr)
        {
            ElasticLoadBalancing = elasticLoadBalancing;
            IpFamily = ipFamily;
            ServiceIpv4Cidr = serviceIpv4Cidr;
            ServiceIpv6Cidr = serviceIpv6Cidr;
        }
    }
}
