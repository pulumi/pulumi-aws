// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.TimestreamWrite
{
    public static class GetTable
    {
        /// <summary>
        /// Data source for managing an AWS Timestream Write Table.
        /// 
        /// ## Example Usage
        /// 
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.TimestreamWrite.GetTable.Invoke(new()
        ///     {
        ///         DatabaseName = testAwsTimestreamwriteDatabase.DatabaseName,
        ///         Name = testAwsTimestreamwriteTable.TableName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetTableResult> InvokeAsync(GetTableArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTableResult>("aws:timestreamwrite/getTable:getTable", args ?? new GetTableArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for managing an AWS Timestream Write Table.
        /// 
        /// ## Example Usage
        /// 
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.TimestreamWrite.GetTable.Invoke(new()
        ///     {
        ///         DatabaseName = testAwsTimestreamwriteDatabase.DatabaseName,
        ///         Name = testAwsTimestreamwriteTable.TableName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetTableResult> Invoke(GetTableInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTableResult>("aws:timestreamwrite/getTable:getTable", args ?? new GetTableInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for managing an AWS Timestream Write Table.
        /// 
        /// ## Example Usage
        /// 
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.TimestreamWrite.GetTable.Invoke(new()
        ///     {
        ///         DatabaseName = testAwsTimestreamwriteDatabase.DatabaseName,
        ///         Name = testAwsTimestreamwriteTable.TableName,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetTableResult> Invoke(GetTableInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetTableResult>("aws:timestreamwrite/getTable:getTable", args ?? new GetTableInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTableArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Timestream database.
        /// </summary>
        [Input("databaseName", required: true)]
        public string DatabaseName { get; set; } = null!;

        /// <summary>
        /// Name of the Timestream table.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetTableArgs()
        {
        }
        public static new GetTableArgs Empty => new GetTableArgs();
    }

    public sealed class GetTableInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Timestream database.
        /// </summary>
        [Input("databaseName", required: true)]
        public Input<string> DatabaseName { get; set; } = null!;

        /// <summary>
        /// Name of the Timestream table.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetTableInvokeArgs()
        {
        }
        public static new GetTableInvokeArgs Empty => new GetTableInvokeArgs();
    }


    [OutputType]
    public sealed class GetTableResult
    {
        /// <summary>
        /// ARN that uniquely identifies the table.
        /// </summary>
        public readonly string Arn;
        /// <summary>
        /// Time that table was created.
        /// </summary>
        public readonly string CreationTime;
        /// <summary>
        /// Name of database.
        /// </summary>
        public readonly string DatabaseName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Last time table was updated.
        /// </summary>
        public readonly string LastUpdatedTime;
        /// <summary>
        /// Object containing the following attributes to desribe magnetic store writes.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTableMagneticStoreWritePropertyResult> MagneticStoreWriteProperties;
        /// <summary>
        /// Name of the table.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Object containing the following attributes to describe the retention duration for the memory and magnetic stores.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTableRetentionPropertyResult> RetentionProperties;
        /// <summary>
        /// Object containing the following attributes to describe the schema of the table.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTableSchemaResult> Schemas;
        /// <summary>
        /// Current state of table.
        /// </summary>
        public readonly string TableStatus;

        [OutputConstructor]
        private GetTableResult(
            string arn,

            string creationTime,

            string databaseName,

            string id,

            string lastUpdatedTime,

            ImmutableArray<Outputs.GetTableMagneticStoreWritePropertyResult> magneticStoreWriteProperties,

            string name,

            ImmutableArray<Outputs.GetTableRetentionPropertyResult> retentionProperties,

            ImmutableArray<Outputs.GetTableSchemaResult> schemas,

            string tableStatus)
        {
            Arn = arn;
            CreationTime = creationTime;
            DatabaseName = databaseName;
            Id = id;
            LastUpdatedTime = lastUpdatedTime;
            MagneticStoreWriteProperties = magneticStoreWriteProperties;
            Name = name;
            RetentionProperties = retentionProperties;
            Schemas = schemas;
            TableStatus = tableStatus;
        }
    }
}
