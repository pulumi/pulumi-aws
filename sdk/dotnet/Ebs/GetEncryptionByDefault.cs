// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ebs
{
    public static class GetEncryptionByDefault
    {
        /// <summary>
        /// Provides a way to check whether default EBS encryption is enabled for your AWS account in the current AWS region.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var current = Aws.Ebs.GetEncryptionByDefault.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetEncryptionByDefaultResult> InvokeAsync(GetEncryptionByDefaultArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEncryptionByDefaultResult>("aws:ebs/getEncryptionByDefault:getEncryptionByDefault", args ?? new GetEncryptionByDefaultArgs(), options.WithDefaults());

        /// <summary>
        /// Provides a way to check whether default EBS encryption is enabled for your AWS account in the current AWS region.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var current = Aws.Ebs.GetEncryptionByDefault.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetEncryptionByDefaultResult> Invoke(GetEncryptionByDefaultInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEncryptionByDefaultResult>("aws:ebs/getEncryptionByDefault:getEncryptionByDefault", args ?? new GetEncryptionByDefaultInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Provides a way to check whether default EBS encryption is enabled for your AWS account in the current AWS region.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var current = Aws.Ebs.GetEncryptionByDefault.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetEncryptionByDefaultResult> Invoke(GetEncryptionByDefaultInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetEncryptionByDefaultResult>("aws:ebs/getEncryptionByDefault:getEncryptionByDefault", args ?? new GetEncryptionByDefaultInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEncryptionByDefaultArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public string? Region { get; set; }

        public GetEncryptionByDefaultArgs()
        {
        }
        public static new GetEncryptionByDefaultArgs Empty => new GetEncryptionByDefaultArgs();
    }

    public sealed class GetEncryptionByDefaultInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public GetEncryptionByDefaultInvokeArgs()
        {
        }
        public static new GetEncryptionByDefaultInvokeArgs Empty => new GetEncryptionByDefaultInvokeArgs();
    }


    [OutputType]
    public sealed class GetEncryptionByDefaultResult
    {
        /// <summary>
        /// Whether or not default EBS encryption is enabled. Returns as `true` or `false`.
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Region;

        [OutputConstructor]
        private GetEncryptionByDefaultResult(
            bool enabled,

            string id,

            string region)
        {
            Enabled = enabled;
            Id = id;
            Region = region;
        }
    }
}
