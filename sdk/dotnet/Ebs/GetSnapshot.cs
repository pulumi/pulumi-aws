// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ebs
{
    public static class GetSnapshot
    {
        public static Task<GetSnapshotResult> InvokeAsync(GetSnapshotArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSnapshotResult>("aws:ebs/getSnapshot:getSnapshot", args ?? new GetSnapshotArgs(), options.WithDefaults());

        public static Output<GetSnapshotResult> Invoke(GetSnapshotInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSnapshotResult>("aws:ebs/getSnapshot:getSnapshot", args ?? new GetSnapshotInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSnapshotArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetSnapshotFilterArgs>? _filters;
        public List<Inputs.GetSnapshotFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetSnapshotFilterArgs>());
            set => _filters = value;
        }

        [Input("mostRecent")]
        public bool? MostRecent { get; set; }

        [Input("owners")]
        private List<string>? _owners;
        public List<string> Owners
        {
            get => _owners ?? (_owners = new List<string>());
            set => _owners = value;
        }

        [Input("restorableByUserIds")]
        private List<string>? _restorableByUserIds;
        public List<string> RestorableByUserIds
        {
            get => _restorableByUserIds ?? (_restorableByUserIds = new List<string>());
            set => _restorableByUserIds = value;
        }

        [Input("snapshotIds")]
        private List<string>? _snapshotIds;
        public List<string> SnapshotIds
        {
            get => _snapshotIds ?? (_snapshotIds = new List<string>());
            set => _snapshotIds = value;
        }

        [Input("tags")]
        private Dictionary<string, string>? _tags;
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetSnapshotArgs()
        {
        }
        public static new GetSnapshotArgs Empty => new GetSnapshotArgs();
    }

    public sealed class GetSnapshotInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetSnapshotFilterInputArgs>? _filters;
        public InputList<Inputs.GetSnapshotFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetSnapshotFilterInputArgs>());
            set => _filters = value;
        }

        [Input("mostRecent")]
        public Input<bool>? MostRecent { get; set; }

        [Input("owners")]
        private InputList<string>? _owners;
        public InputList<string> Owners
        {
            get => _owners ?? (_owners = new InputList<string>());
            set => _owners = value;
        }

        [Input("restorableByUserIds")]
        private InputList<string>? _restorableByUserIds;
        public InputList<string> RestorableByUserIds
        {
            get => _restorableByUserIds ?? (_restorableByUserIds = new InputList<string>());
            set => _restorableByUserIds = value;
        }

        [Input("snapshotIds")]
        private InputList<string>? _snapshotIds;
        public InputList<string> SnapshotIds
        {
            get => _snapshotIds ?? (_snapshotIds = new InputList<string>());
            set => _snapshotIds = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetSnapshotInvokeArgs()
        {
        }
        public static new GetSnapshotInvokeArgs Empty => new GetSnapshotInvokeArgs();
    }


    [OutputType]
    public sealed class GetSnapshotResult
    {
        public readonly string Arn;
        public readonly string DataEncryptionKeyId;
        public readonly string Description;
        public readonly bool Encrypted;
        public readonly ImmutableArray<Outputs.GetSnapshotFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string KmsKeyId;
        public readonly bool? MostRecent;
        public readonly string OutpostArn;
        public readonly string OwnerAlias;
        public readonly string OwnerId;
        public readonly ImmutableArray<string> Owners;
        public readonly ImmutableArray<string> RestorableByUserIds;
        public readonly string SnapshotId;
        public readonly ImmutableArray<string> SnapshotIds;
        public readonly string State;
        public readonly string StorageTier;
        public readonly ImmutableDictionary<string, string> Tags;
        public readonly string VolumeId;
        public readonly int VolumeSize;

        [OutputConstructor]
        private GetSnapshotResult(
            string arn,

            string dataEncryptionKeyId,

            string description,

            bool encrypted,

            ImmutableArray<Outputs.GetSnapshotFilterResult> filters,

            string id,

            string kmsKeyId,

            bool? mostRecent,

            string outpostArn,

            string ownerAlias,

            string ownerId,

            ImmutableArray<string> owners,

            ImmutableArray<string> restorableByUserIds,

            string snapshotId,

            ImmutableArray<string> snapshotIds,

            string state,

            string storageTier,

            ImmutableDictionary<string, string> tags,

            string volumeId,

            int volumeSize)
        {
            Arn = arn;
            DataEncryptionKeyId = dataEncryptionKeyId;
            Description = description;
            Encrypted = encrypted;
            Filters = filters;
            Id = id;
            KmsKeyId = kmsKeyId;
            MostRecent = mostRecent;
            OutpostArn = outpostArn;
            OwnerAlias = ownerAlias;
            OwnerId = ownerId;
            Owners = owners;
            RestorableByUserIds = restorableByUserIds;
            SnapshotId = snapshotId;
            SnapshotIds = snapshotIds;
            State = state;
            StorageTier = storageTier;
            Tags = tags;
            VolumeId = volumeId;
            VolumeSize = volumeSize;
        }
    }
}
