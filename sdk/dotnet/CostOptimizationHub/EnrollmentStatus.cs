// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CostOptimizationHub
{
    /// <summary>
    /// Resource for managing AWS Cost Optimization Hub Enrollment Status.
    /// 
    /// &gt; **TIP:** The Cost Optimization Hub only has a `us-east-1` endpoint. However, you can access the service globally with the AWS Provider from other regions. Other tools, such as the [AWS CLI](https://awscli.amazonaws.com/v2/documentation/api/latest/reference/cost-optimization-hub/index.html), may require you to specify the `us-east-1` region when using the service.
    /// 
    /// ## Example Usage
    /// 
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.CostOptimizationHub.EnrollmentStatus("example");
    /// 
    /// });
    /// ```
    /// 
    /// ### Usage with all the arguments
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.CostOptimizationHub.EnrollmentStatus("example", new()
    ///     {
    ///         IncludeMemberAccounts = true,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import Cost Optimization Hub Enrollment Status using your AWS account ID. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:costoptimizationhub/enrollmentStatus:EnrollmentStatus example 111222333444
    /// ```
    /// </summary>
    [AwsResourceType("aws:costoptimizationhub/enrollmentStatus:EnrollmentStatus")]
    public partial class EnrollmentStatus : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Flag to enroll member accounts of the organization if the account is the management account. No drift detection is currently supported for this argument. Default value is `false`.
        /// </summary>
        [Output("includeMemberAccounts")]
        public Output<bool> IncludeMemberAccounts { get; private set; } = null!;

        [Output("status")]
        public Output<string> Status { get; private set; } = null!;


        /// <summary>
        /// Create a EnrollmentStatus resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EnrollmentStatus(string name, EnrollmentStatusArgs? args = null, CustomResourceOptions? options = null)
            : base("aws:costoptimizationhub/enrollmentStatus:EnrollmentStatus", name, args ?? new EnrollmentStatusArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EnrollmentStatus(string name, Input<string> id, EnrollmentStatusState? state = null, CustomResourceOptions? options = null)
            : base("aws:costoptimizationhub/enrollmentStatus:EnrollmentStatus", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EnrollmentStatus resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EnrollmentStatus Get(string name, Input<string> id, EnrollmentStatusState? state = null, CustomResourceOptions? options = null)
        {
            return new EnrollmentStatus(name, id, state, options);
        }
    }

    public sealed class EnrollmentStatusArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Flag to enroll member accounts of the organization if the account is the management account. No drift detection is currently supported for this argument. Default value is `false`.
        /// </summary>
        [Input("includeMemberAccounts")]
        public Input<bool>? IncludeMemberAccounts { get; set; }

        public EnrollmentStatusArgs()
        {
        }
        public static new EnrollmentStatusArgs Empty => new EnrollmentStatusArgs();
    }

    public sealed class EnrollmentStatusState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Flag to enroll member accounts of the organization if the account is the management account. No drift detection is currently supported for this argument. Default value is `false`.
        /// </summary>
        [Input("includeMemberAccounts")]
        public Input<bool>? IncludeMemberAccounts { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        public EnrollmentStatusState()
        {
        }
        public static new EnrollmentStatusState Empty => new EnrollmentStatusState();
    }
}
