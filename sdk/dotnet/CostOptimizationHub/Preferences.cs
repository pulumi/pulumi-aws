// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CostOptimizationHub
{
    /// <summary>
    /// Resource for managing AWS Cost Optimization Hub Preferences.
    /// 
    /// ## Example Usage
    /// 
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.CostOptimizationHub.Preferences("example");
    /// 
    /// });
    /// ```
    /// 
    /// ### Usage with all the arguments
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.CostOptimizationHub.Preferences("example", new()
    ///     {
    ///         MemberAccountDiscountVisibility = "None",
    ///         SavingsEstimationMode = "AfterDiscounts",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import Cost Optimization Hub Preferences using the `id`. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:costoptimizationhub/preferences:Preferences example 111222333444
    /// ```
    /// </summary>
    [AwsResourceType("aws:costoptimizationhub/preferences:Preferences")]
    public partial class Preferences : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Customize whether the member accounts can see the "After Discounts" savings estimates. Valid values are `All` and `None`. Default value is `All`.
        /// </summary>
        [Output("memberAccountDiscountVisibility")]
        public Output<string> MemberAccountDiscountVisibility { get; private set; } = null!;

        /// <summary>
        /// Customize how estimated monthly savings are calculated. Valid values are `BeforeDiscounts` and `AfterDiscounts`. Default value is `BeforeDiscounts`.
        /// </summary>
        [Output("savingsEstimationMode")]
        public Output<string> SavingsEstimationMode { get; private set; } = null!;


        /// <summary>
        /// Create a Preferences resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Preferences(string name, PreferencesArgs? args = null, CustomResourceOptions? options = null)
            : base("aws:costoptimizationhub/preferences:Preferences", name, args ?? new PreferencesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Preferences(string name, Input<string> id, PreferencesState? state = null, CustomResourceOptions? options = null)
            : base("aws:costoptimizationhub/preferences:Preferences", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Preferences resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Preferences Get(string name, Input<string> id, PreferencesState? state = null, CustomResourceOptions? options = null)
        {
            return new Preferences(name, id, state, options);
        }
    }

    public sealed class PreferencesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Customize whether the member accounts can see the "After Discounts" savings estimates. Valid values are `All` and `None`. Default value is `All`.
        /// </summary>
        [Input("memberAccountDiscountVisibility")]
        public Input<string>? MemberAccountDiscountVisibility { get; set; }

        /// <summary>
        /// Customize how estimated monthly savings are calculated. Valid values are `BeforeDiscounts` and `AfterDiscounts`. Default value is `BeforeDiscounts`.
        /// </summary>
        [Input("savingsEstimationMode")]
        public Input<string>? SavingsEstimationMode { get; set; }

        public PreferencesArgs()
        {
        }
        public static new PreferencesArgs Empty => new PreferencesArgs();
    }

    public sealed class PreferencesState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Customize whether the member accounts can see the "After Discounts" savings estimates. Valid values are `All` and `None`. Default value is `All`.
        /// </summary>
        [Input("memberAccountDiscountVisibility")]
        public Input<string>? MemberAccountDiscountVisibility { get; set; }

        /// <summary>
        /// Customize how estimated monthly savings are calculated. Valid values are `BeforeDiscounts` and `AfterDiscounts`. Default value is `BeforeDiscounts`.
        /// </summary>
        [Input("savingsEstimationMode")]
        public Input<string>? SavingsEstimationMode { get; set; }

        public PreferencesState()
        {
        }
        public static new PreferencesState Empty => new PreferencesState();
    }
}
