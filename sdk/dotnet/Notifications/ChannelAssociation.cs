// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Notifications
{
    /// <summary>
    /// Resource for managing an AWS User Notifications Channel Association. This resource associates a channel (such as an email contact) with a notification configuration.
    /// 
    /// ## Example Usage
    /// 
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Notifications.NotificationConfiguration("example", new()
    ///     {
    ///         Name = "example-notification-config",
    ///         Description = "Example notification configuration",
    ///     });
    /// 
    ///     var exampleContactsEmailContact = new Aws.Notifications.ContactsEmailContact("example", new()
    ///     {
    ///         Name = "example-contact",
    ///         EmailAddress = "example@example.com",
    ///     });
    /// 
    ///     var exampleChannelAssociation = new Aws.Notifications.ChannelAssociation("example", new()
    ///     {
    ///         Arn = exampleContactsEmailContact.Arn,
    ///         NotificationConfigurationArn = example.Arn,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import User Notifications Channel Association using the `notification_configuration_arn,channel_arn` format. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:notifications/channelAssociation:ChannelAssociation example arn:aws:notifications:us-west-2:123456789012:configuration:example-notification-config,arn:aws:notificationscontacts:us-west-2:123456789012:emailcontact:example-contact
    /// ```
    /// </summary>
    [AwsResourceType("aws:notifications/channelAssociation:ChannelAssociation")]
    public partial class ChannelAssociation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ARN of the channel to associate with the notification configuration. This can be an email contact ARN.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// ARN of the notification configuration to associate the channel with.
        /// </summary>
        [Output("notificationConfigurationArn")]
        public Output<string> NotificationConfigurationArn { get; private set; } = null!;


        /// <summary>
        /// Create a ChannelAssociation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ChannelAssociation(string name, ChannelAssociationArgs args, CustomResourceOptions? options = null)
            : base("aws:notifications/channelAssociation:ChannelAssociation", name, args ?? new ChannelAssociationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ChannelAssociation(string name, Input<string> id, ChannelAssociationState? state = null, CustomResourceOptions? options = null)
            : base("aws:notifications/channelAssociation:ChannelAssociation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ChannelAssociation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ChannelAssociation Get(string name, Input<string> id, ChannelAssociationState? state = null, CustomResourceOptions? options = null)
        {
            return new ChannelAssociation(name, id, state, options);
        }
    }

    public sealed class ChannelAssociationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ARN of the channel to associate with the notification configuration. This can be an email contact ARN.
        /// </summary>
        [Input("arn", required: true)]
        public Input<string> Arn { get; set; } = null!;

        /// <summary>
        /// ARN of the notification configuration to associate the channel with.
        /// </summary>
        [Input("notificationConfigurationArn", required: true)]
        public Input<string> NotificationConfigurationArn { get; set; } = null!;

        public ChannelAssociationArgs()
        {
        }
        public static new ChannelAssociationArgs Empty => new ChannelAssociationArgs();
    }

    public sealed class ChannelAssociationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ARN of the channel to associate with the notification configuration. This can be an email contact ARN.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// ARN of the notification configuration to associate the channel with.
        /// </summary>
        [Input("notificationConfigurationArn")]
        public Input<string>? NotificationConfigurationArn { get; set; }

        public ChannelAssociationState()
        {
        }
        public static new ChannelAssociationState Empty => new ChannelAssociationState();
    }
}
