// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Notifications
{
    /// <summary>
    /// Resource for managing an AWS User Notifications Notification Hub.
    /// 
    /// ## Example Usage
    /// 
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Notifications.NotificationHub("example", new()
    ///     {
    ///         NotificationHubRegion = "us-west-2",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import User Notifications Notification Hub using the `notification_hub_region`. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:notifications/notificationHub:NotificationHub example us-west-2
    /// ```
    /// </summary>
    [AwsResourceType("aws:notifications/notificationHub:NotificationHub")]
    public partial class NotificationHub : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Notification Hub region.
        /// </summary>
        [Output("notificationHubRegion")]
        public Output<string> NotificationHubRegion { get; private set; } = null!;

        [Output("timeouts")]
        public Output<Outputs.NotificationHubTimeouts?> Timeouts { get; private set; } = null!;


        /// <summary>
        /// Create a NotificationHub resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NotificationHub(string name, NotificationHubArgs args, CustomResourceOptions? options = null)
            : base("aws:notifications/notificationHub:NotificationHub", name, args ?? new NotificationHubArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NotificationHub(string name, Input<string> id, NotificationHubState? state = null, CustomResourceOptions? options = null)
            : base("aws:notifications/notificationHub:NotificationHub", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NotificationHub resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NotificationHub Get(string name, Input<string> id, NotificationHubState? state = null, CustomResourceOptions? options = null)
        {
            return new NotificationHub(name, id, state, options);
        }
    }

    public sealed class NotificationHubArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Notification Hub region.
        /// </summary>
        [Input("notificationHubRegion", required: true)]
        public Input<string> NotificationHubRegion { get; set; } = null!;

        [Input("timeouts")]
        public Input<Inputs.NotificationHubTimeoutsArgs>? Timeouts { get; set; }

        public NotificationHubArgs()
        {
        }
        public static new NotificationHubArgs Empty => new NotificationHubArgs();
    }

    public sealed class NotificationHubState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Notification Hub region.
        /// </summary>
        [Input("notificationHubRegion")]
        public Input<string>? NotificationHubRegion { get; set; }

        [Input("timeouts")]
        public Input<Inputs.NotificationHubTimeoutsGetArgs>? Timeouts { get; set; }

        public NotificationHubState()
        {
        }
        public static new NotificationHubState Empty => new NotificationHubState();
    }
}
