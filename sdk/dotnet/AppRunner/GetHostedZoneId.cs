// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.AppRunner
{
    public static class GetHostedZoneId
    {
        /// <summary>
        /// Use this data source to get the HostedZoneId of an AWS App Runner service deployed
        /// in a given region for the purpose of using it in an AWS Route53 Alias record.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var main = Aws.AppRunner.GetHostedZoneId.Invoke();
        /// 
        ///     var www = new Aws.Route53.Record("www", new()
        ///     {
        ///         ZoneId = primary.ZoneId,
        ///         Name = "example.com",
        ///         Type = Aws.Route53.RecordType.A,
        ///         Aliases = new[]
        ///         {
        ///             new Aws.Route53.Inputs.RecordAliasArgs
        ///             {
        ///                 Name = mainAwsApprunnerCustomDomainAssociation.DnsTarget,
        ///                 ZoneId = main.Apply(getHostedZoneIdResult =&gt; getHostedZoneIdResult.Id),
        ///                 EvaluateTargetHealth = true,
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetHostedZoneIdResult> InvokeAsync(GetHostedZoneIdArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetHostedZoneIdResult>("aws:apprunner/getHostedZoneId:getHostedZoneId", args ?? new GetHostedZoneIdArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get the HostedZoneId of an AWS App Runner service deployed
        /// in a given region for the purpose of using it in an AWS Route53 Alias record.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var main = Aws.AppRunner.GetHostedZoneId.Invoke();
        /// 
        ///     var www = new Aws.Route53.Record("www", new()
        ///     {
        ///         ZoneId = primary.ZoneId,
        ///         Name = "example.com",
        ///         Type = Aws.Route53.RecordType.A,
        ///         Aliases = new[]
        ///         {
        ///             new Aws.Route53.Inputs.RecordAliasArgs
        ///             {
        ///                 Name = mainAwsApprunnerCustomDomainAssociation.DnsTarget,
        ///                 ZoneId = main.Apply(getHostedZoneIdResult =&gt; getHostedZoneIdResult.Id),
        ///                 EvaluateTargetHealth = true,
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetHostedZoneIdResult> Invoke(GetHostedZoneIdInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetHostedZoneIdResult>("aws:apprunner/getHostedZoneId:getHostedZoneId", args ?? new GetHostedZoneIdInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetHostedZoneIdArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the region whose AWS App Runner service HostedZoneId is desired.
        /// Defaults to the region from the AWS provider configuration.
        /// </summary>
        [Input("region")]
        public string? Region { get; set; }

        public GetHostedZoneIdArgs()
        {
        }
        public static new GetHostedZoneIdArgs Empty => new GetHostedZoneIdArgs();
    }

    public sealed class GetHostedZoneIdInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the region whose AWS App Runner service HostedZoneId is desired.
        /// Defaults to the region from the AWS provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public GetHostedZoneIdInvokeArgs()
        {
        }
        public static new GetHostedZoneIdInvokeArgs Empty => new GetHostedZoneIdInvokeArgs();
    }


    [OutputType]
    public sealed class GetHostedZoneIdResult
    {
        /// <summary>
        /// ID of the AWS App Runner service HostedZoneId in the selected region.
        /// </summary>
        public readonly string Id;
        public readonly string Region;

        [OutputConstructor]
        private GetHostedZoneIdResult(
            string id,

            string region)
        {
            Id = id;
            Region = region;
        }
    }
}
