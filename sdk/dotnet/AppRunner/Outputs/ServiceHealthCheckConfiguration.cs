// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.AppRunner.Outputs
{

    [OutputType]
    public sealed class ServiceHealthCheckConfiguration
    {
        /// <summary>
        /// Number of consecutive checks that must succeed before App Runner decides that the service is healthy. Defaults to 1. Minimum value of 1. Maximum value of 20.
        /// </summary>
        public readonly int? HealthyThreshold;
        /// <summary>
        /// Time interval, in seconds, between health checks. Defaults to 5. Minimum value of 1. Maximum value of 20.
        /// </summary>
        public readonly int? Interval;
        /// <summary>
        /// URL to send requests to for health checks. Defaults to `/`. Minimum length of 0. Maximum length of 51200.
        /// </summary>
        public readonly string? Path;
        /// <summary>
        /// IP protocol that App Runner uses to perform health checks for your service. Valid values: `TCP`, `HTTP`. Defaults to `TCP`. If you set protocol to `HTTP`, App Runner sends health check requests to the HTTP path specified by `path`.
        /// </summary>
        public readonly string? Protocol;
        /// <summary>
        /// Time, in seconds, to wait for a health check response before deciding it failed. Defaults to 2. Minimum value of  1. Maximum value of 20.
        /// </summary>
        public readonly int? Timeout;
        /// <summary>
        /// Number of consecutive checks that must fail before App Runner decides that the service is unhealthy. Defaults to 5. Minimum value of  1. Maximum value of 20.
        /// </summary>
        public readonly int? UnhealthyThreshold;

        [OutputConstructor]
        private ServiceHealthCheckConfiguration(
            int? healthyThreshold,

            int? interval,

            string? path,

            string? protocol,

            int? timeout,

            int? unhealthyThreshold)
        {
            HealthyThreshold = healthyThreshold;
            Interval = interval;
            Path = path;
            Protocol = protocol;
            Timeout = timeout;
            UnhealthyThreshold = unhealthyThreshold;
        }
    }
}
