// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.AppRunner
{
    [AwsResourceType("aws:apprunner/customDomainAssociation:CustomDomainAssociation")]
    public partial class CustomDomainAssociation : global::Pulumi.CustomResource
    {
        [Output("certificateValidationRecords")]
        public Output<ImmutableArray<Outputs.CustomDomainAssociationCertificateValidationRecord>> CertificateValidationRecords { get; private set; } = null!;

        [Output("dnsTarget")]
        public Output<string> DnsTarget { get; private set; } = null!;

        [Output("domainName")]
        public Output<string> DomainName { get; private set; } = null!;

        [Output("enableWwwSubdomain")]
        public Output<bool?> EnableWwwSubdomain { get; private set; } = null!;

        [Output("serviceArn")]
        public Output<string> ServiceArn { get; private set; } = null!;

        [Output("status")]
        public Output<string> Status { get; private set; } = null!;


        /// <summary>
        /// Create a CustomDomainAssociation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CustomDomainAssociation(string name, CustomDomainAssociationArgs args, CustomResourceOptions? options = null)
            : base("aws:apprunner/customDomainAssociation:CustomDomainAssociation", name, args ?? new CustomDomainAssociationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CustomDomainAssociation(string name, Input<string> id, CustomDomainAssociationState? state = null, CustomResourceOptions? options = null)
            : base("aws:apprunner/customDomainAssociation:CustomDomainAssociation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CustomDomainAssociation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CustomDomainAssociation Get(string name, Input<string> id, CustomDomainAssociationState? state = null, CustomResourceOptions? options = null)
        {
            return new CustomDomainAssociation(name, id, state, options);
        }
    }

    public sealed class CustomDomainAssociationArgs : global::Pulumi.ResourceArgs
    {
        [Input("domainName", required: true)]
        public Input<string> DomainName { get; set; } = null!;

        [Input("enableWwwSubdomain")]
        public Input<bool>? EnableWwwSubdomain { get; set; }

        [Input("serviceArn", required: true)]
        public Input<string> ServiceArn { get; set; } = null!;

        public CustomDomainAssociationArgs()
        {
        }
        public static new CustomDomainAssociationArgs Empty => new CustomDomainAssociationArgs();
    }

    public sealed class CustomDomainAssociationState : global::Pulumi.ResourceArgs
    {
        [Input("certificateValidationRecords")]
        private InputList<Inputs.CustomDomainAssociationCertificateValidationRecordGetArgs>? _certificateValidationRecords;
        public InputList<Inputs.CustomDomainAssociationCertificateValidationRecordGetArgs> CertificateValidationRecords
        {
            get => _certificateValidationRecords ?? (_certificateValidationRecords = new InputList<Inputs.CustomDomainAssociationCertificateValidationRecordGetArgs>());
            set => _certificateValidationRecords = value;
        }

        [Input("dnsTarget")]
        public Input<string>? DnsTarget { get; set; }

        [Input("domainName")]
        public Input<string>? DomainName { get; set; }

        [Input("enableWwwSubdomain")]
        public Input<bool>? EnableWwwSubdomain { get; set; }

        [Input("serviceArn")]
        public Input<string>? ServiceArn { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        public CustomDomainAssociationState()
        {
        }
        public static new CustomDomainAssociationState Empty => new CustomDomainAssociationState();
    }
}
