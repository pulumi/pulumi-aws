// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.AppRunner
{
    [AwsResourceType("aws:apprunner/vpcConnector:VpcConnector")]
    public partial class VpcConnector : global::Pulumi.CustomResource
    {
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("securityGroups")]
        public Output<ImmutableArray<string>> SecurityGroups { get; private set; } = null!;

        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        [Output("subnets")]
        public Output<ImmutableArray<string>> Subnets { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("vpcConnectorName")]
        public Output<string> VpcConnectorName { get; private set; } = null!;

        [Output("vpcConnectorRevision")]
        public Output<int> VpcConnectorRevision { get; private set; } = null!;


        /// <summary>
        /// Create a VpcConnector resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VpcConnector(string name, VpcConnectorArgs args, CustomResourceOptions? options = null)
            : base("aws:apprunner/vpcConnector:VpcConnector", name, args ?? new VpcConnectorArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VpcConnector(string name, Input<string> id, VpcConnectorState? state = null, CustomResourceOptions? options = null)
            : base("aws:apprunner/vpcConnector:VpcConnector", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VpcConnector resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VpcConnector Get(string name, Input<string> id, VpcConnectorState? state = null, CustomResourceOptions? options = null)
        {
            return new VpcConnector(name, id, state, options);
        }
    }

    public sealed class VpcConnectorArgs : global::Pulumi.ResourceArgs
    {
        [Input("securityGroups", required: true)]
        private InputList<string>? _securityGroups;
        public InputList<string> SecurityGroups
        {
            get => _securityGroups ?? (_securityGroups = new InputList<string>());
            set => _securityGroups = value;
        }

        [Input("subnets", required: true)]
        private InputList<string>? _subnets;
        public InputList<string> Subnets
        {
            get => _subnets ?? (_subnets = new InputList<string>());
            set => _subnets = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("vpcConnectorName", required: true)]
        public Input<string> VpcConnectorName { get; set; } = null!;

        public VpcConnectorArgs()
        {
        }
        public static new VpcConnectorArgs Empty => new VpcConnectorArgs();
    }

    public sealed class VpcConnectorState : global::Pulumi.ResourceArgs
    {
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("securityGroups")]
        private InputList<string>? _securityGroups;
        public InputList<string> SecurityGroups
        {
            get => _securityGroups ?? (_securityGroups = new InputList<string>());
            set => _securityGroups = value;
        }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("subnets")]
        private InputList<string>? _subnets;
        public InputList<string> Subnets
        {
            get => _subnets ?? (_subnets = new InputList<string>());
            set => _subnets = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("vpcConnectorName")]
        public Input<string>? VpcConnectorName { get; set; }

        [Input("vpcConnectorRevision")]
        public Input<int>? VpcConnectorRevision { get; set; }

        public VpcConnectorState()
        {
        }
        public static new VpcConnectorState Empty => new VpcConnectorState();
    }
}
