// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws
{
    public static class GetServicePrincipal
    {
        /// <summary>
        /// Use this data source to create a Service Principal Name for a service in a given region. Service Principal Names should always end in the standard global format: `{servicename}.amazonaws.com`. However, in some AWS partitions, AWS may expect a different format.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var current = Aws.GetServicePrincipal.Invoke(new()
        ///     {
        ///         ServiceName = "s3",
        ///     });
        /// 
        ///     var test = Aws.GetServicePrincipal.Invoke(new()
        ///     {
        ///         ServiceName = "s3",
        ///         Region = "us-iso-east-1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetServicePrincipalResult> InvokeAsync(GetServicePrincipalArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetServicePrincipalResult>("aws:index/getServicePrincipal:getServicePrincipal", args ?? new GetServicePrincipalArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to create a Service Principal Name for a service in a given region. Service Principal Names should always end in the standard global format: `{servicename}.amazonaws.com`. However, in some AWS partitions, AWS may expect a different format.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var current = Aws.GetServicePrincipal.Invoke(new()
        ///     {
        ///         ServiceName = "s3",
        ///     });
        /// 
        ///     var test = Aws.GetServicePrincipal.Invoke(new()
        ///     {
        ///         ServiceName = "s3",
        ///         Region = "us-iso-east-1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetServicePrincipalResult> Invoke(GetServicePrincipalInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetServicePrincipalResult>("aws:index/getServicePrincipal:getServicePrincipal", args ?? new GetServicePrincipalInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServicePrincipalArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Region you'd like the SPN for. By default, uses the current region.
        /// </summary>
        [Input("region")]
        public string? Region { get; set; }

        /// <summary>
        /// Name of the service you want to generate a Service Principal Name for.
        /// </summary>
        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        public GetServicePrincipalArgs()
        {
        }
        public static new GetServicePrincipalArgs Empty => new GetServicePrincipalArgs();
    }

    public sealed class GetServicePrincipalInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Region you'd like the SPN for. By default, uses the current region.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Name of the service you want to generate a Service Principal Name for.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        public GetServicePrincipalInvokeArgs()
        {
        }
        public static new GetServicePrincipalInvokeArgs Empty => new GetServicePrincipalInvokeArgs();
    }


    [OutputType]
    public sealed class GetServicePrincipalResult
    {
        /// <summary>
        /// Identifier of the current Service Principal (compound of service, region and suffix). (e.g. `logs.us-east-1.amazonaws.com`in AWS Commercial, `logs.cn-north-1.amazonaws.com.cn` in AWS China).
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Service Principal Name (e.g., `logs.amazonaws.com` in AWS Commercial, `logs.amazonaws.com.cn` in AWS China).
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Region identifier of the generated SPN (e.g., `us-east-1` in AWS Commercial, `cn-north-1` in AWS China).
        /// </summary>
        public readonly string Region;
        public readonly string ServiceName;
        /// <summary>
        /// Suffix of the SPN (e.g., `amazonaws.com` in AWS Commercial, `amazonaws.com.cn` in AWS China).
        /// </summary>
        public readonly string Suffix;

        [OutputConstructor]
        private GetServicePrincipalResult(
            string id,

            string name,

            string region,

            string serviceName,

            string suffix)
        {
            Id = id;
            Name = name;
            Region = region;
            ServiceName = serviceName;
            Suffix = suffix;
        }
    }
}
