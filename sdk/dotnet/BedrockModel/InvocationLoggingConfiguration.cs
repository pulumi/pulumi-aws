// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.BedrockModel
{
    /// <summary>
    /// Manages Bedrock model invocation logging configuration.
    /// 
    /// &gt; Model invocation logging is configured per AWS region. To avoid overwriting settings, this resource should not be defined in multiple configurations.
    /// 
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import Bedrock custom model using the `id` set to the AWS region. For example:
    /// 
    /// ```sh
    ///  $ pulumi import aws:bedrockmodel/invocationLoggingConfiguration:InvocationLoggingConfiguration my_config us-east-1
    /// ```
    /// </summary>
    [AwsResourceType("aws:bedrockmodel/invocationLoggingConfiguration:InvocationLoggingConfiguration")]
    public partial class InvocationLoggingConfiguration : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The logging configuration values to set. See `logging_config`.
        /// </summary>
        [Output("loggingConfig")]
        public Output<Outputs.InvocationLoggingConfigurationLoggingConfig?> LoggingConfig { get; private set; } = null!;


        /// <summary>
        /// Create a InvocationLoggingConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public InvocationLoggingConfiguration(string name, InvocationLoggingConfigurationArgs? args = null, CustomResourceOptions? options = null)
            : base("aws:bedrockmodel/invocationLoggingConfiguration:InvocationLoggingConfiguration", name, args ?? new InvocationLoggingConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private InvocationLoggingConfiguration(string name, Input<string> id, InvocationLoggingConfigurationState? state = null, CustomResourceOptions? options = null)
            : base("aws:bedrockmodel/invocationLoggingConfiguration:InvocationLoggingConfiguration", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing InvocationLoggingConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static InvocationLoggingConfiguration Get(string name, Input<string> id, InvocationLoggingConfigurationState? state = null, CustomResourceOptions? options = null)
        {
            return new InvocationLoggingConfiguration(name, id, state, options);
        }
    }

    public sealed class InvocationLoggingConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The logging configuration values to set. See `logging_config`.
        /// </summary>
        [Input("loggingConfig")]
        public Input<Inputs.InvocationLoggingConfigurationLoggingConfigArgs>? LoggingConfig { get; set; }

        public InvocationLoggingConfigurationArgs()
        {
        }
        public static new InvocationLoggingConfigurationArgs Empty => new InvocationLoggingConfigurationArgs();
    }

    public sealed class InvocationLoggingConfigurationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The logging configuration values to set. See `logging_config`.
        /// </summary>
        [Input("loggingConfig")]
        public Input<Inputs.InvocationLoggingConfigurationLoggingConfigGetArgs>? LoggingConfig { get; set; }

        public InvocationLoggingConfigurationState()
        {
        }
        public static new InvocationLoggingConfigurationState Empty => new InvocationLoggingConfigurationState();
    }
}
