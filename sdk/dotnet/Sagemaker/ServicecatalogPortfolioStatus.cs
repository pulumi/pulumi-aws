// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Sagemaker
{
    /// <summary>
    /// Manages status of Service Catalog in SageMaker. Service Catalog is used to create SageMaker projects.
    /// 
    /// ## Example Usage
    /// 
    /// Usage:
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Sagemaker.ServicecatalogPortfolioStatus("example", new()
    ///     {
    ///         Status = "Enabled",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// terraform import {
    /// 
    ///  to = aws_sagemaker_servicecatalog_portfolio_status.example
    /// 
    ///  id = "us-east-1" } Using `pulumi import`, import models using the `id`. For exampleconsole % pulumi import aws_sagemaker_servicecatalog_portfolio_status.example us-east-1
    /// </summary>
    [AwsResourceType("aws:sagemaker/servicecatalogPortfolioStatus:ServicecatalogPortfolioStatus")]
    public partial class ServicecatalogPortfolioStatus : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Whether Service Catalog is enabled or disabled in SageMaker. Valid values are `Enabled` and `Disabled`.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;


        /// <summary>
        /// Create a ServicecatalogPortfolioStatus resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServicecatalogPortfolioStatus(string name, ServicecatalogPortfolioStatusArgs args, CustomResourceOptions? options = null)
            : base("aws:sagemaker/servicecatalogPortfolioStatus:ServicecatalogPortfolioStatus", name, args ?? new ServicecatalogPortfolioStatusArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ServicecatalogPortfolioStatus(string name, Input<string> id, ServicecatalogPortfolioStatusState? state = null, CustomResourceOptions? options = null)
            : base("aws:sagemaker/servicecatalogPortfolioStatus:ServicecatalogPortfolioStatus", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ServicecatalogPortfolioStatus resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ServicecatalogPortfolioStatus Get(string name, Input<string> id, ServicecatalogPortfolioStatusState? state = null, CustomResourceOptions? options = null)
        {
            return new ServicecatalogPortfolioStatus(name, id, state, options);
        }
    }

    public sealed class ServicecatalogPortfolioStatusArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether Service Catalog is enabled or disabled in SageMaker. Valid values are `Enabled` and `Disabled`.
        /// </summary>
        [Input("status", required: true)]
        public Input<string> Status { get; set; } = null!;

        public ServicecatalogPortfolioStatusArgs()
        {
        }
        public static new ServicecatalogPortfolioStatusArgs Empty => new ServicecatalogPortfolioStatusArgs();
    }

    public sealed class ServicecatalogPortfolioStatusState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether Service Catalog is enabled or disabled in SageMaker. Valid values are `Enabled` and `Disabled`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public ServicecatalogPortfolioStatusState()
        {
        }
        public static new ServicecatalogPortfolioStatusState Empty => new ServicecatalogPortfolioStatusState();
    }
}
