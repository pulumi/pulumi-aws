// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Sagemaker.Inputs
{

    public sealed class DataQualityJobDefinitionDataQualityJobInputBatchTransformInputArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Amazon S3 location being used to capture the data.
        /// </summary>
        [Input("dataCapturedDestinationS3Uri", required: true)]
        public Input<string> DataCapturedDestinationS3Uri { get; set; } = null!;

        /// <summary>
        /// The dataset format for your batch transform job. Fields are documented below.
        /// </summary>
        [Input("datasetFormat", required: true)]
        public Input<Inputs.DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormatArgs> DatasetFormat { get; set; } = null!;

        /// <summary>
        /// Path to the filesystem where the batch transform data is available to the container. Defaults to `/opt/ml/processing/input`.
        /// </summary>
        [Input("localPath")]
        public Input<string>? LocalPath { get; set; }

        /// <summary>
        /// Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defaults to `FullyReplicated`. Valid values are `FullyReplicated` or `ShardedByS3Key`
        /// </summary>
        [Input("s3DataDistributionType")]
        public Input<string>? S3DataDistributionType { get; set; }

        /// <summary>
        /// Whether the `Pipe` or `File` is used as the input mode for transferring data for the monitoring job. `Pipe` mode is recommended for large datasets. `File` mode is useful for small files that fit in memory. Defaults to `File`.  Valid values are `Pipe` or `File`
        /// </summary>
        [Input("s3InputMode")]
        public Input<string>? S3InputMode { get; set; }

        public DataQualityJobDefinitionDataQualityJobInputBatchTransformInputArgs()
        {
        }
        public static new DataQualityJobDefinitionDataQualityJobInputBatchTransformInputArgs Empty => new DataQualityJobDefinitionDataQualityJobInputBatchTransformInputArgs();
    }
}
