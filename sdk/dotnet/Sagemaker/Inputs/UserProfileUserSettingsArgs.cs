// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Sagemaker.Inputs
{

    public sealed class UserProfileUserSettingsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Canvas app settings. See Canvas App Settings below.
        /// </summary>
        [Input("canvasAppSettings")]
        public Input<Inputs.UserProfileUserSettingsCanvasAppSettingsArgs>? CanvasAppSettings { get; set; }

        /// <summary>
        /// The Code Editor application settings. See Code Editor App Settings below.
        /// </summary>
        [Input("codeEditorAppSettings")]
        public Input<Inputs.UserProfileUserSettingsCodeEditorAppSettingsArgs>? CodeEditorAppSettings { get; set; }

        [Input("customFileSystemConfigs")]
        private InputList<Inputs.UserProfileUserSettingsCustomFileSystemConfigArgs>? _customFileSystemConfigs;

        /// <summary>
        /// The settings for assigning a custom file system to a user profile. Permitted users can access this file system in Amazon SageMaker Studio. See Custom File System Config below.
        /// </summary>
        public InputList<Inputs.UserProfileUserSettingsCustomFileSystemConfigArgs> CustomFileSystemConfigs
        {
            get => _customFileSystemConfigs ?? (_customFileSystemConfigs = new InputList<Inputs.UserProfileUserSettingsCustomFileSystemConfigArgs>());
            set => _customFileSystemConfigs = value;
        }

        /// <summary>
        /// Details about the POSIX identity that is used for file system operations. See Custom Posix User Config below.
        /// </summary>
        [Input("customPosixUserConfig")]
        public Input<Inputs.UserProfileUserSettingsCustomPosixUserConfigArgs>? CustomPosixUserConfig { get; set; }

        /// <summary>
        /// The default experience that the user is directed to when accessing the domain. The supported values are: `studio::`: Indicates that Studio is the default experience. This value can only be passed if StudioWebPortal is set to ENABLED. `app:JupyterServer:`: Indicates that Studio Classic is the default experience.
        /// </summary>
        [Input("defaultLandingUri")]
        public Input<string>? DefaultLandingUri { get; set; }

        /// <summary>
        /// The execution role ARN for the user.
        /// </summary>
        [Input("executionRole", required: true)]
        public Input<string> ExecutionRole { get; set; } = null!;

        /// <summary>
        /// The settings for the JupyterLab application. See Jupyter Lab App Settings below.
        /// </summary>
        [Input("jupyterLabAppSettings")]
        public Input<Inputs.UserProfileUserSettingsJupyterLabAppSettingsArgs>? JupyterLabAppSettings { get; set; }

        /// <summary>
        /// The Jupyter server's app settings. See Jupyter Server App Settings below.
        /// </summary>
        [Input("jupyterServerAppSettings")]
        public Input<Inputs.UserProfileUserSettingsJupyterServerAppSettingsArgs>? JupyterServerAppSettings { get; set; }

        /// <summary>
        /// The kernel gateway app settings. See Kernel Gateway App Settings below.
        /// </summary>
        [Input("kernelGatewayAppSettings")]
        public Input<Inputs.UserProfileUserSettingsKernelGatewayAppSettingsArgs>? KernelGatewayAppSettings { get; set; }

        /// <summary>
        /// The RSession app settings. See RSession App Settings below.
        /// </summary>
        [Input("rSessionAppSettings")]
        public Input<Inputs.UserProfileUserSettingsRSessionAppSettingsArgs>? RSessionAppSettings { get; set; }

        /// <summary>
        /// A collection of settings that configure user interaction with the RStudioServerPro app. See RStudioServerProAppSettings below.
        /// </summary>
        [Input("rStudioServerProAppSettings")]
        public Input<Inputs.UserProfileUserSettingsRStudioServerProAppSettingsArgs>? RStudioServerProAppSettings { get; set; }

        [Input("securityGroups")]
        private InputList<string>? _securityGroups;

        /// <summary>
        /// A list of security group IDs that will be attached to the user.
        /// </summary>
        public InputList<string> SecurityGroups
        {
            get => _securityGroups ?? (_securityGroups = new InputList<string>());
            set => _securityGroups = value;
        }

        /// <summary>
        /// The sharing settings. See Sharing Settings below.
        /// </summary>
        [Input("sharingSettings")]
        public Input<Inputs.UserProfileUserSettingsSharingSettingsArgs>? SharingSettings { get; set; }

        /// <summary>
        /// The storage settings for a private space. See Space Storage Settings below.
        /// </summary>
        [Input("spaceStorageSettings")]
        public Input<Inputs.UserProfileUserSettingsSpaceStorageSettingsArgs>? SpaceStorageSettings { get; set; }

        /// <summary>
        /// Whether the user can access Studio. If this value is set to `DISABLED`, the user cannot access Studio, even if that is the default experience for the domain. Valid values are `ENABLED` and `DISABLED`.
        /// </summary>
        [Input("studioWebPortal")]
        public Input<string>? StudioWebPortal { get; set; }

        /// <summary>
        /// The TensorBoard app settings. See TensorBoard App Settings below.
        /// </summary>
        [Input("tensorBoardAppSettings")]
        public Input<Inputs.UserProfileUserSettingsTensorBoardAppSettingsArgs>? TensorBoardAppSettings { get; set; }

        public UserProfileUserSettingsArgs()
        {
        }
        public static new UserProfileUserSettingsArgs Empty => new UserProfileUserSettingsArgs();
    }
}
