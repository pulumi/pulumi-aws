// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Sagemaker
{
    /// <summary>
    /// Provides a SageMaker data quality job definition resource.
    /// 
    /// ## Example Usage
    /// 
    /// Basic usage:
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var test = new Aws.Sagemaker.DataQualityJobDefinition("test", new()
    ///     {
    ///         DataQualityAppSpecification = new Aws.Sagemaker.Inputs.DataQualityJobDefinitionDataQualityAppSpecificationArgs
    ///         {
    ///             ImageUri = data.Aws_sagemaker_prebuilt_ecr_image.Monitor.Registry_path,
    ///         },
    ///         DataQualityJobInput = new Aws.Sagemaker.Inputs.DataQualityJobDefinitionDataQualityJobInputArgs
    ///         {
    ///             EndpointInput = new Aws.Sagemaker.Inputs.DataQualityJobDefinitionDataQualityJobInputEndpointInputArgs
    ///             {
    ///                 EndpointName = aws_sagemaker_endpoint.My_endpoint.Name,
    ///             },
    ///         },
    ///         DataQualityJobOutputConfig = new Aws.Sagemaker.Inputs.DataQualityJobDefinitionDataQualityJobOutputConfigArgs
    ///         {
    ///             MonitoringOutputs = new Aws.Sagemaker.Inputs.DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsArgs
    ///             {
    ///                 S3Output = new Aws.Sagemaker.Inputs.DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3OutputArgs
    ///                 {
    ///                     S3Uri = $"https://{aws_s3_bucket.My_bucket.Bucket_regional_domain_name}/output",
    ///                 },
    ///             },
    ///         },
    ///         JobResources = new Aws.Sagemaker.Inputs.DataQualityJobDefinitionJobResourcesArgs
    ///         {
    ///             ClusterConfig = new Aws.Sagemaker.Inputs.DataQualityJobDefinitionJobResourcesClusterConfigArgs
    ///             {
    ///                 InstanceCount = 1,
    ///                 InstanceType = "ml.t3.medium",
    ///                 VolumeSizeInGb = 20,
    ///             },
    ///         },
    ///         RoleArn = aws_iam_role.My_role.Arn,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import data quality job definitions using the `name`. For example:
    /// 
    /// ```sh
    ///  $ pulumi import aws:sagemaker/dataQualityJobDefinition:DataQualityJobDefinition test_data_quality_job_definition data-quality-job-definition-foo
    /// ```
    /// </summary>
    [AwsResourceType("aws:sagemaker/dataQualityJobDefinition:DataQualityJobDefinition")]
    public partial class DataQualityJobDefinition : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) assigned by AWS to this data quality job definition.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// Specifies the container that runs the monitoring job. Fields are documented below.
        /// </summary>
        [Output("dataQualityAppSpecification")]
        public Output<Outputs.DataQualityJobDefinitionDataQualityAppSpecification> DataQualityAppSpecification { get; private set; } = null!;

        /// <summary>
        /// Configures the constraints and baselines for the monitoring job. Fields are documented below.
        /// </summary>
        [Output("dataQualityBaselineConfig")]
        public Output<Outputs.DataQualityJobDefinitionDataQualityBaselineConfig?> DataQualityBaselineConfig { get; private set; } = null!;

        /// <summary>
        /// A list of inputs for the monitoring job. Fields are documented below.
        /// </summary>
        [Output("dataQualityJobInput")]
        public Output<Outputs.DataQualityJobDefinitionDataQualityJobInput> DataQualityJobInput { get; private set; } = null!;

        /// <summary>
        /// The output configuration for monitoring jobs. Fields are documented below.
        /// </summary>
        [Output("dataQualityJobOutputConfig")]
        public Output<Outputs.DataQualityJobDefinitionDataQualityJobOutputConfig> DataQualityJobOutputConfig { get; private set; } = null!;

        /// <summary>
        /// Identifies the resources to deploy for a monitoring job. Fields are documented below.
        /// </summary>
        [Output("jobResources")]
        public Output<Outputs.DataQualityJobDefinitionJobResources> JobResources { get; private set; } = null!;

        /// <summary>
        /// The name of the data quality job definition. If omitted, the provider will assign a random, unique name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Specifies networking configuration for the monitoring job. Fields are documented below.
        /// </summary>
        [Output("networkConfig")]
        public Output<Outputs.DataQualityJobDefinitionNetworkConfig?> NetworkConfig { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
        /// </summary>
        [Output("roleArn")]
        public Output<string> RoleArn { get; private set; } = null!;

        /// <summary>
        /// A time limit for how long the monitoring job is allowed to run before stopping. Fields are documented below.
        /// </summary>
        [Output("stoppingCondition")]
        public Output<Outputs.DataQualityJobDefinitionStoppingCondition> StoppingCondition { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;


        /// <summary>
        /// Create a DataQualityJobDefinition resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DataQualityJobDefinition(string name, DataQualityJobDefinitionArgs args, CustomResourceOptions? options = null)
            : base("aws:sagemaker/dataQualityJobDefinition:DataQualityJobDefinition", name, args ?? new DataQualityJobDefinitionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DataQualityJobDefinition(string name, Input<string> id, DataQualityJobDefinitionState? state = null, CustomResourceOptions? options = null)
            : base("aws:sagemaker/dataQualityJobDefinition:DataQualityJobDefinition", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DataQualityJobDefinition resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DataQualityJobDefinition Get(string name, Input<string> id, DataQualityJobDefinitionState? state = null, CustomResourceOptions? options = null)
        {
            return new DataQualityJobDefinition(name, id, state, options);
        }
    }

    public sealed class DataQualityJobDefinitionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the container that runs the monitoring job. Fields are documented below.
        /// </summary>
        [Input("dataQualityAppSpecification", required: true)]
        public Input<Inputs.DataQualityJobDefinitionDataQualityAppSpecificationArgs> DataQualityAppSpecification { get; set; } = null!;

        /// <summary>
        /// Configures the constraints and baselines for the monitoring job. Fields are documented below.
        /// </summary>
        [Input("dataQualityBaselineConfig")]
        public Input<Inputs.DataQualityJobDefinitionDataQualityBaselineConfigArgs>? DataQualityBaselineConfig { get; set; }

        /// <summary>
        /// A list of inputs for the monitoring job. Fields are documented below.
        /// </summary>
        [Input("dataQualityJobInput", required: true)]
        public Input<Inputs.DataQualityJobDefinitionDataQualityJobInputArgs> DataQualityJobInput { get; set; } = null!;

        /// <summary>
        /// The output configuration for monitoring jobs. Fields are documented below.
        /// </summary>
        [Input("dataQualityJobOutputConfig", required: true)]
        public Input<Inputs.DataQualityJobDefinitionDataQualityJobOutputConfigArgs> DataQualityJobOutputConfig { get; set; } = null!;

        /// <summary>
        /// Identifies the resources to deploy for a monitoring job. Fields are documented below.
        /// </summary>
        [Input("jobResources", required: true)]
        public Input<Inputs.DataQualityJobDefinitionJobResourcesArgs> JobResources { get; set; } = null!;

        /// <summary>
        /// The name of the data quality job definition. If omitted, the provider will assign a random, unique name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies networking configuration for the monitoring job. Fields are documented below.
        /// </summary>
        [Input("networkConfig")]
        public Input<Inputs.DataQualityJobDefinitionNetworkConfigArgs>? NetworkConfig { get; set; }

        /// <summary>
        /// The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
        /// </summary>
        [Input("roleArn", required: true)]
        public Input<string> RoleArn { get; set; } = null!;

        /// <summary>
        /// A time limit for how long the monitoring job is allowed to run before stopping. Fields are documented below.
        /// </summary>
        [Input("stoppingCondition")]
        public Input<Inputs.DataQualityJobDefinitionStoppingConditionArgs>? StoppingCondition { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public DataQualityJobDefinitionArgs()
        {
        }
        public static new DataQualityJobDefinitionArgs Empty => new DataQualityJobDefinitionArgs();
    }

    public sealed class DataQualityJobDefinitionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) assigned by AWS to this data quality job definition.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// Specifies the container that runs the monitoring job. Fields are documented below.
        /// </summary>
        [Input("dataQualityAppSpecification")]
        public Input<Inputs.DataQualityJobDefinitionDataQualityAppSpecificationGetArgs>? DataQualityAppSpecification { get; set; }

        /// <summary>
        /// Configures the constraints and baselines for the monitoring job. Fields are documented below.
        /// </summary>
        [Input("dataQualityBaselineConfig")]
        public Input<Inputs.DataQualityJobDefinitionDataQualityBaselineConfigGetArgs>? DataQualityBaselineConfig { get; set; }

        /// <summary>
        /// A list of inputs for the monitoring job. Fields are documented below.
        /// </summary>
        [Input("dataQualityJobInput")]
        public Input<Inputs.DataQualityJobDefinitionDataQualityJobInputGetArgs>? DataQualityJobInput { get; set; }

        /// <summary>
        /// The output configuration for monitoring jobs. Fields are documented below.
        /// </summary>
        [Input("dataQualityJobOutputConfig")]
        public Input<Inputs.DataQualityJobDefinitionDataQualityJobOutputConfigGetArgs>? DataQualityJobOutputConfig { get; set; }

        /// <summary>
        /// Identifies the resources to deploy for a monitoring job. Fields are documented below.
        /// </summary>
        [Input("jobResources")]
        public Input<Inputs.DataQualityJobDefinitionJobResourcesGetArgs>? JobResources { get; set; }

        /// <summary>
        /// The name of the data quality job definition. If omitted, the provider will assign a random, unique name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies networking configuration for the monitoring job. Fields are documented below.
        /// </summary>
        [Input("networkConfig")]
        public Input<Inputs.DataQualityJobDefinitionNetworkConfigGetArgs>? NetworkConfig { get; set; }

        /// <summary>
        /// The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf.
        /// </summary>
        [Input("roleArn")]
        public Input<string>? RoleArn { get; set; }

        /// <summary>
        /// A time limit for how long the monitoring job is allowed to run before stopping. Fields are documented below.
        /// </summary>
        [Input("stoppingCondition")]
        public Input<Inputs.DataQualityJobDefinitionStoppingConditionGetArgs>? StoppingCondition { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        public DataQualityJobDefinitionState()
        {
        }
        public static new DataQualityJobDefinitionState Empty => new DataQualityJobDefinitionState();
    }
}
