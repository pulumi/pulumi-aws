// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Sagemaker
{
    /// <summary>
    /// Provides a Sagemaker Workteam resource.
    /// 
    /// ## Example Usage
    /// ### Cognito Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var example = new Aws.Sagemaker.WorkTeam("example", new Aws.Sagemaker.WorkTeamArgs
    ///         {
    ///             WorkteamName = "example",
    ///             WorkforceName = aws_sagemaker_workforce.Example.Id,
    ///             Description = "example",
    ///             MemberDefinitions = 
    ///             {
    ///                 new Aws.Sagemaker.Inputs.WorkTeamMemberDefinitionArgs
    ///                 {
    ///                     CognitoMemberDefinition = new Aws.Sagemaker.Inputs.WorkTeamMemberDefinitionCognitoMemberDefinitionArgs
    ///                     {
    ///                         ClientId = aws_cognito_user_pool_client.Example.Id,
    ///                         UserPool = aws_cognito_user_pool_domain.Example.User_pool_id,
    ///                         UserGroup = aws_cognito_user_group.Example.Id,
    ///                     },
    ///                 },
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// ### Oidc Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var example = new Aws.Sagemaker.WorkTeam("example", new Aws.Sagemaker.WorkTeamArgs
    ///         {
    ///             WorkteamName = "example",
    ///             WorkforceName = aws_sagemaker_workforce.Example.Id,
    ///             Description = "example",
    ///             MemberDefinitions = 
    ///             {
    ///                 new Aws.Sagemaker.Inputs.WorkTeamMemberDefinitionArgs
    ///                 {
    ///                     OidcMemberDefinition = new Aws.Sagemaker.Inputs.WorkTeamMemberDefinitionOidcMemberDefinitionArgs
    ///                     {
    ///                         Groups = 
    ///                         {
    ///                             "example",
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// Sagemaker Workteams can be imported using the `workteam_name`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import aws:sagemaker/workTeam:WorkTeam example example
    /// ```
    /// </summary>
    [AwsResourceType("aws:sagemaker/workTeam:WorkTeam")]
    public partial class WorkTeam : Pulumi.CustomResource
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) assigned by AWS to this Workteam.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// A description of the work team.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// A list of Member Definitions that contains objects that identify the workers that make up the work team. Workforces can be created using Amazon Cognito or your own OIDC Identity Provider (IdP). For private workforces created using Amazon Cognito use `cognito_member_definition`. For workforces created using your own OIDC identity provider (IdP) use `oidc_member_definition`. Do not provide input for both of these parameters in a single request. see Member Definition details below.
        /// </summary>
        [Output("memberDefinitions")]
        public Output<ImmutableArray<Outputs.WorkTeamMemberDefinition>> MemberDefinitions { get; private set; } = null!;

        /// <summary>
        /// Configures notification of workers regarding available or expiring work items. see Notification Configuration details below.
        /// </summary>
        [Output("notificationConfiguration")]
        public Output<Outputs.WorkTeamNotificationConfiguration?> NotificationConfiguration { get; private set; } = null!;

        /// <summary>
        /// The subdomain for your OIDC Identity Provider.
        /// </summary>
        [Output("subdomain")]
        public Output<string> Subdomain { get; private set; } = null!;

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://www.terraform.io/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://www.terraform.io/docs/providers/aws/index.html#default_tags-configuration-block).
        /// </summary>
        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        /// <summary>
        /// The name of the Workteam (must be unique).
        /// </summary>
        [Output("workforceName")]
        public Output<string> WorkforceName { get; private set; } = null!;

        /// <summary>
        /// The name of the workforce.
        /// </summary>
        [Output("workteamName")]
        public Output<string> WorkteamName { get; private set; } = null!;


        /// <summary>
        /// Create a WorkTeam resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WorkTeam(string name, WorkTeamArgs args, CustomResourceOptions? options = null)
            : base("aws:sagemaker/workTeam:WorkTeam", name, args ?? new WorkTeamArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WorkTeam(string name, Input<string> id, WorkTeamState? state = null, CustomResourceOptions? options = null)
            : base("aws:sagemaker/workTeam:WorkTeam", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WorkTeam resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WorkTeam Get(string name, Input<string> id, WorkTeamState? state = null, CustomResourceOptions? options = null)
        {
            return new WorkTeam(name, id, state, options);
        }
    }

    public sealed class WorkTeamArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// A description of the work team.
        /// </summary>
        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        [Input("memberDefinitions", required: true)]
        private InputList<Inputs.WorkTeamMemberDefinitionArgs>? _memberDefinitions;

        /// <summary>
        /// A list of Member Definitions that contains objects that identify the workers that make up the work team. Workforces can be created using Amazon Cognito or your own OIDC Identity Provider (IdP). For private workforces created using Amazon Cognito use `cognito_member_definition`. For workforces created using your own OIDC identity provider (IdP) use `oidc_member_definition`. Do not provide input for both of these parameters in a single request. see Member Definition details below.
        /// </summary>
        public InputList<Inputs.WorkTeamMemberDefinitionArgs> MemberDefinitions
        {
            get => _memberDefinitions ?? (_memberDefinitions = new InputList<Inputs.WorkTeamMemberDefinitionArgs>());
            set => _memberDefinitions = value;
        }

        /// <summary>
        /// Configures notification of workers regarding available or expiring work items. see Notification Configuration details below.
        /// </summary>
        [Input("notificationConfiguration")]
        public Input<Inputs.WorkTeamNotificationConfigurationArgs>? NotificationConfiguration { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://www.terraform.io/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://www.terraform.io/docs/providers/aws/index.html#default_tags-configuration-block).
        /// </summary>
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        /// <summary>
        /// The name of the Workteam (must be unique).
        /// </summary>
        [Input("workforceName", required: true)]
        public Input<string> WorkforceName { get; set; } = null!;

        /// <summary>
        /// The name of the workforce.
        /// </summary>
        [Input("workteamName", required: true)]
        public Input<string> WorkteamName { get; set; } = null!;

        public WorkTeamArgs()
        {
        }
    }

    public sealed class WorkTeamState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) assigned by AWS to this Workteam.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// A description of the work team.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("memberDefinitions")]
        private InputList<Inputs.WorkTeamMemberDefinitionGetArgs>? _memberDefinitions;

        /// <summary>
        /// A list of Member Definitions that contains objects that identify the workers that make up the work team. Workforces can be created using Amazon Cognito or your own OIDC Identity Provider (IdP). For private workforces created using Amazon Cognito use `cognito_member_definition`. For workforces created using your own OIDC identity provider (IdP) use `oidc_member_definition`. Do not provide input for both of these parameters in a single request. see Member Definition details below.
        /// </summary>
        public InputList<Inputs.WorkTeamMemberDefinitionGetArgs> MemberDefinitions
        {
            get => _memberDefinitions ?? (_memberDefinitions = new InputList<Inputs.WorkTeamMemberDefinitionGetArgs>());
            set => _memberDefinitions = value;
        }

        /// <summary>
        /// Configures notification of workers regarding available or expiring work items. see Notification Configuration details below.
        /// </summary>
        [Input("notificationConfiguration")]
        public Input<Inputs.WorkTeamNotificationConfigurationGetArgs>? NotificationConfiguration { get; set; }

        /// <summary>
        /// The subdomain for your OIDC Identity Provider.
        /// </summary>
        [Input("subdomain")]
        public Input<string>? Subdomain { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider [`default_tags` configuration block](https://www.terraform.io/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://www.terraform.io/docs/providers/aws/index.html#default_tags-configuration-block).
        /// </summary>
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        /// <summary>
        /// The name of the Workteam (must be unique).
        /// </summary>
        [Input("workforceName")]
        public Input<string>? WorkforceName { get; set; }

        /// <summary>
        /// The name of the workforce.
        /// </summary>
        [Input("workteamName")]
        public Input<string>? WorkteamName { get; set; }

        public WorkTeamState()
        {
        }
    }
}
