// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Sagemaker
{
    [AwsResourceType("aws:sagemaker/model:Model")]
    public partial class Model : global::Pulumi.CustomResource
    {
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("containers")]
        public Output<ImmutableArray<Outputs.ModelContainer>> Containers { get; private set; } = null!;

        [Output("enableNetworkIsolation")]
        public Output<bool?> EnableNetworkIsolation { get; private set; } = null!;

        [Output("executionRoleArn")]
        public Output<string> ExecutionRoleArn { get; private set; } = null!;

        [Output("inferenceExecutionConfig")]
        public Output<Outputs.ModelInferenceExecutionConfig> InferenceExecutionConfig { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("primaryContainer")]
        public Output<Outputs.ModelPrimaryContainer?> PrimaryContainer { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("vpcConfig")]
        public Output<Outputs.ModelVpcConfig?> VpcConfig { get; private set; } = null!;


        /// <summary>
        /// Create a Model resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Model(string name, ModelArgs args, CustomResourceOptions? options = null)
            : base("aws:sagemaker/model:Model", name, args ?? new ModelArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Model(string name, Input<string> id, ModelState? state = null, CustomResourceOptions? options = null)
            : base("aws:sagemaker/model:Model", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Model resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Model Get(string name, Input<string> id, ModelState? state = null, CustomResourceOptions? options = null)
        {
            return new Model(name, id, state, options);
        }
    }

    public sealed class ModelArgs : global::Pulumi.ResourceArgs
    {
        [Input("containers")]
        private InputList<Inputs.ModelContainerArgs>? _containers;
        public InputList<Inputs.ModelContainerArgs> Containers
        {
            get => _containers ?? (_containers = new InputList<Inputs.ModelContainerArgs>());
            set => _containers = value;
        }

        [Input("enableNetworkIsolation")]
        public Input<bool>? EnableNetworkIsolation { get; set; }

        [Input("executionRoleArn", required: true)]
        public Input<string> ExecutionRoleArn { get; set; } = null!;

        [Input("inferenceExecutionConfig")]
        public Input<Inputs.ModelInferenceExecutionConfigArgs>? InferenceExecutionConfig { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("primaryContainer")]
        public Input<Inputs.ModelPrimaryContainerArgs>? PrimaryContainer { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("vpcConfig")]
        public Input<Inputs.ModelVpcConfigArgs>? VpcConfig { get; set; }

        public ModelArgs()
        {
        }
        public static new ModelArgs Empty => new ModelArgs();
    }

    public sealed class ModelState : global::Pulumi.ResourceArgs
    {
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("containers")]
        private InputList<Inputs.ModelContainerGetArgs>? _containers;
        public InputList<Inputs.ModelContainerGetArgs> Containers
        {
            get => _containers ?? (_containers = new InputList<Inputs.ModelContainerGetArgs>());
            set => _containers = value;
        }

        [Input("enableNetworkIsolation")]
        public Input<bool>? EnableNetworkIsolation { get; set; }

        [Input("executionRoleArn")]
        public Input<string>? ExecutionRoleArn { get; set; }

        [Input("inferenceExecutionConfig")]
        public Input<Inputs.ModelInferenceExecutionConfigGetArgs>? InferenceExecutionConfig { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("primaryContainer")]
        public Input<Inputs.ModelPrimaryContainerGetArgs>? PrimaryContainer { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("vpcConfig")]
        public Input<Inputs.ModelVpcConfigGetArgs>? VpcConfig { get; set; }

        public ModelState()
        {
        }
        public static new ModelState Empty => new ModelState();
    }
}
