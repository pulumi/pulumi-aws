// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Sagemaker
{
    [AwsResourceType("aws:sagemaker/imageVersion:ImageVersion")]
    public partial class ImageVersion : global::Pulumi.CustomResource
    {
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("baseImage")]
        public Output<string> BaseImage { get; private set; } = null!;

        [Output("containerImage")]
        public Output<string> ContainerImage { get; private set; } = null!;

        [Output("imageArn")]
        public Output<string> ImageArn { get; private set; } = null!;

        [Output("imageName")]
        public Output<string> ImageName { get; private set; } = null!;

        [Output("version")]
        public Output<int> Version { get; private set; } = null!;


        /// <summary>
        /// Create a ImageVersion resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ImageVersion(string name, ImageVersionArgs args, CustomResourceOptions? options = null)
            : base("aws:sagemaker/imageVersion:ImageVersion", name, args ?? new ImageVersionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ImageVersion(string name, Input<string> id, ImageVersionState? state = null, CustomResourceOptions? options = null)
            : base("aws:sagemaker/imageVersion:ImageVersion", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ImageVersion resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ImageVersion Get(string name, Input<string> id, ImageVersionState? state = null, CustomResourceOptions? options = null)
        {
            return new ImageVersion(name, id, state, options);
        }
    }

    public sealed class ImageVersionArgs : global::Pulumi.ResourceArgs
    {
        [Input("baseImage", required: true)]
        public Input<string> BaseImage { get; set; } = null!;

        [Input("imageName", required: true)]
        public Input<string> ImageName { get; set; } = null!;

        public ImageVersionArgs()
        {
        }
        public static new ImageVersionArgs Empty => new ImageVersionArgs();
    }

    public sealed class ImageVersionState : global::Pulumi.ResourceArgs
    {
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("baseImage")]
        public Input<string>? BaseImage { get; set; }

        [Input("containerImage")]
        public Input<string>? ContainerImage { get; set; }

        [Input("imageArn")]
        public Input<string>? ImageArn { get; set; }

        [Input("imageName")]
        public Input<string>? ImageName { get; set; }

        [Input("version")]
        public Input<int>? Version { get; set; }

        public ImageVersionState()
        {
        }
        public static new ImageVersionState Empty => new ImageVersionState();
    }
}
