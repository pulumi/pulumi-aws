// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws
{
    public static class GetService
    {
        public static Task<GetServiceResult> InvokeAsync(GetServiceArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetServiceResult>("aws:index/getService:getService", args ?? new GetServiceArgs(), options.WithDefaults());

        public static Output<GetServiceResult> Invoke(GetServiceInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetServiceResult>("aws:index/getService:getService", args ?? new GetServiceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServiceArgs : global::Pulumi.InvokeArgs
    {
        [Input("dnsName")]
        public string? DnsName { get; set; }

        [Input("region")]
        public string? Region { get; set; }

        [Input("reverseDnsName")]
        public string? ReverseDnsName { get; set; }

        [Input("reverseDnsPrefix")]
        public string? ReverseDnsPrefix { get; set; }

        [Input("serviceId")]
        public string? ServiceId { get; set; }

        public GetServiceArgs()
        {
        }
        public static new GetServiceArgs Empty => new GetServiceArgs();
    }

    public sealed class GetServiceInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("dnsName")]
        public Input<string>? DnsName { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("reverseDnsName")]
        public Input<string>? ReverseDnsName { get; set; }

        [Input("reverseDnsPrefix")]
        public Input<string>? ReverseDnsPrefix { get; set; }

        [Input("serviceId")]
        public Input<string>? ServiceId { get; set; }

        public GetServiceInvokeArgs()
        {
        }
        public static new GetServiceInvokeArgs Empty => new GetServiceInvokeArgs();
    }


    [OutputType]
    public sealed class GetServiceResult
    {
        public readonly string DnsName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Partition;
        public readonly string Region;
        public readonly string ReverseDnsName;
        public readonly string ReverseDnsPrefix;
        public readonly string ServiceId;
        public readonly bool Supported;

        [OutputConstructor]
        private GetServiceResult(
            string dnsName,

            string id,

            string partition,

            string region,

            string reverseDnsName,

            string reverseDnsPrefix,

            string serviceId,

            bool supported)
        {
            DnsName = dnsName;
            Id = id;
            Partition = partition;
            Region = region;
            ReverseDnsName = reverseDnsName;
            ReverseDnsPrefix = reverseDnsPrefix;
            ServiceId = serviceId;
            Supported = supported;
        }
    }
}
