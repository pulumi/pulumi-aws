// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ecr
{
    public static class GetLifecyclePolicyDocument
    {
        /// <summary>
        /// Generates an ECR lifecycle policy document in JSON format. Can be used with resources such as the `aws.ecr.LifecyclePolicy` resource.
        /// 
        /// &gt; For more information about building AWS ECR lifecycle policy documents, see the [AWS ECR Lifecycle Policy Document Guide](https://docs.aws.amazon.com/AmazonECR/latest/userguide/LifecyclePolicies.html).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Ecr.GetLifecyclePolicyDocument.Invoke(new()
        ///     {
        ///         Rules = new[]
        ///         {
        ///             new Aws.Ecr.Inputs.GetLifecyclePolicyDocumentRuleInputArgs
        ///             {
        ///                 Priority = 1,
        ///                 Description = "This is a test.",
        ///                 Selection = new Aws.Ecr.Inputs.GetLifecyclePolicyDocumentRuleSelectionInputArgs
        ///                 {
        ///                     TagStatus = "tagged",
        ///                     TagPrefixLists = new[]
        ///                     {
        ///                         "prod",
        ///                     },
        ///                     CountType = "imageCountMoreThan",
        ///                     CountNumber = 100,
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        ///     var exampleLifecyclePolicy = new Aws.Ecr.LifecyclePolicy("example", new()
        ///     {
        ///         Repository = exampleAwsEcrRepository.Name,
        ///         Policy = example.Apply(getLifecyclePolicyDocumentResult =&gt; getLifecyclePolicyDocumentResult.Json),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetLifecyclePolicyDocumentResult> InvokeAsync(GetLifecyclePolicyDocumentArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLifecyclePolicyDocumentResult>("aws:ecr/getLifecyclePolicyDocument:getLifecyclePolicyDocument", args ?? new GetLifecyclePolicyDocumentArgs(), options.WithDefaults());

        /// <summary>
        /// Generates an ECR lifecycle policy document in JSON format. Can be used with resources such as the `aws.ecr.LifecyclePolicy` resource.
        /// 
        /// &gt; For more information about building AWS ECR lifecycle policy documents, see the [AWS ECR Lifecycle Policy Document Guide](https://docs.aws.amazon.com/AmazonECR/latest/userguide/LifecyclePolicies.html).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Ecr.GetLifecyclePolicyDocument.Invoke(new()
        ///     {
        ///         Rules = new[]
        ///         {
        ///             new Aws.Ecr.Inputs.GetLifecyclePolicyDocumentRuleInputArgs
        ///             {
        ///                 Priority = 1,
        ///                 Description = "This is a test.",
        ///                 Selection = new Aws.Ecr.Inputs.GetLifecyclePolicyDocumentRuleSelectionInputArgs
        ///                 {
        ///                     TagStatus = "tagged",
        ///                     TagPrefixLists = new[]
        ///                     {
        ///                         "prod",
        ///                     },
        ///                     CountType = "imageCountMoreThan",
        ///                     CountNumber = 100,
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        ///     var exampleLifecyclePolicy = new Aws.Ecr.LifecyclePolicy("example", new()
        ///     {
        ///         Repository = exampleAwsEcrRepository.Name,
        ///         Policy = example.Apply(getLifecyclePolicyDocumentResult =&gt; getLifecyclePolicyDocumentResult.Json),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetLifecyclePolicyDocumentResult> Invoke(GetLifecyclePolicyDocumentInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLifecyclePolicyDocumentResult>("aws:ecr/getLifecyclePolicyDocument:getLifecyclePolicyDocument", args ?? new GetLifecyclePolicyDocumentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLifecyclePolicyDocumentArgs : global::Pulumi.InvokeArgs
    {
        [Input("rules")]
        private List<Inputs.GetLifecyclePolicyDocumentRuleArgs>? _rules;
        public List<Inputs.GetLifecyclePolicyDocumentRuleArgs> Rules
        {
            get => _rules ?? (_rules = new List<Inputs.GetLifecyclePolicyDocumentRuleArgs>());
            set => _rules = value;
        }

        public GetLifecyclePolicyDocumentArgs()
        {
        }
        public static new GetLifecyclePolicyDocumentArgs Empty => new GetLifecyclePolicyDocumentArgs();
    }

    public sealed class GetLifecyclePolicyDocumentInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("rules")]
        private InputList<Inputs.GetLifecyclePolicyDocumentRuleInputArgs>? _rules;
        public InputList<Inputs.GetLifecyclePolicyDocumentRuleInputArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.GetLifecyclePolicyDocumentRuleInputArgs>());
            set => _rules = value;
        }

        public GetLifecyclePolicyDocumentInvokeArgs()
        {
        }
        public static new GetLifecyclePolicyDocumentInvokeArgs Empty => new GetLifecyclePolicyDocumentInvokeArgs();
    }


    [OutputType]
    public sealed class GetLifecyclePolicyDocumentResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The above arguments serialized as a standard JSON policy document.
        /// </summary>
        public readonly string Json;
        public readonly ImmutableArray<Outputs.GetLifecyclePolicyDocumentRuleResult> Rules;

        [OutputConstructor]
        private GetLifecyclePolicyDocumentResult(
            string id,

            string json,

            ImmutableArray<Outputs.GetLifecyclePolicyDocumentRuleResult> rules)
        {
            Id = id;
            Json = json;
            Rules = rules;
        }
    }
}
