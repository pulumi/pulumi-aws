// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ecr.Inputs
{

    /// <summary>
    /// Represents selection criteria for an ECR lifecycle policy rule.
    /// </summary>
    public sealed class LifecyclePolicySelectionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The count number to use with the count type.
        /// </summary>
        [Input("countNumber", required: true)]
        public Input<int> CountNumber { get; set; } = null!;

        /// <summary>
        /// The type of count to perform. Either 'imageCountMoreThan' or 'sinceImagePushed'.
        /// </summary>
        [Input("countType", required: true)]
        public Input<Pulumi.Aws.Ecr.LifecyclePolicyCountType> CountType { get; set; } = null!;

        /// <summary>
        /// The unit of time for sinceImagePushed. Either 'days'.
        /// </summary>
        [Input("countUnit")]
        public Input<string>? CountUnit { get; set; }

        /// <summary>
        /// A list of image tag prefixes on which to take action.
        /// </summary>
        [Input("tagPrefixList")]
        public InputUnion<string, ImmutableArray<string>>? TagPrefixList { get; set; }

        /// <summary>
        /// The tag status of the image. Either 'tagged', 'untagged', or 'any'.
        /// </summary>
        [Input("tagStatus", required: true)]
        public Input<Pulumi.Aws.Ecr.LifecyclePolicyTagStatus> TagStatus { get; set; } = null!;

        public LifecyclePolicySelectionArgs()
        {
        }
        public static new LifecyclePolicySelectionArgs Empty => new LifecyclePolicySelectionArgs();
    }
}
