// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.AppFlow.Outputs
{

    [OutputType]
    public sealed class ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoData
    {
        /// <summary>
        /// The location of the SAPOData resource.
        /// </summary>
        public readonly string ApplicationHostUrl;
        /// <summary>
        /// The application path to catalog service.
        /// </summary>
        public readonly string ApplicationServicePath;
        /// <summary>
        /// The client number for the client creating the connection.
        /// </summary>
        public readonly string ClientNumber;
        /// <summary>
        /// The logon language of SAPOData instance.
        /// </summary>
        public readonly string? LogonLanguage;
        /// <summary>
        /// The SAPOData OAuth properties required for OAuth type authentication.
        /// </summary>
        public readonly Outputs.ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthProperties? OauthProperties;
        /// <summary>
        /// The port number of the SAPOData instance.
        /// </summary>
        public readonly int PortNumber;
        /// <summary>
        /// The SAPOData Private Link service name to be used for private data transfers.
        /// </summary>
        public readonly string? PrivateLinkServiceName;

        [OutputConstructor]
        private ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoData(
            string applicationHostUrl,

            string applicationServicePath,

            string clientNumber,

            string? logonLanguage,

            Outputs.ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthProperties? oauthProperties,

            int portNumber,

            string? privateLinkServiceName)
        {
            ApplicationHostUrl = applicationHostUrl;
            ApplicationServicePath = applicationServicePath;
            ClientNumber = clientNumber;
            LogonLanguage = logonLanguage;
            OauthProperties = oauthProperties;
            PortNumber = portNumber;
            PrivateLinkServiceName = privateLinkServiceName;
        }
    }
}
