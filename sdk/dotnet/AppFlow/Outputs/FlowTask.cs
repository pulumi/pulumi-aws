// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.AppFlow.Outputs
{

    [OutputType]
    public sealed class FlowTask
    {
        /// <summary>
        /// Operation to be performed on the provided source fields. See Connector Operator for details.
        /// </summary>
        public readonly ImmutableArray<Outputs.FlowTaskConnectorOperator> ConnectorOperators;
        /// <summary>
        /// Field in a destination connector, or a field value against which Amazon AppFlow validates a source field.
        /// </summary>
        public readonly string? DestinationField;
        /// <summary>
        /// Source fields to which a particular task is applied.
        /// </summary>
        public readonly ImmutableArray<string> SourceFields;
        /// <summary>
        /// Map used to store task-related information. The execution service looks for particular information based on the `TaskType`. Valid keys are `VALUE`, `VALUES`, `DATA_TYPE`, `UPPER_BOUND`, `LOWER_BOUND`, `SOURCE_DATA_TYPE`, `DESTINATION_DATA_TYPE`, `VALIDATION_ACTION`, `MASK_VALUE`, `MASK_LENGTH`, `TRUNCATE_LENGTH`, `MATH_OPERATION_FIELDS_ORDER`, `CONCAT_FORMAT`, `SUBFIELD_CATEGORY_MAP`, and `EXCLUDE_SOURCE_FIELDS_LIST`.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? TaskProperties;
        /// <summary>
        /// Particular task implementation that Amazon AppFlow performs. Valid values are `Arithmetic`, `Filter`, `Map`, `Map_all`, `Mask`, `Merge`, `Passthrough`, `Truncate`, and `Validate`.
        /// </summary>
        public readonly string TaskType;

        [OutputConstructor]
        private FlowTask(
            ImmutableArray<Outputs.FlowTaskConnectorOperator> connectorOperators,

            string? destinationField,

            ImmutableArray<string> sourceFields,

            ImmutableDictionary<string, string>? taskProperties,

            string taskType)
        {
            ConnectorOperators = connectorOperators;
            DestinationField = destinationField;
            SourceFields = sourceFields;
            TaskProperties = taskProperties;
            TaskType = taskType;
        }
    }
}
