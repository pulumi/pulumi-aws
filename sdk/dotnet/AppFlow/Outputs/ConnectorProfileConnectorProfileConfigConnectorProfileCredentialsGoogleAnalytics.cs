// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.AppFlow.Outputs
{

    [OutputType]
    public sealed class ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalytics
    {
        /// <summary>
        /// The credentials used to access protected Google Analytics resources.
        /// </summary>
        public readonly string? AccessToken;
        /// <summary>
        /// The identifier for the desired client.
        /// </summary>
        public readonly string ClientId;
        /// <summary>
        /// The client secret used by the OAuth client to authenticate to the authorization server.
        /// </summary>
        public readonly string ClientSecret;
        /// <summary>
        /// The OAuth requirement needed to request security tokens from the connector endpoint. See OAuth Request for more details.
        /// </summary>
        public readonly Outputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequest? OauthRequest;
        /// <summary>
        /// The credentials used to acquire new access tokens. This is required only for OAuth2 access tokens, and is not required for OAuth1 access tokens.
        /// </summary>
        public readonly string? RefreshToken;

        [OutputConstructor]
        private ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalytics(
            string? accessToken,

            string clientId,

            string clientSecret,

            Outputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsOauthRequest? oauthRequest,

            string? refreshToken)
        {
            AccessToken = accessToken;
            ClientId = clientId;
            ClientSecret = clientSecret;
            OauthRequest = oauthRequest;
            RefreshToken = refreshToken;
        }
    }
}
