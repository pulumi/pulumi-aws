// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.AppFlow.Inputs
{

    public sealed class FlowSourceFlowConfigArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The API version that the destination connector uses.
        /// </summary>
        [Input("apiVersion")]
        public Input<string>? ApiVersion { get; set; }

        /// <summary>
        /// The name of the connector profile. This name must be unique for each connector profile in the AWS account.
        /// </summary>
        [Input("connectorProfileName")]
        public Input<string>? ConnectorProfileName { get; set; }

        /// <summary>
        /// The type of connector, such as Salesforce, Amplitude, and so on. Valid values are `Salesforce`, `Singular`, `Slack`, `Redshift`, `S3`, `Marketo`, `Googleanalytics`, `Zendesk`, `Servicenow`, `Datadog`, `Trendmicro`, `Snowflake`, `Dynatrace`, `Infornexus`, `Amplitude`, `Veeva`, `EventBridge`, `LookoutMetrics`, `Upsolver`, `Honeycode`, `CustomerProfiles`, `SAPOData`, and `CustomConnector`.
        /// </summary>
        [Input("connectorType", required: true)]
        public Input<string> ConnectorType { get; set; } = null!;

        /// <summary>
        /// Defines the configuration for a scheduled incremental data pull. If a valid configuration is provided, the fields specified in the configuration are used when querying for the incremental data pull. See Incremental Pull Config for more details.
        /// </summary>
        [Input("incrementalPullConfig")]
        public Input<Inputs.FlowSourceFlowConfigIncrementalPullConfigArgs>? IncrementalPullConfig { get; set; }

        /// <summary>
        /// Specifies the information that is required to query a particular source connector. See Source Connector Properties for details.
        /// </summary>
        [Input("sourceConnectorProperties", required: true)]
        public Input<Inputs.FlowSourceFlowConfigSourceConnectorPropertiesArgs> SourceConnectorProperties { get; set; } = null!;

        public FlowSourceFlowConfigArgs()
        {
        }
    }
}
