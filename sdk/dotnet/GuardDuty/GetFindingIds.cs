// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.GuardDuty
{
    public static class GetFindingIds
    {
        /// <summary>
        /// Data source for managing an AWS GuardDuty Finding Ids.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.GuardDuty.GetFindingIds.Invoke(new()
        ///     {
        ///         DetectorId = aws_guardduty_detector.Example.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetFindingIdsResult> InvokeAsync(GetFindingIdsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFindingIdsResult>("aws:guardduty/getFindingIds:getFindingIds", args ?? new GetFindingIdsArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for managing an AWS GuardDuty Finding Ids.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.GuardDuty.GetFindingIds.Invoke(new()
        ///     {
        ///         DetectorId = aws_guardduty_detector.Example.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetFindingIdsResult> Invoke(GetFindingIdsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFindingIdsResult>("aws:guardduty/getFindingIds:getFindingIds", args ?? new GetFindingIdsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFindingIdsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the GuardDuty detector.
        /// </summary>
        [Input("detectorId", required: true)]
        public string DetectorId { get; set; } = null!;

        public GetFindingIdsArgs()
        {
        }
        public static new GetFindingIdsArgs Empty => new GetFindingIdsArgs();
    }

    public sealed class GetFindingIdsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the GuardDuty detector.
        /// </summary>
        [Input("detectorId", required: true)]
        public Input<string> DetectorId { get; set; } = null!;

        public GetFindingIdsInvokeArgs()
        {
        }
        public static new GetFindingIdsInvokeArgs Empty => new GetFindingIdsInvokeArgs();
    }


    [OutputType]
    public sealed class GetFindingIdsResult
    {
        public readonly string DetectorId;
        /// <summary>
        /// A list of finding IDs for the specified detector.
        /// </summary>
        public readonly ImmutableArray<string> FindingIds;
        /// <summary>
        /// Indicates whether findings are present for the specified detector.
        /// </summary>
        public readonly bool HasFindings;
        public readonly string Id;

        [OutputConstructor]
        private GetFindingIdsResult(
            string detectorId,

            ImmutableArray<string> findingIds,

            bool hasFindings,

            string id)
        {
            DetectorId = detectorId;
            FindingIds = findingIds;
            HasFindings = hasFindings;
            Id = id;
        }
    }
}
