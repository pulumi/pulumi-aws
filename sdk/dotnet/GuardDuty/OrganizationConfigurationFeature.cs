// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.GuardDuty
{
    /// <summary>
    /// Provides a resource to manage a single Amazon GuardDuty [organization configuration feature](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty-features-activation-model.html#guardduty-features).
    /// 
    /// &gt; **NOTE:** Deleting this resource does not disable the organization configuration feature, the resource in simply removed from state instead.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.GuardDuty.Detector("example", new()
    ///     {
    ///         Enable = true,
    ///     });
    /// 
    ///     var eksRuntimeMonitoring = new Aws.GuardDuty.OrganizationConfigurationFeature("eksRuntimeMonitoring", new()
    ///     {
    ///         DetectorId = example.Id,
    ///         AutoEnable = "ALL",
    ///         AdditionalConfigurations = new[]
    ///         {
    ///             new Aws.GuardDuty.Inputs.OrganizationConfigurationFeatureAdditionalConfigurationArgs
    ///             {
    ///                 Name = "EKS_ADDON_MANAGEMENT",
    ///                 AutoEnable = "NEW",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [AwsResourceType("aws:guardduty/organizationConfigurationFeature:OrganizationConfigurationFeature")]
    public partial class OrganizationConfigurationFeature : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The additional information that will be configured for the organization See below.
        /// </summary>
        [Output("additionalConfigurations")]
        public Output<ImmutableArray<Outputs.OrganizationConfigurationFeatureAdditionalConfiguration>> AdditionalConfigurations { get; private set; } = null!;

        /// <summary>
        /// The status of the feature that is configured for the member accounts within the organization. Valid values: `NEW`, `ALL`, `NONE`.
        /// </summary>
        [Output("autoEnable")]
        public Output<string> AutoEnable { get; private set; } = null!;

        /// <summary>
        /// The ID of the detector that configures the delegated administrator.
        /// </summary>
        [Output("detectorId")]
        public Output<string> DetectorId { get; private set; } = null!;

        /// <summary>
        /// The name of the feature that will be configured for the organization. Valid values: `S3_DATA_EVENTS`, `EKS_AUDIT_LOGS`, `EBS_MALWARE_PROTECTION`, `RDS_LOGIN_EVENTS`, `EKS_RUNTIME_MONITORING`, `LAMBDA_NETWORK_LOGS`.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a OrganizationConfigurationFeature resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OrganizationConfigurationFeature(string name, OrganizationConfigurationFeatureArgs args, CustomResourceOptions? options = null)
            : base("aws:guardduty/organizationConfigurationFeature:OrganizationConfigurationFeature", name, args ?? new OrganizationConfigurationFeatureArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OrganizationConfigurationFeature(string name, Input<string> id, OrganizationConfigurationFeatureState? state = null, CustomResourceOptions? options = null)
            : base("aws:guardduty/organizationConfigurationFeature:OrganizationConfigurationFeature", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OrganizationConfigurationFeature resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OrganizationConfigurationFeature Get(string name, Input<string> id, OrganizationConfigurationFeatureState? state = null, CustomResourceOptions? options = null)
        {
            return new OrganizationConfigurationFeature(name, id, state, options);
        }
    }

    public sealed class OrganizationConfigurationFeatureArgs : global::Pulumi.ResourceArgs
    {
        [Input("additionalConfigurations")]
        private InputList<Inputs.OrganizationConfigurationFeatureAdditionalConfigurationArgs>? _additionalConfigurations;

        /// <summary>
        /// The additional information that will be configured for the organization See below.
        /// </summary>
        public InputList<Inputs.OrganizationConfigurationFeatureAdditionalConfigurationArgs> AdditionalConfigurations
        {
            get => _additionalConfigurations ?? (_additionalConfigurations = new InputList<Inputs.OrganizationConfigurationFeatureAdditionalConfigurationArgs>());
            set => _additionalConfigurations = value;
        }

        /// <summary>
        /// The status of the feature that is configured for the member accounts within the organization. Valid values: `NEW`, `ALL`, `NONE`.
        /// </summary>
        [Input("autoEnable", required: true)]
        public Input<string> AutoEnable { get; set; } = null!;

        /// <summary>
        /// The ID of the detector that configures the delegated administrator.
        /// </summary>
        [Input("detectorId", required: true)]
        public Input<string> DetectorId { get; set; } = null!;

        /// <summary>
        /// The name of the feature that will be configured for the organization. Valid values: `S3_DATA_EVENTS`, `EKS_AUDIT_LOGS`, `EBS_MALWARE_PROTECTION`, `RDS_LOGIN_EVENTS`, `EKS_RUNTIME_MONITORING`, `LAMBDA_NETWORK_LOGS`.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public OrganizationConfigurationFeatureArgs()
        {
        }
        public static new OrganizationConfigurationFeatureArgs Empty => new OrganizationConfigurationFeatureArgs();
    }

    public sealed class OrganizationConfigurationFeatureState : global::Pulumi.ResourceArgs
    {
        [Input("additionalConfigurations")]
        private InputList<Inputs.OrganizationConfigurationFeatureAdditionalConfigurationGetArgs>? _additionalConfigurations;

        /// <summary>
        /// The additional information that will be configured for the organization See below.
        /// </summary>
        public InputList<Inputs.OrganizationConfigurationFeatureAdditionalConfigurationGetArgs> AdditionalConfigurations
        {
            get => _additionalConfigurations ?? (_additionalConfigurations = new InputList<Inputs.OrganizationConfigurationFeatureAdditionalConfigurationGetArgs>());
            set => _additionalConfigurations = value;
        }

        /// <summary>
        /// The status of the feature that is configured for the member accounts within the organization. Valid values: `NEW`, `ALL`, `NONE`.
        /// </summary>
        [Input("autoEnable")]
        public Input<string>? AutoEnable { get; set; }

        /// <summary>
        /// The ID of the detector that configures the delegated administrator.
        /// </summary>
        [Input("detectorId")]
        public Input<string>? DetectorId { get; set; }

        /// <summary>
        /// The name of the feature that will be configured for the organization. Valid values: `S3_DATA_EVENTS`, `EKS_AUDIT_LOGS`, `EBS_MALWARE_PROTECTION`, `RDS_LOGIN_EVENTS`, `EKS_RUNTIME_MONITORING`, `LAMBDA_NETWORK_LOGS`.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public OrganizationConfigurationFeatureState()
        {
        }
        public static new OrganizationConfigurationFeatureState Empty => new OrganizationConfigurationFeatureState();
    }
}
