// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.GuardDuty
{
    /// <summary>
    /// Provides a resource to manage a GuardDuty malware protection plan.
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import GuardDuty malware protection plans using their IDs. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:guardduty/malwareProtectionPlan:MalwareProtectionPlan example 1234567890abcdef0123
    /// ```
    /// </summary>
    [AwsResourceType("aws:guardduty/malwareProtectionPlan:MalwareProtectionPlan")]
    public partial class MalwareProtectionPlan : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Information about whether the tags will be added to the S3 object after scanning. See `actions` below.
        /// </summary>
        [Output("actions")]
        public Output<ImmutableArray<Outputs.MalwareProtectionPlanAction>> Actions { get; private set; } = null!;

        /// <summary>
        /// The ARN of the GuardDuty malware protection plan
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// The timestamp when the Malware Protection plan resource was created.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// Information about the protected resource that is associated with the created Malware Protection plan. Presently, S3Bucket is the only supported protected resource. See `protected_resource` below.
        /// </summary>
        [Output("protectedResource")]
        public Output<Outputs.MalwareProtectionPlanProtectedResource?> ProtectedResource { get; private set; } = null!;

        /// <summary>
        /// The IAM role that includes the permissions required to scan and add tags to the associated protected resource.
        /// </summary>
        [Output("role")]
        public Output<string> Role { get; private set; } = null!;

        /// <summary>
        /// The GuardDuty malware protection plan status. Valid values are `ACTIVE`, `WARNING`, and `ERROR`.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;


        /// <summary>
        /// Create a MalwareProtectionPlan resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MalwareProtectionPlan(string name, MalwareProtectionPlanArgs args, CustomResourceOptions? options = null)
            : base("aws:guardduty/malwareProtectionPlan:MalwareProtectionPlan", name, args ?? new MalwareProtectionPlanArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MalwareProtectionPlan(string name, Input<string> id, MalwareProtectionPlanState? state = null, CustomResourceOptions? options = null)
            : base("aws:guardduty/malwareProtectionPlan:MalwareProtectionPlan", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MalwareProtectionPlan resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MalwareProtectionPlan Get(string name, Input<string> id, MalwareProtectionPlanState? state = null, CustomResourceOptions? options = null)
        {
            return new MalwareProtectionPlan(name, id, state, options);
        }
    }

    public sealed class MalwareProtectionPlanArgs : global::Pulumi.ResourceArgs
    {
        [Input("actions")]
        private InputList<Inputs.MalwareProtectionPlanActionArgs>? _actions;

        /// <summary>
        /// Information about whether the tags will be added to the S3 object after scanning. See `actions` below.
        /// </summary>
        public InputList<Inputs.MalwareProtectionPlanActionArgs> Actions
        {
            get => _actions ?? (_actions = new InputList<Inputs.MalwareProtectionPlanActionArgs>());
            set => _actions = value;
        }

        /// <summary>
        /// Information about the protected resource that is associated with the created Malware Protection plan. Presently, S3Bucket is the only supported protected resource. See `protected_resource` below.
        /// </summary>
        [Input("protectedResource")]
        public Input<Inputs.MalwareProtectionPlanProtectedResourceArgs>? ProtectedResource { get; set; }

        /// <summary>
        /// The IAM role that includes the permissions required to scan and add tags to the associated protected resource.
        /// </summary>
        [Input("role", required: true)]
        public Input<string> Role { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public MalwareProtectionPlanArgs()
        {
        }
        public static new MalwareProtectionPlanArgs Empty => new MalwareProtectionPlanArgs();
    }

    public sealed class MalwareProtectionPlanState : global::Pulumi.ResourceArgs
    {
        [Input("actions")]
        private InputList<Inputs.MalwareProtectionPlanActionGetArgs>? _actions;

        /// <summary>
        /// Information about whether the tags will be added to the S3 object after scanning. See `actions` below.
        /// </summary>
        public InputList<Inputs.MalwareProtectionPlanActionGetArgs> Actions
        {
            get => _actions ?? (_actions = new InputList<Inputs.MalwareProtectionPlanActionGetArgs>());
            set => _actions = value;
        }

        /// <summary>
        /// The ARN of the GuardDuty malware protection plan
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// The timestamp when the Malware Protection plan resource was created.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// Information about the protected resource that is associated with the created Malware Protection plan. Presently, S3Bucket is the only supported protected resource. See `protected_resource` below.
        /// </summary>
        [Input("protectedResource")]
        public Input<Inputs.MalwareProtectionPlanProtectedResourceGetArgs>? ProtectedResource { get; set; }

        /// <summary>
        /// The IAM role that includes the permissions required to scan and add tags to the associated protected resource.
        /// </summary>
        [Input("role")]
        public Input<string>? Role { get; set; }

        /// <summary>
        /// The GuardDuty malware protection plan status. Valid values are `ACTIVE`, `WARNING`, and `ERROR`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        [Obsolete(@"Please use `tags` instead.")]
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        public MalwareProtectionPlanState()
        {
        }
        public static new MalwareProtectionPlanState Empty => new MalwareProtectionPlanState();
    }
}
