// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Odb
{
    public static class GetDbNode
    {
        /// <summary>
        /// Data source for manging db nodes linked to cloud vm cluster of Oracle Database@AWS.
        /// 
        /// You can find out more about Oracle Database@AWS from [User Guide](https://docs.aws.amazon.com/odb/latest/UserGuide/what-is-odb.html).
        /// 
        /// ## Example Usage
        /// 
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Odb.GetDbNode.Invoke(new()
        ///     {
        ///         CloudVmClusterId = "cloud_vm_cluster_id",
        ///         Id = "db_node_id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetDbNodeResult> InvokeAsync(GetDbNodeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDbNodeResult>("aws:odb/getDbNode:getDbNode", args ?? new GetDbNodeArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for manging db nodes linked to cloud vm cluster of Oracle Database@AWS.
        /// 
        /// You can find out more about Oracle Database@AWS from [User Guide](https://docs.aws.amazon.com/odb/latest/UserGuide/what-is-odb.html).
        /// 
        /// ## Example Usage
        /// 
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Odb.GetDbNode.Invoke(new()
        ///     {
        ///         CloudVmClusterId = "cloud_vm_cluster_id",
        ///         Id = "db_node_id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDbNodeResult> Invoke(GetDbNodeInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDbNodeResult>("aws:odb/getDbNode:getDbNode", args ?? new GetDbNodeInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for manging db nodes linked to cloud vm cluster of Oracle Database@AWS.
        /// 
        /// You can find out more about Oracle Database@AWS from [User Guide](https://docs.aws.amazon.com/odb/latest/UserGuide/what-is-odb.html).
        /// 
        /// ## Example Usage
        /// 
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Odb.GetDbNode.Invoke(new()
        ///     {
        ///         CloudVmClusterId = "cloud_vm_cluster_id",
        ///         Id = "db_node_id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDbNodeResult> Invoke(GetDbNodeInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDbNodeResult>("aws:odb/getDbNode:getDbNode", args ?? new GetDbNodeInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDbNodeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique identifier of the cloud vm cluster.
        /// </summary>
        [Input("cloudVmClusterId", required: true)]
        public string CloudVmClusterId { get; set; } = null!;

        /// <summary>
        /// The unique identifier of db node associated with vm cluster.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public string? Region { get; set; }

        public GetDbNodeArgs()
        {
        }
        public static new GetDbNodeArgs Empty => new GetDbNodeArgs();
    }

    public sealed class GetDbNodeInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique identifier of the cloud vm cluster.
        /// </summary>
        [Input("cloudVmClusterId", required: true)]
        public Input<string> CloudVmClusterId { get; set; } = null!;

        /// <summary>
        /// The unique identifier of db node associated with vm cluster.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public GetDbNodeInvokeArgs()
        {
        }
        public static new GetDbNodeInvokeArgs Empty => new GetDbNodeInvokeArgs();
    }


    [OutputType]
    public sealed class GetDbNodeResult
    {
        /// <summary>
        /// Additional information about the planned maintenance.
        /// </summary>
        public readonly string AdditionalDetails;
        public readonly string Arn;
        /// <summary>
        /// The Oracle Cloud ID (OCID) of the backup IP address that's associated with the DB node.
        /// </summary>
        public readonly string BackupIpId;
        /// <summary>
        /// The OCID of the second backup VNIC.
        /// </summary>
        public readonly string BackupVnic2Id;
        /// <summary>
        /// The OCID of the backup VNIC.
        /// </summary>
        public readonly string BackupVnicId;
        /// <summary>
        /// The ID of the cloud VM cluster.
        /// </summary>
        public readonly string CloudVmClusterId;
        /// <summary>
        /// The number of CPU cores enabled on the DB node.
        /// </summary>
        public readonly int CpuCoreCount;
        /// <summary>
        /// The date and time when the DB node was created.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// The unique identifier of the DB server that is associated with the DB node.
        /// </summary>
        public readonly string DbServerId;
        /// <summary>
        /// The amount of local node storage, in gigabytes (GB), allocated on the DB node.
        /// </summary>
        public readonly int DbStorageSizeInGbs;
        /// <summary>
        /// The OCID of the DB system.
        /// </summary>
        public readonly string DbSystemId;
        /// <summary>
        /// The name of the fault domain the instance is contained in.
        /// </summary>
        public readonly string FaultDomain;
        /// <summary>
        /// The floating IP address assigned to the DB node.
        /// </summary>
        public readonly string FloatingIpAddress;
        /// <summary>
        /// The OCID of the host IP address that's associated with the DB node.
        /// </summary>
        public readonly string HostIpId;
        /// <summary>
        /// The host name for the DB node.
        /// </summary>
        public readonly string Hostname;
        public readonly string Id;
        /// <summary>
        /// The type of database node maintenance. Either VMDB_REBOOT_MIGRATION or EXADBXS_REBOOT_MIGRATION.
        /// </summary>
        public readonly string MaintenanceType;
        /// <summary>
        /// The allocated memory in GBs on the DB node.
        /// </summary>
        public readonly int MemorySizeInGbs;
        /// <summary>
        /// The name of the OCI resource anchor for the DB node.
        /// </summary>
        public readonly string OciResourceAnchorName;
        /// <summary>
        /// The OCID of the DB node.
        /// </summary>
        public readonly string Ocid;
        /// <summary>
        /// The private IP address assigned to the DB node.
        /// </summary>
        public readonly string PrivateIpAddress;
        public readonly string Region;
        /// <summary>
        /// The size (in GB) of the block storage volume allocation for the DB system.
        /// </summary>
        public readonly int SoftwareStorageSizeInGbs;
        /// <summary>
        /// The current status of the DB node.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Additional information about the status of the DB node.
        /// </summary>
        public readonly string StatusReason;
        /// <summary>
        /// The end date and time of the maintenance window.
        /// </summary>
        public readonly string TimeMaintenanceWindowEnd;
        /// <summary>
        /// The start date and time of the maintenance window.
        /// </summary>
        public readonly string TimeMaintenanceWindowStart;
        /// <summary>
        /// The total number of CPU cores reserved on the DB node.
        /// </summary>
        public readonly int TotalCpuCoreCount;
        /// <summary>
        /// The OCID of the second VNIC.
        /// </summary>
        public readonly string Vnic2Id;
        /// <summary>
        /// The OCID of the VNIC.
        /// </summary>
        public readonly string VnicId;

        [OutputConstructor]
        private GetDbNodeResult(
            string additionalDetails,

            string arn,

            string backupIpId,

            string backupVnic2Id,

            string backupVnicId,

            string cloudVmClusterId,

            int cpuCoreCount,

            string createdAt,

            string dbServerId,

            int dbStorageSizeInGbs,

            string dbSystemId,

            string faultDomain,

            string floatingIpAddress,

            string hostIpId,

            string hostname,

            string id,

            string maintenanceType,

            int memorySizeInGbs,

            string ociResourceAnchorName,

            string ocid,

            string privateIpAddress,

            string region,

            int softwareStorageSizeInGbs,

            string status,

            string statusReason,

            string timeMaintenanceWindowEnd,

            string timeMaintenanceWindowStart,

            int totalCpuCoreCount,

            string vnic2Id,

            string vnicId)
        {
            AdditionalDetails = additionalDetails;
            Arn = arn;
            BackupIpId = backupIpId;
            BackupVnic2Id = backupVnic2Id;
            BackupVnicId = backupVnicId;
            CloudVmClusterId = cloudVmClusterId;
            CpuCoreCount = cpuCoreCount;
            CreatedAt = createdAt;
            DbServerId = dbServerId;
            DbStorageSizeInGbs = dbStorageSizeInGbs;
            DbSystemId = dbSystemId;
            FaultDomain = faultDomain;
            FloatingIpAddress = floatingIpAddress;
            HostIpId = hostIpId;
            Hostname = hostname;
            Id = id;
            MaintenanceType = maintenanceType;
            MemorySizeInGbs = memorySizeInGbs;
            OciResourceAnchorName = ociResourceAnchorName;
            Ocid = ocid;
            PrivateIpAddress = privateIpAddress;
            Region = region;
            SoftwareStorageSizeInGbs = softwareStorageSizeInGbs;
            Status = status;
            StatusReason = statusReason;
            TimeMaintenanceWindowEnd = timeMaintenanceWindowEnd;
            TimeMaintenanceWindowStart = timeMaintenanceWindowStart;
            TotalCpuCoreCount = totalCpuCoreCount;
            Vnic2Id = vnic2Id;
            VnicId = vnicId;
        }
    }
}
