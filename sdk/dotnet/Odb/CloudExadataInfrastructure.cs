// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Odb
{
    /// <summary>
    /// Resource for managing exadata infrastructure resource in AWS for Oracle Database@AWS.
    /// 
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import Exadata Infrastructure using the `id`. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:odb/cloudExadataInfrastructure:CloudExadataInfrastructure example example
    /// ```
    /// </summary>
    [AwsResourceType("aws:odb/cloudExadataInfrastructure:CloudExadataInfrastructure")]
    public partial class CloudExadataInfrastructure : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The number of storage servers requested for the Exadata infrastructure.
        /// </summary>
        [Output("activatedStorageCount")]
        public Output<int> ActivatedStorageCount { get; private set; } = null!;

        /// <summary>
        /// The number of storage servers requested for the Exadata infrastructure.
        /// </summary>
        [Output("additionalStorageCount")]
        public Output<int> AdditionalStorageCount { get; private set; } = null!;

        /// <summary>
        /// Amazon Resource Name (ARN) of the pipeline.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("availabilityZone")]
        public Output<string> AvailabilityZone { get; private set; } = null!;

        [Output("availabilityZoneId")]
        public Output<string> AvailabilityZoneId { get; private set; } = null!;

        /// <summary>
        /// The amount of available storage, in gigabytes (GB), for the Exadata infrastructure.
        /// </summary>
        [Output("availableStorageSizeInGbs")]
        public Output<int> AvailableStorageSizeInGbs { get; private set; } = null!;

        /// <summary>
        /// The number of compute instances that the Exadata infrastructure is located
        /// </summary>
        [Output("computeCount")]
        public Output<int> ComputeCount { get; private set; } = null!;

        /// <summary>
        /// The OCI model compute model used when you create or clone an instance: ECPU or OCPU.
        /// </summary>
        [Output("computeModel")]
        public Output<string> ComputeModel { get; private set; } = null!;

        /// <summary>
        /// The total number of CPU cores that are allocated to the Exadata infrastructure.
        /// </summary>
        [Output("cpuCount")]
        public Output<int> CpuCount { get; private set; } = null!;

        /// <summary>
        /// The time when the Exadata infrastructure was created.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        [Output("customerContactsToSendToOcis")]
        public Output<ImmutableArray<Outputs.CloudExadataInfrastructureCustomerContactsToSendToOci>> CustomerContactsToSendToOcis { get; private set; } = null!;

        /// <summary>
        /// The size of the Exadata infrastructure's data disk group, in terabytes (TB).
        /// </summary>
        [Output("dataStorageSizeInTbs")]
        public Output<double> DataStorageSizeInTbs { get; private set; } = null!;

        /// <summary>
        /// The database server model type of the Exadata infrastructure. For the list of valid model names, use the ListDbSystemShapes operation
        /// </summary>
        [Output("databaseServerType")]
        public Output<string?> DatabaseServerType { get; private set; } = null!;

        /// <summary>
        /// The size of the Exadata infrastructure's local node storage, in gigabytes (GB).
        /// </summary>
        [Output("dbNodeStorageSizeInGbs")]
        public Output<int> DbNodeStorageSizeInGbs { get; private set; } = null!;

        /// <summary>
        /// The software version of the database servers (dom0) in the Exadata infrastructure.
        /// </summary>
        [Output("dbServerVersion")]
        public Output<string> DbServerVersion { get; private set; } = null!;

        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// The Oracle Cloud Identifier (OCID) of the last maintenance run for the Exadata infrastructure.
        /// </summary>
        [Output("lastMaintenanceRunId")]
        public Output<string> LastMaintenanceRunId { get; private set; } = null!;

        /// <summary>
        /// The scheduling details for the maintenance window. Patching and system updates take place during the maintenance window
        /// </summary>
        [Output("maintenanceWindow")]
        public Output<Outputs.CloudExadataInfrastructureMaintenanceWindow?> MaintenanceWindow { get; private set; } = null!;

        /// <summary>
        /// The total number of CPU cores available on the Exadata infrastructure.
        /// </summary>
        [Output("maxCpuCount")]
        public Output<int> MaxCpuCount { get; private set; } = null!;

        /// <summary>
        /// The total amount of data disk group storage, in terabytes (TB), that's available on the Exadata infrastructure.
        /// </summary>
        [Output("maxDataStorageInTbs")]
        public Output<double> MaxDataStorageInTbs { get; private set; } = null!;

        /// <summary>
        /// The total amount of local node storage, in gigabytes (GB), that's available on the Exadata infrastructure.
        /// </summary>
        [Output("maxDbNodeStorageSizeInGbs")]
        public Output<int> MaxDbNodeStorageSizeInGbs { get; private set; } = null!;

        /// <summary>
        /// The total amount of memory in gigabytes (GB) available on the Exadata infrastructure.
        /// </summary>
        [Output("maxMemoryInGbs")]
        public Output<int> MaxMemoryInGbs { get; private set; } = null!;

        /// <summary>
        /// The amount of memory, in gigabytes (GB), that's allocated on the Exadata infrastructure
        /// </summary>
        [Output("memorySizeInGbs")]
        public Output<int> MemorySizeInGbs { get; private set; } = null!;

        /// <summary>
        /// The monthly software version of the database servers in the Exadata infrastructure.
        /// </summary>
        [Output("monthlyDbServerVersion")]
        public Output<string> MonthlyDbServerVersion { get; private set; } = null!;

        /// <summary>
        /// The monthly software version of the storage servers installed on the Exadata infrastructure.
        /// </summary>
        [Output("monthlyStorageServerVersion")]
        public Output<string> MonthlyStorageServerVersion { get; private set; } = null!;

        /// <summary>
        /// The OCID of the next maintenance run for the Exadata infrastructure.
        /// </summary>
        [Output("nextMaintenanceRunId")]
        public Output<string> NextMaintenanceRunId { get; private set; } = null!;

        /// <summary>
        /// The name of the OCI resource anchor for the Exadata infrastructure.
        /// </summary>
        [Output("ociResourceAnchorName")]
        public Output<string> OciResourceAnchorName { get; private set; } = null!;

        /// <summary>
        /// The HTTPS link to the Exadata infrastructure in OCI
        /// </summary>
        [Output("ociUrl")]
        public Output<string> OciUrl { get; private set; } = null!;

        /// <summary>
        /// The OCID of the Exadata infrastructure.
        /// </summary>
        [Output("ocid")]
        public Output<string> Ocid { get; private set; } = null!;

        /// <summary>
        /// The amount of progress made on the current operation on the Exadata infrastructure, expressed as a percentage.
        /// </summary>
        [Output("percentProgress")]
        public Output<double> PercentProgress { get; private set; } = null!;

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        [Output("shape")]
        public Output<string> Shape { get; private set; } = null!;

        /// <summary>
        /// The current status of the Exadata infrastructure.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Additional information about the status of the Exadata infrastructure.
        /// </summary>
        [Output("statusReason")]
        public Output<string> StatusReason { get; private set; } = null!;

        /// <summary>
        /// TThe number of storage servers that are activated for the Exadata infrastructure
        /// </summary>
        [Output("storageCount")]
        public Output<int> StorageCount { get; private set; } = null!;

        /// <summary>
        /// The storage server model type of the Exadata infrastructure. For the list of valid model names, use the ListDbSystemShapes operation
        /// </summary>
        [Output("storageServerType")]
        public Output<string?> StorageServerType { get; private set; } = null!;

        /// <summary>
        /// The software version of the storage servers on the Exadata infrastructure.
        /// </summary>
        [Output("storageServerVersion")]
        public Output<string> StorageServerVersion { get; private set; } = null!;

        /// <summary>
        /// A map of tags to assign to the exadata infrastructure. If configured with a provider `DefaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("timeouts")]
        public Output<Outputs.CloudExadataInfrastructureTimeouts?> Timeouts { get; private set; } = null!;

        /// <summary>
        /// The total amount of storage, in gigabytes (GB), on the Exadata infrastructure.
        /// </summary>
        [Output("totalStorageSizeInGbs")]
        public Output<int> TotalStorageSizeInGbs { get; private set; } = null!;


        /// <summary>
        /// Create a CloudExadataInfrastructure resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CloudExadataInfrastructure(string name, CloudExadataInfrastructureArgs args, CustomResourceOptions? options = null)
            : base("aws:odb/cloudExadataInfrastructure:CloudExadataInfrastructure", name, args ?? new CloudExadataInfrastructureArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CloudExadataInfrastructure(string name, Input<string> id, CloudExadataInfrastructureState? state = null, CustomResourceOptions? options = null)
            : base("aws:odb/cloudExadataInfrastructure:CloudExadataInfrastructure", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CloudExadataInfrastructure resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CloudExadataInfrastructure Get(string name, Input<string> id, CloudExadataInfrastructureState? state = null, CustomResourceOptions? options = null)
        {
            return new CloudExadataInfrastructure(name, id, state, options);
        }
    }

    public sealed class CloudExadataInfrastructureArgs : global::Pulumi.ResourceArgs
    {
        [Input("availabilityZone")]
        public Input<string>? AvailabilityZone { get; set; }

        [Input("availabilityZoneId", required: true)]
        public Input<string> AvailabilityZoneId { get; set; } = null!;

        /// <summary>
        /// The number of compute instances that the Exadata infrastructure is located
        /// </summary>
        [Input("computeCount")]
        public Input<int>? ComputeCount { get; set; }

        [Input("customerContactsToSendToOcis")]
        private InputList<Inputs.CloudExadataInfrastructureCustomerContactsToSendToOciArgs>? _customerContactsToSendToOcis;
        public InputList<Inputs.CloudExadataInfrastructureCustomerContactsToSendToOciArgs> CustomerContactsToSendToOcis
        {
            get => _customerContactsToSendToOcis ?? (_customerContactsToSendToOcis = new InputList<Inputs.CloudExadataInfrastructureCustomerContactsToSendToOciArgs>());
            set => _customerContactsToSendToOcis = value;
        }

        /// <summary>
        /// The database server model type of the Exadata infrastructure. For the list of valid model names, use the ListDbSystemShapes operation
        /// </summary>
        [Input("databaseServerType")]
        public Input<string>? DatabaseServerType { get; set; }

        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// The scheduling details for the maintenance window. Patching and system updates take place during the maintenance window
        /// </summary>
        [Input("maintenanceWindow")]
        public Input<Inputs.CloudExadataInfrastructureMaintenanceWindowArgs>? MaintenanceWindow { get; set; }

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("shape", required: true)]
        public Input<string> Shape { get; set; } = null!;

        /// <summary>
        /// TThe number of storage servers that are activated for the Exadata infrastructure
        /// </summary>
        [Input("storageCount")]
        public Input<int>? StorageCount { get; set; }

        /// <summary>
        /// The storage server model type of the Exadata infrastructure. For the list of valid model names, use the ListDbSystemShapes operation
        /// </summary>
        [Input("storageServerType")]
        public Input<string>? StorageServerType { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the exadata infrastructure. If configured with a provider `DefaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("timeouts")]
        public Input<Inputs.CloudExadataInfrastructureTimeoutsArgs>? Timeouts { get; set; }

        public CloudExadataInfrastructureArgs()
        {
        }
        public static new CloudExadataInfrastructureArgs Empty => new CloudExadataInfrastructureArgs();
    }

    public sealed class CloudExadataInfrastructureState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The number of storage servers requested for the Exadata infrastructure.
        /// </summary>
        [Input("activatedStorageCount")]
        public Input<int>? ActivatedStorageCount { get; set; }

        /// <summary>
        /// The number of storage servers requested for the Exadata infrastructure.
        /// </summary>
        [Input("additionalStorageCount")]
        public Input<int>? AdditionalStorageCount { get; set; }

        /// <summary>
        /// Amazon Resource Name (ARN) of the pipeline.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("availabilityZone")]
        public Input<string>? AvailabilityZone { get; set; }

        [Input("availabilityZoneId")]
        public Input<string>? AvailabilityZoneId { get; set; }

        /// <summary>
        /// The amount of available storage, in gigabytes (GB), for the Exadata infrastructure.
        /// </summary>
        [Input("availableStorageSizeInGbs")]
        public Input<int>? AvailableStorageSizeInGbs { get; set; }

        /// <summary>
        /// The number of compute instances that the Exadata infrastructure is located
        /// </summary>
        [Input("computeCount")]
        public Input<int>? ComputeCount { get; set; }

        /// <summary>
        /// The OCI model compute model used when you create or clone an instance: ECPU or OCPU.
        /// </summary>
        [Input("computeModel")]
        public Input<string>? ComputeModel { get; set; }

        /// <summary>
        /// The total number of CPU cores that are allocated to the Exadata infrastructure.
        /// </summary>
        [Input("cpuCount")]
        public Input<int>? CpuCount { get; set; }

        /// <summary>
        /// The time when the Exadata infrastructure was created.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        [Input("customerContactsToSendToOcis")]
        private InputList<Inputs.CloudExadataInfrastructureCustomerContactsToSendToOciGetArgs>? _customerContactsToSendToOcis;
        public InputList<Inputs.CloudExadataInfrastructureCustomerContactsToSendToOciGetArgs> CustomerContactsToSendToOcis
        {
            get => _customerContactsToSendToOcis ?? (_customerContactsToSendToOcis = new InputList<Inputs.CloudExadataInfrastructureCustomerContactsToSendToOciGetArgs>());
            set => _customerContactsToSendToOcis = value;
        }

        /// <summary>
        /// The size of the Exadata infrastructure's data disk group, in terabytes (TB).
        /// </summary>
        [Input("dataStorageSizeInTbs")]
        public Input<double>? DataStorageSizeInTbs { get; set; }

        /// <summary>
        /// The database server model type of the Exadata infrastructure. For the list of valid model names, use the ListDbSystemShapes operation
        /// </summary>
        [Input("databaseServerType")]
        public Input<string>? DatabaseServerType { get; set; }

        /// <summary>
        /// The size of the Exadata infrastructure's local node storage, in gigabytes (GB).
        /// </summary>
        [Input("dbNodeStorageSizeInGbs")]
        public Input<int>? DbNodeStorageSizeInGbs { get; set; }

        /// <summary>
        /// The software version of the database servers (dom0) in the Exadata infrastructure.
        /// </summary>
        [Input("dbServerVersion")]
        public Input<string>? DbServerVersion { get; set; }

        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The Oracle Cloud Identifier (OCID) of the last maintenance run for the Exadata infrastructure.
        /// </summary>
        [Input("lastMaintenanceRunId")]
        public Input<string>? LastMaintenanceRunId { get; set; }

        /// <summary>
        /// The scheduling details for the maintenance window. Patching and system updates take place during the maintenance window
        /// </summary>
        [Input("maintenanceWindow")]
        public Input<Inputs.CloudExadataInfrastructureMaintenanceWindowGetArgs>? MaintenanceWindow { get; set; }

        /// <summary>
        /// The total number of CPU cores available on the Exadata infrastructure.
        /// </summary>
        [Input("maxCpuCount")]
        public Input<int>? MaxCpuCount { get; set; }

        /// <summary>
        /// The total amount of data disk group storage, in terabytes (TB), that's available on the Exadata infrastructure.
        /// </summary>
        [Input("maxDataStorageInTbs")]
        public Input<double>? MaxDataStorageInTbs { get; set; }

        /// <summary>
        /// The total amount of local node storage, in gigabytes (GB), that's available on the Exadata infrastructure.
        /// </summary>
        [Input("maxDbNodeStorageSizeInGbs")]
        public Input<int>? MaxDbNodeStorageSizeInGbs { get; set; }

        /// <summary>
        /// The total amount of memory in gigabytes (GB) available on the Exadata infrastructure.
        /// </summary>
        [Input("maxMemoryInGbs")]
        public Input<int>? MaxMemoryInGbs { get; set; }

        /// <summary>
        /// The amount of memory, in gigabytes (GB), that's allocated on the Exadata infrastructure
        /// </summary>
        [Input("memorySizeInGbs")]
        public Input<int>? MemorySizeInGbs { get; set; }

        /// <summary>
        /// The monthly software version of the database servers in the Exadata infrastructure.
        /// </summary>
        [Input("monthlyDbServerVersion")]
        public Input<string>? MonthlyDbServerVersion { get; set; }

        /// <summary>
        /// The monthly software version of the storage servers installed on the Exadata infrastructure.
        /// </summary>
        [Input("monthlyStorageServerVersion")]
        public Input<string>? MonthlyStorageServerVersion { get; set; }

        /// <summary>
        /// The OCID of the next maintenance run for the Exadata infrastructure.
        /// </summary>
        [Input("nextMaintenanceRunId")]
        public Input<string>? NextMaintenanceRunId { get; set; }

        /// <summary>
        /// The name of the OCI resource anchor for the Exadata infrastructure.
        /// </summary>
        [Input("ociResourceAnchorName")]
        public Input<string>? OciResourceAnchorName { get; set; }

        /// <summary>
        /// The HTTPS link to the Exadata infrastructure in OCI
        /// </summary>
        [Input("ociUrl")]
        public Input<string>? OciUrl { get; set; }

        /// <summary>
        /// The OCID of the Exadata infrastructure.
        /// </summary>
        [Input("ocid")]
        public Input<string>? Ocid { get; set; }

        /// <summary>
        /// The amount of progress made on the current operation on the Exadata infrastructure, expressed as a percentage.
        /// </summary>
        [Input("percentProgress")]
        public Input<double>? PercentProgress { get; set; }

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("shape")]
        public Input<string>? Shape { get; set; }

        /// <summary>
        /// The current status of the Exadata infrastructure.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Additional information about the status of the Exadata infrastructure.
        /// </summary>
        [Input("statusReason")]
        public Input<string>? StatusReason { get; set; }

        /// <summary>
        /// TThe number of storage servers that are activated for the Exadata infrastructure
        /// </summary>
        [Input("storageCount")]
        public Input<int>? StorageCount { get; set; }

        /// <summary>
        /// The storage server model type of the Exadata infrastructure. For the list of valid model names, use the ListDbSystemShapes operation
        /// </summary>
        [Input("storageServerType")]
        public Input<string>? StorageServerType { get; set; }

        /// <summary>
        /// The software version of the storage servers on the Exadata infrastructure.
        /// </summary>
        [Input("storageServerVersion")]
        public Input<string>? StorageServerVersion { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the exadata infrastructure. If configured with a provider `DefaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("timeouts")]
        public Input<Inputs.CloudExadataInfrastructureTimeoutsGetArgs>? Timeouts { get; set; }

        /// <summary>
        /// The total amount of storage, in gigabytes (GB), on the Exadata infrastructure.
        /// </summary>
        [Input("totalStorageSizeInGbs")]
        public Input<int>? TotalStorageSizeInGbs { get; set; }

        public CloudExadataInfrastructureState()
        {
        }
        public static new CloudExadataInfrastructureState Empty => new CloudExadataInfrastructureState();
    }
}
