// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Odb
{
    public static class GetDbServer
    {
        /// <summary>
        /// Data source for manging db server linked to exadata infrastructure of Oracle Database@AWS.
        /// 
        /// You can find out more about Oracle Database@AWS from [User Guide](https://docs.aws.amazon.com/odb/latest/UserGuide/what-is-odb.html).
        /// 
        /// ## Example Usage
        /// 
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Odb.GetDbServer.Invoke(new()
        ///     {
        ///         CloudExadataInfrastructureId = "exadata_infra_id",
        ///         Id = "db_server_id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetDbServerResult> InvokeAsync(GetDbServerArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDbServerResult>("aws:odb/getDbServer:getDbServer", args ?? new GetDbServerArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for manging db server linked to exadata infrastructure of Oracle Database@AWS.
        /// 
        /// You can find out more about Oracle Database@AWS from [User Guide](https://docs.aws.amazon.com/odb/latest/UserGuide/what-is-odb.html).
        /// 
        /// ## Example Usage
        /// 
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Odb.GetDbServer.Invoke(new()
        ///     {
        ///         CloudExadataInfrastructureId = "exadata_infra_id",
        ///         Id = "db_server_id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDbServerResult> Invoke(GetDbServerInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDbServerResult>("aws:odb/getDbServer:getDbServer", args ?? new GetDbServerInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for manging db server linked to exadata infrastructure of Oracle Database@AWS.
        /// 
        /// You can find out more about Oracle Database@AWS from [User Guide](https://docs.aws.amazon.com/odb/latest/UserGuide/what-is-odb.html).
        /// 
        /// ## Example Usage
        /// 
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Odb.GetDbServer.Invoke(new()
        ///     {
        ///         CloudExadataInfrastructureId = "exadata_infra_id",
        ///         Id = "db_server_id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDbServerResult> Invoke(GetDbServerInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDbServerResult>("aws:odb/getDbServer:getDbServer", args ?? new GetDbServerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDbServerArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique identifier of the cloud vm cluster.
        /// </summary>
        [Input("cloudExadataInfrastructureId", required: true)]
        public string CloudExadataInfrastructureId { get; set; } = null!;

        /// <summary>
        /// The unique identifier of db node associated with vm cluster.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public string? Region { get; set; }

        public GetDbServerArgs()
        {
        }
        public static new GetDbServerArgs Empty => new GetDbServerArgs();
    }

    public sealed class GetDbServerInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique identifier of the cloud vm cluster.
        /// </summary>
        [Input("cloudExadataInfrastructureId", required: true)]
        public Input<string> CloudExadataInfrastructureId { get; set; } = null!;

        /// <summary>
        /// The unique identifier of db node associated with vm cluster.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public GetDbServerInvokeArgs()
        {
        }
        public static new GetDbServerInvokeArgs Empty => new GetDbServerInvokeArgs();
    }


    [OutputType]
    public sealed class GetDbServerResult
    {
        /// <summary>
        /// The list of unique identifiers for the Autonomous VMs associated with this database server.
        /// </summary>
        public readonly ImmutableArray<string> AutonomousVirtualMachineIds;
        /// <summary>
        /// The OCID of the autonomous VM clusters that are associated with the database server.
        /// </summary>
        public readonly ImmutableArray<string> AutonomousVmClusterIds;
        public readonly string CloudExadataInfrastructureId;
        /// <summary>
        /// The compute model of the database server.
        /// </summary>
        public readonly string ComputeModel;
        /// <summary>
        /// The number of CPU cores enabled on the database server.
        /// </summary>
        public readonly int CpuCoreCount;
        /// <summary>
        /// The date and time when the database server was created.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// The allocated local node storage in GBs on the database server.
        /// </summary>
        public readonly int DbNodeStorageSizeInGbs;
        /// <summary>
        /// The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDbServerDbServerPatchingDetailResult> DbServerPatchingDetails;
        /// <summary>
        /// The display name of the database server.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The exadata infrastructure ID of the database server.
        /// </summary>
        public readonly string ExadataInfrastructureId;
        public readonly string Id;
        /// <summary>
        /// The total number of CPU cores available.
        /// </summary>
        public readonly int MaxCpuCount;
        /// <summary>
        /// The total local node storage available in GBs.
        /// </summary>
        public readonly int MaxDbNodeStorageInGbs;
        /// <summary>
        /// The total memory available in GBs.
        /// </summary>
        public readonly int MaxMemoryInGbs;
        /// <summary>
        /// The allocated memory in GBs on the database server.
        /// </summary>
        public readonly int MemorySizeInGbs;
        /// <summary>
        /// The name of the OCI resource anchor.
        /// </summary>
        public readonly string OciResourceAnchorName;
        /// <summary>
        /// The OCID of the database server to retrieve information about.
        /// </summary>
        public readonly string Ocid;
        public readonly string Region;
        /// <summary>
        /// The shape of the database server. The shape determines the amount of CPU, storage, and memory resources available.
        /// </summary>
        public readonly string Shape;
        /// <summary>
        /// The status of the database server.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Additional information about the current status of the database server.
        /// </summary>
        public readonly string StatusReason;
        /// <summary>
        /// The OCID of the VM clusters that are associated with the database server.
        /// </summary>
        public readonly ImmutableArray<string> VmClusterIds;

        [OutputConstructor]
        private GetDbServerResult(
            ImmutableArray<string> autonomousVirtualMachineIds,

            ImmutableArray<string> autonomousVmClusterIds,

            string cloudExadataInfrastructureId,

            string computeModel,

            int cpuCoreCount,

            string createdAt,

            int dbNodeStorageSizeInGbs,

            ImmutableArray<Outputs.GetDbServerDbServerPatchingDetailResult> dbServerPatchingDetails,

            string displayName,

            string exadataInfrastructureId,

            string id,

            int maxCpuCount,

            int maxDbNodeStorageInGbs,

            int maxMemoryInGbs,

            int memorySizeInGbs,

            string ociResourceAnchorName,

            string ocid,

            string region,

            string shape,

            string status,

            string statusReason,

            ImmutableArray<string> vmClusterIds)
        {
            AutonomousVirtualMachineIds = autonomousVirtualMachineIds;
            AutonomousVmClusterIds = autonomousVmClusterIds;
            CloudExadataInfrastructureId = cloudExadataInfrastructureId;
            ComputeModel = computeModel;
            CpuCoreCount = cpuCoreCount;
            CreatedAt = createdAt;
            DbNodeStorageSizeInGbs = dbNodeStorageSizeInGbs;
            DbServerPatchingDetails = dbServerPatchingDetails;
            DisplayName = displayName;
            ExadataInfrastructureId = exadataInfrastructureId;
            Id = id;
            MaxCpuCount = maxCpuCount;
            MaxDbNodeStorageInGbs = maxDbNodeStorageInGbs;
            MaxMemoryInGbs = maxMemoryInGbs;
            MemorySizeInGbs = memorySizeInGbs;
            OciResourceAnchorName = ociResourceAnchorName;
            Ocid = ocid;
            Region = region;
            Shape = shape;
            Status = status;
            StatusReason = statusReason;
            VmClusterIds = vmClusterIds;
        }
    }
}
