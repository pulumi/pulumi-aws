// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Odb
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var withMinimumParameter = new Aws.Odb.CloudVmCluster("with_minimum_parameter", new()
    ///     {
    ///         DisplayName = "my-exa-infra",
    ///         CloudExadataInfrastructureId = "exa_gjrmtxl4qk",
    ///         CpuCoreCount = 6,
    ///         GiVersion = "23.0.0.0",
    ///         HostnamePrefix = "apollo12",
    ///         SshPublicKeys = new[]
    ///         {
    ///             "public-ssh-key",
    ///         },
    ///         OdbNetworkId = "odbnet_3l9st3litg",
    ///         IsLocalBackupEnabled = true,
    ///         IsSparseDiskgroupEnabled = true,
    ///         LicenseModel = "LICENSE_INCLUDED",
    ///         DataStorageSizeInTbs = 20,
    ///         DbServers = new[]
    ///         {
    ///             "db-server-1",
    ///             "db-server-2",
    ///         },
    ///         DbNodeStorageSizeInGbs = 120,
    ///         MemorySizeInGbs = 60,
    ///         DataCollectionOptions = new Aws.Odb.Inputs.CloudVmClusterDataCollectionOptionsArgs
    ///         {
    ///             IsDiagnosticsEventsEnabled = false,
    ///             IsHealthMonitoringEnabled = false,
    ///             IsIncidentLogsEnabled = false,
    ///         },
    ///     });
    /// 
    ///     var withAllParameters = new Aws.Odb.CloudVmCluster("with_all_parameters", new()
    ///     {
    ///         DisplayName = "my-vmc",
    ///         CloudExadataInfrastructureId = "exa_gjrmtxl4qk",
    ///         CpuCoreCount = 6,
    ///         GiVersion = "23.0.0.0",
    ///         HostnamePrefix = "apollo12",
    ///         SshPublicKeys = new[]
    ///         {
    ///             "my-ssh-key",
    ///         },
    ///         OdbNetworkId = "odbnet_3l9st3litg",
    ///         IsLocalBackupEnabled = true,
    ///         IsSparseDiskgroupEnabled = true,
    ///         LicenseModel = "LICENSE_INCLUDED",
    ///         DataStorageSizeInTbs = 20,
    ///         DbServers = new[]
    ///         {
    ///             "my-dbserver-1",
    ///             "my-db-server-2",
    ///         },
    ///         DbNodeStorageSizeInGbs = 120,
    ///         MemorySizeInGbs = 60,
    ///         ClusterName = "julia-13",
    ///         Timezone = "UTC",
    ///         ScanListenerPortTcp = 1521,
    ///         Tags = 
    ///         {
    ///             { "env", "dev" },
    ///         },
    ///         DataCollectionOptions = new Aws.Odb.Inputs.CloudVmClusterDataCollectionOptionsArgs
    ///         {
    ///             IsDiagnosticsEventsEnabled = true,
    ///             IsHealthMonitoringEnabled = true,
    ///             IsIncidentLogsEnabled = true,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import cloud vm cluster using the `id`. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:odb/cloudVmCluster:CloudVmCluster example example
    /// ```
    /// </summary>
    [AwsResourceType("aws:odb/cloudVmCluster:CloudVmCluster")]
    public partial class CloudVmCluster : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) for the cloud vm cluster.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// The unique identifier of the Exadata infrastructure for this VM cluster. Changing this will create a new resource.
        /// </summary>
        [Output("cloudExadataInfrastructureId")]
        public Output<string> CloudExadataInfrastructureId { get; private set; } = null!;

        /// <summary>
        /// The name of the Grid Infrastructure (GI) cluster. Changing this will create a new resource.
        /// </summary>
        [Output("clusterName")]
        public Output<string> ClusterName { get; private set; } = null!;

        /// <summary>
        /// The compute model used when the instance is created or cloned â€” either ECPU or OCPU. ECPU is a virtualized compute unit; OCPU is a physical processor core with hyper-threading.
        /// </summary>
        [Output("computeModel")]
        public Output<string> ComputeModel { get; private set; } = null!;

        /// <summary>
        /// The number of CPU cores to enable on the VM cluster. Changing this will create a new resource.
        /// </summary>
        [Output("cpuCoreCount")]
        public Output<int> CpuCoreCount { get; private set; } = null!;

        /// <summary>
        /// The timestamp when the VM cluster was created.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The set of preferences for the various diagnostic collection options for the VM cluster.
        /// </summary>
        [Output("dataCollectionOptions")]
        public Output<Outputs.CloudVmClusterDataCollectionOptions?> DataCollectionOptions { get; private set; } = null!;

        /// <summary>
        /// The size of the data disk group, in terabytes (TBs), to allocate for the VM cluster. Changing this will create a new resource.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Output("dataStorageSizeInTbs")]
        public Output<double> DataStorageSizeInTbs { get; private set; } = null!;

        /// <summary>
        /// The amount of local node storage, in gigabytes (GBs), to allocate for the VM cluster. Changing this will create a new resource.
        /// </summary>
        [Output("dbNodeStorageSizeInGbs")]
        public Output<int> DbNodeStorageSizeInGbs { get; private set; } = null!;

        /// <summary>
        /// The list of database servers for the VM cluster. Changing this will create a new resource.
        /// </summary>
        [Output("dbServers")]
        public Output<ImmutableArray<string>> DbServers { get; private set; } = null!;

        /// <summary>
        /// The type of redundancy for the VM cluster: NORMAL (2-way) or HIGH (3-way).
        /// * `AttrDomain` - The domain name associated with the VM cluster.
        /// </summary>
        [Output("diskRedundancy")]
        public Output<string> DiskRedundancy { get; private set; } = null!;

        /// <summary>
        /// A user-friendly name for the VM cluster. Changing this will create a new resource.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// The domain name associated with the VM cluster.
        /// </summary>
        [Output("domain")]
        public Output<string> Domain { get; private set; } = null!;

        /// <summary>
        /// A valid software version of Oracle Grid Infrastructure (GI). To get the list of valid values, use the ListGiVersions operation and specify the shape of the Exadata infrastructure. Example: 19.0.0.0 Changing this will create a new resource.
        /// </summary>
        [Output("giVersion")]
        public Output<string> GiVersion { get; private set; } = null!;

        /// <summary>
        /// A complete software version of Oracle Grid Infrastructure (GI).
        /// </summary>
        [Output("giVersionComputed")]
        public Output<string> GiVersionComputed { get; private set; } = null!;

        /// <summary>
        /// The host name prefix for the VM cluster. Constraints: - Can't be "localhost" or "hostname". - Can't contain "-version". - The maximum length of the combined hostname and domain is 63 characters. - The hostname must be unique within the subnet. Changing this will create a new resource.
        /// </summary>
        [Output("hostnamePrefix")]
        public Output<string> HostnamePrefix { get; private set; } = null!;

        /// <summary>
        /// The host name for the VM cluster. Constraints: - Can't be "localhost" or "hostname". - Can't contain "-version". - The maximum length of the combined hostname and domain is 63 characters. - The hostname must be unique within the subnet. This member is required. Changing this will create a new resource.
        /// </summary>
        [Output("hostnamePrefixComputed")]
        public Output<string> HostnamePrefixComputed { get; private set; } = null!;

        /// <summary>
        /// The Exadata IORM (I/O Resource Manager) configuration cache details for the VM cluster.
        /// </summary>
        [Output("iormConfigCaches")]
        public Output<ImmutableArray<Outputs.CloudVmClusterIormConfigCach>> IormConfigCaches { get; private set; } = null!;

        /// <summary>
        /// Specifies whether to enable database backups to local Exadata storage for the VM cluster. Changing this will create a new resource.
        /// </summary>
        [Output("isLocalBackupEnabled")]
        public Output<bool> IsLocalBackupEnabled { get; private set; } = null!;

        /// <summary>
        /// Specifies whether to create a sparse disk group for the VM cluster. Changing this will create a new resource.
        /// </summary>
        [Output("isSparseDiskgroupEnabled")]
        public Output<bool> IsSparseDiskgroupEnabled { get; private set; } = null!;

        /// <summary>
        /// The OCID of the most recent maintenance update history entry.
        /// </summary>
        [Output("lastUpdateHistoryEntryId")]
        public Output<string> LastUpdateHistoryEntryId { get; private set; } = null!;

        /// <summary>
        /// The Oracle license model to apply to the VM cluster. Default: LICENSE_INCLUDED. Changing this will create a new resource.
        /// </summary>
        [Output("licenseModel")]
        public Output<string> LicenseModel { get; private set; } = null!;

        /// <summary>
        /// The listener port number configured on the VM cluster.
        /// </summary>
        [Output("listenerPort")]
        public Output<int> ListenerPort { get; private set; } = null!;

        /// <summary>
        /// The amount of memory, in gigabytes (GBs), to allocate for the VM cluster. Changing this will create a new resource.
        /// </summary>
        [Output("memorySizeInGbs")]
        public Output<int> MemorySizeInGbs { get; private set; } = null!;

        /// <summary>
        /// The total number of nodes in the VM cluster.
        /// </summary>
        [Output("nodeCount")]
        public Output<int> NodeCount { get; private set; } = null!;

        /// <summary>
        /// The name of the OCI resource anchor associated with the VM cluster.
        /// </summary>
        [Output("ociResourceAnchorName")]
        public Output<string> OciResourceAnchorName { get; private set; } = null!;

        /// <summary>
        /// The HTTPS link to the VM cluster resource in OCI.
        /// </summary>
        [Output("ociUrl")]
        public Output<string> OciUrl { get; private set; } = null!;

        /// <summary>
        /// The OCID (Oracle Cloud Identifier) of the VM cluster.
        /// </summary>
        [Output("ocid")]
        public Output<string> Ocid { get; private set; } = null!;

        /// <summary>
        /// The unique identifier of the ODB network for the VM cluster. Changing this will create a new resource.
        /// </summary>
        [Output("odbNetworkId")]
        public Output<string> OdbNetworkId { get; private set; } = null!;

        /// <summary>
        /// The percentage of progress made on the current operation for the VM cluster.
        /// </summary>
        [Output("percentProgress")]
        public Output<double> PercentProgress { get; private set; } = null!;

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// The fully qualified domain name (FQDN) for the SCAN IP addresses associated with the VM cluster.
        /// </summary>
        [Output("scanDnsName")]
        public Output<string> ScanDnsName { get; private set; } = null!;

        /// <summary>
        /// The OCID of the DNS record for the SCAN IPs linked to the VM cluster.
        /// </summary>
        [Output("scanDnsRecordId")]
        public Output<string> ScanDnsRecordId { get; private set; } = null!;

        /// <summary>
        /// The list of OCIDs for SCAN IP addresses associated with the VM cluster.
        /// </summary>
        [Output("scanIpIds")]
        public Output<ImmutableArray<string>> ScanIpIds { get; private set; } = null!;

        /// <summary>
        /// The port number for TCP connections to the single client access name (SCAN) listener. Valid values: 1024â€“8999, except 2484, 6100, 6200, 7060, 7070, 7085, and 7879. Default: 1521. Changing this will create a new resource.
        /// </summary>
        [Output("scanListenerPortTcp")]
        public Output<int> ScanListenerPortTcp { get; private set; } = null!;

        /// <summary>
        /// The hardware model name of the Exadata infrastructure running the VM cluster.
        /// </summary>
        [Output("shape")]
        public Output<string> Shape { get; private set; } = null!;

        /// <summary>
        /// The public key portion of one or more key pairs used for SSH access to the VM cluster. Changing this will create a new resource.
        /// </summary>
        [Output("sshPublicKeys")]
        public Output<ImmutableArray<string>> SshPublicKeys { get; private set; } = null!;

        /// <summary>
        /// The current lifecycle status of the VM cluster.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Additional information regarding the current status of the VM cluster.
        /// </summary>
        [Output("statusReason")]
        public Output<string> StatusReason { get; private set; } = null!;

        /// <summary>
        /// The local node storage allocated to the VM cluster, in gigabytes (GB).
        /// </summary>
        [Output("storageSizeInGbs")]
        public Output<int> StorageSizeInGbs { get; private set; } = null!;

        /// <summary>
        /// The operating system version of the image chosen for the VM cluster.
        /// </summary>
        [Output("systemVersion")]
        public Output<string> SystemVersion { get; private set; } = null!;

        /// <summary>
        /// A map of tags to assign to the exadata infrastructure. If configured with a provider `DefaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The combined set of user-defined and provider-defined tags.
        /// </summary>
        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("timeouts")]
        public Output<Outputs.CloudVmClusterTimeouts?> Timeouts { get; private set; } = null!;

        /// <summary>
        /// The configured time zone of the VM cluster. Changing this will create a new resource.
        /// </summary>
        [Output("timezone")]
        public Output<string> Timezone { get; private set; } = null!;

        /// <summary>
        /// The virtual IP (VIP) addresses assigned to the VM cluster. CRS assigns one VIP per node for failover support.
        /// </summary>
        [Output("vipIds")]
        public Output<ImmutableArray<string>> VipIds { get; private set; } = null!;


        /// <summary>
        /// Create a CloudVmCluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CloudVmCluster(string name, CloudVmClusterArgs args, CustomResourceOptions? options = null)
            : base("aws:odb/cloudVmCluster:CloudVmCluster", name, args ?? new CloudVmClusterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CloudVmCluster(string name, Input<string> id, CloudVmClusterState? state = null, CustomResourceOptions? options = null)
            : base("aws:odb/cloudVmCluster:CloudVmCluster", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CloudVmCluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CloudVmCluster Get(string name, Input<string> id, CloudVmClusterState? state = null, CustomResourceOptions? options = null)
        {
            return new CloudVmCluster(name, id, state, options);
        }
    }

    public sealed class CloudVmClusterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The unique identifier of the Exadata infrastructure for this VM cluster. Changing this will create a new resource.
        /// </summary>
        [Input("cloudExadataInfrastructureId", required: true)]
        public Input<string> CloudExadataInfrastructureId { get; set; } = null!;

        /// <summary>
        /// The name of the Grid Infrastructure (GI) cluster. Changing this will create a new resource.
        /// </summary>
        [Input("clusterName")]
        public Input<string>? ClusterName { get; set; }

        /// <summary>
        /// The number of CPU cores to enable on the VM cluster. Changing this will create a new resource.
        /// </summary>
        [Input("cpuCoreCount", required: true)]
        public Input<int> CpuCoreCount { get; set; } = null!;

        /// <summary>
        /// The set of preferences for the various diagnostic collection options for the VM cluster.
        /// </summary>
        [Input("dataCollectionOptions")]
        public Input<Inputs.CloudVmClusterDataCollectionOptionsArgs>? DataCollectionOptions { get; set; }

        /// <summary>
        /// The size of the data disk group, in terabytes (TBs), to allocate for the VM cluster. Changing this will create a new resource.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("dataStorageSizeInTbs", required: true)]
        public Input<double> DataStorageSizeInTbs { get; set; } = null!;

        /// <summary>
        /// The amount of local node storage, in gigabytes (GBs), to allocate for the VM cluster. Changing this will create a new resource.
        /// </summary>
        [Input("dbNodeStorageSizeInGbs")]
        public Input<int>? DbNodeStorageSizeInGbs { get; set; }

        [Input("dbServers", required: true)]
        private InputList<string>? _dbServers;

        /// <summary>
        /// The list of database servers for the VM cluster. Changing this will create a new resource.
        /// </summary>
        public InputList<string> DbServers
        {
            get => _dbServers ?? (_dbServers = new InputList<string>());
            set => _dbServers = value;
        }

        /// <summary>
        /// A user-friendly name for the VM cluster. Changing this will create a new resource.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// A valid software version of Oracle Grid Infrastructure (GI). To get the list of valid values, use the ListGiVersions operation and specify the shape of the Exadata infrastructure. Example: 19.0.0.0 Changing this will create a new resource.
        /// </summary>
        [Input("giVersion", required: true)]
        public Input<string> GiVersion { get; set; } = null!;

        /// <summary>
        /// The host name prefix for the VM cluster. Constraints: - Can't be "localhost" or "hostname". - Can't contain "-version". - The maximum length of the combined hostname and domain is 63 characters. - The hostname must be unique within the subnet. Changing this will create a new resource.
        /// </summary>
        [Input("hostnamePrefix", required: true)]
        public Input<string> HostnamePrefix { get; set; } = null!;

        /// <summary>
        /// Specifies whether to enable database backups to local Exadata storage for the VM cluster. Changing this will create a new resource.
        /// </summary>
        [Input("isLocalBackupEnabled")]
        public Input<bool>? IsLocalBackupEnabled { get; set; }

        /// <summary>
        /// Specifies whether to create a sparse disk group for the VM cluster. Changing this will create a new resource.
        /// </summary>
        [Input("isSparseDiskgroupEnabled")]
        public Input<bool>? IsSparseDiskgroupEnabled { get; set; }

        /// <summary>
        /// The Oracle license model to apply to the VM cluster. Default: LICENSE_INCLUDED. Changing this will create a new resource.
        /// </summary>
        [Input("licenseModel")]
        public Input<string>? LicenseModel { get; set; }

        /// <summary>
        /// The amount of memory, in gigabytes (GBs), to allocate for the VM cluster. Changing this will create a new resource.
        /// </summary>
        [Input("memorySizeInGbs")]
        public Input<int>? MemorySizeInGbs { get; set; }

        /// <summary>
        /// The unique identifier of the ODB network for the VM cluster. Changing this will create a new resource.
        /// </summary>
        [Input("odbNetworkId", required: true)]
        public Input<string> OdbNetworkId { get; set; } = null!;

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The port number for TCP connections to the single client access name (SCAN) listener. Valid values: 1024â€“8999, except 2484, 6100, 6200, 7060, 7070, 7085, and 7879. Default: 1521. Changing this will create a new resource.
        /// </summary>
        [Input("scanListenerPortTcp")]
        public Input<int>? ScanListenerPortTcp { get; set; }

        [Input("sshPublicKeys", required: true)]
        private InputList<string>? _sshPublicKeys;

        /// <summary>
        /// The public key portion of one or more key pairs used for SSH access to the VM cluster. Changing this will create a new resource.
        /// </summary>
        public InputList<string> SshPublicKeys
        {
            get => _sshPublicKeys ?? (_sshPublicKeys = new InputList<string>());
            set => _sshPublicKeys = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the exadata infrastructure. If configured with a provider `DefaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("timeouts")]
        public Input<Inputs.CloudVmClusterTimeoutsArgs>? Timeouts { get; set; }

        /// <summary>
        /// The configured time zone of the VM cluster. Changing this will create a new resource.
        /// </summary>
        [Input("timezone")]
        public Input<string>? Timezone { get; set; }

        public CloudVmClusterArgs()
        {
        }
        public static new CloudVmClusterArgs Empty => new CloudVmClusterArgs();
    }

    public sealed class CloudVmClusterState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) for the cloud vm cluster.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// The unique identifier of the Exadata infrastructure for this VM cluster. Changing this will create a new resource.
        /// </summary>
        [Input("cloudExadataInfrastructureId")]
        public Input<string>? CloudExadataInfrastructureId { get; set; }

        /// <summary>
        /// The name of the Grid Infrastructure (GI) cluster. Changing this will create a new resource.
        /// </summary>
        [Input("clusterName")]
        public Input<string>? ClusterName { get; set; }

        /// <summary>
        /// The compute model used when the instance is created or cloned â€” either ECPU or OCPU. ECPU is a virtualized compute unit; OCPU is a physical processor core with hyper-threading.
        /// </summary>
        [Input("computeModel")]
        public Input<string>? ComputeModel { get; set; }

        /// <summary>
        /// The number of CPU cores to enable on the VM cluster. Changing this will create a new resource.
        /// </summary>
        [Input("cpuCoreCount")]
        public Input<int>? CpuCoreCount { get; set; }

        /// <summary>
        /// The timestamp when the VM cluster was created.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// The set of preferences for the various diagnostic collection options for the VM cluster.
        /// </summary>
        [Input("dataCollectionOptions")]
        public Input<Inputs.CloudVmClusterDataCollectionOptionsGetArgs>? DataCollectionOptions { get; set; }

        /// <summary>
        /// The size of the data disk group, in terabytes (TBs), to allocate for the VM cluster. Changing this will create a new resource.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("dataStorageSizeInTbs")]
        public Input<double>? DataStorageSizeInTbs { get; set; }

        /// <summary>
        /// The amount of local node storage, in gigabytes (GBs), to allocate for the VM cluster. Changing this will create a new resource.
        /// </summary>
        [Input("dbNodeStorageSizeInGbs")]
        public Input<int>? DbNodeStorageSizeInGbs { get; set; }

        [Input("dbServers")]
        private InputList<string>? _dbServers;

        /// <summary>
        /// The list of database servers for the VM cluster. Changing this will create a new resource.
        /// </summary>
        public InputList<string> DbServers
        {
            get => _dbServers ?? (_dbServers = new InputList<string>());
            set => _dbServers = value;
        }

        /// <summary>
        /// The type of redundancy for the VM cluster: NORMAL (2-way) or HIGH (3-way).
        /// * `AttrDomain` - The domain name associated with the VM cluster.
        /// </summary>
        [Input("diskRedundancy")]
        public Input<string>? DiskRedundancy { get; set; }

        /// <summary>
        /// A user-friendly name for the VM cluster. Changing this will create a new resource.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The domain name associated with the VM cluster.
        /// </summary>
        [Input("domain")]
        public Input<string>? Domain { get; set; }

        /// <summary>
        /// A valid software version of Oracle Grid Infrastructure (GI). To get the list of valid values, use the ListGiVersions operation and specify the shape of the Exadata infrastructure. Example: 19.0.0.0 Changing this will create a new resource.
        /// </summary>
        [Input("giVersion")]
        public Input<string>? GiVersion { get; set; }

        /// <summary>
        /// A complete software version of Oracle Grid Infrastructure (GI).
        /// </summary>
        [Input("giVersionComputed")]
        public Input<string>? GiVersionComputed { get; set; }

        /// <summary>
        /// The host name prefix for the VM cluster. Constraints: - Can't be "localhost" or "hostname". - Can't contain "-version". - The maximum length of the combined hostname and domain is 63 characters. - The hostname must be unique within the subnet. Changing this will create a new resource.
        /// </summary>
        [Input("hostnamePrefix")]
        public Input<string>? HostnamePrefix { get; set; }

        /// <summary>
        /// The host name for the VM cluster. Constraints: - Can't be "localhost" or "hostname". - Can't contain "-version". - The maximum length of the combined hostname and domain is 63 characters. - The hostname must be unique within the subnet. This member is required. Changing this will create a new resource.
        /// </summary>
        [Input("hostnamePrefixComputed")]
        public Input<string>? HostnamePrefixComputed { get; set; }

        [Input("iormConfigCaches")]
        private InputList<Inputs.CloudVmClusterIormConfigCachGetArgs>? _iormConfigCaches;

        /// <summary>
        /// The Exadata IORM (I/O Resource Manager) configuration cache details for the VM cluster.
        /// </summary>
        public InputList<Inputs.CloudVmClusterIormConfigCachGetArgs> IormConfigCaches
        {
            get => _iormConfigCaches ?? (_iormConfigCaches = new InputList<Inputs.CloudVmClusterIormConfigCachGetArgs>());
            set => _iormConfigCaches = value;
        }

        /// <summary>
        /// Specifies whether to enable database backups to local Exadata storage for the VM cluster. Changing this will create a new resource.
        /// </summary>
        [Input("isLocalBackupEnabled")]
        public Input<bool>? IsLocalBackupEnabled { get; set; }

        /// <summary>
        /// Specifies whether to create a sparse disk group for the VM cluster. Changing this will create a new resource.
        /// </summary>
        [Input("isSparseDiskgroupEnabled")]
        public Input<bool>? IsSparseDiskgroupEnabled { get; set; }

        /// <summary>
        /// The OCID of the most recent maintenance update history entry.
        /// </summary>
        [Input("lastUpdateHistoryEntryId")]
        public Input<string>? LastUpdateHistoryEntryId { get; set; }

        /// <summary>
        /// The Oracle license model to apply to the VM cluster. Default: LICENSE_INCLUDED. Changing this will create a new resource.
        /// </summary>
        [Input("licenseModel")]
        public Input<string>? LicenseModel { get; set; }

        /// <summary>
        /// The listener port number configured on the VM cluster.
        /// </summary>
        [Input("listenerPort")]
        public Input<int>? ListenerPort { get; set; }

        /// <summary>
        /// The amount of memory, in gigabytes (GBs), to allocate for the VM cluster. Changing this will create a new resource.
        /// </summary>
        [Input("memorySizeInGbs")]
        public Input<int>? MemorySizeInGbs { get; set; }

        /// <summary>
        /// The total number of nodes in the VM cluster.
        /// </summary>
        [Input("nodeCount")]
        public Input<int>? NodeCount { get; set; }

        /// <summary>
        /// The name of the OCI resource anchor associated with the VM cluster.
        /// </summary>
        [Input("ociResourceAnchorName")]
        public Input<string>? OciResourceAnchorName { get; set; }

        /// <summary>
        /// The HTTPS link to the VM cluster resource in OCI.
        /// </summary>
        [Input("ociUrl")]
        public Input<string>? OciUrl { get; set; }

        /// <summary>
        /// The OCID (Oracle Cloud Identifier) of the VM cluster.
        /// </summary>
        [Input("ocid")]
        public Input<string>? Ocid { get; set; }

        /// <summary>
        /// The unique identifier of the ODB network for the VM cluster. Changing this will create a new resource.
        /// </summary>
        [Input("odbNetworkId")]
        public Input<string>? OdbNetworkId { get; set; }

        /// <summary>
        /// The percentage of progress made on the current operation for the VM cluster.
        /// </summary>
        [Input("percentProgress")]
        public Input<double>? PercentProgress { get; set; }

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The fully qualified domain name (FQDN) for the SCAN IP addresses associated with the VM cluster.
        /// </summary>
        [Input("scanDnsName")]
        public Input<string>? ScanDnsName { get; set; }

        /// <summary>
        /// The OCID of the DNS record for the SCAN IPs linked to the VM cluster.
        /// </summary>
        [Input("scanDnsRecordId")]
        public Input<string>? ScanDnsRecordId { get; set; }

        [Input("scanIpIds")]
        private InputList<string>? _scanIpIds;

        /// <summary>
        /// The list of OCIDs for SCAN IP addresses associated with the VM cluster.
        /// </summary>
        public InputList<string> ScanIpIds
        {
            get => _scanIpIds ?? (_scanIpIds = new InputList<string>());
            set => _scanIpIds = value;
        }

        /// <summary>
        /// The port number for TCP connections to the single client access name (SCAN) listener. Valid values: 1024â€“8999, except 2484, 6100, 6200, 7060, 7070, 7085, and 7879. Default: 1521. Changing this will create a new resource.
        /// </summary>
        [Input("scanListenerPortTcp")]
        public Input<int>? ScanListenerPortTcp { get; set; }

        /// <summary>
        /// The hardware model name of the Exadata infrastructure running the VM cluster.
        /// </summary>
        [Input("shape")]
        public Input<string>? Shape { get; set; }

        [Input("sshPublicKeys")]
        private InputList<string>? _sshPublicKeys;

        /// <summary>
        /// The public key portion of one or more key pairs used for SSH access to the VM cluster. Changing this will create a new resource.
        /// </summary>
        public InputList<string> SshPublicKeys
        {
            get => _sshPublicKeys ?? (_sshPublicKeys = new InputList<string>());
            set => _sshPublicKeys = value;
        }

        /// <summary>
        /// The current lifecycle status of the VM cluster.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Additional information regarding the current status of the VM cluster.
        /// </summary>
        [Input("statusReason")]
        public Input<string>? StatusReason { get; set; }

        /// <summary>
        /// The local node storage allocated to the VM cluster, in gigabytes (GB).
        /// </summary>
        [Input("storageSizeInGbs")]
        public Input<int>? StorageSizeInGbs { get; set; }

        /// <summary>
        /// The operating system version of the image chosen for the VM cluster.
        /// </summary>
        [Input("systemVersion")]
        public Input<string>? SystemVersion { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the exadata infrastructure. If configured with a provider `DefaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;

        /// <summary>
        /// The combined set of user-defined and provider-defined tags.
        /// </summary>
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("timeouts")]
        public Input<Inputs.CloudVmClusterTimeoutsGetArgs>? Timeouts { get; set; }

        /// <summary>
        /// The configured time zone of the VM cluster. Changing this will create a new resource.
        /// </summary>
        [Input("timezone")]
        public Input<string>? Timezone { get; set; }

        [Input("vipIds")]
        private InputList<string>? _vipIds;

        /// <summary>
        /// The virtual IP (VIP) addresses assigned to the VM cluster. CRS assigns one VIP per node for failover support.
        /// </summary>
        public InputList<string> VipIds
        {
            get => _vipIds ?? (_vipIds = new InputList<string>());
            set => _vipIds = value;
        }

        public CloudVmClusterState()
        {
        }
        public static new CloudVmClusterState Empty => new CloudVmClusterState();
    }
}
