// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Odb
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Odb.NetworkPeeringConnection("example", new()
    ///     {
    ///         DisplayName = "example",
    ///         OdbNetworkId = "my-odb-network-id",
    ///         PeerNetworkId = "my-vpc-id",
    ///         Tags = 
    ///         {
    ///             { "env", "dev" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import odb network peering using the `id`. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:odb/networkPeeringConnection:NetworkPeeringConnection example example
    /// ```
    /// </summary>
    [AwsResourceType("aws:odb/networkPeeringConnection:NetworkPeeringConnection")]
    public partial class NetworkPeeringConnection : global::Pulumi.CustomResource
    {
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// Created time of the ODB network peering connection.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// ARN of the ODB network peering connection.
        /// </summary>
        [Output("odbNetworkArn")]
        public Output<string> OdbNetworkArn { get; private set; } = null!;

        [Output("odbNetworkId")]
        public Output<string> OdbNetworkId { get; private set; } = null!;

        /// <summary>
        /// Type of the ODB peering connection.
        /// </summary>
        [Output("odbPeeringConnectionType")]
        public Output<string> OdbPeeringConnectionType { get; private set; } = null!;

        /// <summary>
        /// ARN of the peer network peering connection.
        /// </summary>
        [Output("peerNetworkArn")]
        public Output<string> PeerNetworkArn { get; private set; } = null!;

        [Output("peerNetworkId")]
        public Output<string> PeerNetworkId { get; private set; } = null!;

        /// <summary>
        /// Progress of the ODB network peering connection.
        /// </summary>
        [Output("percentProgress")]
        public Output<double> PercentProgress { get; private set; } = null!;

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// Status of the ODB network peering connection.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The reason for the current status of the ODB peering connection.
        /// </summary>
        [Output("statusReason")]
        public Output<string> StatusReason { get; private set; } = null!;

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `DefaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// A map of tags assigned to the resource, including inherited tags.
        /// </summary>
        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("timeouts")]
        public Output<Outputs.NetworkPeeringConnectionTimeouts?> Timeouts { get; private set; } = null!;


        /// <summary>
        /// Create a NetworkPeeringConnection resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NetworkPeeringConnection(string name, NetworkPeeringConnectionArgs args, CustomResourceOptions? options = null)
            : base("aws:odb/networkPeeringConnection:NetworkPeeringConnection", name, args ?? new NetworkPeeringConnectionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NetworkPeeringConnection(string name, Input<string> id, NetworkPeeringConnectionState? state = null, CustomResourceOptions? options = null)
            : base("aws:odb/networkPeeringConnection:NetworkPeeringConnection", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NetworkPeeringConnection resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NetworkPeeringConnection Get(string name, Input<string> id, NetworkPeeringConnectionState? state = null, CustomResourceOptions? options = null)
        {
            return new NetworkPeeringConnection(name, id, state, options);
        }
    }

    public sealed class NetworkPeeringConnectionArgs : global::Pulumi.ResourceArgs
    {
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        [Input("odbNetworkId", required: true)]
        public Input<string> OdbNetworkId { get; set; } = null!;

        [Input("peerNetworkId", required: true)]
        public Input<string> PeerNetworkId { get; set; } = null!;

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `DefaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("timeouts")]
        public Input<Inputs.NetworkPeeringConnectionTimeoutsArgs>? Timeouts { get; set; }

        public NetworkPeeringConnectionArgs()
        {
        }
        public static new NetworkPeeringConnectionArgs Empty => new NetworkPeeringConnectionArgs();
    }

    public sealed class NetworkPeeringConnectionState : global::Pulumi.ResourceArgs
    {
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// Created time of the ODB network peering connection.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// ARN of the ODB network peering connection.
        /// </summary>
        [Input("odbNetworkArn")]
        public Input<string>? OdbNetworkArn { get; set; }

        [Input("odbNetworkId")]
        public Input<string>? OdbNetworkId { get; set; }

        /// <summary>
        /// Type of the ODB peering connection.
        /// </summary>
        [Input("odbPeeringConnectionType")]
        public Input<string>? OdbPeeringConnectionType { get; set; }

        /// <summary>
        /// ARN of the peer network peering connection.
        /// </summary>
        [Input("peerNetworkArn")]
        public Input<string>? PeerNetworkArn { get; set; }

        [Input("peerNetworkId")]
        public Input<string>? PeerNetworkId { get; set; }

        /// <summary>
        /// Progress of the ODB network peering connection.
        /// </summary>
        [Input("percentProgress")]
        public Input<double>? PercentProgress { get; set; }

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Status of the ODB network peering connection.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The reason for the current status of the ODB peering connection.
        /// </summary>
        [Input("statusReason")]
        public Input<string>? StatusReason { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `DefaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;

        /// <summary>
        /// A map of tags assigned to the resource, including inherited tags.
        /// </summary>
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("timeouts")]
        public Input<Inputs.NetworkPeeringConnectionTimeoutsGetArgs>? Timeouts { get; set; }

        public NetworkPeeringConnectionState()
        {
        }
        public static new NetworkPeeringConnectionState Empty => new NetworkPeeringConnectionState();
    }
}
