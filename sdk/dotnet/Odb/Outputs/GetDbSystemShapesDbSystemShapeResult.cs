// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Odb.Outputs
{

    [OutputType]
    public sealed class GetDbSystemShapesDbSystemShapeResult
    {
        public readonly int AvailableCoreCount;
        public readonly int AvailableCoreCountPerNode;
        public readonly int AvailableDataStorageInTbs;
        public readonly int AvailableDataStoragePerServerInTbs;
        public readonly int AvailableDbNodePerNodeInGbs;
        public readonly int AvailableDbNodeStorageInGbs;
        public readonly int AvailableMemoryInGbs;
        public readonly int AvailableMemoryPerNodeInGbs;
        public readonly int CoreCountIncrement;
        public readonly int MaxStorageCount;
        public readonly int MaximumNodeCount;
        public readonly int MinCoreCountPerNode;
        public readonly int MinDataStorageInTbs;
        public readonly int MinDbNodeStoragePerNodeInGbs;
        public readonly int MinMemoryPerNodeInGbs;
        public readonly int MinStorageCount;
        public readonly int MinimumCoreCount;
        public readonly int MinimumNodeCount;
        public readonly string Name;
        public readonly int RuntimeMinimumCoreCount;
        public readonly string ShapeFamily;
        public readonly string ShapeType;

        [OutputConstructor]
        private GetDbSystemShapesDbSystemShapeResult(
            int availableCoreCount,

            int availableCoreCountPerNode,

            int availableDataStorageInTbs,

            int availableDataStoragePerServerInTbs,

            int availableDbNodePerNodeInGbs,

            int availableDbNodeStorageInGbs,

            int availableMemoryInGbs,

            int availableMemoryPerNodeInGbs,

            int coreCountIncrement,

            int maxStorageCount,

            int maximumNodeCount,

            int minCoreCountPerNode,

            int minDataStorageInTbs,

            int minDbNodeStoragePerNodeInGbs,

            int minMemoryPerNodeInGbs,

            int minStorageCount,

            int minimumCoreCount,

            int minimumNodeCount,

            string name,

            int runtimeMinimumCoreCount,

            string shapeFamily,

            string shapeType)
        {
            AvailableCoreCount = availableCoreCount;
            AvailableCoreCountPerNode = availableCoreCountPerNode;
            AvailableDataStorageInTbs = availableDataStorageInTbs;
            AvailableDataStoragePerServerInTbs = availableDataStoragePerServerInTbs;
            AvailableDbNodePerNodeInGbs = availableDbNodePerNodeInGbs;
            AvailableDbNodeStorageInGbs = availableDbNodeStorageInGbs;
            AvailableMemoryInGbs = availableMemoryInGbs;
            AvailableMemoryPerNodeInGbs = availableMemoryPerNodeInGbs;
            CoreCountIncrement = coreCountIncrement;
            MaxStorageCount = maxStorageCount;
            MaximumNodeCount = maximumNodeCount;
            MinCoreCountPerNode = minCoreCountPerNode;
            MinDataStorageInTbs = minDataStorageInTbs;
            MinDbNodeStoragePerNodeInGbs = minDbNodeStoragePerNodeInGbs;
            MinMemoryPerNodeInGbs = minMemoryPerNodeInGbs;
            MinStorageCount = minStorageCount;
            MinimumCoreCount = minimumCoreCount;
            MinimumNodeCount = minimumNodeCount;
            Name = name;
            RuntimeMinimumCoreCount = runtimeMinimumCoreCount;
            ShapeFamily = shapeFamily;
            ShapeType = shapeType;
        }
    }
}
