// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Odb
{
    public static class GetCloudExadataInfrastructure
    {
        /// <summary>
        /// Data source for exadata infrastructure resource in AWS for Oracle Database@AWS.
        /// 
        /// You can find out more about Oracle Database@AWS from [User Guide](https://docs.aws.amazon.com/odb/latest/UserGuide/what-is-odb.html).
        /// 
        /// ## Example Usage
        /// 
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Odb.GetCloudExadataInfrastructure.Invoke(new()
        ///     {
        ///         Id = "example",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetCloudExadataInfrastructureResult> InvokeAsync(GetCloudExadataInfrastructureArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCloudExadataInfrastructureResult>("aws:odb/getCloudExadataInfrastructure:getCloudExadataInfrastructure", args ?? new GetCloudExadataInfrastructureArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for exadata infrastructure resource in AWS for Oracle Database@AWS.
        /// 
        /// You can find out more about Oracle Database@AWS from [User Guide](https://docs.aws.amazon.com/odb/latest/UserGuide/what-is-odb.html).
        /// 
        /// ## Example Usage
        /// 
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Odb.GetCloudExadataInfrastructure.Invoke(new()
        ///     {
        ///         Id = "example",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCloudExadataInfrastructureResult> Invoke(GetCloudExadataInfrastructureInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCloudExadataInfrastructureResult>("aws:odb/getCloudExadataInfrastructure:getCloudExadataInfrastructure", args ?? new GetCloudExadataInfrastructureInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for exadata infrastructure resource in AWS for Oracle Database@AWS.
        /// 
        /// You can find out more about Oracle Database@AWS from [User Guide](https://docs.aws.amazon.com/odb/latest/UserGuide/what-is-odb.html).
        /// 
        /// ## Example Usage
        /// 
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Odb.GetCloudExadataInfrastructure.Invoke(new()
        ///     {
        ///         Id = "example",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCloudExadataInfrastructureResult> Invoke(GetCloudExadataInfrastructureInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCloudExadataInfrastructureResult>("aws:odb/getCloudExadataInfrastructure:getCloudExadataInfrastructure", args ?? new GetCloudExadataInfrastructureInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCloudExadataInfrastructureArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique identifier of the Exadata infrastructure.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public string? Region { get; set; }

        public GetCloudExadataInfrastructureArgs()
        {
        }
        public static new GetCloudExadataInfrastructureArgs Empty => new GetCloudExadataInfrastructureArgs();
    }

    public sealed class GetCloudExadataInfrastructureInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique identifier of the Exadata infrastructure.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public GetCloudExadataInfrastructureInvokeArgs()
        {
        }
        public static new GetCloudExadataInfrastructureInvokeArgs Empty => new GetCloudExadataInfrastructureInvokeArgs();
    }


    [OutputType]
    public sealed class GetCloudExadataInfrastructureResult
    {
        /// <summary>
        /// The number of storage servers requested for the Exadata infrastructure.
        /// </summary>
        public readonly int ActivatedStorageCount;
        /// <summary>
        /// The number of storage servers requested for the Exadata infrastructure.
        /// </summary>
        public readonly int AdditionalStorageCount;
        /// <summary>
        /// The Amazon Resource Name (ARN) for the Exadata infrastructure.
        /// </summary>
        public readonly string Arn;
        /// <summary>
        /// The name of the Availability Zone (AZ) where the Exadata infrastructure is located.
        /// </summary>
        public readonly string AvailabilityZone;
        /// <summary>
        /// The AZ ID of the AZ where the Exadata infrastructure is located.
        /// </summary>
        public readonly string AvailabilityZoneId;
        public readonly int AvailableStorageSizeInGbs;
        /// <summary>
        /// The number of database servers for the Exadata infrastructure.
        /// </summary>
        public readonly int ComputeCount;
        /// <summary>
        /// The OCI compute model used when you create or clone an instance: ECPU or OCPU. An ECPU is an abstracted measure of compute resources. ECPUs are based on the number of cores elastically allocated from a pool of compute and storage servers. An OCPU is a legacy physical measure of compute resources. OCPUs are based on the physical core of a processor with hyper-threading enabled.
        /// </summary>
        public readonly string ComputeModel;
        /// <summary>
        /// The total number of CPU cores that are allocated to the Exadata infrastructure.
        /// </summary>
        public readonly int CpuCount;
        /// <summary>
        /// The time when the Exadata infrastructure was created.
        /// </summary>
        public readonly string CreatedAt;
        public readonly ImmutableArray<Outputs.GetCloudExadataInfrastructureCustomerContactsToSendToOciResult> CustomerContactsToSendToOcis;
        /// <summary>
        /// The size of the Exadata infrastructure's data disk group, in terabytes (TB).
        /// </summary>
        public readonly double DataStorageSizeInTbs;
        /// <summary>
        /// The database server model type of the Exadata infrastructure. For the list of valid model names, use the ListDbSystemShapes operation.
        /// </summary>
        public readonly string DatabaseServerType;
        /// <summary>
        /// The size of the storage available on each database node, in gigabytes (GB).
        /// </summary>
        public readonly int DbNodeStorageSizeInGbs;
        /// <summary>
        /// The version of the Exadata infrastructure.
        /// </summary>
        public readonly string DbServerVersion;
        /// <summary>
        /// The display name of the Exadata infrastructure.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The unique identifier of the Exadata infrastructure.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The Oracle Cloud Identifier (OCID) of the last maintenance run for the Exadata infrastructure.
        /// </summary>
        public readonly string LastMaintenanceRunId;
        /// <summary>
        /// The scheduling details of the maintenance window. Patching and system updates take place during the maintenance window.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCloudExadataInfrastructureMaintenanceWindowResult> MaintenanceWindows;
        /// <summary>
        /// The total number of CPU cores available on the Exadata infrastructure.
        /// </summary>
        public readonly int MaxCpuCount;
        /// <summary>
        /// The total amount of data disk group storage, in terabytes (TB), that's available on the Exadata infrastructure.
        /// </summary>
        public readonly double MaxDataStorageInTbs;
        /// <summary>
        /// The total amount of local node storage, in gigabytes (GB), that's available on the Exadata infrastructure.
        /// </summary>
        public readonly int MaxDbNodeStorageSizeInGbs;
        /// <summary>
        /// The total amount of memory, in gigabytes (GB), that's available on the Exadata infrastructure.
        /// </summary>
        public readonly int MaxMemoryInGbs;
        /// <summary>
        /// The amount of memory, in gigabytes (GB), that's allocated on the Exadata infrastructure.
        /// </summary>
        public readonly int MemorySizeInGbs;
        /// <summary>
        /// The monthly software version of the database servers installed on the Exadata infrastructure.
        /// </summary>
        public readonly string MonthlyDbServerVersion;
        /// <summary>
        /// The monthly software version of the storage servers installed on the Exadata infrastructure.
        /// </summary>
        public readonly string MonthlyStorageServerVersion;
        /// <summary>
        /// The OCID of the next maintenance run for the Exadata infrastructure.
        /// </summary>
        public readonly string NextMaintenanceRunId;
        /// <summary>
        /// The name of the OCI resource anchor for the Exadata infrastructure.
        /// </summary>
        public readonly string OciResourceAnchorName;
        /// <summary>
        /// The HTTPS link to the Exadata infrastructure in OCI.
        /// </summary>
        public readonly string OciUrl;
        /// <summary>
        /// The OCID of the Exadata infrastructure in OCI.
        /// </summary>
        public readonly string Ocid;
        /// <summary>
        /// The amount of progress made on the current operation on the Exadata infrastructure expressed as a percentage.
        /// </summary>
        public readonly double PercentProgress;
        public readonly string Region;
        /// <summary>
        /// The model name of the Exadata infrastructure.
        /// </summary>
        public readonly string Shape;
        /// <summary>
        /// The status of the Exadata infrastructure.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Additional information about the status of the Exadata infrastructure.
        /// </summary>
        public readonly string StatusReason;
        /// <summary>
        /// The number of storage servers that are activated for the Exadata infrastructure.
        /// </summary>
        public readonly int StorageCount;
        /// <summary>
        /// The storage server model type of the Exadata infrastructure. For the list of valid model names, use the ListDbSystemShapes operation.
        /// </summary>
        public readonly string StorageServerType;
        /// <summary>
        /// The software version of the storage servers on the Exadata infrastructure.
        /// </summary>
        public readonly string StorageServerVersion;
        /// <summary>
        /// (Optional) A map of tags to assign to the exadata infrastructure. If configured with a provider `DefaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// The total amount of storage, in gigabytes (GB), on the Exadata infrastructure.
        /// </summary>
        public readonly int TotalStorageSizeInGbs;

        [OutputConstructor]
        private GetCloudExadataInfrastructureResult(
            int activatedStorageCount,

            int additionalStorageCount,

            string arn,

            string availabilityZone,

            string availabilityZoneId,

            int availableStorageSizeInGbs,

            int computeCount,

            string computeModel,

            int cpuCount,

            string createdAt,

            ImmutableArray<Outputs.GetCloudExadataInfrastructureCustomerContactsToSendToOciResult> customerContactsToSendToOcis,

            double dataStorageSizeInTbs,

            string databaseServerType,

            int dbNodeStorageSizeInGbs,

            string dbServerVersion,

            string displayName,

            string id,

            string lastMaintenanceRunId,

            ImmutableArray<Outputs.GetCloudExadataInfrastructureMaintenanceWindowResult> maintenanceWindows,

            int maxCpuCount,

            double maxDataStorageInTbs,

            int maxDbNodeStorageSizeInGbs,

            int maxMemoryInGbs,

            int memorySizeInGbs,

            string monthlyDbServerVersion,

            string monthlyStorageServerVersion,

            string nextMaintenanceRunId,

            string ociResourceAnchorName,

            string ociUrl,

            string ocid,

            double percentProgress,

            string region,

            string shape,

            string status,

            string statusReason,

            int storageCount,

            string storageServerType,

            string storageServerVersion,

            ImmutableDictionary<string, string> tags,

            int totalStorageSizeInGbs)
        {
            ActivatedStorageCount = activatedStorageCount;
            AdditionalStorageCount = additionalStorageCount;
            Arn = arn;
            AvailabilityZone = availabilityZone;
            AvailabilityZoneId = availabilityZoneId;
            AvailableStorageSizeInGbs = availableStorageSizeInGbs;
            ComputeCount = computeCount;
            ComputeModel = computeModel;
            CpuCount = cpuCount;
            CreatedAt = createdAt;
            CustomerContactsToSendToOcis = customerContactsToSendToOcis;
            DataStorageSizeInTbs = dataStorageSizeInTbs;
            DatabaseServerType = databaseServerType;
            DbNodeStorageSizeInGbs = dbNodeStorageSizeInGbs;
            DbServerVersion = dbServerVersion;
            DisplayName = displayName;
            Id = id;
            LastMaintenanceRunId = lastMaintenanceRunId;
            MaintenanceWindows = maintenanceWindows;
            MaxCpuCount = maxCpuCount;
            MaxDataStorageInTbs = maxDataStorageInTbs;
            MaxDbNodeStorageSizeInGbs = maxDbNodeStorageSizeInGbs;
            MaxMemoryInGbs = maxMemoryInGbs;
            MemorySizeInGbs = memorySizeInGbs;
            MonthlyDbServerVersion = monthlyDbServerVersion;
            MonthlyStorageServerVersion = monthlyStorageServerVersion;
            NextMaintenanceRunId = nextMaintenanceRunId;
            OciResourceAnchorName = ociResourceAnchorName;
            OciUrl = ociUrl;
            Ocid = ocid;
            PercentProgress = percentProgress;
            Region = region;
            Shape = shape;
            Status = status;
            StatusReason = statusReason;
            StorageCount = storageCount;
            StorageServerType = storageServerType;
            StorageServerVersion = storageServerVersion;
            Tags = tags;
            TotalStorageSizeInGbs = totalStorageSizeInGbs;
        }
    }
}
