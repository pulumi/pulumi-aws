// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Odb
{
    public static class GetNetworkPeeringConnection
    {
        /// <summary>
        /// Data source for managing oracle database network peering resource in AWS.
        /// 
        /// You can find out more about Oracle Database@AWS from [User Guide](https://docs.aws.amazon.com/odb/latest/UserGuide/what-is-odb.html).
        /// 
        /// ## Example Usage
        /// 
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Odb.GetNetworkPeeringConnection.Invoke(new()
        ///     {
        ///         Id = "example",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNetworkPeeringConnectionResult> InvokeAsync(GetNetworkPeeringConnectionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNetworkPeeringConnectionResult>("aws:odb/getNetworkPeeringConnection:getNetworkPeeringConnection", args ?? new GetNetworkPeeringConnectionArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for managing oracle database network peering resource in AWS.
        /// 
        /// You can find out more about Oracle Database@AWS from [User Guide](https://docs.aws.amazon.com/odb/latest/UserGuide/what-is-odb.html).
        /// 
        /// ## Example Usage
        /// 
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Odb.GetNetworkPeeringConnection.Invoke(new()
        ///     {
        ///         Id = "example",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNetworkPeeringConnectionResult> Invoke(GetNetworkPeeringConnectionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetworkPeeringConnectionResult>("aws:odb/getNetworkPeeringConnection:getNetworkPeeringConnection", args ?? new GetNetworkPeeringConnectionInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for managing oracle database network peering resource in AWS.
        /// 
        /// You can find out more about Oracle Database@AWS from [User Guide](https://docs.aws.amazon.com/odb/latest/UserGuide/what-is-odb.html).
        /// 
        /// ## Example Usage
        /// 
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Odb.GetNetworkPeeringConnection.Invoke(new()
        ///     {
        ///         Id = "example",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNetworkPeeringConnectionResult> Invoke(GetNetworkPeeringConnectionInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetworkPeeringConnectionResult>("aws:odb/getNetworkPeeringConnection:getNetworkPeeringConnection", args ?? new GetNetworkPeeringConnectionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNetworkPeeringConnectionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique identifier of the Exadata infrastructure.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public string? Region { get; set; }

        public GetNetworkPeeringConnectionArgs()
        {
        }
        public static new GetNetworkPeeringConnectionArgs Empty => new GetNetworkPeeringConnectionArgs();
    }

    public sealed class GetNetworkPeeringConnectionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique identifier of the Exadata infrastructure.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public GetNetworkPeeringConnectionInvokeArgs()
        {
        }
        public static new GetNetworkPeeringConnectionInvokeArgs Empty => new GetNetworkPeeringConnectionInvokeArgs();
    }


    [OutputType]
    public sealed class GetNetworkPeeringConnectionResult
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) for the Exadata infrastructure.
        /// </summary>
        public readonly string Arn;
        /// <summary>
        /// Created time of the ODB network peering connection.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// Display name of the ODB network peering connection.
        /// </summary>
        public readonly string DisplayName;
        public readonly string Id;
        /// <summary>
        /// ARN of the ODB network peering connection.
        /// </summary>
        public readonly string OdbNetworkArn;
        /// <summary>
        /// Type of the ODB peering connection.
        /// </summary>
        public readonly string OdbPeeringConnectionType;
        /// <summary>
        /// ARN of the peer network peering connection.
        /// </summary>
        public readonly string PeerNetworkArn;
        /// <summary>
        /// Progress of the ODB network peering connection.
        /// </summary>
        public readonly double PercentProgress;
        public readonly string Region;
        /// <summary>
        /// Status of the ODB network peering connection.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Status of the ODB network peering connection.
        /// </summary>
        public readonly string StatusReason;
        /// <summary>
        /// Tags applied to the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;

        [OutputConstructor]
        private GetNetworkPeeringConnectionResult(
            string arn,

            string createdAt,

            string displayName,

            string id,

            string odbNetworkArn,

            string odbPeeringConnectionType,

            string peerNetworkArn,

            double percentProgress,

            string region,

            string status,

            string statusReason,

            ImmutableDictionary<string, string> tags)
        {
            Arn = arn;
            CreatedAt = createdAt;
            DisplayName = displayName;
            Id = id;
            OdbNetworkArn = odbNetworkArn;
            OdbPeeringConnectionType = odbPeeringConnectionType;
            PeerNetworkArn = peerNetworkArn;
            PercentProgress = percentProgress;
            Region = region;
            Status = status;
            StatusReason = statusReason;
            Tags = tags;
        }
    }
}
