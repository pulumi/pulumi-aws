// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.AppIntegrations
{
    /// <summary>
    /// Provides an Amazon AppIntegrations Data Integration resource.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.AppIntegrations.DataIntegration("example", new()
    ///     {
    ///         Description = "example",
    ///         KmsKey = aws_kms_key.Test.Arn,
    ///         SourceUri = "Salesforce://AppFlow/example",
    ///         ScheduleConfig = new Aws.AppIntegrations.Inputs.DataIntegrationScheduleConfigArgs
    ///         {
    ///             FirstExecutionFrom = "1439788442681",
    ///             Object = "Account",
    ///             ScheduleExpression = "rate(1 hour)",
    ///         },
    ///         Tags = 
    ///         {
    ///             { "Key1", "Value1" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Amazon AppIntegrations Data Integrations can be imported using the `id` e.g.,
    /// 
    /// ```sh
    ///  $ pulumi import aws:appintegrations/dataIntegration:DataIntegration example 12345678-1234-1234-1234-123456789123
    /// ```
    /// </summary>
    [AwsResourceType("aws:appintegrations/dataIntegration:DataIntegration")]
    public partial class DataIntegration : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the Data Integration.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// Specifies the description of the Data Integration.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Specifies the KMS key Amazon Resource Name (ARN) for the Data Integration.
        /// </summary>
        [Output("kmsKey")]
        public Output<string> KmsKey { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the Data Integration.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// A block that defines the name of the data and how often it should be pulled from the source. The Schedule Config block is documented below.
        /// </summary>
        [Output("scheduleConfig")]
        public Output<Outputs.DataIntegrationScheduleConfig> ScheduleConfig { get; private set; } = null!;

        /// <summary>
        /// Specifies the URI of the data source. Create an AppFlow Connector Profile and reference the name of the profile in the URL. An example of this value for Salesforce is `Salesforce://AppFlow/example` where `example` is the name of the AppFlow Connector Profile.
        /// </summary>
        [Output("sourceUri")]
        public Output<string> SourceUri { get; private set; } = null!;

        /// <summary>
        /// Tags to apply to the Data Integration. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;


        /// <summary>
        /// Create a DataIntegration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DataIntegration(string name, DataIntegrationArgs args, CustomResourceOptions? options = null)
            : base("aws:appintegrations/dataIntegration:DataIntegration", name, args ?? new DataIntegrationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DataIntegration(string name, Input<string> id, DataIntegrationState? state = null, CustomResourceOptions? options = null)
            : base("aws:appintegrations/dataIntegration:DataIntegration", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DataIntegration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DataIntegration Get(string name, Input<string> id, DataIntegrationState? state = null, CustomResourceOptions? options = null)
        {
            return new DataIntegration(name, id, state, options);
        }
    }

    public sealed class DataIntegrationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the description of the Data Integration.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Specifies the KMS key Amazon Resource Name (ARN) for the Data Integration.
        /// </summary>
        [Input("kmsKey", required: true)]
        public Input<string> KmsKey { get; set; } = null!;

        /// <summary>
        /// Specifies the name of the Data Integration.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A block that defines the name of the data and how often it should be pulled from the source. The Schedule Config block is documented below.
        /// </summary>
        [Input("scheduleConfig", required: true)]
        public Input<Inputs.DataIntegrationScheduleConfigArgs> ScheduleConfig { get; set; } = null!;

        /// <summary>
        /// Specifies the URI of the data source. Create an AppFlow Connector Profile and reference the name of the profile in the URL. An example of this value for Salesforce is `Salesforce://AppFlow/example` where `example` is the name of the AppFlow Connector Profile.
        /// </summary>
        [Input("sourceUri", required: true)]
        public Input<string> SourceUri { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Tags to apply to the Data Integration. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public DataIntegrationArgs()
        {
        }
        public static new DataIntegrationArgs Empty => new DataIntegrationArgs();
    }

    public sealed class DataIntegrationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the Data Integration.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// Specifies the description of the Data Integration.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Specifies the KMS key Amazon Resource Name (ARN) for the Data Integration.
        /// </summary>
        [Input("kmsKey")]
        public Input<string>? KmsKey { get; set; }

        /// <summary>
        /// Specifies the name of the Data Integration.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A block that defines the name of the data and how often it should be pulled from the source. The Schedule Config block is documented below.
        /// </summary>
        [Input("scheduleConfig")]
        public Input<Inputs.DataIntegrationScheduleConfigGetArgs>? ScheduleConfig { get; set; }

        /// <summary>
        /// Specifies the URI of the data source. Create an AppFlow Connector Profile and reference the name of the profile in the URL. An example of this value for Salesforce is `Salesforce://AppFlow/example` where `example` is the name of the AppFlow Connector Profile.
        /// </summary>
        [Input("sourceUri")]
        public Input<string>? SourceUri { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Tags to apply to the Data Integration. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        public DataIntegrationState()
        {
        }
        public static new DataIntegrationState Empty => new DataIntegrationState();
    }
}
