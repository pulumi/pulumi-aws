// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ecs
{
    public static class GetTaskDefinition
    {
        /// <summary>
        /// The ECS task definition data source allows access to details of
        /// a specific AWS ECS task definition.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var mongoTaskDefinition = Aws.Ecs.GetTaskDefinition.Invoke(new()
        ///     {
        ///         TaskDefinition = mongoEcs / taskDefinitionTaskDefinition.Family,
        ///     });
        /// 
        ///     var foo = new Aws.Ecs.Cluster("foo");
        /// 
        ///     var mongoEcs_taskDefinitionTaskDefinition = new Aws.Ecs.TaskDefinition("mongoEcs/taskDefinitionTaskDefinition", new()
        ///     {
        ///         Family = "mongodb",
        ///         ContainerDefinitions = @"[
        ///   {
        ///     ""cpu"": 128,
        ///     ""environment"": [{
        ///       ""name"": ""SECRET"",
        ///       ""value"": ""KEY""
        ///     }],
        ///     ""essential"": true,
        ///     ""image"": ""mongo:latest"",
        ///     ""memory"": 128,
        ///     ""memoryReservation"": 64,
        ///     ""name"": ""mongodb""
        ///   }
        /// ]
        /// ",
        ///     });
        /// 
        ///     var mongoService = new Aws.Ecs.Service("mongoService", new()
        ///     {
        ///         Cluster = foo.Id,
        ///         DesiredCount = 2,
        ///         TaskDefinition = mongoTaskDefinition.Apply(getTaskDefinitionResult =&gt; getTaskDefinitionResult.Arn),
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetTaskDefinitionResult> InvokeAsync(GetTaskDefinitionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTaskDefinitionResult>("aws:ecs/getTaskDefinition:getTaskDefinition", args ?? new GetTaskDefinitionArgs(), options.WithDefaults());

        /// <summary>
        /// The ECS task definition data source allows access to details of
        /// a specific AWS ECS task definition.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var mongoTaskDefinition = Aws.Ecs.GetTaskDefinition.Invoke(new()
        ///     {
        ///         TaskDefinition = mongoEcs / taskDefinitionTaskDefinition.Family,
        ///     });
        /// 
        ///     var foo = new Aws.Ecs.Cluster("foo");
        /// 
        ///     var mongoEcs_taskDefinitionTaskDefinition = new Aws.Ecs.TaskDefinition("mongoEcs/taskDefinitionTaskDefinition", new()
        ///     {
        ///         Family = "mongodb",
        ///         ContainerDefinitions = @"[
        ///   {
        ///     ""cpu"": 128,
        ///     ""environment"": [{
        ///       ""name"": ""SECRET"",
        ///       ""value"": ""KEY""
        ///     }],
        ///     ""essential"": true,
        ///     ""image"": ""mongo:latest"",
        ///     ""memory"": 128,
        ///     ""memoryReservation"": 64,
        ///     ""name"": ""mongodb""
        ///   }
        /// ]
        /// ",
        ///     });
        /// 
        ///     var mongoService = new Aws.Ecs.Service("mongoService", new()
        ///     {
        ///         Cluster = foo.Id,
        ///         DesiredCount = 2,
        ///         TaskDefinition = mongoTaskDefinition.Apply(getTaskDefinitionResult =&gt; getTaskDefinitionResult.Arn),
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetTaskDefinitionResult> Invoke(GetTaskDefinitionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTaskDefinitionResult>("aws:ecs/getTaskDefinition:getTaskDefinition", args ?? new GetTaskDefinitionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTaskDefinitionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Family for the latest ACTIVE revision, family and revision (family:revision) for a specific revision in the family, the ARN of the task definition to access to.
        /// </summary>
        [Input("taskDefinition", required: true)]
        public string TaskDefinition { get; set; } = null!;

        public GetTaskDefinitionArgs()
        {
        }
        public static new GetTaskDefinitionArgs Empty => new GetTaskDefinitionArgs();
    }

    public sealed class GetTaskDefinitionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Family for the latest ACTIVE revision, family and revision (family:revision) for a specific revision in the family, the ARN of the task definition to access to.
        /// </summary>
        [Input("taskDefinition", required: true)]
        public Input<string> TaskDefinition { get; set; } = null!;

        public GetTaskDefinitionInvokeArgs()
        {
        }
        public static new GetTaskDefinitionInvokeArgs Empty => new GetTaskDefinitionInvokeArgs();
    }


    [OutputType]
    public sealed class GetTaskDefinitionResult
    {
        /// <summary>
        /// ARN of the task definition.
        /// </summary>
        public readonly string Arn;
        /// <summary>
        /// ARN of the Task Definition with the trailing `revision` removed. This may be useful for situations where the latest task definition is always desired. If a revision isn't specified, the latest ACTIVE revision is used. See the [AWS documentation](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_StartTask.html#ECS-StartTask-request-taskDefinition) for details.
        /// </summary>
        public readonly string ArnWithoutRevision;
        /// <summary>
        /// Family of this task definition.
        /// </summary>
        public readonly string Family;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Docker networking mode to use for the containers in this task.
        /// </summary>
        public readonly string NetworkMode;
        /// <summary>
        /// Revision of this task definition.
        /// </summary>
        public readonly int Revision;
        /// <summary>
        /// Status of this task definition.
        /// </summary>
        public readonly string Status;
        public readonly string TaskDefinition;
        /// <summary>
        /// ARN of the IAM role that containers in this task can assume.
        /// </summary>
        public readonly string TaskRoleArn;

        [OutputConstructor]
        private GetTaskDefinitionResult(
            string arn,

            string arnWithoutRevision,

            string family,

            string id,

            string networkMode,

            int revision,

            string status,

            string taskDefinition,

            string taskRoleArn)
        {
            Arn = arn;
            ArnWithoutRevision = arnWithoutRevision;
            Family = family;
            Id = id;
            NetworkMode = networkMode;
            Revision = revision;
            Status = status;
            TaskDefinition = taskDefinition;
            TaskRoleArn = taskRoleArn;
        }
    }
}
