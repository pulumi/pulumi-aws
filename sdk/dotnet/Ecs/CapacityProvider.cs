// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ecs
{
    public partial class CapacityProvider : Pulumi.CustomResource
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) that identifies the capacity provider.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// Nested argument defining the provider for the ECS auto scaling group. Defined below.
        /// </summary>
        [Output("autoScalingGroupProvider")]
        public Output<Outputs.CapacityProviderAutoScalingGroupProvider> AutoScalingGroupProvider { get; private set; } = null!;

        /// <summary>
        /// The name of the capacity provider.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Key-value mapping of resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, object>?> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a CapacityProvider resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CapacityProvider(string name, CapacityProviderArgs args, CustomResourceOptions? options = null)
            : base("aws:ecs/capacityProvider:CapacityProvider", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private CapacityProvider(string name, Input<string> id, CapacityProviderState? state = null, CustomResourceOptions? options = null)
            : base("aws:ecs/capacityProvider:CapacityProvider", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CapacityProvider resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CapacityProvider Get(string name, Input<string> id, CapacityProviderState? state = null, CustomResourceOptions? options = null)
        {
            return new CapacityProvider(name, id, state, options);
        }
    }

    public sealed class CapacityProviderArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Nested argument defining the provider for the ECS auto scaling group. Defined below.
        /// </summary>
        [Input("autoScalingGroupProvider", required: true)]
        public Input<Inputs.CapacityProviderAutoScalingGroupProviderArgs> AutoScalingGroupProvider { get; set; } = null!;

        /// <summary>
        /// The name of the capacity provider.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// Key-value mapping of resource tags.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        public CapacityProviderArgs()
        {
        }
    }

    public sealed class CapacityProviderState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) that identifies the capacity provider.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// Nested argument defining the provider for the ECS auto scaling group. Defined below.
        /// </summary>
        [Input("autoScalingGroupProvider")]
        public Input<Inputs.CapacityProviderAutoScalingGroupProviderGetArgs>? AutoScalingGroupProvider { get; set; }

        /// <summary>
        /// The name of the capacity provider.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// Key-value mapping of resource tags.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        public CapacityProviderState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class CapacityProviderAutoScalingGroupProviderArgs : Pulumi.ResourceArgs
    {
        [Input("autoScalingGroupArn", required: true)]
        public Input<string> AutoScalingGroupArn { get; set; } = null!;

        [Input("managedScaling")]
        public Input<CapacityProviderAutoScalingGroupProviderManagedScalingArgs>? ManagedScaling { get; set; }

        [Input("managedTerminationProtection")]
        public Input<string>? ManagedTerminationProtection { get; set; }

        public CapacityProviderAutoScalingGroupProviderArgs()
        {
        }
    }

    public sealed class CapacityProviderAutoScalingGroupProviderGetArgs : Pulumi.ResourceArgs
    {
        [Input("autoScalingGroupArn", required: true)]
        public Input<string> AutoScalingGroupArn { get; set; } = null!;

        [Input("managedScaling")]
        public Input<CapacityProviderAutoScalingGroupProviderManagedScalingGetArgs>? ManagedScaling { get; set; }

        [Input("managedTerminationProtection")]
        public Input<string>? ManagedTerminationProtection { get; set; }

        public CapacityProviderAutoScalingGroupProviderGetArgs()
        {
        }
    }

    public sealed class CapacityProviderAutoScalingGroupProviderManagedScalingArgs : Pulumi.ResourceArgs
    {
        [Input("maximumScalingStepSize")]
        public Input<int>? MaximumScalingStepSize { get; set; }

        [Input("minimumScalingStepSize")]
        public Input<int>? MinimumScalingStepSize { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("targetCapacity")]
        public Input<int>? TargetCapacity { get; set; }

        public CapacityProviderAutoScalingGroupProviderManagedScalingArgs()
        {
        }
    }

    public sealed class CapacityProviderAutoScalingGroupProviderManagedScalingGetArgs : Pulumi.ResourceArgs
    {
        [Input("maximumScalingStepSize")]
        public Input<int>? MaximumScalingStepSize { get; set; }

        [Input("minimumScalingStepSize")]
        public Input<int>? MinimumScalingStepSize { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("targetCapacity")]
        public Input<int>? TargetCapacity { get; set; }

        public CapacityProviderAutoScalingGroupProviderManagedScalingGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class CapacityProviderAutoScalingGroupProvider
    {
        public readonly string AutoScalingGroupArn;
        public readonly CapacityProviderAutoScalingGroupProviderManagedScaling ManagedScaling;
        public readonly string ManagedTerminationProtection;

        [OutputConstructor]
        private CapacityProviderAutoScalingGroupProvider(
            string autoScalingGroupArn,
            CapacityProviderAutoScalingGroupProviderManagedScaling managedScaling,
            string managedTerminationProtection)
        {
            AutoScalingGroupArn = autoScalingGroupArn;
            ManagedScaling = managedScaling;
            ManagedTerminationProtection = managedTerminationProtection;
        }
    }

    [OutputType]
    public sealed class CapacityProviderAutoScalingGroupProviderManagedScaling
    {
        public readonly int MaximumScalingStepSize;
        public readonly int MinimumScalingStepSize;
        public readonly string Status;
        public readonly int TargetCapacity;

        [OutputConstructor]
        private CapacityProviderAutoScalingGroupProviderManagedScaling(
            int maximumScalingStepSize,
            int minimumScalingStepSize,
            string status,
            int targetCapacity)
        {
            MaximumScalingStepSize = maximumScalingStepSize;
            MinimumScalingStepSize = minimumScalingStepSize;
            Status = status;
            TargetCapacity = targetCapacity;
        }
    }
    }
}
