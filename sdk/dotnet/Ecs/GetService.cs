// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ecs
{
    public static partial class Invokes
    {
        /// <summary>
        /// The ECS Service data source allows access to details of a specific
        /// Service within a AWS ECS Cluster.
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/d/ecs_service.html.markdown.
        /// </summary>
        public static Task<GetServiceResult> GetService(GetServiceArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetServiceResult>("aws:ecs/getService:getService", args ?? InvokeArgs.Empty, options.WithVersion());
    }

    public sealed class GetServiceArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The arn of the ECS Cluster
        /// </summary>
        [Input("clusterArn", required: true)]
        public string ClusterArn { get; set; } = null!;

        /// <summary>
        /// The name of the ECS Service
        /// </summary>
        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        public GetServiceArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetServiceResult
    {
        /// <summary>
        /// The ARN of the ECS Service
        /// </summary>
        public readonly string Arn;
        public readonly string ClusterArn;
        /// <summary>
        /// The number of tasks for the ECS Service
        /// </summary>
        public readonly int DesiredCount;
        /// <summary>
        /// The launch type for the ECS Service
        /// </summary>
        public readonly string LaunchType;
        /// <summary>
        /// The scheduling strategy for the ECS Service
        /// </summary>
        public readonly string SchedulingStrategy;
        public readonly string ServiceName;
        /// <summary>
        /// The family for the latest ACTIVE revision
        /// </summary>
        public readonly string TaskDefinition;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetServiceResult(
            string arn,
            string clusterArn,
            int desiredCount,
            string launchType,
            string schedulingStrategy,
            string serviceName,
            string taskDefinition,
            string id)
        {
            Arn = arn;
            ClusterArn = clusterArn;
            DesiredCount = desiredCount;
            LaunchType = launchType;
            SchedulingStrategy = schedulingStrategy;
            ServiceName = serviceName;
            TaskDefinition = taskDefinition;
            Id = id;
        }
    }
}
