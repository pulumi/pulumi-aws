// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ecs.Outputs
{

    [OutputType]
    public sealed class GetTaskExecutionOverridesResult
    {
        /// <summary>
        /// One or more container overrides that are sent to a task. See below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTaskExecutionOverridesContainerOverrideResult> ContainerOverrides;
        /// <summary>
        /// The CPU override for the task.
        /// </summary>
        public readonly string? Cpu;
        /// <summary>
        /// Amazon Resource Name (ARN) of the task execution role override for the task.
        /// </summary>
        public readonly string? ExecutionRoleArn;
        /// <summary>
        /// Elastic Inference accelerator override for the task. See below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTaskExecutionOverridesInferenceAcceleratorOverrideResult> InferenceAcceleratorOverrides;
        /// <summary>
        /// The memory override for the task.
        /// </summary>
        public readonly string? Memory;
        /// <summary>
        /// Amazon Resource Name (ARN) of the role that containers in this task can assume.
        /// </summary>
        public readonly string? TaskRoleArn;

        [OutputConstructor]
        private GetTaskExecutionOverridesResult(
            ImmutableArray<Outputs.GetTaskExecutionOverridesContainerOverrideResult> containerOverrides,

            string? cpu,

            string? executionRoleArn,

            ImmutableArray<Outputs.GetTaskExecutionOverridesInferenceAcceleratorOverrideResult> inferenceAcceleratorOverrides,

            string? memory,

            string? taskRoleArn)
        {
            ContainerOverrides = containerOverrides;
            Cpu = cpu;
            ExecutionRoleArn = executionRoleArn;
            InferenceAcceleratorOverrides = inferenceAcceleratorOverrides;
            Memory = memory;
            TaskRoleArn = taskRoleArn;
        }
    }
}
