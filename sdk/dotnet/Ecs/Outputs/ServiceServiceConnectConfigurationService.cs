// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ecs.Outputs
{

    [OutputType]
    public sealed class ServiceServiceConnectConfigurationService
    {
        /// <summary>
        /// The list of client aliases for this Service Connect service. You use these to assign names that can be used by client applications. The maximum number of client aliases that you can have in this list is 1. See below.
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceServiceConnectConfigurationServiceClientAlias> ClientAlias;
        /// <summary>
        /// The name of the new AWS Cloud Map service that Amazon ECS creates for this Amazon ECS service.
        /// </summary>
        public readonly string? DiscoveryName;
        /// <summary>
        /// The port number for the Service Connect proxy to listen on.
        /// </summary>
        public readonly int? IngressPortOverride;
        /// <summary>
        /// The name of one of the `portMappings` from all the containers in the task definition of this Amazon ECS service.
        /// </summary>
        public readonly string PortName;
        /// <summary>
        /// Configuration timeouts for Service Connect
        /// </summary>
        public readonly Outputs.ServiceServiceConnectConfigurationServiceTimeout? Timeout;
        /// <summary>
        /// The configuration for enabling Transport Layer Security (TLS)
        /// </summary>
        public readonly Outputs.ServiceServiceConnectConfigurationServiceTls? Tls;

        [OutputConstructor]
        private ServiceServiceConnectConfigurationService(
            ImmutableArray<Outputs.ServiceServiceConnectConfigurationServiceClientAlias> clientAlias,

            string? discoveryName,

            int? ingressPortOverride,

            string portName,

            Outputs.ServiceServiceConnectConfigurationServiceTimeout? timeout,

            Outputs.ServiceServiceConnectConfigurationServiceTls? tls)
        {
            ClientAlias = clientAlias;
            DiscoveryName = discoveryName;
            IngressPortOverride = ingressPortOverride;
            PortName = portName;
            Timeout = timeout;
            Tls = tls;
        }
    }
}
