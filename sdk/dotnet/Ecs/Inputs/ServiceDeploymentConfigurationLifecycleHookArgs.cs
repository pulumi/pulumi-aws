// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ecs.Inputs
{

    public sealed class ServiceDeploymentConfigurationLifecycleHookArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ARN of the Lambda function to invoke for the lifecycle hook.
        /// </summary>
        [Input("hookTargetArn", required: true)]
        public Input<string> HookTargetArn { get; set; } = null!;

        [Input("lifecycleStages", required: true)]
        private InputList<string>? _lifecycleStages;

        /// <summary>
        /// Stages during the deployment when the hook should be invoked. Valid values: `RECONCILE_SERVICE`, `PRE_SCALE_UP`, `POST_SCALE_UP`, `TEST_TRAFFIC_SHIFT`, `POST_TEST_TRAFFIC_SHIFT`, `PRODUCTION_TRAFFIC_SHIFT`, `POST_PRODUCTION_TRAFFIC_SHIFT`.
        /// </summary>
        public InputList<string> LifecycleStages
        {
            get => _lifecycleStages ?? (_lifecycleStages = new InputList<string>());
            set => _lifecycleStages = value;
        }

        /// <summary>
        /// ARN of the IAM role that grants the service permission to invoke the Lambda function.
        /// </summary>
        [Input("roleArn", required: true)]
        public Input<string> RoleArn { get; set; } = null!;

        public ServiceDeploymentConfigurationLifecycleHookArgs()
        {
        }
        public static new ServiceDeploymentConfigurationLifecycleHookArgs Empty => new ServiceDeploymentConfigurationLifecycleHookArgs();
    }
}
