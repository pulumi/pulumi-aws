// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ecs.Inputs
{

    public sealed class ServiceLoadBalancerArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the container to associate with the load balancer (as it appears in a container definition).
        /// </summary>
        [Input("containerName", required: true)]
        public Input<string> ContainerName { get; set; } = null!;

        /// <summary>
        /// Port on the container to associate with the load balancer.
        /// 
        /// &gt; **Version note:** Multiple `load_balancer` configuration block support was added in version 2.22.0 of the provider. This allows configuration of [ECS service support for multiple target groups](https://aws.amazon.com/about-aws/whats-new/2019/07/amazon-ecs-services-now-support-multiple-load-balancer-target-groups/).
        /// </summary>
        [Input("containerPort", required: true)]
        public Input<int> ContainerPort { get; set; } = null!;

        /// <summary>
        /// Name of the ELB (Classic) to associate with the service.
        /// </summary>
        [Input("elbName")]
        public Input<string>? ElbName { get; set; }

        /// <summary>
        /// ARN of the Load Balancer target group to associate with the service.
        /// </summary>
        [Input("targetGroupArn")]
        public Input<string>? TargetGroupArn { get; set; }

        public ServiceLoadBalancerArgs()
        {
        }
        public static new ServiceLoadBalancerArgs Empty => new ServiceLoadBalancerArgs();
    }
}
