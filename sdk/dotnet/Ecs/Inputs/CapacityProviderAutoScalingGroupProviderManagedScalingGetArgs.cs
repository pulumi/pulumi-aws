// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ecs.Inputs
{

    public sealed class CapacityProviderAutoScalingGroupProviderManagedScalingGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Period of time, in seconds, after a newly launched Amazon EC2 instance can contribute to CloudWatch metrics for Auto Scaling group. If this parameter is omitted, the default value of 300 seconds is used.
        /// </summary>
        [Input("instanceWarmupPeriod")]
        public Input<int>? InstanceWarmupPeriod { get; set; }

        /// <summary>
        /// Maximum step adjustment size. A number between 1 and 10,000.
        /// </summary>
        [Input("maximumScalingStepSize")]
        public Input<int>? MaximumScalingStepSize { get; set; }

        /// <summary>
        /// Minimum step adjustment size. A number between 1 and 10,000.
        /// </summary>
        [Input("minimumScalingStepSize")]
        public Input<int>? MinimumScalingStepSize { get; set; }

        /// <summary>
        /// Whether auto scaling is managed by ECS. Valid values are `ENABLED` and `DISABLED`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Target utilization for the capacity provider. A number between 1 and 100.
        /// </summary>
        [Input("targetCapacity")]
        public Input<int>? TargetCapacity { get; set; }

        public CapacityProviderAutoScalingGroupProviderManagedScalingGetArgs()
        {
        }
        public static new CapacityProviderAutoScalingGroupProviderManagedScalingGetArgs Empty => new CapacityProviderAutoScalingGroupProviderManagedScalingGetArgs();
    }
}
