// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.LakeFormation.Inputs
{

    public sealed class OptInResourceDataArgs : global::Pulumi.ResourceArgs
    {
        [Input("catalogs")]
        private InputList<Inputs.OptInResourceDataCatalogArgs>? _catalogs;

        /// <summary>
        /// Identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment. See Catalog for more details.
        /// </summary>
        public InputList<Inputs.OptInResourceDataCatalogArgs> Catalogs
        {
            get => _catalogs ?? (_catalogs = new InputList<Inputs.OptInResourceDataCatalogArgs>());
            set => _catalogs = value;
        }

        [Input("dataCellsFilters")]
        private InputList<Inputs.OptInResourceDataDataCellsFilterArgs>? _dataCellsFilters;

        /// <summary>
        /// Data cell filter. See Data Cells Filter for more details.
        /// </summary>
        public InputList<Inputs.OptInResourceDataDataCellsFilterArgs> DataCellsFilters
        {
            get => _dataCellsFilters ?? (_dataCellsFilters = new InputList<Inputs.OptInResourceDataDataCellsFilterArgs>());
            set => _dataCellsFilters = value;
        }

        [Input("dataLocations")]
        private InputList<Inputs.OptInResourceDataDataLocationArgs>? _dataLocations;

        /// <summary>
        /// Location of an Amazon S3 path where permissions are granted or revoked. See Data Location for more details.
        /// </summary>
        public InputList<Inputs.OptInResourceDataDataLocationArgs> DataLocations
        {
            get => _dataLocations ?? (_dataLocations = new InputList<Inputs.OptInResourceDataDataLocationArgs>());
            set => _dataLocations = value;
        }

        /// <summary>
        /// Database for the resource. Unique to the Data Catalog. A database is a set of associated table definitions organized into a logical group. You can Grant and Revoke database permissions to a principal. See Database for more details.
        /// </summary>
        [Input("database")]
        public Input<Inputs.OptInResourceDataDatabaseArgs>? Database { get; set; }

        /// <summary>
        /// LF-tag key and values attached to a resource.
        /// </summary>
        [Input("lfTag")]
        public Input<Inputs.OptInResourceDataLfTagArgs>? LfTag { get; set; }

        [Input("lfTagExpressions")]
        private InputList<Inputs.OptInResourceDataLfTagExpressionArgs>? _lfTagExpressions;

        /// <summary>
        /// Logical expression composed of one or more LF-Tag key:value pairs. See LF-Tag Expression for more details.
        /// </summary>
        public InputList<Inputs.OptInResourceDataLfTagExpressionArgs> LfTagExpressions
        {
            get => _lfTagExpressions ?? (_lfTagExpressions = new InputList<Inputs.OptInResourceDataLfTagExpressionArgs>());
            set => _lfTagExpressions = value;
        }

        [Input("lfTagPolicies")]
        private InputList<Inputs.OptInResourceDataLfTagPolicyArgs>? _lfTagPolicies;

        /// <summary>
        /// List of LF-Tag conditions or saved LF-Tag expressions that define a resource's LF-Tag policy. See LF-Tag Policy for more details.
        /// </summary>
        public InputList<Inputs.OptInResourceDataLfTagPolicyArgs> LfTagPolicies
        {
            get => _lfTagPolicies ?? (_lfTagPolicies = new InputList<Inputs.OptInResourceDataLfTagPolicyArgs>());
            set => _lfTagPolicies = value;
        }

        /// <summary>
        /// Table for the resource. A table is a metadata definition that represents your data. You can Grant and Revoke table privileges to a principal. See Table for more details.
        /// </summary>
        [Input("table")]
        public Input<Inputs.OptInResourceDataTableArgs>? Table { get; set; }

        /// <summary>
        /// Table with columns for the resource. A principal with permissions to this resource can select metadata from the columns of a table in the Data Catalog and the underlying data in Amazon S3. See Table With Columns for more details.
        /// </summary>
        [Input("tableWithColumns")]
        public Input<Inputs.OptInResourceDataTableWithColumnsArgs>? TableWithColumns { get; set; }

        public OptInResourceDataArgs()
        {
        }
        public static new OptInResourceDataArgs Empty => new OptInResourceDataArgs();
    }
}
