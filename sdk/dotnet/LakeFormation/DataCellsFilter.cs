// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.LakeFormation
{
    /// <summary>
    /// Resource for managing an AWS Lake Formation Data Cells Filter.
    /// 
    /// ## Example Usage
    /// 
    /// ### Basic Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.LakeFormation.DataCellsFilter("example", new()
    ///     {
    ///         TableData = new Aws.LakeFormation.Inputs.DataCellsFilterTableDataArgs
    ///         {
    ///             DatabaseName = test.Name,
    ///             Name = "example",
    ///             TableCatalogId = current.AccountId,
    ///             TableName = testAwsGlueCatalogTable.Name,
    ///             ColumnNames = new[]
    ///             {
    ///                 "my_column",
    ///             },
    ///             RowFilter = new Aws.LakeFormation.Inputs.DataCellsFilterTableDataRowFilterArgs
    ///             {
    ///                 FilterExpression = "my_column='example'",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import Lake Formation Data Cells Filter using the `id`. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:lakeformation/dataCellsFilter:DataCellsFilter example database_name,name,table_catalog_id,table_name
    /// ```
    /// </summary>
    [AwsResourceType("aws:lakeformation/dataCellsFilter:DataCellsFilter")]
    public partial class DataCellsFilter : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Information about the data cells filter. See Table Data below for details.
        /// </summary>
        [Output("tableData")]
        public Output<Outputs.DataCellsFilterTableData?> TableData { get; private set; } = null!;

        [Output("timeouts")]
        public Output<Outputs.DataCellsFilterTimeouts?> Timeouts { get; private set; } = null!;


        /// <summary>
        /// Create a DataCellsFilter resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DataCellsFilter(string name, DataCellsFilterArgs? args = null, CustomResourceOptions? options = null)
            : base("aws:lakeformation/dataCellsFilter:DataCellsFilter", name, args ?? new DataCellsFilterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DataCellsFilter(string name, Input<string> id, DataCellsFilterState? state = null, CustomResourceOptions? options = null)
            : base("aws:lakeformation/dataCellsFilter:DataCellsFilter", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DataCellsFilter resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DataCellsFilter Get(string name, Input<string> id, DataCellsFilterState? state = null, CustomResourceOptions? options = null)
        {
            return new DataCellsFilter(name, id, state, options);
        }
    }

    public sealed class DataCellsFilterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Information about the data cells filter. See Table Data below for details.
        /// </summary>
        [Input("tableData")]
        public Input<Inputs.DataCellsFilterTableDataArgs>? TableData { get; set; }

        [Input("timeouts")]
        public Input<Inputs.DataCellsFilterTimeoutsArgs>? Timeouts { get; set; }

        public DataCellsFilterArgs()
        {
        }
        public static new DataCellsFilterArgs Empty => new DataCellsFilterArgs();
    }

    public sealed class DataCellsFilterState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Information about the data cells filter. See Table Data below for details.
        /// </summary>
        [Input("tableData")]
        public Input<Inputs.DataCellsFilterTableDataGetArgs>? TableData { get; set; }

        [Input("timeouts")]
        public Input<Inputs.DataCellsFilterTimeoutsGetArgs>? Timeouts { get; set; }

        public DataCellsFilterState()
        {
        }
        public static new DataCellsFilterState Empty => new DataCellsFilterState();
    }
}
