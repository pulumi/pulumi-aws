// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.LakeFormation
{
    /// <summary>
    /// Resource for managing an AWS Lake Formation Opt In.
    /// 
    /// ## Example Usage
    /// 
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.LakeFormation.OptIn("example");
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import Lake Formation Opt In using the `example_id_arg`. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:lakeformation/optIn:OptIn example opt_in-id-12345678
    /// ```
    /// </summary>
    [AwsResourceType("aws:lakeformation/optIn:OptIn")]
    public partial class OptIn : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Lake Formation condition, which applies to permissions and opt-ins that contain an expression.
        /// </summary>
        [Output("conditions")]
        public Output<ImmutableArray<Outputs.OptInCondition>> Conditions { get; private set; } = null!;

        /// <summary>
        /// Last modified date and time of the record.
        /// </summary>
        [Output("lastModified")]
        public Output<string> LastModified { get; private set; } = null!;

        [Output("lastUpdatedBy")]
        public Output<string> LastUpdatedBy { get; private set; } = null!;

        /// <summary>
        /// Lake Formation principal. Supported principals are IAM users or IAM roles. See Principal for more details.
        /// </summary>
        [Output("principals")]
        public Output<ImmutableArray<Outputs.OptInPrincipal>> Principals { get; private set; } = null!;

        /// <summary>
        /// Structure for the resource. See Resource for more details.
        /// </summary>
        [Output("resourceDatas")]
        public Output<ImmutableArray<Outputs.OptInResourceData>> ResourceDatas { get; private set; } = null!;


        /// <summary>
        /// Create a OptIn resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OptIn(string name, OptInArgs? args = null, CustomResourceOptions? options = null)
            : base("aws:lakeformation/optIn:OptIn", name, args ?? new OptInArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OptIn(string name, Input<string> id, OptInState? state = null, CustomResourceOptions? options = null)
            : base("aws:lakeformation/optIn:OptIn", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OptIn resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OptIn Get(string name, Input<string> id, OptInState? state = null, CustomResourceOptions? options = null)
        {
            return new OptIn(name, id, state, options);
        }
    }

    public sealed class OptInArgs : global::Pulumi.ResourceArgs
    {
        [Input("conditions")]
        private InputList<Inputs.OptInConditionArgs>? _conditions;

        /// <summary>
        /// Lake Formation condition, which applies to permissions and opt-ins that contain an expression.
        /// </summary>
        public InputList<Inputs.OptInConditionArgs> Conditions
        {
            get => _conditions ?? (_conditions = new InputList<Inputs.OptInConditionArgs>());
            set => _conditions = value;
        }

        [Input("principals")]
        private InputList<Inputs.OptInPrincipalArgs>? _principals;

        /// <summary>
        /// Lake Formation principal. Supported principals are IAM users or IAM roles. See Principal for more details.
        /// </summary>
        public InputList<Inputs.OptInPrincipalArgs> Principals
        {
            get => _principals ?? (_principals = new InputList<Inputs.OptInPrincipalArgs>());
            set => _principals = value;
        }

        [Input("resourceDatas")]
        private InputList<Inputs.OptInResourceDataArgs>? _resourceDatas;

        /// <summary>
        /// Structure for the resource. See Resource for more details.
        /// </summary>
        public InputList<Inputs.OptInResourceDataArgs> ResourceDatas
        {
            get => _resourceDatas ?? (_resourceDatas = new InputList<Inputs.OptInResourceDataArgs>());
            set => _resourceDatas = value;
        }

        public OptInArgs()
        {
        }
        public static new OptInArgs Empty => new OptInArgs();
    }

    public sealed class OptInState : global::Pulumi.ResourceArgs
    {
        [Input("conditions")]
        private InputList<Inputs.OptInConditionGetArgs>? _conditions;

        /// <summary>
        /// Lake Formation condition, which applies to permissions and opt-ins that contain an expression.
        /// </summary>
        public InputList<Inputs.OptInConditionGetArgs> Conditions
        {
            get => _conditions ?? (_conditions = new InputList<Inputs.OptInConditionGetArgs>());
            set => _conditions = value;
        }

        /// <summary>
        /// Last modified date and time of the record.
        /// </summary>
        [Input("lastModified")]
        public Input<string>? LastModified { get; set; }

        [Input("lastUpdatedBy")]
        public Input<string>? LastUpdatedBy { get; set; }

        [Input("principals")]
        private InputList<Inputs.OptInPrincipalGetArgs>? _principals;

        /// <summary>
        /// Lake Formation principal. Supported principals are IAM users or IAM roles. See Principal for more details.
        /// </summary>
        public InputList<Inputs.OptInPrincipalGetArgs> Principals
        {
            get => _principals ?? (_principals = new InputList<Inputs.OptInPrincipalGetArgs>());
            set => _principals = value;
        }

        [Input("resourceDatas")]
        private InputList<Inputs.OptInResourceDataGetArgs>? _resourceDatas;

        /// <summary>
        /// Structure for the resource. See Resource for more details.
        /// </summary>
        public InputList<Inputs.OptInResourceDataGetArgs> ResourceDatas
        {
            get => _resourceDatas ?? (_resourceDatas = new InputList<Inputs.OptInResourceDataGetArgs>());
            set => _resourceDatas = value;
        }

        public OptInState()
        {
        }
        public static new OptInState Empty => new OptInState();
    }
}
