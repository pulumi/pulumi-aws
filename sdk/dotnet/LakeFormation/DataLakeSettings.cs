// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.LakeFormation
{
    /// <summary>
    /// Manages Lake Formation principals designated as data lake administrators and lists of principal permission entries for default create database and default create table permissions.
    /// 
    /// &gt; **NOTE:** Lake Formation introduces fine-grained access control for data in your data lake. Part of the changes include the `IAMAllowedPrincipals` principal in order to make Lake Formation backwards compatible with existing IAM and Glue permissions. For more information, see [Changing the Default Security Settings for Your Data Lake](https://docs.aws.amazon.com/lake-formation/latest/dg/change-settings.html) and [Upgrading AWS Glue Data Permissions to the AWS Lake Formation Model](https://docs.aws.amazon.com/lake-formation/latest/dg/upgrade-glue-lake-formation.html).
    /// 
    /// ## Example Usage
    /// ### Data Lake Admins
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var example = new Aws.LakeFormation.DataLakeSettings("example", new Aws.LakeFormation.DataLakeSettingsArgs
    ///         {
    ///             Admins = 
    ///             {
    ///                 aws_iam_user.Test.Arn,
    ///                 aws_iam_role.Test.Arn,
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// ### Create Default Permissions
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var example = new Aws.LakeFormation.DataLakeSettings("example", new Aws.LakeFormation.DataLakeSettingsArgs
    ///         {
    ///             Admins = 
    ///             {
    ///                 aws_iam_user.Test.Arn,
    ///                 aws_iam_role.Test.Arn,
    ///             },
    ///             CreateDatabaseDefaultPermissions = 
    ///             {
    ///                 new Aws.LakeFormation.Inputs.DataLakeSettingsCreateDatabaseDefaultPermissionArgs
    ///                 {
    ///                     Permissions = 
    ///                     {
    ///                         "SELECT",
    ///                         "ALTER",
    ///                         "DROP",
    ///                     },
    ///                     Principal = aws_iam_user.Test.Arn,
    ///                 },
    ///             },
    ///             CreateTableDefaultPermissions = 
    ///             {
    ///                 new Aws.LakeFormation.Inputs.DataLakeSettingsCreateTableDefaultPermissionArgs
    ///                 {
    ///                     Permissions = 
    ///                     {
    ///                         "ALL",
    ///                     },
    ///                     Principal = aws_iam_role.Test.Arn,
    ///                 },
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// </summary>
    [AwsResourceType("aws:lakeformation/dataLakeSettings:DataLakeSettings")]
    public partial class DataLakeSettings : Pulumi.CustomResource
    {
        /// <summary>
        /// List of ARNs of AWS Lake Formation principals (IAM users or roles).
        /// </summary>
        [Output("admins")]
        public Output<ImmutableArray<string>> Admins { get; private set; } = null!;

        /// <summary>
        /// Identifier for the Data Catalog. By default, the account ID.
        /// </summary>
        [Output("catalogId")]
        public Output<string?> CatalogId { get; private set; } = null!;

        /// <summary>
        /// Up to three configuration blocks of principal permissions for default create database permissions. Detailed below.
        /// </summary>
        [Output("createDatabaseDefaultPermissions")]
        public Output<ImmutableArray<Outputs.DataLakeSettingsCreateDatabaseDefaultPermission>> CreateDatabaseDefaultPermissions { get; private set; } = null!;

        /// <summary>
        /// Up to three configuration blocks of principal permissions for default create table permissions. Detailed below.
        /// </summary>
        [Output("createTableDefaultPermissions")]
        public Output<ImmutableArray<Outputs.DataLakeSettingsCreateTableDefaultPermission>> CreateTableDefaultPermissions { get; private set; } = null!;

        /// <summary>
        /// List of the resource-owning account IDs that the caller's account can use to share their user access details (user ARNs).
        /// </summary>
        [Output("trustedResourceOwners")]
        public Output<ImmutableArray<string>> TrustedResourceOwners { get; private set; } = null!;


        /// <summary>
        /// Create a DataLakeSettings resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DataLakeSettings(string name, DataLakeSettingsArgs? args = null, CustomResourceOptions? options = null)
            : base("aws:lakeformation/dataLakeSettings:DataLakeSettings", name, args ?? new DataLakeSettingsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DataLakeSettings(string name, Input<string> id, DataLakeSettingsState? state = null, CustomResourceOptions? options = null)
            : base("aws:lakeformation/dataLakeSettings:DataLakeSettings", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DataLakeSettings resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DataLakeSettings Get(string name, Input<string> id, DataLakeSettingsState? state = null, CustomResourceOptions? options = null)
        {
            return new DataLakeSettings(name, id, state, options);
        }
    }

    public sealed class DataLakeSettingsArgs : Pulumi.ResourceArgs
    {
        [Input("admins")]
        private InputList<string>? _admins;

        /// <summary>
        /// List of ARNs of AWS Lake Formation principals (IAM users or roles).
        /// </summary>
        public InputList<string> Admins
        {
            get => _admins ?? (_admins = new InputList<string>());
            set => _admins = value;
        }

        /// <summary>
        /// Identifier for the Data Catalog. By default, the account ID.
        /// </summary>
        [Input("catalogId")]
        public Input<string>? CatalogId { get; set; }

        [Input("createDatabaseDefaultPermissions")]
        private InputList<Inputs.DataLakeSettingsCreateDatabaseDefaultPermissionArgs>? _createDatabaseDefaultPermissions;

        /// <summary>
        /// Up to three configuration blocks of principal permissions for default create database permissions. Detailed below.
        /// </summary>
        public InputList<Inputs.DataLakeSettingsCreateDatabaseDefaultPermissionArgs> CreateDatabaseDefaultPermissions
        {
            get => _createDatabaseDefaultPermissions ?? (_createDatabaseDefaultPermissions = new InputList<Inputs.DataLakeSettingsCreateDatabaseDefaultPermissionArgs>());
            set => _createDatabaseDefaultPermissions = value;
        }

        [Input("createTableDefaultPermissions")]
        private InputList<Inputs.DataLakeSettingsCreateTableDefaultPermissionArgs>? _createTableDefaultPermissions;

        /// <summary>
        /// Up to three configuration blocks of principal permissions for default create table permissions. Detailed below.
        /// </summary>
        public InputList<Inputs.DataLakeSettingsCreateTableDefaultPermissionArgs> CreateTableDefaultPermissions
        {
            get => _createTableDefaultPermissions ?? (_createTableDefaultPermissions = new InputList<Inputs.DataLakeSettingsCreateTableDefaultPermissionArgs>());
            set => _createTableDefaultPermissions = value;
        }

        [Input("trustedResourceOwners")]
        private InputList<string>? _trustedResourceOwners;

        /// <summary>
        /// List of the resource-owning account IDs that the caller's account can use to share their user access details (user ARNs).
        /// </summary>
        public InputList<string> TrustedResourceOwners
        {
            get => _trustedResourceOwners ?? (_trustedResourceOwners = new InputList<string>());
            set => _trustedResourceOwners = value;
        }

        public DataLakeSettingsArgs()
        {
        }
    }

    public sealed class DataLakeSettingsState : Pulumi.ResourceArgs
    {
        [Input("admins")]
        private InputList<string>? _admins;

        /// <summary>
        /// List of ARNs of AWS Lake Formation principals (IAM users or roles).
        /// </summary>
        public InputList<string> Admins
        {
            get => _admins ?? (_admins = new InputList<string>());
            set => _admins = value;
        }

        /// <summary>
        /// Identifier for the Data Catalog. By default, the account ID.
        /// </summary>
        [Input("catalogId")]
        public Input<string>? CatalogId { get; set; }

        [Input("createDatabaseDefaultPermissions")]
        private InputList<Inputs.DataLakeSettingsCreateDatabaseDefaultPermissionGetArgs>? _createDatabaseDefaultPermissions;

        /// <summary>
        /// Up to three configuration blocks of principal permissions for default create database permissions. Detailed below.
        /// </summary>
        public InputList<Inputs.DataLakeSettingsCreateDatabaseDefaultPermissionGetArgs> CreateDatabaseDefaultPermissions
        {
            get => _createDatabaseDefaultPermissions ?? (_createDatabaseDefaultPermissions = new InputList<Inputs.DataLakeSettingsCreateDatabaseDefaultPermissionGetArgs>());
            set => _createDatabaseDefaultPermissions = value;
        }

        [Input("createTableDefaultPermissions")]
        private InputList<Inputs.DataLakeSettingsCreateTableDefaultPermissionGetArgs>? _createTableDefaultPermissions;

        /// <summary>
        /// Up to three configuration blocks of principal permissions for default create table permissions. Detailed below.
        /// </summary>
        public InputList<Inputs.DataLakeSettingsCreateTableDefaultPermissionGetArgs> CreateTableDefaultPermissions
        {
            get => _createTableDefaultPermissions ?? (_createTableDefaultPermissions = new InputList<Inputs.DataLakeSettingsCreateTableDefaultPermissionGetArgs>());
            set => _createTableDefaultPermissions = value;
        }

        [Input("trustedResourceOwners")]
        private InputList<string>? _trustedResourceOwners;

        /// <summary>
        /// List of the resource-owning account IDs that the caller's account can use to share their user access details (user ARNs).
        /// </summary>
        public InputList<string> TrustedResourceOwners
        {
            get => _trustedResourceOwners ?? (_trustedResourceOwners = new InputList<string>());
            set => _trustedResourceOwners = value;
        }

        public DataLakeSettingsState()
        {
        }
    }
}
