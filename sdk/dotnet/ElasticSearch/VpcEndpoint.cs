// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.ElasticSearch
{
    /// <summary>
    /// Manages an [AWS Elasticsearch VPC Endpoint](https://docs.aws.amazon.com/elasticsearch-service/latest/APIReference/API_CreateVpcEndpoint.html). Creates an Amazon elasticsearch Service-managed VPC endpoint.
    /// 
    /// ## Example Usage
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var foo = new Aws.ElasticSearch.VpcEndpoint("foo", new()
    ///     {
    ///         DomainArn = aws_elasticsearch_domain.Domain_1.Arn,
    ///         VpcOptions = new Aws.ElasticSearch.Inputs.VpcEndpointVpcOptionsArgs
    ///         {
    ///             SecurityGroupIds = new[]
    ///             {
    ///                 aws_security_group.Test.Id,
    ///                 aws_security_group.Test2.Id,
    ///             },
    ///             SubnetIds = new[]
    ///             {
    ///                 aws_subnet.Test.Id,
    ///                 aws_subnet.Test2.Id,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import elasticsearch VPC endpoint connections using the `id`. For example:
    /// 
    /// ```sh
    ///  $ pulumi import aws:elasticsearch/vpcEndpoint:VpcEndpoint example endpoint-id
    /// ```
    /// </summary>
    [AwsResourceType("aws:elasticsearch/vpcEndpoint:VpcEndpoint")]
    public partial class VpcEndpoint : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies the Amazon Resource Name (ARN) of the domain to create the endpoint for
        /// </summary>
        [Output("domainArn")]
        public Output<string> DomainArn { get; private set; } = null!;

        /// <summary>
        /// The connection endpoint ID for connecting to the domain.
        /// </summary>
        [Output("endpoint")]
        public Output<string> Endpoint { get; private set; } = null!;

        /// <summary>
        /// Options to specify the subnets and security groups for the endpoint.
        /// </summary>
        [Output("vpcOptions")]
        public Output<Outputs.VpcEndpointVpcOptions> VpcOptions { get; private set; } = null!;


        /// <summary>
        /// Create a VpcEndpoint resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VpcEndpoint(string name, VpcEndpointArgs args, CustomResourceOptions? options = null)
            : base("aws:elasticsearch/vpcEndpoint:VpcEndpoint", name, args ?? new VpcEndpointArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VpcEndpoint(string name, Input<string> id, VpcEndpointState? state = null, CustomResourceOptions? options = null)
            : base("aws:elasticsearch/vpcEndpoint:VpcEndpoint", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VpcEndpoint resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VpcEndpoint Get(string name, Input<string> id, VpcEndpointState? state = null, CustomResourceOptions? options = null)
        {
            return new VpcEndpoint(name, id, state, options);
        }
    }

    public sealed class VpcEndpointArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the Amazon Resource Name (ARN) of the domain to create the endpoint for
        /// </summary>
        [Input("domainArn", required: true)]
        public Input<string> DomainArn { get; set; } = null!;

        /// <summary>
        /// Options to specify the subnets and security groups for the endpoint.
        /// </summary>
        [Input("vpcOptions", required: true)]
        public Input<Inputs.VpcEndpointVpcOptionsArgs> VpcOptions { get; set; } = null!;

        public VpcEndpointArgs()
        {
        }
        public static new VpcEndpointArgs Empty => new VpcEndpointArgs();
    }

    public sealed class VpcEndpointState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the Amazon Resource Name (ARN) of the domain to create the endpoint for
        /// </summary>
        [Input("domainArn")]
        public Input<string>? DomainArn { get; set; }

        /// <summary>
        /// The connection endpoint ID for connecting to the domain.
        /// </summary>
        [Input("endpoint")]
        public Input<string>? Endpoint { get; set; }

        /// <summary>
        /// Options to specify the subnets and security groups for the endpoint.
        /// </summary>
        [Input("vpcOptions")]
        public Input<Inputs.VpcEndpointVpcOptionsGetArgs>? VpcOptions { get; set; }

        public VpcEndpointState()
        {
        }
        public static new VpcEndpointState Empty => new VpcEndpointState();
    }
}
