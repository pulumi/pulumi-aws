// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.ElasticSearch
{
    /// <summary>
    /// Manages SAML authentication options for an AWS Elasticsearch Domain.
    /// 
    /// ## Example Usage
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using System.IO;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var exampleDomain = new Aws.ElasticSearch.Domain("exampleDomain", new Aws.ElasticSearch.DomainArgs
    ///         {
    ///             ElasticsearchVersion = "1.5",
    ///             ClusterConfig = new Aws.ElasticSearch.Inputs.DomainClusterConfigArgs
    ///             {
    ///                 InstanceType = "r4.large.elasticsearch",
    ///             },
    ///             SnapshotOptions = new Aws.ElasticSearch.Inputs.DomainSnapshotOptionsArgs
    ///             {
    ///                 AutomatedSnapshotStartHour = 23,
    ///             },
    ///             Tags = 
    ///             {
    ///                 { "Domain", "TestDomain" },
    ///             },
    ///         });
    ///         var exampleDomainSamlOptions = new Aws.ElasticSearch.DomainSamlOptions("exampleDomainSamlOptions", new Aws.ElasticSearch.DomainSamlOptionsArgs
    ///         {
    ///             DomainName = exampleDomain.DomainName,
    ///             SamlOptions = new Aws.ElasticSearch.Inputs.DomainSamlOptionsSamlOptionsArgs
    ///             {
    ///                 Enabled = true,
    ///                 Idp = new Aws.ElasticSearch.Inputs.DomainSamlOptionsSamlOptionsIdpArgs
    ///                 {
    ///                     EntityId = "https://example.com",
    ///                     MetadataContent = File.ReadAllText("./saml-metadata.xml"),
    ///                 },
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// Elasticsearch domains can be imported using the `domain_name`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import aws:elasticsearch/domainSamlOptions:DomainSamlOptions example domain_name
    /// ```
    /// </summary>
    [AwsResourceType("aws:elasticsearch/domainSamlOptions:DomainSamlOptions")]
    public partial class DomainSamlOptions : Pulumi.CustomResource
    {
        /// <summary>
        /// Name of the domain.
        /// </summary>
        [Output("domainName")]
        public Output<string> DomainName { get; private set; } = null!;

        /// <summary>
        /// The SAML authentication options for an AWS Elasticsearch Domain.
        /// </summary>
        [Output("samlOptions")]
        public Output<Outputs.DomainSamlOptionsSamlOptions?> SamlOptions { get; private set; } = null!;


        /// <summary>
        /// Create a DomainSamlOptions resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DomainSamlOptions(string name, DomainSamlOptionsArgs args, CustomResourceOptions? options = null)
            : base("aws:elasticsearch/domainSamlOptions:DomainSamlOptions", name, args ?? new DomainSamlOptionsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DomainSamlOptions(string name, Input<string> id, DomainSamlOptionsState? state = null, CustomResourceOptions? options = null)
            : base("aws:elasticsearch/domainSamlOptions:DomainSamlOptions", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DomainSamlOptions resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DomainSamlOptions Get(string name, Input<string> id, DomainSamlOptionsState? state = null, CustomResourceOptions? options = null)
        {
            return new DomainSamlOptions(name, id, state, options);
        }
    }

    public sealed class DomainSamlOptionsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the domain.
        /// </summary>
        [Input("domainName", required: true)]
        public Input<string> DomainName { get; set; } = null!;

        /// <summary>
        /// The SAML authentication options for an AWS Elasticsearch Domain.
        /// </summary>
        [Input("samlOptions")]
        public Input<Inputs.DomainSamlOptionsSamlOptionsArgs>? SamlOptions { get; set; }

        public DomainSamlOptionsArgs()
        {
        }
    }

    public sealed class DomainSamlOptionsState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the domain.
        /// </summary>
        [Input("domainName")]
        public Input<string>? DomainName { get; set; }

        /// <summary>
        /// The SAML authentication options for an AWS Elasticsearch Domain.
        /// </summary>
        [Input("samlOptions")]
        public Input<Inputs.DomainSamlOptionsSamlOptionsGetArgs>? SamlOptions { get; set; }

        public DomainSamlOptionsState()
        {
        }
    }
}
