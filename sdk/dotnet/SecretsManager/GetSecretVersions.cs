// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.SecretsManager
{
    public static class GetSecretVersions
    {
        public static Task<GetSecretVersionsResult> InvokeAsync(GetSecretVersionsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSecretVersionsResult>("aws:secretsmanager/getSecretVersions:getSecretVersions", args ?? new GetSecretVersionsArgs(), options.WithDefaults());

        public static Output<GetSecretVersionsResult> Invoke(GetSecretVersionsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSecretVersionsResult>("aws:secretsmanager/getSecretVersions:getSecretVersions", args ?? new GetSecretVersionsInvokeArgs(), options.WithDefaults());

        public static Output<GetSecretVersionsResult> Invoke(GetSecretVersionsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSecretVersionsResult>("aws:secretsmanager/getSecretVersions:getSecretVersions", args ?? new GetSecretVersionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSecretVersionsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// If true, all deprecated secret versions are included in the response.
        /// If false, no deprecated secret versions are included in the response. If no value is specified, the default value is `false`.
        /// </summary>
        [Input("includeDeprecated")]
        public bool? IncludeDeprecated { get; set; }

        /// <summary>
        /// Specifies the secret containing the version that you want to retrieve. You can specify either the ARN or the friendly name of the secret.
        /// </summary>
        [Input("secretId", required: true)]
        public string SecretId { get; set; } = null!;

        public GetSecretVersionsArgs()
        {
        }
        public static new GetSecretVersionsArgs Empty => new GetSecretVersionsArgs();
    }

    public sealed class GetSecretVersionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// If true, all deprecated secret versions are included in the response.
        /// If false, no deprecated secret versions are included in the response. If no value is specified, the default value is `false`.
        /// </summary>
        [Input("includeDeprecated")]
        public Input<bool>? IncludeDeprecated { get; set; }

        /// <summary>
        /// Specifies the secret containing the version that you want to retrieve. You can specify either the ARN or the friendly name of the secret.
        /// </summary>
        [Input("secretId", required: true)]
        public Input<string> SecretId { get; set; } = null!;

        public GetSecretVersionsInvokeArgs()
        {
        }
        public static new GetSecretVersionsInvokeArgs Empty => new GetSecretVersionsInvokeArgs();
    }


    [OutputType]
    public sealed class GetSecretVersionsResult
    {
        /// <summary>
        /// ARN of the secret.
        /// </summary>
        public readonly string Arn;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool? IncludeDeprecated;
        public readonly string Name;
        public readonly string SecretId;
        /// <summary>
        /// List of the versions of the secret. Attributes are specified below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSecretVersionsVersionResult> Versions;

        [OutputConstructor]
        private GetSecretVersionsResult(
            string arn,

            string id,

            bool? includeDeprecated,

            string name,

            string secretId,

            ImmutableArray<Outputs.GetSecretVersionsVersionResult> versions)
        {
            Arn = arn;
            Id = id;
            IncludeDeprecated = includeDeprecated;
            Name = name;
            SecretId = secretId;
            Versions = versions;
        }
    }
}
