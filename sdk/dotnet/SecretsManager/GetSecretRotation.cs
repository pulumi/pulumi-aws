// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.SecretsManager
{
    public static class GetSecretRotation
    {
        public static Task<GetSecretRotationResult> InvokeAsync(GetSecretRotationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSecretRotationResult>("aws:secretsmanager/getSecretRotation:getSecretRotation", args ?? new GetSecretRotationArgs(), options.WithDefaults());

        public static Output<GetSecretRotationResult> Invoke(GetSecretRotationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSecretRotationResult>("aws:secretsmanager/getSecretRotation:getSecretRotation", args ?? new GetSecretRotationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSecretRotationArgs : global::Pulumi.InvokeArgs
    {
        [Input("secretId", required: true)]
        public string SecretId { get; set; } = null!;

        public GetSecretRotationArgs()
        {
        }
        public static new GetSecretRotationArgs Empty => new GetSecretRotationArgs();
    }

    public sealed class GetSecretRotationInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("secretId", required: true)]
        public Input<string> SecretId { get; set; } = null!;

        public GetSecretRotationInvokeArgs()
        {
        }
        public static new GetSecretRotationInvokeArgs Empty => new GetSecretRotationInvokeArgs();
    }


    [OutputType]
    public sealed class GetSecretRotationResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool RotationEnabled;
        public readonly string RotationLambdaArn;
        public readonly ImmutableArray<Outputs.GetSecretRotationRotationRuleResult> RotationRules;
        public readonly string SecretId;

        [OutputConstructor]
        private GetSecretRotationResult(
            string id,

            bool rotationEnabled,

            string rotationLambdaArn,

            ImmutableArray<Outputs.GetSecretRotationRotationRuleResult> rotationRules,

            string secretId)
        {
            Id = id;
            RotationEnabled = rotationEnabled;
            RotationLambdaArn = rotationLambdaArn;
            RotationRules = rotationRules;
            SecretId = secretId;
        }
    }
}
