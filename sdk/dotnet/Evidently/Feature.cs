// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Evidently
{
    [AwsResourceType("aws:evidently/feature:Feature")]
    public partial class Feature : global::Pulumi.CustomResource
    {
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("createdTime")]
        public Output<string> CreatedTime { get; private set; } = null!;

        [Output("defaultVariation")]
        public Output<string> DefaultVariation { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("entityOverrides")]
        public Output<ImmutableDictionary<string, string>?> EntityOverrides { get; private set; } = null!;

        [Output("evaluationRules")]
        public Output<ImmutableArray<Outputs.FeatureEvaluationRule>> EvaluationRules { get; private set; } = null!;

        [Output("evaluationStrategy")]
        public Output<string> EvaluationStrategy { get; private set; } = null!;

        [Output("lastUpdatedTime")]
        public Output<string> LastUpdatedTime { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("valueType")]
        public Output<string> ValueType { get; private set; } = null!;

        [Output("variations")]
        public Output<ImmutableArray<Outputs.FeatureVariation>> Variations { get; private set; } = null!;


        /// <summary>
        /// Create a Feature resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Feature(string name, FeatureArgs args, CustomResourceOptions? options = null)
            : base("aws:evidently/feature:Feature", name, args ?? new FeatureArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Feature(string name, Input<string> id, FeatureState? state = null, CustomResourceOptions? options = null)
            : base("aws:evidently/feature:Feature", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Feature resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Feature Get(string name, Input<string> id, FeatureState? state = null, CustomResourceOptions? options = null)
        {
            return new Feature(name, id, state, options);
        }
    }

    public sealed class FeatureArgs : global::Pulumi.ResourceArgs
    {
        [Input("defaultVariation")]
        public Input<string>? DefaultVariation { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("entityOverrides")]
        private InputMap<string>? _entityOverrides;
        public InputMap<string> EntityOverrides
        {
            get => _entityOverrides ?? (_entityOverrides = new InputMap<string>());
            set => _entityOverrides = value;
        }

        [Input("evaluationStrategy")]
        public Input<string>? EvaluationStrategy { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("variations", required: true)]
        private InputList<Inputs.FeatureVariationArgs>? _variations;
        public InputList<Inputs.FeatureVariationArgs> Variations
        {
            get => _variations ?? (_variations = new InputList<Inputs.FeatureVariationArgs>());
            set => _variations = value;
        }

        public FeatureArgs()
        {
        }
        public static new FeatureArgs Empty => new FeatureArgs();
    }

    public sealed class FeatureState : global::Pulumi.ResourceArgs
    {
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("createdTime")]
        public Input<string>? CreatedTime { get; set; }

        [Input("defaultVariation")]
        public Input<string>? DefaultVariation { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("entityOverrides")]
        private InputMap<string>? _entityOverrides;
        public InputMap<string> EntityOverrides
        {
            get => _entityOverrides ?? (_entityOverrides = new InputMap<string>());
            set => _entityOverrides = value;
        }

        [Input("evaluationRules")]
        private InputList<Inputs.FeatureEvaluationRuleGetArgs>? _evaluationRules;
        public InputList<Inputs.FeatureEvaluationRuleGetArgs> EvaluationRules
        {
            get => _evaluationRules ?? (_evaluationRules = new InputList<Inputs.FeatureEvaluationRuleGetArgs>());
            set => _evaluationRules = value;
        }

        [Input("evaluationStrategy")]
        public Input<string>? EvaluationStrategy { get; set; }

        [Input("lastUpdatedTime")]
        public Input<string>? LastUpdatedTime { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("valueType")]
        public Input<string>? ValueType { get; set; }

        [Input("variations")]
        private InputList<Inputs.FeatureVariationGetArgs>? _variations;
        public InputList<Inputs.FeatureVariationGetArgs> Variations
        {
            get => _variations ?? (_variations = new InputList<Inputs.FeatureVariationGetArgs>());
            set => _variations = value;
        }

        public FeatureState()
        {
        }
        public static new FeatureState Empty => new FeatureState();
    }
}
