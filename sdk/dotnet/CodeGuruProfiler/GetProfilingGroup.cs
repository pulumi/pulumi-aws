// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CodeGuruProfiler
{
    public static class GetProfilingGroup
    {
        /// <summary>
        /// Data source for managing an AWS CodeGuru Profiler Profiling Group.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.CodeGuruProfiler.GetProfilingGroup.Invoke(new()
        ///     {
        ///         Name = "example",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetProfilingGroupResult> InvokeAsync(GetProfilingGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetProfilingGroupResult>("aws:codeguruprofiler/getProfilingGroup:getProfilingGroup", args ?? new GetProfilingGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for managing an AWS CodeGuru Profiler Profiling Group.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.CodeGuruProfiler.GetProfilingGroup.Invoke(new()
        ///     {
        ///         Name = "example",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetProfilingGroupResult> Invoke(GetProfilingGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetProfilingGroupResult>("aws:codeguruprofiler/getProfilingGroup:getProfilingGroup", args ?? new GetProfilingGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProfilingGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the profiling group.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetProfilingGroupArgs()
        {
        }
        public static new GetProfilingGroupArgs Empty => new GetProfilingGroupArgs();
    }

    public sealed class GetProfilingGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the profiling group.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetProfilingGroupInvokeArgs()
        {
        }
        public static new GetProfilingGroupInvokeArgs Empty => new GetProfilingGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetProfilingGroupResult
    {
        /// <summary>
        /// Profiling Group agent orchestration config
        /// </summary>
        public readonly ImmutableArray<ImmutableDictionary<string, object>> AgentOrchestrationConfigs;
        /// <summary>
        /// ARN of the Profiling Group.
        /// </summary>
        public readonly string Arn;
        /// <summary>
        /// The compute platform of the profiling group.
        /// </summary>
        public readonly string ComputePlatform;
        /// <summary>
        /// Timestamp when Profiling Group was created.
        /// </summary>
        public readonly string CreatedAt;
        public readonly string Id;
        public readonly string Name;
        /// <summary>
        /// The status of the Profiling Group.
        /// </summary>
        public readonly ImmutableArray<ImmutableDictionary<string, object>> ProfilingStatuses;
        /// <summary>
        /// Mapping of Key-Value tags for the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// Timestamp when Profiling Group was updated.
        /// </summary>
        public readonly string UpdatedAt;

        [OutputConstructor]
        private GetProfilingGroupResult(
            ImmutableArray<ImmutableDictionary<string, object>> agentOrchestrationConfigs,

            string arn,

            string computePlatform,

            string createdAt,

            string id,

            string name,

            ImmutableArray<ImmutableDictionary<string, object>> profilingStatuses,

            ImmutableDictionary<string, string> tags,

            string updatedAt)
        {
            AgentOrchestrationConfigs = agentOrchestrationConfigs;
            Arn = arn;
            ComputePlatform = computePlatform;
            CreatedAt = createdAt;
            Id = id;
            Name = name;
            ProfilingStatuses = profilingStatuses;
            Tags = tags;
            UpdatedAt = updatedAt;
        }
    }
}
