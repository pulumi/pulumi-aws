// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Cur
{
    [AwsResourceType("aws:cur/reportDefinition:ReportDefinition")]
    public partial class ReportDefinition : global::Pulumi.CustomResource
    {
        [Output("additionalArtifacts")]
        public Output<ImmutableArray<string>> AdditionalArtifacts { get; private set; } = null!;

        [Output("additionalSchemaElements")]
        public Output<ImmutableArray<string>> AdditionalSchemaElements { get; private set; } = null!;

        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("compression")]
        public Output<string> Compression { get; private set; } = null!;

        [Output("format")]
        public Output<string> Format { get; private set; } = null!;

        [Output("refreshClosedReports")]
        public Output<bool?> RefreshClosedReports { get; private set; } = null!;

        [Output("reportName")]
        public Output<string> ReportName { get; private set; } = null!;

        [Output("reportVersioning")]
        public Output<string?> ReportVersioning { get; private set; } = null!;

        [Output("s3Bucket")]
        public Output<string> S3Bucket { get; private set; } = null!;

        [Output("s3Prefix")]
        public Output<string?> S3Prefix { get; private set; } = null!;

        [Output("s3Region")]
        public Output<string> S3Region { get; private set; } = null!;

        [Output("timeUnit")]
        public Output<string> TimeUnit { get; private set; } = null!;


        /// <summary>
        /// Create a ReportDefinition resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ReportDefinition(string name, ReportDefinitionArgs args, CustomResourceOptions? options = null)
            : base("aws:cur/reportDefinition:ReportDefinition", name, args ?? new ReportDefinitionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ReportDefinition(string name, Input<string> id, ReportDefinitionState? state = null, CustomResourceOptions? options = null)
            : base("aws:cur/reportDefinition:ReportDefinition", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ReportDefinition resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ReportDefinition Get(string name, Input<string> id, ReportDefinitionState? state = null, CustomResourceOptions? options = null)
        {
            return new ReportDefinition(name, id, state, options);
        }
    }

    public sealed class ReportDefinitionArgs : global::Pulumi.ResourceArgs
    {
        [Input("additionalArtifacts")]
        private InputList<string>? _additionalArtifacts;
        public InputList<string> AdditionalArtifacts
        {
            get => _additionalArtifacts ?? (_additionalArtifacts = new InputList<string>());
            set => _additionalArtifacts = value;
        }

        [Input("additionalSchemaElements", required: true)]
        private InputList<string>? _additionalSchemaElements;
        public InputList<string> AdditionalSchemaElements
        {
            get => _additionalSchemaElements ?? (_additionalSchemaElements = new InputList<string>());
            set => _additionalSchemaElements = value;
        }

        [Input("compression", required: true)]
        public Input<string> Compression { get; set; } = null!;

        [Input("format", required: true)]
        public Input<string> Format { get; set; } = null!;

        [Input("refreshClosedReports")]
        public Input<bool>? RefreshClosedReports { get; set; }

        [Input("reportName", required: true)]
        public Input<string> ReportName { get; set; } = null!;

        [Input("reportVersioning")]
        public Input<string>? ReportVersioning { get; set; }

        [Input("s3Bucket", required: true)]
        public Input<string> S3Bucket { get; set; } = null!;

        [Input("s3Prefix")]
        public Input<string>? S3Prefix { get; set; }

        [Input("s3Region", required: true)]
        public Input<string> S3Region { get; set; } = null!;

        [Input("timeUnit", required: true)]
        public Input<string> TimeUnit { get; set; } = null!;

        public ReportDefinitionArgs()
        {
        }
        public static new ReportDefinitionArgs Empty => new ReportDefinitionArgs();
    }

    public sealed class ReportDefinitionState : global::Pulumi.ResourceArgs
    {
        [Input("additionalArtifacts")]
        private InputList<string>? _additionalArtifacts;
        public InputList<string> AdditionalArtifacts
        {
            get => _additionalArtifacts ?? (_additionalArtifacts = new InputList<string>());
            set => _additionalArtifacts = value;
        }

        [Input("additionalSchemaElements")]
        private InputList<string>? _additionalSchemaElements;
        public InputList<string> AdditionalSchemaElements
        {
            get => _additionalSchemaElements ?? (_additionalSchemaElements = new InputList<string>());
            set => _additionalSchemaElements = value;
        }

        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("compression")]
        public Input<string>? Compression { get; set; }

        [Input("format")]
        public Input<string>? Format { get; set; }

        [Input("refreshClosedReports")]
        public Input<bool>? RefreshClosedReports { get; set; }

        [Input("reportName")]
        public Input<string>? ReportName { get; set; }

        [Input("reportVersioning")]
        public Input<string>? ReportVersioning { get; set; }

        [Input("s3Bucket")]
        public Input<string>? S3Bucket { get; set; }

        [Input("s3Prefix")]
        public Input<string>? S3Prefix { get; set; }

        [Input("s3Region")]
        public Input<string>? S3Region { get; set; }

        [Input("timeUnit")]
        public Input<string>? TimeUnit { get; set; }

        public ReportDefinitionState()
        {
        }
        public static new ReportDefinitionState Empty => new ReportDefinitionState();
    }
}
