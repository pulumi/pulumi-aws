// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi.Utilities;

namespace Pulumi.Aws.Cur
{
    public static class GetReportDefinition
    {
        /// <summary>
        /// Use this data source to get information on an AWS Cost and Usage Report Definition.
        /// 
        /// &gt; *NOTE:* The AWS Cost and Usage Report service is only available in `us-east-1` currently.
        /// 
        /// &gt; *NOTE:* If AWS Organizations is enabled, only the master account can use this resource.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var reportDefinition = Output.Create(Aws.Cur.GetReportDefinition.InvokeAsync(new Aws.Cur.GetReportDefinitionArgs
        ///         {
        ///             ReportName = "example",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetReportDefinitionResult> InvokeAsync(GetReportDefinitionArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetReportDefinitionResult>("aws:cur/getReportDefinition:getReportDefinition", args ?? new GetReportDefinitionArgs(), options.WithVersion());

        /// <summary>
        /// Use this data source to get information on an AWS Cost and Usage Report Definition.
        /// 
        /// &gt; *NOTE:* The AWS Cost and Usage Report service is only available in `us-east-1` currently.
        /// 
        /// &gt; *NOTE:* If AWS Organizations is enabled, only the master account can use this resource.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var reportDefinition = Output.Create(Aws.Cur.GetReportDefinition.InvokeAsync(new Aws.Cur.GetReportDefinitionArgs
        ///         {
        ///             ReportName = "example",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetReportDefinitionResult> Invoke(GetReportDefinitionInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetReportDefinitionResult>("aws:cur/getReportDefinition:getReportDefinition", args ?? new GetReportDefinitionInvokeArgs(), options.WithVersion());
    }


    public sealed class GetReportDefinitionArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the report definition to match.
        /// </summary>
        [Input("reportName", required: true)]
        public string ReportName { get; set; } = null!;

        public GetReportDefinitionArgs()
        {
        }
    }

    public sealed class GetReportDefinitionInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the report definition to match.
        /// </summary>
        [Input("reportName", required: true)]
        public Input<string> ReportName { get; set; } = null!;

        public GetReportDefinitionInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetReportDefinitionResult
    {
        /// <summary>
        /// A list of additional artifacts.
        /// </summary>
        public readonly ImmutableArray<string> AdditionalArtifacts;
        /// <summary>
        /// A list of schema elements.
        /// </summary>
        public readonly ImmutableArray<string> AdditionalSchemaElements;
        /// <summary>
        /// Preferred format for report.
        /// </summary>
        public readonly string Compression;
        /// <summary>
        /// Preferred compression format for report.
        /// </summary>
        public readonly string Format;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// If true reports are updated after they have been finalized.
        /// </summary>
        public readonly bool RefreshClosedReports;
        public readonly string ReportName;
        /// <summary>
        /// Overwrite the previous version of each report or to deliver the report in addition to the previous versions.
        /// </summary>
        public readonly string ReportVersioning;
        /// <summary>
        /// Name of customer S3 bucket.
        /// </summary>
        public readonly string S3Bucket;
        /// <summary>
        /// Preferred report path prefix.
        /// </summary>
        public readonly string S3Prefix;
        /// <summary>
        /// Region of customer S3 bucket.
        /// </summary>
        public readonly string S3Region;
        /// <summary>
        /// The frequency on which report data are measured and displayed.
        /// </summary>
        public readonly string TimeUnit;

        [OutputConstructor]
        private GetReportDefinitionResult(
            ImmutableArray<string> additionalArtifacts,

            ImmutableArray<string> additionalSchemaElements,

            string compression,

            string format,

            string id,

            bool refreshClosedReports,

            string reportName,

            string reportVersioning,

            string s3Bucket,

            string s3Prefix,

            string s3Region,

            string timeUnit)
        {
            AdditionalArtifacts = additionalArtifacts;
            AdditionalSchemaElements = additionalSchemaElements;
            Compression = compression;
            Format = format;
            Id = id;
            RefreshClosedReports = refreshClosedReports;
            ReportName = reportName;
            ReportVersioning = reportVersioning;
            S3Bucket = s3Bucket;
            S3Prefix = s3Prefix;
            S3Region = s3Region;
            TimeUnit = timeUnit;
        }
    }
}
