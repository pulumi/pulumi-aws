// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Cur
{
    public static class GetReportDefinition
    {
        /// <summary>
        /// Use this data source to get information on an AWS Cost and Usage Report Definition.
        /// 
        /// &gt; *NOTE:* The AWS Cost and Usage Report service is only available in `us-east-1` currently.
        /// 
        /// &gt; *NOTE:* If AWS Organizations is enabled, only the master account can use this resource.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const reportDefinition = aws.cur.getReportDefinition({
        ///     reportName: "example",
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// report_definition = aws.cur.get_report_definition(report_name="example")
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var reportDefinition = Aws.Cur.GetReportDefinition.Invoke(new()
        ///     {
        ///         ReportName = "example",
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/cur"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := cur.LookupReportDefinition(ctx, &amp;cur.LookupReportDefinitionArgs{
        /// 			ReportName: "example",
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.cur.CurFunctions;
        /// import com.pulumi.aws.cur.inputs.GetReportDefinitionArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var reportDefinition = CurFunctions.getReportDefinition(GetReportDefinitionArgs.builder()
        ///             .reportName("example")
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   reportDefinition:
        ///     fn::invoke:
        ///       Function: aws:cur:getReportDefinition
        ///       Arguments:
        ///         reportName: example
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetReportDefinitionResult> InvokeAsync(GetReportDefinitionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetReportDefinitionResult>("aws:cur/getReportDefinition:getReportDefinition", args ?? new GetReportDefinitionArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get information on an AWS Cost and Usage Report Definition.
        /// 
        /// &gt; *NOTE:* The AWS Cost and Usage Report service is only available in `us-east-1` currently.
        /// 
        /// &gt; *NOTE:* If AWS Organizations is enabled, only the master account can use this resource.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const reportDefinition = aws.cur.getReportDefinition({
        ///     reportName: "example",
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// report_definition = aws.cur.get_report_definition(report_name="example")
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var reportDefinition = Aws.Cur.GetReportDefinition.Invoke(new()
        ///     {
        ///         ReportName = "example",
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/cur"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := cur.LookupReportDefinition(ctx, &amp;cur.LookupReportDefinitionArgs{
        /// 			ReportName: "example",
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.cur.CurFunctions;
        /// import com.pulumi.aws.cur.inputs.GetReportDefinitionArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var reportDefinition = CurFunctions.getReportDefinition(GetReportDefinitionArgs.builder()
        ///             .reportName("example")
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   reportDefinition:
        ///     fn::invoke:
        ///       Function: aws:cur:getReportDefinition
        ///       Arguments:
        ///         reportName: example
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetReportDefinitionResult> Invoke(GetReportDefinitionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetReportDefinitionResult>("aws:cur/getReportDefinition:getReportDefinition", args ?? new GetReportDefinitionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetReportDefinitionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the report definition to match.
        /// </summary>
        [Input("reportName", required: true)]
        public string ReportName { get; set; } = null!;

        public GetReportDefinitionArgs()
        {
        }
        public static new GetReportDefinitionArgs Empty => new GetReportDefinitionArgs();
    }

    public sealed class GetReportDefinitionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the report definition to match.
        /// </summary>
        [Input("reportName", required: true)]
        public Input<string> ReportName { get; set; } = null!;

        public GetReportDefinitionInvokeArgs()
        {
        }
        public static new GetReportDefinitionInvokeArgs Empty => new GetReportDefinitionInvokeArgs();
    }


    [OutputType]
    public sealed class GetReportDefinitionResult
    {
        /// <summary>
        /// A list of additional artifacts.
        /// </summary>
        public readonly ImmutableArray<string> AdditionalArtifacts;
        /// <summary>
        /// A list of schema elements.
        /// </summary>
        public readonly ImmutableArray<string> AdditionalSchemaElements;
        /// <summary>
        /// Preferred format for report.
        /// </summary>
        public readonly string Compression;
        /// <summary>
        /// Preferred compression format for report.
        /// </summary>
        public readonly string Format;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// If true reports are updated after they have been finalized.
        /// </summary>
        public readonly bool RefreshClosedReports;
        public readonly string ReportName;
        /// <summary>
        /// Overwrite the previous version of each report or to deliver the report in addition to the previous versions.
        /// </summary>
        public readonly string ReportVersioning;
        /// <summary>
        /// Name of customer S3 bucket.
        /// </summary>
        public readonly string S3Bucket;
        /// <summary>
        /// Preferred report path prefix.
        /// </summary>
        public readonly string S3Prefix;
        /// <summary>
        /// Region of customer S3 bucket.
        /// </summary>
        public readonly string S3Region;
        /// <summary>
        /// Frequency on which report data are measured and displayed.
        /// </summary>
        public readonly string TimeUnit;

        [OutputConstructor]
        private GetReportDefinitionResult(
            ImmutableArray<string> additionalArtifacts,

            ImmutableArray<string> additionalSchemaElements,

            string compression,

            string format,

            string id,

            bool refreshClosedReports,

            string reportName,

            string reportVersioning,

            string s3Bucket,

            string s3Prefix,

            string s3Region,

            string timeUnit)
        {
            AdditionalArtifacts = additionalArtifacts;
            AdditionalSchemaElements = additionalSchemaElements;
            Compression = compression;
            Format = format;
            Id = id;
            RefreshClosedReports = refreshClosedReports;
            ReportName = reportName;
            ReportVersioning = reportVersioning;
            S3Bucket = s3Bucket;
            S3Prefix = s3Prefix;
            S3Region = s3Region;
            TimeUnit = timeUnit;
        }
    }
}
