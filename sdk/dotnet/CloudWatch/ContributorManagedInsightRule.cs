// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CloudWatch
{
    /// <summary>
    /// Resource for managing an AWS CloudWatch Contributor Managed Insight Rule.
    /// 
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import CloudWatch Contributor Managed Insight Rule using the `resource_arn`. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:cloudwatch/contributorManagedInsightRule:ContributorManagedInsightRule example contributor_managed_insight_rule-id-12345678
    /// ```
    /// </summary>
    [AwsResourceType("aws:cloudwatch/contributorManagedInsightRule:ContributorManagedInsightRule")]
    public partial class ContributorManagedInsightRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ARN of the Contributor Managed Insight Rule.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// ARN of an Amazon Web Services resource that has managed Contributor Insights rules.
        /// </summary>
        [Output("resourceArn")]
        public Output<string> ResourceArn { get; private set; } = null!;

        [Output("ruleName")]
        public Output<string> RuleName { get; private set; } = null!;

        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        /// <summary>
        /// Template name for the managed Contributor Insights rule, as returned by ListManagedInsightRules.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Output("templateName")]
        public Output<string> TemplateName { get; private set; } = null!;


        /// <summary>
        /// Create a ContributorManagedInsightRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ContributorManagedInsightRule(string name, ContributorManagedInsightRuleArgs args, CustomResourceOptions? options = null)
            : base("aws:cloudwatch/contributorManagedInsightRule:ContributorManagedInsightRule", name, args ?? new ContributorManagedInsightRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ContributorManagedInsightRule(string name, Input<string> id, ContributorManagedInsightRuleState? state = null, CustomResourceOptions? options = null)
            : base("aws:cloudwatch/contributorManagedInsightRule:ContributorManagedInsightRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ContributorManagedInsightRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ContributorManagedInsightRule Get(string name, Input<string> id, ContributorManagedInsightRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new ContributorManagedInsightRule(name, id, state, options);
        }
    }

    public sealed class ContributorManagedInsightRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ARN of an Amazon Web Services resource that has managed Contributor Insights rules.
        /// </summary>
        [Input("resourceArn", required: true)]
        public Input<string> ResourceArn { get; set; } = null!;

        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Template name for the managed Contributor Insights rule, as returned by ListManagedInsightRules.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("templateName", required: true)]
        public Input<string> TemplateName { get; set; } = null!;

        public ContributorManagedInsightRuleArgs()
        {
        }
        public static new ContributorManagedInsightRuleArgs Empty => new ContributorManagedInsightRuleArgs();
    }

    public sealed class ContributorManagedInsightRuleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ARN of the Contributor Managed Insight Rule.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// ARN of an Amazon Web Services resource that has managed Contributor Insights rules.
        /// </summary>
        [Input("resourceArn")]
        public Input<string>? ResourceArn { get; set; }

        [Input("ruleName")]
        public Input<string>? RuleName { get; set; }

        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        [Obsolete(@"Please use `tags` instead.")]
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        /// <summary>
        /// Template name for the managed Contributor Insights rule, as returned by ListManagedInsightRules.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("templateName")]
        public Input<string>? TemplateName { get; set; }

        public ContributorManagedInsightRuleState()
        {
        }
        public static new ContributorManagedInsightRuleState Empty => new ContributorManagedInsightRuleState();
    }
}
