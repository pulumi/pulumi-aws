// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CloudWatch.Outputs
{

    [OutputType]
    public sealed class EventTargetEcsTarget
    {
        public readonly ImmutableArray<Outputs.EventTargetEcsTargetCapacityProviderStrategy> CapacityProviderStrategies;
        public readonly bool? EnableEcsManagedTags;
        public readonly bool? EnableExecuteCommand;
        public readonly string? Group;
        public readonly string? LaunchType;
        public readonly Outputs.EventTargetEcsTargetNetworkConfiguration? NetworkConfiguration;
        public readonly ImmutableArray<Outputs.EventTargetEcsTargetPlacementConstraint> PlacementConstraints;
        public readonly string? PlatformVersion;
        public readonly string? PropagateTags;
        public readonly ImmutableDictionary<string, string>? Tags;
        public readonly int? TaskCount;
        public readonly string TaskDefinitionArn;

        [OutputConstructor]
        private EventTargetEcsTarget(
            ImmutableArray<Outputs.EventTargetEcsTargetCapacityProviderStrategy> capacityProviderStrategies,

            bool? enableEcsManagedTags,

            bool? enableExecuteCommand,

            string? group,

            string? launchType,

            Outputs.EventTargetEcsTargetNetworkConfiguration? networkConfiguration,

            ImmutableArray<Outputs.EventTargetEcsTargetPlacementConstraint> placementConstraints,

            string? platformVersion,

            string? propagateTags,

            ImmutableDictionary<string, string>? tags,

            int? taskCount,

            string taskDefinitionArn)
        {
            CapacityProviderStrategies = capacityProviderStrategies;
            EnableEcsManagedTags = enableEcsManagedTags;
            EnableExecuteCommand = enableExecuteCommand;
            Group = group;
            LaunchType = launchType;
            NetworkConfiguration = networkConfiguration;
            PlacementConstraints = placementConstraints;
            PlatformVersion = platformVersion;
            PropagateTags = propagateTags;
            Tags = tags;
            TaskCount = taskCount;
            TaskDefinitionArn = taskDefinitionArn;
        }
    }
}
