// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CloudWatch.Outputs
{

    [OutputType]
    public sealed class MetricAlarmMetricQuery
    {
        /// <summary>
        /// The ID of the account where the metrics are located, if this is a cross-account alarm.
        /// </summary>
        public readonly string? AccountId;
        /// <summary>
        /// A Metrics Insights query or a metric math expression to be evaluated on the returned data.
        /// For details about Metrics Insights queries, see [Metrics Insights query components and syntax](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch-metrics-insights-querylanguage) in the AWS documentation.
        /// For details about metric math expressions, see [Metric Math Syntax and Functions](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/using-metric-math.html#metric-math-syntax) in the AWS documentation.
        /// </summary>
        public readonly string? Expression;
        /// <summary>
        /// A short name used to tie this object to the results in the response. If you are performing math expressions on this set of data, this name represents that data and can serve as a variable in the mathematical expression. The valid characters are letters, numbers, and underscore. The first character must be a lowercase letter.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A human-readable label for this metric or expression. This is especially useful if this is an expression, so that you know what the value represents.
        /// </summary>
        public readonly string? Label;
        /// <summary>
        /// The metric to be returned, along with statistics, period, and units. Use this parameter only if this object is retrieving a metric and not performing a math expression on returned data.
        /// </summary>
        public readonly Outputs.MetricAlarmMetricQueryMetric? Metric;
        /// <summary>
        /// Granularity in seconds of returned data points.
        /// For metrics with regular resolution, valid values are any multiple of `60`.
        /// For high-resolution metrics, valid values are `1`, `5`, `10`, `20`, `30`, or any multiple of `60`.
        /// </summary>
        public readonly int? Period;
        /// <summary>
        /// Specify exactly one `MetricQuery` to be `True` to use that `MetricQuery` result as the alarm.
        /// 
        /// &gt; **NOTE:**  You must specify either `Metric` or `Expression`. Not both.
        /// </summary>
        public readonly bool? ReturnData;

        [OutputConstructor]
        private MetricAlarmMetricQuery(
            string? accountId,

            string? expression,

            string id,

            string? label,

            Outputs.MetricAlarmMetricQueryMetric? metric,

            int? period,

            bool? returnData)
        {
            AccountId = accountId;
            Expression = expression;
            Id = id;
            Label = label;
            Metric = metric;
            Period = period;
            ReturnData = returnData;
        }
    }
}
