// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CloudWatch
{
    /// <summary>
    /// Resource for managing an AWS CloudWatch Logs Delivery Destination Policy.
    /// 
    /// ## Example Usage
    /// 
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.CloudWatch.LogDeliveryDestinationPolicy("example", new()
    ///     {
    ///         DeliveryDestinationName = exampleAwsCloudwatchLogDeliveryDestination.Name,
    ///         DeliveryDestinationPolicy = exampleAwsIamPolicyDocument.Json,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import CloudWatch Logs Delivery Destination Policy using the `delivery_destination_name`. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:cloudwatch/logDeliveryDestinationPolicy:LogDeliveryDestinationPolicy example example
    /// ```
    /// </summary>
    [AwsResourceType("aws:cloudwatch/logDeliveryDestinationPolicy:LogDeliveryDestinationPolicy")]
    public partial class LogDeliveryDestinationPolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the delivery destination to assign this policy to.
        /// </summary>
        [Output("deliveryDestinationName")]
        public Output<string> DeliveryDestinationName { get; private set; } = null!;

        /// <summary>
        /// The contents of the policy.
        /// </summary>
        [Output("deliveryDestinationPolicy")]
        public Output<string> DeliveryDestinationPolicy { get; private set; } = null!;


        /// <summary>
        /// Create a LogDeliveryDestinationPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LogDeliveryDestinationPolicy(string name, LogDeliveryDestinationPolicyArgs args, CustomResourceOptions? options = null)
            : base("aws:cloudwatch/logDeliveryDestinationPolicy:LogDeliveryDestinationPolicy", name, args ?? new LogDeliveryDestinationPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LogDeliveryDestinationPolicy(string name, Input<string> id, LogDeliveryDestinationPolicyState? state = null, CustomResourceOptions? options = null)
            : base("aws:cloudwatch/logDeliveryDestinationPolicy:LogDeliveryDestinationPolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LogDeliveryDestinationPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LogDeliveryDestinationPolicy Get(string name, Input<string> id, LogDeliveryDestinationPolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new LogDeliveryDestinationPolicy(name, id, state, options);
        }
    }

    public sealed class LogDeliveryDestinationPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the delivery destination to assign this policy to.
        /// </summary>
        [Input("deliveryDestinationName", required: true)]
        public Input<string> DeliveryDestinationName { get; set; } = null!;

        /// <summary>
        /// The contents of the policy.
        /// </summary>
        [Input("deliveryDestinationPolicy", required: true)]
        public Input<string> DeliveryDestinationPolicy { get; set; } = null!;

        public LogDeliveryDestinationPolicyArgs()
        {
        }
        public static new LogDeliveryDestinationPolicyArgs Empty => new LogDeliveryDestinationPolicyArgs();
    }

    public sealed class LogDeliveryDestinationPolicyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the delivery destination to assign this policy to.
        /// </summary>
        [Input("deliveryDestinationName")]
        public Input<string>? DeliveryDestinationName { get; set; }

        /// <summary>
        /// The contents of the policy.
        /// </summary>
        [Input("deliveryDestinationPolicy")]
        public Input<string>? DeliveryDestinationPolicy { get; set; }

        public LogDeliveryDestinationPolicyState()
        {
        }
        public static new LogDeliveryDestinationPolicyState Empty => new LogDeliveryDestinationPolicyState();
    }
}
