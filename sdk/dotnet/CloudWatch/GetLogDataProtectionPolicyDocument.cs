// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CloudWatch
{
    public static class GetLogDataProtectionPolicyDocument
    {
        public static Task<GetLogDataProtectionPolicyDocumentResult> InvokeAsync(GetLogDataProtectionPolicyDocumentArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLogDataProtectionPolicyDocumentResult>("aws:cloudwatch/getLogDataProtectionPolicyDocument:getLogDataProtectionPolicyDocument", args ?? new GetLogDataProtectionPolicyDocumentArgs(), options.WithDefaults());

        public static Output<GetLogDataProtectionPolicyDocumentResult> Invoke(GetLogDataProtectionPolicyDocumentInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLogDataProtectionPolicyDocumentResult>("aws:cloudwatch/getLogDataProtectionPolicyDocument:getLogDataProtectionPolicyDocument", args ?? new GetLogDataProtectionPolicyDocumentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLogDataProtectionPolicyDocumentArgs : global::Pulumi.InvokeArgs
    {
        [Input("description")]
        public string? Description { get; set; }

        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("statements", required: true)]
        private List<Inputs.GetLogDataProtectionPolicyDocumentStatementArgs>? _statements;
        public List<Inputs.GetLogDataProtectionPolicyDocumentStatementArgs> Statements
        {
            get => _statements ?? (_statements = new List<Inputs.GetLogDataProtectionPolicyDocumentStatementArgs>());
            set => _statements = value;
        }

        [Input("version")]
        public string? Version { get; set; }

        public GetLogDataProtectionPolicyDocumentArgs()
        {
        }
        public static new GetLogDataProtectionPolicyDocumentArgs Empty => new GetLogDataProtectionPolicyDocumentArgs();
    }

    public sealed class GetLogDataProtectionPolicyDocumentInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("statements", required: true)]
        private InputList<Inputs.GetLogDataProtectionPolicyDocumentStatementInputArgs>? _statements;
        public InputList<Inputs.GetLogDataProtectionPolicyDocumentStatementInputArgs> Statements
        {
            get => _statements ?? (_statements = new InputList<Inputs.GetLogDataProtectionPolicyDocumentStatementInputArgs>());
            set => _statements = value;
        }

        [Input("version")]
        public Input<string>? Version { get; set; }

        public GetLogDataProtectionPolicyDocumentInvokeArgs()
        {
        }
        public static new GetLogDataProtectionPolicyDocumentInvokeArgs Empty => new GetLogDataProtectionPolicyDocumentInvokeArgs();
    }


    [OutputType]
    public sealed class GetLogDataProtectionPolicyDocumentResult
    {
        public readonly string? Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Json;
        public readonly string Name;
        public readonly ImmutableArray<Outputs.GetLogDataProtectionPolicyDocumentStatementResult> Statements;
        public readonly string? Version;

        [OutputConstructor]
        private GetLogDataProtectionPolicyDocumentResult(
            string? description,

            string id,

            string json,

            string name,

            ImmutableArray<Outputs.GetLogDataProtectionPolicyDocumentStatementResult> statements,

            string? version)
        {
            Description = description;
            Id = id;
            Json = json;
            Name = name;
            Statements = statements;
            Version = version;
        }
    }
}
