// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CloudWatch
{
    public static class GetLogGroups
    {
        /// <summary>
        /// Use this data source to get a list of AWS Cloudwatch Log Groups
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.CloudWatch.GetLogGroups.Invoke(new()
        ///     {
        ///         LogGroupNamePrefix = "/MyImportantLogs",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetLogGroupsResult> InvokeAsync(GetLogGroupsArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetLogGroupsResult>("aws:cloudwatch/getLogGroups:getLogGroups", args ?? new GetLogGroupsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get a list of AWS Cloudwatch Log Groups
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.CloudWatch.GetLogGroups.Invoke(new()
        ///     {
        ///         LogGroupNamePrefix = "/MyImportantLogs",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetLogGroupsResult> Invoke(GetLogGroupsInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetLogGroupsResult>("aws:cloudwatch/getLogGroups:getLogGroups", args ?? new GetLogGroupsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLogGroupsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Group prefix of the Cloudwatch log groups to list
        /// </summary>
        [Input("logGroupNamePrefix")]
        public string? LogGroupNamePrefix { get; set; }

        public GetLogGroupsArgs()
        {
        }
        public static new GetLogGroupsArgs Empty => new GetLogGroupsArgs();
    }

    public sealed class GetLogGroupsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Group prefix of the Cloudwatch log groups to list
        /// </summary>
        [Input("logGroupNamePrefix")]
        public Input<string>? LogGroupNamePrefix { get; set; }

        public GetLogGroupsInvokeArgs()
        {
        }
        public static new GetLogGroupsInvokeArgs Empty => new GetLogGroupsInvokeArgs();
    }


    [OutputType]
    public sealed class GetLogGroupsResult
    {
        /// <summary>
        /// Set of ARNs of the Cloudwatch log groups
        /// </summary>
        public readonly ImmutableArray<string> Arns;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? LogGroupNamePrefix;
        /// <summary>
        /// Set of names of the Cloudwatch log groups
        /// </summary>
        public readonly ImmutableArray<string> LogGroupNames;

        [OutputConstructor]
        private GetLogGroupsResult(
            ImmutableArray<string> arns,

            string id,

            string? logGroupNamePrefix,

            ImmutableArray<string> logGroupNames)
        {
            Arns = arns;
            Id = id;
            LogGroupNamePrefix = logGroupNamePrefix;
            LogGroupNames = logGroupNames;
        }
    }
}
