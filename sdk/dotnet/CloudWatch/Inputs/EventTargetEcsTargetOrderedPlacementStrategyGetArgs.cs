// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CloudWatch.Inputs
{

    public sealed class EventTargetEcsTargetOrderedPlacementStrategyGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The field to apply the placement strategy against. For the `Spread` placement strategy, valid values are `instanceId` (or `Host`, which has the same effect), or any platform or custom attribute that is applied to a container instance, such as `attribute:ecs.availability-zone`. For the `Binpack` placement strategy, valid values are `Cpu` and `Memory`. For the `Random` placement strategy, this field is not used. For more information, see [Amazon ECS task placement strategies](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-strategies.html).
        /// </summary>
        [Input("field")]
        public Input<string>? Field { get; set; }

        /// <summary>
        /// Type of placement strategy. The only valid values at this time are `Binpack`, `Random` and `Spread`.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public EventTargetEcsTargetOrderedPlacementStrategyGetArgs()
        {
        }
        public static new EventTargetEcsTargetOrderedPlacementStrategyGetArgs Empty => new EventTargetEcsTargetOrderedPlacementStrategyGetArgs();
    }
}
