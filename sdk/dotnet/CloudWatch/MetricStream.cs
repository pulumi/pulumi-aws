// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CloudWatch
{
    [AwsResourceType("aws:cloudwatch/metricStream:MetricStream")]
    public partial class MetricStream : global::Pulumi.CustomResource
    {
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("creationDate")]
        public Output<string> CreationDate { get; private set; } = null!;

        [Output("excludeFilters")]
        public Output<ImmutableArray<Outputs.MetricStreamExcludeFilter>> ExcludeFilters { get; private set; } = null!;

        [Output("firehoseArn")]
        public Output<string> FirehoseArn { get; private set; } = null!;

        [Output("includeFilters")]
        public Output<ImmutableArray<Outputs.MetricStreamIncludeFilter>> IncludeFilters { get; private set; } = null!;

        [Output("lastUpdateDate")]
        public Output<string> LastUpdateDate { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("namePrefix")]
        public Output<string> NamePrefix { get; private set; } = null!;

        [Output("outputFormat")]
        public Output<string> OutputFormat { get; private set; } = null!;

        [Output("roleArn")]
        public Output<string> RoleArn { get; private set; } = null!;

        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        [Output("statisticsConfigurations")]
        public Output<ImmutableArray<Outputs.MetricStreamStatisticsConfiguration>> StatisticsConfigurations { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;


        /// <summary>
        /// Create a MetricStream resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MetricStream(string name, MetricStreamArgs args, CustomResourceOptions? options = null)
            : base("aws:cloudwatch/metricStream:MetricStream", name, args ?? new MetricStreamArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MetricStream(string name, Input<string> id, MetricStreamState? state = null, CustomResourceOptions? options = null)
            : base("aws:cloudwatch/metricStream:MetricStream", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MetricStream resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MetricStream Get(string name, Input<string> id, MetricStreamState? state = null, CustomResourceOptions? options = null)
        {
            return new MetricStream(name, id, state, options);
        }
    }

    public sealed class MetricStreamArgs : global::Pulumi.ResourceArgs
    {
        [Input("excludeFilters")]
        private InputList<Inputs.MetricStreamExcludeFilterArgs>? _excludeFilters;
        public InputList<Inputs.MetricStreamExcludeFilterArgs> ExcludeFilters
        {
            get => _excludeFilters ?? (_excludeFilters = new InputList<Inputs.MetricStreamExcludeFilterArgs>());
            set => _excludeFilters = value;
        }

        [Input("firehoseArn", required: true)]
        public Input<string> FirehoseArn { get; set; } = null!;

        [Input("includeFilters")]
        private InputList<Inputs.MetricStreamIncludeFilterArgs>? _includeFilters;
        public InputList<Inputs.MetricStreamIncludeFilterArgs> IncludeFilters
        {
            get => _includeFilters ?? (_includeFilters = new InputList<Inputs.MetricStreamIncludeFilterArgs>());
            set => _includeFilters = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("namePrefix")]
        public Input<string>? NamePrefix { get; set; }

        [Input("outputFormat", required: true)]
        public Input<string> OutputFormat { get; set; } = null!;

        [Input("roleArn", required: true)]
        public Input<string> RoleArn { get; set; } = null!;

        [Input("statisticsConfigurations")]
        private InputList<Inputs.MetricStreamStatisticsConfigurationArgs>? _statisticsConfigurations;
        public InputList<Inputs.MetricStreamStatisticsConfigurationArgs> StatisticsConfigurations
        {
            get => _statisticsConfigurations ?? (_statisticsConfigurations = new InputList<Inputs.MetricStreamStatisticsConfigurationArgs>());
            set => _statisticsConfigurations = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public MetricStreamArgs()
        {
        }
        public static new MetricStreamArgs Empty => new MetricStreamArgs();
    }

    public sealed class MetricStreamState : global::Pulumi.ResourceArgs
    {
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("creationDate")]
        public Input<string>? CreationDate { get; set; }

        [Input("excludeFilters")]
        private InputList<Inputs.MetricStreamExcludeFilterGetArgs>? _excludeFilters;
        public InputList<Inputs.MetricStreamExcludeFilterGetArgs> ExcludeFilters
        {
            get => _excludeFilters ?? (_excludeFilters = new InputList<Inputs.MetricStreamExcludeFilterGetArgs>());
            set => _excludeFilters = value;
        }

        [Input("firehoseArn")]
        public Input<string>? FirehoseArn { get; set; }

        [Input("includeFilters")]
        private InputList<Inputs.MetricStreamIncludeFilterGetArgs>? _includeFilters;
        public InputList<Inputs.MetricStreamIncludeFilterGetArgs> IncludeFilters
        {
            get => _includeFilters ?? (_includeFilters = new InputList<Inputs.MetricStreamIncludeFilterGetArgs>());
            set => _includeFilters = value;
        }

        [Input("lastUpdateDate")]
        public Input<string>? LastUpdateDate { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("namePrefix")]
        public Input<string>? NamePrefix { get; set; }

        [Input("outputFormat")]
        public Input<string>? OutputFormat { get; set; }

        [Input("roleArn")]
        public Input<string>? RoleArn { get; set; }

        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("statisticsConfigurations")]
        private InputList<Inputs.MetricStreamStatisticsConfigurationGetArgs>? _statisticsConfigurations;
        public InputList<Inputs.MetricStreamStatisticsConfigurationGetArgs> StatisticsConfigurations
        {
            get => _statisticsConfigurations ?? (_statisticsConfigurations = new InputList<Inputs.MetricStreamStatisticsConfigurationGetArgs>());
            set => _statisticsConfigurations = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        public MetricStreamState()
        {
        }
        public static new MetricStreamState Empty => new MetricStreamState();
    }
}
