// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CloudWatch
{
    public static class GetContributorManagedInsightRules
    {
        /// <summary>
        /// Data source for managing an AWS CloudWatch Contributor Managed Insight Rules.
        /// 
        /// ## Example Usage
        /// 
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.CloudWatch.GetContributorManagedInsightRules.Invoke(new()
        ///     {
        ///         ResourceArn = "arn:aws:ec2:us-west-2:123456789012:resource-name/resourceid",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetContributorManagedInsightRulesResult> InvokeAsync(GetContributorManagedInsightRulesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetContributorManagedInsightRulesResult>("aws:cloudwatch/getContributorManagedInsightRules:getContributorManagedInsightRules", args ?? new GetContributorManagedInsightRulesArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for managing an AWS CloudWatch Contributor Managed Insight Rules.
        /// 
        /// ## Example Usage
        /// 
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.CloudWatch.GetContributorManagedInsightRules.Invoke(new()
        ///     {
        ///         ResourceArn = "arn:aws:ec2:us-west-2:123456789012:resource-name/resourceid",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetContributorManagedInsightRulesResult> Invoke(GetContributorManagedInsightRulesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetContributorManagedInsightRulesResult>("aws:cloudwatch/getContributorManagedInsightRules:getContributorManagedInsightRules", args ?? new GetContributorManagedInsightRulesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for managing an AWS CloudWatch Contributor Managed Insight Rules.
        /// 
        /// ## Example Usage
        /// 
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.CloudWatch.GetContributorManagedInsightRules.Invoke(new()
        ///     {
        ///         ResourceArn = "arn:aws:ec2:us-west-2:123456789012:resource-name/resourceid",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetContributorManagedInsightRulesResult> Invoke(GetContributorManagedInsightRulesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetContributorManagedInsightRulesResult>("aws:cloudwatch/getContributorManagedInsightRules:getContributorManagedInsightRules", args ?? new GetContributorManagedInsightRulesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetContributorManagedInsightRulesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ARN of an Amazon Web Services resource that has managed Contributor Insights rules.
        /// </summary>
        [Input("resourceArn", required: true)]
        public string ResourceArn { get; set; } = null!;

        public GetContributorManagedInsightRulesArgs()
        {
        }
        public static new GetContributorManagedInsightRulesArgs Empty => new GetContributorManagedInsightRulesArgs();
    }

    public sealed class GetContributorManagedInsightRulesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ARN of an Amazon Web Services resource that has managed Contributor Insights rules.
        /// </summary>
        [Input("resourceArn", required: true)]
        public Input<string> ResourceArn { get; set; } = null!;

        public GetContributorManagedInsightRulesInvokeArgs()
        {
        }
        public static new GetContributorManagedInsightRulesInvokeArgs Empty => new GetContributorManagedInsightRulesInvokeArgs();
    }


    [OutputType]
    public sealed class GetContributorManagedInsightRulesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Managed rules that are available for the specified Amazon Web Services resource. See `managed_rules reference` below for details.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetContributorManagedInsightRulesManagedRuleResult> ManagedRules;
        /// <summary>
        /// If a managed rule is enabled, this is the ARN for the related Amazon Web Services resource.
        /// </summary>
        public readonly string ResourceArn;

        [OutputConstructor]
        private GetContributorManagedInsightRulesResult(
            string id,

            ImmutableArray<Outputs.GetContributorManagedInsightRulesManagedRuleResult> managedRules,

            string resourceArn)
        {
            Id = id;
            ManagedRules = managedRules;
            ResourceArn = resourceArn;
        }
    }
}
