// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CloudWatch
{
    public static class GetEventBuses
    {
        /// <summary>
        /// Data source for managing an AWS EventBridge Event Buses.
        /// 
        /// ## Example Usage
        /// 
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.CloudWatch.GetEventBuses.Invoke(new()
        ///     {
        ///         NamePrefix = "test",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetEventBusesResult> InvokeAsync(GetEventBusesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEventBusesResult>("aws:cloudwatch/getEventBuses:getEventBuses", args ?? new GetEventBusesArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for managing an AWS EventBridge Event Buses.
        /// 
        /// ## Example Usage
        /// 
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.CloudWatch.GetEventBuses.Invoke(new()
        ///     {
        ///         NamePrefix = "test",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetEventBusesResult> Invoke(GetEventBusesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEventBusesResult>("aws:cloudwatch/getEventBuses:getEventBuses", args ?? new GetEventBusesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for managing an AWS EventBridge Event Buses.
        /// 
        /// ## Example Usage
        /// 
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.CloudWatch.GetEventBuses.Invoke(new()
        ///     {
        ///         NamePrefix = "test",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetEventBusesResult> Invoke(GetEventBusesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetEventBusesResult>("aws:cloudwatch/getEventBuses:getEventBuses", args ?? new GetEventBusesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEventBusesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specifying this limits the results to only those event buses with names that start with the specified prefix.
        /// </summary>
        [Input("namePrefix")]
        public string? NamePrefix { get; set; }

        public GetEventBusesArgs()
        {
        }
        public static new GetEventBusesArgs Empty => new GetEventBusesArgs();
    }

    public sealed class GetEventBusesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specifying this limits the results to only those event buses with names that start with the specified prefix.
        /// </summary>
        [Input("namePrefix")]
        public Input<string>? NamePrefix { get; set; }

        public GetEventBusesInvokeArgs()
        {
        }
        public static new GetEventBusesInvokeArgs Empty => new GetEventBusesInvokeArgs();
    }


    [OutputType]
    public sealed class GetEventBusesResult
    {
        /// <summary>
        /// This list of event buses.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetEventBusesEventBusResult> EventBuses;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? NamePrefix;

        [OutputConstructor]
        private GetEventBusesResult(
            ImmutableArray<Outputs.GetEventBusesEventBusResult> eventBuses,

            string id,

            string? namePrefix)
        {
            EventBuses = eventBuses;
            Id = id;
            NamePrefix = namePrefix;
        }
    }
}
