// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CloudWatch
{
    public static class GetEventSource
    {
        public static Task<GetEventSourceResult> InvokeAsync(GetEventSourceArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEventSourceResult>("aws:cloudwatch/getEventSource:getEventSource", args ?? new GetEventSourceArgs(), options.WithDefaults());

        public static Output<GetEventSourceResult> Invoke(GetEventSourceInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEventSourceResult>("aws:cloudwatch/getEventSource:getEventSource", args ?? new GetEventSourceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEventSourceArgs : global::Pulumi.InvokeArgs
    {
        [Input("namePrefix")]
        public string? NamePrefix { get; set; }

        public GetEventSourceArgs()
        {
        }
        public static new GetEventSourceArgs Empty => new GetEventSourceArgs();
    }

    public sealed class GetEventSourceInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("namePrefix")]
        public Input<string>? NamePrefix { get; set; }

        public GetEventSourceInvokeArgs()
        {
        }
        public static new GetEventSourceInvokeArgs Empty => new GetEventSourceInvokeArgs();
    }


    [OutputType]
    public sealed class GetEventSourceResult
    {
        public readonly string Arn;
        public readonly string CreatedBy;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly string? NamePrefix;
        public readonly string State;

        [OutputConstructor]
        private GetEventSourceResult(
            string arn,

            string createdBy,

            string id,

            string name,

            string? namePrefix,

            string state)
        {
            Arn = arn;
            CreatedBy = createdBy;
            Id = id;
            Name = name;
            NamePrefix = namePrefix;
            State = state;
        }
    }
}
