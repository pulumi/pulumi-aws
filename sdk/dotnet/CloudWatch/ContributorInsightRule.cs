// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CloudWatch
{
    /// <summary>
    /// Resource for managing an AWS CloudWatch Contributor Insight Rule.
    /// 
    /// ## Example Usage
    /// 
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var test = new Aws.CloudWatch.ContributorInsightRule("test", new()
    ///     {
    ///         RuleName = "testing",
    ///         RuleState = "ENABLED",
    ///         RuleDefinition = "{\"Schema\":{\"Name\":\"CloudWatchLogRule\",\"Version\":1},\"AggregateOn\":\"Count\",\"Contribution\":{\"Filters\":[{\"In\":[\"some-keyword\"],\"Match\":\"$.message\"}],\"Keys\":[\"$.country\"]},\"LogFormat\":\"JSON\",\"LogGroupNames\":[\"/aws/lambda/api-prod\"]}",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import CloudWatch Contributor Insight Rule using the `rule_name`. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:cloudwatch/contributorInsightRule:ContributorInsightRule example contributor_insight_rule-name
    /// ```
    /// </summary>
    [AwsResourceType("aws:cloudwatch/contributorInsightRule:ContributorInsightRule")]
    public partial class ContributorInsightRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ARN of the Contributor Insight Rule.
        /// </summary>
        [Output("resourceArn")]
        public Output<string> ResourceArn { get; private set; } = null!;

        /// <summary>
        /// Definition of the rule, as a JSON object. For details on the valid syntax, see [Contributor Insights Rule Syntax](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContributorInsights-RuleSyntax.html).
        /// </summary>
        [Output("ruleDefinition")]
        public Output<string> RuleDefinition { get; private set; } = null!;

        /// <summary>
        /// Unique name of the rule.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Output("ruleName")]
        public Output<string> RuleName { get; private set; } = null!;

        /// <summary>
        /// State of the rule. Valid values are `ENABLED` and `DISABLED`.
        /// </summary>
        [Output("ruleState")]
        public Output<string?> RuleState { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;


        /// <summary>
        /// Create a ContributorInsightRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ContributorInsightRule(string name, ContributorInsightRuleArgs args, CustomResourceOptions? options = null)
            : base("aws:cloudwatch/contributorInsightRule:ContributorInsightRule", name, args ?? new ContributorInsightRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ContributorInsightRule(string name, Input<string> id, ContributorInsightRuleState? state = null, CustomResourceOptions? options = null)
            : base("aws:cloudwatch/contributorInsightRule:ContributorInsightRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ContributorInsightRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ContributorInsightRule Get(string name, Input<string> id, ContributorInsightRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new ContributorInsightRule(name, id, state, options);
        }
    }

    public sealed class ContributorInsightRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Definition of the rule, as a JSON object. For details on the valid syntax, see [Contributor Insights Rule Syntax](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContributorInsights-RuleSyntax.html).
        /// </summary>
        [Input("ruleDefinition", required: true)]
        public Input<string> RuleDefinition { get; set; } = null!;

        /// <summary>
        /// Unique name of the rule.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("ruleName", required: true)]
        public Input<string> RuleName { get; set; } = null!;

        /// <summary>
        /// State of the rule. Valid values are `ENABLED` and `DISABLED`.
        /// </summary>
        [Input("ruleState")]
        public Input<string>? RuleState { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public ContributorInsightRuleArgs()
        {
        }
        public static new ContributorInsightRuleArgs Empty => new ContributorInsightRuleArgs();
    }

    public sealed class ContributorInsightRuleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ARN of the Contributor Insight Rule.
        /// </summary>
        [Input("resourceArn")]
        public Input<string>? ResourceArn { get; set; }

        /// <summary>
        /// Definition of the rule, as a JSON object. For details on the valid syntax, see [Contributor Insights Rule Syntax](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContributorInsights-RuleSyntax.html).
        /// </summary>
        [Input("ruleDefinition")]
        public Input<string>? RuleDefinition { get; set; }

        /// <summary>
        /// Unique name of the rule.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("ruleName")]
        public Input<string>? RuleName { get; set; }

        /// <summary>
        /// State of the rule. Valid values are `ENABLED` and `DISABLED`.
        /// </summary>
        [Input("ruleState")]
        public Input<string>? RuleState { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        [Obsolete(@"Please use `tags` instead.")]
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        public ContributorInsightRuleState()
        {
        }
        public static new ContributorInsightRuleState Empty => new ContributorInsightRuleState();
    }
}
