// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CostExplorer
{
    /// <summary>
    /// Provides a CE Anomaly Monitor.
    /// 
    /// ## Example Usage
    /// 
    /// There are two main types of a Cost Anomaly Monitor: `DIMENSIONAL` and `CUSTOM`.
    /// ### Dimensional Example
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var serviceMonitor = new Aws.CostExplorer.AnomalyMonitor("serviceMonitor", new()
    ///     {
    ///         MonitorDimension = "SERVICE",
    ///         MonitorType = "DIMENSIONAL",
    ///     });
    /// 
    /// });
    /// ```
    /// ### Custom Example
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using System.Text.Json;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var test = new Aws.CostExplorer.AnomalyMonitor("test", new()
    ///     {
    ///         MonitorType = "CUSTOM",
    ///         MonitorSpecification = JsonSerializer.Serialize(new Dictionary&lt;string, object?&gt;
    ///         {
    ///             ["And"] = null,
    ///             ["CostCategories"] = null,
    ///             ["Dimensions"] = null,
    ///             ["Not"] = null,
    ///             ["Or"] = null,
    ///             ["Tags"] = new Dictionary&lt;string, object?&gt;
    ///             {
    ///                 ["Key"] = "CostCenter",
    ///                 ["MatchOptions"] = null,
    ///                 ["Values"] = new[]
    ///                 {
    ///                     "10000",
    ///                 },
    ///             },
    ///         }),
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// `aws_ce_anomaly_monitor` can be imported using the `id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import aws:costexplorer/anomalyMonitor:AnomalyMonitor example costAnomalyMonitorARN
    /// ```
    /// </summary>
    [AwsResourceType("aws:costexplorer/anomalyMonitor:AnomalyMonitor")]
    public partial class AnomalyMonitor : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ARN of the anomaly monitor.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// The dimensions to evaluate. Valid values: `SERVICE`.
        /// </summary>
        [Output("monitorDimension")]
        public Output<string?> MonitorDimension { get; private set; } = null!;

        /// <summary>
        /// A valid JSON representation for the [Expression](https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_Expression.html) object.
        /// </summary>
        [Output("monitorSpecification")]
        public Output<string?> MonitorSpecification { get; private set; } = null!;

        /// <summary>
        /// The possible type values. Valid values: `DIMENSIONAL` | `CUSTOM`.
        /// </summary>
        [Output("monitorType")]
        public Output<string> MonitorType { get; private set; } = null!;

        /// <summary>
        /// The name of the monitor.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;


        /// <summary>
        /// Create a AnomalyMonitor resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AnomalyMonitor(string name, AnomalyMonitorArgs args, CustomResourceOptions? options = null)
            : base("aws:costexplorer/anomalyMonitor:AnomalyMonitor", name, args ?? new AnomalyMonitorArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AnomalyMonitor(string name, Input<string> id, AnomalyMonitorState? state = null, CustomResourceOptions? options = null)
            : base("aws:costexplorer/anomalyMonitor:AnomalyMonitor", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AnomalyMonitor resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AnomalyMonitor Get(string name, Input<string> id, AnomalyMonitorState? state = null, CustomResourceOptions? options = null)
        {
            return new AnomalyMonitor(name, id, state, options);
        }
    }

    public sealed class AnomalyMonitorArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The dimensions to evaluate. Valid values: `SERVICE`.
        /// </summary>
        [Input("monitorDimension")]
        public Input<string>? MonitorDimension { get; set; }

        /// <summary>
        /// A valid JSON representation for the [Expression](https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_Expression.html) object.
        /// </summary>
        [Input("monitorSpecification")]
        public Input<string>? MonitorSpecification { get; set; }

        /// <summary>
        /// The possible type values. Valid values: `DIMENSIONAL` | `CUSTOM`.
        /// </summary>
        [Input("monitorType", required: true)]
        public Input<string> MonitorType { get; set; } = null!;

        /// <summary>
        /// The name of the monitor.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        public AnomalyMonitorArgs()
        {
        }
        public static new AnomalyMonitorArgs Empty => new AnomalyMonitorArgs();
    }

    public sealed class AnomalyMonitorState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ARN of the anomaly monitor.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// The dimensions to evaluate. Valid values: `SERVICE`.
        /// </summary>
        [Input("monitorDimension")]
        public Input<string>? MonitorDimension { get; set; }

        /// <summary>
        /// A valid JSON representation for the [Expression](https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_Expression.html) object.
        /// </summary>
        [Input("monitorSpecification")]
        public Input<string>? MonitorSpecification { get; set; }

        /// <summary>
        /// The possible type values. Valid values: `DIMENSIONAL` | `CUSTOM`.
        /// </summary>
        [Input("monitorType")]
        public Input<string>? MonitorType { get; set; }

        /// <summary>
        /// The name of the monitor.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        public AnomalyMonitorState()
        {
        }
        public static new AnomalyMonitorState Empty => new AnomalyMonitorState();
    }
}
