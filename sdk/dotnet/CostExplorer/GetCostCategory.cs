// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CostExplorer
{
    public static class GetCostCategory
    {
        public static Task<GetCostCategoryResult> InvokeAsync(GetCostCategoryArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCostCategoryResult>("aws:costexplorer/getCostCategory:getCostCategory", args ?? new GetCostCategoryArgs(), options.WithDefaults());

        public static Output<GetCostCategoryResult> Invoke(GetCostCategoryInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCostCategoryResult>("aws:costexplorer/getCostCategory:getCostCategory", args ?? new GetCostCategoryInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCostCategoryArgs : global::Pulumi.InvokeArgs
    {
        [Input("costCategoryArn", required: true)]
        public string CostCategoryArn { get; set; } = null!;

        [Input("tags")]
        private Dictionary<string, string>? _tags;
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetCostCategoryArgs()
        {
        }
        public static new GetCostCategoryArgs Empty => new GetCostCategoryArgs();
    }

    public sealed class GetCostCategoryInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("costCategoryArn", required: true)]
        public Input<string> CostCategoryArn { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetCostCategoryInvokeArgs()
        {
        }
        public static new GetCostCategoryInvokeArgs Empty => new GetCostCategoryInvokeArgs();
    }


    [OutputType]
    public sealed class GetCostCategoryResult
    {
        public readonly string CostCategoryArn;
        public readonly string EffectiveEnd;
        public readonly string EffectiveStart;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly string RuleVersion;
        public readonly ImmutableArray<Outputs.GetCostCategoryRuleResult> Rules;
        public readonly ImmutableArray<Outputs.GetCostCategorySplitChargeRuleResult> SplitChargeRules;
        public readonly ImmutableDictionary<string, string> Tags;

        [OutputConstructor]
        private GetCostCategoryResult(
            string costCategoryArn,

            string effectiveEnd,

            string effectiveStart,

            string id,

            string name,

            string ruleVersion,

            ImmutableArray<Outputs.GetCostCategoryRuleResult> rules,

            ImmutableArray<Outputs.GetCostCategorySplitChargeRuleResult> splitChargeRules,

            ImmutableDictionary<string, string> tags)
        {
            CostCategoryArn = costCategoryArn;
            EffectiveEnd = effectiveEnd;
            EffectiveStart = effectiveStart;
            Id = id;
            Name = name;
            RuleVersion = ruleVersion;
            Rules = rules;
            SplitChargeRules = splitChargeRules;
            Tags = tags;
        }
    }
}
