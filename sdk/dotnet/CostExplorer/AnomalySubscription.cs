// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CostExplorer
{
    [AwsResourceType("aws:costexplorer/anomalySubscription:AnomalySubscription")]
    public partial class AnomalySubscription : global::Pulumi.CustomResource
    {
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("frequency")]
        public Output<string> Frequency { get; private set; } = null!;

        [Output("monitorArnLists")]
        public Output<ImmutableArray<string>> MonitorArnLists { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("subscribers")]
        public Output<ImmutableArray<Outputs.AnomalySubscriptionSubscriber>> Subscribers { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("threshold")]
        public Output<double> Threshold { get; private set; } = null!;


        /// <summary>
        /// Create a AnomalySubscription resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AnomalySubscription(string name, AnomalySubscriptionArgs args, CustomResourceOptions? options = null)
            : base("aws:costexplorer/anomalySubscription:AnomalySubscription", name, args ?? new AnomalySubscriptionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AnomalySubscription(string name, Input<string> id, AnomalySubscriptionState? state = null, CustomResourceOptions? options = null)
            : base("aws:costexplorer/anomalySubscription:AnomalySubscription", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AnomalySubscription resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AnomalySubscription Get(string name, Input<string> id, AnomalySubscriptionState? state = null, CustomResourceOptions? options = null)
        {
            return new AnomalySubscription(name, id, state, options);
        }
    }

    public sealed class AnomalySubscriptionArgs : global::Pulumi.ResourceArgs
    {
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        [Input("frequency", required: true)]
        public Input<string> Frequency { get; set; } = null!;

        [Input("monitorArnLists", required: true)]
        private InputList<string>? _monitorArnLists;
        public InputList<string> MonitorArnLists
        {
            get => _monitorArnLists ?? (_monitorArnLists = new InputList<string>());
            set => _monitorArnLists = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("subscribers", required: true)]
        private InputList<Inputs.AnomalySubscriptionSubscriberArgs>? _subscribers;
        public InputList<Inputs.AnomalySubscriptionSubscriberArgs> Subscribers
        {
            get => _subscribers ?? (_subscribers = new InputList<Inputs.AnomalySubscriptionSubscriberArgs>());
            set => _subscribers = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("threshold", required: true)]
        public Input<double> Threshold { get; set; } = null!;

        public AnomalySubscriptionArgs()
        {
        }
        public static new AnomalySubscriptionArgs Empty => new AnomalySubscriptionArgs();
    }

    public sealed class AnomalySubscriptionState : global::Pulumi.ResourceArgs
    {
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("frequency")]
        public Input<string>? Frequency { get; set; }

        [Input("monitorArnLists")]
        private InputList<string>? _monitorArnLists;
        public InputList<string> MonitorArnLists
        {
            get => _monitorArnLists ?? (_monitorArnLists = new InputList<string>());
            set => _monitorArnLists = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("subscribers")]
        private InputList<Inputs.AnomalySubscriptionSubscriberGetArgs>? _subscribers;
        public InputList<Inputs.AnomalySubscriptionSubscriberGetArgs> Subscribers
        {
            get => _subscribers ?? (_subscribers = new InputList<Inputs.AnomalySubscriptionSubscriberGetArgs>());
            set => _subscribers = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("threshold")]
        public Input<double>? Threshold { get; set; }

        public AnomalySubscriptionState()
        {
        }
        public static new AnomalySubscriptionState Empty => new AnomalySubscriptionState();
    }
}
