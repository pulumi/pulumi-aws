// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CostExplorer
{
    /// <summary>
    /// Provides a CE Anomaly Subscription.
    /// 
    /// ## Example Usage
    /// 
    /// ### Threshold Expression Example
    /// ### For a Specific Dimension
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var test = new Aws.CostExplorer.AnomalySubscription("test", new()
    ///     {
    ///         Frequency = "DAILY",
    ///         MonitorArnLists = new[]
    ///         {
    ///             aws_ce_anomaly_monitor.Test.Arn,
    ///         },
    ///         Subscribers = new[]
    ///         {
    ///             new Aws.CostExplorer.Inputs.AnomalySubscriptionSubscriberArgs
    ///             {
    ///                 Type = "EMAIL",
    ///                 Address = "abc@example.com",
    ///             },
    ///         },
    ///         ThresholdExpression = new Aws.CostExplorer.Inputs.AnomalySubscriptionThresholdExpressionArgs
    ///         {
    ///             Dimension = new Aws.CostExplorer.Inputs.AnomalySubscriptionThresholdExpressionDimensionArgs
    ///             {
    ///                 Key = "ANOMALY_TOTAL_IMPACT_ABSOLUTE",
    ///                 Values = new[]
    ///                 {
    ///                     "100.0",
    ///                 },
    ///                 MatchOptions = new[]
    ///                 {
    ///                     "GREATER_THAN_OR_EQUAL",
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### Using an `and` Expression
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var test = new Aws.CostExplorer.AnomalySubscription("test", new()
    ///     {
    ///         Frequency = "DAILY",
    ///         MonitorArnLists = new[]
    ///         {
    ///             aws_ce_anomaly_monitor.Test.Arn,
    ///         },
    ///         Subscribers = new[]
    ///         {
    ///             new Aws.CostExplorer.Inputs.AnomalySubscriptionSubscriberArgs
    ///             {
    ///                 Type = "EMAIL",
    ///                 Address = "abc@example.com",
    ///             },
    ///         },
    ///         ThresholdExpression = new Aws.CostExplorer.Inputs.AnomalySubscriptionThresholdExpressionArgs
    ///         {
    ///             Ands = new[]
    ///             {
    ///                 new Aws.CostExplorer.Inputs.AnomalySubscriptionThresholdExpressionAndArgs
    ///                 {
    ///                     Dimension = new Aws.CostExplorer.Inputs.AnomalySubscriptionThresholdExpressionAndDimensionArgs
    ///                     {
    ///                         Key = "ANOMALY_TOTAL_IMPACT_ABSOLUTE",
    ///                         MatchOptions = new[]
    ///                         {
    ///                             "GREATER_THAN_OR_EQUAL",
    ///                         },
    ///                         Values = new[]
    ///                         {
    ///                             "100",
    ///                         },
    ///                     },
    ///                 },
    ///                 new Aws.CostExplorer.Inputs.AnomalySubscriptionThresholdExpressionAndArgs
    ///                 {
    ///                     Dimension = new Aws.CostExplorer.Inputs.AnomalySubscriptionThresholdExpressionAndDimensionArgs
    ///                     {
    ///                         Key = "ANOMALY_TOTAL_IMPACT_PERCENTAGE",
    ///                         MatchOptions = new[]
    ///                         {
    ///                             "GREATER_THAN_OR_EQUAL",
    ///                         },
    ///                         Values = new[]
    ///                         {
    ///                             "50",
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import `aws_ce_anomaly_subscription` using the `id`. For example:
    /// 
    /// ```sh
    ///  $ pulumi import aws:costexplorer/anomalySubscription:AnomalySubscription example AnomalySubscriptionARN
    /// ```
    /// </summary>
    [AwsResourceType("aws:costexplorer/anomalySubscription:AnomalySubscription")]
    public partial class AnomalySubscription : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The unique identifier for the AWS account in which the anomaly subscription ought to be created.
        /// </summary>
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        /// <summary>
        /// ARN of the anomaly subscription.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// The frequency that anomaly reports are sent. Valid Values: `DAILY` | `IMMEDIATE` | `WEEKLY`.
        /// </summary>
        [Output("frequency")]
        public Output<string> Frequency { get; private set; } = null!;

        /// <summary>
        /// A list of cost anomaly monitors.
        /// </summary>
        [Output("monitorArnLists")]
        public Output<ImmutableArray<string>> MonitorArnLists { get; private set; } = null!;

        /// <summary>
        /// The name for the subscription.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// A subscriber configuration. Multiple subscribers can be defined.
        /// </summary>
        [Output("subscribers")]
        public Output<ImmutableArray<Outputs.AnomalySubscriptionSubscriber>> Subscribers { get; private set; } = null!;

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        /// <summary>
        /// An Expression object used to specify the anomalies that you want to generate alerts for. See Threshold Expression.
        /// </summary>
        [Output("thresholdExpression")]
        public Output<Outputs.AnomalySubscriptionThresholdExpression> ThresholdExpression { get; private set; } = null!;


        /// <summary>
        /// Create a AnomalySubscription resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AnomalySubscription(string name, AnomalySubscriptionArgs args, CustomResourceOptions? options = null)
            : base("aws:costexplorer/anomalySubscription:AnomalySubscription", name, args ?? new AnomalySubscriptionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AnomalySubscription(string name, Input<string> id, AnomalySubscriptionState? state = null, CustomResourceOptions? options = null)
            : base("aws:costexplorer/anomalySubscription:AnomalySubscription", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AnomalySubscription resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AnomalySubscription Get(string name, Input<string> id, AnomalySubscriptionState? state = null, CustomResourceOptions? options = null)
        {
            return new AnomalySubscription(name, id, state, options);
        }
    }

    public sealed class AnomalySubscriptionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The unique identifier for the AWS account in which the anomaly subscription ought to be created.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// The frequency that anomaly reports are sent. Valid Values: `DAILY` | `IMMEDIATE` | `WEEKLY`.
        /// </summary>
        [Input("frequency", required: true)]
        public Input<string> Frequency { get; set; } = null!;

        [Input("monitorArnLists", required: true)]
        private InputList<string>? _monitorArnLists;

        /// <summary>
        /// A list of cost anomaly monitors.
        /// </summary>
        public InputList<string> MonitorArnLists
        {
            get => _monitorArnLists ?? (_monitorArnLists = new InputList<string>());
            set => _monitorArnLists = value;
        }

        /// <summary>
        /// The name for the subscription.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("subscribers", required: true)]
        private InputList<Inputs.AnomalySubscriptionSubscriberArgs>? _subscribers;

        /// <summary>
        /// A subscriber configuration. Multiple subscribers can be defined.
        /// </summary>
        public InputList<Inputs.AnomalySubscriptionSubscriberArgs> Subscribers
        {
            get => _subscribers ?? (_subscribers = new InputList<Inputs.AnomalySubscriptionSubscriberArgs>());
            set => _subscribers = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// An Expression object used to specify the anomalies that you want to generate alerts for. See Threshold Expression.
        /// </summary>
        [Input("thresholdExpression")]
        public Input<Inputs.AnomalySubscriptionThresholdExpressionArgs>? ThresholdExpression { get; set; }

        public AnomalySubscriptionArgs()
        {
        }
        public static new AnomalySubscriptionArgs Empty => new AnomalySubscriptionArgs();
    }

    public sealed class AnomalySubscriptionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The unique identifier for the AWS account in which the anomaly subscription ought to be created.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// ARN of the anomaly subscription.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// The frequency that anomaly reports are sent. Valid Values: `DAILY` | `IMMEDIATE` | `WEEKLY`.
        /// </summary>
        [Input("frequency")]
        public Input<string>? Frequency { get; set; }

        [Input("monitorArnLists")]
        private InputList<string>? _monitorArnLists;

        /// <summary>
        /// A list of cost anomaly monitors.
        /// </summary>
        public InputList<string> MonitorArnLists
        {
            get => _monitorArnLists ?? (_monitorArnLists = new InputList<string>());
            set => _monitorArnLists = value;
        }

        /// <summary>
        /// The name for the subscription.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("subscribers")]
        private InputList<Inputs.AnomalySubscriptionSubscriberGetArgs>? _subscribers;

        /// <summary>
        /// A subscriber configuration. Multiple subscribers can be defined.
        /// </summary>
        public InputList<Inputs.AnomalySubscriptionSubscriberGetArgs> Subscribers
        {
            get => _subscribers ?? (_subscribers = new InputList<Inputs.AnomalySubscriptionSubscriberGetArgs>());
            set => _subscribers = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        /// <summary>
        /// An Expression object used to specify the anomalies that you want to generate alerts for. See Threshold Expression.
        /// </summary>
        [Input("thresholdExpression")]
        public Input<Inputs.AnomalySubscriptionThresholdExpressionGetArgs>? ThresholdExpression { get; set; }

        public AnomalySubscriptionState()
        {
        }
        public static new AnomalySubscriptionState Empty => new AnomalySubscriptionState();
    }
}
