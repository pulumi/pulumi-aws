// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Dsql
{
    /// <summary>
    /// Resource for managing an Amazon Aurora DSQL Cluster.
    /// 
    /// ## Example Usage
    /// 
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Dsql.Cluster("example", new()
    ///     {
    ///         DeletionProtectionEnabled = true,
    ///         Tags = 
    ///         {
    ///             { "Name", "TestCluster" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import DSQL Cluster using the `identifier`. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:dsql/cluster:Cluster example abcde1f234ghijklmnop5qr6st
    /// ```
    /// </summary>
    [AwsResourceType("aws:dsql/cluster:Cluster")]
    public partial class Cluster : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ARN of the Cluster.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// Whether deletion protection is enabled in this cluster.
        /// </summary>
        [Output("deletionProtectionEnabled")]
        public Output<bool?> DeletionProtectionEnabled { get; private set; } = null!;

        /// <summary>
        /// Encryption configuration details for the DSQL Cluster.
        /// </summary>
        [Output("encryptionDetails")]
        public Output<ImmutableArray<Outputs.ClusterEncryptionDetail>> EncryptionDetails { get; private set; } = null!;

        /// <summary>
        /// Cluster Identifier.
        /// </summary>
        [Output("identifier")]
        public Output<string> Identifier { get; private set; } = null!;

        /// <summary>
        /// The ARN of the AWS KMS key that encrypts data in the DSQL Cluster, or `"AWS_OWNED_KMS_KEY"`.
        /// </summary>
        [Output("kmsEncryptionKey")]
        public Output<string> KmsEncryptionKey { get; private set; } = null!;

        /// <summary>
        /// Multi-region properties of the DSQL Cluster.
        /// </summary>
        [Output("multiRegionProperties")]
        public Output<Outputs.ClusterMultiRegionProperties?> MultiRegionProperties { get; private set; } = null!;

        /// <summary>
        /// Set of tags to be associated with the AWS DSQL Cluster resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("timeouts")]
        public Output<Outputs.ClusterTimeouts?> Timeouts { get; private set; } = null!;

        /// <summary>
        /// The DSQL Cluster's VPC endpoint service name.
        /// </summary>
        [Output("vpcEndpointServiceName")]
        public Output<string> VpcEndpointServiceName { get; private set; } = null!;


        /// <summary>
        /// Create a Cluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Cluster(string name, ClusterArgs? args = null, CustomResourceOptions? options = null)
            : base("aws:dsql/cluster:Cluster", name, args ?? new ClusterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Cluster(string name, Input<string> id, ClusterState? state = null, CustomResourceOptions? options = null)
            : base("aws:dsql/cluster:Cluster", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Cluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Cluster Get(string name, Input<string> id, ClusterState? state = null, CustomResourceOptions? options = null)
        {
            return new Cluster(name, id, state, options);
        }
    }

    public sealed class ClusterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether deletion protection is enabled in this cluster.
        /// </summary>
        [Input("deletionProtectionEnabled")]
        public Input<bool>? DeletionProtectionEnabled { get; set; }

        /// <summary>
        /// The ARN of the AWS KMS key that encrypts data in the DSQL Cluster, or `"AWS_OWNED_KMS_KEY"`.
        /// </summary>
        [Input("kmsEncryptionKey")]
        public Input<string>? KmsEncryptionKey { get; set; }

        /// <summary>
        /// Multi-region properties of the DSQL Cluster.
        /// </summary>
        [Input("multiRegionProperties")]
        public Input<Inputs.ClusterMultiRegionPropertiesArgs>? MultiRegionProperties { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Set of tags to be associated with the AWS DSQL Cluster resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("timeouts")]
        public Input<Inputs.ClusterTimeoutsArgs>? Timeouts { get; set; }

        public ClusterArgs()
        {
        }
        public static new ClusterArgs Empty => new ClusterArgs();
    }

    public sealed class ClusterState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ARN of the Cluster.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// Whether deletion protection is enabled in this cluster.
        /// </summary>
        [Input("deletionProtectionEnabled")]
        public Input<bool>? DeletionProtectionEnabled { get; set; }

        [Input("encryptionDetails")]
        private InputList<Inputs.ClusterEncryptionDetailGetArgs>? _encryptionDetails;

        /// <summary>
        /// Encryption configuration details for the DSQL Cluster.
        /// </summary>
        public InputList<Inputs.ClusterEncryptionDetailGetArgs> EncryptionDetails
        {
            get => _encryptionDetails ?? (_encryptionDetails = new InputList<Inputs.ClusterEncryptionDetailGetArgs>());
            set => _encryptionDetails = value;
        }

        /// <summary>
        /// Cluster Identifier.
        /// </summary>
        [Input("identifier")]
        public Input<string>? Identifier { get; set; }

        /// <summary>
        /// The ARN of the AWS KMS key that encrypts data in the DSQL Cluster, or `"AWS_OWNED_KMS_KEY"`.
        /// </summary>
        [Input("kmsEncryptionKey")]
        public Input<string>? KmsEncryptionKey { get; set; }

        /// <summary>
        /// Multi-region properties of the DSQL Cluster.
        /// </summary>
        [Input("multiRegionProperties")]
        public Input<Inputs.ClusterMultiRegionPropertiesGetArgs>? MultiRegionProperties { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Set of tags to be associated with the AWS DSQL Cluster resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Obsolete(@"Please use `tags` instead.")]
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("timeouts")]
        public Input<Inputs.ClusterTimeoutsGetArgs>? Timeouts { get; set; }

        /// <summary>
        /// The DSQL Cluster's VPC endpoint service name.
        /// </summary>
        [Input("vpcEndpointServiceName")]
        public Input<string>? VpcEndpointServiceName { get; set; }

        public ClusterState()
        {
        }
        public static new ClusterState Empty => new ClusterState();
    }
}
