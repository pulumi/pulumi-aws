// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2
{
    public static class GetSecurityGroups
    {
        /// <summary>
        /// Use this data source to get IDs and VPC membership of Security Groups that are created outside this provider.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const test = aws.ec2.getSecurityGroups({
        ///     tags: {
        ///         Application: "k8s",
        ///         Environment: "dev",
        ///     },
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// test = aws.ec2.get_security_groups(tags={
        ///     "Application": "k8s",
        ///     "Environment": "dev",
        /// })
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.Ec2.GetSecurityGroups.Invoke(new()
        ///     {
        ///         Tags = 
        ///         {
        ///             { "Application", "k8s" },
        ///             { "Environment", "dev" },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/ec2"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := ec2.GetSecurityGroups(ctx, &amp;ec2.GetSecurityGroupsArgs{
        /// 			Tags: map[string]interface{}{
        /// 				"Application": "k8s",
        /// 				"Environment": "dev",
        /// 			},
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.ec2.Ec2Functions;
        /// import com.pulumi.aws.ec2.inputs.GetSecurityGroupsArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var test = Ec2Functions.getSecurityGroups(GetSecurityGroupsArgs.builder()
        ///             .tags(Map.ofEntries(
        ///                 Map.entry("Application", "k8s"),
        ///                 Map.entry("Environment", "dev")
        ///             ))
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   test:
        ///     fn::invoke:
        ///       Function: aws:ec2:getSecurityGroups
        ///       Arguments:
        ///         tags:
        ///           Application: k8s
        ///           Environment: dev
        /// ```
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const test = aws.ec2.getSecurityGroups({
        ///     filters: [
        ///         {
        ///             name: "group-name",
        ///             values: ["*nodes*"],
        ///         },
        ///         {
        ///             name: "vpc-id",
        ///             values: [_var.vpc_id],
        ///         },
        ///     ],
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// test = aws.ec2.get_security_groups(filters=[
        ///     aws.ec2.GetSecurityGroupsFilterArgs(
        ///         name="group-name",
        ///         values=["*nodes*"],
        ///     ),
        ///     aws.ec2.GetSecurityGroupsFilterArgs(
        ///         name="vpc-id",
        ///         values=[var["vpc_id"]],
        ///     ),
        /// ])
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.Ec2.GetSecurityGroups.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Aws.Ec2.Inputs.GetSecurityGroupsFilterInputArgs
        ///             {
        ///                 Name = "group-name",
        ///                 Values = new[]
        ///                 {
        ///                     "*nodes*",
        ///                 },
        ///             },
        ///             new Aws.Ec2.Inputs.GetSecurityGroupsFilterInputArgs
        ///             {
        ///                 Name = "vpc-id",
        ///                 Values = new[]
        ///                 {
        ///                     @var.Vpc_id,
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 
        /// "github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// "github.com/pulumi/pulumi-aws/sdk/v5/go/aws/ec2"
        /// )
        /// func main() {
        /// pulumi.Run(func(ctx *pulumi.Context) error {
        /// _, err := ec2.GetSecurityGroups(ctx, &amp;ec2.GetSecurityGroupsArgs{
        /// Filters: []ec2.GetSecurityGroupsFilter{
        /// {
        /// Name: "group-name",
        /// Values: []string{
        /// "*nodes*",
        /// },
        /// },
        /// {
        /// Name: "vpc-id",
        /// Values: interface{}{
        /// _var.Vpc_id,
        /// },
        /// },
        /// },
        /// }, nil);
        /// if err != nil {
        /// return err
        /// }
        /// return nil
        /// })
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.ec2.Ec2Functions;
        /// import com.pulumi.aws.ec2.inputs.GetSecurityGroupsArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var test = Ec2Functions.getSecurityGroups(GetSecurityGroupsArgs.builder()
        ///             .filters(            
        ///                 GetSecurityGroupsFilterArgs.builder()
        ///                     .name("group-name")
        ///                     .values("*nodes*")
        ///                     .build(),
        ///                 GetSecurityGroupsFilterArgs.builder()
        ///                     .name("vpc-id")
        ///                     .values(var_.vpc_id())
        ///                     .build())
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   test:
        ///     fn::invoke:
        ///       Function: aws:ec2:getSecurityGroups
        ///       Arguments:
        ///         filters:
        ///           - name: group-name
        ///             values:
        ///               - '*nodes*'
        ///           - name: vpc-id
        ///             values:
        ///               - ${var.vpc_id}
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetSecurityGroupsResult> InvokeAsync(GetSecurityGroupsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSecurityGroupsResult>("aws:ec2/getSecurityGroups:getSecurityGroups", args ?? new GetSecurityGroupsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get IDs and VPC membership of Security Groups that are created outside this provider.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const test = aws.ec2.getSecurityGroups({
        ///     tags: {
        ///         Application: "k8s",
        ///         Environment: "dev",
        ///     },
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// test = aws.ec2.get_security_groups(tags={
        ///     "Application": "k8s",
        ///     "Environment": "dev",
        /// })
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.Ec2.GetSecurityGroups.Invoke(new()
        ///     {
        ///         Tags = 
        ///         {
        ///             { "Application", "k8s" },
        ///             { "Environment", "dev" },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/ec2"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := ec2.GetSecurityGroups(ctx, &amp;ec2.GetSecurityGroupsArgs{
        /// 			Tags: map[string]interface{}{
        /// 				"Application": "k8s",
        /// 				"Environment": "dev",
        /// 			},
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.ec2.Ec2Functions;
        /// import com.pulumi.aws.ec2.inputs.GetSecurityGroupsArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var test = Ec2Functions.getSecurityGroups(GetSecurityGroupsArgs.builder()
        ///             .tags(Map.ofEntries(
        ///                 Map.entry("Application", "k8s"),
        ///                 Map.entry("Environment", "dev")
        ///             ))
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   test:
        ///     fn::invoke:
        ///       Function: aws:ec2:getSecurityGroups
        ///       Arguments:
        ///         tags:
        ///           Application: k8s
        ///           Environment: dev
        /// ```
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const test = aws.ec2.getSecurityGroups({
        ///     filters: [
        ///         {
        ///             name: "group-name",
        ///             values: ["*nodes*"],
        ///         },
        ///         {
        ///             name: "vpc-id",
        ///             values: [_var.vpc_id],
        ///         },
        ///     ],
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// test = aws.ec2.get_security_groups(filters=[
        ///     aws.ec2.GetSecurityGroupsFilterArgs(
        ///         name="group-name",
        ///         values=["*nodes*"],
        ///     ),
        ///     aws.ec2.GetSecurityGroupsFilterArgs(
        ///         name="vpc-id",
        ///         values=[var["vpc_id"]],
        ///     ),
        /// ])
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.Ec2.GetSecurityGroups.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Aws.Ec2.Inputs.GetSecurityGroupsFilterInputArgs
        ///             {
        ///                 Name = "group-name",
        ///                 Values = new[]
        ///                 {
        ///                     "*nodes*",
        ///                 },
        ///             },
        ///             new Aws.Ec2.Inputs.GetSecurityGroupsFilterInputArgs
        ///             {
        ///                 Name = "vpc-id",
        ///                 Values = new[]
        ///                 {
        ///                     @var.Vpc_id,
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 
        /// "github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// "github.com/pulumi/pulumi-aws/sdk/v5/go/aws/ec2"
        /// )
        /// func main() {
        /// pulumi.Run(func(ctx *pulumi.Context) error {
        /// _, err := ec2.GetSecurityGroups(ctx, &amp;ec2.GetSecurityGroupsArgs{
        /// Filters: []ec2.GetSecurityGroupsFilter{
        /// {
        /// Name: "group-name",
        /// Values: []string{
        /// "*nodes*",
        /// },
        /// },
        /// {
        /// Name: "vpc-id",
        /// Values: interface{}{
        /// _var.Vpc_id,
        /// },
        /// },
        /// },
        /// }, nil);
        /// if err != nil {
        /// return err
        /// }
        /// return nil
        /// })
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.ec2.Ec2Functions;
        /// import com.pulumi.aws.ec2.inputs.GetSecurityGroupsArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var test = Ec2Functions.getSecurityGroups(GetSecurityGroupsArgs.builder()
        ///             .filters(            
        ///                 GetSecurityGroupsFilterArgs.builder()
        ///                     .name("group-name")
        ///                     .values("*nodes*")
        ///                     .build(),
        ///                 GetSecurityGroupsFilterArgs.builder()
        ///                     .name("vpc-id")
        ///                     .values(var_.vpc_id())
        ///                     .build())
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   test:
        ///     fn::invoke:
        ///       Function: aws:ec2:getSecurityGroups
        ///       Arguments:
        ///         filters:
        ///           - name: group-name
        ///             values:
        ///               - '*nodes*'
        ///           - name: vpc-id
        ///             values:
        ///               - ${var.vpc_id}
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetSecurityGroupsResult> Invoke(GetSecurityGroupsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSecurityGroupsResult>("aws:ec2/getSecurityGroups:getSecurityGroups", args ?? new GetSecurityGroupsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSecurityGroupsArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetSecurityGroupsFilterArgs>? _filters;

        /// <summary>
        /// One or more name/value pairs to use as filters. There are several valid keys, for a full reference, check out [describe-security-groups in the AWS CLI reference][1].
        /// </summary>
        public List<Inputs.GetSecurityGroupsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetSecurityGroupsFilterArgs>());
            set => _filters = value;
        }

        [Input("tags")]
        private Dictionary<string, string>? _tags;

        /// <summary>
        /// Map of tags, each pair of which must exactly match for desired security groups.
        /// </summary>
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetSecurityGroupsArgs()
        {
        }
        public static new GetSecurityGroupsArgs Empty => new GetSecurityGroupsArgs();
    }

    public sealed class GetSecurityGroupsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetSecurityGroupsFilterInputArgs>? _filters;

        /// <summary>
        /// One or more name/value pairs to use as filters. There are several valid keys, for a full reference, check out [describe-security-groups in the AWS CLI reference][1].
        /// </summary>
        public InputList<Inputs.GetSecurityGroupsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetSecurityGroupsFilterInputArgs>());
            set => _filters = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Map of tags, each pair of which must exactly match for desired security groups.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetSecurityGroupsInvokeArgs()
        {
        }
        public static new GetSecurityGroupsInvokeArgs Empty => new GetSecurityGroupsInvokeArgs();
    }


    [OutputType]
    public sealed class GetSecurityGroupsResult
    {
        /// <summary>
        /// ARNs of the matched security groups.
        /// </summary>
        public readonly ImmutableArray<string> Arns;
        public readonly ImmutableArray<Outputs.GetSecurityGroupsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// IDs of the matches security groups.
        /// </summary>
        public readonly ImmutableArray<string> Ids;
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// VPC IDs of the matched security groups. The data source's tag or filter *will span VPCs* unless the `vpc-id` filter is also used.
        /// </summary>
        public readonly ImmutableArray<string> VpcIds;

        [OutputConstructor]
        private GetSecurityGroupsResult(
            ImmutableArray<string> arns,

            ImmutableArray<Outputs.GetSecurityGroupsFilterResult> filters,

            string id,

            ImmutableArray<string> ids,

            ImmutableDictionary<string, string> tags,

            ImmutableArray<string> vpcIds)
        {
            Arns = arns;
            Filters = filters;
            Id = id;
            Ids = ids;
            Tags = tags;
            VpcIds = vpcIds;
        }
    }
}
