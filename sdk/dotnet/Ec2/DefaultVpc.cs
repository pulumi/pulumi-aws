// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// Basic usage with tags:
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var @default = new Aws.Ec2.DefaultVpc("default", new Aws.Ec2.DefaultVpcArgs
    ///         {
    ///             Tags = 
    ///             {
    ///                 { "Name", "Default VPC" },
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// Default VPCs can be imported using the `vpc id`, e.g.,
    /// 
    /// ```sh
    ///  $ pulumi import aws:ec2/defaultVpc:DefaultVpc default vpc-a01106c2
    /// ```
    /// </summary>
    [AwsResourceType("aws:ec2/defaultVpc:DefaultVpc")]
    public partial class DefaultVpc : Pulumi.CustomResource
    {
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("assignGeneratedIpv6CidrBlock")]
        public Output<bool?> AssignGeneratedIpv6CidrBlock { get; private set; } = null!;

        /// <summary>
        /// The primary IPv4 CIDR block for the VPC
        /// </summary>
        [Output("cidrBlock")]
        public Output<string> CidrBlock { get; private set; } = null!;

        [Output("defaultNetworkAclId")]
        public Output<string> DefaultNetworkAclId { get; private set; } = null!;

        [Output("defaultRouteTableId")]
        public Output<string> DefaultRouteTableId { get; private set; } = null!;

        [Output("defaultSecurityGroupId")]
        public Output<string> DefaultSecurityGroupId { get; private set; } = null!;

        [Output("dhcpOptionsId")]
        public Output<string> DhcpOptionsId { get; private set; } = null!;

        [Output("enableClassiclink")]
        public Output<bool> EnableClassiclink { get; private set; } = null!;

        [Output("enableClassiclinkDnsSupport")]
        public Output<bool> EnableClassiclinkDnsSupport { get; private set; } = null!;

        [Output("enableDnsHostnames")]
        public Output<bool?> EnableDnsHostnames { get; private set; } = null!;

        [Output("enableDnsSupport")]
        public Output<bool?> EnableDnsSupport { get; private set; } = null!;

        [Output("existingDefaultVpc")]
        public Output<bool> ExistingDefaultVpc { get; private set; } = null!;

        /// <summary>
        /// Whether destroying the resource deletes the default VPC. Default: `false`
        /// </summary>
        [Output("forceDestroy")]
        public Output<bool?> ForceDestroy { get; private set; } = null!;

        /// <summary>
        /// The allowed tenancy of instances launched into the VPC
        /// </summary>
        [Output("instanceTenancy")]
        public Output<string> InstanceTenancy { get; private set; } = null!;

        [Output("ipv6AssociationId")]
        public Output<string> Ipv6AssociationId { get; private set; } = null!;

        [Output("ipv6CidrBlock")]
        public Output<string> Ipv6CidrBlock { get; private set; } = null!;

        [Output("ipv6CidrBlockNetworkBorderGroup")]
        public Output<string> Ipv6CidrBlockNetworkBorderGroup { get; private set; } = null!;

        [Output("ipv6IpamPoolId")]
        public Output<string?> Ipv6IpamPoolId { get; private set; } = null!;

        [Output("ipv6NetmaskLength")]
        public Output<int?> Ipv6NetmaskLength { get; private set; } = null!;

        [Output("mainRouteTableId")]
        public Output<string> MainRouteTableId { get; private set; } = null!;

        [Output("ownerId")]
        public Output<string> OwnerId { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;


        /// <summary>
        /// Create a DefaultVpc resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DefaultVpc(string name, DefaultVpcArgs? args = null, CustomResourceOptions? options = null)
            : base("aws:ec2/defaultVpc:DefaultVpc", name, args ?? new DefaultVpcArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DefaultVpc(string name, Input<string> id, DefaultVpcState? state = null, CustomResourceOptions? options = null)
            : base("aws:ec2/defaultVpc:DefaultVpc", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DefaultVpc resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DefaultVpc Get(string name, Input<string> id, DefaultVpcState? state = null, CustomResourceOptions? options = null)
        {
            return new DefaultVpc(name, id, state, options);
        }
    }

    public sealed class DefaultVpcArgs : Pulumi.ResourceArgs
    {
        [Input("assignGeneratedIpv6CidrBlock")]
        public Input<bool>? AssignGeneratedIpv6CidrBlock { get; set; }

        [Input("enableClassiclink")]
        public Input<bool>? EnableClassiclink { get; set; }

        [Input("enableClassiclinkDnsSupport")]
        public Input<bool>? EnableClassiclinkDnsSupport { get; set; }

        [Input("enableDnsHostnames")]
        public Input<bool>? EnableDnsHostnames { get; set; }

        [Input("enableDnsSupport")]
        public Input<bool>? EnableDnsSupport { get; set; }

        /// <summary>
        /// Whether destroying the resource deletes the default VPC. Default: `false`
        /// </summary>
        [Input("forceDestroy")]
        public Input<bool>? ForceDestroy { get; set; }

        [Input("ipv6CidrBlock")]
        public Input<string>? Ipv6CidrBlock { get; set; }

        [Input("ipv6CidrBlockNetworkBorderGroup")]
        public Input<string>? Ipv6CidrBlockNetworkBorderGroup { get; set; }

        [Input("ipv6IpamPoolId")]
        public Input<string>? Ipv6IpamPoolId { get; set; }

        [Input("ipv6NetmaskLength")]
        public Input<int>? Ipv6NetmaskLength { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        public DefaultVpcArgs()
        {
        }
    }

    public sealed class DefaultVpcState : Pulumi.ResourceArgs
    {
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("assignGeneratedIpv6CidrBlock")]
        public Input<bool>? AssignGeneratedIpv6CidrBlock { get; set; }

        /// <summary>
        /// The primary IPv4 CIDR block for the VPC
        /// </summary>
        [Input("cidrBlock")]
        public Input<string>? CidrBlock { get; set; }

        [Input("defaultNetworkAclId")]
        public Input<string>? DefaultNetworkAclId { get; set; }

        [Input("defaultRouteTableId")]
        public Input<string>? DefaultRouteTableId { get; set; }

        [Input("defaultSecurityGroupId")]
        public Input<string>? DefaultSecurityGroupId { get; set; }

        [Input("dhcpOptionsId")]
        public Input<string>? DhcpOptionsId { get; set; }

        [Input("enableClassiclink")]
        public Input<bool>? EnableClassiclink { get; set; }

        [Input("enableClassiclinkDnsSupport")]
        public Input<bool>? EnableClassiclinkDnsSupport { get; set; }

        [Input("enableDnsHostnames")]
        public Input<bool>? EnableDnsHostnames { get; set; }

        [Input("enableDnsSupport")]
        public Input<bool>? EnableDnsSupport { get; set; }

        [Input("existingDefaultVpc")]
        public Input<bool>? ExistingDefaultVpc { get; set; }

        /// <summary>
        /// Whether destroying the resource deletes the default VPC. Default: `false`
        /// </summary>
        [Input("forceDestroy")]
        public Input<bool>? ForceDestroy { get; set; }

        /// <summary>
        /// The allowed tenancy of instances launched into the VPC
        /// </summary>
        [Input("instanceTenancy")]
        public Input<string>? InstanceTenancy { get; set; }

        [Input("ipv6AssociationId")]
        public Input<string>? Ipv6AssociationId { get; set; }

        [Input("ipv6CidrBlock")]
        public Input<string>? Ipv6CidrBlock { get; set; }

        [Input("ipv6CidrBlockNetworkBorderGroup")]
        public Input<string>? Ipv6CidrBlockNetworkBorderGroup { get; set; }

        [Input("ipv6IpamPoolId")]
        public Input<string>? Ipv6IpamPoolId { get; set; }

        [Input("ipv6NetmaskLength")]
        public Input<int>? Ipv6NetmaskLength { get; set; }

        [Input("mainRouteTableId")]
        public Input<string>? MainRouteTableId { get; set; }

        [Input("ownerId")]
        public Input<string>? OwnerId { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        public DefaultVpcState()
        {
        }
    }
}
