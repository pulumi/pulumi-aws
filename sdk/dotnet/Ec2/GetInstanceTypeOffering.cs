// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2
{
    public static class GetInstanceTypeOffering
    {
        public static Task<GetInstanceTypeOfferingResult> InvokeAsync(GetInstanceTypeOfferingArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInstanceTypeOfferingResult>("aws:ec2/getInstanceTypeOffering:getInstanceTypeOffering", args ?? new GetInstanceTypeOfferingArgs(), options.WithDefaults());

        public static Output<GetInstanceTypeOfferingResult> Invoke(GetInstanceTypeOfferingInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInstanceTypeOfferingResult>("aws:ec2/getInstanceTypeOffering:getInstanceTypeOffering", args ?? new GetInstanceTypeOfferingInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInstanceTypeOfferingArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetInstanceTypeOfferingFilterArgs>? _filters;
        public List<Inputs.GetInstanceTypeOfferingFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetInstanceTypeOfferingFilterArgs>());
            set => _filters = value;
        }

        [Input("locationType")]
        public string? LocationType { get; set; }

        [Input("preferredInstanceTypes")]
        private List<string>? _preferredInstanceTypes;
        public List<string> PreferredInstanceTypes
        {
            get => _preferredInstanceTypes ?? (_preferredInstanceTypes = new List<string>());
            set => _preferredInstanceTypes = value;
        }

        public GetInstanceTypeOfferingArgs()
        {
        }
        public static new GetInstanceTypeOfferingArgs Empty => new GetInstanceTypeOfferingArgs();
    }

    public sealed class GetInstanceTypeOfferingInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetInstanceTypeOfferingFilterInputArgs>? _filters;
        public InputList<Inputs.GetInstanceTypeOfferingFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetInstanceTypeOfferingFilterInputArgs>());
            set => _filters = value;
        }

        [Input("locationType")]
        public Input<string>? LocationType { get; set; }

        [Input("preferredInstanceTypes")]
        private InputList<string>? _preferredInstanceTypes;
        public InputList<string> PreferredInstanceTypes
        {
            get => _preferredInstanceTypes ?? (_preferredInstanceTypes = new InputList<string>());
            set => _preferredInstanceTypes = value;
        }

        public GetInstanceTypeOfferingInvokeArgs()
        {
        }
        public static new GetInstanceTypeOfferingInvokeArgs Empty => new GetInstanceTypeOfferingInvokeArgs();
    }


    [OutputType]
    public sealed class GetInstanceTypeOfferingResult
    {
        public readonly ImmutableArray<Outputs.GetInstanceTypeOfferingFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string InstanceType;
        public readonly string? LocationType;
        public readonly ImmutableArray<string> PreferredInstanceTypes;

        [OutputConstructor]
        private GetInstanceTypeOfferingResult(
            ImmutableArray<Outputs.GetInstanceTypeOfferingFilterResult> filters,

            string id,

            string instanceType,

            string? locationType,

            ImmutableArray<string> preferredInstanceTypes)
        {
            Filters = filters;
            Id = id;
            InstanceType = instanceType;
            LocationType = locationType;
            PreferredInstanceTypes = preferredInstanceTypes;
        }
    }
}
