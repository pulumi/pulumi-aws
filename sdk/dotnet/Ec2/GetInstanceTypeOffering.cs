// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2
{
    public static class GetInstanceTypeOffering
    {
        /// <summary>
        /// Information about single EC2 Instance Type Offering.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const example = aws.ec2.getInstanceTypeOffering({
        ///     filters: [{
        ///         name: "instance-type",
        ///         values: [
        ///             "t2.micro",
        ///             "t3.micro",
        ///         ],
        ///     }],
        ///     preferredInstanceTypes: [
        ///         "t3.micro",
        ///         "t2.micro",
        ///     ],
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// example = aws.ec2.get_instance_type_offering(filters=[aws.ec2.GetInstanceTypeOfferingFilterArgs(
        ///         name="instance-type",
        ///         values=[
        ///             "t2.micro",
        ///             "t3.micro",
        ///         ],
        ///     )],
        ///     preferred_instance_types=[
        ///         "t3.micro",
        ///         "t2.micro",
        ///     ])
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Ec2.GetInstanceTypeOffering.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Aws.Ec2.Inputs.GetInstanceTypeOfferingFilterInputArgs
        ///             {
        ///                 Name = "instance-type",
        ///                 Values = new[]
        ///                 {
        ///                     "t2.micro",
        ///                     "t3.micro",
        ///                 },
        ///             },
        ///         },
        ///         PreferredInstanceTypes = new[]
        ///         {
        ///             "t3.micro",
        ///             "t2.micro",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/ec2"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := ec2.GetInstanceTypeOffering(ctx, &amp;ec2.GetInstanceTypeOfferingArgs{
        /// 			Filters: []ec2.GetInstanceTypeOfferingFilter{
        /// 				{
        /// 					Name: "instance-type",
        /// 					Values: []string{
        /// 						"t2.micro",
        /// 						"t3.micro",
        /// 					},
        /// 				},
        /// 			},
        /// 			PreferredInstanceTypes: []string{
        /// 				"t3.micro",
        /// 				"t2.micro",
        /// 			},
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.ec2.Ec2Functions;
        /// import com.pulumi.aws.ec2.inputs.GetInstanceTypeOfferingArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var example = Ec2Functions.getInstanceTypeOffering(GetInstanceTypeOfferingArgs.builder()
        ///             .filters(GetInstanceTypeOfferingFilterArgs.builder()
        ///                 .name("instance-type")
        ///                 .values(                
        ///                     "t2.micro",
        ///                     "t3.micro")
        ///                 .build())
        ///             .preferredInstanceTypes(            
        ///                 "t3.micro",
        ///                 "t2.micro")
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   example:
        ///     fn::invoke:
        ///       Function: aws:ec2:getInstanceTypeOffering
        ///       Arguments:
        ///         filters:
        ///           - name: instance-type
        ///             values:
        ///               - t2.micro
        ///               - t3.micro
        ///         preferredInstanceTypes:
        ///           - t3.micro
        ///           - t2.micro
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetInstanceTypeOfferingResult> InvokeAsync(GetInstanceTypeOfferingArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInstanceTypeOfferingResult>("aws:ec2/getInstanceTypeOffering:getInstanceTypeOffering", args ?? new GetInstanceTypeOfferingArgs(), options.WithDefaults());

        /// <summary>
        /// Information about single EC2 Instance Type Offering.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const example = aws.ec2.getInstanceTypeOffering({
        ///     filters: [{
        ///         name: "instance-type",
        ///         values: [
        ///             "t2.micro",
        ///             "t3.micro",
        ///         ],
        ///     }],
        ///     preferredInstanceTypes: [
        ///         "t3.micro",
        ///         "t2.micro",
        ///     ],
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// example = aws.ec2.get_instance_type_offering(filters=[aws.ec2.GetInstanceTypeOfferingFilterArgs(
        ///         name="instance-type",
        ///         values=[
        ///             "t2.micro",
        ///             "t3.micro",
        ///         ],
        ///     )],
        ///     preferred_instance_types=[
        ///         "t3.micro",
        ///         "t2.micro",
        ///     ])
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Ec2.GetInstanceTypeOffering.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Aws.Ec2.Inputs.GetInstanceTypeOfferingFilterInputArgs
        ///             {
        ///                 Name = "instance-type",
        ///                 Values = new[]
        ///                 {
        ///                     "t2.micro",
        ///                     "t3.micro",
        ///                 },
        ///             },
        ///         },
        ///         PreferredInstanceTypes = new[]
        ///         {
        ///             "t3.micro",
        ///             "t2.micro",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/ec2"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := ec2.GetInstanceTypeOffering(ctx, &amp;ec2.GetInstanceTypeOfferingArgs{
        /// 			Filters: []ec2.GetInstanceTypeOfferingFilter{
        /// 				{
        /// 					Name: "instance-type",
        /// 					Values: []string{
        /// 						"t2.micro",
        /// 						"t3.micro",
        /// 					},
        /// 				},
        /// 			},
        /// 			PreferredInstanceTypes: []string{
        /// 				"t3.micro",
        /// 				"t2.micro",
        /// 			},
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.ec2.Ec2Functions;
        /// import com.pulumi.aws.ec2.inputs.GetInstanceTypeOfferingArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var example = Ec2Functions.getInstanceTypeOffering(GetInstanceTypeOfferingArgs.builder()
        ///             .filters(GetInstanceTypeOfferingFilterArgs.builder()
        ///                 .name("instance-type")
        ///                 .values(                
        ///                     "t2.micro",
        ///                     "t3.micro")
        ///                 .build())
        ///             .preferredInstanceTypes(            
        ///                 "t3.micro",
        ///                 "t2.micro")
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   example:
        ///     fn::invoke:
        ///       Function: aws:ec2:getInstanceTypeOffering
        ///       Arguments:
        ///         filters:
        ///           - name: instance-type
        ///             values:
        ///               - t2.micro
        ///               - t3.micro
        ///         preferredInstanceTypes:
        ///           - t3.micro
        ///           - t2.micro
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetInstanceTypeOfferingResult> Invoke(GetInstanceTypeOfferingInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInstanceTypeOfferingResult>("aws:ec2/getInstanceTypeOffering:getInstanceTypeOffering", args ?? new GetInstanceTypeOfferingInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInstanceTypeOfferingArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetInstanceTypeOfferingFilterArgs>? _filters;

        /// <summary>
        /// One or more configuration blocks containing name-values filters. See the [EC2 API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstanceTypeOfferings.html) for supported filters. Detailed below.
        /// </summary>
        public List<Inputs.GetInstanceTypeOfferingFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetInstanceTypeOfferingFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Location type. Defaults to `region`. Valid values: `availability-zone`, `availability-zone-id`, and `region`.
        /// </summary>
        [Input("locationType")]
        public string? LocationType { get; set; }

        [Input("preferredInstanceTypes")]
        private List<string>? _preferredInstanceTypes;

        /// <summary>
        /// Ordered list of preferred EC2 Instance Types. The first match in this list will be returned. If no preferred matches are found and the original search returned more than one result, an error is returned.
        /// </summary>
        public List<string> PreferredInstanceTypes
        {
            get => _preferredInstanceTypes ?? (_preferredInstanceTypes = new List<string>());
            set => _preferredInstanceTypes = value;
        }

        public GetInstanceTypeOfferingArgs()
        {
        }
        public static new GetInstanceTypeOfferingArgs Empty => new GetInstanceTypeOfferingArgs();
    }

    public sealed class GetInstanceTypeOfferingInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetInstanceTypeOfferingFilterInputArgs>? _filters;

        /// <summary>
        /// One or more configuration blocks containing name-values filters. See the [EC2 API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstanceTypeOfferings.html) for supported filters. Detailed below.
        /// </summary>
        public InputList<Inputs.GetInstanceTypeOfferingFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetInstanceTypeOfferingFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Location type. Defaults to `region`. Valid values: `availability-zone`, `availability-zone-id`, and `region`.
        /// </summary>
        [Input("locationType")]
        public Input<string>? LocationType { get; set; }

        [Input("preferredInstanceTypes")]
        private InputList<string>? _preferredInstanceTypes;

        /// <summary>
        /// Ordered list of preferred EC2 Instance Types. The first match in this list will be returned. If no preferred matches are found and the original search returned more than one result, an error is returned.
        /// </summary>
        public InputList<string> PreferredInstanceTypes
        {
            get => _preferredInstanceTypes ?? (_preferredInstanceTypes = new InputList<string>());
            set => _preferredInstanceTypes = value;
        }

        public GetInstanceTypeOfferingInvokeArgs()
        {
        }
        public static new GetInstanceTypeOfferingInvokeArgs Empty => new GetInstanceTypeOfferingInvokeArgs();
    }


    [OutputType]
    public sealed class GetInstanceTypeOfferingResult
    {
        public readonly ImmutableArray<Outputs.GetInstanceTypeOfferingFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// EC2 Instance Type.
        /// </summary>
        public readonly string InstanceType;
        public readonly string? LocationType;
        public readonly ImmutableArray<string> PreferredInstanceTypes;

        [OutputConstructor]
        private GetInstanceTypeOfferingResult(
            ImmutableArray<Outputs.GetInstanceTypeOfferingFilterResult> filters,

            string id,

            string instanceType,

            string? locationType,

            ImmutableArray<string> preferredInstanceTypes)
        {
            Filters = filters;
            Id = id;
            InstanceType = instanceType;
            LocationType = locationType;
            PreferredInstanceTypes = preferredInstanceTypes;
        }
    }
}
