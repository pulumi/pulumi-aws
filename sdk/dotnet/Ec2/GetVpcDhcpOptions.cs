// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2
{
    public static partial class Invokes
    {
        /// <summary>
        /// Retrieve information about an EC2 DHCP Options configuration.
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/d/vpc_dhcp_options.html.markdown.
        /// </summary>
        [Obsolete("Use GetVpcDhcpOptions.InvokeAsync() instead")]
        public static Task<GetVpcDhcpOptionsResult> GetVpcDhcpOptions(GetVpcDhcpOptionsArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetVpcDhcpOptionsResult>("aws:ec2/getVpcDhcpOptions:getVpcDhcpOptions", args ?? InvokeArgs.Empty, options.WithVersion());
    }
    public static class GetVpcDhcpOptions
    {
        /// <summary>
        /// Retrieve information about an EC2 DHCP Options configuration.
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/d/vpc_dhcp_options.html.markdown.
        /// </summary>
        public static Task<GetVpcDhcpOptionsResult> InvokeAsync(GetVpcDhcpOptionsArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetVpcDhcpOptionsResult>("aws:ec2/getVpcDhcpOptions:getVpcDhcpOptions", args ?? InvokeArgs.Empty, options.WithVersion());
    }

    public sealed class GetVpcDhcpOptionsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The EC2 DHCP Options ID.
        /// </summary>
        [Input("dhcpOptionsId")]
        public string? DhcpOptionsId { get; set; }

        [Input("filters")]
        private List<Inputs.GetVpcDhcpOptionsFiltersArgs>? _filters;

        /// <summary>
        /// List of custom filters as described below.
        /// </summary>
        public List<Inputs.GetVpcDhcpOptionsFiltersArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetVpcDhcpOptionsFiltersArgs>());
            set => _filters = value;
        }

        [Input("tags")]
        private Dictionary<string, object>? _tags;

        /// <summary>
        /// A mapping of tags assigned to the resource.
        /// </summary>
        public Dictionary<string, object> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, object>());
            set => _tags = value;
        }

        public GetVpcDhcpOptionsArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetVpcDhcpOptionsResult
    {
        /// <summary>
        /// EC2 DHCP Options ID
        /// </summary>
        public readonly string DhcpOptionsId;
        /// <summary>
        /// The suffix domain name to used when resolving non Fully Qualified Domain Names. e.g. the `search` value in the `/etc/resolv.conf` file.
        /// </summary>
        public readonly string DomainName;
        /// <summary>
        /// List of name servers.
        /// </summary>
        public readonly ImmutableArray<string> DomainNameServers;
        public readonly ImmutableArray<Outputs.GetVpcDhcpOptionsFiltersResult> Filters;
        /// <summary>
        /// List of NETBIOS name servers.
        /// </summary>
        public readonly ImmutableArray<string> NetbiosNameServers;
        /// <summary>
        /// The NetBIOS node type (1, 2, 4, or 8). For more information about these node types, see [RFC 2132](http://www.ietf.org/rfc/rfc2132.txt).
        /// </summary>
        public readonly string NetbiosNodeType;
        /// <summary>
        /// List of NTP servers.
        /// </summary>
        public readonly ImmutableArray<string> NtpServers;
        /// <summary>
        /// The ID of the AWS account that owns the DHCP options set.
        /// </summary>
        public readonly string OwnerId;
        /// <summary>
        /// A mapping of tags assigned to the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, object> Tags;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetVpcDhcpOptionsResult(
            string dhcpOptionsId,
            string domainName,
            ImmutableArray<string> domainNameServers,
            ImmutableArray<Outputs.GetVpcDhcpOptionsFiltersResult> filters,
            ImmutableArray<string> netbiosNameServers,
            string netbiosNodeType,
            ImmutableArray<string> ntpServers,
            string ownerId,
            ImmutableDictionary<string, object> tags,
            string id)
        {
            DhcpOptionsId = dhcpOptionsId;
            DomainName = domainName;
            DomainNameServers = domainNameServers;
            Filters = filters;
            NetbiosNameServers = netbiosNameServers;
            NetbiosNodeType = netbiosNodeType;
            NtpServers = ntpServers;
            OwnerId = ownerId;
            Tags = tags;
            Id = id;
        }
    }

    namespace Inputs
    {

    public sealed class GetVpcDhcpOptionsFiltersArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the field to filter.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("values", required: true)]
        private List<string>? _values;

        /// <summary>
        /// Set of values for filtering.
        /// </summary>
        public List<string> Values
        {
            get => _values ?? (_values = new List<string>());
            set => _values = value;
        }

        public GetVpcDhcpOptionsFiltersArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class GetVpcDhcpOptionsFiltersResult
    {
        /// <summary>
        /// The name of the field to filter.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Set of values for filtering.
        /// </summary>
        public readonly ImmutableArray<string> Values;

        [OutputConstructor]
        private GetVpcDhcpOptionsFiltersResult(
            string name,
            ImmutableArray<string> values)
        {
            Name = name;
            Values = values;
        }
    }
    }
}
