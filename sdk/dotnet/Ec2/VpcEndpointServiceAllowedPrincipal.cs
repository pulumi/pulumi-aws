// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2
{
    /// <summary>
    /// Provides a resource to allow a principal to discover a VPC endpoint service.
    /// 
    /// &gt; **NOTE on VPC Endpoint Services and VPC Endpoint Service Allowed Principals:** This provider provides
    /// both a standalone VPC Endpoint Service Allowed Principal resource
    /// and a VPC Endpoint Service resource with an `allowed_principals` attribute. Do not use the same principal ARN in both
    /// a VPC Endpoint Service resource and a VPC Endpoint Service Allowed Principal resource. Doing so will cause a conflict
    /// and will overwrite the association.
    /// 
    /// ## Example Usage
    /// 
    /// Basic usage:
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var current = Aws.GetCallerIdentity.Invoke();
    /// 
    ///     var allowMeToFoo = new Aws.Ec2.VpcEndpointServiceAllowedPrincipal("allow_me_to_foo", new()
    ///     {
    ///         VpcEndpointServiceId = foo.Id,
    ///         PrincipalArn = current.Apply(getCallerIdentityResult =&gt; getCallerIdentityResult.Arn),
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [AwsResourceType("aws:ec2/vpcEndpointServiceAllowedPrincipal:VpcEndpointServiceAllowedPrincipal")]
    public partial class VpcEndpointServiceAllowedPrincipal : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ARN of the principal to allow permissions.
        /// </summary>
        [Output("principalArn")]
        public Output<string> PrincipalArn { get; private set; } = null!;

        /// <summary>
        /// The ID of the VPC endpoint service to allow permission.
        /// </summary>
        [Output("vpcEndpointServiceId")]
        public Output<string> VpcEndpointServiceId { get; private set; } = null!;


        /// <summary>
        /// Create a VpcEndpointServiceAllowedPrincipal resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VpcEndpointServiceAllowedPrincipal(string name, VpcEndpointServiceAllowedPrincipalArgs args, CustomResourceOptions? options = null)
            : base("aws:ec2/vpcEndpointServiceAllowedPrincipal:VpcEndpointServiceAllowedPrincipal", name, args ?? new VpcEndpointServiceAllowedPrincipalArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VpcEndpointServiceAllowedPrincipal(string name, Input<string> id, VpcEndpointServiceAllowedPrincipalState? state = null, CustomResourceOptions? options = null)
            : base("aws:ec2/vpcEndpointServiceAllowedPrincipal:VpcEndpointServiceAllowedPrincipal", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "aws:ec2/vpcEndpointServiceAllowedPrinciple:VpcEndpointServiceAllowedPrinciple" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VpcEndpointServiceAllowedPrincipal resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VpcEndpointServiceAllowedPrincipal Get(string name, Input<string> id, VpcEndpointServiceAllowedPrincipalState? state = null, CustomResourceOptions? options = null)
        {
            return new VpcEndpointServiceAllowedPrincipal(name, id, state, options);
        }
    }

    public sealed class VpcEndpointServiceAllowedPrincipalArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ARN of the principal to allow permissions.
        /// </summary>
        [Input("principalArn", required: true)]
        public Input<string> PrincipalArn { get; set; } = null!;

        /// <summary>
        /// The ID of the VPC endpoint service to allow permission.
        /// </summary>
        [Input("vpcEndpointServiceId", required: true)]
        public Input<string> VpcEndpointServiceId { get; set; } = null!;

        public VpcEndpointServiceAllowedPrincipalArgs()
        {
        }
        public static new VpcEndpointServiceAllowedPrincipalArgs Empty => new VpcEndpointServiceAllowedPrincipalArgs();
    }

    public sealed class VpcEndpointServiceAllowedPrincipalState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ARN of the principal to allow permissions.
        /// </summary>
        [Input("principalArn")]
        public Input<string>? PrincipalArn { get; set; }

        /// <summary>
        /// The ID of the VPC endpoint service to allow permission.
        /// </summary>
        [Input("vpcEndpointServiceId")]
        public Input<string>? VpcEndpointServiceId { get; set; }

        public VpcEndpointServiceAllowedPrincipalState()
        {
        }
        public static new VpcEndpointServiceAllowedPrincipalState Empty => new VpcEndpointServiceAllowedPrincipalState();
    }
}
