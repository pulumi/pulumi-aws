// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2
{
    public static class GetManagedPrefixList
    {
        public static Task<GetManagedPrefixListResult> InvokeAsync(GetManagedPrefixListArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagedPrefixListResult>("aws:ec2/getManagedPrefixList:getManagedPrefixList", args ?? new GetManagedPrefixListArgs(), options.WithDefaults());

        public static Output<GetManagedPrefixListResult> Invoke(GetManagedPrefixListInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedPrefixListResult>("aws:ec2/getManagedPrefixList:getManagedPrefixList", args ?? new GetManagedPrefixListInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedPrefixListArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetManagedPrefixListFilterArgs>? _filters;
        public List<Inputs.GetManagedPrefixListFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetManagedPrefixListFilterArgs>());
            set => _filters = value;
        }

        [Input("id")]
        public string? Id { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        [Input("tags")]
        private Dictionary<string, string>? _tags;
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetManagedPrefixListArgs()
        {
        }
        public static new GetManagedPrefixListArgs Empty => new GetManagedPrefixListArgs();
    }

    public sealed class GetManagedPrefixListInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetManagedPrefixListFilterInputArgs>? _filters;
        public InputList<Inputs.GetManagedPrefixListFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetManagedPrefixListFilterInputArgs>());
            set => _filters = value;
        }

        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetManagedPrefixListInvokeArgs()
        {
        }
        public static new GetManagedPrefixListInvokeArgs Empty => new GetManagedPrefixListInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedPrefixListResult
    {
        public readonly string AddressFamily;
        public readonly string Arn;
        public readonly ImmutableArray<Outputs.GetManagedPrefixListEntryResult> Entries;
        public readonly ImmutableArray<Outputs.GetManagedPrefixListFilterResult> Filters;
        public readonly string Id;
        public readonly int MaxEntries;
        public readonly string Name;
        public readonly string OwnerId;
        public readonly ImmutableDictionary<string, string> Tags;
        public readonly int Version;

        [OutputConstructor]
        private GetManagedPrefixListResult(
            string addressFamily,

            string arn,

            ImmutableArray<Outputs.GetManagedPrefixListEntryResult> entries,

            ImmutableArray<Outputs.GetManagedPrefixListFilterResult> filters,

            string id,

            int maxEntries,

            string name,

            string ownerId,

            ImmutableDictionary<string, string> tags,

            int version)
        {
            AddressFamily = addressFamily;
            Arn = arn;
            Entries = entries;
            Filters = filters;
            Id = id;
            MaxEntries = maxEntries;
            Name = name;
            OwnerId = ownerId;
            Tags = tags;
            Version = version;
        }
    }
}
