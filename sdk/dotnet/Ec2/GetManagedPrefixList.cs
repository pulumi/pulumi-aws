// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2
{
    public static class GetManagedPrefixList
    {
        /// <summary>
        /// `aws.ec2.ManagedPrefixList` provides details about a specific AWS prefix list or
        /// customer-managed prefix list in the current region.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### Find the regional DynamoDB prefix list
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const current = aws.getRegion({});
        /// const example = current.then(current =&gt; aws.ec2.getManagedPrefixList({
        ///     name: `com.amazonaws.${current.name}.dynamodb`,
        /// }));
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// current = aws.get_region()
        /// example = aws.ec2.get_managed_prefix_list(name=f"com.amazonaws.{current.name}.dynamodb")
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var current = Aws.GetRegion.Invoke();
        /// 
        ///     var example = Aws.Ec2.GetManagedPrefixList.Invoke(new()
        ///     {
        ///         Name = $"com.amazonaws.{current.Apply(getRegionResult =&gt; getRegionResult.Name)}.dynamodb",
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"fmt"
        /// 
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws"
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/ec2"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		current, err := aws.GetRegion(ctx, nil, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		_, err = ec2.LookupManagedPrefixList(ctx, &amp;ec2.LookupManagedPrefixListArgs{
        /// 			Name: pulumi.StringRef(fmt.Sprintf("com.amazonaws.%v.dynamodb", current.Name)),
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.AwsFunctions;
        /// import com.pulumi.aws.inputs.GetRegionArgs;
        /// import com.pulumi.aws.ec2.Ec2Functions;
        /// import com.pulumi.aws.ec2.inputs.GetManagedPrefixListArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var current = AwsFunctions.getRegion();
        /// 
        ///         final var example = Ec2Functions.getManagedPrefixList(GetManagedPrefixListArgs.builder()
        ///             .name(String.format("com.amazonaws.%s.dynamodb", current.applyValue(getRegionResult -&gt; getRegionResult.name())))
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   current:
        ///     fn::invoke:
        ///       Function: aws:getRegion
        ///       Arguments: {}
        ///   example:
        ///     fn::invoke:
        ///       Function: aws:ec2:getManagedPrefixList
        ///       Arguments:
        ///         name: com.amazonaws.${current.name}.dynamodb
        /// ```
        /// {{% /example %}}
        /// {{% example %}}
        /// ### Find a managed prefix list using filters
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const example = aws.ec2.getManagedPrefixList({
        ///     filters: [{
        ///         name: "prefix-list-name",
        ///         values: ["my-prefix-list"],
        ///     }],
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// example = aws.ec2.get_managed_prefix_list(filters=[aws.ec2.GetManagedPrefixListFilterArgs(
        ///     name="prefix-list-name",
        ///     values=["my-prefix-list"],
        /// )])
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Ec2.GetManagedPrefixList.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Aws.Ec2.Inputs.GetManagedPrefixListFilterInputArgs
        ///             {
        ///                 Name = "prefix-list-name",
        ///                 Values = new[]
        ///                 {
        ///                     "my-prefix-list",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/ec2"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := ec2.LookupManagedPrefixList(ctx, &amp;ec2.LookupManagedPrefixListArgs{
        /// 			Filters: []ec2.GetManagedPrefixListFilter{
        /// 				{
        /// 					Name: "prefix-list-name",
        /// 					Values: []string{
        /// 						"my-prefix-list",
        /// 					},
        /// 				},
        /// 			},
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.ec2.Ec2Functions;
        /// import com.pulumi.aws.ec2.inputs.GetManagedPrefixListArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var example = Ec2Functions.getManagedPrefixList(GetManagedPrefixListArgs.builder()
        ///             .filters(GetManagedPrefixListFilterArgs.builder()
        ///                 .name("prefix-list-name")
        ///                 .values("my-prefix-list")
        ///                 .build())
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   example:
        ///     fn::invoke:
        ///       Function: aws:ec2:getManagedPrefixList
        ///       Arguments:
        ///         filters:
        ///           - name: prefix-list-name
        ///             values:
        ///               - my-prefix-list
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetManagedPrefixListResult> InvokeAsync(GetManagedPrefixListArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagedPrefixListResult>("aws:ec2/getManagedPrefixList:getManagedPrefixList", args ?? new GetManagedPrefixListArgs(), options.WithDefaults());

        /// <summary>
        /// `aws.ec2.ManagedPrefixList` provides details about a specific AWS prefix list or
        /// customer-managed prefix list in the current region.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### Find the regional DynamoDB prefix list
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const current = aws.getRegion({});
        /// const example = current.then(current =&gt; aws.ec2.getManagedPrefixList({
        ///     name: `com.amazonaws.${current.name}.dynamodb`,
        /// }));
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// current = aws.get_region()
        /// example = aws.ec2.get_managed_prefix_list(name=f"com.amazonaws.{current.name}.dynamodb")
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var current = Aws.GetRegion.Invoke();
        /// 
        ///     var example = Aws.Ec2.GetManagedPrefixList.Invoke(new()
        ///     {
        ///         Name = $"com.amazonaws.{current.Apply(getRegionResult =&gt; getRegionResult.Name)}.dynamodb",
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"fmt"
        /// 
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws"
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/ec2"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		current, err := aws.GetRegion(ctx, nil, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		_, err = ec2.LookupManagedPrefixList(ctx, &amp;ec2.LookupManagedPrefixListArgs{
        /// 			Name: pulumi.StringRef(fmt.Sprintf("com.amazonaws.%v.dynamodb", current.Name)),
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.AwsFunctions;
        /// import com.pulumi.aws.inputs.GetRegionArgs;
        /// import com.pulumi.aws.ec2.Ec2Functions;
        /// import com.pulumi.aws.ec2.inputs.GetManagedPrefixListArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var current = AwsFunctions.getRegion();
        /// 
        ///         final var example = Ec2Functions.getManagedPrefixList(GetManagedPrefixListArgs.builder()
        ///             .name(String.format("com.amazonaws.%s.dynamodb", current.applyValue(getRegionResult -&gt; getRegionResult.name())))
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   current:
        ///     fn::invoke:
        ///       Function: aws:getRegion
        ///       Arguments: {}
        ///   example:
        ///     fn::invoke:
        ///       Function: aws:ec2:getManagedPrefixList
        ///       Arguments:
        ///         name: com.amazonaws.${current.name}.dynamodb
        /// ```
        /// {{% /example %}}
        /// {{% example %}}
        /// ### Find a managed prefix list using filters
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const example = aws.ec2.getManagedPrefixList({
        ///     filters: [{
        ///         name: "prefix-list-name",
        ///         values: ["my-prefix-list"],
        ///     }],
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// example = aws.ec2.get_managed_prefix_list(filters=[aws.ec2.GetManagedPrefixListFilterArgs(
        ///     name="prefix-list-name",
        ///     values=["my-prefix-list"],
        /// )])
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Ec2.GetManagedPrefixList.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Aws.Ec2.Inputs.GetManagedPrefixListFilterInputArgs
        ///             {
        ///                 Name = "prefix-list-name",
        ///                 Values = new[]
        ///                 {
        ///                     "my-prefix-list",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/ec2"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := ec2.LookupManagedPrefixList(ctx, &amp;ec2.LookupManagedPrefixListArgs{
        /// 			Filters: []ec2.GetManagedPrefixListFilter{
        /// 				{
        /// 					Name: "prefix-list-name",
        /// 					Values: []string{
        /// 						"my-prefix-list",
        /// 					},
        /// 				},
        /// 			},
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.ec2.Ec2Functions;
        /// import com.pulumi.aws.ec2.inputs.GetManagedPrefixListArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var example = Ec2Functions.getManagedPrefixList(GetManagedPrefixListArgs.builder()
        ///             .filters(GetManagedPrefixListFilterArgs.builder()
        ///                 .name("prefix-list-name")
        ///                 .values("my-prefix-list")
        ///                 .build())
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   example:
        ///     fn::invoke:
        ///       Function: aws:ec2:getManagedPrefixList
        ///       Arguments:
        ///         filters:
        ///           - name: prefix-list-name
        ///             values:
        ///               - my-prefix-list
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetManagedPrefixListResult> Invoke(GetManagedPrefixListInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedPrefixListResult>("aws:ec2/getManagedPrefixList:getManagedPrefixList", args ?? new GetManagedPrefixListInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedPrefixListArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetManagedPrefixListFilterArgs>? _filters;

        /// <summary>
        /// Configuration block(s) for filtering. Detailed below.
        /// </summary>
        public List<Inputs.GetManagedPrefixListFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetManagedPrefixListFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// ID of the prefix list to select.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// Name of the prefix list to select.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        [Input("tags")]
        private Dictionary<string, string>? _tags;

        /// <summary>
        /// Map of tags assigned to the resource.
        /// </summary>
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetManagedPrefixListArgs()
        {
        }
        public static new GetManagedPrefixListArgs Empty => new GetManagedPrefixListArgs();
    }

    public sealed class GetManagedPrefixListInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetManagedPrefixListFilterInputArgs>? _filters;

        /// <summary>
        /// Configuration block(s) for filtering. Detailed below.
        /// </summary>
        public InputList<Inputs.GetManagedPrefixListFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetManagedPrefixListFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// ID of the prefix list to select.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Name of the prefix list to select.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Map of tags assigned to the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetManagedPrefixListInvokeArgs()
        {
        }
        public static new GetManagedPrefixListInvokeArgs Empty => new GetManagedPrefixListInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedPrefixListResult
    {
        /// <summary>
        /// Address family of the prefix list. Valid values are `IPv4` and `IPv6`.
        /// </summary>
        public readonly string AddressFamily;
        /// <summary>
        /// ARN of the selected prefix list.
        /// </summary>
        public readonly string Arn;
        /// <summary>
        /// Set of entries in this prefix list. Each entry is an object with `cidr` and `description`.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetManagedPrefixListEntryResult> Entries;
        public readonly ImmutableArray<Outputs.GetManagedPrefixListFilterResult> Filters;
        /// <summary>
        /// ID of the selected prefix list.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// When then prefix list is managed, the maximum number of entries it supports, or null otherwise.
        /// </summary>
        public readonly int MaxEntries;
        /// <summary>
        /// Name of the selected prefix list.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Account ID of the owner of a customer-managed prefix list, or `AWS` otherwise.
        /// </summary>
        public readonly string OwnerId;
        /// <summary>
        /// Map of tags assigned to the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        public readonly int Version;

        [OutputConstructor]
        private GetManagedPrefixListResult(
            string addressFamily,

            string arn,

            ImmutableArray<Outputs.GetManagedPrefixListEntryResult> entries,

            ImmutableArray<Outputs.GetManagedPrefixListFilterResult> filters,

            string id,

            int maxEntries,

            string name,

            string ownerId,

            ImmutableDictionary<string, string> tags,

            int version)
        {
            AddressFamily = addressFamily;
            Arn = arn;
            Entries = entries;
            Filters = filters;
            Id = id;
            MaxEntries = maxEntries;
            Name = name;
            OwnerId = ownerId;
            Tags = tags;
            Version = version;
        }
    }
}
