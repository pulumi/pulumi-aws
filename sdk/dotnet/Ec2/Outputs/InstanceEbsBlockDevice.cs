// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2.Outputs
{

    [OutputType]
    public sealed class InstanceEbsBlockDevice
    {
        /// <summary>
        /// Whether the volume should be destroyed on instance termination. Defaults to `true`.
        /// </summary>
        public readonly bool? DeleteOnTermination;
        /// <summary>
        /// Name of the device to mount.
        /// </summary>
        public readonly string DeviceName;
        /// <summary>
        /// Enables [EBS encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html) on the volume. Defaults to `false`. Cannot be used with `snapshot_id`. Must be configured to perform drift detection.
        /// </summary>
        public readonly bool? Encrypted;
        /// <summary>
        /// Amount of provisioned [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html). Only valid for volume_type of `io1`, `io2` or `gp3`.
        /// </summary>
        public readonly int? Iops;
        /// <summary>
        /// Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
        /// </summary>
        public readonly string? KmsKeyId;
        /// <summary>
        /// Snapshot ID to mount.
        /// </summary>
        public readonly string? SnapshotId;
        /// <summary>
        /// Map of tags to assign to the device.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// Throughput to provision for a volume in mebibytes per second (MiB/s). This is only valid for `volume_type` of `gp3`.
        /// </summary>
        public readonly int? Throughput;
        /// <summary>
        /// ID of the volume. For example, the ID can be accessed like this, `aws_instance.web.root_block_device.0.volume_id`.
        /// </summary>
        public readonly string? VolumeId;
        /// <summary>
        /// Size of the volume in gibibytes (GiB).
        /// </summary>
        public readonly int? VolumeSize;
        /// <summary>
        /// Type of volume. Valid values include `standard`, `gp2`, `gp3`, `io1`, `io2`, `sc1`, or `st1`. Defaults to `gp2`.
        /// 
        /// &gt; **NOTE:** Currently, changes to the `ebs_block_device` configuration of _existing_ resources cannot be automatically detected by this provider. To manage changes and attachments of an EBS block to an instance, use the `aws.ebs.Volume` and `aws.ec2.VolumeAttachment` resources instead. If you use `ebs_block_device` on an `aws.ec2.Instance`, this provider will assume management over the full set of non-root EBS block devices for the instance, treating additional block devices as drift. For this reason, `ebs_block_device` cannot be mixed with external `aws.ebs.Volume` and `aws.ec2.VolumeAttachment` resources for a given instance.
        /// </summary>
        public readonly string? VolumeType;

        [OutputConstructor]
        private InstanceEbsBlockDevice(
            bool? deleteOnTermination,

            string deviceName,

            bool? encrypted,

            int? iops,

            string? kmsKeyId,

            string? snapshotId,

            ImmutableDictionary<string, string>? tags,

            int? throughput,

            string? volumeId,

            int? volumeSize,

            string? volumeType)
        {
            DeleteOnTermination = deleteOnTermination;
            DeviceName = deviceName;
            Encrypted = encrypted;
            Iops = iops;
            KmsKeyId = kmsKeyId;
            SnapshotId = snapshotId;
            Tags = tags;
            Throughput = throughput;
            VolumeId = volumeId;
            VolumeSize = volumeSize;
            VolumeType = volumeType;
        }
    }
}
