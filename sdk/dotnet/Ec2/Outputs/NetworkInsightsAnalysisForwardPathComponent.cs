// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2.Outputs
{

    [OutputType]
    public sealed class NetworkInsightsAnalysisForwardPathComponent
    {
        public readonly ImmutableArray<Outputs.NetworkInsightsAnalysisForwardPathComponentAclRule> AclRules;
        public readonly ImmutableArray<Outputs.NetworkInsightsAnalysisForwardPathComponentAdditionalDetail> AdditionalDetails;
        public readonly ImmutableArray<Outputs.NetworkInsightsAnalysisForwardPathComponentAttachedTo> AttachedTos;
        public readonly ImmutableArray<Outputs.NetworkInsightsAnalysisForwardPathComponentComponent> Components;
        public readonly ImmutableArray<Outputs.NetworkInsightsAnalysisForwardPathComponentDestinationVpc> DestinationVpcs;
        public readonly ImmutableArray<Outputs.NetworkInsightsAnalysisForwardPathComponentInboundHeader> InboundHeaders;
        public readonly ImmutableArray<Outputs.NetworkInsightsAnalysisForwardPathComponentOutboundHeader> OutboundHeaders;
        public readonly ImmutableArray<Outputs.NetworkInsightsAnalysisForwardPathComponentRouteTableRoute> RouteTableRoutes;
        public readonly ImmutableArray<Outputs.NetworkInsightsAnalysisForwardPathComponentSecurityGroupRule> SecurityGroupRules;
        public readonly int? SequenceNumber;
        public readonly ImmutableArray<Outputs.NetworkInsightsAnalysisForwardPathComponentSourceVpc> SourceVpcs;
        public readonly ImmutableArray<Outputs.NetworkInsightsAnalysisForwardPathComponentSubnet> Subnets;
        public readonly ImmutableArray<Outputs.NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRoute> TransitGatewayRouteTableRoutes;
        public readonly ImmutableArray<Outputs.NetworkInsightsAnalysisForwardPathComponentTransitGateway> TransitGateways;
        public readonly ImmutableArray<Outputs.NetworkInsightsAnalysisForwardPathComponentVpc> Vpcs;

        [OutputConstructor]
        private NetworkInsightsAnalysisForwardPathComponent(
            ImmutableArray<Outputs.NetworkInsightsAnalysisForwardPathComponentAclRule> aclRules,

            ImmutableArray<Outputs.NetworkInsightsAnalysisForwardPathComponentAdditionalDetail> additionalDetails,

            ImmutableArray<Outputs.NetworkInsightsAnalysisForwardPathComponentAttachedTo> attachedTos,

            ImmutableArray<Outputs.NetworkInsightsAnalysisForwardPathComponentComponent> components,

            ImmutableArray<Outputs.NetworkInsightsAnalysisForwardPathComponentDestinationVpc> destinationVpcs,

            ImmutableArray<Outputs.NetworkInsightsAnalysisForwardPathComponentInboundHeader> inboundHeaders,

            ImmutableArray<Outputs.NetworkInsightsAnalysisForwardPathComponentOutboundHeader> outboundHeaders,

            ImmutableArray<Outputs.NetworkInsightsAnalysisForwardPathComponentRouteTableRoute> routeTableRoutes,

            ImmutableArray<Outputs.NetworkInsightsAnalysisForwardPathComponentSecurityGroupRule> securityGroupRules,

            int? sequenceNumber,

            ImmutableArray<Outputs.NetworkInsightsAnalysisForwardPathComponentSourceVpc> sourceVpcs,

            ImmutableArray<Outputs.NetworkInsightsAnalysisForwardPathComponentSubnet> subnets,

            ImmutableArray<Outputs.NetworkInsightsAnalysisForwardPathComponentTransitGatewayRouteTableRoute> transitGatewayRouteTableRoutes,

            ImmutableArray<Outputs.NetworkInsightsAnalysisForwardPathComponentTransitGateway> transitGateways,

            ImmutableArray<Outputs.NetworkInsightsAnalysisForwardPathComponentVpc> vpcs)
        {
            AclRules = aclRules;
            AdditionalDetails = additionalDetails;
            AttachedTos = attachedTos;
            Components = components;
            DestinationVpcs = destinationVpcs;
            InboundHeaders = inboundHeaders;
            OutboundHeaders = outboundHeaders;
            RouteTableRoutes = routeTableRoutes;
            SecurityGroupRules = securityGroupRules;
            SequenceNumber = sequenceNumber;
            SourceVpcs = sourceVpcs;
            Subnets = subnets;
            TransitGatewayRouteTableRoutes = transitGatewayRouteTableRoutes;
            TransitGateways = transitGateways;
            Vpcs = vpcs;
        }
    }
}
