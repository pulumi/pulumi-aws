// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2.Outputs
{

    [OutputType]
    public sealed class GetNetworkInsightsAnalysisExplanationResult
    {
        public readonly ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationAclRuleResult> AclRules;
        public readonly ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationAclResult> Acls;
        public readonly string Address;
        public readonly ImmutableArray<string> Addresses;
        public readonly ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationAttachedToResult> AttachedTos;
        public readonly ImmutableArray<string> AvailabilityZones;
        public readonly ImmutableArray<string> Cidrs;
        public readonly ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationClassicLoadBalancerListenerResult> ClassicLoadBalancerListeners;
        public readonly ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationComponentResult> Components;
        public readonly ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationCustomerGatewayResult> CustomerGateways;
        public readonly ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationDestinationVpcResult> DestinationVpcs;
        public readonly ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationDestinationResult> Destinations;
        public readonly string Direction;
        public readonly ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationElasticLoadBalancerListenerResult> ElasticLoadBalancerListeners;
        public readonly string ExplanationCode;
        public readonly ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationIngressRouteTableResult> IngressRouteTables;
        public readonly ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationInternetGatewayResult> InternetGateways;
        public readonly string LoadBalancerArn;
        public readonly int LoadBalancerListenerPort;
        public readonly ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroupResult> LoadBalancerTargetGroup;
        public readonly ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroupResult> LoadBalancerTargetGroups;
        public readonly int LoadBalancerTargetPort;
        public readonly string MissingComponent;
        public readonly ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationNatGatewayResult> NatGateways;
        public readonly ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationNetworkInterfaceResult> NetworkInterfaces;
        public readonly string PacketField;
        public readonly int Port;
        public readonly ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationPortRangeResult> PortRanges;
        public readonly ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationPrefixListResult> PrefixLists;
        public readonly ImmutableArray<string> Protocols;
        public readonly ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationRouteTableRouteResult> RouteTableRoutes;
        public readonly ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationRouteTableResult> RouteTables;
        public readonly ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationSecurityGroupResult> SecurityGroup;
        public readonly ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationSecurityGroupRuleResult> SecurityGroupRules;
        public readonly ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationSecurityGroupResult> SecurityGroups;
        public readonly ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationSourceVpcResult> SourceVpcs;
        public readonly string State;
        public readonly ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationSubnetRouteTableResult> SubnetRouteTables;
        public readonly ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationSubnetResult> Subnets;
        public readonly ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationTransitGatewayAttachmentResult> TransitGatewayAttachments;
        public readonly ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteResult> TransitGatewayRouteTableRoutes;
        public readonly ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableResult> TransitGatewayRouteTables;
        public readonly ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationTransitGatewayResult> TransitGateways;
        public readonly ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationVpcEndpointResult> VpcEndpoints;
        public readonly ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationVpcPeeringConnectionResult> VpcPeeringConnections;
        public readonly ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationVpcResult> Vpcs;
        public readonly ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationVpnConnectionResult> VpnConnections;
        public readonly ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationVpnGatewayResult> VpnGateways;

        [OutputConstructor]
        private GetNetworkInsightsAnalysisExplanationResult(
            ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationAclRuleResult> aclRules,

            ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationAclResult> acls,

            string address,

            ImmutableArray<string> addresses,

            ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationAttachedToResult> attachedTos,

            ImmutableArray<string> availabilityZones,

            ImmutableArray<string> cidrs,

            ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationClassicLoadBalancerListenerResult> classicLoadBalancerListeners,

            ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationComponentResult> components,

            ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationCustomerGatewayResult> customerGateways,

            ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationDestinationVpcResult> destinationVpcs,

            ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationDestinationResult> destinations,

            string direction,

            ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationElasticLoadBalancerListenerResult> elasticLoadBalancerListeners,

            string explanationCode,

            ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationIngressRouteTableResult> ingressRouteTables,

            ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationInternetGatewayResult> internetGateways,

            string loadBalancerArn,

            int loadBalancerListenerPort,

            ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroupResult> loadBalancerTargetGroup,

            ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationLoadBalancerTargetGroupResult> loadBalancerTargetGroups,

            int loadBalancerTargetPort,

            string missingComponent,

            ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationNatGatewayResult> natGateways,

            ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationNetworkInterfaceResult> networkInterfaces,

            string packetField,

            int port,

            ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationPortRangeResult> portRanges,

            ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationPrefixListResult> prefixLists,

            ImmutableArray<string> protocols,

            ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationRouteTableRouteResult> routeTableRoutes,

            ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationRouteTableResult> routeTables,

            ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationSecurityGroupResult> securityGroup,

            ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationSecurityGroupRuleResult> securityGroupRules,

            ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationSecurityGroupResult> securityGroups,

            ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationSourceVpcResult> sourceVpcs,

            string state,

            ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationSubnetRouteTableResult> subnetRouteTables,

            ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationSubnetResult> subnets,

            ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationTransitGatewayAttachmentResult> transitGatewayAttachments,

            ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableRouteResult> transitGatewayRouteTableRoutes,

            ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationTransitGatewayRouteTableResult> transitGatewayRouteTables,

            ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationTransitGatewayResult> transitGateways,

            ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationVpcEndpointResult> vpcEndpoints,

            ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationVpcPeeringConnectionResult> vpcPeeringConnections,

            ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationVpcResult> vpcs,

            ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationVpnConnectionResult> vpnConnections,

            ImmutableArray<Outputs.GetNetworkInsightsAnalysisExplanationVpnGatewayResult> vpnGateways)
        {
            AclRules = aclRules;
            Acls = acls;
            Address = address;
            Addresses = addresses;
            AttachedTos = attachedTos;
            AvailabilityZones = availabilityZones;
            Cidrs = cidrs;
            ClassicLoadBalancerListeners = classicLoadBalancerListeners;
            Components = components;
            CustomerGateways = customerGateways;
            DestinationVpcs = destinationVpcs;
            Destinations = destinations;
            Direction = direction;
            ElasticLoadBalancerListeners = elasticLoadBalancerListeners;
            ExplanationCode = explanationCode;
            IngressRouteTables = ingressRouteTables;
            InternetGateways = internetGateways;
            LoadBalancerArn = loadBalancerArn;
            LoadBalancerListenerPort = loadBalancerListenerPort;
            LoadBalancerTargetGroup = loadBalancerTargetGroup;
            LoadBalancerTargetGroups = loadBalancerTargetGroups;
            LoadBalancerTargetPort = loadBalancerTargetPort;
            MissingComponent = missingComponent;
            NatGateways = natGateways;
            NetworkInterfaces = networkInterfaces;
            PacketField = packetField;
            Port = port;
            PortRanges = portRanges;
            PrefixLists = prefixLists;
            Protocols = protocols;
            RouteTableRoutes = routeTableRoutes;
            RouteTables = routeTables;
            SecurityGroup = securityGroup;
            SecurityGroupRules = securityGroupRules;
            SecurityGroups = securityGroups;
            SourceVpcs = sourceVpcs;
            State = state;
            SubnetRouteTables = subnetRouteTables;
            Subnets = subnets;
            TransitGatewayAttachments = transitGatewayAttachments;
            TransitGatewayRouteTableRoutes = transitGatewayRouteTableRoutes;
            TransitGatewayRouteTables = transitGatewayRouteTables;
            TransitGateways = transitGateways;
            VpcEndpoints = vpcEndpoints;
            VpcPeeringConnections = vpcPeeringConnections;
            Vpcs = vpcs;
            VpnConnections = vpnConnections;
            VpnGateways = vpnGateways;
        }
    }
}
