// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2.Outputs
{

    [OutputType]
    public sealed class AmiFromInstanceEbsBlockDevice
    {
        /// <summary>
        /// Boolean controlling whether the EBS volumes created to
        /// support each created instance will be deleted once that instance is terminated.
        /// </summary>
        public readonly bool? DeleteOnTermination;
        /// <summary>
        /// The path at which the device is exposed to created instances.
        /// </summary>
        public readonly string? DeviceName;
        /// <summary>
        /// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshot_id`.
        /// </summary>
        public readonly bool? Encrypted;
        /// <summary>
        /// Number of I/O operations per second the
        /// created volumes will support.
        /// </summary>
        public readonly int? Iops;
        /// <summary>
        /// The id of an EBS snapshot that will be used to initialize the created
        /// EBS volumes. If set, the `volume_size` attribute must be at least as large as the referenced
        /// snapshot.
        /// </summary>
        public readonly string? SnapshotId;
        /// <summary>
        /// The size of created volumes in GiB.
        /// If `snapshot_id` is set and `volume_size` is omitted then the volume will have the same size
        /// as the selected snapshot.
        /// </summary>
        public readonly int? VolumeSize;
        /// <summary>
        /// The type of EBS volume to create. Can be one of "standard" (the
        /// default), "io1" or "gp2".
        /// </summary>
        public readonly string? VolumeType;

        [OutputConstructor]
        private AmiFromInstanceEbsBlockDevice(
            bool? deleteOnTermination,

            string? deviceName,

            bool? encrypted,

            int? iops,

            string? snapshotId,

            int? volumeSize,

            string? volumeType)
        {
            DeleteOnTermination = deleteOnTermination;
            DeviceName = deviceName;
            Encrypted = encrypted;
            Iops = iops;
            SnapshotId = snapshotId;
            VolumeSize = volumeSize;
            VolumeType = volumeType;
        }
    }
}
