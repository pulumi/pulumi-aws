// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2.Outputs
{

    [OutputType]
    public sealed class NetworkInsightsAnalysisReturnPathComponent
    {
        public readonly ImmutableArray<Outputs.NetworkInsightsAnalysisReturnPathComponentAclRule> AclRules;
        public readonly ImmutableArray<Outputs.NetworkInsightsAnalysisReturnPathComponentAdditionalDetail> AdditionalDetails;
        public readonly ImmutableArray<Outputs.NetworkInsightsAnalysisReturnPathComponentAttachedTo> AttachedTos;
        public readonly ImmutableArray<Outputs.NetworkInsightsAnalysisReturnPathComponentComponent> Components;
        public readonly ImmutableArray<Outputs.NetworkInsightsAnalysisReturnPathComponentDestinationVpc> DestinationVpcs;
        public readonly ImmutableArray<Outputs.NetworkInsightsAnalysisReturnPathComponentInboundHeader> InboundHeaders;
        public readonly ImmutableArray<Outputs.NetworkInsightsAnalysisReturnPathComponentOutboundHeader> OutboundHeaders;
        public readonly ImmutableArray<Outputs.NetworkInsightsAnalysisReturnPathComponentRouteTableRoute> RouteTableRoutes;
        public readonly ImmutableArray<Outputs.NetworkInsightsAnalysisReturnPathComponentSecurityGroupRule> SecurityGroupRules;
        public readonly int? SequenceNumber;
        public readonly ImmutableArray<Outputs.NetworkInsightsAnalysisReturnPathComponentSourceVpc> SourceVpcs;
        public readonly ImmutableArray<Outputs.NetworkInsightsAnalysisReturnPathComponentSubnet> Subnets;
        public readonly ImmutableArray<Outputs.NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRoute> TransitGatewayRouteTableRoutes;
        public readonly ImmutableArray<Outputs.NetworkInsightsAnalysisReturnPathComponentTransitGateway> TransitGateways;
        public readonly ImmutableArray<Outputs.NetworkInsightsAnalysisReturnPathComponentVpc> Vpcs;

        [OutputConstructor]
        private NetworkInsightsAnalysisReturnPathComponent(
            ImmutableArray<Outputs.NetworkInsightsAnalysisReturnPathComponentAclRule> aclRules,

            ImmutableArray<Outputs.NetworkInsightsAnalysisReturnPathComponentAdditionalDetail> additionalDetails,

            ImmutableArray<Outputs.NetworkInsightsAnalysisReturnPathComponentAttachedTo> attachedTos,

            ImmutableArray<Outputs.NetworkInsightsAnalysisReturnPathComponentComponent> components,

            ImmutableArray<Outputs.NetworkInsightsAnalysisReturnPathComponentDestinationVpc> destinationVpcs,

            ImmutableArray<Outputs.NetworkInsightsAnalysisReturnPathComponentInboundHeader> inboundHeaders,

            ImmutableArray<Outputs.NetworkInsightsAnalysisReturnPathComponentOutboundHeader> outboundHeaders,

            ImmutableArray<Outputs.NetworkInsightsAnalysisReturnPathComponentRouteTableRoute> routeTableRoutes,

            ImmutableArray<Outputs.NetworkInsightsAnalysisReturnPathComponentSecurityGroupRule> securityGroupRules,

            int? sequenceNumber,

            ImmutableArray<Outputs.NetworkInsightsAnalysisReturnPathComponentSourceVpc> sourceVpcs,

            ImmutableArray<Outputs.NetworkInsightsAnalysisReturnPathComponentSubnet> subnets,

            ImmutableArray<Outputs.NetworkInsightsAnalysisReturnPathComponentTransitGatewayRouteTableRoute> transitGatewayRouteTableRoutes,

            ImmutableArray<Outputs.NetworkInsightsAnalysisReturnPathComponentTransitGateway> transitGateways,

            ImmutableArray<Outputs.NetworkInsightsAnalysisReturnPathComponentVpc> vpcs)
        {
            AclRules = aclRules;
            AdditionalDetails = additionalDetails;
            AttachedTos = attachedTos;
            Components = components;
            DestinationVpcs = destinationVpcs;
            InboundHeaders = inboundHeaders;
            OutboundHeaders = outboundHeaders;
            RouteTableRoutes = routeTableRoutes;
            SecurityGroupRules = securityGroupRules;
            SequenceNumber = sequenceNumber;
            SourceVpcs = sourceVpcs;
            Subnets = subnets;
            TransitGatewayRouteTableRoutes = transitGatewayRouteTableRoutes;
            TransitGateways = transitGateways;
            Vpcs = vpcs;
        }
    }
}
