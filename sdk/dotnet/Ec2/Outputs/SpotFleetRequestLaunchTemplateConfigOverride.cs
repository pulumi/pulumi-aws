// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2.Outputs
{

    [OutputType]
    public sealed class SpotFleetRequestLaunchTemplateConfigOverride
    {
        /// <summary>
        /// The availability zone in which to place the request.
        /// </summary>
        public readonly string? AvailabilityZone;
        /// <summary>
        /// The instance requirements. See below.
        /// </summary>
        public readonly Outputs.SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements? InstanceRequirements;
        /// <summary>
        /// The type of instance to request.
        /// </summary>
        public readonly string? InstanceType;
        /// <summary>
        /// The priority for the launch template override. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority.
        /// </summary>
        public readonly double? Priority;
        /// <summary>
        /// The maximum spot bid for this override request.
        /// </summary>
        public readonly string? SpotPrice;
        /// <summary>
        /// The subnet in which to launch the requested instance.
        /// </summary>
        public readonly string? SubnetId;
        /// <summary>
        /// The capacity added to the fleet by a fulfilled request.
        /// </summary>
        public readonly double? WeightedCapacity;

        [OutputConstructor]
        private SpotFleetRequestLaunchTemplateConfigOverride(
            string? availabilityZone,

            Outputs.SpotFleetRequestLaunchTemplateConfigOverrideInstanceRequirements? instanceRequirements,

            string? instanceType,

            double? priority,

            string? spotPrice,

            string? subnetId,

            double? weightedCapacity)
        {
            AvailabilityZone = availabilityZone;
            InstanceRequirements = instanceRequirements;
            InstanceType = instanceType;
            Priority = priority;
            SpotPrice = spotPrice;
            SubnetId = subnetId;
            WeightedCapacity = weightedCapacity;
        }
    }
}
