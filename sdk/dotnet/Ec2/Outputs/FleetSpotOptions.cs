// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2.Outputs
{

    [OutputType]
    public sealed class FleetSpotOptions
    {
        /// <summary>
        /// How to allocate the target capacity across the Spot pools. Valid values: `diversified`, `lowestPrice`, `capacity-optimized`, `capacity-optimized-prioritized` and `price-capacity-optimized`. Default: `lowestPrice`.
        /// </summary>
        public readonly string? AllocationStrategy;
        /// <summary>
        /// Behavior when a Spot Instance is interrupted. Valid values: `hibernate`, `stop`, `terminate`. Default: `terminate`.
        /// </summary>
        public readonly string? InstanceInterruptionBehavior;
        /// <summary>
        /// Number of Spot pools across which to allocate your target Spot capacity. Valid only when Spot `allocation_strategy` is set to `lowestPrice`. Default: `1`.
        /// </summary>
        public readonly int? InstancePoolsToUseCount;
        /// <summary>
        /// Nested argument containing maintenance strategies for managing your Spot Instances that are at an elevated risk of being interrupted. Defined below.
        /// </summary>
        public readonly Outputs.FleetSpotOptionsMaintenanceStrategies? MaintenanceStrategies;
        /// <summary>
        /// The maximum amount per hour for Spot Instances that you're willing to pay.
        /// </summary>
        public readonly string? MaxTotalPrice;
        /// <summary>
        /// The minimum target capacity for Spot Instances in the fleet. If the minimum target capacity is not reached, the fleet launches no instances. Supported only for fleets of type `instant`.
        /// </summary>
        public readonly int? MinTargetCapacity;
        /// <summary>
        /// Indicates that the fleet launches all Spot Instances into a single Availability Zone. Supported only for fleets of type `instant`.
        /// </summary>
        public readonly bool? SingleAvailabilityZone;
        /// <summary>
        /// Indicates that the fleet uses a single instance type to launch all Spot Instances in the fleet. Supported only for fleets of type `instant`.
        /// </summary>
        public readonly bool? SingleInstanceType;

        [OutputConstructor]
        private FleetSpotOptions(
            string? allocationStrategy,

            string? instanceInterruptionBehavior,

            int? instancePoolsToUseCount,

            Outputs.FleetSpotOptionsMaintenanceStrategies? maintenanceStrategies,

            string? maxTotalPrice,

            int? minTargetCapacity,

            bool? singleAvailabilityZone,

            bool? singleInstanceType)
        {
            AllocationStrategy = allocationStrategy;
            InstanceInterruptionBehavior = instanceInterruptionBehavior;
            InstancePoolsToUseCount = instancePoolsToUseCount;
            MaintenanceStrategies = maintenanceStrategies;
            MaxTotalPrice = maxTotalPrice;
            MinTargetCapacity = minTargetCapacity;
            SingleAvailabilityZone = singleAvailabilityZone;
            SingleInstanceType = singleInstanceType;
        }
    }
}
