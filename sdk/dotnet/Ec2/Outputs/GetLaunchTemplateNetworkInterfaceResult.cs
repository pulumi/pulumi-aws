// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2.Outputs
{

    [OutputType]
    public sealed class GetLaunchTemplateNetworkInterfaceResult
    {
        public readonly string AssociateCarrierIpAddress;
        public readonly bool? AssociatePublicIpAddress;
        public readonly bool? DeleteOnTermination;
        public readonly string Description;
        public readonly int DeviceIndex;
        public readonly string InterfaceType;
        public readonly int Ipv4AddressCount;
        public readonly ImmutableArray<string> Ipv4Addresses;
        public readonly int Ipv4PrefixCount;
        public readonly ImmutableArray<string> Ipv4Prefixes;
        public readonly int Ipv6AddressCount;
        public readonly ImmutableArray<string> Ipv6Addresses;
        public readonly int Ipv6PrefixCount;
        public readonly ImmutableArray<string> Ipv6Prefixes;
        public readonly int NetworkCardIndex;
        public readonly string NetworkInterfaceId;
        public readonly string PrivateIpAddress;
        public readonly ImmutableArray<string> SecurityGroups;
        public readonly string SubnetId;

        [OutputConstructor]
        private GetLaunchTemplateNetworkInterfaceResult(
            string associateCarrierIpAddress,

            bool? associatePublicIpAddress,

            bool? deleteOnTermination,

            string description,

            int deviceIndex,

            string interfaceType,

            int ipv4AddressCount,

            ImmutableArray<string> ipv4Addresses,

            int ipv4PrefixCount,

            ImmutableArray<string> ipv4Prefixes,

            int ipv6AddressCount,

            ImmutableArray<string> ipv6Addresses,

            int ipv6PrefixCount,

            ImmutableArray<string> ipv6Prefixes,

            int networkCardIndex,

            string networkInterfaceId,

            string privateIpAddress,

            ImmutableArray<string> securityGroups,

            string subnetId)
        {
            AssociateCarrierIpAddress = associateCarrierIpAddress;
            AssociatePublicIpAddress = associatePublicIpAddress;
            DeleteOnTermination = deleteOnTermination;
            Description = description;
            DeviceIndex = deviceIndex;
            InterfaceType = interfaceType;
            Ipv4AddressCount = ipv4AddressCount;
            Ipv4Addresses = ipv4Addresses;
            Ipv4PrefixCount = ipv4PrefixCount;
            Ipv4Prefixes = ipv4Prefixes;
            Ipv6AddressCount = ipv6AddressCount;
            Ipv6Addresses = ipv6Addresses;
            Ipv6PrefixCount = ipv6PrefixCount;
            Ipv6Prefixes = ipv6Prefixes;
            NetworkCardIndex = networkCardIndex;
            NetworkInterfaceId = networkInterfaceId;
            PrivateIpAddress = privateIpAddress;
            SecurityGroups = securityGroups;
            SubnetId = subnetId;
        }
    }
}
