// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2.Outputs
{

    [OutputType]
    public sealed class GetVpcIamPoolsIpamPoolResult
    {
        /// <summary>
        /// IP protocol assigned to this pool.
        /// </summary>
        public readonly string AddressFamily;
        /// <summary>
        /// A default netmask length for allocations added to this pool. If, for example, the CIDR assigned to this pool is `10.0.0.0/8` and you enter 16 here, new allocations will default to `10.0.0.0/16`.
        /// </summary>
        public readonly int AllocationDefaultNetmaskLength;
        /// <summary>
        /// The maximum netmask length that will be required for CIDR allocations in this pool.
        /// </summary>
        public readonly int AllocationMaxNetmaskLength;
        /// <summary>
        /// The minimum netmask length that will be required for CIDR allocations in this pool.
        /// </summary>
        public readonly int AllocationMinNetmaskLength;
        /// <summary>
        /// Tags that are required to create resources in using this pool.
        /// </summary>
        public readonly ImmutableDictionary<string, string> AllocationResourceTags;
        /// <summary>
        /// ARN of the pool
        /// </summary>
        public readonly string Arn;
        /// <summary>
        /// If enabled, IPAM will continuously look for resources within the CIDR range of this pool and automatically import them as allocations into your IPAM.
        /// </summary>
        public readonly bool AutoImport;
        /// <summary>
        /// Limits which service in AWS that the pool can be used in. `ec2` for example, allows users to use space for Elastic IP addresses and VPCs.
        /// </summary>
        public readonly string AwsService;
        /// <summary>
        /// Description for the IPAM pool.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// ID of the IPAM pool.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// ID of the scope the pool belongs to.
        /// </summary>
        public readonly string IpamScopeId;
        public readonly string IpamScopeType;
        /// <summary>
        /// Locale is the Region where your pool is available for allocations. You can only create pools with locales that match the operating Regions of the IPAM. You can only create VPCs from a pool whose locale matches the VPC's Region.
        /// </summary>
        public readonly string Locale;
        public readonly int PoolDepth;
        /// <summary>
        /// Defines whether or not IPv6 pool space is publicly advertisable over the internet.
        /// </summary>
        public readonly bool PubliclyAdvertisable;
        /// <summary>
        /// ID of the source IPAM pool.
        /// </summary>
        public readonly string SourceIpamPoolId;
        public readonly string State;
        /// <summary>
        /// Map of tags to assigned to the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;

        [OutputConstructor]
        private GetVpcIamPoolsIpamPoolResult(
            string addressFamily,

            int allocationDefaultNetmaskLength,

            int allocationMaxNetmaskLength,

            int allocationMinNetmaskLength,

            ImmutableDictionary<string, string> allocationResourceTags,

            string arn,

            bool autoImport,

            string awsService,

            string description,

            string id,

            string ipamScopeId,

            string ipamScopeType,

            string locale,

            int poolDepth,

            bool publiclyAdvertisable,

            string sourceIpamPoolId,

            string state,

            ImmutableDictionary<string, string> tags)
        {
            AddressFamily = addressFamily;
            AllocationDefaultNetmaskLength = allocationDefaultNetmaskLength;
            AllocationMaxNetmaskLength = allocationMaxNetmaskLength;
            AllocationMinNetmaskLength = allocationMinNetmaskLength;
            AllocationResourceTags = allocationResourceTags;
            Arn = arn;
            AutoImport = autoImport;
            AwsService = awsService;
            Description = description;
            Id = id;
            IpamScopeId = ipamScopeId;
            IpamScopeType = ipamScopeType;
            Locale = locale;
            PoolDepth = poolDepth;
            PubliclyAdvertisable = publiclyAdvertisable;
            SourceIpamPoolId = sourceIpamPoolId;
            State = state;
            Tags = tags;
        }
    }
}
