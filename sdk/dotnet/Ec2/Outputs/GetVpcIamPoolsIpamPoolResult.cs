// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2.Outputs
{

    [OutputType]
    public sealed class GetVpcIamPoolsIpamPoolResult
    {
        public readonly string AddressFamily;
        public readonly int AllocationDefaultNetmaskLength;
        public readonly int AllocationMaxNetmaskLength;
        public readonly int AllocationMinNetmaskLength;
        public readonly ImmutableDictionary<string, string> AllocationResourceTags;
        public readonly string Arn;
        public readonly bool AutoImport;
        public readonly string AwsService;
        public readonly string Description;
        public readonly string? Id;
        public readonly string IpamPoolId;
        public readonly string IpamScopeId;
        public readonly string IpamScopeType;
        public readonly string Locale;
        public readonly int PoolDepth;
        public readonly bool PubliclyAdvertisable;
        public readonly string SourceIpamPoolId;
        public readonly string State;
        public readonly ImmutableDictionary<string, string> Tags;

        [OutputConstructor]
        private GetVpcIamPoolsIpamPoolResult(
            string addressFamily,

            int allocationDefaultNetmaskLength,

            int allocationMaxNetmaskLength,

            int allocationMinNetmaskLength,

            ImmutableDictionary<string, string> allocationResourceTags,

            string arn,

            bool autoImport,

            string awsService,

            string description,

            string? id,

            string ipamPoolId,

            string ipamScopeId,

            string ipamScopeType,

            string locale,

            int poolDepth,

            bool publiclyAdvertisable,

            string sourceIpamPoolId,

            string state,

            ImmutableDictionary<string, string> tags)
        {
            AddressFamily = addressFamily;
            AllocationDefaultNetmaskLength = allocationDefaultNetmaskLength;
            AllocationMaxNetmaskLength = allocationMaxNetmaskLength;
            AllocationMinNetmaskLength = allocationMinNetmaskLength;
            AllocationResourceTags = allocationResourceTags;
            Arn = arn;
            AutoImport = autoImport;
            AwsService = awsService;
            Description = description;
            Id = id;
            IpamPoolId = ipamPoolId;
            IpamScopeId = ipamScopeId;
            IpamScopeType = ipamScopeType;
            Locale = locale;
            PoolDepth = poolDepth;
            PubliclyAdvertisable = publiclyAdvertisable;
            SourceIpamPoolId = sourceIpamPoolId;
            State = state;
            Tags = tags;
        }
    }
}
