// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2
{
    /// <summary>
    /// Resource for managing an AWS EC2 (Elastic Compute Cloud) VPC Block Public Access Exclusion.
    /// 
    /// ## Example Usage
    /// 
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var test = new Aws.Ec2.Vpc("test", new()
    ///     {
    ///         CidrBlock = "10.1.0.0/16",
    ///     });
    /// 
    ///     var testVpcBlockPublicAccessExclusion = new Aws.Ec2.VpcBlockPublicAccessExclusion("test", new()
    ///     {
    ///         VpcId = test.Id,
    ///         InternetGatewayExclusionMode = "allow-bidirectional",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ### Usage with subnet id
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var test = new Aws.Ec2.Vpc("test", new()
    ///     {
    ///         CidrBlock = "10.1.0.0/16",
    ///     });
    /// 
    ///     var testSubnet = new Aws.Ec2.Subnet("test", new()
    ///     {
    ///         CidrBlock = "10.1.1.0/24",
    ///         VpcId = test.Id,
    ///     });
    /// 
    ///     var testVpcBlockPublicAccessExclusion = new Aws.Ec2.VpcBlockPublicAccessExclusion("test", new()
    ///     {
    ///         SubnetId = testSubnet.Id,
    ///         InternetGatewayExclusionMode = "allow-egress",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import EC2 (Elastic Compute Cloud) VPC Block Public Access Exclusion using the `id`. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:ec2/vpcBlockPublicAccessExclusion:VpcBlockPublicAccessExclusion example vpcbpa-exclude-1234abcd
    /// ```
    /// </summary>
    [AwsResourceType("aws:ec2/vpcBlockPublicAccessExclusion:VpcBlockPublicAccessExclusion")]
    public partial class VpcBlockPublicAccessExclusion : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Mode of exclusion from Block Public Access. The allowed values are `allow-egress` and `allow-bidirectional`.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Output("internetGatewayExclusionMode")]
        public Output<string> InternetGatewayExclusionMode { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) the excluded resource.
        /// </summary>
        [Output("resourceArn")]
        public Output<string> ResourceArn { get; private set; } = null!;

        /// <summary>
        /// Id of the subnet to which this exclusion applies. Either this or the vpc_id needs to be provided.
        /// </summary>
        [Output("subnetId")]
        public Output<string?> SubnetId { get; private set; } = null!;

        /// <summary>
        /// A map of tags to assign to the exclusion. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("timeouts")]
        public Output<Outputs.VpcBlockPublicAccessExclusionTimeouts?> Timeouts { get; private set; } = null!;

        /// <summary>
        /// Id of the VPC to which this exclusion applies. Either this or the subnet_id needs to be provided.
        /// </summary>
        [Output("vpcId")]
        public Output<string?> VpcId { get; private set; } = null!;


        /// <summary>
        /// Create a VpcBlockPublicAccessExclusion resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VpcBlockPublicAccessExclusion(string name, VpcBlockPublicAccessExclusionArgs args, CustomResourceOptions? options = null)
            : base("aws:ec2/vpcBlockPublicAccessExclusion:VpcBlockPublicAccessExclusion", name, args ?? new VpcBlockPublicAccessExclusionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VpcBlockPublicAccessExclusion(string name, Input<string> id, VpcBlockPublicAccessExclusionState? state = null, CustomResourceOptions? options = null)
            : base("aws:ec2/vpcBlockPublicAccessExclusion:VpcBlockPublicAccessExclusion", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VpcBlockPublicAccessExclusion resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VpcBlockPublicAccessExclusion Get(string name, Input<string> id, VpcBlockPublicAccessExclusionState? state = null, CustomResourceOptions? options = null)
        {
            return new VpcBlockPublicAccessExclusion(name, id, state, options);
        }
    }

    public sealed class VpcBlockPublicAccessExclusionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Mode of exclusion from Block Public Access. The allowed values are `allow-egress` and `allow-bidirectional`.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("internetGatewayExclusionMode", required: true)]
        public Input<string> InternetGatewayExclusionMode { get; set; } = null!;

        /// <summary>
        /// Id of the subnet to which this exclusion applies. Either this or the vpc_id needs to be provided.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the exclusion. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("timeouts")]
        public Input<Inputs.VpcBlockPublicAccessExclusionTimeoutsArgs>? Timeouts { get; set; }

        /// <summary>
        /// Id of the VPC to which this exclusion applies. Either this or the subnet_id needs to be provided.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public VpcBlockPublicAccessExclusionArgs()
        {
        }
        public static new VpcBlockPublicAccessExclusionArgs Empty => new VpcBlockPublicAccessExclusionArgs();
    }

    public sealed class VpcBlockPublicAccessExclusionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Mode of exclusion from Block Public Access. The allowed values are `allow-egress` and `allow-bidirectional`.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("internetGatewayExclusionMode")]
        public Input<string>? InternetGatewayExclusionMode { get; set; }

        /// <summary>
        /// The Amazon Resource Name (ARN) the excluded resource.
        /// </summary>
        [Input("resourceArn")]
        public Input<string>? ResourceArn { get; set; }

        /// <summary>
        /// Id of the subnet to which this exclusion applies. Either this or the vpc_id needs to be provided.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the exclusion. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Obsolete(@"Please use `tags` instead.")]
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("timeouts")]
        public Input<Inputs.VpcBlockPublicAccessExclusionTimeoutsGetArgs>? Timeouts { get; set; }

        /// <summary>
        /// Id of the VPC to which this exclusion applies. Either this or the subnet_id needs to be provided.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public VpcBlockPublicAccessExclusionState()
        {
        }
        public static new VpcBlockPublicAccessExclusionState Empty => new VpcBlockPublicAccessExclusionState();
    }
}
