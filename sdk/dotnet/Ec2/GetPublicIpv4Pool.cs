// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2
{
    public static class GetPublicIpv4Pool
    {
        /// <summary>
        /// Provides details about a specific AWS EC2 Public IPv4 Pool.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Ec2.GetPublicIpv4Pool.Invoke(new()
        ///     {
        ///         PoolId = "ipv4pool-ec2-000df99cff0c1ec10",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetPublicIpv4PoolResult> InvokeAsync(GetPublicIpv4PoolArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPublicIpv4PoolResult>("aws:ec2/getPublicIpv4Pool:getPublicIpv4Pool", args ?? new GetPublicIpv4PoolArgs(), options.WithDefaults());

        /// <summary>
        /// Provides details about a specific AWS EC2 Public IPv4 Pool.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Ec2.GetPublicIpv4Pool.Invoke(new()
        ///     {
        ///         PoolId = "ipv4pool-ec2-000df99cff0c1ec10",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetPublicIpv4PoolResult> Invoke(GetPublicIpv4PoolInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPublicIpv4PoolResult>("aws:ec2/getPublicIpv4Pool:getPublicIpv4Pool", args ?? new GetPublicIpv4PoolInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPublicIpv4PoolArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// AWS resource IDs of a public IPv4 pool (as a string) for which this data source will fetch detailed information.
        /// </summary>
        [Input("poolId", required: true)]
        public string PoolId { get; set; } = null!;

        [Input("tags")]
        private Dictionary<string, string>? _tags;

        /// <summary>
        /// Any tags for the address pool.
        /// </summary>
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetPublicIpv4PoolArgs()
        {
        }
        public static new GetPublicIpv4PoolArgs Empty => new GetPublicIpv4PoolArgs();
    }

    public sealed class GetPublicIpv4PoolInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// AWS resource IDs of a public IPv4 pool (as a string) for which this data source will fetch detailed information.
        /// </summary>
        [Input("poolId", required: true)]
        public Input<string> PoolId { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Any tags for the address pool.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetPublicIpv4PoolInvokeArgs()
        {
        }
        public static new GetPublicIpv4PoolInvokeArgs Empty => new GetPublicIpv4PoolInvokeArgs();
    }


    [OutputType]
    public sealed class GetPublicIpv4PoolResult
    {
        /// <summary>
        /// Description of the pool, if any.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Name of the location from which the address pool is advertised.
        /// * pool_address_ranges` - List of Address Ranges in the Pool; each address range record contains:
        /// </summary>
        public readonly string NetworkBorderGroup;
        public readonly ImmutableArray<Outputs.GetPublicIpv4PoolPoolAddressRangeResult> PoolAddressRanges;
        public readonly string PoolId;
        /// <summary>
        /// Any tags for the address pool.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// Total number of addresses in the pool.
        /// </summary>
        public readonly int TotalAddressCount;
        /// <summary>
        /// Total number of available addresses in the pool.
        /// </summary>
        public readonly int TotalAvailableAddressCount;

        [OutputConstructor]
        private GetPublicIpv4PoolResult(
            string description,

            string id,

            string networkBorderGroup,

            ImmutableArray<Outputs.GetPublicIpv4PoolPoolAddressRangeResult> poolAddressRanges,

            string poolId,

            ImmutableDictionary<string, string> tags,

            int totalAddressCount,

            int totalAvailableAddressCount)
        {
            Description = description;
            Id = id;
            NetworkBorderGroup = networkBorderGroup;
            PoolAddressRanges = poolAddressRanges;
            PoolId = poolId;
            Tags = tags;
            TotalAddressCount = totalAddressCount;
            TotalAvailableAddressCount = totalAvailableAddressCount;
        }
    }
}
