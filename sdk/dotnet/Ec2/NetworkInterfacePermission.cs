// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2
{
    /// <summary>
    /// Grant cross-account access to an Elastic network interface (ENI).
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Ec2.NetworkInterface("example", new()
    ///     {
    ///         SubnetId = exampleAwsSubnet.Id,
    ///         PrivateIps = new[]
    ///         {
    ///             "10.0.0.50",
    ///         },
    ///         SecurityGroups = new[]
    ///         {
    ///             exampleAwsSecurityGroup.Id,
    ///         },
    ///         Attachments = new[]
    ///         {
    ///             new Aws.Ec2.Inputs.NetworkInterfaceAttachmentArgs
    ///             {
    ///                 Instance = exampleAwsInstance.Id,
    ///                 DeviceIndex = 1,
    ///             },
    ///         },
    ///     });
    /// 
    ///     var exampleNetworkInterfacePermission = new Aws.Ec2.NetworkInterfacePermission("example", new()
    ///     {
    ///         NetworkInterfaceId = example.Id,
    ///         AwsAccountId = "123456789012",
    ///         Permission = "INSTANCE-ATTACH",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import Network Interface Permissions using the `network_interface_permission_id`. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:ec2/networkInterfacePermission:NetworkInterfacePermission example eni-perm-056ad97ce2ac377ed
    /// ```
    /// </summary>
    [AwsResourceType("aws:ec2/networkInterfacePermission:NetworkInterfacePermission")]
    public partial class NetworkInterfacePermission : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Amazon Web Services account ID.
        /// </summary>
        [Output("awsAccountId")]
        public Output<string> AwsAccountId { get; private set; } = null!;

        /// <summary>
        /// The ID of the network interface.
        /// </summary>
        [Output("networkInterfaceId")]
        public Output<string> NetworkInterfaceId { get; private set; } = null!;

        /// <summary>
        /// ENI permission ID.
        /// </summary>
        [Output("networkInterfacePermissionId")]
        public Output<string> NetworkInterfacePermissionId { get; private set; } = null!;

        /// <summary>
        /// The type of permission to grant. Valid values are `INSTANCE-ATTACH` or `EIP-ASSOCIATE`.
        /// </summary>
        [Output("permission")]
        public Output<string> Permission { get; private set; } = null!;

        [Output("timeouts")]
        public Output<Outputs.NetworkInterfacePermissionTimeouts?> Timeouts { get; private set; } = null!;


        /// <summary>
        /// Create a NetworkInterfacePermission resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NetworkInterfacePermission(string name, NetworkInterfacePermissionArgs args, CustomResourceOptions? options = null)
            : base("aws:ec2/networkInterfacePermission:NetworkInterfacePermission", name, args ?? new NetworkInterfacePermissionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NetworkInterfacePermission(string name, Input<string> id, NetworkInterfacePermissionState? state = null, CustomResourceOptions? options = null)
            : base("aws:ec2/networkInterfacePermission:NetworkInterfacePermission", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NetworkInterfacePermission resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NetworkInterfacePermission Get(string name, Input<string> id, NetworkInterfacePermissionState? state = null, CustomResourceOptions? options = null)
        {
            return new NetworkInterfacePermission(name, id, state, options);
        }
    }

    public sealed class NetworkInterfacePermissionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Amazon Web Services account ID.
        /// </summary>
        [Input("awsAccountId", required: true)]
        public Input<string> AwsAccountId { get; set; } = null!;

        /// <summary>
        /// The ID of the network interface.
        /// </summary>
        [Input("networkInterfaceId", required: true)]
        public Input<string> NetworkInterfaceId { get; set; } = null!;

        /// <summary>
        /// The type of permission to grant. Valid values are `INSTANCE-ATTACH` or `EIP-ASSOCIATE`.
        /// </summary>
        [Input("permission", required: true)]
        public Input<string> Permission { get; set; } = null!;

        [Input("timeouts")]
        public Input<Inputs.NetworkInterfacePermissionTimeoutsArgs>? Timeouts { get; set; }

        public NetworkInterfacePermissionArgs()
        {
        }
        public static new NetworkInterfacePermissionArgs Empty => new NetworkInterfacePermissionArgs();
    }

    public sealed class NetworkInterfacePermissionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Amazon Web Services account ID.
        /// </summary>
        [Input("awsAccountId")]
        public Input<string>? AwsAccountId { get; set; }

        /// <summary>
        /// The ID of the network interface.
        /// </summary>
        [Input("networkInterfaceId")]
        public Input<string>? NetworkInterfaceId { get; set; }

        /// <summary>
        /// ENI permission ID.
        /// </summary>
        [Input("networkInterfacePermissionId")]
        public Input<string>? NetworkInterfacePermissionId { get; set; }

        /// <summary>
        /// The type of permission to grant. Valid values are `INSTANCE-ATTACH` or `EIP-ASSOCIATE`.
        /// </summary>
        [Input("permission")]
        public Input<string>? Permission { get; set; }

        [Input("timeouts")]
        public Input<Inputs.NetworkInterfacePermissionTimeoutsGetArgs>? Timeouts { get; set; }

        public NetworkInterfacePermissionState()
        {
        }
        public static new NetworkInterfacePermissionState Empty => new NetworkInterfacePermissionState();
    }
}
