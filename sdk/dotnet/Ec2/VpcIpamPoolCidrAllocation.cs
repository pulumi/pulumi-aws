// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2
{
    [AwsResourceType("aws:ec2/vpcIpamPoolCidrAllocation:VpcIpamPoolCidrAllocation")]
    public partial class VpcIpamPoolCidrAllocation : global::Pulumi.CustomResource
    {
        [Output("cidr")]
        public Output<string> Cidr { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("disallowedCidrs")]
        public Output<ImmutableArray<string>> DisallowedCidrs { get; private set; } = null!;

        [Output("ipamPoolAllocationId")]
        public Output<string> IpamPoolAllocationId { get; private set; } = null!;

        [Output("ipamPoolId")]
        public Output<string> IpamPoolId { get; private set; } = null!;

        [Output("netmaskLength")]
        public Output<int?> NetmaskLength { get; private set; } = null!;

        [Output("resourceId")]
        public Output<string> ResourceId { get; private set; } = null!;

        [Output("resourceOwner")]
        public Output<string> ResourceOwner { get; private set; } = null!;

        [Output("resourceType")]
        public Output<string> ResourceType { get; private set; } = null!;


        /// <summary>
        /// Create a VpcIpamPoolCidrAllocation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VpcIpamPoolCidrAllocation(string name, VpcIpamPoolCidrAllocationArgs args, CustomResourceOptions? options = null)
            : base("aws:ec2/vpcIpamPoolCidrAllocation:VpcIpamPoolCidrAllocation", name, args ?? new VpcIpamPoolCidrAllocationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VpcIpamPoolCidrAllocation(string name, Input<string> id, VpcIpamPoolCidrAllocationState? state = null, CustomResourceOptions? options = null)
            : base("aws:ec2/vpcIpamPoolCidrAllocation:VpcIpamPoolCidrAllocation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VpcIpamPoolCidrAllocation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VpcIpamPoolCidrAllocation Get(string name, Input<string> id, VpcIpamPoolCidrAllocationState? state = null, CustomResourceOptions? options = null)
        {
            return new VpcIpamPoolCidrAllocation(name, id, state, options);
        }
    }

    public sealed class VpcIpamPoolCidrAllocationArgs : global::Pulumi.ResourceArgs
    {
        [Input("cidr")]
        public Input<string>? Cidr { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("disallowedCidrs")]
        private InputList<string>? _disallowedCidrs;
        public InputList<string> DisallowedCidrs
        {
            get => _disallowedCidrs ?? (_disallowedCidrs = new InputList<string>());
            set => _disallowedCidrs = value;
        }

        [Input("ipamPoolId", required: true)]
        public Input<string> IpamPoolId { get; set; } = null!;

        [Input("netmaskLength")]
        public Input<int>? NetmaskLength { get; set; }

        public VpcIpamPoolCidrAllocationArgs()
        {
        }
        public static new VpcIpamPoolCidrAllocationArgs Empty => new VpcIpamPoolCidrAllocationArgs();
    }

    public sealed class VpcIpamPoolCidrAllocationState : global::Pulumi.ResourceArgs
    {
        [Input("cidr")]
        public Input<string>? Cidr { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("disallowedCidrs")]
        private InputList<string>? _disallowedCidrs;
        public InputList<string> DisallowedCidrs
        {
            get => _disallowedCidrs ?? (_disallowedCidrs = new InputList<string>());
            set => _disallowedCidrs = value;
        }

        [Input("ipamPoolAllocationId")]
        public Input<string>? IpamPoolAllocationId { get; set; }

        [Input("ipamPoolId")]
        public Input<string>? IpamPoolId { get; set; }

        [Input("netmaskLength")]
        public Input<int>? NetmaskLength { get; set; }

        [Input("resourceId")]
        public Input<string>? ResourceId { get; set; }

        [Input("resourceOwner")]
        public Input<string>? ResourceOwner { get; set; }

        [Input("resourceType")]
        public Input<string>? ResourceType { get; set; }

        public VpcIpamPoolCidrAllocationState()
        {
        }
        public static new VpcIpamPoolCidrAllocationState Empty => new VpcIpamPoolCidrAllocationState();
    }
}
