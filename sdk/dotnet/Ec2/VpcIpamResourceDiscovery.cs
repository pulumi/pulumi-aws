// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2
{
    /// <summary>
    /// Provides an IPAM Resource Discovery resource. IPAM Resource Discoveries are resources meant for multi-organization customers. If you wish to use a single IPAM across multiple orgs, a resource discovery can be created and shared from a subordinate organization to the management organizations IPAM delegated admin account. For a full deployment example, see `aws.ec2.VpcIpamResourceDiscoveryAssociation` resource.
    /// 
    /// ## Example Usage
    /// 
    /// Basic usage:
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var current = Aws.GetRegion.Invoke();
    /// 
    ///     var main = new Aws.Ec2.VpcIpamResourceDiscovery("main", new()
    ///     {
    ///         Description = "My IPAM Resource Discovery",
    ///         OperatingRegions = new[]
    ///         {
    ///             new Aws.Ec2.Inputs.VpcIpamResourceDiscoveryOperatingRegionArgs
    ///             {
    ///                 RegionName = current.Apply(getRegionResult =&gt; getRegionResult.Name),
    ///             },
    ///         },
    ///         Tags = 
    ///         {
    ///             { "Test", "Main" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// IPAMs can be imported using the `ipam resource discovery id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import aws:ec2/vpcIpamResourceDiscovery:VpcIpamResourceDiscovery example ipam-res-disco-0178368ad2146a492
    /// ```
    /// </summary>
    [AwsResourceType("aws:ec2/vpcIpamResourceDiscovery:VpcIpamResourceDiscovery")]
    public partial class VpcIpamResourceDiscovery : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of IPAM Resource Discovery
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// A description for the IPAM Resource Discovery.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The home region of the Resource Discovery
        /// </summary>
        [Output("ipamResourceDiscoveryRegion")]
        public Output<string> IpamResourceDiscoveryRegion { get; private set; } = null!;

        /// <summary>
        /// A boolean to identify if the Resource Discovery is the accounts default resource discovery
        /// </summary>
        [Output("isDefault")]
        public Output<bool> IsDefault { get; private set; } = null!;

        /// <summary>
        /// Determines which regions the Resource Discovery will enable IPAM features for usage and monitoring. Locale is the Region where you want to make an IPAM pool available for allocations. You can only create pools with locales that match the operating Regions of the IPAM Resource Discovery. You can only create VPCs from a pool whose locale matches the VPC's Region. You specify a region using the region_name parameter. **You must set your provider block region as an operating_region.**
        /// </summary>
        [Output("operatingRegions")]
        public Output<ImmutableArray<Outputs.VpcIpamResourceDiscoveryOperatingRegion>> OperatingRegions { get; private set; } = null!;

        /// <summary>
        /// The account ID for the account that manages the Resource Discovery
        /// </summary>
        [Output("ownerId")]
        public Output<string> OwnerId { get; private set; } = null!;

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;


        /// <summary>
        /// Create a VpcIpamResourceDiscovery resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VpcIpamResourceDiscovery(string name, VpcIpamResourceDiscoveryArgs args, CustomResourceOptions? options = null)
            : base("aws:ec2/vpcIpamResourceDiscovery:VpcIpamResourceDiscovery", name, args ?? new VpcIpamResourceDiscoveryArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VpcIpamResourceDiscovery(string name, Input<string> id, VpcIpamResourceDiscoveryState? state = null, CustomResourceOptions? options = null)
            : base("aws:ec2/vpcIpamResourceDiscovery:VpcIpamResourceDiscovery", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VpcIpamResourceDiscovery resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VpcIpamResourceDiscovery Get(string name, Input<string> id, VpcIpamResourceDiscoveryState? state = null, CustomResourceOptions? options = null)
        {
            return new VpcIpamResourceDiscovery(name, id, state, options);
        }
    }

    public sealed class VpcIpamResourceDiscoveryArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A description for the IPAM Resource Discovery.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("operatingRegions", required: true)]
        private InputList<Inputs.VpcIpamResourceDiscoveryOperatingRegionArgs>? _operatingRegions;

        /// <summary>
        /// Determines which regions the Resource Discovery will enable IPAM features for usage and monitoring. Locale is the Region where you want to make an IPAM pool available for allocations. You can only create pools with locales that match the operating Regions of the IPAM Resource Discovery. You can only create VPCs from a pool whose locale matches the VPC's Region. You specify a region using the region_name parameter. **You must set your provider block region as an operating_region.**
        /// </summary>
        public InputList<Inputs.VpcIpamResourceDiscoveryOperatingRegionArgs> OperatingRegions
        {
            get => _operatingRegions ?? (_operatingRegions = new InputList<Inputs.VpcIpamResourceDiscoveryOperatingRegionArgs>());
            set => _operatingRegions = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        public VpcIpamResourceDiscoveryArgs()
        {
        }
        public static new VpcIpamResourceDiscoveryArgs Empty => new VpcIpamResourceDiscoveryArgs();
    }

    public sealed class VpcIpamResourceDiscoveryState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of IPAM Resource Discovery
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// A description for the IPAM Resource Discovery.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The home region of the Resource Discovery
        /// </summary>
        [Input("ipamResourceDiscoveryRegion")]
        public Input<string>? IpamResourceDiscoveryRegion { get; set; }

        /// <summary>
        /// A boolean to identify if the Resource Discovery is the accounts default resource discovery
        /// </summary>
        [Input("isDefault")]
        public Input<bool>? IsDefault { get; set; }

        [Input("operatingRegions")]
        private InputList<Inputs.VpcIpamResourceDiscoveryOperatingRegionGetArgs>? _operatingRegions;

        /// <summary>
        /// Determines which regions the Resource Discovery will enable IPAM features for usage and monitoring. Locale is the Region where you want to make an IPAM pool available for allocations. You can only create pools with locales that match the operating Regions of the IPAM Resource Discovery. You can only create VPCs from a pool whose locale matches the VPC's Region. You specify a region using the region_name parameter. **You must set your provider block region as an operating_region.**
        /// </summary>
        public InputList<Inputs.VpcIpamResourceDiscoveryOperatingRegionGetArgs> OperatingRegions
        {
            get => _operatingRegions ?? (_operatingRegions = new InputList<Inputs.VpcIpamResourceDiscoveryOperatingRegionGetArgs>());
            set => _operatingRegions = value;
        }

        /// <summary>
        /// The account ID for the account that manages the Resource Discovery
        /// </summary>
        [Input("ownerId")]
        public Input<string>? OwnerId { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        public VpcIpamResourceDiscoveryState()
        {
        }
        public static new VpcIpamResourceDiscoveryState Empty => new VpcIpamResourceDiscoveryState();
    }
}
