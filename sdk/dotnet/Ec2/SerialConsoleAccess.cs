// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2
{
    /// <summary>
    /// Provides a resource to manage whether serial console access is enabled for your AWS account in the current AWS region.
    /// 
    /// &gt; **NOTE:** Removing this resource disables serial console access.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Ec2.SerialConsoleAccess("example", new()
    ///     {
    ///         Enabled = true,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import serial console access state. For example:
    /// 
    /// ```sh
    ///  $ pulumi import aws:ec2/serialConsoleAccess:SerialConsoleAccess example default
    /// ```
    /// </summary>
    [AwsResourceType("aws:ec2/serialConsoleAccess:SerialConsoleAccess")]
    public partial class SerialConsoleAccess : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Whether or not serial console access is enabled. Valid values are `true` or `false`. Defaults to `true`.
        /// </summary>
        [Output("enabled")]
        public Output<bool?> Enabled { get; private set; } = null!;


        /// <summary>
        /// Create a SerialConsoleAccess resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SerialConsoleAccess(string name, SerialConsoleAccessArgs? args = null, CustomResourceOptions? options = null)
            : base("aws:ec2/serialConsoleAccess:SerialConsoleAccess", name, args ?? new SerialConsoleAccessArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SerialConsoleAccess(string name, Input<string> id, SerialConsoleAccessState? state = null, CustomResourceOptions? options = null)
            : base("aws:ec2/serialConsoleAccess:SerialConsoleAccess", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SerialConsoleAccess resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SerialConsoleAccess Get(string name, Input<string> id, SerialConsoleAccessState? state = null, CustomResourceOptions? options = null)
        {
            return new SerialConsoleAccess(name, id, state, options);
        }
    }

    public sealed class SerialConsoleAccessArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether or not serial console access is enabled. Valid values are `true` or `false`. Defaults to `true`.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        public SerialConsoleAccessArgs()
        {
        }
        public static new SerialConsoleAccessArgs Empty => new SerialConsoleAccessArgs();
    }

    public sealed class SerialConsoleAccessState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether or not serial console access is enabled. Valid values are `true` or `false`. Defaults to `true`.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        public SerialConsoleAccessState()
        {
        }
        public static new SerialConsoleAccessState Empty => new SerialConsoleAccessState();
    }
}
