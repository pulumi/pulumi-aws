// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2
{
    [AwsResourceType("aws:ec2/networkAclRule:NetworkAclRule")]
    public partial class NetworkAclRule : global::Pulumi.CustomResource
    {
        [Output("cidrBlock")]
        public Output<string?> CidrBlock { get; private set; } = null!;

        [Output("egress")]
        public Output<bool?> Egress { get; private set; } = null!;

        [Output("fromPort")]
        public Output<int?> FromPort { get; private set; } = null!;

        [Output("icmpCode")]
        public Output<int?> IcmpCode { get; private set; } = null!;

        [Output("icmpType")]
        public Output<int?> IcmpType { get; private set; } = null!;

        [Output("ipv6CidrBlock")]
        public Output<string?> Ipv6CidrBlock { get; private set; } = null!;

        [Output("networkAclId")]
        public Output<string> NetworkAclId { get; private set; } = null!;

        [Output("protocol")]
        public Output<string> Protocol { get; private set; } = null!;

        [Output("ruleAction")]
        public Output<string> RuleAction { get; private set; } = null!;

        [Output("ruleNumber")]
        public Output<int> RuleNumber { get; private set; } = null!;

        [Output("toPort")]
        public Output<int?> ToPort { get; private set; } = null!;


        /// <summary>
        /// Create a NetworkAclRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NetworkAclRule(string name, NetworkAclRuleArgs args, CustomResourceOptions? options = null)
            : base("aws:ec2/networkAclRule:NetworkAclRule", name, args ?? new NetworkAclRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NetworkAclRule(string name, Input<string> id, NetworkAclRuleState? state = null, CustomResourceOptions? options = null)
            : base("aws:ec2/networkAclRule:NetworkAclRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NetworkAclRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NetworkAclRule Get(string name, Input<string> id, NetworkAclRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new NetworkAclRule(name, id, state, options);
        }
    }

    public sealed class NetworkAclRuleArgs : global::Pulumi.ResourceArgs
    {
        [Input("cidrBlock")]
        public Input<string>? CidrBlock { get; set; }

        [Input("egress")]
        public Input<bool>? Egress { get; set; }

        [Input("fromPort")]
        public Input<int>? FromPort { get; set; }

        [Input("icmpCode")]
        public Input<int>? IcmpCode { get; set; }

        [Input("icmpType")]
        public Input<int>? IcmpType { get; set; }

        [Input("ipv6CidrBlock")]
        public Input<string>? Ipv6CidrBlock { get; set; }

        [Input("networkAclId", required: true)]
        public Input<string> NetworkAclId { get; set; } = null!;

        [Input("protocol", required: true)]
        public Input<string> Protocol { get; set; } = null!;

        [Input("ruleAction", required: true)]
        public Input<string> RuleAction { get; set; } = null!;

        [Input("ruleNumber", required: true)]
        public Input<int> RuleNumber { get; set; } = null!;

        [Input("toPort")]
        public Input<int>? ToPort { get; set; }

        public NetworkAclRuleArgs()
        {
        }
        public static new NetworkAclRuleArgs Empty => new NetworkAclRuleArgs();
    }

    public sealed class NetworkAclRuleState : global::Pulumi.ResourceArgs
    {
        [Input("cidrBlock")]
        public Input<string>? CidrBlock { get; set; }

        [Input("egress")]
        public Input<bool>? Egress { get; set; }

        [Input("fromPort")]
        public Input<int>? FromPort { get; set; }

        [Input("icmpCode")]
        public Input<int>? IcmpCode { get; set; }

        [Input("icmpType")]
        public Input<int>? IcmpType { get; set; }

        [Input("ipv6CidrBlock")]
        public Input<string>? Ipv6CidrBlock { get; set; }

        [Input("networkAclId")]
        public Input<string>? NetworkAclId { get; set; }

        [Input("protocol")]
        public Input<string>? Protocol { get; set; }

        [Input("ruleAction")]
        public Input<string>? RuleAction { get; set; }

        [Input("ruleNumber")]
        public Input<int>? RuleNumber { get; set; }

        [Input("toPort")]
        public Input<int>? ToPort { get; set; }

        public NetworkAclRuleState()
        {
        }
        public static new NetworkAclRuleState Empty => new NetworkAclRuleState();
    }
}
