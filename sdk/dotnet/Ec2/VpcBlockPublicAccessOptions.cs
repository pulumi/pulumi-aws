// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2
{
    /// <summary>
    /// Resource for managing an AWS VPC Block Public Access Options.
    /// 
    /// ## Example Usage
    /// 
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Ec2.VpcBlockPublicAccessOptions("example", new()
    ///     {
    ///         InternetGatewayBlockMode = "block-bidirectional",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import VPC Block Public Access Options using the `aws_region`. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:ec2/vpcBlockPublicAccessOptions:VpcBlockPublicAccessOptions example us-east-1
    /// ```
    /// </summary>
    [AwsResourceType("aws:ec2/vpcBlockPublicAccessOptions:VpcBlockPublicAccessOptions")]
    public partial class VpcBlockPublicAccessOptions : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The AWS account id to which these options apply.
        /// </summary>
        [Output("awsAccountId")]
        public Output<string> AwsAccountId { get; private set; } = null!;

        /// <summary>
        /// The AWS region to which these options apply.
        /// </summary>
        [Output("awsRegion")]
        public Output<string> AwsRegion { get; private set; } = null!;

        /// <summary>
        /// Block mode. Needs to be one of `block-bidirectional`, `block-ingress`, `off`. If this resource is deleted, then this value will be set to `off` in the AWS account and region.
        /// </summary>
        [Output("internetGatewayBlockMode")]
        public Output<string> InternetGatewayBlockMode { get; private set; } = null!;

        [Output("timeouts")]
        public Output<Outputs.VpcBlockPublicAccessOptionsTimeouts?> Timeouts { get; private set; } = null!;


        /// <summary>
        /// Create a VpcBlockPublicAccessOptions resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VpcBlockPublicAccessOptions(string name, VpcBlockPublicAccessOptionsArgs args, CustomResourceOptions? options = null)
            : base("aws:ec2/vpcBlockPublicAccessOptions:VpcBlockPublicAccessOptions", name, args ?? new VpcBlockPublicAccessOptionsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VpcBlockPublicAccessOptions(string name, Input<string> id, VpcBlockPublicAccessOptionsState? state = null, CustomResourceOptions? options = null)
            : base("aws:ec2/vpcBlockPublicAccessOptions:VpcBlockPublicAccessOptions", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VpcBlockPublicAccessOptions resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VpcBlockPublicAccessOptions Get(string name, Input<string> id, VpcBlockPublicAccessOptionsState? state = null, CustomResourceOptions? options = null)
        {
            return new VpcBlockPublicAccessOptions(name, id, state, options);
        }
    }

    public sealed class VpcBlockPublicAccessOptionsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Block mode. Needs to be one of `block-bidirectional`, `block-ingress`, `off`. If this resource is deleted, then this value will be set to `off` in the AWS account and region.
        /// </summary>
        [Input("internetGatewayBlockMode", required: true)]
        public Input<string> InternetGatewayBlockMode { get; set; } = null!;

        [Input("timeouts")]
        public Input<Inputs.VpcBlockPublicAccessOptionsTimeoutsArgs>? Timeouts { get; set; }

        public VpcBlockPublicAccessOptionsArgs()
        {
        }
        public static new VpcBlockPublicAccessOptionsArgs Empty => new VpcBlockPublicAccessOptionsArgs();
    }

    public sealed class VpcBlockPublicAccessOptionsState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The AWS account id to which these options apply.
        /// </summary>
        [Input("awsAccountId")]
        public Input<string>? AwsAccountId { get; set; }

        /// <summary>
        /// The AWS region to which these options apply.
        /// </summary>
        [Input("awsRegion")]
        public Input<string>? AwsRegion { get; set; }

        /// <summary>
        /// Block mode. Needs to be one of `block-bidirectional`, `block-ingress`, `off`. If this resource is deleted, then this value will be set to `off` in the AWS account and region.
        /// </summary>
        [Input("internetGatewayBlockMode")]
        public Input<string>? InternetGatewayBlockMode { get; set; }

        [Input("timeouts")]
        public Input<Inputs.VpcBlockPublicAccessOptionsTimeoutsGetArgs>? Timeouts { get; set; }

        public VpcBlockPublicAccessOptionsState()
        {
        }
        public static new VpcBlockPublicAccessOptionsState Empty => new VpcBlockPublicAccessOptionsState();
    }
}
