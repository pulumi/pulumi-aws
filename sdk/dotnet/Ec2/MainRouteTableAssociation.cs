// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2
{
    /// <summary>
    /// Provides a resource for managing the main routing table of a VPC.
    /// 
    /// &gt; **NOTE:** **Do not** use both `aws.ec2.DefaultRouteTable` to manage a default route table **and** `aws.ec2.MainRouteTableAssociation` with the same VPC due to possible route conflicts. See aws.ec2.DefaultRouteTable documentation for more details.
    /// For more information, see the Amazon VPC User Guide on [Route Tables](https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html). For information about managing normal route tables in the provider, see `aws.ec2.RouteTable`.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var mainRouteTableAssociation = new Aws.Ec2.MainRouteTableAssociation("mainRouteTableAssociation", new()
    ///     {
    ///         VpcId = aws_vpc.Foo.Id,
    ///         RouteTableId = aws_route_table.Bar.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// ## Notes
    /// 
    /// On VPC creation, the AWS API always creates an initial Main Route Table. This
    /// resource records the ID of that Route Table under `original_route_table_id`.
    /// The "Delete" action for a `main_route_table_association` consists of resetting
    /// this original table as the Main Route Table for the VPC. You'll see this
    /// additional Route Table in the AWS console; it must remain intact in order for
    /// the `main_route_table_association` delete to work properly.
    /// </summary>
    [AwsResourceType("aws:ec2/mainRouteTableAssociation:MainRouteTableAssociation")]
    public partial class MainRouteTableAssociation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Used internally, see **Notes** below
        /// </summary>
        [Output("originalRouteTableId")]
        public Output<string> OriginalRouteTableId { get; private set; } = null!;

        /// <summary>
        /// The ID of the Route Table to set as the new
        /// main route table for the target VPC
        /// </summary>
        [Output("routeTableId")]
        public Output<string> RouteTableId { get; private set; } = null!;

        /// <summary>
        /// The ID of the VPC whose main route table should be set
        /// </summary>
        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;


        /// <summary>
        /// Create a MainRouteTableAssociation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MainRouteTableAssociation(string name, MainRouteTableAssociationArgs args, CustomResourceOptions? options = null)
            : base("aws:ec2/mainRouteTableAssociation:MainRouteTableAssociation", name, args ?? new MainRouteTableAssociationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MainRouteTableAssociation(string name, Input<string> id, MainRouteTableAssociationState? state = null, CustomResourceOptions? options = null)
            : base("aws:ec2/mainRouteTableAssociation:MainRouteTableAssociation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MainRouteTableAssociation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MainRouteTableAssociation Get(string name, Input<string> id, MainRouteTableAssociationState? state = null, CustomResourceOptions? options = null)
        {
            return new MainRouteTableAssociation(name, id, state, options);
        }
    }

    public sealed class MainRouteTableAssociationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Route Table to set as the new
        /// main route table for the target VPC
        /// </summary>
        [Input("routeTableId", required: true)]
        public Input<string> RouteTableId { get; set; } = null!;

        /// <summary>
        /// The ID of the VPC whose main route table should be set
        /// </summary>
        [Input("vpcId", required: true)]
        public Input<string> VpcId { get; set; } = null!;

        public MainRouteTableAssociationArgs()
        {
        }
        public static new MainRouteTableAssociationArgs Empty => new MainRouteTableAssociationArgs();
    }

    public sealed class MainRouteTableAssociationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Used internally, see **Notes** below
        /// </summary>
        [Input("originalRouteTableId")]
        public Input<string>? OriginalRouteTableId { get; set; }

        /// <summary>
        /// The ID of the Route Table to set as the new
        /// main route table for the target VPC
        /// </summary>
        [Input("routeTableId")]
        public Input<string>? RouteTableId { get; set; }

        /// <summary>
        /// The ID of the VPC whose main route table should be set
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public MainRouteTableAssociationState()
        {
        }
        public static new MainRouteTableAssociationState Empty => new MainRouteTableAssociationState();
    }
}
