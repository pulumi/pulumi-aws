// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2.Inputs
{

    public sealed class AmiEbsBlockDeviceGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Boolean controlling whether the EBS volumes created to
        /// support each created instance will be deleted once that instance is terminated.
        /// </summary>
        [Input("deleteOnTermination")]
        public Input<bool>? DeleteOnTermination { get; set; }

        /// <summary>
        /// Path at which the device is exposed to created instances.
        /// </summary>
        [Input("deviceName", required: true)]
        public Input<string> DeviceName { get; set; } = null!;

        /// <summary>
        /// Boolean controlling whether the created EBS volumes will be encrypted. Can't be used with `snapshot_id`.
        /// </summary>
        [Input("encrypted")]
        public Input<bool>? Encrypted { get; set; }

        /// <summary>
        /// Number of I/O operations per second the
        /// created volumes will support.
        /// </summary>
        [Input("iops")]
        public Input<int>? Iops { get; set; }

        /// <summary>
        /// ARN of the Outpost on which the snapshot is stored.
        /// 
        /// &gt; **Note:** You can specify `encrypted` or `snapshot_id` but not both.
        /// </summary>
        [Input("outpostArn")]
        public Input<string>? OutpostArn { get; set; }

        /// <summary>
        /// ID of an EBS snapshot that will be used to initialize the created
        /// EBS volumes. If set, the `volume_size` attribute must be at least as large as the referenced
        /// snapshot.
        /// </summary>
        [Input("snapshotId")]
        public Input<string>? SnapshotId { get; set; }

        /// <summary>
        /// Throughput that the EBS volume supports, in MiB/s. Only valid for `volume_type` of `gp3`.
        /// </summary>
        [Input("throughput")]
        public Input<int>? Throughput { get; set; }

        /// <summary>
        /// Size of created volumes in GiB.
        /// If `snapshot_id` is set and `volume_size` is omitted then the volume will have the same size
        /// as the selected snapshot.
        /// </summary>
        [Input("volumeSize")]
        public Input<int>? VolumeSize { get; set; }

        /// <summary>
        /// Type of EBS volume to create. Can be `standard`, `gp2`, `gp3`, `io1`, `io2`, `sc1` or `st1` (Default: `standard`).
        /// </summary>
        [Input("volumeType")]
        public Input<string>? VolumeType { get; set; }

        public AmiEbsBlockDeviceGetArgs()
        {
        }
        public static new AmiEbsBlockDeviceGetArgs Empty => new AmiEbsBlockDeviceGetArgs();
    }
}
