// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Request a spot instance at $0.03
    ///     var cheapWorker = new Aws.Ec2.SpotInstanceRequest("cheap_worker", new()
    ///     {
    ///         Ami = "ami-1234",
    ///         SpotPrice = "0.03",
    ///         InstanceType = "c4.xlarge",
    ///         Tags = 
    ///         {
    ///             { "Name", "CheapWorker" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [AwsResourceType("aws:ec2/spotInstanceRequest:SpotInstanceRequest")]
    public partial class SpotInstanceRequest : global::Pulumi.CustomResource
    {
        /// <summary>
        /// AMI to use for the instance. Required unless `launchTemplate` is specified and the Launch Template specifes an AMI. If an AMI is specified in the Launch Template, setting `ami` will override the AMI specified in the Launch Template.
        /// </summary>
        [Output("ami")]
        public Output<string> Ami { get; private set; } = null!;

        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// Whether to associate a public IP address with an instance in a VPC.
        /// </summary>
        [Output("associatePublicIpAddress")]
        public Output<bool> AssociatePublicIpAddress { get; private set; } = null!;

        /// <summary>
        /// AZ to start the instance in.
        /// </summary>
        [Output("availabilityZone")]
        public Output<string> AvailabilityZone { get; private set; } = null!;

        /// <summary>
        /// Describes an instance's Capacity Reservation targeting option. See Capacity Reservation Specification below for more details.
        /// </summary>
        [Output("capacityReservationSpecification")]
        public Output<Outputs.SpotInstanceRequestCapacityReservationSpecification> CapacityReservationSpecification { get; private set; } = null!;

        /// <summary>
        /// The CPU options for the instance. See CPU Options below for more details.
        /// </summary>
        [Output("cpuOptions")]
        public Output<Outputs.SpotInstanceRequestCpuOptions> CpuOptions { get; private set; } = null!;

        /// <summary>
        /// Configuration block for customizing the credit specification of the instance. See Credit Specification below for more details. This provider will only perform drift detection of its value when present in a configuration. Removing this configuration on existing instances will only stop managing it. It will not change the configuration back to the default for the instance type.
        /// </summary>
        [Output("creditSpecification")]
        public Output<Outputs.SpotInstanceRequestCreditSpecification?> CreditSpecification { get; private set; } = null!;

        /// <summary>
        /// If true, enables [EC2 Instance Stop Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html#Using_StopProtection).
        /// </summary>
        [Output("disableApiStop")]
        public Output<bool> DisableApiStop { get; private set; } = null!;

        /// <summary>
        /// If true, enables [EC2 Instance Termination Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination).
        /// </summary>
        [Output("disableApiTermination")]
        public Output<bool> DisableApiTermination { get; private set; } = null!;

        /// <summary>
        /// One or more configuration blocks with additional EBS block devices to attach to the instance. Block device configurations only apply on resource creation. See Block Devices below for details on attributes and drift detection. When accessing this as an attribute reference, it is a set of objects.
        /// </summary>
        [Output("ebsBlockDevices")]
        public Output<ImmutableArray<Outputs.SpotInstanceRequestEbsBlockDevice>> EbsBlockDevices { get; private set; } = null!;

        /// <summary>
        /// If true, the launched EC2 instance will be EBS-optimized. Note that if this is not set on an instance type that is optimized by default then this will show as disabled but if the instance type is optimized by default then there is no need to set this and there is no effect to disabling it. See the [EBS Optimized section](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html) of the AWS User Guide for more information.
        /// </summary>
        [Output("ebsOptimized")]
        public Output<bool> EbsOptimized { get; private set; } = null!;

        /// <summary>
        /// Whether to assign a primary IPv6 Global Unicast Address (GUA) to the instance when launched in a dual-stack or IPv6-only subnet. A primary IPv6 address ensures a consistent IPv6 address for the instance and is automatically assigned by AWS to the ENI. Once enabled, the first IPv6 GUA becomes the primary IPv6 address and cannot be disabled. The primary IPv6 address remains until the instance is terminated or the ENI is detached. Disabling `enablePrimaryIpv6` after it has been enabled forces recreation of the instance.
        /// </summary>
        [Output("enablePrimaryIpv6")]
        public Output<bool> EnablePrimaryIpv6 { get; private set; } = null!;

        /// <summary>
        /// Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.
        /// </summary>
        [Output("enclaveOptions")]
        public Output<Outputs.SpotInstanceRequestEnclaveOptions> EnclaveOptions { get; private set; } = null!;

        /// <summary>
        /// One or more configuration blocks to customize Ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a set of objects.
        /// </summary>
        [Output("ephemeralBlockDevices")]
        public Output<ImmutableArray<Outputs.SpotInstanceRequestEphemeralBlockDevice>> EphemeralBlockDevices { get; private set; } = null!;

        /// <summary>
        /// Destroys instance even if `disableApiTermination` or `disableApiStop` is set to `true`. Defaults to `false`. Once this parameter is set to `true`, a successful `pulumi up` run before a destroy is required to update this value in the resource state. Without a successful `pulumi up` after this parameter is set, this flag will have no effect. If setting this field in the same operation that would require replacing the instance or destroying the instance, this flag will not work. Additionally when importing an instance, a successful `pulumi up` is required to set this value in state before it will take effect on a destroy operation.
        /// </summary>
        [Output("forceDestroy")]
        public Output<bool?> ForceDestroy { get; private set; } = null!;

        /// <summary>
        /// If true, wait for password data to become available and retrieve it. Useful for getting the administrator password for instances running Microsoft Windows. The password data is exported to the `passwordData` attribute. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
        /// </summary>
        [Output("getPasswordData")]
        public Output<bool?> GetPasswordData { get; private set; } = null!;

        /// <summary>
        /// If true, the launched EC2 instance will support hibernation.
        /// </summary>
        [Output("hibernation")]
        public Output<bool?> Hibernation { get; private set; } = null!;

        /// <summary>
        /// ID of a dedicated host that the instance will be assigned to. Use when an instance is to be launched on a specific dedicated host.
        /// </summary>
        [Output("hostId")]
        public Output<string> HostId { get; private set; } = null!;

        /// <summary>
        /// ARN of the host resource group in which to launch the instances. If you specify an ARN, omit the `tenancy` parameter or set it to `host`.
        /// </summary>
        [Output("hostResourceGroupArn")]
        public Output<string> HostResourceGroupArn { get; private set; } = null!;

        /// <summary>
        /// IAM Instance Profile to launch the instance with. Specified as the name of the Instance Profile. Ensure your credentials have the correct permission to assign the instance profile according to the [EC2 documentation](http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2.html#roles-usingrole-ec2instance-permissions), notably `iam:PassRole`.
        /// </summary>
        [Output("iamInstanceProfile")]
        public Output<string> IamInstanceProfile { get; private set; } = null!;

        /// <summary>
        /// Shutdown behavior for the instance. Amazon defaults this to `stop` for EBS-backed instances and `terminate` for instance-store instances. Cannot be set on instance-store instances. See [Shutdown Behavior](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingInstanceInitiatedShutdownBehavior) for more information.
        /// </summary>
        [Output("instanceInitiatedShutdownBehavior")]
        public Output<string> InstanceInitiatedShutdownBehavior { get; private set; } = null!;

        /// <summary>
        /// Indicates Spot instance behavior when it is interrupted. Valid values are `terminate`, `stop`, or `hibernate`. Default value is `terminate`.
        /// </summary>
        [Output("instanceInterruptionBehavior")]
        public Output<string?> InstanceInterruptionBehavior { get; private set; } = null!;

        [Output("instanceState")]
        public Output<string> InstanceState { get; private set; } = null!;

        /// <summary>
        /// Instance type to use for the instance. Required unless `launchTemplate` is specified and the Launch Template specifies an instance type. If an instance type is specified in the Launch Template, setting `instanceType` will override the instance type specified in the Launch Template. Updates to this field will trigger a stop/start of the EC2 instance.
        /// </summary>
        [Output("instanceType")]
        public Output<string> InstanceType { get; private set; } = null!;

        /// <summary>
        /// Number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet.
        /// </summary>
        [Output("ipv6AddressCount")]
        public Output<int> Ipv6AddressCount { get; private set; } = null!;

        /// <summary>
        /// Specify one or more IPv6 addresses from the range of the subnet to associate with the primary network interface
        /// </summary>
        [Output("ipv6Addresses")]
        public Output<ImmutableArray<string>> Ipv6Addresses { get; private set; } = null!;

        /// <summary>
        /// Key name of the Key Pair to use for the instance; which can be managed using the `aws.ec2.KeyPair` resource.
        /// </summary>
        [Output("keyName")]
        public Output<string> KeyName { get; private set; } = null!;

        /// <summary>
        /// A launch group is a group of spot instances that launch together and terminate together.
        /// If left empty instances are launched and terminated individually.
        /// </summary>
        [Output("launchGroup")]
        public Output<string?> LaunchGroup { get; private set; } = null!;

        /// <summary>
        /// Specifies a Launch Template to configure the instance. Parameters configured on this resource will override the corresponding parameters in the Launch Template. See Launch Template Specification below for more details.
        /// </summary>
        [Output("launchTemplate")]
        public Output<Outputs.SpotInstanceRequestLaunchTemplate?> LaunchTemplate { get; private set; } = null!;

        /// <summary>
        /// Maintenance and recovery options for the instance. See Maintenance Options below for more details.
        /// </summary>
        [Output("maintenanceOptions")]
        public Output<Outputs.SpotInstanceRequestMaintenanceOptions> MaintenanceOptions { get; private set; } = null!;

        /// <summary>
        /// Customize the metadata options of the instance. See Metadata Options below for more details.
        /// </summary>
        [Output("metadataOptions")]
        public Output<Outputs.SpotInstanceRequestMetadataOptions> MetadataOptions { get; private set; } = null!;

        /// <summary>
        /// If true, the launched EC2 instance will have detailed monitoring enabled. (Available since v0.6.0)
        /// </summary>
        [Output("monitoring")]
        public Output<bool> Monitoring { get; private set; } = null!;

        /// <summary>
        /// Customize network interfaces to be attached at instance boot time. See Network Interfaces below for more details.
        /// </summary>
        [Output("networkInterfaces")]
        public Output<ImmutableArray<Outputs.SpotInstanceRequestNetworkInterface>> NetworkInterfaces { get; private set; } = null!;

        [Output("outpostArn")]
        public Output<string> OutpostArn { get; private set; } = null!;

        [Output("passwordData")]
        public Output<string> PasswordData { get; private set; } = null!;

        /// <summary>
        /// Placement Group to start the instance in.
        /// </summary>
        [Output("placementGroup")]
        public Output<string> PlacementGroup { get; private set; } = null!;

        /// <summary>
        /// Number of the partition the instance is in. Valid only if the `aws.ec2.PlacementGroup` resource's `strategy` argument is set to `"partition"`.
        /// </summary>
        [Output("placementPartitionNumber")]
        public Output<int> PlacementPartitionNumber { get; private set; } = null!;

        [Output("primaryNetworkInterfaceId")]
        public Output<string> PrimaryNetworkInterfaceId { get; private set; } = null!;

        /// <summary>
        /// The primary network interface. See Primary Network Interface below.
        /// </summary>
        [Output("primaryNetworkInterfaces")]
        public Output<ImmutableArray<Outputs.SpotInstanceRequestPrimaryNetworkInterface>> PrimaryNetworkInterfaces { get; private set; } = null!;

        /// <summary>
        /// The private DNS name assigned to the instance. Can only be
        /// used inside the Amazon EC2, and only available if you've enabled DNS hostnames
        /// for your VPC
        /// </summary>
        [Output("privateDns")]
        public Output<string> PrivateDns { get; private set; } = null!;

        /// <summary>
        /// Options for the instance hostname. The default values are inherited from the subnet. See Private DNS Name Options below for more details.
        /// </summary>
        [Output("privateDnsNameOptions")]
        public Output<Outputs.SpotInstanceRequestPrivateDnsNameOptions> PrivateDnsNameOptions { get; private set; } = null!;

        /// <summary>
        /// Private IP address to associate with the instance in a VPC.
        /// </summary>
        [Output("privateIp")]
        public Output<string> PrivateIp { get; private set; } = null!;

        /// <summary>
        /// The public DNS name assigned to the instance. For EC2-VPC, this
        /// is only available if you've enabled DNS hostnames for your VPC
        /// </summary>
        [Output("publicDns")]
        public Output<string> PublicDns { get; private set; } = null!;

        /// <summary>
        /// The public IP address assigned to the instance, if applicable.
        /// </summary>
        [Output("publicIp")]
        public Output<string> PublicIp { get; private set; } = null!;

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// Configuration block to customize details about the root block device of the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a list containing one object.
        /// </summary>
        [Output("rootBlockDevice")]
        public Output<Outputs.SpotInstanceRequestRootBlockDevice> RootBlockDevice { get; private set; } = null!;

        /// <summary>
        /// List of secondary private IPv4 addresses to assign to the instance's primary network interface (eth0) in a VPC. Can only be assigned to the primary network interface (eth0) attached at instance creation, not a pre-existing network interface i.e., referenced in a `networkInterface` block. Refer to the [Elastic network interfaces documentation](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI) to see the maximum number of private IP addresses allowed per instance type.
        /// </summary>
        [Output("secondaryPrivateIps")]
        public Output<ImmutableArray<string>> SecondaryPrivateIps { get; private set; } = null!;

        /// <summary>
        /// List of security group names to associate with.
        /// 
        /// &gt; **NOTE:** If you are creating Instances in a VPC, use `vpcSecurityGroupIds` instead.
        /// </summary>
        [Output("securityGroups")]
        public Output<ImmutableArray<string>> SecurityGroups { get; private set; } = null!;

        /// <summary>
        /// Controls if traffic is routed to the instance when the destination address does not match the instance. Used for NAT or VPNs. Defaults true.
        /// </summary>
        [Output("sourceDestCheck")]
        public Output<bool?> SourceDestCheck { get; private set; } = null!;

        /// <summary>
        /// The current [bid
        /// status](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-bid-status.html)
        /// of the Spot Instance Request.
        /// </summary>
        [Output("spotBidStatus")]
        public Output<string> SpotBidStatus { get; private set; } = null!;

        /// <summary>
        /// The Instance ID (if any) that is currently fulfilling
        /// the Spot Instance request.
        /// </summary>
        [Output("spotInstanceId")]
        public Output<string> SpotInstanceId { get; private set; } = null!;

        /// <summary>
        /// The maximum price to request on the spot market.
        /// </summary>
        [Output("spotPrice")]
        public Output<string> SpotPrice { get; private set; } = null!;

        /// <summary>
        /// The current [request
        /// state](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-requests.html#creating-spot-request-status)
        /// of the Spot Instance Request.
        /// </summary>
        [Output("spotRequestState")]
        public Output<string> SpotRequestState { get; private set; } = null!;

        /// <summary>
        /// If set to `one-time`, after
        /// the instance is terminated, the spot request will be closed.
        /// </summary>
        [Output("spotType")]
        public Output<string?> SpotType { get; private set; } = null!;

        /// <summary>
        /// VPC Subnet ID to launch in.
        /// </summary>
        [Output("subnetId")]
        public Output<string> SubnetId { get; private set; } = null!;

        /// <summary>
        /// Map of tags to assign to the resource. Note that these tags apply to the instance and not block storage devices. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
        /// </summary>
        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        /// <summary>
        /// Tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of `dedicated` runs on single-tenant hardware. The `host` tenancy is not supported for the import-instance command. Valid values are `default`, `dedicated`, and `host`.
        /// </summary>
        [Output("tenancy")]
        public Output<string> Tenancy { get; private set; } = null!;

        /// <summary>
        /// User data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see `userDataBase64` instead. Updates to this field will trigger a stop/start of the EC2 instance by default. If the `userDataReplaceOnChange` is set then updates to this field will trigger a destroy and recreate of the EC2 instance.
        /// </summary>
        [Output("userData")]
        public Output<string?> UserData { get; private set; } = null!;

        /// <summary>
        /// Can be used instead of `userData` to pass base64-encoded binary data directly. Use this instead of `userData` whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption. Updates to this field will trigger a stop/start of the EC2 instance by default. If the `userDataReplaceOnChange` is set then updates to this field will trigger a destroy and recreate of the EC2 instance.
        /// </summary>
        [Output("userDataBase64")]
        public Output<string> UserDataBase64 { get; private set; } = null!;

        /// <summary>
        /// When used in combination with `userData` or `userDataBase64` will trigger a destroy and recreate of the EC2 instance when set to `true`. Defaults to `false` if not set.
        /// </summary>
        [Output("userDataReplaceOnChange")]
        public Output<bool?> UserDataReplaceOnChange { get; private set; } = null!;

        /// <summary>
        /// The start date and time of the request, in UTC [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.8) format(for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.
        /// </summary>
        [Output("validFrom")]
        public Output<string> ValidFrom { get; private set; } = null!;

        /// <summary>
        /// The end date and time of the request, in UTC [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.8) format(for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new Spot instance requests are placed or enabled to fulfill the request. The default end date is 7 days from the current date.
        /// </summary>
        [Output("validUntil")]
        public Output<string> ValidUntil { get; private set; } = null!;

        /// <summary>
        /// Map of tags to assign, at instance-creation time, to root and EBS volumes.
        /// 
        /// &gt; **NOTE:** Do not use `volumeTags` if you plan to manage block device tags outside the `aws.ec2.Instance` configuration, such as using `tags` in an `aws.ebs.Volume` resource attached via `aws.ec2.VolumeAttachment`. Doing so will result in resource cycling and inconsistent behavior.
        /// </summary>
        [Output("volumeTags")]
        public Output<ImmutableDictionary<string, string>?> VolumeTags { get; private set; } = null!;

        /// <summary>
        /// List of security group IDs to associate with.
        /// </summary>
        [Output("vpcSecurityGroupIds")]
        public Output<ImmutableArray<string>> VpcSecurityGroupIds { get; private set; } = null!;

        /// <summary>
        /// If set, this provider will
        /// wait for the Spot Request to be fulfilled, and will throw an error if the
        /// timeout of 10m is reached.
        /// </summary>
        [Output("waitForFulfillment")]
        public Output<bool?> WaitForFulfillment { get; private set; } = null!;


        /// <summary>
        /// Create a SpotInstanceRequest resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SpotInstanceRequest(string name, SpotInstanceRequestArgs? args = null, CustomResourceOptions? options = null)
            : base("aws:ec2/spotInstanceRequest:SpotInstanceRequest", name, args ?? new SpotInstanceRequestArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SpotInstanceRequest(string name, Input<string> id, SpotInstanceRequestState? state = null, CustomResourceOptions? options = null)
            : base("aws:ec2/spotInstanceRequest:SpotInstanceRequest", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SpotInstanceRequest resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SpotInstanceRequest Get(string name, Input<string> id, SpotInstanceRequestState? state = null, CustomResourceOptions? options = null)
        {
            return new SpotInstanceRequest(name, id, state, options);
        }
    }

    public sealed class SpotInstanceRequestArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// AMI to use for the instance. Required unless `launchTemplate` is specified and the Launch Template specifes an AMI. If an AMI is specified in the Launch Template, setting `ami` will override the AMI specified in the Launch Template.
        /// </summary>
        [Input("ami")]
        public Input<string>? Ami { get; set; }

        /// <summary>
        /// Whether to associate a public IP address with an instance in a VPC.
        /// </summary>
        [Input("associatePublicIpAddress")]
        public Input<bool>? AssociatePublicIpAddress { get; set; }

        /// <summary>
        /// AZ to start the instance in.
        /// </summary>
        [Input("availabilityZone")]
        public Input<string>? AvailabilityZone { get; set; }

        /// <summary>
        /// Describes an instance's Capacity Reservation targeting option. See Capacity Reservation Specification below for more details.
        /// </summary>
        [Input("capacityReservationSpecification")]
        public Input<Inputs.SpotInstanceRequestCapacityReservationSpecificationArgs>? CapacityReservationSpecification { get; set; }

        /// <summary>
        /// The CPU options for the instance. See CPU Options below for more details.
        /// </summary>
        [Input("cpuOptions")]
        public Input<Inputs.SpotInstanceRequestCpuOptionsArgs>? CpuOptions { get; set; }

        /// <summary>
        /// Configuration block for customizing the credit specification of the instance. See Credit Specification below for more details. This provider will only perform drift detection of its value when present in a configuration. Removing this configuration on existing instances will only stop managing it. It will not change the configuration back to the default for the instance type.
        /// </summary>
        [Input("creditSpecification")]
        public Input<Inputs.SpotInstanceRequestCreditSpecificationArgs>? CreditSpecification { get; set; }

        /// <summary>
        /// If true, enables [EC2 Instance Stop Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html#Using_StopProtection).
        /// </summary>
        [Input("disableApiStop")]
        public Input<bool>? DisableApiStop { get; set; }

        /// <summary>
        /// If true, enables [EC2 Instance Termination Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination).
        /// </summary>
        [Input("disableApiTermination")]
        public Input<bool>? DisableApiTermination { get; set; }

        [Input("ebsBlockDevices")]
        private InputList<Inputs.SpotInstanceRequestEbsBlockDeviceArgs>? _ebsBlockDevices;

        /// <summary>
        /// One or more configuration blocks with additional EBS block devices to attach to the instance. Block device configurations only apply on resource creation. See Block Devices below for details on attributes and drift detection. When accessing this as an attribute reference, it is a set of objects.
        /// </summary>
        public InputList<Inputs.SpotInstanceRequestEbsBlockDeviceArgs> EbsBlockDevices
        {
            get => _ebsBlockDevices ?? (_ebsBlockDevices = new InputList<Inputs.SpotInstanceRequestEbsBlockDeviceArgs>());
            set => _ebsBlockDevices = value;
        }

        /// <summary>
        /// If true, the launched EC2 instance will be EBS-optimized. Note that if this is not set on an instance type that is optimized by default then this will show as disabled but if the instance type is optimized by default then there is no need to set this and there is no effect to disabling it. See the [EBS Optimized section](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html) of the AWS User Guide for more information.
        /// </summary>
        [Input("ebsOptimized")]
        public Input<bool>? EbsOptimized { get; set; }

        /// <summary>
        /// Whether to assign a primary IPv6 Global Unicast Address (GUA) to the instance when launched in a dual-stack or IPv6-only subnet. A primary IPv6 address ensures a consistent IPv6 address for the instance and is automatically assigned by AWS to the ENI. Once enabled, the first IPv6 GUA becomes the primary IPv6 address and cannot be disabled. The primary IPv6 address remains until the instance is terminated or the ENI is detached. Disabling `enablePrimaryIpv6` after it has been enabled forces recreation of the instance.
        /// </summary>
        [Input("enablePrimaryIpv6")]
        public Input<bool>? EnablePrimaryIpv6 { get; set; }

        /// <summary>
        /// Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.
        /// </summary>
        [Input("enclaveOptions")]
        public Input<Inputs.SpotInstanceRequestEnclaveOptionsArgs>? EnclaveOptions { get; set; }

        [Input("ephemeralBlockDevices")]
        private InputList<Inputs.SpotInstanceRequestEphemeralBlockDeviceArgs>? _ephemeralBlockDevices;

        /// <summary>
        /// One or more configuration blocks to customize Ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a set of objects.
        /// </summary>
        public InputList<Inputs.SpotInstanceRequestEphemeralBlockDeviceArgs> EphemeralBlockDevices
        {
            get => _ephemeralBlockDevices ?? (_ephemeralBlockDevices = new InputList<Inputs.SpotInstanceRequestEphemeralBlockDeviceArgs>());
            set => _ephemeralBlockDevices = value;
        }

        /// <summary>
        /// Destroys instance even if `disableApiTermination` or `disableApiStop` is set to `true`. Defaults to `false`. Once this parameter is set to `true`, a successful `pulumi up` run before a destroy is required to update this value in the resource state. Without a successful `pulumi up` after this parameter is set, this flag will have no effect. If setting this field in the same operation that would require replacing the instance or destroying the instance, this flag will not work. Additionally when importing an instance, a successful `pulumi up` is required to set this value in state before it will take effect on a destroy operation.
        /// </summary>
        [Input("forceDestroy")]
        public Input<bool>? ForceDestroy { get; set; }

        /// <summary>
        /// If true, wait for password data to become available and retrieve it. Useful for getting the administrator password for instances running Microsoft Windows. The password data is exported to the `passwordData` attribute. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
        /// </summary>
        [Input("getPasswordData")]
        public Input<bool>? GetPasswordData { get; set; }

        /// <summary>
        /// If true, the launched EC2 instance will support hibernation.
        /// </summary>
        [Input("hibernation")]
        public Input<bool>? Hibernation { get; set; }

        /// <summary>
        /// ID of a dedicated host that the instance will be assigned to. Use when an instance is to be launched on a specific dedicated host.
        /// </summary>
        [Input("hostId")]
        public Input<string>? HostId { get; set; }

        /// <summary>
        /// ARN of the host resource group in which to launch the instances. If you specify an ARN, omit the `tenancy` parameter or set it to `host`.
        /// </summary>
        [Input("hostResourceGroupArn")]
        public Input<string>? HostResourceGroupArn { get; set; }

        /// <summary>
        /// IAM Instance Profile to launch the instance with. Specified as the name of the Instance Profile. Ensure your credentials have the correct permission to assign the instance profile according to the [EC2 documentation](http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2.html#roles-usingrole-ec2instance-permissions), notably `iam:PassRole`.
        /// </summary>
        [Input("iamInstanceProfile")]
        public Input<string>? IamInstanceProfile { get; set; }

        /// <summary>
        /// Shutdown behavior for the instance. Amazon defaults this to `stop` for EBS-backed instances and `terminate` for instance-store instances. Cannot be set on instance-store instances. See [Shutdown Behavior](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingInstanceInitiatedShutdownBehavior) for more information.
        /// </summary>
        [Input("instanceInitiatedShutdownBehavior")]
        public Input<string>? InstanceInitiatedShutdownBehavior { get; set; }

        /// <summary>
        /// Indicates Spot instance behavior when it is interrupted. Valid values are `terminate`, `stop`, or `hibernate`. Default value is `terminate`.
        /// </summary>
        [Input("instanceInterruptionBehavior")]
        public Input<string>? InstanceInterruptionBehavior { get; set; }

        /// <summary>
        /// Instance type to use for the instance. Required unless `launchTemplate` is specified and the Launch Template specifies an instance type. If an instance type is specified in the Launch Template, setting `instanceType` will override the instance type specified in the Launch Template. Updates to this field will trigger a stop/start of the EC2 instance.
        /// </summary>
        [Input("instanceType")]
        public Input<string>? InstanceType { get; set; }

        /// <summary>
        /// Number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet.
        /// </summary>
        [Input("ipv6AddressCount")]
        public Input<int>? Ipv6AddressCount { get; set; }

        [Input("ipv6Addresses")]
        private InputList<string>? _ipv6Addresses;

        /// <summary>
        /// Specify one or more IPv6 addresses from the range of the subnet to associate with the primary network interface
        /// </summary>
        public InputList<string> Ipv6Addresses
        {
            get => _ipv6Addresses ?? (_ipv6Addresses = new InputList<string>());
            set => _ipv6Addresses = value;
        }

        /// <summary>
        /// Key name of the Key Pair to use for the instance; which can be managed using the `aws.ec2.KeyPair` resource.
        /// </summary>
        [Input("keyName")]
        public Input<string>? KeyName { get; set; }

        /// <summary>
        /// A launch group is a group of spot instances that launch together and terminate together.
        /// If left empty instances are launched and terminated individually.
        /// </summary>
        [Input("launchGroup")]
        public Input<string>? LaunchGroup { get; set; }

        /// <summary>
        /// Specifies a Launch Template to configure the instance. Parameters configured on this resource will override the corresponding parameters in the Launch Template. See Launch Template Specification below for more details.
        /// </summary>
        [Input("launchTemplate")]
        public Input<Inputs.SpotInstanceRequestLaunchTemplateArgs>? LaunchTemplate { get; set; }

        /// <summary>
        /// Maintenance and recovery options for the instance. See Maintenance Options below for more details.
        /// </summary>
        [Input("maintenanceOptions")]
        public Input<Inputs.SpotInstanceRequestMaintenanceOptionsArgs>? MaintenanceOptions { get; set; }

        /// <summary>
        /// Customize the metadata options of the instance. See Metadata Options below for more details.
        /// </summary>
        [Input("metadataOptions")]
        public Input<Inputs.SpotInstanceRequestMetadataOptionsArgs>? MetadataOptions { get; set; }

        /// <summary>
        /// If true, the launched EC2 instance will have detailed monitoring enabled. (Available since v0.6.0)
        /// </summary>
        [Input("monitoring")]
        public Input<bool>? Monitoring { get; set; }

        [Input("networkInterfaces")]
        private InputList<Inputs.SpotInstanceRequestNetworkInterfaceArgs>? _networkInterfaces;

        /// <summary>
        /// Customize network interfaces to be attached at instance boot time. See Network Interfaces below for more details.
        /// </summary>
        [Obsolete(@"network_interface is deprecated. To specify the primary network interface, use primaryNetworkInterface instead. To attach additional network interfaces, use the aws.ec2.NetworkInterfaceAttachment resource.")]
        public InputList<Inputs.SpotInstanceRequestNetworkInterfaceArgs> NetworkInterfaces
        {
            get => _networkInterfaces ?? (_networkInterfaces = new InputList<Inputs.SpotInstanceRequestNetworkInterfaceArgs>());
            set => _networkInterfaces = value;
        }

        /// <summary>
        /// Placement Group to start the instance in.
        /// </summary>
        [Input("placementGroup")]
        public Input<string>? PlacementGroup { get; set; }

        /// <summary>
        /// Number of the partition the instance is in. Valid only if the `aws.ec2.PlacementGroup` resource's `strategy` argument is set to `"partition"`.
        /// </summary>
        [Input("placementPartitionNumber")]
        public Input<int>? PlacementPartitionNumber { get; set; }

        /// <summary>
        /// Options for the instance hostname. The default values are inherited from the subnet. See Private DNS Name Options below for more details.
        /// </summary>
        [Input("privateDnsNameOptions")]
        public Input<Inputs.SpotInstanceRequestPrivateDnsNameOptionsArgs>? PrivateDnsNameOptions { get; set; }

        /// <summary>
        /// Private IP address to associate with the instance in a VPC.
        /// </summary>
        [Input("privateIp")]
        public Input<string>? PrivateIp { get; set; }

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Configuration block to customize details about the root block device of the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a list containing one object.
        /// </summary>
        [Input("rootBlockDevice")]
        public Input<Inputs.SpotInstanceRequestRootBlockDeviceArgs>? RootBlockDevice { get; set; }

        [Input("secondaryPrivateIps")]
        private InputList<string>? _secondaryPrivateIps;

        /// <summary>
        /// List of secondary private IPv4 addresses to assign to the instance's primary network interface (eth0) in a VPC. Can only be assigned to the primary network interface (eth0) attached at instance creation, not a pre-existing network interface i.e., referenced in a `networkInterface` block. Refer to the [Elastic network interfaces documentation](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI) to see the maximum number of private IP addresses allowed per instance type.
        /// </summary>
        public InputList<string> SecondaryPrivateIps
        {
            get => _secondaryPrivateIps ?? (_secondaryPrivateIps = new InputList<string>());
            set => _secondaryPrivateIps = value;
        }

        [Input("securityGroups")]
        private InputList<string>? _securityGroups;

        /// <summary>
        /// List of security group names to associate with.
        /// 
        /// &gt; **NOTE:** If you are creating Instances in a VPC, use `vpcSecurityGroupIds` instead.
        /// </summary>
        public InputList<string> SecurityGroups
        {
            get => _securityGroups ?? (_securityGroups = new InputList<string>());
            set => _securityGroups = value;
        }

        /// <summary>
        /// Controls if traffic is routed to the instance when the destination address does not match the instance. Used for NAT or VPNs. Defaults true.
        /// </summary>
        [Input("sourceDestCheck")]
        public Input<bool>? SourceDestCheck { get; set; }

        /// <summary>
        /// The maximum price to request on the spot market.
        /// </summary>
        [Input("spotPrice")]
        public Input<string>? SpotPrice { get; set; }

        /// <summary>
        /// If set to `one-time`, after
        /// the instance is terminated, the spot request will be closed.
        /// </summary>
        [Input("spotType")]
        public Input<string>? SpotType { get; set; }

        /// <summary>
        /// VPC Subnet ID to launch in.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Map of tags to assign to the resource. Note that these tags apply to the instance and not block storage devices. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of `dedicated` runs on single-tenant hardware. The `host` tenancy is not supported for the import-instance command. Valid values are `default`, `dedicated`, and `host`.
        /// </summary>
        [Input("tenancy")]
        public Input<string>? Tenancy { get; set; }

        /// <summary>
        /// User data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see `userDataBase64` instead. Updates to this field will trigger a stop/start of the EC2 instance by default. If the `userDataReplaceOnChange` is set then updates to this field will trigger a destroy and recreate of the EC2 instance.
        /// </summary>
        [Input("userData")]
        public Input<string>? UserData { get; set; }

        /// <summary>
        /// Can be used instead of `userData` to pass base64-encoded binary data directly. Use this instead of `userData` whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption. Updates to this field will trigger a stop/start of the EC2 instance by default. If the `userDataReplaceOnChange` is set then updates to this field will trigger a destroy and recreate of the EC2 instance.
        /// </summary>
        [Input("userDataBase64")]
        public Input<string>? UserDataBase64 { get; set; }

        /// <summary>
        /// When used in combination with `userData` or `userDataBase64` will trigger a destroy and recreate of the EC2 instance when set to `true`. Defaults to `false` if not set.
        /// </summary>
        [Input("userDataReplaceOnChange")]
        public Input<bool>? UserDataReplaceOnChange { get; set; }

        /// <summary>
        /// The start date and time of the request, in UTC [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.8) format(for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.
        /// </summary>
        [Input("validFrom")]
        public Input<string>? ValidFrom { get; set; }

        /// <summary>
        /// The end date and time of the request, in UTC [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.8) format(for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new Spot instance requests are placed or enabled to fulfill the request. The default end date is 7 days from the current date.
        /// </summary>
        [Input("validUntil")]
        public Input<string>? ValidUntil { get; set; }

        [Input("volumeTags")]
        private InputMap<string>? _volumeTags;

        /// <summary>
        /// Map of tags to assign, at instance-creation time, to root and EBS volumes.
        /// 
        /// &gt; **NOTE:** Do not use `volumeTags` if you plan to manage block device tags outside the `aws.ec2.Instance` configuration, such as using `tags` in an `aws.ebs.Volume` resource attached via `aws.ec2.VolumeAttachment`. Doing so will result in resource cycling and inconsistent behavior.
        /// </summary>
        public InputMap<string> VolumeTags
        {
            get => _volumeTags ?? (_volumeTags = new InputMap<string>());
            set => _volumeTags = value;
        }

        [Input("vpcSecurityGroupIds")]
        private InputList<string>? _vpcSecurityGroupIds;

        /// <summary>
        /// List of security group IDs to associate with.
        /// </summary>
        public InputList<string> VpcSecurityGroupIds
        {
            get => _vpcSecurityGroupIds ?? (_vpcSecurityGroupIds = new InputList<string>());
            set => _vpcSecurityGroupIds = value;
        }

        /// <summary>
        /// If set, this provider will
        /// wait for the Spot Request to be fulfilled, and will throw an error if the
        /// timeout of 10m is reached.
        /// </summary>
        [Input("waitForFulfillment")]
        public Input<bool>? WaitForFulfillment { get; set; }

        public SpotInstanceRequestArgs()
        {
        }
        public static new SpotInstanceRequestArgs Empty => new SpotInstanceRequestArgs();
    }

    public sealed class SpotInstanceRequestState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// AMI to use for the instance. Required unless `launchTemplate` is specified and the Launch Template specifes an AMI. If an AMI is specified in the Launch Template, setting `ami` will override the AMI specified in the Launch Template.
        /// </summary>
        [Input("ami")]
        public Input<string>? Ami { get; set; }

        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// Whether to associate a public IP address with an instance in a VPC.
        /// </summary>
        [Input("associatePublicIpAddress")]
        public Input<bool>? AssociatePublicIpAddress { get; set; }

        /// <summary>
        /// AZ to start the instance in.
        /// </summary>
        [Input("availabilityZone")]
        public Input<string>? AvailabilityZone { get; set; }

        /// <summary>
        /// Describes an instance's Capacity Reservation targeting option. See Capacity Reservation Specification below for more details.
        /// </summary>
        [Input("capacityReservationSpecification")]
        public Input<Inputs.SpotInstanceRequestCapacityReservationSpecificationGetArgs>? CapacityReservationSpecification { get; set; }

        /// <summary>
        /// The CPU options for the instance. See CPU Options below for more details.
        /// </summary>
        [Input("cpuOptions")]
        public Input<Inputs.SpotInstanceRequestCpuOptionsGetArgs>? CpuOptions { get; set; }

        /// <summary>
        /// Configuration block for customizing the credit specification of the instance. See Credit Specification below for more details. This provider will only perform drift detection of its value when present in a configuration. Removing this configuration on existing instances will only stop managing it. It will not change the configuration back to the default for the instance type.
        /// </summary>
        [Input("creditSpecification")]
        public Input<Inputs.SpotInstanceRequestCreditSpecificationGetArgs>? CreditSpecification { get; set; }

        /// <summary>
        /// If true, enables [EC2 Instance Stop Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html#Using_StopProtection).
        /// </summary>
        [Input("disableApiStop")]
        public Input<bool>? DisableApiStop { get; set; }

        /// <summary>
        /// If true, enables [EC2 Instance Termination Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination).
        /// </summary>
        [Input("disableApiTermination")]
        public Input<bool>? DisableApiTermination { get; set; }

        [Input("ebsBlockDevices")]
        private InputList<Inputs.SpotInstanceRequestEbsBlockDeviceGetArgs>? _ebsBlockDevices;

        /// <summary>
        /// One or more configuration blocks with additional EBS block devices to attach to the instance. Block device configurations only apply on resource creation. See Block Devices below for details on attributes and drift detection. When accessing this as an attribute reference, it is a set of objects.
        /// </summary>
        public InputList<Inputs.SpotInstanceRequestEbsBlockDeviceGetArgs> EbsBlockDevices
        {
            get => _ebsBlockDevices ?? (_ebsBlockDevices = new InputList<Inputs.SpotInstanceRequestEbsBlockDeviceGetArgs>());
            set => _ebsBlockDevices = value;
        }

        /// <summary>
        /// If true, the launched EC2 instance will be EBS-optimized. Note that if this is not set on an instance type that is optimized by default then this will show as disabled but if the instance type is optimized by default then there is no need to set this and there is no effect to disabling it. See the [EBS Optimized section](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSOptimized.html) of the AWS User Guide for more information.
        /// </summary>
        [Input("ebsOptimized")]
        public Input<bool>? EbsOptimized { get; set; }

        /// <summary>
        /// Whether to assign a primary IPv6 Global Unicast Address (GUA) to the instance when launched in a dual-stack or IPv6-only subnet. A primary IPv6 address ensures a consistent IPv6 address for the instance and is automatically assigned by AWS to the ENI. Once enabled, the first IPv6 GUA becomes the primary IPv6 address and cannot be disabled. The primary IPv6 address remains until the instance is terminated or the ENI is detached. Disabling `enablePrimaryIpv6` after it has been enabled forces recreation of the instance.
        /// </summary>
        [Input("enablePrimaryIpv6")]
        public Input<bool>? EnablePrimaryIpv6 { get; set; }

        /// <summary>
        /// Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.
        /// </summary>
        [Input("enclaveOptions")]
        public Input<Inputs.SpotInstanceRequestEnclaveOptionsGetArgs>? EnclaveOptions { get; set; }

        [Input("ephemeralBlockDevices")]
        private InputList<Inputs.SpotInstanceRequestEphemeralBlockDeviceGetArgs>? _ephemeralBlockDevices;

        /// <summary>
        /// One or more configuration blocks to customize Ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a set of objects.
        /// </summary>
        public InputList<Inputs.SpotInstanceRequestEphemeralBlockDeviceGetArgs> EphemeralBlockDevices
        {
            get => _ephemeralBlockDevices ?? (_ephemeralBlockDevices = new InputList<Inputs.SpotInstanceRequestEphemeralBlockDeviceGetArgs>());
            set => _ephemeralBlockDevices = value;
        }

        /// <summary>
        /// Destroys instance even if `disableApiTermination` or `disableApiStop` is set to `true`. Defaults to `false`. Once this parameter is set to `true`, a successful `pulumi up` run before a destroy is required to update this value in the resource state. Without a successful `pulumi up` after this parameter is set, this flag will have no effect. If setting this field in the same operation that would require replacing the instance or destroying the instance, this flag will not work. Additionally when importing an instance, a successful `pulumi up` is required to set this value in state before it will take effect on a destroy operation.
        /// </summary>
        [Input("forceDestroy")]
        public Input<bool>? ForceDestroy { get; set; }

        /// <summary>
        /// If true, wait for password data to become available and retrieve it. Useful for getting the administrator password for instances running Microsoft Windows. The password data is exported to the `passwordData` attribute. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.
        /// </summary>
        [Input("getPasswordData")]
        public Input<bool>? GetPasswordData { get; set; }

        /// <summary>
        /// If true, the launched EC2 instance will support hibernation.
        /// </summary>
        [Input("hibernation")]
        public Input<bool>? Hibernation { get; set; }

        /// <summary>
        /// ID of a dedicated host that the instance will be assigned to. Use when an instance is to be launched on a specific dedicated host.
        /// </summary>
        [Input("hostId")]
        public Input<string>? HostId { get; set; }

        /// <summary>
        /// ARN of the host resource group in which to launch the instances. If you specify an ARN, omit the `tenancy` parameter or set it to `host`.
        /// </summary>
        [Input("hostResourceGroupArn")]
        public Input<string>? HostResourceGroupArn { get; set; }

        /// <summary>
        /// IAM Instance Profile to launch the instance with. Specified as the name of the Instance Profile. Ensure your credentials have the correct permission to assign the instance profile according to the [EC2 documentation](http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2.html#roles-usingrole-ec2instance-permissions), notably `iam:PassRole`.
        /// </summary>
        [Input("iamInstanceProfile")]
        public Input<string>? IamInstanceProfile { get; set; }

        /// <summary>
        /// Shutdown behavior for the instance. Amazon defaults this to `stop` for EBS-backed instances and `terminate` for instance-store instances. Cannot be set on instance-store instances. See [Shutdown Behavior](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingInstanceInitiatedShutdownBehavior) for more information.
        /// </summary>
        [Input("instanceInitiatedShutdownBehavior")]
        public Input<string>? InstanceInitiatedShutdownBehavior { get; set; }

        /// <summary>
        /// Indicates Spot instance behavior when it is interrupted. Valid values are `terminate`, `stop`, or `hibernate`. Default value is `terminate`.
        /// </summary>
        [Input("instanceInterruptionBehavior")]
        public Input<string>? InstanceInterruptionBehavior { get; set; }

        [Input("instanceState")]
        public Input<string>? InstanceState { get; set; }

        /// <summary>
        /// Instance type to use for the instance. Required unless `launchTemplate` is specified and the Launch Template specifies an instance type. If an instance type is specified in the Launch Template, setting `instanceType` will override the instance type specified in the Launch Template. Updates to this field will trigger a stop/start of the EC2 instance.
        /// </summary>
        [Input("instanceType")]
        public Input<string>? InstanceType { get; set; }

        /// <summary>
        /// Number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet.
        /// </summary>
        [Input("ipv6AddressCount")]
        public Input<int>? Ipv6AddressCount { get; set; }

        [Input("ipv6Addresses")]
        private InputList<string>? _ipv6Addresses;

        /// <summary>
        /// Specify one or more IPv6 addresses from the range of the subnet to associate with the primary network interface
        /// </summary>
        public InputList<string> Ipv6Addresses
        {
            get => _ipv6Addresses ?? (_ipv6Addresses = new InputList<string>());
            set => _ipv6Addresses = value;
        }

        /// <summary>
        /// Key name of the Key Pair to use for the instance; which can be managed using the `aws.ec2.KeyPair` resource.
        /// </summary>
        [Input("keyName")]
        public Input<string>? KeyName { get; set; }

        /// <summary>
        /// A launch group is a group of spot instances that launch together and terminate together.
        /// If left empty instances are launched and terminated individually.
        /// </summary>
        [Input("launchGroup")]
        public Input<string>? LaunchGroup { get; set; }

        /// <summary>
        /// Specifies a Launch Template to configure the instance. Parameters configured on this resource will override the corresponding parameters in the Launch Template. See Launch Template Specification below for more details.
        /// </summary>
        [Input("launchTemplate")]
        public Input<Inputs.SpotInstanceRequestLaunchTemplateGetArgs>? LaunchTemplate { get; set; }

        /// <summary>
        /// Maintenance and recovery options for the instance. See Maintenance Options below for more details.
        /// </summary>
        [Input("maintenanceOptions")]
        public Input<Inputs.SpotInstanceRequestMaintenanceOptionsGetArgs>? MaintenanceOptions { get; set; }

        /// <summary>
        /// Customize the metadata options of the instance. See Metadata Options below for more details.
        /// </summary>
        [Input("metadataOptions")]
        public Input<Inputs.SpotInstanceRequestMetadataOptionsGetArgs>? MetadataOptions { get; set; }

        /// <summary>
        /// If true, the launched EC2 instance will have detailed monitoring enabled. (Available since v0.6.0)
        /// </summary>
        [Input("monitoring")]
        public Input<bool>? Monitoring { get; set; }

        [Input("networkInterfaces")]
        private InputList<Inputs.SpotInstanceRequestNetworkInterfaceGetArgs>? _networkInterfaces;

        /// <summary>
        /// Customize network interfaces to be attached at instance boot time. See Network Interfaces below for more details.
        /// </summary>
        [Obsolete(@"network_interface is deprecated. To specify the primary network interface, use primaryNetworkInterface instead. To attach additional network interfaces, use the aws.ec2.NetworkInterfaceAttachment resource.")]
        public InputList<Inputs.SpotInstanceRequestNetworkInterfaceGetArgs> NetworkInterfaces
        {
            get => _networkInterfaces ?? (_networkInterfaces = new InputList<Inputs.SpotInstanceRequestNetworkInterfaceGetArgs>());
            set => _networkInterfaces = value;
        }

        [Input("outpostArn")]
        public Input<string>? OutpostArn { get; set; }

        [Input("passwordData")]
        public Input<string>? PasswordData { get; set; }

        /// <summary>
        /// Placement Group to start the instance in.
        /// </summary>
        [Input("placementGroup")]
        public Input<string>? PlacementGroup { get; set; }

        /// <summary>
        /// Number of the partition the instance is in. Valid only if the `aws.ec2.PlacementGroup` resource's `strategy` argument is set to `"partition"`.
        /// </summary>
        [Input("placementPartitionNumber")]
        public Input<int>? PlacementPartitionNumber { get; set; }

        [Input("primaryNetworkInterfaceId")]
        public Input<string>? PrimaryNetworkInterfaceId { get; set; }

        [Input("primaryNetworkInterfaces")]
        private InputList<Inputs.SpotInstanceRequestPrimaryNetworkInterfaceGetArgs>? _primaryNetworkInterfaces;

        /// <summary>
        /// The primary network interface. See Primary Network Interface below.
        /// </summary>
        public InputList<Inputs.SpotInstanceRequestPrimaryNetworkInterfaceGetArgs> PrimaryNetworkInterfaces
        {
            get => _primaryNetworkInterfaces ?? (_primaryNetworkInterfaces = new InputList<Inputs.SpotInstanceRequestPrimaryNetworkInterfaceGetArgs>());
            set => _primaryNetworkInterfaces = value;
        }

        /// <summary>
        /// The private DNS name assigned to the instance. Can only be
        /// used inside the Amazon EC2, and only available if you've enabled DNS hostnames
        /// for your VPC
        /// </summary>
        [Input("privateDns")]
        public Input<string>? PrivateDns { get; set; }

        /// <summary>
        /// Options for the instance hostname. The default values are inherited from the subnet. See Private DNS Name Options below for more details.
        /// </summary>
        [Input("privateDnsNameOptions")]
        public Input<Inputs.SpotInstanceRequestPrivateDnsNameOptionsGetArgs>? PrivateDnsNameOptions { get; set; }

        /// <summary>
        /// Private IP address to associate with the instance in a VPC.
        /// </summary>
        [Input("privateIp")]
        public Input<string>? PrivateIp { get; set; }

        /// <summary>
        /// The public DNS name assigned to the instance. For EC2-VPC, this
        /// is only available if you've enabled DNS hostnames for your VPC
        /// </summary>
        [Input("publicDns")]
        public Input<string>? PublicDns { get; set; }

        /// <summary>
        /// The public IP address assigned to the instance, if applicable.
        /// </summary>
        [Input("publicIp")]
        public Input<string>? PublicIp { get; set; }

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Configuration block to customize details about the root block device of the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a list containing one object.
        /// </summary>
        [Input("rootBlockDevice")]
        public Input<Inputs.SpotInstanceRequestRootBlockDeviceGetArgs>? RootBlockDevice { get; set; }

        [Input("secondaryPrivateIps")]
        private InputList<string>? _secondaryPrivateIps;

        /// <summary>
        /// List of secondary private IPv4 addresses to assign to the instance's primary network interface (eth0) in a VPC. Can only be assigned to the primary network interface (eth0) attached at instance creation, not a pre-existing network interface i.e., referenced in a `networkInterface` block. Refer to the [Elastic network interfaces documentation](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI) to see the maximum number of private IP addresses allowed per instance type.
        /// </summary>
        public InputList<string> SecondaryPrivateIps
        {
            get => _secondaryPrivateIps ?? (_secondaryPrivateIps = new InputList<string>());
            set => _secondaryPrivateIps = value;
        }

        [Input("securityGroups")]
        private InputList<string>? _securityGroups;

        /// <summary>
        /// List of security group names to associate with.
        /// 
        /// &gt; **NOTE:** If you are creating Instances in a VPC, use `vpcSecurityGroupIds` instead.
        /// </summary>
        public InputList<string> SecurityGroups
        {
            get => _securityGroups ?? (_securityGroups = new InputList<string>());
            set => _securityGroups = value;
        }

        /// <summary>
        /// Controls if traffic is routed to the instance when the destination address does not match the instance. Used for NAT or VPNs. Defaults true.
        /// </summary>
        [Input("sourceDestCheck")]
        public Input<bool>? SourceDestCheck { get; set; }

        /// <summary>
        /// The current [bid
        /// status](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-bid-status.html)
        /// of the Spot Instance Request.
        /// </summary>
        [Input("spotBidStatus")]
        public Input<string>? SpotBidStatus { get; set; }

        /// <summary>
        /// The Instance ID (if any) that is currently fulfilling
        /// the Spot Instance request.
        /// </summary>
        [Input("spotInstanceId")]
        public Input<string>? SpotInstanceId { get; set; }

        /// <summary>
        /// The maximum price to request on the spot market.
        /// </summary>
        [Input("spotPrice")]
        public Input<string>? SpotPrice { get; set; }

        /// <summary>
        /// The current [request
        /// state](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-requests.html#creating-spot-request-status)
        /// of the Spot Instance Request.
        /// </summary>
        [Input("spotRequestState")]
        public Input<string>? SpotRequestState { get; set; }

        /// <summary>
        /// If set to `one-time`, after
        /// the instance is terminated, the spot request will be closed.
        /// </summary>
        [Input("spotType")]
        public Input<string>? SpotType { get; set; }

        /// <summary>
        /// VPC Subnet ID to launch in.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Map of tags to assign to the resource. Note that these tags apply to the instance and not block storage devices. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
        /// </summary>
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        /// <summary>
        /// Tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of `dedicated` runs on single-tenant hardware. The `host` tenancy is not supported for the import-instance command. Valid values are `default`, `dedicated`, and `host`.
        /// </summary>
        [Input("tenancy")]
        public Input<string>? Tenancy { get; set; }

        /// <summary>
        /// User data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see `userDataBase64` instead. Updates to this field will trigger a stop/start of the EC2 instance by default. If the `userDataReplaceOnChange` is set then updates to this field will trigger a destroy and recreate of the EC2 instance.
        /// </summary>
        [Input("userData")]
        public Input<string>? UserData { get; set; }

        /// <summary>
        /// Can be used instead of `userData` to pass base64-encoded binary data directly. Use this instead of `userData` whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption. Updates to this field will trigger a stop/start of the EC2 instance by default. If the `userDataReplaceOnChange` is set then updates to this field will trigger a destroy and recreate of the EC2 instance.
        /// </summary>
        [Input("userDataBase64")]
        public Input<string>? UserDataBase64 { get; set; }

        /// <summary>
        /// When used in combination with `userData` or `userDataBase64` will trigger a destroy and recreate of the EC2 instance when set to `true`. Defaults to `false` if not set.
        /// </summary>
        [Input("userDataReplaceOnChange")]
        public Input<bool>? UserDataReplaceOnChange { get; set; }

        /// <summary>
        /// The start date and time of the request, in UTC [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.8) format(for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.
        /// </summary>
        [Input("validFrom")]
        public Input<string>? ValidFrom { get; set; }

        /// <summary>
        /// The end date and time of the request, in UTC [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.8) format(for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new Spot instance requests are placed or enabled to fulfill the request. The default end date is 7 days from the current date.
        /// </summary>
        [Input("validUntil")]
        public Input<string>? ValidUntil { get; set; }

        [Input("volumeTags")]
        private InputMap<string>? _volumeTags;

        /// <summary>
        /// Map of tags to assign, at instance-creation time, to root and EBS volumes.
        /// 
        /// &gt; **NOTE:** Do not use `volumeTags` if you plan to manage block device tags outside the `aws.ec2.Instance` configuration, such as using `tags` in an `aws.ebs.Volume` resource attached via `aws.ec2.VolumeAttachment`. Doing so will result in resource cycling and inconsistent behavior.
        /// </summary>
        public InputMap<string> VolumeTags
        {
            get => _volumeTags ?? (_volumeTags = new InputMap<string>());
            set => _volumeTags = value;
        }

        [Input("vpcSecurityGroupIds")]
        private InputList<string>? _vpcSecurityGroupIds;

        /// <summary>
        /// List of security group IDs to associate with.
        /// </summary>
        public InputList<string> VpcSecurityGroupIds
        {
            get => _vpcSecurityGroupIds ?? (_vpcSecurityGroupIds = new InputList<string>());
            set => _vpcSecurityGroupIds = value;
        }

        /// <summary>
        /// If set, this provider will
        /// wait for the Spot Request to be fulfilled, and will throw an error if the
        /// timeout of 10m is reached.
        /// </summary>
        [Input("waitForFulfillment")]
        public Input<bool>? WaitForFulfillment { get; set; }

        public SpotInstanceRequestState()
        {
        }
        public static new SpotInstanceRequestState Empty => new SpotInstanceRequestState();
    }
}
