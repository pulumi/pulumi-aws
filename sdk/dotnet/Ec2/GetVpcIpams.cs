// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2
{
    public static class GetVpcIpams
    {
        /// <summary>
        /// Data source for managing VPC IPAMs.
        /// 
        /// ## Example Usage
        /// 
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Ec2.GetVpcIpams.Invoke(new()
        ///     {
        ///         IpamIds = new[]
        ///         {
        ///             "ipam-abcd1234",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ### Filter by `tags`
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Ec2.GetVpcIpams.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Aws.Ec2.Inputs.GetVpcIpamsFilterInputArgs
        ///             {
        ///                 Name = "tags.Some",
        ///                 Values = new[]
        ///                 {
        ///                     "Value",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ### Filter by `tier`
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Ec2.GetVpcIpams.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Aws.Ec2.Inputs.GetVpcIpamsFilterInputArgs
        ///             {
        ///                 Name = "tier",
        ///                 Values = new[]
        ///                 {
        ///                     "free",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetVpcIpamsResult> InvokeAsync(GetVpcIpamsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVpcIpamsResult>("aws:ec2/getVpcIpams:getVpcIpams", args ?? new GetVpcIpamsArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for managing VPC IPAMs.
        /// 
        /// ## Example Usage
        /// 
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Ec2.GetVpcIpams.Invoke(new()
        ///     {
        ///         IpamIds = new[]
        ///         {
        ///             "ipam-abcd1234",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ### Filter by `tags`
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Ec2.GetVpcIpams.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Aws.Ec2.Inputs.GetVpcIpamsFilterInputArgs
        ///             {
        ///                 Name = "tags.Some",
        ///                 Values = new[]
        ///                 {
        ///                     "Value",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ### Filter by `tier`
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Ec2.GetVpcIpams.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Aws.Ec2.Inputs.GetVpcIpamsFilterInputArgs
        ///             {
        ///                 Name = "tier",
        ///                 Values = new[]
        ///                 {
        ///                     "free",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetVpcIpamsResult> Invoke(GetVpcIpamsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVpcIpamsResult>("aws:ec2/getVpcIpams:getVpcIpams", args ?? new GetVpcIpamsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for managing VPC IPAMs.
        /// 
        /// ## Example Usage
        /// 
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Ec2.GetVpcIpams.Invoke(new()
        ///     {
        ///         IpamIds = new[]
        ///         {
        ///             "ipam-abcd1234",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ### Filter by `tags`
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Ec2.GetVpcIpams.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Aws.Ec2.Inputs.GetVpcIpamsFilterInputArgs
        ///             {
        ///                 Name = "tags.Some",
        ///                 Values = new[]
        ///                 {
        ///                     "Value",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ### Filter by `tier`
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Ec2.GetVpcIpams.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Aws.Ec2.Inputs.GetVpcIpamsFilterInputArgs
        ///             {
        ///                 Name = "tier",
        ///                 Values = new[]
        ///                 {
        ///                     "free",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetVpcIpamsResult> Invoke(GetVpcIpamsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetVpcIpamsResult>("aws:ec2/getVpcIpams:getVpcIpams", args ?? new GetVpcIpamsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVpcIpamsArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetVpcIpamsFilterArgs>? _filters;

        /// <summary>
        /// Custom filter block as described below.
        /// 
        /// The arguments of this data source act as filters for querying the available IPAMs.
        /// </summary>
        public List<Inputs.GetVpcIpamsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetVpcIpamsFilterArgs>());
            set => _filters = value;
        }

        [Input("ipamIds")]
        private List<string>? _ipamIds;

        /// <summary>
        /// IDs of the IPAM resources to query for.
        /// </summary>
        public List<string> IpamIds
        {
            get => _ipamIds ?? (_ipamIds = new List<string>());
            set => _ipamIds = value;
        }

        public GetVpcIpamsArgs()
        {
        }
        public static new GetVpcIpamsArgs Empty => new GetVpcIpamsArgs();
    }

    public sealed class GetVpcIpamsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetVpcIpamsFilterInputArgs>? _filters;

        /// <summary>
        /// Custom filter block as described below.
        /// 
        /// The arguments of this data source act as filters for querying the available IPAMs.
        /// </summary>
        public InputList<Inputs.GetVpcIpamsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetVpcIpamsFilterInputArgs>());
            set => _filters = value;
        }

        [Input("ipamIds")]
        private InputList<string>? _ipamIds;

        /// <summary>
        /// IDs of the IPAM resources to query for.
        /// </summary>
        public InputList<string> IpamIds
        {
            get => _ipamIds ?? (_ipamIds = new InputList<string>());
            set => _ipamIds = value;
        }

        public GetVpcIpamsInvokeArgs()
        {
        }
        public static new GetVpcIpamsInvokeArgs Empty => new GetVpcIpamsInvokeArgs();
    }


    [OutputType]
    public sealed class GetVpcIpamsResult
    {
        public readonly ImmutableArray<Outputs.GetVpcIpamsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> IpamIds;
        /// <summary>
        /// List of IPAM resources matching the provided arguments.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetVpcIpamsIpamResult> Ipams;

        [OutputConstructor]
        private GetVpcIpamsResult(
            ImmutableArray<Outputs.GetVpcIpamsFilterResult> filters,

            string id,

            ImmutableArray<string> ipamIds,

            ImmutableArray<Outputs.GetVpcIpamsIpamResult> ipams)
        {
            Filters = filters;
            Id = id;
            IpamIds = ipamIds;
            Ipams = ipams;
        }
    }
}
