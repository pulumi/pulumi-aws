// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2
{
    [AwsResourceType("aws:ec2/vpcIpam:VpcIpam")]
    public partial class VpcIpam : global::Pulumi.CustomResource
    {
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("cascade")]
        public Output<bool?> Cascade { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("operatingRegions")]
        public Output<ImmutableArray<Outputs.VpcIpamOperatingRegion>> OperatingRegions { get; private set; } = null!;

        [Output("privateDefaultScopeId")]
        public Output<string> PrivateDefaultScopeId { get; private set; } = null!;

        [Output("publicDefaultScopeId")]
        public Output<string> PublicDefaultScopeId { get; private set; } = null!;

        [Output("scopeCount")]
        public Output<int> ScopeCount { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;


        /// <summary>
        /// Create a VpcIpam resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VpcIpam(string name, VpcIpamArgs args, CustomResourceOptions? options = null)
            : base("aws:ec2/vpcIpam:VpcIpam", name, args ?? new VpcIpamArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VpcIpam(string name, Input<string> id, VpcIpamState? state = null, CustomResourceOptions? options = null)
            : base("aws:ec2/vpcIpam:VpcIpam", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VpcIpam resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VpcIpam Get(string name, Input<string> id, VpcIpamState? state = null, CustomResourceOptions? options = null)
        {
            return new VpcIpam(name, id, state, options);
        }
    }

    public sealed class VpcIpamArgs : global::Pulumi.ResourceArgs
    {
        [Input("cascade")]
        public Input<bool>? Cascade { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("operatingRegions", required: true)]
        private InputList<Inputs.VpcIpamOperatingRegionArgs>? _operatingRegions;
        public InputList<Inputs.VpcIpamOperatingRegionArgs> OperatingRegions
        {
            get => _operatingRegions ?? (_operatingRegions = new InputList<Inputs.VpcIpamOperatingRegionArgs>());
            set => _operatingRegions = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public VpcIpamArgs()
        {
        }
        public static new VpcIpamArgs Empty => new VpcIpamArgs();
    }

    public sealed class VpcIpamState : global::Pulumi.ResourceArgs
    {
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("cascade")]
        public Input<bool>? Cascade { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("operatingRegions")]
        private InputList<Inputs.VpcIpamOperatingRegionGetArgs>? _operatingRegions;
        public InputList<Inputs.VpcIpamOperatingRegionGetArgs> OperatingRegions
        {
            get => _operatingRegions ?? (_operatingRegions = new InputList<Inputs.VpcIpamOperatingRegionGetArgs>());
            set => _operatingRegions = value;
        }

        [Input("privateDefaultScopeId")]
        public Input<string>? PrivateDefaultScopeId { get; set; }

        [Input("publicDefaultScopeId")]
        public Input<string>? PublicDefaultScopeId { get; set; }

        [Input("scopeCount")]
        public Input<int>? ScopeCount { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        public VpcIpamState()
        {
        }
        public static new VpcIpamState Empty => new VpcIpamState();
    }
}
