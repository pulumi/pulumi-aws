// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2
{
    public static class GetVpcIamPool
    {
        public static Task<GetVpcIamPoolResult> InvokeAsync(GetVpcIamPoolArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVpcIamPoolResult>("aws:ec2/getVpcIamPool:getVpcIamPool", args ?? new GetVpcIamPoolArgs(), options.WithDefaults());

        public static Output<GetVpcIamPoolResult> Invoke(GetVpcIamPoolInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVpcIamPoolResult>("aws:ec2/getVpcIamPool:getVpcIamPool", args ?? new GetVpcIamPoolInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVpcIamPoolArgs : global::Pulumi.InvokeArgs
    {
        [Input("allocationResourceTags")]
        private Dictionary<string, string>? _allocationResourceTags;
        public Dictionary<string, string> AllocationResourceTags
        {
            get => _allocationResourceTags ?? (_allocationResourceTags = new Dictionary<string, string>());
            set => _allocationResourceTags = value;
        }

        [Input("filters")]
        private List<Inputs.GetVpcIamPoolFilterArgs>? _filters;
        public List<Inputs.GetVpcIamPoolFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetVpcIamPoolFilterArgs>());
            set => _filters = value;
        }

        [Input("id")]
        public string? Id { get; set; }

        [Input("ipamPoolId")]
        public string? IpamPoolId { get; set; }

        [Input("tags")]
        private Dictionary<string, string>? _tags;
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetVpcIamPoolArgs()
        {
        }
        public static new GetVpcIamPoolArgs Empty => new GetVpcIamPoolArgs();
    }

    public sealed class GetVpcIamPoolInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("allocationResourceTags")]
        private InputMap<string>? _allocationResourceTags;
        public InputMap<string> AllocationResourceTags
        {
            get => _allocationResourceTags ?? (_allocationResourceTags = new InputMap<string>());
            set => _allocationResourceTags = value;
        }

        [Input("filters")]
        private InputList<Inputs.GetVpcIamPoolFilterInputArgs>? _filters;
        public InputList<Inputs.GetVpcIamPoolFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetVpcIamPoolFilterInputArgs>());
            set => _filters = value;
        }

        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("ipamPoolId")]
        public Input<string>? IpamPoolId { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetVpcIamPoolInvokeArgs()
        {
        }
        public static new GetVpcIamPoolInvokeArgs Empty => new GetVpcIamPoolInvokeArgs();
    }


    [OutputType]
    public sealed class GetVpcIamPoolResult
    {
        public readonly string AddressFamily;
        public readonly int AllocationDefaultNetmaskLength;
        public readonly int AllocationMaxNetmaskLength;
        public readonly int AllocationMinNetmaskLength;
        public readonly ImmutableDictionary<string, string> AllocationResourceTags;
        public readonly string Arn;
        public readonly bool AutoImport;
        public readonly string AwsService;
        public readonly string Description;
        public readonly ImmutableArray<Outputs.GetVpcIamPoolFilterResult> Filters;
        public readonly string? Id;
        public readonly string? IpamPoolId;
        public readonly string IpamScopeId;
        public readonly string IpamScopeType;
        public readonly string Locale;
        public readonly int PoolDepth;
        public readonly bool PubliclyAdvertisable;
        public readonly string SourceIpamPoolId;
        public readonly string State;
        public readonly ImmutableDictionary<string, string> Tags;

        [OutputConstructor]
        private GetVpcIamPoolResult(
            string addressFamily,

            int allocationDefaultNetmaskLength,

            int allocationMaxNetmaskLength,

            int allocationMinNetmaskLength,

            ImmutableDictionary<string, string> allocationResourceTags,

            string arn,

            bool autoImport,

            string awsService,

            string description,

            ImmutableArray<Outputs.GetVpcIamPoolFilterResult> filters,

            string? id,

            string? ipamPoolId,

            string ipamScopeId,

            string ipamScopeType,

            string locale,

            int poolDepth,

            bool publiclyAdvertisable,

            string sourceIpamPoolId,

            string state,

            ImmutableDictionary<string, string> tags)
        {
            AddressFamily = addressFamily;
            AllocationDefaultNetmaskLength = allocationDefaultNetmaskLength;
            AllocationMaxNetmaskLength = allocationMaxNetmaskLength;
            AllocationMinNetmaskLength = allocationMinNetmaskLength;
            AllocationResourceTags = allocationResourceTags;
            Arn = arn;
            AutoImport = autoImport;
            AwsService = awsService;
            Description = description;
            Filters = filters;
            Id = id;
            IpamPoolId = ipamPoolId;
            IpamScopeId = ipamScopeId;
            IpamScopeType = ipamScopeType;
            Locale = locale;
            PoolDepth = poolDepth;
            PubliclyAdvertisable = publiclyAdvertisable;
            SourceIpamPoolId = sourceIpamPoolId;
            State = state;
            Tags = tags;
        }
    }
}
