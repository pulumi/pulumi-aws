// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2
{
    public static partial class Invokes
    {
        /// <summary>
        /// The VPC Endpoint Service data source details about a specific service that
        /// can be specified when creating a VPC endpoint within the region configured in the provider.
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/d/vpc_endpoint_service.html.markdown.
        /// </summary>
        public static Task<GetVpcEndpointServiceResult> GetVpcEndpointService(GetVpcEndpointServiceArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetVpcEndpointServiceResult>("aws:ec2/getVpcEndpointService:getVpcEndpointService", args ?? InvokeArgs.Empty, options.WithVersion());
    }

    public sealed class GetVpcEndpointServiceArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The common name of an AWS service (e.g. `s3`).
        /// </summary>
        [Input("service")]
        public string? Service { get; set; }

        /// <summary>
        /// The service name that can be specified when creating a VPC endpoint.
        /// </summary>
        [Input("serviceName")]
        public string? ServiceName { get; set; }

        [Input("tags")]
        private Dictionary<string, object>? _tags;
        public Dictionary<string, object> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, object>());
            set => _tags = value;
        }

        public GetVpcEndpointServiceArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetVpcEndpointServiceResult
    {
        /// <summary>
        /// Whether or not VPC endpoint connection requests to the service must be accepted by the service owner - `true` or `false`.
        /// </summary>
        public readonly bool AcceptanceRequired;
        /// <summary>
        /// The Availability Zones in which the service is available.
        /// </summary>
        public readonly ImmutableArray<string> AvailabilityZones;
        /// <summary>
        /// The DNS names for the service.
        /// </summary>
        public readonly ImmutableArray<string> BaseEndpointDnsNames;
        /// <summary>
        /// Whether or not the service manages its VPC endpoints - `true` or `false`.
        /// </summary>
        public readonly bool ManagesVpcEndpoints;
        /// <summary>
        /// The AWS account ID of the service owner or `amazon`.
        /// </summary>
        public readonly string Owner;
        /// <summary>
        /// The private DNS name for the service.
        /// </summary>
        public readonly string PrivateDnsName;
        public readonly string? Service;
        /// <summary>
        /// The ID of the endpoint service.
        /// </summary>
        public readonly string ServiceId;
        public readonly string ServiceName;
        /// <summary>
        /// The service type, `Gateway` or `Interface`.
        /// </summary>
        public readonly string ServiceType;
        /// <summary>
        /// A mapping of tags assigned to the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, object> Tags;
        /// <summary>
        /// Whether or not the service supports endpoint policies - `true` or `false`.
        /// </summary>
        public readonly bool VpcEndpointPolicySupported;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetVpcEndpointServiceResult(
            bool acceptanceRequired,
            ImmutableArray<string> availabilityZones,
            ImmutableArray<string> baseEndpointDnsNames,
            bool managesVpcEndpoints,
            string owner,
            string privateDnsName,
            string? service,
            string serviceId,
            string serviceName,
            string serviceType,
            ImmutableDictionary<string, object> tags,
            bool vpcEndpointPolicySupported,
            string id)
        {
            AcceptanceRequired = acceptanceRequired;
            AvailabilityZones = availabilityZones;
            BaseEndpointDnsNames = baseEndpointDnsNames;
            ManagesVpcEndpoints = managesVpcEndpoints;
            Owner = owner;
            PrivateDnsName = privateDnsName;
            Service = service;
            ServiceId = serviceId;
            ServiceName = serviceName;
            ServiceType = serviceType;
            Tags = tags;
            VpcEndpointPolicySupported = vpcEndpointPolicySupported;
            Id = id;
        }
    }
}
