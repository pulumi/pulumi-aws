// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2
{
    public static class GetVpcIamPoolCidrs
    {
        public static Task<GetVpcIamPoolCidrsResult> InvokeAsync(GetVpcIamPoolCidrsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVpcIamPoolCidrsResult>("aws:ec2/getVpcIamPoolCidrs:getVpcIamPoolCidrs", args ?? new GetVpcIamPoolCidrsArgs(), options.WithDefaults());

        public static Output<GetVpcIamPoolCidrsResult> Invoke(GetVpcIamPoolCidrsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVpcIamPoolCidrsResult>("aws:ec2/getVpcIamPoolCidrs:getVpcIamPoolCidrs", args ?? new GetVpcIamPoolCidrsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVpcIamPoolCidrsArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetVpcIamPoolCidrsFilterArgs>? _filters;
        public List<Inputs.GetVpcIamPoolCidrsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetVpcIamPoolCidrsFilterArgs>());
            set => _filters = value;
        }

        [Input("ipamPoolId", required: true)]
        public string IpamPoolId { get; set; } = null!;

        public GetVpcIamPoolCidrsArgs()
        {
        }
        public static new GetVpcIamPoolCidrsArgs Empty => new GetVpcIamPoolCidrsArgs();
    }

    public sealed class GetVpcIamPoolCidrsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetVpcIamPoolCidrsFilterInputArgs>? _filters;
        public InputList<Inputs.GetVpcIamPoolCidrsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetVpcIamPoolCidrsFilterInputArgs>());
            set => _filters = value;
        }

        [Input("ipamPoolId", required: true)]
        public Input<string> IpamPoolId { get; set; } = null!;

        public GetVpcIamPoolCidrsInvokeArgs()
        {
        }
        public static new GetVpcIamPoolCidrsInvokeArgs Empty => new GetVpcIamPoolCidrsInvokeArgs();
    }


    [OutputType]
    public sealed class GetVpcIamPoolCidrsResult
    {
        public readonly ImmutableArray<Outputs.GetVpcIamPoolCidrsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetVpcIamPoolCidrsIpamPoolCidrResult> IpamPoolCidrs;
        public readonly string IpamPoolId;

        [OutputConstructor]
        private GetVpcIamPoolCidrsResult(
            ImmutableArray<Outputs.GetVpcIamPoolCidrsFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetVpcIamPoolCidrsIpamPoolCidrResult> ipamPoolCidrs,

            string ipamPoolId)
        {
            Filters = filters;
            Id = id;
            IpamPoolCidrs = ipamPoolCidrs;
            IpamPoolId = ipamPoolId;
        }
    }
}
