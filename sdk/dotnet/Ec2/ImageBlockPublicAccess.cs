// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2
{
    /// <summary>
    /// Provides a regional public access block for AMIs. This prevents AMIs from being made publicly accessible.
    /// If you already have public AMIs, they will remain publicly available.
    /// 
    /// &gt; **NOTE:** Deleting this resource does not change the block public access value, the resource in simply removed from state instead.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Prevent making AMIs publicly accessible in the region and account for which the provider is configured
    ///     var test = new Aws.Ec2.ImageBlockPublicAccess("test", new()
    ///     {
    ///         State = "block-new-sharing",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// You cannot import this resource.
    /// </summary>
    [AwsResourceType("aws:ec2/imageBlockPublicAccess:ImageBlockPublicAccess")]
    public partial class ImageBlockPublicAccess : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The state of block public access for AMIs at the account level in the configured AWS Region. Valid values: `unblocked` and `block-new-sharing`.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;


        /// <summary>
        /// Create a ImageBlockPublicAccess resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ImageBlockPublicAccess(string name, ImageBlockPublicAccessArgs args, CustomResourceOptions? options = null)
            : base("aws:ec2/imageBlockPublicAccess:ImageBlockPublicAccess", name, args ?? new ImageBlockPublicAccessArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ImageBlockPublicAccess(string name, Input<string> id, ImageBlockPublicAccessState? state = null, CustomResourceOptions? options = null)
            : base("aws:ec2/imageBlockPublicAccess:ImageBlockPublicAccess", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ImageBlockPublicAccess resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ImageBlockPublicAccess Get(string name, Input<string> id, ImageBlockPublicAccessState? state = null, CustomResourceOptions? options = null)
        {
            return new ImageBlockPublicAccess(name, id, state, options);
        }
    }

    public sealed class ImageBlockPublicAccessArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The state of block public access for AMIs at the account level in the configured AWS Region. Valid values: `unblocked` and `block-new-sharing`.
        /// </summary>
        [Input("state", required: true)]
        public Input<string> State { get; set; } = null!;

        public ImageBlockPublicAccessArgs()
        {
        }
        public static new ImageBlockPublicAccessArgs Empty => new ImageBlockPublicAccessArgs();
    }

    public sealed class ImageBlockPublicAccessState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The state of block public access for AMIs at the account level in the configured AWS Region. Valid values: `unblocked` and `block-new-sharing`.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public ImageBlockPublicAccessState()
        {
        }
        public static new ImageBlockPublicAccessState Empty => new ImageBlockPublicAccessState();
    }
}
