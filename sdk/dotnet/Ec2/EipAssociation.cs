// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2
{
    [AwsResourceType("aws:ec2/eipAssociation:EipAssociation")]
    public partial class EipAssociation : global::Pulumi.CustomResource
    {
        [Output("allocationId")]
        public Output<string> AllocationId { get; private set; } = null!;

        [Output("allowReassociation")]
        public Output<bool?> AllowReassociation { get; private set; } = null!;

        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        [Output("networkInterfaceId")]
        public Output<string> NetworkInterfaceId { get; private set; } = null!;

        [Output("privateIpAddress")]
        public Output<string> PrivateIpAddress { get; private set; } = null!;

        [Output("publicIp")]
        public Output<string> PublicIp { get; private set; } = null!;


        /// <summary>
        /// Create a EipAssociation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EipAssociation(string name, EipAssociationArgs? args = null, CustomResourceOptions? options = null)
            : base("aws:ec2/eipAssociation:EipAssociation", name, args ?? new EipAssociationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EipAssociation(string name, Input<string> id, EipAssociationState? state = null, CustomResourceOptions? options = null)
            : base("aws:ec2/eipAssociation:EipAssociation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EipAssociation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EipAssociation Get(string name, Input<string> id, EipAssociationState? state = null, CustomResourceOptions? options = null)
        {
            return new EipAssociation(name, id, state, options);
        }
    }

    public sealed class EipAssociationArgs : global::Pulumi.ResourceArgs
    {
        [Input("allocationId")]
        public Input<string>? AllocationId { get; set; }

        [Input("allowReassociation")]
        public Input<bool>? AllowReassociation { get; set; }

        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        [Input("networkInterfaceId")]
        public Input<string>? NetworkInterfaceId { get; set; }

        [Input("privateIpAddress")]
        public Input<string>? PrivateIpAddress { get; set; }

        [Input("publicIp")]
        public Input<string>? PublicIp { get; set; }

        public EipAssociationArgs()
        {
        }
        public static new EipAssociationArgs Empty => new EipAssociationArgs();
    }

    public sealed class EipAssociationState : global::Pulumi.ResourceArgs
    {
        [Input("allocationId")]
        public Input<string>? AllocationId { get; set; }

        [Input("allowReassociation")]
        public Input<bool>? AllowReassociation { get; set; }

        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        [Input("networkInterfaceId")]
        public Input<string>? NetworkInterfaceId { get; set; }

        [Input("privateIpAddress")]
        public Input<string>? PrivateIpAddress { get; set; }

        [Input("publicIp")]
        public Input<string>? PublicIp { get; set; }

        public EipAssociationState()
        {
        }
        public static new EipAssociationState Empty => new EipAssociationState();
    }
}
