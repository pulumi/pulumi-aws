// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2
{
    /// <summary>
    /// Creates a scope for AWS IPAM.
    /// 
    /// ## Example Usage
    /// 
    /// Basic usage:
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var current = Aws.GetRegion.Invoke();
    /// 
    ///     var exampleVpcIpam = new Aws.Ec2.VpcIpam("exampleVpcIpam", new()
    ///     {
    ///         OperatingRegions = new[]
    ///         {
    ///             new Aws.Ec2.Inputs.VpcIpamOperatingRegionArgs
    ///             {
    ///                 RegionName = current.Apply(getRegionResult =&gt; getRegionResult.Name),
    ///             },
    ///         },
    ///     });
    /// 
    ///     var exampleVpcIpamScope = new Aws.Ec2.VpcIpamScope("exampleVpcIpamScope", new()
    ///     {
    ///         IpamId = exampleVpcIpam.Id,
    ///         Description = "Another Scope",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// IPAMs can be imported using the `scope_id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import aws:ec2/vpcIpamScope:VpcIpamScope example ipam-scope-0513c69f283d11dfb
    /// ```
    /// </summary>
    [AwsResourceType("aws:ec2/vpcIpamScope:VpcIpamScope")]
    public partial class VpcIpamScope : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the scope.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// A description for the scope you're creating.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The ARN of the IPAM for which you're creating this scope.
        /// </summary>
        [Output("ipamArn")]
        public Output<string> IpamArn { get; private set; } = null!;

        /// <summary>
        /// The ID of the IPAM for which you're creating this scope.
        /// </summary>
        [Output("ipamId")]
        public Output<string> IpamId { get; private set; } = null!;

        [Output("ipamScopeType")]
        public Output<string> IpamScopeType { get; private set; } = null!;

        /// <summary>
        /// Defines if the scope is the default scope or not.
        /// </summary>
        [Output("isDefault")]
        public Output<bool> IsDefault { get; private set; } = null!;

        /// <summary>
        /// The number of pools in the scope.
        /// </summary>
        [Output("poolCount")]
        public Output<int> PoolCount { get; private set; } = null!;

        /// <summary>
        /// Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;


        /// <summary>
        /// Create a VpcIpamScope resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VpcIpamScope(string name, VpcIpamScopeArgs args, CustomResourceOptions? options = null)
            : base("aws:ec2/vpcIpamScope:VpcIpamScope", name, args ?? new VpcIpamScopeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VpcIpamScope(string name, Input<string> id, VpcIpamScopeState? state = null, CustomResourceOptions? options = null)
            : base("aws:ec2/vpcIpamScope:VpcIpamScope", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VpcIpamScope resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VpcIpamScope Get(string name, Input<string> id, VpcIpamScopeState? state = null, CustomResourceOptions? options = null)
        {
            return new VpcIpamScope(name, id, state, options);
        }
    }

    public sealed class VpcIpamScopeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A description for the scope you're creating.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The ID of the IPAM for which you're creating this scope.
        /// </summary>
        [Input("ipamId", required: true)]
        public Input<string> IpamId { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        public VpcIpamScopeArgs()
        {
        }
        public static new VpcIpamScopeArgs Empty => new VpcIpamScopeArgs();
    }

    public sealed class VpcIpamScopeState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the scope.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// A description for the scope you're creating.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The ARN of the IPAM for which you're creating this scope.
        /// </summary>
        [Input("ipamArn")]
        public Input<string>? IpamArn { get; set; }

        /// <summary>
        /// The ID of the IPAM for which you're creating this scope.
        /// </summary>
        [Input("ipamId")]
        public Input<string>? IpamId { get; set; }

        [Input("ipamScopeType")]
        public Input<string>? IpamScopeType { get; set; }

        /// <summary>
        /// Defines if the scope is the default scope or not.
        /// </summary>
        [Input("isDefault")]
        public Input<bool>? IsDefault { get; set; }

        /// <summary>
        /// The number of pools in the scope.
        /// </summary>
        [Input("poolCount")]
        public Input<int>? PoolCount { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        public VpcIpamScopeState()
        {
        }
        public static new VpcIpamScopeState Empty => new VpcIpamScopeState();
    }
}
