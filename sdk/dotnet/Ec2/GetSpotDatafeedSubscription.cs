// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2
{
    public static class GetSpotDatafeedSubscription
    {
        /// <summary>
        /// &gt; There is only a single spot data feed subscription per account.
        /// 
        /// Data source for accessing an AWS EC2 (Elastic Compute Cloud) spot data feed subscription.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Aws.Ec2.GetSpotDatafeedSubscription.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSpotDatafeedSubscriptionResult> InvokeAsync(GetSpotDatafeedSubscriptionArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSpotDatafeedSubscriptionResult>("aws:ec2/getSpotDatafeedSubscription:getSpotDatafeedSubscription", args ?? new GetSpotDatafeedSubscriptionArgs(), options.WithDefaults());

        /// <summary>
        /// &gt; There is only a single spot data feed subscription per account.
        /// 
        /// Data source for accessing an AWS EC2 (Elastic Compute Cloud) spot data feed subscription.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Aws.Ec2.GetSpotDatafeedSubscription.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSpotDatafeedSubscriptionResult> Invoke(GetSpotDatafeedSubscriptionInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSpotDatafeedSubscriptionResult>("aws:ec2/getSpotDatafeedSubscription:getSpotDatafeedSubscription", args ?? new GetSpotDatafeedSubscriptionInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// &gt; There is only a single spot data feed subscription per account.
        /// 
        /// Data source for accessing an AWS EC2 (Elastic Compute Cloud) spot data feed subscription.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Aws.Ec2.GetSpotDatafeedSubscription.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSpotDatafeedSubscriptionResult> Invoke(GetSpotDatafeedSubscriptionInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSpotDatafeedSubscriptionResult>("aws:ec2/getSpotDatafeedSubscription:getSpotDatafeedSubscription", args ?? new GetSpotDatafeedSubscriptionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSpotDatafeedSubscriptionArgs : global::Pulumi.InvokeArgs
    {
        [Input("region")]
        public string? Region { get; set; }

        public GetSpotDatafeedSubscriptionArgs()
        {
        }
        public static new GetSpotDatafeedSubscriptionArgs Empty => new GetSpotDatafeedSubscriptionArgs();
    }

    public sealed class GetSpotDatafeedSubscriptionInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("region")]
        public Input<string>? Region { get; set; }

        public GetSpotDatafeedSubscriptionInvokeArgs()
        {
        }
        public static new GetSpotDatafeedSubscriptionInvokeArgs Empty => new GetSpotDatafeedSubscriptionInvokeArgs();
    }


    [OutputType]
    public sealed class GetSpotDatafeedSubscriptionResult
    {
        /// <summary>
        /// The name of the Amazon S3 bucket where the spot instance data feed is located.
        /// </summary>
        public readonly string Bucket;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The prefix for the data feed files.
        /// </summary>
        public readonly string Prefix;
        public readonly string Region;

        [OutputConstructor]
        private GetSpotDatafeedSubscriptionResult(
            string bucket,

            string id,

            string prefix,

            string region)
        {
            Bucket = bucket;
            Id = id;
            Prefix = prefix;
            Region = region;
        }
    }
}
