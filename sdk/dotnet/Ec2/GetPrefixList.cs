// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2
{
    public static class GetPrefixList
    {
        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var privateS3VpcEndpoint = new Aws.Ec2.VpcEndpoint("privateS3VpcEndpoint", new()
        ///     {
        ///         VpcId = aws_vpc.Foo.Id,
        ///         ServiceName = "com.amazonaws.us-west-2.s3",
        ///     });
        /// 
        ///     var privateS3PrefixList = Aws.Ec2.GetPrefixList.Invoke(new()
        ///     {
        ///         PrefixListId = privateS3VpcEndpoint.PrefixListId,
        ///     });
        /// 
        ///     var bar = new Aws.Ec2.NetworkAcl("bar", new()
        ///     {
        ///         VpcId = aws_vpc.Foo.Id,
        ///     });
        /// 
        ///     var privateS3NetworkAclRule = new Aws.Ec2.NetworkAclRule("privateS3NetworkAclRule", new()
        ///     {
        ///         NetworkAclId = bar.Id,
        ///         RuleNumber = 200,
        ///         Egress = false,
        ///         Protocol = "tcp",
        ///         RuleAction = "allow",
        ///         CidrBlock = privateS3PrefixList.Apply(getPrefixListResult =&gt; getPrefixListResult.CidrBlocks[0]),
        ///         FromPort = 443,
        ///         ToPort = 443,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% example %}}
        /// ### Filter
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.Ec2.GetPrefixList.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Aws.Ec2.Inputs.GetPrefixListFilterInputArgs
        ///             {
        ///                 Name = "prefix-list-id",
        ///                 Values = new[]
        ///                 {
        ///                     "pl-68a54001",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetPrefixListResult> InvokeAsync(GetPrefixListArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetPrefixListResult>("aws:ec2/getPrefixList:getPrefixList", args ?? new GetPrefixListArgs(), options.WithDefaults());

        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var privateS3VpcEndpoint = new Aws.Ec2.VpcEndpoint("privateS3VpcEndpoint", new()
        ///     {
        ///         VpcId = aws_vpc.Foo.Id,
        ///         ServiceName = "com.amazonaws.us-west-2.s3",
        ///     });
        /// 
        ///     var privateS3PrefixList = Aws.Ec2.GetPrefixList.Invoke(new()
        ///     {
        ///         PrefixListId = privateS3VpcEndpoint.PrefixListId,
        ///     });
        /// 
        ///     var bar = new Aws.Ec2.NetworkAcl("bar", new()
        ///     {
        ///         VpcId = aws_vpc.Foo.Id,
        ///     });
        /// 
        ///     var privateS3NetworkAclRule = new Aws.Ec2.NetworkAclRule("privateS3NetworkAclRule", new()
        ///     {
        ///         NetworkAclId = bar.Id,
        ///         RuleNumber = 200,
        ///         Egress = false,
        ///         Protocol = "tcp",
        ///         RuleAction = "allow",
        ///         CidrBlock = privateS3PrefixList.Apply(getPrefixListResult =&gt; getPrefixListResult.CidrBlocks[0]),
        ///         FromPort = 443,
        ///         ToPort = 443,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% example %}}
        /// ### Filter
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.Ec2.GetPrefixList.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Aws.Ec2.Inputs.GetPrefixListFilterInputArgs
        ///             {
        ///                 Name = "prefix-list-id",
        ///                 Values = new[]
        ///                 {
        ///                     "pl-68a54001",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetPrefixListResult> Invoke(GetPrefixListInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetPrefixListResult>("aws:ec2/getPrefixList:getPrefixList", args ?? new GetPrefixListInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPrefixListArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetPrefixListFilterArgs>? _filters;

        /// <summary>
        /// Configuration block(s) for filtering. Detailed below.
        /// </summary>
        public List<Inputs.GetPrefixListFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetPrefixListFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Name of the filter field. Valid values can be found in the [EC2 DescribePrefixLists API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribePrefixLists.html).
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// ID of the prefix list to select.
        /// </summary>
        [Input("prefixListId")]
        public string? PrefixListId { get; set; }

        public GetPrefixListArgs()
        {
        }
        public static new GetPrefixListArgs Empty => new GetPrefixListArgs();
    }

    public sealed class GetPrefixListInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetPrefixListFilterInputArgs>? _filters;

        /// <summary>
        /// Configuration block(s) for filtering. Detailed below.
        /// </summary>
        public InputList<Inputs.GetPrefixListFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetPrefixListFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Name of the filter field. Valid values can be found in the [EC2 DescribePrefixLists API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribePrefixLists.html).
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// ID of the prefix list to select.
        /// </summary>
        [Input("prefixListId")]
        public Input<string>? PrefixListId { get; set; }

        public GetPrefixListInvokeArgs()
        {
        }
        public static new GetPrefixListInvokeArgs Empty => new GetPrefixListInvokeArgs();
    }


    [OutputType]
    public sealed class GetPrefixListResult
    {
        /// <summary>
        /// List of CIDR blocks for the AWS service associated with the prefix list.
        /// </summary>
        public readonly ImmutableArray<string> CidrBlocks;
        public readonly ImmutableArray<Outputs.GetPrefixListFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Name of the selected prefix list.
        /// </summary>
        public readonly string Name;
        public readonly string? PrefixListId;

        [OutputConstructor]
        private GetPrefixListResult(
            ImmutableArray<string> cidrBlocks,

            ImmutableArray<Outputs.GetPrefixListFilterResult> filters,

            string id,

            string name,

            string? prefixListId)
        {
            CidrBlocks = cidrBlocks;
            Filters = filters;
            Id = id;
            Name = name;
            PrefixListId = prefixListId;
        }
    }
}
