// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2
{
    public static class GetCoipPools
    {
        /// <summary>
        /// Provides information for multiple EC2 Customer-Owned IP Pools, such as their identifiers.
        /// </summary>
        public static Task<GetCoipPoolsResult> InvokeAsync(GetCoipPoolsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCoipPoolsResult>("aws:ec2/getCoipPools:getCoipPools", args ?? new GetCoipPoolsArgs(), options.WithDefaults());

        /// <summary>
        /// Provides information for multiple EC2 Customer-Owned IP Pools, such as their identifiers.
        /// </summary>
        public static Output<GetCoipPoolsResult> Invoke(GetCoipPoolsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCoipPoolsResult>("aws:ec2/getCoipPools:getCoipPools", args ?? new GetCoipPoolsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCoipPoolsArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetCoipPoolsFilterArgs>? _filters;

        /// <summary>
        /// Custom filter block as described below.
        /// </summary>
        public List<Inputs.GetCoipPoolsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetCoipPoolsFilterArgs>());
            set => _filters = value;
        }

        [Input("tags")]
        private Dictionary<string, string>? _tags;

        /// <summary>
        /// Mapping of tags, each pair of which must exactly match
        /// a pair on the desired aws_ec2_coip_pools.
        /// </summary>
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetCoipPoolsArgs()
        {
        }
        public static new GetCoipPoolsArgs Empty => new GetCoipPoolsArgs();
    }

    public sealed class GetCoipPoolsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetCoipPoolsFilterInputArgs>? _filters;

        /// <summary>
        /// Custom filter block as described below.
        /// </summary>
        public InputList<Inputs.GetCoipPoolsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetCoipPoolsFilterInputArgs>());
            set => _filters = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Mapping of tags, each pair of which must exactly match
        /// a pair on the desired aws_ec2_coip_pools.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetCoipPoolsInvokeArgs()
        {
        }
        public static new GetCoipPoolsInvokeArgs Empty => new GetCoipPoolsInvokeArgs();
    }


    [OutputType]
    public sealed class GetCoipPoolsResult
    {
        public readonly ImmutableArray<Outputs.GetCoipPoolsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Set of COIP Pool Identifiers
        /// </summary>
        public readonly ImmutableArray<string> PoolIds;
        public readonly ImmutableDictionary<string, string> Tags;

        [OutputConstructor]
        private GetCoipPoolsResult(
            ImmutableArray<Outputs.GetCoipPoolsFilterResult> filters,

            string id,

            ImmutableArray<string> poolIds,

            ImmutableDictionary<string, string> tags)
        {
            Filters = filters;
            Id = id;
            PoolIds = poolIds;
            Tags = tags;
        }
    }
}
