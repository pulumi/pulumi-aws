// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2
{
    /// <summary>
    /// Provides an network ACL association resource which allows you to associate your network ACL with any subnet(s).
    /// 
    /// &gt; **NOTE on Network ACLs and Network ACL Associations:** the provider provides both a standalone network ACL association resource
    /// and a network ACL resource with a `subnet_ids` attribute. Do not use the same subnet ID in both a network ACL
    /// resource and a network ACL association resource. Doing so will cause a conflict of associations and will overwrite the association.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var main = new Aws.Ec2.NetworkAclAssociation("main", new()
    ///     {
    ///         NetworkAclId = aws_network_acl.Main.Id,
    ///         SubnetId = aws_subnet.Main.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [AwsResourceType("aws:ec2/networkAclAssociation:NetworkAclAssociation")]
    public partial class NetworkAclAssociation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the network ACL.
        /// </summary>
        [Output("networkAclId")]
        public Output<string> NetworkAclId { get; private set; } = null!;

        /// <summary>
        /// The ID of the associated Subnet.
        /// </summary>
        [Output("subnetId")]
        public Output<string> SubnetId { get; private set; } = null!;


        /// <summary>
        /// Create a NetworkAclAssociation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NetworkAclAssociation(string name, NetworkAclAssociationArgs args, CustomResourceOptions? options = null)
            : base("aws:ec2/networkAclAssociation:NetworkAclAssociation", name, args ?? new NetworkAclAssociationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NetworkAclAssociation(string name, Input<string> id, NetworkAclAssociationState? state = null, CustomResourceOptions? options = null)
            : base("aws:ec2/networkAclAssociation:NetworkAclAssociation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NetworkAclAssociation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NetworkAclAssociation Get(string name, Input<string> id, NetworkAclAssociationState? state = null, CustomResourceOptions? options = null)
        {
            return new NetworkAclAssociation(name, id, state, options);
        }
    }

    public sealed class NetworkAclAssociationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the network ACL.
        /// </summary>
        [Input("networkAclId", required: true)]
        public Input<string> NetworkAclId { get; set; } = null!;

        /// <summary>
        /// The ID of the associated Subnet.
        /// </summary>
        [Input("subnetId", required: true)]
        public Input<string> SubnetId { get; set; } = null!;

        public NetworkAclAssociationArgs()
        {
        }
        public static new NetworkAclAssociationArgs Empty => new NetworkAclAssociationArgs();
    }

    public sealed class NetworkAclAssociationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the network ACL.
        /// </summary>
        [Input("networkAclId")]
        public Input<string>? NetworkAclId { get; set; }

        /// <summary>
        /// The ID of the associated Subnet.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        public NetworkAclAssociationState()
        {
        }
        public static new NetworkAclAssociationState Empty => new NetworkAclAssociationState();
    }
}
