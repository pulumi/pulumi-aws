// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2
{
    public static class GetCoipPool
    {
        public static Task<GetCoipPoolResult> InvokeAsync(GetCoipPoolArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCoipPoolResult>("aws:ec2/getCoipPool:getCoipPool", args ?? new GetCoipPoolArgs(), options.WithDefaults());

        public static Output<GetCoipPoolResult> Invoke(GetCoipPoolInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCoipPoolResult>("aws:ec2/getCoipPool:getCoipPool", args ?? new GetCoipPoolInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCoipPoolArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetCoipPoolFilterArgs>? _filters;
        public List<Inputs.GetCoipPoolFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetCoipPoolFilterArgs>());
            set => _filters = value;
        }

        [Input("localGatewayRouteTableId")]
        public string? LocalGatewayRouteTableId { get; set; }

        [Input("poolId")]
        public string? PoolId { get; set; }

        [Input("tags")]
        private Dictionary<string, string>? _tags;
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetCoipPoolArgs()
        {
        }
        public static new GetCoipPoolArgs Empty => new GetCoipPoolArgs();
    }

    public sealed class GetCoipPoolInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetCoipPoolFilterInputArgs>? _filters;
        public InputList<Inputs.GetCoipPoolFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetCoipPoolFilterInputArgs>());
            set => _filters = value;
        }

        [Input("localGatewayRouteTableId")]
        public Input<string>? LocalGatewayRouteTableId { get; set; }

        [Input("poolId")]
        public Input<string>? PoolId { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetCoipPoolInvokeArgs()
        {
        }
        public static new GetCoipPoolInvokeArgs Empty => new GetCoipPoolInvokeArgs();
    }


    [OutputType]
    public sealed class GetCoipPoolResult
    {
        public readonly string Arn;
        public readonly ImmutableArray<Outputs.GetCoipPoolFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string LocalGatewayRouteTableId;
        public readonly ImmutableArray<string> PoolCidrs;
        public readonly string PoolId;
        public readonly ImmutableDictionary<string, string> Tags;

        [OutputConstructor]
        private GetCoipPoolResult(
            string arn,

            ImmutableArray<Outputs.GetCoipPoolFilterResult> filters,

            string id,

            string localGatewayRouteTableId,

            ImmutableArray<string> poolCidrs,

            string poolId,

            ImmutableDictionary<string, string> tags)
        {
            Arn = arn;
            Filters = filters;
            Id = id;
            LocalGatewayRouteTableId = localGatewayRouteTableId;
            PoolCidrs = poolCidrs;
            PoolId = poolId;
            Tags = tags;
        }
    }
}
