// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2
{
    [AwsResourceType("aws:ec2/networkInsightsAnalysis:NetworkInsightsAnalysis")]
    public partial class NetworkInsightsAnalysis : global::Pulumi.CustomResource
    {
        [Output("alternatePathHints")]
        public Output<ImmutableArray<Outputs.NetworkInsightsAnalysisAlternatePathHint>> AlternatePathHints { get; private set; } = null!;

        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("explanations")]
        public Output<ImmutableArray<Outputs.NetworkInsightsAnalysisExplanation>> Explanations { get; private set; } = null!;

        [Output("filterInArns")]
        public Output<ImmutableArray<string>> FilterInArns { get; private set; } = null!;

        [Output("forwardPathComponents")]
        public Output<ImmutableArray<Outputs.NetworkInsightsAnalysisForwardPathComponent>> ForwardPathComponents { get; private set; } = null!;

        [Output("networkInsightsPathId")]
        public Output<string> NetworkInsightsPathId { get; private set; } = null!;

        [Output("pathFound")]
        public Output<bool> PathFound { get; private set; } = null!;

        [Output("returnPathComponents")]
        public Output<ImmutableArray<Outputs.NetworkInsightsAnalysisReturnPathComponent>> ReturnPathComponents { get; private set; } = null!;

        [Output("startDate")]
        public Output<string> StartDate { get; private set; } = null!;

        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        [Output("statusMessage")]
        public Output<string> StatusMessage { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("waitForCompletion")]
        public Output<bool?> WaitForCompletion { get; private set; } = null!;

        [Output("warningMessage")]
        public Output<string> WarningMessage { get; private set; } = null!;


        /// <summary>
        /// Create a NetworkInsightsAnalysis resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NetworkInsightsAnalysis(string name, NetworkInsightsAnalysisArgs args, CustomResourceOptions? options = null)
            : base("aws:ec2/networkInsightsAnalysis:NetworkInsightsAnalysis", name, args ?? new NetworkInsightsAnalysisArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NetworkInsightsAnalysis(string name, Input<string> id, NetworkInsightsAnalysisState? state = null, CustomResourceOptions? options = null)
            : base("aws:ec2/networkInsightsAnalysis:NetworkInsightsAnalysis", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NetworkInsightsAnalysis resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NetworkInsightsAnalysis Get(string name, Input<string> id, NetworkInsightsAnalysisState? state = null, CustomResourceOptions? options = null)
        {
            return new NetworkInsightsAnalysis(name, id, state, options);
        }
    }

    public sealed class NetworkInsightsAnalysisArgs : global::Pulumi.ResourceArgs
    {
        [Input("filterInArns")]
        private InputList<string>? _filterInArns;
        public InputList<string> FilterInArns
        {
            get => _filterInArns ?? (_filterInArns = new InputList<string>());
            set => _filterInArns = value;
        }

        [Input("networkInsightsPathId", required: true)]
        public Input<string> NetworkInsightsPathId { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("waitForCompletion")]
        public Input<bool>? WaitForCompletion { get; set; }

        public NetworkInsightsAnalysisArgs()
        {
        }
        public static new NetworkInsightsAnalysisArgs Empty => new NetworkInsightsAnalysisArgs();
    }

    public sealed class NetworkInsightsAnalysisState : global::Pulumi.ResourceArgs
    {
        [Input("alternatePathHints")]
        private InputList<Inputs.NetworkInsightsAnalysisAlternatePathHintGetArgs>? _alternatePathHints;
        public InputList<Inputs.NetworkInsightsAnalysisAlternatePathHintGetArgs> AlternatePathHints
        {
            get => _alternatePathHints ?? (_alternatePathHints = new InputList<Inputs.NetworkInsightsAnalysisAlternatePathHintGetArgs>());
            set => _alternatePathHints = value;
        }

        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("explanations")]
        private InputList<Inputs.NetworkInsightsAnalysisExplanationGetArgs>? _explanations;
        public InputList<Inputs.NetworkInsightsAnalysisExplanationGetArgs> Explanations
        {
            get => _explanations ?? (_explanations = new InputList<Inputs.NetworkInsightsAnalysisExplanationGetArgs>());
            set => _explanations = value;
        }

        [Input("filterInArns")]
        private InputList<string>? _filterInArns;
        public InputList<string> FilterInArns
        {
            get => _filterInArns ?? (_filterInArns = new InputList<string>());
            set => _filterInArns = value;
        }

        [Input("forwardPathComponents")]
        private InputList<Inputs.NetworkInsightsAnalysisForwardPathComponentGetArgs>? _forwardPathComponents;
        public InputList<Inputs.NetworkInsightsAnalysisForwardPathComponentGetArgs> ForwardPathComponents
        {
            get => _forwardPathComponents ?? (_forwardPathComponents = new InputList<Inputs.NetworkInsightsAnalysisForwardPathComponentGetArgs>());
            set => _forwardPathComponents = value;
        }

        [Input("networkInsightsPathId")]
        public Input<string>? NetworkInsightsPathId { get; set; }

        [Input("pathFound")]
        public Input<bool>? PathFound { get; set; }

        [Input("returnPathComponents")]
        private InputList<Inputs.NetworkInsightsAnalysisReturnPathComponentGetArgs>? _returnPathComponents;
        public InputList<Inputs.NetworkInsightsAnalysisReturnPathComponentGetArgs> ReturnPathComponents
        {
            get => _returnPathComponents ?? (_returnPathComponents = new InputList<Inputs.NetworkInsightsAnalysisReturnPathComponentGetArgs>());
            set => _returnPathComponents = value;
        }

        [Input("startDate")]
        public Input<string>? StartDate { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("statusMessage")]
        public Input<string>? StatusMessage { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("waitForCompletion")]
        public Input<bool>? WaitForCompletion { get; set; }

        [Input("warningMessage")]
        public Input<string>? WarningMessage { get; set; }

        public NetworkInsightsAnalysisState()
        {
        }
        public static new NetworkInsightsAnalysisState Empty => new NetworkInsightsAnalysisState();
    }
}
