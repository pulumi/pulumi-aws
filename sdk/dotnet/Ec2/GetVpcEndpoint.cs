// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2
{
    public static class GetVpcEndpoint
    {
        public static Task<GetVpcEndpointResult> InvokeAsync(GetVpcEndpointArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVpcEndpointResult>("aws:ec2/getVpcEndpoint:getVpcEndpoint", args ?? new GetVpcEndpointArgs(), options.WithDefaults());

        public static Output<GetVpcEndpointResult> Invoke(GetVpcEndpointInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVpcEndpointResult>("aws:ec2/getVpcEndpoint:getVpcEndpoint", args ?? new GetVpcEndpointInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVpcEndpointArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetVpcEndpointFilterArgs>? _filters;
        public List<Inputs.GetVpcEndpointFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetVpcEndpointFilterArgs>());
            set => _filters = value;
        }

        [Input("id")]
        public string? Id { get; set; }

        [Input("serviceName")]
        public string? ServiceName { get; set; }

        [Input("state")]
        public string? State { get; set; }

        [Input("tags")]
        private Dictionary<string, string>? _tags;
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        [Input("vpcId")]
        public string? VpcId { get; set; }

        public GetVpcEndpointArgs()
        {
        }
        public static new GetVpcEndpointArgs Empty => new GetVpcEndpointArgs();
    }

    public sealed class GetVpcEndpointInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetVpcEndpointFilterInputArgs>? _filters;
        public InputList<Inputs.GetVpcEndpointFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetVpcEndpointFilterInputArgs>());
            set => _filters = value;
        }

        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("serviceName")]
        public Input<string>? ServiceName { get; set; }

        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public GetVpcEndpointInvokeArgs()
        {
        }
        public static new GetVpcEndpointInvokeArgs Empty => new GetVpcEndpointInvokeArgs();
    }


    [OutputType]
    public sealed class GetVpcEndpointResult
    {
        public readonly string Arn;
        public readonly ImmutableArray<string> CidrBlocks;
        public readonly ImmutableArray<Outputs.GetVpcEndpointDnsEntryResult> DnsEntries;
        public readonly ImmutableArray<Outputs.GetVpcEndpointDnsOptionResult> DnsOptions;
        public readonly ImmutableArray<Outputs.GetVpcEndpointFilterResult> Filters;
        public readonly string Id;
        public readonly string IpAddressType;
        public readonly ImmutableArray<string> NetworkInterfaceIds;
        public readonly string OwnerId;
        public readonly string Policy;
        public readonly string PrefixListId;
        public readonly bool PrivateDnsEnabled;
        public readonly bool RequesterManaged;
        public readonly ImmutableArray<string> RouteTableIds;
        public readonly ImmutableArray<string> SecurityGroupIds;
        public readonly string ServiceName;
        public readonly string State;
        public readonly ImmutableArray<string> SubnetIds;
        public readonly ImmutableDictionary<string, string> Tags;
        public readonly string VpcEndpointType;
        public readonly string VpcId;

        [OutputConstructor]
        private GetVpcEndpointResult(
            string arn,

            ImmutableArray<string> cidrBlocks,

            ImmutableArray<Outputs.GetVpcEndpointDnsEntryResult> dnsEntries,

            ImmutableArray<Outputs.GetVpcEndpointDnsOptionResult> dnsOptions,

            ImmutableArray<Outputs.GetVpcEndpointFilterResult> filters,

            string id,

            string ipAddressType,

            ImmutableArray<string> networkInterfaceIds,

            string ownerId,

            string policy,

            string prefixListId,

            bool privateDnsEnabled,

            bool requesterManaged,

            ImmutableArray<string> routeTableIds,

            ImmutableArray<string> securityGroupIds,

            string serviceName,

            string state,

            ImmutableArray<string> subnetIds,

            ImmutableDictionary<string, string> tags,

            string vpcEndpointType,

            string vpcId)
        {
            Arn = arn;
            CidrBlocks = cidrBlocks;
            DnsEntries = dnsEntries;
            DnsOptions = dnsOptions;
            Filters = filters;
            Id = id;
            IpAddressType = ipAddressType;
            NetworkInterfaceIds = networkInterfaceIds;
            OwnerId = ownerId;
            Policy = policy;
            PrefixListId = prefixListId;
            PrivateDnsEnabled = privateDnsEnabled;
            RequesterManaged = requesterManaged;
            RouteTableIds = routeTableIds;
            SecurityGroupIds = securityGroupIds;
            ServiceName = serviceName;
            State = state;
            SubnetIds = subnetIds;
            Tags = tags;
            VpcEndpointType = vpcEndpointType;
            VpcId = vpcId;
        }
    }
}
