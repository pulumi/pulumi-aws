// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2
{
    [AwsResourceType("aws:ec2/launchTemplate:LaunchTemplate")]
    public partial class LaunchTemplate : global::Pulumi.CustomResource
    {
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("blockDeviceMappings")]
        public Output<ImmutableArray<Outputs.LaunchTemplateBlockDeviceMapping>> BlockDeviceMappings { get; private set; } = null!;

        [Output("capacityReservationSpecification")]
        public Output<Outputs.LaunchTemplateCapacityReservationSpecification?> CapacityReservationSpecification { get; private set; } = null!;

        [Output("cpuOptions")]
        public Output<Outputs.LaunchTemplateCpuOptions?> CpuOptions { get; private set; } = null!;

        [Output("creditSpecification")]
        public Output<Outputs.LaunchTemplateCreditSpecification?> CreditSpecification { get; private set; } = null!;

        [Output("defaultVersion")]
        public Output<int> DefaultVersion { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("disableApiStop")]
        public Output<bool?> DisableApiStop { get; private set; } = null!;

        [Output("disableApiTermination")]
        public Output<bool?> DisableApiTermination { get; private set; } = null!;

        [Output("ebsOptimized")]
        public Output<string?> EbsOptimized { get; private set; } = null!;

        [Output("elasticGpuSpecifications")]
        public Output<ImmutableArray<Outputs.LaunchTemplateElasticGpuSpecification>> ElasticGpuSpecifications { get; private set; } = null!;

        [Output("elasticInferenceAccelerator")]
        public Output<Outputs.LaunchTemplateElasticInferenceAccelerator?> ElasticInferenceAccelerator { get; private set; } = null!;

        [Output("enclaveOptions")]
        public Output<Outputs.LaunchTemplateEnclaveOptions?> EnclaveOptions { get; private set; } = null!;

        [Output("hibernationOptions")]
        public Output<Outputs.LaunchTemplateHibernationOptions?> HibernationOptions { get; private set; } = null!;

        [Output("iamInstanceProfile")]
        public Output<Outputs.LaunchTemplateIamInstanceProfile?> IamInstanceProfile { get; private set; } = null!;

        [Output("imageId")]
        public Output<string?> ImageId { get; private set; } = null!;

        [Output("instanceInitiatedShutdownBehavior")]
        public Output<string?> InstanceInitiatedShutdownBehavior { get; private set; } = null!;

        [Output("instanceMarketOptions")]
        public Output<Outputs.LaunchTemplateInstanceMarketOptions?> InstanceMarketOptions { get; private set; } = null!;

        [Output("instanceRequirements")]
        public Output<Outputs.LaunchTemplateInstanceRequirements?> InstanceRequirements { get; private set; } = null!;

        [Output("instanceType")]
        public Output<string?> InstanceType { get; private set; } = null!;

        [Output("kernelId")]
        public Output<string?> KernelId { get; private set; } = null!;

        [Output("keyName")]
        public Output<string?> KeyName { get; private set; } = null!;

        [Output("latestVersion")]
        public Output<int> LatestVersion { get; private set; } = null!;

        [Output("licenseSpecifications")]
        public Output<ImmutableArray<Outputs.LaunchTemplateLicenseSpecification>> LicenseSpecifications { get; private set; } = null!;

        [Output("maintenanceOptions")]
        public Output<Outputs.LaunchTemplateMaintenanceOptions?> MaintenanceOptions { get; private set; } = null!;

        [Output("metadataOptions")]
        public Output<Outputs.LaunchTemplateMetadataOptions> MetadataOptions { get; private set; } = null!;

        [Output("monitoring")]
        public Output<Outputs.LaunchTemplateMonitoring?> Monitoring { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("namePrefix")]
        public Output<string> NamePrefix { get; private set; } = null!;

        [Output("networkInterfaces")]
        public Output<ImmutableArray<Outputs.LaunchTemplateNetworkInterface>> NetworkInterfaces { get; private set; } = null!;

        [Output("placement")]
        public Output<Outputs.LaunchTemplatePlacement?> Placement { get; private set; } = null!;

        [Output("privateDnsNameOptions")]
        public Output<Outputs.LaunchTemplatePrivateDnsNameOptions?> PrivateDnsNameOptions { get; private set; } = null!;

        [Output("ramDiskId")]
        public Output<string?> RamDiskId { get; private set; } = null!;

        [Output("securityGroupNames")]
        public Output<ImmutableArray<string>> SecurityGroupNames { get; private set; } = null!;

        [Output("tagSpecifications")]
        public Output<ImmutableArray<Outputs.LaunchTemplateTagSpecification>> TagSpecifications { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("updateDefaultVersion")]
        public Output<bool?> UpdateDefaultVersion { get; private set; } = null!;

        [Output("userData")]
        public Output<string?> UserData { get; private set; } = null!;

        [Output("vpcSecurityGroupIds")]
        public Output<ImmutableArray<string>> VpcSecurityGroupIds { get; private set; } = null!;


        /// <summary>
        /// Create a LaunchTemplate resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LaunchTemplate(string name, LaunchTemplateArgs? args = null, CustomResourceOptions? options = null)
            : base("aws:ec2/launchTemplate:LaunchTemplate", name, args ?? new LaunchTemplateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LaunchTemplate(string name, Input<string> id, LaunchTemplateState? state = null, CustomResourceOptions? options = null)
            : base("aws:ec2/launchTemplate:LaunchTemplate", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LaunchTemplate resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LaunchTemplate Get(string name, Input<string> id, LaunchTemplateState? state = null, CustomResourceOptions? options = null)
        {
            return new LaunchTemplate(name, id, state, options);
        }
    }

    public sealed class LaunchTemplateArgs : global::Pulumi.ResourceArgs
    {
        [Input("blockDeviceMappings")]
        private InputList<Inputs.LaunchTemplateBlockDeviceMappingArgs>? _blockDeviceMappings;
        public InputList<Inputs.LaunchTemplateBlockDeviceMappingArgs> BlockDeviceMappings
        {
            get => _blockDeviceMappings ?? (_blockDeviceMappings = new InputList<Inputs.LaunchTemplateBlockDeviceMappingArgs>());
            set => _blockDeviceMappings = value;
        }

        [Input("capacityReservationSpecification")]
        public Input<Inputs.LaunchTemplateCapacityReservationSpecificationArgs>? CapacityReservationSpecification { get; set; }

        [Input("cpuOptions")]
        public Input<Inputs.LaunchTemplateCpuOptionsArgs>? CpuOptions { get; set; }

        [Input("creditSpecification")]
        public Input<Inputs.LaunchTemplateCreditSpecificationArgs>? CreditSpecification { get; set; }

        [Input("defaultVersion")]
        public Input<int>? DefaultVersion { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("disableApiStop")]
        public Input<bool>? DisableApiStop { get; set; }

        [Input("disableApiTermination")]
        public Input<bool>? DisableApiTermination { get; set; }

        [Input("ebsOptimized")]
        public Input<string>? EbsOptimized { get; set; }

        [Input("elasticGpuSpecifications")]
        private InputList<Inputs.LaunchTemplateElasticGpuSpecificationArgs>? _elasticGpuSpecifications;
        public InputList<Inputs.LaunchTemplateElasticGpuSpecificationArgs> ElasticGpuSpecifications
        {
            get => _elasticGpuSpecifications ?? (_elasticGpuSpecifications = new InputList<Inputs.LaunchTemplateElasticGpuSpecificationArgs>());
            set => _elasticGpuSpecifications = value;
        }

        [Input("elasticInferenceAccelerator")]
        public Input<Inputs.LaunchTemplateElasticInferenceAcceleratorArgs>? ElasticInferenceAccelerator { get; set; }

        [Input("enclaveOptions")]
        public Input<Inputs.LaunchTemplateEnclaveOptionsArgs>? EnclaveOptions { get; set; }

        [Input("hibernationOptions")]
        public Input<Inputs.LaunchTemplateHibernationOptionsArgs>? HibernationOptions { get; set; }

        [Input("iamInstanceProfile")]
        public Input<Inputs.LaunchTemplateIamInstanceProfileArgs>? IamInstanceProfile { get; set; }

        [Input("imageId")]
        public Input<string>? ImageId { get; set; }

        [Input("instanceInitiatedShutdownBehavior")]
        public Input<string>? InstanceInitiatedShutdownBehavior { get; set; }

        [Input("instanceMarketOptions")]
        public Input<Inputs.LaunchTemplateInstanceMarketOptionsArgs>? InstanceMarketOptions { get; set; }

        [Input("instanceRequirements")]
        public Input<Inputs.LaunchTemplateInstanceRequirementsArgs>? InstanceRequirements { get; set; }

        [Input("instanceType")]
        public Input<string>? InstanceType { get; set; }

        [Input("kernelId")]
        public Input<string>? KernelId { get; set; }

        [Input("keyName")]
        public Input<string>? KeyName { get; set; }

        [Input("licenseSpecifications")]
        private InputList<Inputs.LaunchTemplateLicenseSpecificationArgs>? _licenseSpecifications;
        public InputList<Inputs.LaunchTemplateLicenseSpecificationArgs> LicenseSpecifications
        {
            get => _licenseSpecifications ?? (_licenseSpecifications = new InputList<Inputs.LaunchTemplateLicenseSpecificationArgs>());
            set => _licenseSpecifications = value;
        }

        [Input("maintenanceOptions")]
        public Input<Inputs.LaunchTemplateMaintenanceOptionsArgs>? MaintenanceOptions { get; set; }

        [Input("metadataOptions")]
        public Input<Inputs.LaunchTemplateMetadataOptionsArgs>? MetadataOptions { get; set; }

        [Input("monitoring")]
        public Input<Inputs.LaunchTemplateMonitoringArgs>? Monitoring { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("namePrefix")]
        public Input<string>? NamePrefix { get; set; }

        [Input("networkInterfaces")]
        private InputList<Inputs.LaunchTemplateNetworkInterfaceArgs>? _networkInterfaces;
        public InputList<Inputs.LaunchTemplateNetworkInterfaceArgs> NetworkInterfaces
        {
            get => _networkInterfaces ?? (_networkInterfaces = new InputList<Inputs.LaunchTemplateNetworkInterfaceArgs>());
            set => _networkInterfaces = value;
        }

        [Input("placement")]
        public Input<Inputs.LaunchTemplatePlacementArgs>? Placement { get; set; }

        [Input("privateDnsNameOptions")]
        public Input<Inputs.LaunchTemplatePrivateDnsNameOptionsArgs>? PrivateDnsNameOptions { get; set; }

        [Input("ramDiskId")]
        public Input<string>? RamDiskId { get; set; }

        [Input("securityGroupNames")]
        private InputList<string>? _securityGroupNames;
        public InputList<string> SecurityGroupNames
        {
            get => _securityGroupNames ?? (_securityGroupNames = new InputList<string>());
            set => _securityGroupNames = value;
        }

        [Input("tagSpecifications")]
        private InputList<Inputs.LaunchTemplateTagSpecificationArgs>? _tagSpecifications;
        public InputList<Inputs.LaunchTemplateTagSpecificationArgs> TagSpecifications
        {
            get => _tagSpecifications ?? (_tagSpecifications = new InputList<Inputs.LaunchTemplateTagSpecificationArgs>());
            set => _tagSpecifications = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("updateDefaultVersion")]
        public Input<bool>? UpdateDefaultVersion { get; set; }

        [Input("userData")]
        public Input<string>? UserData { get; set; }

        [Input("vpcSecurityGroupIds")]
        private InputList<string>? _vpcSecurityGroupIds;
        public InputList<string> VpcSecurityGroupIds
        {
            get => _vpcSecurityGroupIds ?? (_vpcSecurityGroupIds = new InputList<string>());
            set => _vpcSecurityGroupIds = value;
        }

        public LaunchTemplateArgs()
        {
        }
        public static new LaunchTemplateArgs Empty => new LaunchTemplateArgs();
    }

    public sealed class LaunchTemplateState : global::Pulumi.ResourceArgs
    {
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("blockDeviceMappings")]
        private InputList<Inputs.LaunchTemplateBlockDeviceMappingGetArgs>? _blockDeviceMappings;
        public InputList<Inputs.LaunchTemplateBlockDeviceMappingGetArgs> BlockDeviceMappings
        {
            get => _blockDeviceMappings ?? (_blockDeviceMappings = new InputList<Inputs.LaunchTemplateBlockDeviceMappingGetArgs>());
            set => _blockDeviceMappings = value;
        }

        [Input("capacityReservationSpecification")]
        public Input<Inputs.LaunchTemplateCapacityReservationSpecificationGetArgs>? CapacityReservationSpecification { get; set; }

        [Input("cpuOptions")]
        public Input<Inputs.LaunchTemplateCpuOptionsGetArgs>? CpuOptions { get; set; }

        [Input("creditSpecification")]
        public Input<Inputs.LaunchTemplateCreditSpecificationGetArgs>? CreditSpecification { get; set; }

        [Input("defaultVersion")]
        public Input<int>? DefaultVersion { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("disableApiStop")]
        public Input<bool>? DisableApiStop { get; set; }

        [Input("disableApiTermination")]
        public Input<bool>? DisableApiTermination { get; set; }

        [Input("ebsOptimized")]
        public Input<string>? EbsOptimized { get; set; }

        [Input("elasticGpuSpecifications")]
        private InputList<Inputs.LaunchTemplateElasticGpuSpecificationGetArgs>? _elasticGpuSpecifications;
        public InputList<Inputs.LaunchTemplateElasticGpuSpecificationGetArgs> ElasticGpuSpecifications
        {
            get => _elasticGpuSpecifications ?? (_elasticGpuSpecifications = new InputList<Inputs.LaunchTemplateElasticGpuSpecificationGetArgs>());
            set => _elasticGpuSpecifications = value;
        }

        [Input("elasticInferenceAccelerator")]
        public Input<Inputs.LaunchTemplateElasticInferenceAcceleratorGetArgs>? ElasticInferenceAccelerator { get; set; }

        [Input("enclaveOptions")]
        public Input<Inputs.LaunchTemplateEnclaveOptionsGetArgs>? EnclaveOptions { get; set; }

        [Input("hibernationOptions")]
        public Input<Inputs.LaunchTemplateHibernationOptionsGetArgs>? HibernationOptions { get; set; }

        [Input("iamInstanceProfile")]
        public Input<Inputs.LaunchTemplateIamInstanceProfileGetArgs>? IamInstanceProfile { get; set; }

        [Input("imageId")]
        public Input<string>? ImageId { get; set; }

        [Input("instanceInitiatedShutdownBehavior")]
        public Input<string>? InstanceInitiatedShutdownBehavior { get; set; }

        [Input("instanceMarketOptions")]
        public Input<Inputs.LaunchTemplateInstanceMarketOptionsGetArgs>? InstanceMarketOptions { get; set; }

        [Input("instanceRequirements")]
        public Input<Inputs.LaunchTemplateInstanceRequirementsGetArgs>? InstanceRequirements { get; set; }

        [Input("instanceType")]
        public Input<string>? InstanceType { get; set; }

        [Input("kernelId")]
        public Input<string>? KernelId { get; set; }

        [Input("keyName")]
        public Input<string>? KeyName { get; set; }

        [Input("latestVersion")]
        public Input<int>? LatestVersion { get; set; }

        [Input("licenseSpecifications")]
        private InputList<Inputs.LaunchTemplateLicenseSpecificationGetArgs>? _licenseSpecifications;
        public InputList<Inputs.LaunchTemplateLicenseSpecificationGetArgs> LicenseSpecifications
        {
            get => _licenseSpecifications ?? (_licenseSpecifications = new InputList<Inputs.LaunchTemplateLicenseSpecificationGetArgs>());
            set => _licenseSpecifications = value;
        }

        [Input("maintenanceOptions")]
        public Input<Inputs.LaunchTemplateMaintenanceOptionsGetArgs>? MaintenanceOptions { get; set; }

        [Input("metadataOptions")]
        public Input<Inputs.LaunchTemplateMetadataOptionsGetArgs>? MetadataOptions { get; set; }

        [Input("monitoring")]
        public Input<Inputs.LaunchTemplateMonitoringGetArgs>? Monitoring { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("namePrefix")]
        public Input<string>? NamePrefix { get; set; }

        [Input("networkInterfaces")]
        private InputList<Inputs.LaunchTemplateNetworkInterfaceGetArgs>? _networkInterfaces;
        public InputList<Inputs.LaunchTemplateNetworkInterfaceGetArgs> NetworkInterfaces
        {
            get => _networkInterfaces ?? (_networkInterfaces = new InputList<Inputs.LaunchTemplateNetworkInterfaceGetArgs>());
            set => _networkInterfaces = value;
        }

        [Input("placement")]
        public Input<Inputs.LaunchTemplatePlacementGetArgs>? Placement { get; set; }

        [Input("privateDnsNameOptions")]
        public Input<Inputs.LaunchTemplatePrivateDnsNameOptionsGetArgs>? PrivateDnsNameOptions { get; set; }

        [Input("ramDiskId")]
        public Input<string>? RamDiskId { get; set; }

        [Input("securityGroupNames")]
        private InputList<string>? _securityGroupNames;
        public InputList<string> SecurityGroupNames
        {
            get => _securityGroupNames ?? (_securityGroupNames = new InputList<string>());
            set => _securityGroupNames = value;
        }

        [Input("tagSpecifications")]
        private InputList<Inputs.LaunchTemplateTagSpecificationGetArgs>? _tagSpecifications;
        public InputList<Inputs.LaunchTemplateTagSpecificationGetArgs> TagSpecifications
        {
            get => _tagSpecifications ?? (_tagSpecifications = new InputList<Inputs.LaunchTemplateTagSpecificationGetArgs>());
            set => _tagSpecifications = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("updateDefaultVersion")]
        public Input<bool>? UpdateDefaultVersion { get; set; }

        [Input("userData")]
        public Input<string>? UserData { get; set; }

        [Input("vpcSecurityGroupIds")]
        private InputList<string>? _vpcSecurityGroupIds;
        public InputList<string> VpcSecurityGroupIds
        {
            get => _vpcSecurityGroupIds ?? (_vpcSecurityGroupIds = new InputList<string>());
            set => _vpcSecurityGroupIds = value;
        }

        public LaunchTemplateState()
        {
        }
        public static new LaunchTemplateState Empty => new LaunchTemplateState();
    }
}
