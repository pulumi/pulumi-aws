// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2
{
    /// <summary>
    /// Provides an EC2 Capacity Block Reservation. This allows you to purchase capacity block for your Amazon EC2 instances in a specific Availability Zone for machine learning (ML) Workloads.
    /// 
    /// &gt; **NOTE:** Once created, a reservation is valid for the `duration` of the provided `capacity_block_offering_id` and cannot be deleted. Performing a `destroy` will only remove the resource from state. For more information see [EC2 Capacity Block Reservation Documentation](https://aws.amazon.com/ec2/instance-types/p5/) and [PurchaseReservedDBInstancesOffering](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/capacity-blocks-pricing-billing.html).
    /// 
    /// &gt; **NOTE:** Due to the expense of testing this resource, we provide it as best effort. If you find it useful, and have the ability to help test or notice issues, consider reaching out to us on GitHub.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var test = Aws.Ec2.GetCapacityBlockOffering.Invoke(new()
    ///     {
    ///         CapacityDurationHours = 24,
    ///         EndDateRange = "2024-05-30T15:04:05Z",
    ///         InstanceCount = 1,
    ///         InstanceType = "p4d.24xlarge",
    ///         StartDateRange = "2024-04-28T15:04:05Z",
    ///     });
    /// 
    ///     var example = new Aws.Ec2.CapacityBlockReservation("example", new()
    ///     {
    ///         CapacityBlockOfferingId = test.Apply(getCapacityBlockOfferingResult =&gt; getCapacityBlockOfferingResult.CapacityBlockOfferingId),
    ///         InstancePlatform = "Linux/UNIX",
    ///         Tags = 
    ///         {
    ///             { "Environment", "dev" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [AwsResourceType("aws:ec2/capacityBlockReservation:CapacityBlockReservation")]
    public partial class CapacityBlockReservation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ARN of the reservation.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// The Availability Zone in which to create the Capacity Block Reservation.
        /// </summary>
        [Output("availabilityZone")]
        public Output<string> AvailabilityZone { get; private set; } = null!;

        /// <summary>
        /// The Capacity Block Reservation ID.
        /// </summary>
        [Output("capacityBlockOfferingId")]
        public Output<string> CapacityBlockOfferingId { get; private set; } = null!;

        /// <summary>
        /// The date and time at which the Capacity Block Reservation was created.
        /// </summary>
        [Output("createdDate")]
        public Output<string> CreatedDate { get; private set; } = null!;

        /// <summary>
        /// Indicates whether the Capacity Reservation supports EBS-optimized instances.
        /// </summary>
        [Output("ebsOptimized")]
        public Output<bool> EbsOptimized { get; private set; } = null!;

        /// <summary>
        /// The date and time at which the Capacity Block Reservation expires. When a Capacity Block Reservation expires, the reserved capacity is released and you can no longer launch instances into it. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
        /// </summary>
        [Output("endDate")]
        public Output<string> EndDate { get; private set; } = null!;

        /// <summary>
        /// Indicates the way in which the Capacity Reservation ends.
        /// </summary>
        [Output("endDateType")]
        public Output<string> EndDateType { get; private set; } = null!;

        /// <summary>
        /// The number of instances for which to reserve capacity.
        /// </summary>
        [Output("instanceCount")]
        public Output<int> InstanceCount { get; private set; } = null!;

        /// <summary>
        /// The type of operating system for which to reserve capacity. Valid options are `Linux/UNIX`, `Red Hat Enterprise Linux`, `SUSE Linux`, `Windows`, `Windows with SQL Server`, `Windows with SQL Server Enterprise`, `Windows with SQL Server Standard` or `Windows with SQL Server Web`.
        /// </summary>
        [Output("instancePlatform")]
        public Output<string> InstancePlatform { get; private set; } = null!;

        /// <summary>
        /// The instance type for which to reserve capacity.
        /// </summary>
        [Output("instanceType")]
        public Output<string> InstanceType { get; private set; } = null!;

        /// <summary>
        /// The ARN of the Outpost on which to create the Capacity Block Reservation.
        /// </summary>
        [Output("outpostArn")]
        public Output<string> OutpostArn { get; private set; } = null!;

        /// <summary>
        /// The ARN of the placement group in which to create the Capacity Block Reservation.
        /// </summary>
        [Output("placementGroupArn")]
        public Output<string> PlacementGroupArn { get; private set; } = null!;

        /// <summary>
        /// The type of Capacity Reservation.
        /// </summary>
        [Output("reservationType")]
        public Output<string> ReservationType { get; private set; } = null!;

        /// <summary>
        /// The date and time at which the Capacity Block Reservation starts. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
        /// </summary>
        [Output("startDate")]
        public Output<string> StartDate { get; private set; } = null!;

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block
        /// </summary>
        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        /// <summary>
        /// Indicates the tenancy of the Capacity Block Reservation. Specify either `default` or `dedicated`.
        /// </summary>
        [Output("tenancy")]
        public Output<string> Tenancy { get; private set; } = null!;

        [Output("timeouts")]
        public Output<Outputs.CapacityBlockReservationTimeouts?> Timeouts { get; private set; } = null!;


        /// <summary>
        /// Create a CapacityBlockReservation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CapacityBlockReservation(string name, CapacityBlockReservationArgs args, CustomResourceOptions? options = null)
            : base("aws:ec2/capacityBlockReservation:CapacityBlockReservation", name, args ?? new CapacityBlockReservationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CapacityBlockReservation(string name, Input<string> id, CapacityBlockReservationState? state = null, CustomResourceOptions? options = null)
            : base("aws:ec2/capacityBlockReservation:CapacityBlockReservation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CapacityBlockReservation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CapacityBlockReservation Get(string name, Input<string> id, CapacityBlockReservationState? state = null, CustomResourceOptions? options = null)
        {
            return new CapacityBlockReservation(name, id, state, options);
        }
    }

    public sealed class CapacityBlockReservationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Capacity Block Reservation ID.
        /// </summary>
        [Input("capacityBlockOfferingId", required: true)]
        public Input<string> CapacityBlockOfferingId { get; set; } = null!;

        /// <summary>
        /// The type of operating system for which to reserve capacity. Valid options are `Linux/UNIX`, `Red Hat Enterprise Linux`, `SUSE Linux`, `Windows`, `Windows with SQL Server`, `Windows with SQL Server Enterprise`, `Windows with SQL Server Standard` or `Windows with SQL Server Web`.
        /// </summary>
        [Input("instancePlatform", required: true)]
        public Input<string> InstancePlatform { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("timeouts")]
        public Input<Inputs.CapacityBlockReservationTimeoutsArgs>? Timeouts { get; set; }

        public CapacityBlockReservationArgs()
        {
        }
        public static new CapacityBlockReservationArgs Empty => new CapacityBlockReservationArgs();
    }

    public sealed class CapacityBlockReservationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ARN of the reservation.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// The Availability Zone in which to create the Capacity Block Reservation.
        /// </summary>
        [Input("availabilityZone")]
        public Input<string>? AvailabilityZone { get; set; }

        /// <summary>
        /// The Capacity Block Reservation ID.
        /// </summary>
        [Input("capacityBlockOfferingId")]
        public Input<string>? CapacityBlockOfferingId { get; set; }

        /// <summary>
        /// The date and time at which the Capacity Block Reservation was created.
        /// </summary>
        [Input("createdDate")]
        public Input<string>? CreatedDate { get; set; }

        /// <summary>
        /// Indicates whether the Capacity Reservation supports EBS-optimized instances.
        /// </summary>
        [Input("ebsOptimized")]
        public Input<bool>? EbsOptimized { get; set; }

        /// <summary>
        /// The date and time at which the Capacity Block Reservation expires. When a Capacity Block Reservation expires, the reserved capacity is released and you can no longer launch instances into it. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
        /// </summary>
        [Input("endDate")]
        public Input<string>? EndDate { get; set; }

        /// <summary>
        /// Indicates the way in which the Capacity Reservation ends.
        /// </summary>
        [Input("endDateType")]
        public Input<string>? EndDateType { get; set; }

        /// <summary>
        /// The number of instances for which to reserve capacity.
        /// </summary>
        [Input("instanceCount")]
        public Input<int>? InstanceCount { get; set; }

        /// <summary>
        /// The type of operating system for which to reserve capacity. Valid options are `Linux/UNIX`, `Red Hat Enterprise Linux`, `SUSE Linux`, `Windows`, `Windows with SQL Server`, `Windows with SQL Server Enterprise`, `Windows with SQL Server Standard` or `Windows with SQL Server Web`.
        /// </summary>
        [Input("instancePlatform")]
        public Input<string>? InstancePlatform { get; set; }

        /// <summary>
        /// The instance type for which to reserve capacity.
        /// </summary>
        [Input("instanceType")]
        public Input<string>? InstanceType { get; set; }

        /// <summary>
        /// The ARN of the Outpost on which to create the Capacity Block Reservation.
        /// </summary>
        [Input("outpostArn")]
        public Input<string>? OutpostArn { get; set; }

        /// <summary>
        /// The ARN of the placement group in which to create the Capacity Block Reservation.
        /// </summary>
        [Input("placementGroupArn")]
        public Input<string>? PlacementGroupArn { get; set; }

        /// <summary>
        /// The type of Capacity Reservation.
        /// </summary>
        [Input("reservationType")]
        public Input<string>? ReservationType { get; set; }

        /// <summary>
        /// The date and time at which the Capacity Block Reservation starts. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
        /// </summary>
        [Input("startDate")]
        public Input<string>? StartDate { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block
        /// </summary>
        [Obsolete(@"Please use `tags` instead.")]
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        /// <summary>
        /// Indicates the tenancy of the Capacity Block Reservation. Specify either `default` or `dedicated`.
        /// </summary>
        [Input("tenancy")]
        public Input<string>? Tenancy { get; set; }

        [Input("timeouts")]
        public Input<Inputs.CapacityBlockReservationTimeoutsGetArgs>? Timeouts { get; set; }

        public CapacityBlockReservationState()
        {
        }
        public static new CapacityBlockReservationState Empty => new CapacityBlockReservationState();
    }
}
