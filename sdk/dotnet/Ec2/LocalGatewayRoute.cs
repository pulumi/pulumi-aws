// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2
{
    /// <summary>
    /// Manages an EC2 Local Gateway Route. More information can be found in the [Outposts User Guide](https://docs.aws.amazon.com/outposts/latest/userguide/outposts-networking-components.html#routing).
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Ec2.LocalGatewayRoute("example", new()
    ///     {
    ///         DestinationCidrBlock = "172.16.0.0/16",
    ///         LocalGatewayRouteTableId = data.Aws_ec2_local_gateway_route_table.Example.Id,
    ///         LocalGatewayVirtualInterfaceGroupId = data.Aws_ec2_local_gateway_virtual_interface_group.Example.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// terraform import {
    /// 
    ///  to = aws_ec2_local_gateway_route.example
    /// 
    ///  id = "lgw-rtb-12345678_172.16.0.0/16" } Using `pulumi import`, import `aws_ec2_local_gateway_route` using the EC2 Local Gateway Route Table identifier and destination CIDR block separated by underscores (`_`). For exampleconsole % pulumi import aws_ec2_local_gateway_route.example lgw-rtb-12345678_172.16.0.0/16
    /// </summary>
    [AwsResourceType("aws:ec2/localGatewayRoute:LocalGatewayRoute")]
    public partial class LocalGatewayRoute : global::Pulumi.CustomResource
    {
        /// <summary>
        /// IPv4 CIDR range used for destination matches. Routing decisions are based on the most specific match.
        /// </summary>
        [Output("destinationCidrBlock")]
        public Output<string> DestinationCidrBlock { get; private set; } = null!;

        /// <summary>
        /// Identifier of EC2 Local Gateway Route Table.
        /// </summary>
        [Output("localGatewayRouteTableId")]
        public Output<string> LocalGatewayRouteTableId { get; private set; } = null!;

        /// <summary>
        /// Identifier of EC2 Local Gateway Virtual Interface Group.
        /// </summary>
        [Output("localGatewayVirtualInterfaceGroupId")]
        public Output<string> LocalGatewayVirtualInterfaceGroupId { get; private set; } = null!;


        /// <summary>
        /// Create a LocalGatewayRoute resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LocalGatewayRoute(string name, LocalGatewayRouteArgs args, CustomResourceOptions? options = null)
            : base("aws:ec2/localGatewayRoute:LocalGatewayRoute", name, args ?? new LocalGatewayRouteArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LocalGatewayRoute(string name, Input<string> id, LocalGatewayRouteState? state = null, CustomResourceOptions? options = null)
            : base("aws:ec2/localGatewayRoute:LocalGatewayRoute", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LocalGatewayRoute resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LocalGatewayRoute Get(string name, Input<string> id, LocalGatewayRouteState? state = null, CustomResourceOptions? options = null)
        {
            return new LocalGatewayRoute(name, id, state, options);
        }
    }

    public sealed class LocalGatewayRouteArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// IPv4 CIDR range used for destination matches. Routing decisions are based on the most specific match.
        /// </summary>
        [Input("destinationCidrBlock", required: true)]
        public Input<string> DestinationCidrBlock { get; set; } = null!;

        /// <summary>
        /// Identifier of EC2 Local Gateway Route Table.
        /// </summary>
        [Input("localGatewayRouteTableId", required: true)]
        public Input<string> LocalGatewayRouteTableId { get; set; } = null!;

        /// <summary>
        /// Identifier of EC2 Local Gateway Virtual Interface Group.
        /// </summary>
        [Input("localGatewayVirtualInterfaceGroupId", required: true)]
        public Input<string> LocalGatewayVirtualInterfaceGroupId { get; set; } = null!;

        public LocalGatewayRouteArgs()
        {
        }
        public static new LocalGatewayRouteArgs Empty => new LocalGatewayRouteArgs();
    }

    public sealed class LocalGatewayRouteState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// IPv4 CIDR range used for destination matches. Routing decisions are based on the most specific match.
        /// </summary>
        [Input("destinationCidrBlock")]
        public Input<string>? DestinationCidrBlock { get; set; }

        /// <summary>
        /// Identifier of EC2 Local Gateway Route Table.
        /// </summary>
        [Input("localGatewayRouteTableId")]
        public Input<string>? LocalGatewayRouteTableId { get; set; }

        /// <summary>
        /// Identifier of EC2 Local Gateway Virtual Interface Group.
        /// </summary>
        [Input("localGatewayVirtualInterfaceGroupId")]
        public Input<string>? LocalGatewayVirtualInterfaceGroupId { get; set; }

        public LocalGatewayRouteState()
        {
        }
        public static new LocalGatewayRouteState Empty => new LocalGatewayRouteState();
    }
}
