// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2
{
    public static class GetLocalGateway
    {
        /// <summary>
        /// Provides details about an EC2 Local Gateway.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// The following example shows how one might accept a local gateway id as a variable.
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const config = new pulumi.Config();
        /// const localGatewayId = config.requireObject("localGatewayId");
        /// const selected = aws.ec2.getLocalGateway({
        ///     id: localGatewayId,
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// config = pulumi.Config()
        /// local_gateway_id = config.require_object("localGatewayId")
        /// selected = aws.ec2.get_local_gateway(id=local_gateway_id)
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var localGatewayId = config.RequireObject&lt;dynamic&gt;("localGatewayId");
        ///     var selected = Aws.Ec2.GetLocalGateway.Invoke(new()
        ///     {
        ///         Id = localGatewayId,
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/ec2"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		cfg := config.New(ctx, "")
        /// 		localGatewayId := cfg.RequireObject("localGatewayId")
        /// 		_, err := ec2.GetLocalGateway(ctx, &amp;ec2.GetLocalGatewayArgs{
        /// 			Id: pulumi.StringRef(localGatewayId),
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.ec2.Ec2Functions;
        /// import com.pulumi.aws.ec2.inputs.GetLocalGatewayArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var config = ctx.config();
        ///         final var localGatewayId = config.get("localGatewayId");
        ///         final var selected = Ec2Functions.getLocalGateway(GetLocalGatewayArgs.builder()
        ///             .id(localGatewayId)
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// configuration:
        ///   localGatewayId:
        ///     type: dynamic
        /// variables:
        ///   selected:
        ///     fn::invoke:
        ///       Function: aws:ec2:getLocalGateway
        ///       Arguments:
        ///         id: ${localGatewayId}
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetLocalGatewayResult> InvokeAsync(GetLocalGatewayArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLocalGatewayResult>("aws:ec2/getLocalGateway:getLocalGateway", args ?? new GetLocalGatewayArgs(), options.WithDefaults());

        /// <summary>
        /// Provides details about an EC2 Local Gateway.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// The following example shows how one might accept a local gateway id as a variable.
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const config = new pulumi.Config();
        /// const localGatewayId = config.requireObject("localGatewayId");
        /// const selected = aws.ec2.getLocalGateway({
        ///     id: localGatewayId,
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// config = pulumi.Config()
        /// local_gateway_id = config.require_object("localGatewayId")
        /// selected = aws.ec2.get_local_gateway(id=local_gateway_id)
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var localGatewayId = config.RequireObject&lt;dynamic&gt;("localGatewayId");
        ///     var selected = Aws.Ec2.GetLocalGateway.Invoke(new()
        ///     {
        ///         Id = localGatewayId,
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/ec2"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		cfg := config.New(ctx, "")
        /// 		localGatewayId := cfg.RequireObject("localGatewayId")
        /// 		_, err := ec2.GetLocalGateway(ctx, &amp;ec2.GetLocalGatewayArgs{
        /// 			Id: pulumi.StringRef(localGatewayId),
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.ec2.Ec2Functions;
        /// import com.pulumi.aws.ec2.inputs.GetLocalGatewayArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var config = ctx.config();
        ///         final var localGatewayId = config.get("localGatewayId");
        ///         final var selected = Ec2Functions.getLocalGateway(GetLocalGatewayArgs.builder()
        ///             .id(localGatewayId)
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// configuration:
        ///   localGatewayId:
        ///     type: dynamic
        /// variables:
        ///   selected:
        ///     fn::invoke:
        ///       Function: aws:ec2:getLocalGateway
        ///       Arguments:
        ///         id: ${localGatewayId}
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetLocalGatewayResult> Invoke(GetLocalGatewayInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLocalGatewayResult>("aws:ec2/getLocalGateway:getLocalGateway", args ?? new GetLocalGatewayInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLocalGatewayArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetLocalGatewayFilterArgs>? _filters;

        /// <summary>
        /// Custom filter block as described below.
        /// </summary>
        public List<Inputs.GetLocalGatewayFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetLocalGatewayFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Id of the specific Local Gateway to retrieve.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// Current state of the desired Local Gateway.
        /// Can be either `"pending"` or `"available"`.
        /// </summary>
        [Input("state")]
        public string? State { get; set; }

        [Input("tags")]
        private Dictionary<string, string>? _tags;

        /// <summary>
        /// Mapping of tags, each pair of which must exactly match
        /// a pair on the desired Local Gateway.
        /// 
        /// More complex filters can be expressed using one or more `filter` sub-blocks,
        /// which take the following arguments:
        /// </summary>
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetLocalGatewayArgs()
        {
        }
        public static new GetLocalGatewayArgs Empty => new GetLocalGatewayArgs();
    }

    public sealed class GetLocalGatewayInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetLocalGatewayFilterInputArgs>? _filters;

        /// <summary>
        /// Custom filter block as described below.
        /// </summary>
        public InputList<Inputs.GetLocalGatewayFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetLocalGatewayFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Id of the specific Local Gateway to retrieve.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Current state of the desired Local Gateway.
        /// Can be either `"pending"` or `"available"`.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Mapping of tags, each pair of which must exactly match
        /// a pair on the desired Local Gateway.
        /// 
        /// More complex filters can be expressed using one or more `filter` sub-blocks,
        /// which take the following arguments:
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetLocalGatewayInvokeArgs()
        {
        }
        public static new GetLocalGatewayInvokeArgs Empty => new GetLocalGatewayInvokeArgs();
    }


    [OutputType]
    public sealed class GetLocalGatewayResult
    {
        public readonly ImmutableArray<Outputs.GetLocalGatewayFilterResult> Filters;
        public readonly string Id;
        /// <summary>
        /// ARN of Outpost
        /// </summary>
        public readonly string OutpostArn;
        /// <summary>
        /// AWS account identifier that owns the Local Gateway.
        /// </summary>
        public readonly string OwnerId;
        /// <summary>
        /// State of the local gateway.
        /// </summary>
        public readonly string State;
        public readonly ImmutableDictionary<string, string> Tags;

        [OutputConstructor]
        private GetLocalGatewayResult(
            ImmutableArray<Outputs.GetLocalGatewayFilterResult> filters,

            string id,

            string outpostArn,

            string ownerId,

            string state,

            ImmutableDictionary<string, string> tags)
        {
            Filters = filters;
            Id = id;
            OutpostArn = outpostArn;
            OwnerId = ownerId;
            State = state;
            Tags = tags;
        }
    }
}
