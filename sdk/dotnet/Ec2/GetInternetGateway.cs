// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2
{
    public static partial class Invokes
    {
        /// <summary>
        /// `aws.ec2.InternetGateway` provides details about a specific Internet Gateway.
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/d/internet_gateway.html.markdown.
        /// </summary>
        public static Task<GetInternetGatewayResult> GetInternetGateway(GetInternetGatewayArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetInternetGatewayResult>("aws:ec2/getInternetGateway:getInternetGateway", args ?? InvokeArgs.Empty, options.WithVersion());
    }

    public sealed class GetInternetGatewayArgs : Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetInternetGatewayFiltersArgs>? _filters;

        /// <summary>
        /// Custom filter block as described below.
        /// </summary>
        public List<Inputs.GetInternetGatewayFiltersArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetInternetGatewayFiltersArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The id of the specific Internet Gateway to retrieve.
        /// </summary>
        [Input("internetGatewayId")]
        public string? InternetGatewayId { get; set; }

        [Input("tags")]
        private Dictionary<string, object>? _tags;

        /// <summary>
        /// A mapping of tags, each pair of which must exactly match
        /// a pair on the desired Internet Gateway.
        /// </summary>
        public Dictionary<string, object> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, object>());
            set => _tags = value;
        }

        public GetInternetGatewayArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetInternetGatewayResult
    {
        public readonly ImmutableArray<Outputs.GetInternetGatewayAttachmentsResult> Attachments;
        public readonly ImmutableArray<Outputs.GetInternetGatewayFiltersResult> Filters;
        public readonly string InternetGatewayId;
        /// <summary>
        /// The ID of the AWS account that owns the internet gateway.
        /// </summary>
        public readonly string OwnerId;
        public readonly ImmutableDictionary<string, object> Tags;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetInternetGatewayResult(
            ImmutableArray<Outputs.GetInternetGatewayAttachmentsResult> attachments,
            ImmutableArray<Outputs.GetInternetGatewayFiltersResult> filters,
            string internetGatewayId,
            string ownerId,
            ImmutableDictionary<string, object> tags,
            string id)
        {
            Attachments = attachments;
            Filters = filters;
            InternetGatewayId = internetGatewayId;
            OwnerId = ownerId;
            Tags = tags;
            Id = id;
        }
    }

    namespace Inputs
    {

    public sealed class GetInternetGatewayFiltersArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the field to filter by, as defined by
        /// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInternetGateways.html).
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("values", required: true)]
        private List<string>? _values;

        /// <summary>
        /// Set of values that are accepted for the given field.
        /// An Internet Gateway will be selected if any one of the given values matches.
        /// </summary>
        public List<string> Values
        {
            get => _values ?? (_values = new List<string>());
            set => _values = value;
        }

        public GetInternetGatewayFiltersArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class GetInternetGatewayAttachmentsResult
    {
        /// <summary>
        /// The current state of the attachment between the gateway and the VPC. Present only if a VPC is attached
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The ID of an attached VPC.
        /// </summary>
        public readonly string VpcId;

        [OutputConstructor]
        private GetInternetGatewayAttachmentsResult(
            string state,
            string vpcId)
        {
            State = state;
            VpcId = vpcId;
        }
    }

    [OutputType]
    public sealed class GetInternetGatewayFiltersResult
    {
        /// <summary>
        /// The name of the field to filter by, as defined by
        /// [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInternetGateways.html).
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Set of values that are accepted for the given field.
        /// An Internet Gateway will be selected if any one of the given values matches.
        /// </summary>
        public readonly ImmutableArray<string> Values;

        [OutputConstructor]
        private GetInternetGatewayFiltersResult(
            string name,
            ImmutableArray<string> values)
        {
            Name = name;
            Values = values;
        }
    }
    }
}
