// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Rum
{
    /// <summary>
    /// Provides a CloudWatch RUM Metrics Destination resource.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Rum.MetricsDestination("example", new()
    ///     {
    ///         AppMonitorName = aws_rum_app_monitor.Example.Name,
    ///         Destination = "CloudWatch",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// terraform import {
    /// 
    ///  to = aws_rum_metrics_destination.example
    /// 
    ///  id = "example" } Using `pulumi import`, import Cloudwatch RUM Metrics Destination using the `id`. For exampleconsole % pulumi import aws_rum_metrics_destination.example example
    /// </summary>
    [AwsResourceType("aws:rum/metricsDestination:MetricsDestination")]
    public partial class MetricsDestination : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the CloudWatch RUM app monitor that will send the metrics.
        /// </summary>
        [Output("appMonitorName")]
        public Output<string> AppMonitorName { get; private set; } = null!;

        /// <summary>
        /// Defines the destination to send the metrics to. Valid values are `CloudWatch` and `Evidently`. If you specify `Evidently`, you must also specify the ARN of the CloudWatchEvidently experiment that is to be the destination and an IAM role that has permission to write to the experiment.
        /// </summary>
        [Output("destination")]
        public Output<string> Destination { get; private set; } = null!;

        /// <summary>
        /// Use this parameter only if Destination is Evidently. This parameter specifies the ARN of the Evidently experiment that will receive the extended metrics.
        /// </summary>
        [Output("destinationArn")]
        public Output<string?> DestinationArn { get; private set; } = null!;

        /// <summary>
        /// This parameter is required if Destination is Evidently. If Destination is CloudWatch, do not use this parameter.
        /// </summary>
        [Output("iamRoleArn")]
        public Output<string?> IamRoleArn { get; private set; } = null!;


        /// <summary>
        /// Create a MetricsDestination resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MetricsDestination(string name, MetricsDestinationArgs args, CustomResourceOptions? options = null)
            : base("aws:rum/metricsDestination:MetricsDestination", name, args ?? new MetricsDestinationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MetricsDestination(string name, Input<string> id, MetricsDestinationState? state = null, CustomResourceOptions? options = null)
            : base("aws:rum/metricsDestination:MetricsDestination", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MetricsDestination resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MetricsDestination Get(string name, Input<string> id, MetricsDestinationState? state = null, CustomResourceOptions? options = null)
        {
            return new MetricsDestination(name, id, state, options);
        }
    }

    public sealed class MetricsDestinationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the CloudWatch RUM app monitor that will send the metrics.
        /// </summary>
        [Input("appMonitorName", required: true)]
        public Input<string> AppMonitorName { get; set; } = null!;

        /// <summary>
        /// Defines the destination to send the metrics to. Valid values are `CloudWatch` and `Evidently`. If you specify `Evidently`, you must also specify the ARN of the CloudWatchEvidently experiment that is to be the destination and an IAM role that has permission to write to the experiment.
        /// </summary>
        [Input("destination", required: true)]
        public Input<string> Destination { get; set; } = null!;

        /// <summary>
        /// Use this parameter only if Destination is Evidently. This parameter specifies the ARN of the Evidently experiment that will receive the extended metrics.
        /// </summary>
        [Input("destinationArn")]
        public Input<string>? DestinationArn { get; set; }

        /// <summary>
        /// This parameter is required if Destination is Evidently. If Destination is CloudWatch, do not use this parameter.
        /// </summary>
        [Input("iamRoleArn")]
        public Input<string>? IamRoleArn { get; set; }

        public MetricsDestinationArgs()
        {
        }
        public static new MetricsDestinationArgs Empty => new MetricsDestinationArgs();
    }

    public sealed class MetricsDestinationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the CloudWatch RUM app monitor that will send the metrics.
        /// </summary>
        [Input("appMonitorName")]
        public Input<string>? AppMonitorName { get; set; }

        /// <summary>
        /// Defines the destination to send the metrics to. Valid values are `CloudWatch` and `Evidently`. If you specify `Evidently`, you must also specify the ARN of the CloudWatchEvidently experiment that is to be the destination and an IAM role that has permission to write to the experiment.
        /// </summary>
        [Input("destination")]
        public Input<string>? Destination { get; set; }

        /// <summary>
        /// Use this parameter only if Destination is Evidently. This parameter specifies the ARN of the Evidently experiment that will receive the extended metrics.
        /// </summary>
        [Input("destinationArn")]
        public Input<string>? DestinationArn { get; set; }

        /// <summary>
        /// This parameter is required if Destination is Evidently. If Destination is CloudWatch, do not use this parameter.
        /// </summary>
        [Input("iamRoleArn")]
        public Input<string>? IamRoleArn { get; set; }

        public MetricsDestinationState()
        {
        }
        public static new MetricsDestinationState Empty => new MetricsDestinationState();
    }
}
