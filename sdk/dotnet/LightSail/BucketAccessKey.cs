// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.LightSail
{
    /// <summary>
    /// Manages a Lightsail bucket access key. Use this resource to create credentials that allow programmatic access to your Lightsail bucket via API requests.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.LightSail.Bucket("example", new()
    ///     {
    ///         Name = "example-bucket",
    ///         BundleId = "small_1_0",
    ///     });
    /// 
    ///     var exampleBucketAccessKey = new Aws.LightSail.BucketAccessKey("example", new()
    ///     {
    ///         BucketName = example.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import `aws_lightsail_bucket_access_key` using the `id` attribute. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:lightsail/bucketAccessKey:BucketAccessKey example example-bucket,AKIAIOSFODNN7EXAMPLE
    /// ```
    /// </summary>
    [AwsResourceType("aws:lightsail/bucketAccessKey:BucketAccessKey")]
    public partial class BucketAccessKey : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Access key ID.
        /// </summary>
        [Output("accessKeyId")]
        public Output<string> AccessKeyId { get; private set; } = null!;

        /// <summary>
        /// Name of the bucket that the access key will belong to and grant access to.
        /// </summary>
        [Output("bucketName")]
        public Output<string> BucketName { get; private set; } = null!;

        /// <summary>
        /// Date and time when the access key was created.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// Secret access key used to sign requests. This attribute is not available for imported resources. Note that this will be written to the state file.
        /// </summary>
        [Output("secretAccessKey")]
        public Output<string> SecretAccessKey { get; private set; } = null!;

        /// <summary>
        /// Status of the access key.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;


        /// <summary>
        /// Create a BucketAccessKey resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BucketAccessKey(string name, BucketAccessKeyArgs args, CustomResourceOptions? options = null)
            : base("aws:lightsail/bucketAccessKey:BucketAccessKey", name, args ?? new BucketAccessKeyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BucketAccessKey(string name, Input<string> id, BucketAccessKeyState? state = null, CustomResourceOptions? options = null)
            : base("aws:lightsail/bucketAccessKey:BucketAccessKey", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BucketAccessKey resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BucketAccessKey Get(string name, Input<string> id, BucketAccessKeyState? state = null, CustomResourceOptions? options = null)
        {
            return new BucketAccessKey(name, id, state, options);
        }
    }

    public sealed class BucketAccessKeyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the bucket that the access key will belong to and grant access to.
        /// </summary>
        [Input("bucketName", required: true)]
        public Input<string> BucketName { get; set; } = null!;

        public BucketAccessKeyArgs()
        {
        }
        public static new BucketAccessKeyArgs Empty => new BucketAccessKeyArgs();
    }

    public sealed class BucketAccessKeyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Access key ID.
        /// </summary>
        [Input("accessKeyId")]
        public Input<string>? AccessKeyId { get; set; }

        /// <summary>
        /// Name of the bucket that the access key will belong to and grant access to.
        /// </summary>
        [Input("bucketName")]
        public Input<string>? BucketName { get; set; }

        /// <summary>
        /// Date and time when the access key was created.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// Secret access key used to sign requests. This attribute is not available for imported resources. Note that this will be written to the state file.
        /// </summary>
        [Input("secretAccessKey")]
        public Input<string>? SecretAccessKey { get; set; }

        /// <summary>
        /// Status of the access key.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        public BucketAccessKeyState()
        {
        }
        public static new BucketAccessKeyState Empty => new BucketAccessKeyState();
    }
}
