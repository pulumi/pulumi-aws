// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.LightSail
{
    [AwsResourceType("aws:lightsail/lb:Lb")]
    public partial class Lb : global::Pulumi.CustomResource
    {
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        [Output("dnsName")]
        public Output<string> DnsName { get; private set; } = null!;

        [Output("healthCheckPath")]
        public Output<string?> HealthCheckPath { get; private set; } = null!;

        [Output("instancePort")]
        public Output<int> InstancePort { get; private set; } = null!;

        [Output("ipAddressType")]
        public Output<string?> IpAddressType { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("protocol")]
        public Output<string> Protocol { get; private set; } = null!;

        [Output("publicPorts")]
        public Output<ImmutableArray<int>> PublicPorts { get; private set; } = null!;

        [Output("supportCode")]
        public Output<string> SupportCode { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;


        /// <summary>
        /// Create a Lb resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Lb(string name, LbArgs args, CustomResourceOptions? options = null)
            : base("aws:lightsail/lb:Lb", name, args ?? new LbArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Lb(string name, Input<string> id, LbState? state = null, CustomResourceOptions? options = null)
            : base("aws:lightsail/lb:Lb", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Lb resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Lb Get(string name, Input<string> id, LbState? state = null, CustomResourceOptions? options = null)
        {
            return new Lb(name, id, state, options);
        }
    }

    public sealed class LbArgs : global::Pulumi.ResourceArgs
    {
        [Input("healthCheckPath")]
        public Input<string>? HealthCheckPath { get; set; }

        [Input("instancePort", required: true)]
        public Input<int> InstancePort { get; set; } = null!;

        [Input("ipAddressType")]
        public Input<string>? IpAddressType { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public LbArgs()
        {
        }
        public static new LbArgs Empty => new LbArgs();
    }

    public sealed class LbState : global::Pulumi.ResourceArgs
    {
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        [Input("dnsName")]
        public Input<string>? DnsName { get; set; }

        [Input("healthCheckPath")]
        public Input<string>? HealthCheckPath { get; set; }

        [Input("instancePort")]
        public Input<int>? InstancePort { get; set; }

        [Input("ipAddressType")]
        public Input<string>? IpAddressType { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("protocol")]
        public Input<string>? Protocol { get; set; }

        [Input("publicPorts")]
        private InputList<int>? _publicPorts;
        public InputList<int> PublicPorts
        {
            get => _publicPorts ?? (_publicPorts = new InputList<int>());
            set => _publicPorts = value;
        }

        [Input("supportCode")]
        public Input<string>? SupportCode { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        public LbState()
        {
        }
        public static new LbState Empty => new LbState();
    }
}
