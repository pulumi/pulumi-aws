// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.LightSail
{
    /// <summary>
    /// Provides a Lightsail Database. Amazon Lightsail is a service to provide easy virtual private servers
    /// with custom software already setup. See [What is Amazon Lightsail?](https://lightsail.aws.amazon.com/ls/docs/getting-started/article/what-is-amazon-lightsail)
    /// for more information.
    /// 
    /// &gt; **Note:** Lightsail is currently only supported in a limited number of AWS Regions, please see ["Regions and Availability Zones"](https://aws.amazon.com/about-aws/global-infrastructure/regional-product-services/) for more details
    /// 
    /// ## Example Usage
    /// ## Blueprint Ids
    /// 
    /// A list of all available Lightsail Blueprints for Relational Databases the [aws lightsail get-relational-database-blueprints](https://docs.aws.amazon.com/cli/latest/reference/lightsail/get-relational-database-blueprints.html) aws cli command.
    /// 
    /// ### Examples
    /// 
    /// - `mysql_8_0`
    /// - `postgres_12`
    /// 
    /// ### Prefix
    /// 
    /// A Blueprint ID starts with a prefix of the engine type.
    /// 
    /// ### Suffix
    /// 
    /// A Blueprint ID has a sufix of the engine version.
    /// 
    /// ## Bundles
    /// 
    /// A list of all available Lightsail Bundles for Relational Databases the [aws lightsail get-relational-database-bundles](https://docs.aws.amazon.com/cli/latest/reference/lightsail/get-relational-database-bundles.html) aws cli command.
    /// 
    /// ### Examples
    /// 
    /// - `small_1_0`
    /// - `small_ha_1_0`
    /// - `large_1_0`
    /// - `large_ha_1_0`
    /// 
    /// ### Prefix
    /// 
    /// A Bundle ID starts with one of the below size prefixes:
    /// 
    /// - `micro_`
    /// - `small_`
    /// - `medium_`
    /// - `large_`
    /// 
    /// ### Infixes (Optional for HA Database)
    /// 
    /// A Bundle Id can have the following infix added in order to use the HA option of the selected bundle.
    /// 
    /// - `ha_`
    /// 
    /// ### Suffix
    /// 
    /// A Bundle ID ends with one of the following suffix: `1_0`
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import Lightsail Databases using their name. For example:
    /// 
    /// ```sh
    ///  $ pulumi import aws:lightsail/database:Database foo 'bar'
    /// ```
    /// </summary>
    [AwsResourceType("aws:lightsail/database:Database")]
    public partial class Database : global::Pulumi.CustomResource
    {
        /// <summary>
        /// When true , applies changes immediately. When false , applies changes during the preferred maintenance window. Some changes may cause an outage.
        /// </summary>
        [Output("applyImmediately")]
        public Output<bool> ApplyImmediately { get; private set; } = null!;

        /// <summary>
        /// The ARN of the Lightsail instance (matches `id`).
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// The Availability Zone in which to create your new database. Use the us-east-2a case-sensitive format.
        /// </summary>
        [Output("availabilityZone")]
        public Output<string> AvailabilityZone { get; private set; } = null!;

        /// <summary>
        /// When true, enables automated backup retention for your database. When false, disables automated backup retention for your database. Disabling backup retention deletes all automated database backups. Before disabling this, you may want to create a snapshot of your database.
        /// </summary>
        [Output("backupRetentionEnabled")]
        public Output<bool?> BackupRetentionEnabled { get; private set; } = null!;

        /// <summary>
        /// The blueprint ID for your new database. A blueprint describes the major engine version of a database. You can get a list of database blueprints IDs by using the AWS CLI command: `aws lightsail get-relational-database-blueprints`
        /// </summary>
        [Output("blueprintId")]
        public Output<string> BlueprintId { get; private set; } = null!;

        /// <summary>
        /// The bundle ID for your new database. A bundle describes the performance specifications for your database (see list below). You can get a list of database bundle IDs by using the AWS CLI command: `aws lightsail get-relational-database-bundles`.
        /// </summary>
        [Output("bundleId")]
        public Output<string> BundleId { get; private set; } = null!;

        /// <summary>
        /// The certificate associated with the database.
        /// </summary>
        [Output("caCertificateIdentifier")]
        public Output<string> CaCertificateIdentifier { get; private set; } = null!;

        /// <summary>
        /// The number of vCPUs for the database.
        /// </summary>
        [Output("cpuCount")]
        public Output<int> CpuCount { get; private set; } = null!;

        /// <summary>
        /// The timestamp when the instance was created.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The size of the disk for the database.
        /// </summary>
        [Output("diskSize")]
        public Output<double> DiskSize { get; private set; } = null!;

        /// <summary>
        /// The database software (for example, MySQL).
        /// </summary>
        [Output("engine")]
        public Output<string> Engine { get; private set; } = null!;

        /// <summary>
        /// The database engine version (for example, 5.7.23).
        /// </summary>
        [Output("engineVersion")]
        public Output<string> EngineVersion { get; private set; } = null!;

        /// <summary>
        /// The name of the database snapshot created if skip final snapshot is false, which is the default value for that parameter.
        /// </summary>
        [Output("finalSnapshotName")]
        public Output<string?> FinalSnapshotName { get; private set; } = null!;

        /// <summary>
        /// The name of the master database created when the Lightsail database resource is created.
        /// </summary>
        [Output("masterDatabaseName")]
        public Output<string> MasterDatabaseName { get; private set; } = null!;

        /// <summary>
        /// The master endpoint fqdn for the database.
        /// </summary>
        [Output("masterEndpointAddress")]
        public Output<string> MasterEndpointAddress { get; private set; } = null!;

        /// <summary>
        /// The master endpoint network port for the database.
        /// </summary>
        [Output("masterEndpointPort")]
        public Output<int> MasterEndpointPort { get; private set; } = null!;

        /// <summary>
        /// The password for the master user of your new database. The password can include any printable ASCII character except "/", """, or "@".
        /// </summary>
        [Output("masterPassword")]
        public Output<string> MasterPassword { get; private set; } = null!;

        /// <summary>
        /// The master user name for your new database.
        /// </summary>
        [Output("masterUsername")]
        public Output<string> MasterUsername { get; private set; } = null!;

        /// <summary>
        /// The daily time range during which automated backups are created for your new database if automated backups are enabled. Must be in the hh24:mi-hh24:mi format. Example: `16:00-16:30`. Specified in Coordinated Universal Time (UTC).
        /// </summary>
        [Output("preferredBackupWindow")]
        public Output<string> PreferredBackupWindow { get; private set; } = null!;

        /// <summary>
        /// The weekly time range during which system maintenance can occur on your new database. Must be in the ddd:hh24:mi-ddd:hh24:mi format. Specified in Coordinated Universal Time (UTC). Example: `Tue:17:00-Tue:17:30`
        /// </summary>
        [Output("preferredMaintenanceWindow")]
        public Output<string> PreferredMaintenanceWindow { get; private set; } = null!;

        /// <summary>
        /// Specifies the accessibility options for your new database. A value of true specifies a database that is available to resources outside of your Lightsail account. A value of false specifies a database that is available only to your Lightsail resources in the same region as your database.
        /// </summary>
        [Output("publiclyAccessible")]
        public Output<bool?> PubliclyAccessible { get; private set; } = null!;

        /// <summary>
        /// The amount of RAM in GB for the database.
        /// </summary>
        [Output("ramSize")]
        public Output<double> RamSize { get; private set; } = null!;

        [Output("relationalDatabaseName")]
        public Output<string> RelationalDatabaseName { get; private set; } = null!;

        /// <summary>
        /// Describes the secondary Availability Zone of a high availability database. The secondary database is used for failover support of a high availability database.
        /// </summary>
        [Output("secondaryAvailabilityZone")]
        public Output<string> SecondaryAvailabilityZone { get; private set; } = null!;

        /// <summary>
        /// Determines whether a final database snapshot is created before your database is deleted. If true is specified, no database snapshot is created. If false is specified, a database snapshot is created before your database is deleted. You must specify the final relational database snapshot name parameter if the skip final snapshot parameter is false.
        /// </summary>
        [Output("skipFinalSnapshot")]
        public Output<bool?> SkipFinalSnapshot { get; private set; } = null!;

        /// <summary>
        /// The support code for the database. Include this code in your email to support when you have questions about a database in Lightsail. This code enables our support team to look up your Lightsail information more easily.
        /// </summary>
        [Output("supportCode")]
        public Output<string> SupportCode { get; private set; } = null!;

        /// <summary>
        /// A map of tags to assign to the resource. To create a key-only tag, use an empty string as the value.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;


        /// <summary>
        /// Create a Database resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Database(string name, DatabaseArgs args, CustomResourceOptions? options = null)
            : base("aws:lightsail/database:Database", name, args ?? new DatabaseArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Database(string name, Input<string> id, DatabaseState? state = null, CustomResourceOptions? options = null)
            : base("aws:lightsail/database:Database", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "masterPassword",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Database resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Database Get(string name, Input<string> id, DatabaseState? state = null, CustomResourceOptions? options = null)
        {
            return new Database(name, id, state, options);
        }
    }

    public sealed class DatabaseArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// When true , applies changes immediately. When false , applies changes during the preferred maintenance window. Some changes may cause an outage.
        /// </summary>
        [Input("applyImmediately")]
        public Input<bool>? ApplyImmediately { get; set; }

        /// <summary>
        /// The Availability Zone in which to create your new database. Use the us-east-2a case-sensitive format.
        /// </summary>
        [Input("availabilityZone")]
        public Input<string>? AvailabilityZone { get; set; }

        /// <summary>
        /// When true, enables automated backup retention for your database. When false, disables automated backup retention for your database. Disabling backup retention deletes all automated database backups. Before disabling this, you may want to create a snapshot of your database.
        /// </summary>
        [Input("backupRetentionEnabled")]
        public Input<bool>? BackupRetentionEnabled { get; set; }

        /// <summary>
        /// The blueprint ID for your new database. A blueprint describes the major engine version of a database. You can get a list of database blueprints IDs by using the AWS CLI command: `aws lightsail get-relational-database-blueprints`
        /// </summary>
        [Input("blueprintId", required: true)]
        public Input<string> BlueprintId { get; set; } = null!;

        /// <summary>
        /// The bundle ID for your new database. A bundle describes the performance specifications for your database (see list below). You can get a list of database bundle IDs by using the AWS CLI command: `aws lightsail get-relational-database-bundles`.
        /// </summary>
        [Input("bundleId", required: true)]
        public Input<string> BundleId { get; set; } = null!;

        /// <summary>
        /// The name of the database snapshot created if skip final snapshot is false, which is the default value for that parameter.
        /// </summary>
        [Input("finalSnapshotName")]
        public Input<string>? FinalSnapshotName { get; set; }

        /// <summary>
        /// The name of the master database created when the Lightsail database resource is created.
        /// </summary>
        [Input("masterDatabaseName", required: true)]
        public Input<string> MasterDatabaseName { get; set; } = null!;

        [Input("masterPassword", required: true)]
        private Input<string>? _masterPassword;

        /// <summary>
        /// The password for the master user of your new database. The password can include any printable ASCII character except "/", """, or "@".
        /// </summary>
        public Input<string>? MasterPassword
        {
            get => _masterPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _masterPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The master user name for your new database.
        /// </summary>
        [Input("masterUsername", required: true)]
        public Input<string> MasterUsername { get; set; } = null!;

        /// <summary>
        /// The daily time range during which automated backups are created for your new database if automated backups are enabled. Must be in the hh24:mi-hh24:mi format. Example: `16:00-16:30`. Specified in Coordinated Universal Time (UTC).
        /// </summary>
        [Input("preferredBackupWindow")]
        public Input<string>? PreferredBackupWindow { get; set; }

        /// <summary>
        /// The weekly time range during which system maintenance can occur on your new database. Must be in the ddd:hh24:mi-ddd:hh24:mi format. Specified in Coordinated Universal Time (UTC). Example: `Tue:17:00-Tue:17:30`
        /// </summary>
        [Input("preferredMaintenanceWindow")]
        public Input<string>? PreferredMaintenanceWindow { get; set; }

        /// <summary>
        /// Specifies the accessibility options for your new database. A value of true specifies a database that is available to resources outside of your Lightsail account. A value of false specifies a database that is available only to your Lightsail resources in the same region as your database.
        /// </summary>
        [Input("publiclyAccessible")]
        public Input<bool>? PubliclyAccessible { get; set; }

        [Input("relationalDatabaseName", required: true)]
        public Input<string> RelationalDatabaseName { get; set; } = null!;

        /// <summary>
        /// Determines whether a final database snapshot is created before your database is deleted. If true is specified, no database snapshot is created. If false is specified, a database snapshot is created before your database is deleted. You must specify the final relational database snapshot name parameter if the skip final snapshot parameter is false.
        /// </summary>
        [Input("skipFinalSnapshot")]
        public Input<bool>? SkipFinalSnapshot { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the resource. To create a key-only tag, use an empty string as the value.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public DatabaseArgs()
        {
        }
        public static new DatabaseArgs Empty => new DatabaseArgs();
    }

    public sealed class DatabaseState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// When true , applies changes immediately. When false , applies changes during the preferred maintenance window. Some changes may cause an outage.
        /// </summary>
        [Input("applyImmediately")]
        public Input<bool>? ApplyImmediately { get; set; }

        /// <summary>
        /// The ARN of the Lightsail instance (matches `id`).
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// The Availability Zone in which to create your new database. Use the us-east-2a case-sensitive format.
        /// </summary>
        [Input("availabilityZone")]
        public Input<string>? AvailabilityZone { get; set; }

        /// <summary>
        /// When true, enables automated backup retention for your database. When false, disables automated backup retention for your database. Disabling backup retention deletes all automated database backups. Before disabling this, you may want to create a snapshot of your database.
        /// </summary>
        [Input("backupRetentionEnabled")]
        public Input<bool>? BackupRetentionEnabled { get; set; }

        /// <summary>
        /// The blueprint ID for your new database. A blueprint describes the major engine version of a database. You can get a list of database blueprints IDs by using the AWS CLI command: `aws lightsail get-relational-database-blueprints`
        /// </summary>
        [Input("blueprintId")]
        public Input<string>? BlueprintId { get; set; }

        /// <summary>
        /// The bundle ID for your new database. A bundle describes the performance specifications for your database (see list below). You can get a list of database bundle IDs by using the AWS CLI command: `aws lightsail get-relational-database-bundles`.
        /// </summary>
        [Input("bundleId")]
        public Input<string>? BundleId { get; set; }

        /// <summary>
        /// The certificate associated with the database.
        /// </summary>
        [Input("caCertificateIdentifier")]
        public Input<string>? CaCertificateIdentifier { get; set; }

        /// <summary>
        /// The number of vCPUs for the database.
        /// </summary>
        [Input("cpuCount")]
        public Input<int>? CpuCount { get; set; }

        /// <summary>
        /// The timestamp when the instance was created.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// The size of the disk for the database.
        /// </summary>
        [Input("diskSize")]
        public Input<double>? DiskSize { get; set; }

        /// <summary>
        /// The database software (for example, MySQL).
        /// </summary>
        [Input("engine")]
        public Input<string>? Engine { get; set; }

        /// <summary>
        /// The database engine version (for example, 5.7.23).
        /// </summary>
        [Input("engineVersion")]
        public Input<string>? EngineVersion { get; set; }

        /// <summary>
        /// The name of the database snapshot created if skip final snapshot is false, which is the default value for that parameter.
        /// </summary>
        [Input("finalSnapshotName")]
        public Input<string>? FinalSnapshotName { get; set; }

        /// <summary>
        /// The name of the master database created when the Lightsail database resource is created.
        /// </summary>
        [Input("masterDatabaseName")]
        public Input<string>? MasterDatabaseName { get; set; }

        /// <summary>
        /// The master endpoint fqdn for the database.
        /// </summary>
        [Input("masterEndpointAddress")]
        public Input<string>? MasterEndpointAddress { get; set; }

        /// <summary>
        /// The master endpoint network port for the database.
        /// </summary>
        [Input("masterEndpointPort")]
        public Input<int>? MasterEndpointPort { get; set; }

        [Input("masterPassword")]
        private Input<string>? _masterPassword;

        /// <summary>
        /// The password for the master user of your new database. The password can include any printable ASCII character except "/", """, or "@".
        /// </summary>
        public Input<string>? MasterPassword
        {
            get => _masterPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _masterPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The master user name for your new database.
        /// </summary>
        [Input("masterUsername")]
        public Input<string>? MasterUsername { get; set; }

        /// <summary>
        /// The daily time range during which automated backups are created for your new database if automated backups are enabled. Must be in the hh24:mi-hh24:mi format. Example: `16:00-16:30`. Specified in Coordinated Universal Time (UTC).
        /// </summary>
        [Input("preferredBackupWindow")]
        public Input<string>? PreferredBackupWindow { get; set; }

        /// <summary>
        /// The weekly time range during which system maintenance can occur on your new database. Must be in the ddd:hh24:mi-ddd:hh24:mi format. Specified in Coordinated Universal Time (UTC). Example: `Tue:17:00-Tue:17:30`
        /// </summary>
        [Input("preferredMaintenanceWindow")]
        public Input<string>? PreferredMaintenanceWindow { get; set; }

        /// <summary>
        /// Specifies the accessibility options for your new database. A value of true specifies a database that is available to resources outside of your Lightsail account. A value of false specifies a database that is available only to your Lightsail resources in the same region as your database.
        /// </summary>
        [Input("publiclyAccessible")]
        public Input<bool>? PubliclyAccessible { get; set; }

        /// <summary>
        /// The amount of RAM in GB for the database.
        /// </summary>
        [Input("ramSize")]
        public Input<double>? RamSize { get; set; }

        [Input("relationalDatabaseName")]
        public Input<string>? RelationalDatabaseName { get; set; }

        /// <summary>
        /// Describes the secondary Availability Zone of a high availability database. The secondary database is used for failover support of a high availability database.
        /// </summary>
        [Input("secondaryAvailabilityZone")]
        public Input<string>? SecondaryAvailabilityZone { get; set; }

        /// <summary>
        /// Determines whether a final database snapshot is created before your database is deleted. If true is specified, no database snapshot is created. If false is specified, a database snapshot is created before your database is deleted. You must specify the final relational database snapshot name parameter if the skip final snapshot parameter is false.
        /// </summary>
        [Input("skipFinalSnapshot")]
        public Input<bool>? SkipFinalSnapshot { get; set; }

        /// <summary>
        /// The support code for the database. Include this code in your email to support when you have questions about a database in Lightsail. This code enables our support team to look up your Lightsail information more easily.
        /// </summary>
        [Input("supportCode")]
        public Input<string>? SupportCode { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the resource. To create a key-only tag, use an empty string as the value.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        public DatabaseState()
        {
        }
        public static new DatabaseState Empty => new DatabaseState();
    }
}
