// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Lambda
{
    public static class GetLayerVersion
    {
        /// <summary>
        /// Provides information about a Lambda Layer Version.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var config = new Config();
        ///         var layerName = config.Require("layerName");
        ///         var existing = Output.Create(Aws.Lambda.GetLayerVersion.InvokeAsync(new Aws.Lambda.GetLayerVersionArgs
        ///         {
        ///             LayerName = layerName,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetLayerVersionResult> InvokeAsync(GetLayerVersionArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetLayerVersionResult>("aws:lambda/getLayerVersion:getLayerVersion", args ?? new GetLayerVersionArgs(), options.WithVersion());
    }


    public sealed class GetLayerVersionArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specific runtime the layer version must support. Conflicts with `version`. If specified, the latest available layer version supporting the provided runtime will be used.
        /// </summary>
        [Input("compatibleRuntime")]
        public string? CompatibleRuntime { get; set; }

        /// <summary>
        /// Name of the lambda layer.
        /// </summary>
        [Input("layerName", required: true)]
        public string LayerName { get; set; } = null!;

        /// <summary>
        /// Specific layer version. Conflicts with `compatible_runtime`. If omitted, the latest available layer version will be used.
        /// </summary>
        [Input("version")]
        public int? Version { get; set; }

        public GetLayerVersionArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetLayerVersionResult
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the Lambda Layer with version.
        /// </summary>
        public readonly string Arn;
        public readonly string? CompatibleRuntime;
        /// <summary>
        /// A list of [Runtimes](https://docs.aws.amazon.com/lambda/latest/dg/API_GetLayerVersion.html#SSS-GetLayerVersion-response-CompatibleRuntimes) the specific Lambda Layer version is compatible with.
        /// </summary>
        public readonly ImmutableArray<string> CompatibleRuntimes;
        /// <summary>
        /// The date this resource was created.
        /// </summary>
        public readonly string CreatedDate;
        /// <summary>
        /// Description of the specific Lambda Layer version.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the Lambda Layer without version.
        /// </summary>
        public readonly string LayerArn;
        public readonly string LayerName;
        /// <summary>
        /// License info associated with the specific Lambda Layer version.
        /// </summary>
        public readonly string LicenseInfo;
        /// <summary>
        /// The Amazon Resource Name (ARN) of a signing job.
        /// </summary>
        public readonly string SigningJobArn;
        /// <summary>
        /// The Amazon Resource Name (ARN) for a signing profile version.
        /// </summary>
        public readonly string SigningProfileVersionArn;
        /// <summary>
        /// Base64-encoded representation of raw SHA-256 sum of the zip file.
        /// </summary>
        public readonly string SourceCodeHash;
        /// <summary>
        /// The size in bytes of the function .zip file.
        /// </summary>
        public readonly int SourceCodeSize;
        /// <summary>
        /// This Lamba Layer version.
        /// </summary>
        public readonly int Version;

        [OutputConstructor]
        private GetLayerVersionResult(
            string arn,

            string? compatibleRuntime,

            ImmutableArray<string> compatibleRuntimes,

            string createdDate,

            string description,

            string id,

            string layerArn,

            string layerName,

            string licenseInfo,

            string signingJobArn,

            string signingProfileVersionArn,

            string sourceCodeHash,

            int sourceCodeSize,

            int version)
        {
            Arn = arn;
            CompatibleRuntime = compatibleRuntime;
            CompatibleRuntimes = compatibleRuntimes;
            CreatedDate = createdDate;
            Description = description;
            Id = id;
            LayerArn = layerArn;
            LayerName = layerName;
            LicenseInfo = licenseInfo;
            SigningJobArn = signingJobArn;
            SigningProfileVersionArn = signingProfileVersionArn;
            SourceCodeHash = sourceCodeHash;
            SourceCodeSize = sourceCodeSize;
            Version = version;
        }
    }
}
