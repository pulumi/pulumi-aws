// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Lambda
{
    /// <summary>
    /// Resource for managing an AWS Lambda Function Recursion Config.
    /// 
    /// &gt; Destruction of this resource will return the `recursive_loop` configuration back to the default value of `Terminate`.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Lambda.FunctionRecursionConfig("example", new()
    ///     {
    ///         FunctionName = "SomeFunction",
    ///         RecursiveLoop = "Allow",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import AWS Lambda Function Recursion Config using the `function_name`. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:lambda/functionRecursionConfig:FunctionRecursionConfig example SomeFunction
    /// ```
    /// </summary>
    [AwsResourceType("aws:lambda/functionRecursionConfig:FunctionRecursionConfig")]
    public partial class FunctionRecursionConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Lambda function name.
        /// </summary>
        [Output("functionName")]
        public Output<string> FunctionName { get; private set; } = null!;

        /// <summary>
        /// Lambda function recursion configuration. Valid values are `Allow` or `Terminate`.
        /// </summary>
        [Output("recursiveLoop")]
        public Output<string> RecursiveLoop { get; private set; } = null!;


        /// <summary>
        /// Create a FunctionRecursionConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FunctionRecursionConfig(string name, FunctionRecursionConfigArgs args, CustomResourceOptions? options = null)
            : base("aws:lambda/functionRecursionConfig:FunctionRecursionConfig", name, args ?? new FunctionRecursionConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FunctionRecursionConfig(string name, Input<string> id, FunctionRecursionConfigState? state = null, CustomResourceOptions? options = null)
            : base("aws:lambda/functionRecursionConfig:FunctionRecursionConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FunctionRecursionConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FunctionRecursionConfig Get(string name, Input<string> id, FunctionRecursionConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new FunctionRecursionConfig(name, id, state, options);
        }
    }

    public sealed class FunctionRecursionConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Lambda function name.
        /// </summary>
        [Input("functionName", required: true)]
        public Input<string> FunctionName { get; set; } = null!;

        /// <summary>
        /// Lambda function recursion configuration. Valid values are `Allow` or `Terminate`.
        /// </summary>
        [Input("recursiveLoop", required: true)]
        public Input<string> RecursiveLoop { get; set; } = null!;

        public FunctionRecursionConfigArgs()
        {
        }
        public static new FunctionRecursionConfigArgs Empty => new FunctionRecursionConfigArgs();
    }

    public sealed class FunctionRecursionConfigState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Lambda function name.
        /// </summary>
        [Input("functionName")]
        public Input<string>? FunctionName { get; set; }

        /// <summary>
        /// Lambda function recursion configuration. Valid values are `Allow` or `Terminate`.
        /// </summary>
        [Input("recursiveLoop")]
        public Input<string>? RecursiveLoop { get; set; }

        public FunctionRecursionConfigState()
        {
        }
        public static new FunctionRecursionConfigState Empty => new FunctionRecursionConfigState();
    }
}
