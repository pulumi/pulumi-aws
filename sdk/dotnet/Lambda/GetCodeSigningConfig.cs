// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Lambda
{
    public static class GetCodeSigningConfig
    {
        /// <summary>
        /// Provides information about a Lambda Code Signing Config. A code signing configuration defines a list of allowed signing profiles and defines the code-signing validation policy (action to be taken if deployment validation checks fail).
        /// 
        /// For information about Lambda code signing configurations and how to use them, see [configuring code signing for Lambda functions](https://docs.aws.amazon.com/lambda/latest/dg/configuration-codesigning.html)
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var existingCsc = Output.Create(Aws.Lambda.GetCodeSigningConfig.InvokeAsync(new Aws.Lambda.GetCodeSigningConfigArgs
        ///         {
        ///             Arn = $"arn:aws:lambda:{@var.Aws_region}:{@var.Aws_account}:code-signing-config:csc-0f6c334abcdea4d8b",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetCodeSigningConfigResult> InvokeAsync(GetCodeSigningConfigArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetCodeSigningConfigResult>("aws:lambda/getCodeSigningConfig:getCodeSigningConfig", args ?? new GetCodeSigningConfigArgs(), options.WithVersion());
    }


    public sealed class GetCodeSigningConfigArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the code signing configuration.
        /// </summary>
        [Input("arn", required: true)]
        public string Arn { get; set; } = null!;

        public GetCodeSigningConfigArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetCodeSigningConfigResult
    {
        /// <summary>
        /// List of allowed publishers as signing profiles for this code signing configuration.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCodeSigningConfigAllowedPublisherResult> AllowedPublishers;
        public readonly string Arn;
        /// <summary>
        /// Unique identifier for the code signing configuration.
        /// </summary>
        public readonly string ConfigId;
        /// <summary>
        /// Code signing configuration description.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The date and time that the code signing configuration was last modified.
        /// </summary>
        public readonly string LastModified;
        /// <summary>
        /// List of code signing policies that control the validation failure action for signature mismatch or expiry.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCodeSigningConfigPolicyResult> Policies;

        [OutputConstructor]
        private GetCodeSigningConfigResult(
            ImmutableArray<Outputs.GetCodeSigningConfigAllowedPublisherResult> allowedPublishers,

            string arn,

            string configId,

            string description,

            string id,

            string lastModified,

            ImmutableArray<Outputs.GetCodeSigningConfigPolicyResult> policies)
        {
            AllowedPublishers = allowedPublishers;
            Arn = arn;
            ConfigId = configId;
            Description = description;
            Id = id;
            LastModified = lastModified;
            Policies = policies;
        }
    }
}
