// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Lambda
{
    public static class GetCodeSigningConfig
    {
        /// <summary>
        /// Provides details about an AWS Lambda Code Signing Config. Use this data source to retrieve information about an existing code signing configuration for Lambda functions to ensure code integrity and authenticity.
        /// 
        /// For information about Lambda code signing configurations and how to use them, see [configuring code signing for Lambda functions](https://docs.aws.amazon.com/lambda/latest/dg/configuration-codesigning.html).
        /// 
        /// ## Example Usage
        /// 
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Lambda.GetCodeSigningConfig.Invoke(new()
        ///     {
        ///         Arn = "arn:aws:lambda:us-west-2:123456789012:code-signing-config:csc-0f6c334abcdea4d8b",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["configDetails"] = 
        ///         {
        ///             { "configId", example.Apply(getCodeSigningConfigResult =&gt; getCodeSigningConfigResult.ConfigId) },
        ///             { "description", example.Apply(getCodeSigningConfigResult =&gt; getCodeSigningConfigResult.Description) },
        ///             { "policy", example.Apply(getCodeSigningConfigResult =&gt; getCodeSigningConfigResult.Policies[0]?.UntrustedArtifactOnDeployment) },
        ///         },
        ///     };
        /// });
        /// ```
        /// 
        /// ### Use in Lambda Function
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // Get existing code signing configuration
        ///     var securityConfig = Aws.Lambda.GetCodeSigningConfig.Invoke(new()
        ///     {
        ///         Arn = codeSigningConfigArn,
        ///     });
        /// 
        ///     // Create Lambda function with code signing
        ///     var example = new Aws.Lambda.Function("example", new()
        ///     {
        ///         Code = new FileArchive("function.zip"),
        ///         Name = "secure-function",
        ///         Role = lambdaRole.Arn,
        ///         Handler = "index.handler",
        ///         Runtime = Aws.Lambda.Runtime.NodeJS20dX,
        ///         CodeSigningConfigArn = securityConfig.Apply(getCodeSigningConfigResult =&gt; getCodeSigningConfigResult.Arn),
        ///         Tags = 
        ///         {
        ///             { "Environment", "production" },
        ///             { "Security", "code-signed" },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ### Multi-Environment Configuration
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // Production code signing config
        ///     var prod = Aws.Lambda.GetCodeSigningConfig.Invoke(new()
        ///     {
        ///         Arn = "arn:aws:lambda:us-west-2:123456789012:code-signing-config:csc-prod-123",
        ///     });
        /// 
        ///     // Development code signing config
        ///     var dev = Aws.Lambda.GetCodeSigningConfig.Invoke(new()
        ///     {
        ///         Arn = "arn:aws:lambda:us-west-2:123456789012:code-signing-config:csc-dev-456",
        ///     });
        /// 
        ///     var prodPolicy = prod.Apply(getCodeSigningConfigResult =&gt; getCodeSigningConfigResult.Policies[0]?.UntrustedArtifactOnDeployment);
        /// 
        ///     var devPolicy = dev.Apply(getCodeSigningConfigResult =&gt; getCodeSigningConfigResult.Policies[0]?.UntrustedArtifactOnDeployment);
        /// 
        ///     var configComparison = 
        ///     {
        ///         { "prodEnforcement", prodPolicy },
        ///         { "devEnforcement", devPolicy },
        ///         { "policiesMatch", Output.Tuple(prodPolicy, devPolicy).Apply(values =&gt;
        ///         {
        ///             var prodPolicy = values.Item1;
        ///             var devPolicy = values.Item2;
        ///             return prodPolicy == devPolicy;
        ///         }) },
        ///     };
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["environmentComparison"] = configComparison,
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetCodeSigningConfigResult> InvokeAsync(GetCodeSigningConfigArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCodeSigningConfigResult>("aws:lambda/getCodeSigningConfig:getCodeSigningConfig", args ?? new GetCodeSigningConfigArgs(), options.WithDefaults());

        /// <summary>
        /// Provides details about an AWS Lambda Code Signing Config. Use this data source to retrieve information about an existing code signing configuration for Lambda functions to ensure code integrity and authenticity.
        /// 
        /// For information about Lambda code signing configurations and how to use them, see [configuring code signing for Lambda functions](https://docs.aws.amazon.com/lambda/latest/dg/configuration-codesigning.html).
        /// 
        /// ## Example Usage
        /// 
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Lambda.GetCodeSigningConfig.Invoke(new()
        ///     {
        ///         Arn = "arn:aws:lambda:us-west-2:123456789012:code-signing-config:csc-0f6c334abcdea4d8b",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["configDetails"] = 
        ///         {
        ///             { "configId", example.Apply(getCodeSigningConfigResult =&gt; getCodeSigningConfigResult.ConfigId) },
        ///             { "description", example.Apply(getCodeSigningConfigResult =&gt; getCodeSigningConfigResult.Description) },
        ///             { "policy", example.Apply(getCodeSigningConfigResult =&gt; getCodeSigningConfigResult.Policies[0]?.UntrustedArtifactOnDeployment) },
        ///         },
        ///     };
        /// });
        /// ```
        /// 
        /// ### Use in Lambda Function
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // Get existing code signing configuration
        ///     var securityConfig = Aws.Lambda.GetCodeSigningConfig.Invoke(new()
        ///     {
        ///         Arn = codeSigningConfigArn,
        ///     });
        /// 
        ///     // Create Lambda function with code signing
        ///     var example = new Aws.Lambda.Function("example", new()
        ///     {
        ///         Code = new FileArchive("function.zip"),
        ///         Name = "secure-function",
        ///         Role = lambdaRole.Arn,
        ///         Handler = "index.handler",
        ///         Runtime = Aws.Lambda.Runtime.NodeJS20dX,
        ///         CodeSigningConfigArn = securityConfig.Apply(getCodeSigningConfigResult =&gt; getCodeSigningConfigResult.Arn),
        ///         Tags = 
        ///         {
        ///             { "Environment", "production" },
        ///             { "Security", "code-signed" },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ### Multi-Environment Configuration
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // Production code signing config
        ///     var prod = Aws.Lambda.GetCodeSigningConfig.Invoke(new()
        ///     {
        ///         Arn = "arn:aws:lambda:us-west-2:123456789012:code-signing-config:csc-prod-123",
        ///     });
        /// 
        ///     // Development code signing config
        ///     var dev = Aws.Lambda.GetCodeSigningConfig.Invoke(new()
        ///     {
        ///         Arn = "arn:aws:lambda:us-west-2:123456789012:code-signing-config:csc-dev-456",
        ///     });
        /// 
        ///     var prodPolicy = prod.Apply(getCodeSigningConfigResult =&gt; getCodeSigningConfigResult.Policies[0]?.UntrustedArtifactOnDeployment);
        /// 
        ///     var devPolicy = dev.Apply(getCodeSigningConfigResult =&gt; getCodeSigningConfigResult.Policies[0]?.UntrustedArtifactOnDeployment);
        /// 
        ///     var configComparison = 
        ///     {
        ///         { "prodEnforcement", prodPolicy },
        ///         { "devEnforcement", devPolicy },
        ///         { "policiesMatch", Output.Tuple(prodPolicy, devPolicy).Apply(values =&gt;
        ///         {
        ///             var prodPolicy = values.Item1;
        ///             var devPolicy = values.Item2;
        ///             return prodPolicy == devPolicy;
        ///         }) },
        ///     };
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["environmentComparison"] = configComparison,
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetCodeSigningConfigResult> Invoke(GetCodeSigningConfigInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCodeSigningConfigResult>("aws:lambda/getCodeSigningConfig:getCodeSigningConfig", args ?? new GetCodeSigningConfigInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Provides details about an AWS Lambda Code Signing Config. Use this data source to retrieve information about an existing code signing configuration for Lambda functions to ensure code integrity and authenticity.
        /// 
        /// For information about Lambda code signing configurations and how to use them, see [configuring code signing for Lambda functions](https://docs.aws.amazon.com/lambda/latest/dg/configuration-codesigning.html).
        /// 
        /// ## Example Usage
        /// 
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Lambda.GetCodeSigningConfig.Invoke(new()
        ///     {
        ///         Arn = "arn:aws:lambda:us-west-2:123456789012:code-signing-config:csc-0f6c334abcdea4d8b",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["configDetails"] = 
        ///         {
        ///             { "configId", example.Apply(getCodeSigningConfigResult =&gt; getCodeSigningConfigResult.ConfigId) },
        ///             { "description", example.Apply(getCodeSigningConfigResult =&gt; getCodeSigningConfigResult.Description) },
        ///             { "policy", example.Apply(getCodeSigningConfigResult =&gt; getCodeSigningConfigResult.Policies[0]?.UntrustedArtifactOnDeployment) },
        ///         },
        ///     };
        /// });
        /// ```
        /// 
        /// ### Use in Lambda Function
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // Get existing code signing configuration
        ///     var securityConfig = Aws.Lambda.GetCodeSigningConfig.Invoke(new()
        ///     {
        ///         Arn = codeSigningConfigArn,
        ///     });
        /// 
        ///     // Create Lambda function with code signing
        ///     var example = new Aws.Lambda.Function("example", new()
        ///     {
        ///         Code = new FileArchive("function.zip"),
        ///         Name = "secure-function",
        ///         Role = lambdaRole.Arn,
        ///         Handler = "index.handler",
        ///         Runtime = Aws.Lambda.Runtime.NodeJS20dX,
        ///         CodeSigningConfigArn = securityConfig.Apply(getCodeSigningConfigResult =&gt; getCodeSigningConfigResult.Arn),
        ///         Tags = 
        ///         {
        ///             { "Environment", "production" },
        ///             { "Security", "code-signed" },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ### Multi-Environment Configuration
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // Production code signing config
        ///     var prod = Aws.Lambda.GetCodeSigningConfig.Invoke(new()
        ///     {
        ///         Arn = "arn:aws:lambda:us-west-2:123456789012:code-signing-config:csc-prod-123",
        ///     });
        /// 
        ///     // Development code signing config
        ///     var dev = Aws.Lambda.GetCodeSigningConfig.Invoke(new()
        ///     {
        ///         Arn = "arn:aws:lambda:us-west-2:123456789012:code-signing-config:csc-dev-456",
        ///     });
        /// 
        ///     var prodPolicy = prod.Apply(getCodeSigningConfigResult =&gt; getCodeSigningConfigResult.Policies[0]?.UntrustedArtifactOnDeployment);
        /// 
        ///     var devPolicy = dev.Apply(getCodeSigningConfigResult =&gt; getCodeSigningConfigResult.Policies[0]?.UntrustedArtifactOnDeployment);
        /// 
        ///     var configComparison = 
        ///     {
        ///         { "prodEnforcement", prodPolicy },
        ///         { "devEnforcement", devPolicy },
        ///         { "policiesMatch", Output.Tuple(prodPolicy, devPolicy).Apply(values =&gt;
        ///         {
        ///             var prodPolicy = values.Item1;
        ///             var devPolicy = values.Item2;
        ///             return prodPolicy == devPolicy;
        ///         }) },
        ///     };
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["environmentComparison"] = configComparison,
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetCodeSigningConfigResult> Invoke(GetCodeSigningConfigInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCodeSigningConfigResult>("aws:lambda/getCodeSigningConfig:getCodeSigningConfig", args ?? new GetCodeSigningConfigInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCodeSigningConfigArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ARN of the code signing configuration.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("arn", required: true)]
        public string Arn { get; set; } = null!;

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public string? Region { get; set; }

        public GetCodeSigningConfigArgs()
        {
        }
        public static new GetCodeSigningConfigArgs Empty => new GetCodeSigningConfigArgs();
    }

    public sealed class GetCodeSigningConfigInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ARN of the code signing configuration.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("arn", required: true)]
        public Input<string> Arn { get; set; } = null!;

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public GetCodeSigningConfigInvokeArgs()
        {
        }
        public static new GetCodeSigningConfigInvokeArgs Empty => new GetCodeSigningConfigInvokeArgs();
    }


    [OutputType]
    public sealed class GetCodeSigningConfigResult
    {
        /// <summary>
        /// List of allowed publishers as signing profiles for this code signing configuration. See below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCodeSigningConfigAllowedPublisherResult> AllowedPublishers;
        public readonly string Arn;
        /// <summary>
        /// Unique identifier for the code signing configuration.
        /// </summary>
        public readonly string ConfigId;
        /// <summary>
        /// Code signing configuration description.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Date and time that the code signing configuration was last modified.
        /// </summary>
        public readonly string LastModified;
        /// <summary>
        /// List of code signing policies that control the validation failure action for signature mismatch or expiry. See below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCodeSigningConfigPolicyResult> Policies;
        public readonly string Region;

        [OutputConstructor]
        private GetCodeSigningConfigResult(
            ImmutableArray<Outputs.GetCodeSigningConfigAllowedPublisherResult> allowedPublishers,

            string arn,

            string configId,

            string description,

            string id,

            string lastModified,

            ImmutableArray<Outputs.GetCodeSigningConfigPolicyResult> policies,

            string region)
        {
            AllowedPublishers = allowedPublishers;
            Arn = arn;
            ConfigId = configId;
            Description = description;
            Id = id;
            LastModified = lastModified;
            Policies = policies;
            Region = region;
        }
    }
}
