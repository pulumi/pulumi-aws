// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Lambda.Outputs
{

    [OutputType]
    public sealed class EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfig
    {
        /// <summary>
        /// Configuration block for authentication Lambda uses to access the schema registry.
        /// </summary>
        public readonly ImmutableArray<Outputs.EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfig> AccessConfigs;
        /// <summary>
        /// Record format that Lambda delivers to the function after schema validation. Valid values: `JSON`, `SOURCE`.
        /// </summary>
        public readonly string? EventRecordFormat;
        /// <summary>
        /// URI of the schema registry. For AWS Glue schema registries, use the ARN of the registry. For Confluent schema registries, use the registry URL.
        /// </summary>
        public readonly string? SchemaRegistryUri;
        /// <summary>
        /// Repeatable block that defines schema validation settings. These specify the message attributes that Lambda should validate and filter using the schema registry.
        /// </summary>
        public readonly ImmutableArray<Outputs.EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfig> SchemaValidationConfigs;

        [OutputConstructor]
        private EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfig(
            ImmutableArray<Outputs.EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigAccessConfig> accessConfigs,

            string? eventRecordFormat,

            string? schemaRegistryUri,

            ImmutableArray<Outputs.EventSourceMappingAmazonManagedKafkaEventSourceConfigSchemaRegistryConfigSchemaValidationConfig> schemaValidationConfigs)
        {
            AccessConfigs = accessConfigs;
            EventRecordFormat = eventRecordFormat;
            SchemaRegistryUri = schemaRegistryUri;
            SchemaValidationConfigs = schemaValidationConfigs;
        }
    }
}
