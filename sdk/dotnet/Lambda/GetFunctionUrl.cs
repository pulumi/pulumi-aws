// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Lambda
{
    public static class GetFunctionUrl
    {
        public static Task<GetFunctionUrlResult> InvokeAsync(GetFunctionUrlArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFunctionUrlResult>("aws:lambda/getFunctionUrl:getFunctionUrl", args ?? new GetFunctionUrlArgs(), options.WithDefaults());

        public static Output<GetFunctionUrlResult> Invoke(GetFunctionUrlInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFunctionUrlResult>("aws:lambda/getFunctionUrl:getFunctionUrl", args ?? new GetFunctionUrlInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFunctionUrlArgs : global::Pulumi.InvokeArgs
    {
        [Input("functionName", required: true)]
        public string FunctionName { get; set; } = null!;

        [Input("qualifier")]
        public string? Qualifier { get; set; }

        public GetFunctionUrlArgs()
        {
        }
        public static new GetFunctionUrlArgs Empty => new GetFunctionUrlArgs();
    }

    public sealed class GetFunctionUrlInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("functionName", required: true)]
        public Input<string> FunctionName { get; set; } = null!;

        [Input("qualifier")]
        public Input<string>? Qualifier { get; set; }

        public GetFunctionUrlInvokeArgs()
        {
        }
        public static new GetFunctionUrlInvokeArgs Empty => new GetFunctionUrlInvokeArgs();
    }


    [OutputType]
    public sealed class GetFunctionUrlResult
    {
        public readonly string AuthorizationType;
        public readonly ImmutableArray<Outputs.GetFunctionUrlCorResult> Cors;
        public readonly string CreationTime;
        public readonly string FunctionArn;
        public readonly string FunctionName;
        public readonly string FunctionUrl;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string LastModifiedTime;
        public readonly string? Qualifier;
        public readonly string UrlId;

        [OutputConstructor]
        private GetFunctionUrlResult(
            string authorizationType,

            ImmutableArray<Outputs.GetFunctionUrlCorResult> cors,

            string creationTime,

            string functionArn,

            string functionName,

            string functionUrl,

            string id,

            string lastModifiedTime,

            string? qualifier,

            string urlId)
        {
            AuthorizationType = authorizationType;
            Cors = cors;
            CreationTime = creationTime;
            FunctionArn = functionArn;
            FunctionName = functionName;
            FunctionUrl = functionUrl;
            Id = id;
            LastModifiedTime = lastModifiedTime;
            Qualifier = qualifier;
            UrlId = urlId;
        }
    }
}
