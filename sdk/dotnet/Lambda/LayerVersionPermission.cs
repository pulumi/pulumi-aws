// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Lambda
{
    /// <summary>
    /// Manages an AWS Lambda Layer Version Permission. Use this resource to share Lambda Layers with other AWS accounts, organizations, or make them publicly accessible.
    /// 
    /// For information about Lambda Layer Permissions and how to use them, see [Using Resource-based Policies for AWS Lambda](https://docs.aws.amazon.com/lambda/latest/dg/access-control-resource-based.html#permissions-resource-xaccountlayer).
    /// 
    /// &gt; **Note:** Setting `skipDestroy` to `true` means that the AWS Provider will not destroy any layer version permission, even when running `pulumi destroy`. Layer version permissions are thus intentional dangling resources that are not managed by Pulumi and may incur extra expense in your AWS account.
    /// 
    /// ## Example Usage
    /// 
    /// ### Share Layer with Specific Account
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Lambda layer to share
    ///     var example = new Aws.Lambda.LayerVersion("example", new()
    ///     {
    ///         Code = new FileArchive("layer.zip"),
    ///         LayerName = "shared_utilities",
    ///         Description = "Common utilities for Lambda functions",
    ///         CompatibleRuntimes = new[]
    ///         {
    ///             "nodejs20.x",
    ///             "python3.12",
    ///         },
    ///     });
    /// 
    ///     // Grant permission to specific AWS account
    ///     var exampleLayerVersionPermission = new Aws.Lambda.LayerVersionPermission("example", new()
    ///     {
    ///         LayerName = example.LayerName,
    ///         VersionNumber = example.Version,
    ///         Principal = "123456789012",
    ///         Action = "lambda:GetLayerVersion",
    ///         StatementId = "dev-account-access",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ### Share Layer with Organization
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Lambda.LayerVersionPermission("example", new()
    ///     {
    ///         LayerName = exampleAwsLambdaLayerVersion.LayerName,
    ///         VersionNumber = exampleAwsLambdaLayerVersion.Version,
    ///         Principal = "*",
    ///         OrganizationId = "o-1234567890",
    ///         Action = "lambda:GetLayerVersion",
    ///         StatementId = "org-wide-access",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ### Share Layer Publicly
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Lambda.LayerVersionPermission("example", new()
    ///     {
    ///         LayerName = exampleAwsLambdaLayerVersion.LayerName,
    ///         VersionNumber = exampleAwsLambdaLayerVersion.Version,
    ///         Principal = "*",
    ///         Action = "lambda:GetLayerVersion",
    ///         StatementId = "public-access",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ### Multiple Account Access
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Share with multiple specific accounts
    ///     var devAccount = new Aws.Lambda.LayerVersionPermission("dev_account", new()
    ///     {
    ///         LayerName = example.LayerName,
    ///         VersionNumber = example.Version,
    ///         Principal = "111111111111",
    ///         Action = "lambda:GetLayerVersion",
    ///         StatementId = "dev-account",
    ///     });
    /// 
    ///     var stagingAccount = new Aws.Lambda.LayerVersionPermission("staging_account", new()
    ///     {
    ///         LayerName = example.LayerName,
    ///         VersionNumber = example.Version,
    ///         Principal = "222222222222",
    ///         Action = "lambda:GetLayerVersion",
    ///         StatementId = "staging-account",
    ///     });
    /// 
    ///     var prodAccount = new Aws.Lambda.LayerVersionPermission("prod_account", new()
    ///     {
    ///         LayerName = example.LayerName,
    ///         VersionNumber = example.Version,
    ///         Principal = "333333333333",
    ///         Action = "lambda:GetLayerVersion",
    ///         StatementId = "prod-account",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// For backwards compatibility, the following legacy `pulumi import` command is also supported:
    /// 
    /// ```sh
    /// $ pulumi import aws:lambda/layerVersionPermission:LayerVersionPermission example arn:aws:lambda:us-west-2:123456789012:layer:shared_utilities,1
    /// ```
    /// </summary>
    [AwsResourceType("aws:lambda/layerVersionPermission:LayerVersionPermission")]
    public partial class LayerVersionPermission : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Action that will be allowed. `lambda:GetLayerVersion` is the standard value for layer access.
        /// </summary>
        [Output("action")]
        public Output<string> Action { get; private set; } = null!;

        /// <summary>
        /// Name or ARN of the Lambda Layer.
        /// </summary>
        [Output("layerName")]
        public Output<string> LayerName { get; private set; } = null!;

        /// <summary>
        /// AWS Organization ID that should be able to use your Lambda Layer. `principal` should be set to `*` when `organizationId` is provided.
        /// </summary>
        [Output("organizationId")]
        public Output<string?> OrganizationId { get; private set; } = null!;

        /// <summary>
        /// Full Lambda Layer Permission policy.
        /// </summary>
        [Output("policy")]
        public Output<string> Policy { get; private set; } = null!;

        /// <summary>
        /// AWS account ID that should be able to use your Lambda Layer. Use `*` to share with all AWS accounts.
        /// </summary>
        [Output("principal")]
        public Output<string> Principal { get; private set; } = null!;

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// Unique identifier for the current revision of the policy.
        /// </summary>
        [Output("revisionId")]
        public Output<string> RevisionId { get; private set; } = null!;

        /// <summary>
        /// Whether to retain the permission when the resource is destroyed. Default is `false`.
        /// </summary>
        [Output("skipDestroy")]
        public Output<bool?> SkipDestroy { get; private set; } = null!;

        /// <summary>
        /// Unique identifier for the permission statement.
        /// </summary>
        [Output("statementId")]
        public Output<string> StatementId { get; private set; } = null!;

        /// <summary>
        /// Version of Lambda Layer to grant access to. Note: permissions only apply to a single version of a layer.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Output("versionNumber")]
        public Output<int> VersionNumber { get; private set; } = null!;


        /// <summary>
        /// Create a LayerVersionPermission resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LayerVersionPermission(string name, LayerVersionPermissionArgs args, CustomResourceOptions? options = null)
            : base("aws:lambda/layerVersionPermission:LayerVersionPermission", name, args ?? new LayerVersionPermissionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LayerVersionPermission(string name, Input<string> id, LayerVersionPermissionState? state = null, CustomResourceOptions? options = null)
            : base("aws:lambda/layerVersionPermission:LayerVersionPermission", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LayerVersionPermission resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LayerVersionPermission Get(string name, Input<string> id, LayerVersionPermissionState? state = null, CustomResourceOptions? options = null)
        {
            return new LayerVersionPermission(name, id, state, options);
        }
    }

    public sealed class LayerVersionPermissionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Action that will be allowed. `lambda:GetLayerVersion` is the standard value for layer access.
        /// </summary>
        [Input("action", required: true)]
        public Input<string> Action { get; set; } = null!;

        /// <summary>
        /// Name or ARN of the Lambda Layer.
        /// </summary>
        [Input("layerName", required: true)]
        public Input<string> LayerName { get; set; } = null!;

        /// <summary>
        /// AWS Organization ID that should be able to use your Lambda Layer. `principal` should be set to `*` when `organizationId` is provided.
        /// </summary>
        [Input("organizationId")]
        public Input<string>? OrganizationId { get; set; }

        /// <summary>
        /// AWS account ID that should be able to use your Lambda Layer. Use `*` to share with all AWS accounts.
        /// </summary>
        [Input("principal", required: true)]
        public Input<string> Principal { get; set; } = null!;

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Whether to retain the permission when the resource is destroyed. Default is `false`.
        /// </summary>
        [Input("skipDestroy")]
        public Input<bool>? SkipDestroy { get; set; }

        /// <summary>
        /// Unique identifier for the permission statement.
        /// </summary>
        [Input("statementId", required: true)]
        public Input<string> StatementId { get; set; } = null!;

        /// <summary>
        /// Version of Lambda Layer to grant access to. Note: permissions only apply to a single version of a layer.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("versionNumber", required: true)]
        public Input<int> VersionNumber { get; set; } = null!;

        public LayerVersionPermissionArgs()
        {
        }
        public static new LayerVersionPermissionArgs Empty => new LayerVersionPermissionArgs();
    }

    public sealed class LayerVersionPermissionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Action that will be allowed. `lambda:GetLayerVersion` is the standard value for layer access.
        /// </summary>
        [Input("action")]
        public Input<string>? Action { get; set; }

        /// <summary>
        /// Name or ARN of the Lambda Layer.
        /// </summary>
        [Input("layerName")]
        public Input<string>? LayerName { get; set; }

        /// <summary>
        /// AWS Organization ID that should be able to use your Lambda Layer. `principal` should be set to `*` when `organizationId` is provided.
        /// </summary>
        [Input("organizationId")]
        public Input<string>? OrganizationId { get; set; }

        /// <summary>
        /// Full Lambda Layer Permission policy.
        /// </summary>
        [Input("policy")]
        public Input<string>? Policy { get; set; }

        /// <summary>
        /// AWS account ID that should be able to use your Lambda Layer. Use `*` to share with all AWS accounts.
        /// </summary>
        [Input("principal")]
        public Input<string>? Principal { get; set; }

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Unique identifier for the current revision of the policy.
        /// </summary>
        [Input("revisionId")]
        public Input<string>? RevisionId { get; set; }

        /// <summary>
        /// Whether to retain the permission when the resource is destroyed. Default is `false`.
        /// </summary>
        [Input("skipDestroy")]
        public Input<bool>? SkipDestroy { get; set; }

        /// <summary>
        /// Unique identifier for the permission statement.
        /// </summary>
        [Input("statementId")]
        public Input<string>? StatementId { get; set; }

        /// <summary>
        /// Version of Lambda Layer to grant access to. Note: permissions only apply to a single version of a layer.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("versionNumber")]
        public Input<int>? VersionNumber { get; set; }

        public LayerVersionPermissionState()
        {
        }
        public static new LayerVersionPermissionState Empty => new LayerVersionPermissionState();
    }
}
