// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Lambda
{
    /// <summary>
    /// Resource for managing an AWS Lambda Runtime Management Config.
    /// 
    /// Refer to the [AWS Lambda documentation](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html) for supported runtimes.
    /// 
    /// &gt; Deletion of this resource returns the runtime update mode to `Auto` (the default behavior).
    /// To leave the configured runtime management options in-place, use a `removed` block withe destroy lifecycle set to `false`.
    /// 
    /// ## Example Usage
    /// 
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Lambda.RuntimeManagementConfig("example", new()
    ///     {
    ///         FunctionName = test.FunctionName,
    ///         UpdateRuntimeOn = "FunctionUpdate",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ### `Manual` Update
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Lambda.RuntimeManagementConfig("example", new()
    ///     {
    ///         FunctionName = test.FunctionName,
    ///         UpdateRuntimeOn = "Manual",
    ///         RuntimeVersionArn = "arn:aws:lambda:us-east-1::runtime:abcd1234",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// &gt; Once the runtime update mode is set to `Manual`, the `aws.lambda.Function` `runtime` cannot be updated. To upgrade a runtime, the `update_runtime_on` argument must be set to `Auto` or `FunctionUpdate` prior to changing the function's `runtime` argument.
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import Lambda Runtime Management Config using a comma-delimited string combining `function_name` and `qualifier`. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:lambda/runtimeManagementConfig:RuntimeManagementConfig example my-function,$LATEST
    /// ```
    /// </summary>
    [AwsResourceType("aws:lambda/runtimeManagementConfig:RuntimeManagementConfig")]
    public partial class RuntimeManagementConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ARN of the function.
        /// </summary>
        [Output("functionArn")]
        public Output<string> FunctionArn { get; private set; } = null!;

        /// <summary>
        /// Name or ARN of the Lambda function.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Output("functionName")]
        public Output<string> FunctionName { get; private set; } = null!;

        /// <summary>
        /// Version of the function. This can be `$LATEST` or a published version number. If omitted, this resource will manage the runtime configuration for `$LATEST`.
        /// </summary>
        [Output("qualifier")]
        public Output<string?> Qualifier { get; private set; } = null!;

        /// <summary>
        /// ARN of the runtime version. Only required when `update_runtime_on` is `Manual`.
        /// </summary>
        [Output("runtimeVersionArn")]
        public Output<string?> RuntimeVersionArn { get; private set; } = null!;

        /// <summary>
        /// Runtime update mode. Valid values are `Auto`, `FunctionUpdate`, and `Manual`. When a function is created, the default mode is `Auto`.
        /// </summary>
        [Output("updateRuntimeOn")]
        public Output<string?> UpdateRuntimeOn { get; private set; } = null!;


        /// <summary>
        /// Create a RuntimeManagementConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RuntimeManagementConfig(string name, RuntimeManagementConfigArgs args, CustomResourceOptions? options = null)
            : base("aws:lambda/runtimeManagementConfig:RuntimeManagementConfig", name, args ?? new RuntimeManagementConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RuntimeManagementConfig(string name, Input<string> id, RuntimeManagementConfigState? state = null, CustomResourceOptions? options = null)
            : base("aws:lambda/runtimeManagementConfig:RuntimeManagementConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RuntimeManagementConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RuntimeManagementConfig Get(string name, Input<string> id, RuntimeManagementConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new RuntimeManagementConfig(name, id, state, options);
        }
    }

    public sealed class RuntimeManagementConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name or ARN of the Lambda function.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("functionName", required: true)]
        public Input<string> FunctionName { get; set; } = null!;

        /// <summary>
        /// Version of the function. This can be `$LATEST` or a published version number. If omitted, this resource will manage the runtime configuration for `$LATEST`.
        /// </summary>
        [Input("qualifier")]
        public Input<string>? Qualifier { get; set; }

        /// <summary>
        /// ARN of the runtime version. Only required when `update_runtime_on` is `Manual`.
        /// </summary>
        [Input("runtimeVersionArn")]
        public Input<string>? RuntimeVersionArn { get; set; }

        /// <summary>
        /// Runtime update mode. Valid values are `Auto`, `FunctionUpdate`, and `Manual`. When a function is created, the default mode is `Auto`.
        /// </summary>
        [Input("updateRuntimeOn")]
        public Input<string>? UpdateRuntimeOn { get; set; }

        public RuntimeManagementConfigArgs()
        {
        }
        public static new RuntimeManagementConfigArgs Empty => new RuntimeManagementConfigArgs();
    }

    public sealed class RuntimeManagementConfigState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ARN of the function.
        /// </summary>
        [Input("functionArn")]
        public Input<string>? FunctionArn { get; set; }

        /// <summary>
        /// Name or ARN of the Lambda function.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("functionName")]
        public Input<string>? FunctionName { get; set; }

        /// <summary>
        /// Version of the function. This can be `$LATEST` or a published version number. If omitted, this resource will manage the runtime configuration for `$LATEST`.
        /// </summary>
        [Input("qualifier")]
        public Input<string>? Qualifier { get; set; }

        /// <summary>
        /// ARN of the runtime version. Only required when `update_runtime_on` is `Manual`.
        /// </summary>
        [Input("runtimeVersionArn")]
        public Input<string>? RuntimeVersionArn { get; set; }

        /// <summary>
        /// Runtime update mode. Valid values are `Auto`, `FunctionUpdate`, and `Manual`. When a function is created, the default mode is `Auto`.
        /// </summary>
        [Input("updateRuntimeOn")]
        public Input<string>? UpdateRuntimeOn { get; set; }

        public RuntimeManagementConfigState()
        {
        }
        public static new RuntimeManagementConfigState Empty => new RuntimeManagementConfigState();
    }
}
