// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Lambda
{
    [AwsResourceType("aws:lambda/function:Function")]
    public partial class Function : global::Pulumi.CustomResource
    {
        [Output("architectures")]
        public Output<ImmutableArray<string>> Architectures { get; private set; } = null!;

        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("code")]
        public Output<Archive?> Code { get; private set; } = null!;

        [Output("codeSigningConfigArn")]
        public Output<string?> CodeSigningConfigArn { get; private set; } = null!;

        [Output("deadLetterConfig")]
        public Output<Outputs.FunctionDeadLetterConfig?> DeadLetterConfig { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("environment")]
        public Output<Outputs.FunctionEnvironment?> Environment { get; private set; } = null!;

        [Output("ephemeralStorage")]
        public Output<Outputs.FunctionEphemeralStorage> EphemeralStorage { get; private set; } = null!;

        [Output("fileSystemConfig")]
        public Output<Outputs.FunctionFileSystemConfig?> FileSystemConfig { get; private set; } = null!;

        [Output("handler")]
        public Output<string?> Handler { get; private set; } = null!;

        [Output("imageConfig")]
        public Output<Outputs.FunctionImageConfig?> ImageConfig { get; private set; } = null!;

        [Output("imageUri")]
        public Output<string?> ImageUri { get; private set; } = null!;

        [Output("invokeArn")]
        public Output<string> InvokeArn { get; private set; } = null!;

        [Output("kmsKeyArn")]
        public Output<string?> KmsKeyArn { get; private set; } = null!;

        [Output("lastModified")]
        public Output<string> LastModified { get; private set; } = null!;

        [Output("layers")]
        public Output<ImmutableArray<string>> Layers { get; private set; } = null!;

        [Output("memorySize")]
        public Output<int?> MemorySize { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("packageType")]
        public Output<string?> PackageType { get; private set; } = null!;

        [Output("publish")]
        public Output<bool?> Publish { get; private set; } = null!;

        [Output("qualifiedArn")]
        public Output<string> QualifiedArn { get; private set; } = null!;

        [Output("qualifiedInvokeArn")]
        public Output<string> QualifiedInvokeArn { get; private set; } = null!;

        [Output("reservedConcurrentExecutions")]
        public Output<int?> ReservedConcurrentExecutions { get; private set; } = null!;

        [Output("role")]
        public Output<string> Role { get; private set; } = null!;

        [Output("runtime")]
        public Output<string?> Runtime { get; private set; } = null!;

        [Output("s3Bucket")]
        public Output<string?> S3Bucket { get; private set; } = null!;

        [Output("s3Key")]
        public Output<string?> S3Key { get; private set; } = null!;

        [Output("s3ObjectVersion")]
        public Output<string?> S3ObjectVersion { get; private set; } = null!;

        [Output("signingJobArn")]
        public Output<string> SigningJobArn { get; private set; } = null!;

        [Output("signingProfileVersionArn")]
        public Output<string> SigningProfileVersionArn { get; private set; } = null!;

        [Output("snapStart")]
        public Output<Outputs.FunctionSnapStart?> SnapStart { get; private set; } = null!;

        [Output("sourceCodeHash")]
        public Output<string> SourceCodeHash { get; private set; } = null!;

        [Output("sourceCodeSize")]
        public Output<int> SourceCodeSize { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("timeout")]
        public Output<int?> Timeout { get; private set; } = null!;

        [Output("tracingConfig")]
        public Output<Outputs.FunctionTracingConfig> TracingConfig { get; private set; } = null!;

        [Output("version")]
        public Output<string> Version { get; private set; } = null!;

        [Output("vpcConfig")]
        public Output<Outputs.FunctionVpcConfig?> VpcConfig { get; private set; } = null!;


        /// <summary>
        /// Create a Function resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Function(string name, FunctionArgs args, CustomResourceOptions? options = null)
            : base("aws:lambda/function:Function", name, args ?? new FunctionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Function(string name, Input<string> id, FunctionState? state = null, CustomResourceOptions? options = null)
            : base("aws:lambda/function:Function", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Function resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Function Get(string name, Input<string> id, FunctionState? state = null, CustomResourceOptions? options = null)
        {
            return new Function(name, id, state, options);
        }
    }

    public sealed class FunctionArgs : global::Pulumi.ResourceArgs
    {
        [Input("architectures")]
        private InputList<string>? _architectures;
        public InputList<string> Architectures
        {
            get => _architectures ?? (_architectures = new InputList<string>());
            set => _architectures = value;
        }

        [Input("code")]
        public Input<Archive>? Code { get; set; }

        [Input("codeSigningConfigArn")]
        public Input<string>? CodeSigningConfigArn { get; set; }

        [Input("deadLetterConfig")]
        public Input<Inputs.FunctionDeadLetterConfigArgs>? DeadLetterConfig { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("environment")]
        public Input<Inputs.FunctionEnvironmentArgs>? Environment { get; set; }

        [Input("ephemeralStorage")]
        public Input<Inputs.FunctionEphemeralStorageArgs>? EphemeralStorage { get; set; }

        [Input("fileSystemConfig")]
        public Input<Inputs.FunctionFileSystemConfigArgs>? FileSystemConfig { get; set; }

        [Input("handler")]
        public Input<string>? Handler { get; set; }

        [Input("imageConfig")]
        public Input<Inputs.FunctionImageConfigArgs>? ImageConfig { get; set; }

        [Input("imageUri")]
        public Input<string>? ImageUri { get; set; }

        [Input("kmsKeyArn")]
        public Input<string>? KmsKeyArn { get; set; }

        [Input("layers")]
        private InputList<string>? _layers;
        public InputList<string> Layers
        {
            get => _layers ?? (_layers = new InputList<string>());
            set => _layers = value;
        }

        [Input("memorySize")]
        public Input<int>? MemorySize { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("packageType")]
        public Input<string>? PackageType { get; set; }

        [Input("publish")]
        public Input<bool>? Publish { get; set; }

        [Input("reservedConcurrentExecutions")]
        public Input<int>? ReservedConcurrentExecutions { get; set; }

        [Input("role", required: true)]
        public Input<string> Role { get; set; } = null!;

        [Input("runtime")]
        public InputUnion<string, Pulumi.Aws.Lambda.Runtime>? Runtime { get; set; }

        [Input("s3Bucket")]
        public Input<string>? S3Bucket { get; set; }

        [Input("s3Key")]
        public Input<string>? S3Key { get; set; }

        [Input("s3ObjectVersion")]
        public Input<string>? S3ObjectVersion { get; set; }

        [Input("snapStart")]
        public Input<Inputs.FunctionSnapStartArgs>? SnapStart { get; set; }

        [Input("sourceCodeHash")]
        public Input<string>? SourceCodeHash { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("timeout")]
        public Input<int>? Timeout { get; set; }

        [Input("tracingConfig")]
        public Input<Inputs.FunctionTracingConfigArgs>? TracingConfig { get; set; }

        [Input("vpcConfig")]
        public Input<Inputs.FunctionVpcConfigArgs>? VpcConfig { get; set; }

        public FunctionArgs()
        {
        }
        public static new FunctionArgs Empty => new FunctionArgs();
    }

    public sealed class FunctionState : global::Pulumi.ResourceArgs
    {
        [Input("architectures")]
        private InputList<string>? _architectures;
        public InputList<string> Architectures
        {
            get => _architectures ?? (_architectures = new InputList<string>());
            set => _architectures = value;
        }

        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("code")]
        public Input<Archive>? Code { get; set; }

        [Input("codeSigningConfigArn")]
        public Input<string>? CodeSigningConfigArn { get; set; }

        [Input("deadLetterConfig")]
        public Input<Inputs.FunctionDeadLetterConfigGetArgs>? DeadLetterConfig { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("environment")]
        public Input<Inputs.FunctionEnvironmentGetArgs>? Environment { get; set; }

        [Input("ephemeralStorage")]
        public Input<Inputs.FunctionEphemeralStorageGetArgs>? EphemeralStorage { get; set; }

        [Input("fileSystemConfig")]
        public Input<Inputs.FunctionFileSystemConfigGetArgs>? FileSystemConfig { get; set; }

        [Input("handler")]
        public Input<string>? Handler { get; set; }

        [Input("imageConfig")]
        public Input<Inputs.FunctionImageConfigGetArgs>? ImageConfig { get; set; }

        [Input("imageUri")]
        public Input<string>? ImageUri { get; set; }

        [Input("invokeArn")]
        public Input<string>? InvokeArn { get; set; }

        [Input("kmsKeyArn")]
        public Input<string>? KmsKeyArn { get; set; }

        [Input("lastModified")]
        public Input<string>? LastModified { get; set; }

        [Input("layers")]
        private InputList<string>? _layers;
        public InputList<string> Layers
        {
            get => _layers ?? (_layers = new InputList<string>());
            set => _layers = value;
        }

        [Input("memorySize")]
        public Input<int>? MemorySize { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("packageType")]
        public Input<string>? PackageType { get; set; }

        [Input("publish")]
        public Input<bool>? Publish { get; set; }

        [Input("qualifiedArn")]
        public Input<string>? QualifiedArn { get; set; }

        [Input("qualifiedInvokeArn")]
        public Input<string>? QualifiedInvokeArn { get; set; }

        [Input("reservedConcurrentExecutions")]
        public Input<int>? ReservedConcurrentExecutions { get; set; }

        [Input("role")]
        public Input<string>? Role { get; set; }

        [Input("runtime")]
        public InputUnion<string, Pulumi.Aws.Lambda.Runtime>? Runtime { get; set; }

        [Input("s3Bucket")]
        public Input<string>? S3Bucket { get; set; }

        [Input("s3Key")]
        public Input<string>? S3Key { get; set; }

        [Input("s3ObjectVersion")]
        public Input<string>? S3ObjectVersion { get; set; }

        [Input("signingJobArn")]
        public Input<string>? SigningJobArn { get; set; }

        [Input("signingProfileVersionArn")]
        public Input<string>? SigningProfileVersionArn { get; set; }

        [Input("snapStart")]
        public Input<Inputs.FunctionSnapStartGetArgs>? SnapStart { get; set; }

        [Input("sourceCodeHash")]
        public Input<string>? SourceCodeHash { get; set; }

        [Input("sourceCodeSize")]
        public Input<int>? SourceCodeSize { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("timeout")]
        public Input<int>? Timeout { get; set; }

        [Input("tracingConfig")]
        public Input<Inputs.FunctionTracingConfigGetArgs>? TracingConfig { get; set; }

        [Input("version")]
        public Input<string>? Version { get; set; }

        [Input("vpcConfig")]
        public Input<Inputs.FunctionVpcConfigGetArgs>? VpcConfig { get; set; }

        public FunctionState()
        {
        }
        public static new FunctionState Empty => new FunctionState();
    }
}
