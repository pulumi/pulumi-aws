// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Outposts
{
    public static class GetAsset
    {
        /// <summary>
        /// Information about a specific hardware asset in an Outpost.
        /// </summary>
        public static Task<GetAssetResult> InvokeAsync(GetAssetArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAssetResult>("aws:outposts/getAsset:getAsset", args ?? new GetAssetArgs(), options.WithDefaults());

        /// <summary>
        /// Information about a specific hardware asset in an Outpost.
        /// </summary>
        public static Output<GetAssetResult> Invoke(GetAssetInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetAssetResult>("aws:outposts/getAsset:getAsset", args ?? new GetAssetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAssetArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Outpost ARN.
        /// </summary>
        [Input("arn", required: true)]
        public string Arn { get; set; } = null!;

        /// <summary>
        /// ID of the asset.
        /// </summary>
        [Input("assetId", required: true)]
        public string AssetId { get; set; } = null!;

        public GetAssetArgs()
        {
        }
        public static new GetAssetArgs Empty => new GetAssetArgs();
    }

    public sealed class GetAssetInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Outpost ARN.
        /// </summary>
        [Input("arn", required: true)]
        public Input<string> Arn { get; set; } = null!;

        /// <summary>
        /// ID of the asset.
        /// </summary>
        [Input("assetId", required: true)]
        public Input<string> AssetId { get; set; } = null!;

        public GetAssetInvokeArgs()
        {
        }
        public static new GetAssetInvokeArgs Empty => new GetAssetInvokeArgs();
    }


    [OutputType]
    public sealed class GetAssetResult
    {
        public readonly string Arn;
        public readonly string AssetId;
        /// <summary>
        /// Type of the asset.
        /// </summary>
        public readonly string AssetType;
        /// <summary>
        /// Host ID of the Dedicated Hosts on the asset, if a Dedicated Host is provisioned.
        /// </summary>
        public readonly string HostId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Position of an asset in a rack measured in rack units.
        /// </summary>
        public readonly int RackElevation;
        /// <summary>
        /// Rack ID of the asset.
        /// </summary>
        public readonly string RackId;

        [OutputConstructor]
        private GetAssetResult(
            string arn,

            string assetId,

            string assetType,

            string hostId,

            string id,

            int rackElevation,

            string rackId)
        {
            Arn = arn;
            AssetId = assetId;
            AssetType = assetType;
            HostId = hostId;
            Id = id;
            RackElevation = rackElevation;
            RackId = rackId;
        }
    }
}
