// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Outposts
{
    public static class GetOutposts
    {
        /// <summary>
        /// Provides details about multiple Outposts.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const example = aws.outposts.getOutposts({
        ///     siteId: data.aws_outposts_site.id,
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// example = aws.outposts.get_outposts(site_id=%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Outposts.GetOutposts.Invoke(new()
        ///     {
        ///         SiteId = data.Aws_outposts_site.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/outposts"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := outposts.GetOutposts(ctx, &amp;outposts.GetOutpostsArgs{
        /// 			SiteId: pulumi.StringRef(data.Aws_outposts_site.Id),
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.outposts.OutpostsFunctions;
        /// import com.pulumi.aws.outposts.inputs.GetOutpostsArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var example = OutpostsFunctions.getOutposts(GetOutpostsArgs.builder()
        ///             .siteId(data.aws_outposts_site().id())
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   example:
        ///     fn::invoke:
        ///       Function: aws:outposts:getOutposts
        ///       Arguments:
        ///         siteId: ${data.aws_outposts_site.id}
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetOutpostsResult> InvokeAsync(GetOutpostsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOutpostsResult>("aws:outposts/getOutposts:getOutposts", args ?? new GetOutpostsArgs(), options.WithDefaults());

        /// <summary>
        /// Provides details about multiple Outposts.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const example = aws.outposts.getOutposts({
        ///     siteId: data.aws_outposts_site.id,
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// example = aws.outposts.get_outposts(site_id=%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Outposts.GetOutposts.Invoke(new()
        ///     {
        ///         SiteId = data.Aws_outposts_site.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/outposts"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := outposts.GetOutposts(ctx, &amp;outposts.GetOutpostsArgs{
        /// 			SiteId: pulumi.StringRef(data.Aws_outposts_site.Id),
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.outposts.OutpostsFunctions;
        /// import com.pulumi.aws.outposts.inputs.GetOutpostsArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var example = OutpostsFunctions.getOutposts(GetOutpostsArgs.builder()
        ///             .siteId(data.aws_outposts_site().id())
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   example:
        ///     fn::invoke:
        ///       Function: aws:outposts:getOutposts
        ///       Arguments:
        ///         siteId: ${data.aws_outposts_site.id}
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetOutpostsResult> Invoke(GetOutpostsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOutpostsResult>("aws:outposts/getOutposts:getOutposts", args ?? new GetOutpostsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOutpostsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Availability Zone name.
        /// </summary>
        [Input("availabilityZone")]
        public string? AvailabilityZone { get; set; }

        /// <summary>
        /// Availability Zone identifier.
        /// </summary>
        [Input("availabilityZoneId")]
        public string? AvailabilityZoneId { get; set; }

        /// <summary>
        /// AWS Account identifier of the Outpost owner.
        /// </summary>
        [Input("ownerId")]
        public string? OwnerId { get; set; }

        /// <summary>
        /// Site identifier.
        /// </summary>
        [Input("siteId")]
        public string? SiteId { get; set; }

        public GetOutpostsArgs()
        {
        }
        public static new GetOutpostsArgs Empty => new GetOutpostsArgs();
    }

    public sealed class GetOutpostsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Availability Zone name.
        /// </summary>
        [Input("availabilityZone")]
        public Input<string>? AvailabilityZone { get; set; }

        /// <summary>
        /// Availability Zone identifier.
        /// </summary>
        [Input("availabilityZoneId")]
        public Input<string>? AvailabilityZoneId { get; set; }

        /// <summary>
        /// AWS Account identifier of the Outpost owner.
        /// </summary>
        [Input("ownerId")]
        public Input<string>? OwnerId { get; set; }

        /// <summary>
        /// Site identifier.
        /// </summary>
        [Input("siteId")]
        public Input<string>? SiteId { get; set; }

        public GetOutpostsInvokeArgs()
        {
        }
        public static new GetOutpostsInvokeArgs Empty => new GetOutpostsInvokeArgs();
    }


    [OutputType]
    public sealed class GetOutpostsResult
    {
        /// <summary>
        /// Set of Amazon Resource Names (ARNs).
        /// </summary>
        public readonly ImmutableArray<string> Arns;
        public readonly string AvailabilityZone;
        public readonly string AvailabilityZoneId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Set of identifiers.
        /// </summary>
        public readonly ImmutableArray<string> Ids;
        public readonly string OwnerId;
        public readonly string SiteId;

        [OutputConstructor]
        private GetOutpostsResult(
            ImmutableArray<string> arns,

            string availabilityZone,

            string availabilityZoneId,

            string id,

            ImmutableArray<string> ids,

            string ownerId,

            string siteId)
        {
            Arns = arns;
            AvailabilityZone = availabilityZone;
            AvailabilityZoneId = availabilityZoneId;
            Id = id;
            Ids = ids;
            OwnerId = ownerId;
            SiteId = siteId;
        }
    }
}
