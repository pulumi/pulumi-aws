// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Detective
{
    /// <summary>
    /// Provides a resource to manage an [Amazon Detective Member](https://docs.aws.amazon.com/detective/latest/APIReference/API_CreateMembers.html).
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleGraph = new Aws.Detective.Graph("exampleGraph");
    /// 
    ///     var exampleMember = new Aws.Detective.Member("exampleMember", new()
    ///     {
    ///         AccountId = "AWS ACCOUNT ID",
    ///         EmailAddress = "EMAIL",
    ///         GraphArn = exampleGraph.Id,
    ///         Message = "Message of the invitation",
    ///         DisableEmailNotification = true,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import `aws_detective_member` using the ARN of the graph followed by the account ID of the member account. For example:
    /// 
    /// ```sh
    ///  $ pulumi import aws:detective/member:Member example arn:aws:detective:us-east-1:123456789101:graph:231684d34gh74g4bae1dbc7bd807d02d/123456789012
    /// ```
    /// </summary>
    [AwsResourceType("aws:detective/member:Member")]
    public partial class Member : global::Pulumi.CustomResource
    {
        /// <summary>
        /// AWS account ID for the account.
        /// </summary>
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        /// <summary>
        /// AWS account ID for the administrator account.
        /// </summary>
        [Output("administratorId")]
        public Output<string> AdministratorId { get; private set; } = null!;

        /// <summary>
        /// If set to true, then the root user of the invited account will _not_ receive an email notification. This notification is in addition to an alert that the root user receives in AWS Personal Health Dashboard. By default, this is set to `false`.
        /// </summary>
        [Output("disableEmailNotification")]
        public Output<bool?> DisableEmailNotification { get; private set; } = null!;

        [Output("disabledReason")]
        public Output<string> DisabledReason { get; private set; } = null!;

        /// <summary>
        /// Email address for the account.
        /// </summary>
        [Output("emailAddress")]
        public Output<string> EmailAddress { get; private set; } = null!;

        /// <summary>
        /// ARN of the behavior graph to invite the member accounts to contribute their data to.
        /// </summary>
        [Output("graphArn")]
        public Output<string> GraphArn { get; private set; } = null!;

        /// <summary>
        /// Date and time, in UTC and extended RFC 3339 format, when an Amazon Detective membership invitation was last sent to the account.
        /// </summary>
        [Output("invitedTime")]
        public Output<string> InvitedTime { get; private set; } = null!;

        /// <summary>
        /// A custom message to include in the invitation. Amazon Detective adds this message to the standard content that it sends for an invitation.
        /// </summary>
        [Output("message")]
        public Output<string?> Message { get; private set; } = null!;

        /// <summary>
        /// Current membership status of the member account.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Date and time, in UTC and extended RFC 3339 format, of the most recent change to the member account's status.
        /// </summary>
        [Output("updatedTime")]
        public Output<string> UpdatedTime { get; private set; } = null!;

        /// <summary>
        /// Data volume in bytes per day for the member account.
        /// </summary>
        [Output("volumeUsageInBytes")]
        public Output<string> VolumeUsageInBytes { get; private set; } = null!;


        /// <summary>
        /// Create a Member resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Member(string name, MemberArgs args, CustomResourceOptions? options = null)
            : base("aws:detective/member:Member", name, args ?? new MemberArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Member(string name, Input<string> id, MemberState? state = null, CustomResourceOptions? options = null)
            : base("aws:detective/member:Member", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Member resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Member Get(string name, Input<string> id, MemberState? state = null, CustomResourceOptions? options = null)
        {
            return new Member(name, id, state, options);
        }
    }

    public sealed class MemberArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// AWS account ID for the account.
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// If set to true, then the root user of the invited account will _not_ receive an email notification. This notification is in addition to an alert that the root user receives in AWS Personal Health Dashboard. By default, this is set to `false`.
        /// </summary>
        [Input("disableEmailNotification")]
        public Input<bool>? DisableEmailNotification { get; set; }

        /// <summary>
        /// Email address for the account.
        /// </summary>
        [Input("emailAddress", required: true)]
        public Input<string> EmailAddress { get; set; } = null!;

        /// <summary>
        /// ARN of the behavior graph to invite the member accounts to contribute their data to.
        /// </summary>
        [Input("graphArn", required: true)]
        public Input<string> GraphArn { get; set; } = null!;

        /// <summary>
        /// A custom message to include in the invitation. Amazon Detective adds this message to the standard content that it sends for an invitation.
        /// </summary>
        [Input("message")]
        public Input<string>? Message { get; set; }

        public MemberArgs()
        {
        }
        public static new MemberArgs Empty => new MemberArgs();
    }

    public sealed class MemberState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// AWS account ID for the account.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// AWS account ID for the administrator account.
        /// </summary>
        [Input("administratorId")]
        public Input<string>? AdministratorId { get; set; }

        /// <summary>
        /// If set to true, then the root user of the invited account will _not_ receive an email notification. This notification is in addition to an alert that the root user receives in AWS Personal Health Dashboard. By default, this is set to `false`.
        /// </summary>
        [Input("disableEmailNotification")]
        public Input<bool>? DisableEmailNotification { get; set; }

        [Input("disabledReason")]
        public Input<string>? DisabledReason { get; set; }

        /// <summary>
        /// Email address for the account.
        /// </summary>
        [Input("emailAddress")]
        public Input<string>? EmailAddress { get; set; }

        /// <summary>
        /// ARN of the behavior graph to invite the member accounts to contribute their data to.
        /// </summary>
        [Input("graphArn")]
        public Input<string>? GraphArn { get; set; }

        /// <summary>
        /// Date and time, in UTC and extended RFC 3339 format, when an Amazon Detective membership invitation was last sent to the account.
        /// </summary>
        [Input("invitedTime")]
        public Input<string>? InvitedTime { get; set; }

        /// <summary>
        /// A custom message to include in the invitation. Amazon Detective adds this message to the standard content that it sends for an invitation.
        /// </summary>
        [Input("message")]
        public Input<string>? Message { get; set; }

        /// <summary>
        /// Current membership status of the member account.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Date and time, in UTC and extended RFC 3339 format, of the most recent change to the member account's status.
        /// </summary>
        [Input("updatedTime")]
        public Input<string>? UpdatedTime { get; set; }

        /// <summary>
        /// Data volume in bytes per day for the member account.
        /// </summary>
        [Input("volumeUsageInBytes")]
        public Input<string>? VolumeUsageInBytes { get; set; }

        public MemberState()
        {
        }
        public static new MemberState Empty => new MemberState();
    }
}
