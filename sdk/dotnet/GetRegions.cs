// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws
{
    public static class GetRegions
    {
        /// <summary>
        /// Provides information about AWS Regions. Can be used to filter regions i.e., by Opt-In status or only regions enabled for current account. To get details like endpoint and description of each region the data source can be combined with the `aws.getRegion` data source.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Enabled AWS Regions:
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const current = aws.getRegions({});
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// current = aws.get_regions()
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var current = Aws.GetRegions.Invoke();
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := aws.GetRegions(ctx, nil, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.AwsFunctions;
        /// import com.pulumi.aws.inputs.GetRegionsArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var current = AwsFunctions.getRegions();
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   current:
        ///     fn::invoke:
        ///       Function: aws:getRegions
        ///       Arguments: {}
        /// ```
        /// 
        /// All the regions regardless of the availability
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const current = aws.getRegions({
        ///     allRegions: true,
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// current = aws.get_regions(all_regions=True)
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var current = Aws.GetRegions.Invoke(new()
        ///     {
        ///         AllRegions = true,
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := aws.GetRegions(ctx, &amp;aws.GetRegionsArgs{
        /// 			AllRegions: pulumi.BoolRef(true),
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.AwsFunctions;
        /// import com.pulumi.aws.inputs.GetRegionsArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var current = AwsFunctions.getRegions(GetRegionsArgs.builder()
        ///             .allRegions(true)
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   current:
        ///     fn::invoke:
        ///       Function: aws:getRegions
        ///       Arguments:
        ///         allRegions: true
        /// ```
        /// 
        /// To see regions that are filtered by `"not-opted-in"`, the `all_regions` argument needs to be set to `true` or no results will be returned.
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const current = aws.getRegions({
        ///     allRegions: true,
        ///     filters: [{
        ///         name: "opt-in-status",
        ///         values: ["not-opted-in"],
        ///     }],
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// current = aws.get_regions(all_regions=True,
        ///     filters=[aws.GetRegionsFilterArgs(
        ///         name="opt-in-status",
        ///         values=["not-opted-in"],
        ///     )])
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var current = Aws.GetRegions.Invoke(new()
        ///     {
        ///         AllRegions = true,
        ///         Filters = new[]
        ///         {
        ///             new Aws.Inputs.GetRegionsFilterInputArgs
        ///             {
        ///                 Name = "opt-in-status",
        ///                 Values = new[]
        ///                 {
        ///                     "not-opted-in",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := aws.GetRegions(ctx, &amp;aws.GetRegionsArgs{
        /// 			AllRegions: pulumi.BoolRef(true),
        /// 			Filters: []aws.GetRegionsFilter{
        /// 				{
        /// 					Name: "opt-in-status",
        /// 					Values: []string{
        /// 						"not-opted-in",
        /// 					},
        /// 				},
        /// 			},
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.AwsFunctions;
        /// import com.pulumi.aws.inputs.GetRegionsArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var current = AwsFunctions.getRegions(GetRegionsArgs.builder()
        ///             .allRegions(true)
        ///             .filters(GetRegionsFilterArgs.builder()
        ///                 .name("opt-in-status")
        ///                 .values("not-opted-in")
        ///                 .build())
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   current:
        ///     fn::invoke:
        ///       Function: aws:getRegions
        ///       Arguments:
        ///         allRegions: true
        ///         filters:
        ///           - name: opt-in-status
        ///             values:
        ///               - not-opted-in
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetRegionsResult> InvokeAsync(GetRegionsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRegionsResult>("aws:index/getRegions:getRegions", args ?? new GetRegionsArgs(), options.WithDefaults());

        /// <summary>
        /// Provides information about AWS Regions. Can be used to filter regions i.e., by Opt-In status or only regions enabled for current account. To get details like endpoint and description of each region the data source can be combined with the `aws.getRegion` data source.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Enabled AWS Regions:
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const current = aws.getRegions({});
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// current = aws.get_regions()
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var current = Aws.GetRegions.Invoke();
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := aws.GetRegions(ctx, nil, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.AwsFunctions;
        /// import com.pulumi.aws.inputs.GetRegionsArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var current = AwsFunctions.getRegions();
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   current:
        ///     fn::invoke:
        ///       Function: aws:getRegions
        ///       Arguments: {}
        /// ```
        /// 
        /// All the regions regardless of the availability
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const current = aws.getRegions({
        ///     allRegions: true,
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// current = aws.get_regions(all_regions=True)
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var current = Aws.GetRegions.Invoke(new()
        ///     {
        ///         AllRegions = true,
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := aws.GetRegions(ctx, &amp;aws.GetRegionsArgs{
        /// 			AllRegions: pulumi.BoolRef(true),
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.AwsFunctions;
        /// import com.pulumi.aws.inputs.GetRegionsArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var current = AwsFunctions.getRegions(GetRegionsArgs.builder()
        ///             .allRegions(true)
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   current:
        ///     fn::invoke:
        ///       Function: aws:getRegions
        ///       Arguments:
        ///         allRegions: true
        /// ```
        /// 
        /// To see regions that are filtered by `"not-opted-in"`, the `all_regions` argument needs to be set to `true` or no results will be returned.
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const current = aws.getRegions({
        ///     allRegions: true,
        ///     filters: [{
        ///         name: "opt-in-status",
        ///         values: ["not-opted-in"],
        ///     }],
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// current = aws.get_regions(all_regions=True,
        ///     filters=[aws.GetRegionsFilterArgs(
        ///         name="opt-in-status",
        ///         values=["not-opted-in"],
        ///     )])
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var current = Aws.GetRegions.Invoke(new()
        ///     {
        ///         AllRegions = true,
        ///         Filters = new[]
        ///         {
        ///             new Aws.Inputs.GetRegionsFilterInputArgs
        ///             {
        ///                 Name = "opt-in-status",
        ///                 Values = new[]
        ///                 {
        ///                     "not-opted-in",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := aws.GetRegions(ctx, &amp;aws.GetRegionsArgs{
        /// 			AllRegions: pulumi.BoolRef(true),
        /// 			Filters: []aws.GetRegionsFilter{
        /// 				{
        /// 					Name: "opt-in-status",
        /// 					Values: []string{
        /// 						"not-opted-in",
        /// 					},
        /// 				},
        /// 			},
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.AwsFunctions;
        /// import com.pulumi.aws.inputs.GetRegionsArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var current = AwsFunctions.getRegions(GetRegionsArgs.builder()
        ///             .allRegions(true)
        ///             .filters(GetRegionsFilterArgs.builder()
        ///                 .name("opt-in-status")
        ///                 .values("not-opted-in")
        ///                 .build())
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   current:
        ///     fn::invoke:
        ///       Function: aws:getRegions
        ///       Arguments:
        ///         allRegions: true
        ///         filters:
        ///           - name: opt-in-status
        ///             values:
        ///               - not-opted-in
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetRegionsResult> Invoke(GetRegionsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRegionsResult>("aws:index/getRegions:getRegions", args ?? new GetRegionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRegionsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// If true the source will query all regions regardless of availability.
        /// </summary>
        [Input("allRegions")]
        public bool? AllRegions { get; set; }

        [Input("filters")]
        private List<Inputs.GetRegionsFilterArgs>? _filters;

        /// <summary>
        /// Configuration block(s) to use as filters. Detailed below.
        /// </summary>
        public List<Inputs.GetRegionsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetRegionsFilterArgs>());
            set => _filters = value;
        }

        public GetRegionsArgs()
        {
        }
        public static new GetRegionsArgs Empty => new GetRegionsArgs();
    }

    public sealed class GetRegionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// If true the source will query all regions regardless of availability.
        /// </summary>
        [Input("allRegions")]
        public Input<bool>? AllRegions { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetRegionsFilterInputArgs>? _filters;

        /// <summary>
        /// Configuration block(s) to use as filters. Detailed below.
        /// </summary>
        public InputList<Inputs.GetRegionsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetRegionsFilterInputArgs>());
            set => _filters = value;
        }

        public GetRegionsInvokeArgs()
        {
        }
        public static new GetRegionsInvokeArgs Empty => new GetRegionsInvokeArgs();
    }


    [OutputType]
    public sealed class GetRegionsResult
    {
        public readonly bool? AllRegions;
        public readonly ImmutableArray<Outputs.GetRegionsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Names of regions that meets the criteria.
        /// </summary>
        public readonly ImmutableArray<string> Names;

        [OutputConstructor]
        private GetRegionsResult(
            bool? allRegions,

            ImmutableArray<Outputs.GetRegionsFilterResult> filters,

            string id,

            ImmutableArray<string> names)
        {
            AllRegions = allRegions;
            Filters = filters;
            Id = id;
            Names = names;
        }
    }
}
