// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.LB
{
    /// <summary>
    /// Provides a ELBv2 Trust Store Revocation for use with Application Load Balancer Listener resources.
    /// 
    /// ## Example Usage
    /// ### Trust Store With Revocations
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testTrustStore = new Aws.LB.TrustStore("testTrustStore", new()
    ///     {
    ///         CaCertificatesBundleS3Bucket = "...",
    ///         CaCertificatesBundleS3Key = "...",
    ///     });
    /// 
    ///     var testTrustStoreRevocation = new Aws.LB.TrustStoreRevocation("testTrustStoreRevocation", new()
    ///     {
    ///         TrustStoreArn = testTrustStore.Arn,
    ///         RevocationsS3Bucket = "...",
    ///         RevocationsS3Key = "...",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import Trust Store Revocations using their ARN. For example:
    /// 
    /// ```sh
    ///  $ pulumi import aws:lb/trustStoreRevocation:TrustStoreRevocation example arn:aws:elasticloadbalancing:us-west-2:187416307283:truststore/my-trust-store/20cfe21448b66314,6
    /// ```
    /// </summary>
    [AwsResourceType("aws:lb/trustStoreRevocation:TrustStoreRevocation")]
    public partial class TrustStoreRevocation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// AWS assigned RevocationId, (number).
        /// </summary>
        [Output("revocationId")]
        public Output<int> RevocationId { get; private set; } = null!;

        /// <summary>
        /// S3 Bucket name holding the client certificate CA bundle.
        /// </summary>
        [Output("revocationsS3Bucket")]
        public Output<string> RevocationsS3Bucket { get; private set; } = null!;

        /// <summary>
        /// S3 Bucket name holding the client certificate CA bundle.
        /// </summary>
        [Output("revocationsS3Key")]
        public Output<string> RevocationsS3Key { get; private set; } = null!;

        /// <summary>
        /// Version Id of CA bundle S3 bucket object, if versioned, defaults to latest if omitted.
        /// </summary>
        [Output("revocationsS3ObjectVersion")]
        public Output<string?> RevocationsS3ObjectVersion { get; private set; } = null!;

        /// <summary>
        /// Trust Store ARN.
        /// </summary>
        [Output("trustStoreArn")]
        public Output<string> TrustStoreArn { get; private set; } = null!;


        /// <summary>
        /// Create a TrustStoreRevocation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TrustStoreRevocation(string name, TrustStoreRevocationArgs args, CustomResourceOptions? options = null)
            : base("aws:lb/trustStoreRevocation:TrustStoreRevocation", name, args ?? new TrustStoreRevocationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TrustStoreRevocation(string name, Input<string> id, TrustStoreRevocationState? state = null, CustomResourceOptions? options = null)
            : base("aws:lb/trustStoreRevocation:TrustStoreRevocation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TrustStoreRevocation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TrustStoreRevocation Get(string name, Input<string> id, TrustStoreRevocationState? state = null, CustomResourceOptions? options = null)
        {
            return new TrustStoreRevocation(name, id, state, options);
        }
    }

    public sealed class TrustStoreRevocationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// S3 Bucket name holding the client certificate CA bundle.
        /// </summary>
        [Input("revocationsS3Bucket", required: true)]
        public Input<string> RevocationsS3Bucket { get; set; } = null!;

        /// <summary>
        /// S3 Bucket name holding the client certificate CA bundle.
        /// </summary>
        [Input("revocationsS3Key", required: true)]
        public Input<string> RevocationsS3Key { get; set; } = null!;

        /// <summary>
        /// Version Id of CA bundle S3 bucket object, if versioned, defaults to latest if omitted.
        /// </summary>
        [Input("revocationsS3ObjectVersion")]
        public Input<string>? RevocationsS3ObjectVersion { get; set; }

        /// <summary>
        /// Trust Store ARN.
        /// </summary>
        [Input("trustStoreArn", required: true)]
        public Input<string> TrustStoreArn { get; set; } = null!;

        public TrustStoreRevocationArgs()
        {
        }
        public static new TrustStoreRevocationArgs Empty => new TrustStoreRevocationArgs();
    }

    public sealed class TrustStoreRevocationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// AWS assigned RevocationId, (number).
        /// </summary>
        [Input("revocationId")]
        public Input<int>? RevocationId { get; set; }

        /// <summary>
        /// S3 Bucket name holding the client certificate CA bundle.
        /// </summary>
        [Input("revocationsS3Bucket")]
        public Input<string>? RevocationsS3Bucket { get; set; }

        /// <summary>
        /// S3 Bucket name holding the client certificate CA bundle.
        /// </summary>
        [Input("revocationsS3Key")]
        public Input<string>? RevocationsS3Key { get; set; }

        /// <summary>
        /// Version Id of CA bundle S3 bucket object, if versioned, defaults to latest if omitted.
        /// </summary>
        [Input("revocationsS3ObjectVersion")]
        public Input<string>? RevocationsS3ObjectVersion { get; set; }

        /// <summary>
        /// Trust Store ARN.
        /// </summary>
        [Input("trustStoreArn")]
        public Input<string>? TrustStoreArn { get; set; }

        public TrustStoreRevocationState()
        {
        }
        public static new TrustStoreRevocationState Empty => new TrustStoreRevocationState();
    }
}
