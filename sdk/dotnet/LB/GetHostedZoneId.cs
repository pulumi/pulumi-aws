// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.LB
{
    public static class GetHostedZoneId
    {
        public static Task<GetHostedZoneIdResult> InvokeAsync(GetHostedZoneIdArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetHostedZoneIdResult>("aws:lb/getHostedZoneId:getHostedZoneId", args ?? new GetHostedZoneIdArgs(), options.WithDefaults());

        public static Output<GetHostedZoneIdResult> Invoke(GetHostedZoneIdInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetHostedZoneIdResult>("aws:lb/getHostedZoneId:getHostedZoneId", args ?? new GetHostedZoneIdInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetHostedZoneIdArgs : global::Pulumi.InvokeArgs
    {
        [Input("loadBalancerType")]
        public string? LoadBalancerType { get; set; }

        [Input("region")]
        public string? Region { get; set; }

        public GetHostedZoneIdArgs()
        {
        }
        public static new GetHostedZoneIdArgs Empty => new GetHostedZoneIdArgs();
    }

    public sealed class GetHostedZoneIdInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("loadBalancerType")]
        public Input<string>? LoadBalancerType { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        public GetHostedZoneIdInvokeArgs()
        {
        }
        public static new GetHostedZoneIdInvokeArgs Empty => new GetHostedZoneIdInvokeArgs();
    }


    [OutputType]
    public sealed class GetHostedZoneIdResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? LoadBalancerType;
        public readonly string? Region;

        [OutputConstructor]
        private GetHostedZoneIdResult(
            string id,

            string? loadBalancerType,

            string? region)
        {
            Id = id;
            LoadBalancerType = loadBalancerType;
            Region = region;
        }
    }
}
