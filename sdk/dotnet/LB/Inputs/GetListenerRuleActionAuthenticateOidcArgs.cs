// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.LB.Inputs
{

    public sealed class GetListenerRuleActionAuthenticateOidcInputArgs : global::Pulumi.ResourceArgs
    {
        [Input("authenticationRequestExtraParams", required: true)]
        private InputMap<string>? _authenticationRequestExtraParams;

        /// <summary>
        /// Set of additional parameters for the request.
        /// Detailed below.
        /// </summary>
        public InputMap<string> AuthenticationRequestExtraParams
        {
            get => _authenticationRequestExtraParams ?? (_authenticationRequestExtraParams = new InputMap<string>());
            set => _authenticationRequestExtraParams = value;
        }

        /// <summary>
        /// The authorization endpoint of the IdP.
        /// </summary>
        [Input("authorizationEndpoint", required: true)]
        public Input<string> AuthorizationEndpoint { get; set; } = null!;

        /// <summary>
        /// OAuth 2.0 client identifier.
        /// </summary>
        [Input("clientId", required: true)]
        public Input<string> ClientId { get; set; } = null!;

        /// <summary>
        /// OIDC issuer identifier of the IdP.
        /// </summary>
        [Input("issuer", required: true)]
        public Input<string> Issuer { get; set; } = null!;

        /// <summary>
        /// Behavior when the client is not authenticated.
        /// </summary>
        [Input("onUnauthenticatedRequest", required: true)]
        public Input<string> OnUnauthenticatedRequest { get; set; } = null!;

        /// <summary>
        /// Set of user claims requested.
        /// </summary>
        [Input("scope", required: true)]
        public Input<string> Scope { get; set; } = null!;

        /// <summary>
        /// Name of the cookie used to maintain session information.
        /// </summary>
        [Input("sessionCookieName", required: true)]
        public Input<string> SessionCookieName { get; set; } = null!;

        /// <summary>
        /// Maximum duration of the authentication session in seconds.
        /// </summary>
        [Input("sessionTimeout", required: true)]
        public Input<int> SessionTimeout { get; set; } = null!;

        /// <summary>
        /// The token endpoint of the IdP.
        /// </summary>
        [Input("tokenEndpoint", required: true)]
        public Input<string> TokenEndpoint { get; set; } = null!;

        /// <summary>
        /// The user info endpoint of the IdP.
        /// </summary>
        [Input("userInfoEndpoint", required: true)]
        public Input<string> UserInfoEndpoint { get; set; } = null!;

        public GetListenerRuleActionAuthenticateOidcInputArgs()
        {
        }
        public static new GetListenerRuleActionAuthenticateOidcInputArgs Empty => new GetListenerRuleActionAuthenticateOidcInputArgs();
    }
}
