// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Signer
{
    [AwsResourceType("aws:signer/signingJob:SigningJob")]
    public partial class SigningJob : global::Pulumi.CustomResource
    {
        [Output("completedAt")]
        public Output<string> CompletedAt { get; private set; } = null!;

        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        [Output("destination")]
        public Output<Outputs.SigningJobDestination> Destination { get; private set; } = null!;

        [Output("ignoreSigningJobFailure")]
        public Output<bool?> IgnoreSigningJobFailure { get; private set; } = null!;

        [Output("jobId")]
        public Output<string> JobId { get; private set; } = null!;

        [Output("jobInvoker")]
        public Output<string> JobInvoker { get; private set; } = null!;

        [Output("jobOwner")]
        public Output<string> JobOwner { get; private set; } = null!;

        [Output("platformDisplayName")]
        public Output<string> PlatformDisplayName { get; private set; } = null!;

        [Output("platformId")]
        public Output<string> PlatformId { get; private set; } = null!;

        [Output("profileName")]
        public Output<string> ProfileName { get; private set; } = null!;

        [Output("profileVersion")]
        public Output<string> ProfileVersion { get; private set; } = null!;

        [Output("requestedBy")]
        public Output<string> RequestedBy { get; private set; } = null!;

        [Output("revocationRecords")]
        public Output<ImmutableArray<Outputs.SigningJobRevocationRecord>> RevocationRecords { get; private set; } = null!;

        [Output("signatureExpiresAt")]
        public Output<string> SignatureExpiresAt { get; private set; } = null!;

        [Output("signedObjects")]
        public Output<ImmutableArray<Outputs.SigningJobSignedObject>> SignedObjects { get; private set; } = null!;

        [Output("source")]
        public Output<Outputs.SigningJobSource> Source { get; private set; } = null!;

        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        [Output("statusReason")]
        public Output<string> StatusReason { get; private set; } = null!;


        /// <summary>
        /// Create a SigningJob resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SigningJob(string name, SigningJobArgs args, CustomResourceOptions? options = null)
            : base("aws:signer/signingJob:SigningJob", name, args ?? new SigningJobArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SigningJob(string name, Input<string> id, SigningJobState? state = null, CustomResourceOptions? options = null)
            : base("aws:signer/signingJob:SigningJob", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SigningJob resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SigningJob Get(string name, Input<string> id, SigningJobState? state = null, CustomResourceOptions? options = null)
        {
            return new SigningJob(name, id, state, options);
        }
    }

    public sealed class SigningJobArgs : global::Pulumi.ResourceArgs
    {
        [Input("destination", required: true)]
        public Input<Inputs.SigningJobDestinationArgs> Destination { get; set; } = null!;

        [Input("ignoreSigningJobFailure")]
        public Input<bool>? IgnoreSigningJobFailure { get; set; }

        [Input("profileName", required: true)]
        public Input<string> ProfileName { get; set; } = null!;

        [Input("source", required: true)]
        public Input<Inputs.SigningJobSourceArgs> Source { get; set; } = null!;

        public SigningJobArgs()
        {
        }
        public static new SigningJobArgs Empty => new SigningJobArgs();
    }

    public sealed class SigningJobState : global::Pulumi.ResourceArgs
    {
        [Input("completedAt")]
        public Input<string>? CompletedAt { get; set; }

        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        [Input("destination")]
        public Input<Inputs.SigningJobDestinationGetArgs>? Destination { get; set; }

        [Input("ignoreSigningJobFailure")]
        public Input<bool>? IgnoreSigningJobFailure { get; set; }

        [Input("jobId")]
        public Input<string>? JobId { get; set; }

        [Input("jobInvoker")]
        public Input<string>? JobInvoker { get; set; }

        [Input("jobOwner")]
        public Input<string>? JobOwner { get; set; }

        [Input("platformDisplayName")]
        public Input<string>? PlatformDisplayName { get; set; }

        [Input("platformId")]
        public Input<string>? PlatformId { get; set; }

        [Input("profileName")]
        public Input<string>? ProfileName { get; set; }

        [Input("profileVersion")]
        public Input<string>? ProfileVersion { get; set; }

        [Input("requestedBy")]
        public Input<string>? RequestedBy { get; set; }

        [Input("revocationRecords")]
        private InputList<Inputs.SigningJobRevocationRecordGetArgs>? _revocationRecords;
        public InputList<Inputs.SigningJobRevocationRecordGetArgs> RevocationRecords
        {
            get => _revocationRecords ?? (_revocationRecords = new InputList<Inputs.SigningJobRevocationRecordGetArgs>());
            set => _revocationRecords = value;
        }

        [Input("signatureExpiresAt")]
        public Input<string>? SignatureExpiresAt { get; set; }

        [Input("signedObjects")]
        private InputList<Inputs.SigningJobSignedObjectGetArgs>? _signedObjects;
        public InputList<Inputs.SigningJobSignedObjectGetArgs> SignedObjects
        {
            get => _signedObjects ?? (_signedObjects = new InputList<Inputs.SigningJobSignedObjectGetArgs>());
            set => _signedObjects = value;
        }

        [Input("source")]
        public Input<Inputs.SigningJobSourceGetArgs>? Source { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("statusReason")]
        public Input<string>? StatusReason { get; set; }

        public SigningJobState()
        {
        }
        public static new SigningJobState Empty => new SigningJobState();
    }
}
