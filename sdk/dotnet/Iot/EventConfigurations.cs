// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Iot
{
    /// <summary>
    /// Manages IoT event configurations.
    /// 
    /// &gt; **NOTE:** Deleting this resource does not disable the event configurations, the resource in simply removed from state instead.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Iot.EventConfigurations("example", new()
    ///     {
    ///         Configurations = 
    ///         {
    ///             { "CA_CERTIFICATE", false },
    ///             { "CERTIFICATE", true },
    ///             { "JOB", false },
    ///             { "JOB_EXECUTION", false },
    ///             { "POLICY", false },
    ///             { "THING", true },
    ///             { "THING_GROUP", false },
    ///             { "THING_GROUP_HIERARCHY", false },
    ///             { "THING_GROUP_MEMBERSHIP", false },
    ///             { "THING_TYPE", false },
    ///             { "THING_TYPE_ASSOCIATION", false },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import IoT Event Configurations using the AWS Region. For example:
    /// 
    /// ```sh
    ///  $ pulumi import aws:iot/eventConfigurations:EventConfigurations example us-west-2
    /// ```
    /// </summary>
    [AwsResourceType("aws:iot/eventConfigurations:EventConfigurations")]
    public partial class EventConfigurations : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Map. The new event configuration values. You can use only these strings as keys: `THING_GROUP_HIERARCHY`, `THING_GROUP_MEMBERSHIP`, `THING_TYPE`, `THING_TYPE_ASSOCIATION`, `THING_GROUP`, `THING`, `POLICY`, `CA_CERTIFICATE`, `JOB_EXECUTION`, `CERTIFICATE`, `JOB`. Use boolean for values of mapping.
        /// </summary>
        [Output("eventConfigurations")]
        public Output<ImmutableDictionary<string, bool>> Configurations { get; private set; } = null!;


        /// <summary>
        /// Create a EventConfigurations resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EventConfigurations(string name, EventConfigurationsArgs args, CustomResourceOptions? options = null)
            : base("aws:iot/eventConfigurations:EventConfigurations", name, args ?? new EventConfigurationsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EventConfigurations(string name, Input<string> id, EventConfigurationsState? state = null, CustomResourceOptions? options = null)
            : base("aws:iot/eventConfigurations:EventConfigurations", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EventConfigurations resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EventConfigurations Get(string name, Input<string> id, EventConfigurationsState? state = null, CustomResourceOptions? options = null)
        {
            return new EventConfigurations(name, id, state, options);
        }
    }

    public sealed class EventConfigurationsArgs : global::Pulumi.ResourceArgs
    {
        [Input("eventConfigurations", required: true)]
        private InputMap<bool>? _eventConfigurations;

        /// <summary>
        /// Map. The new event configuration values. You can use only these strings as keys: `THING_GROUP_HIERARCHY`, `THING_GROUP_MEMBERSHIP`, `THING_TYPE`, `THING_TYPE_ASSOCIATION`, `THING_GROUP`, `THING`, `POLICY`, `CA_CERTIFICATE`, `JOB_EXECUTION`, `CERTIFICATE`, `JOB`. Use boolean for values of mapping.
        /// </summary>
        public InputMap<bool> Configurations
        {
            get => _eventConfigurations ?? (_eventConfigurations = new InputMap<bool>());
            set => _eventConfigurations = value;
        }

        public EventConfigurationsArgs()
        {
        }
        public static new EventConfigurationsArgs Empty => new EventConfigurationsArgs();
    }

    public sealed class EventConfigurationsState : global::Pulumi.ResourceArgs
    {
        [Input("eventConfigurations")]
        private InputMap<bool>? _eventConfigurations;

        /// <summary>
        /// Map. The new event configuration values. You can use only these strings as keys: `THING_GROUP_HIERARCHY`, `THING_GROUP_MEMBERSHIP`, `THING_TYPE`, `THING_TYPE_ASSOCIATION`, `THING_GROUP`, `THING`, `POLICY`, `CA_CERTIFICATE`, `JOB_EXECUTION`, `CERTIFICATE`, `JOB`. Use boolean for values of mapping.
        /// </summary>
        public InputMap<bool> Configurations
        {
            get => _eventConfigurations ?? (_eventConfigurations = new InputMap<bool>());
            set => _eventConfigurations = value;
        }

        public EventConfigurationsState()
        {
        }
        public static new EventConfigurationsState Empty => new EventConfigurationsState();
    }
}
