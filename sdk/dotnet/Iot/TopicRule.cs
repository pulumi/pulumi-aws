// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Iot
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var mytopic = new Aws.Sns.Topic("mytopic", new Aws.Sns.TopicArgs
    ///         {
    ///         });
    ///         var myerrortopic = new Aws.Sns.Topic("myerrortopic", new Aws.Sns.TopicArgs
    ///         {
    ///         });
    ///         var role = new Aws.Iam.Role("role", new Aws.Iam.RoleArgs
    ///         {
    ///             AssumeRolePolicy = @"{
    ///   ""Version"": ""2012-10-17"",
    ///   ""Statement"": [
    ///     {
    ///       ""Effect"": ""Allow"",
    ///       ""Principal"": {
    ///         ""Service"": ""iot.amazonaws.com""
    ///       },
    ///       ""Action"": ""sts:AssumeRole""
    ///     }
    ///   ]
    /// }
    /// ",
    ///         });
    ///         var rule = new Aws.Iot.TopicRule("rule", new Aws.Iot.TopicRuleArgs
    ///         {
    ///             Description = "Example rule",
    ///             Enabled = true,
    ///             Sql = "SELECT * FROM 'topic/test'",
    ///             SqlVersion = "2016-03-23",
    ///             Sns = new Aws.Iot.Inputs.TopicRuleSnsArgs
    ///             {
    ///                 MessageFormat = "RAW",
    ///                 RoleArn = role.Arn,
    ///                 TargetArn = mytopic.Arn,
    ///             },
    ///             ErrorAction = new Aws.Iot.Inputs.TopicRuleErrorActionArgs
    ///             {
    ///                 Sns = new Aws.Iot.Inputs.TopicRuleErrorActionSnsArgs
    ///                 {
    ///                     MessageFormat = "RAW",
    ///                     RoleArn = role.Arn,
    ///                     TargetArn = myerrortopic.Arn,
    ///                 },
    ///             },
    ///         });
    ///         var iamPolicyForLambda = new Aws.Iam.RolePolicy("iamPolicyForLambda", new Aws.Iam.RolePolicyArgs
    ///         {
    ///             Role = role.Id,
    ///             Policy = mytopic.Arn.Apply(arn =&gt; @$"{{
    ///   ""Version"": ""2012-10-17"",
    ///   ""Statement"": [
    ///     {{
    ///         ""Effect"": ""Allow"",
    ///         ""Action"": [
    ///             ""sns:Publish""
    ///         ],
    ///         ""Resource"": ""{arn}""
    ///     }}
    ///   ]
    /// }}
    /// "),
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// IoT Topic Rules can be imported using the `name`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import aws:iot/topicRule:TopicRule rule &lt;name&gt;
    /// ```
    /// </summary>
    public partial class TopicRule : Pulumi.CustomResource
    {
        /// <summary>
        /// The ARN of the topic rule
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("cloudwatchAlarm")]
        public Output<Outputs.TopicRuleCloudwatchAlarm?> CloudwatchAlarm { get; private set; } = null!;

        [Output("cloudwatchMetric")]
        public Output<Outputs.TopicRuleCloudwatchMetric?> CloudwatchMetric { get; private set; } = null!;

        /// <summary>
        /// The description of the rule.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("dynamodb")]
        public Output<Outputs.TopicRuleDynamodb?> Dynamodb { get; private set; } = null!;

        [Output("dynamodbv2s")]
        public Output<ImmutableArray<Outputs.TopicRuleDynamodbv2>> Dynamodbv2s { get; private set; } = null!;

        [Output("elasticsearch")]
        public Output<Outputs.TopicRuleElasticsearch?> Elasticsearch { get; private set; } = null!;

        /// <summary>
        /// Specifies whether the rule is enabled.
        /// </summary>
        [Output("enabled")]
        public Output<bool> Enabled { get; private set; } = null!;

        /// <summary>
        /// Configuration block with error action to be associated with the rule. See the documentation for `cloudwatch_alarm`, `cloudwatch_metric`, `dynamodb`, `dynamodbv2`, `elasticsearch`, `firehose`, `iot_analytics`, `iot_events`, `kinesis`, `lambda`, `republish`, `s3`, `step_functions`, `sns`, `sqs` configuration blocks for further configuration details.
        /// </summary>
        [Output("errorAction")]
        public Output<Outputs.TopicRuleErrorAction?> ErrorAction { get; private set; } = null!;

        [Output("firehose")]
        public Output<Outputs.TopicRuleFirehose?> Firehose { get; private set; } = null!;

        [Output("iotAnalytics")]
        public Output<ImmutableArray<Outputs.TopicRuleIotAnalytic>> IotAnalytics { get; private set; } = null!;

        [Output("iotEvents")]
        public Output<ImmutableArray<Outputs.TopicRuleIotEvent>> IotEvents { get; private set; } = null!;

        [Output("kinesis")]
        public Output<Outputs.TopicRuleKinesis?> Kinesis { get; private set; } = null!;

        [Output("lambda")]
        public Output<Outputs.TopicRuleLambda?> Lambda { get; private set; } = null!;

        /// <summary>
        /// The name of the rule.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("republish")]
        public Output<Outputs.TopicRuleRepublish?> Republish { get; private set; } = null!;

        [Output("s3")]
        public Output<Outputs.TopicRuleS3?> S3 { get; private set; } = null!;

        [Output("sns")]
        public Output<Outputs.TopicRuleSns?> Sns { get; private set; } = null!;

        /// <summary>
        /// The SQL statement used to query the topic. For more information, see AWS IoT SQL Reference (http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference) in the AWS IoT Developer Guide.
        /// </summary>
        [Output("sql")]
        public Output<string> Sql { get; private set; } = null!;

        /// <summary>
        /// The version of the SQL rules engine to use when evaluating the rule.
        /// </summary>
        [Output("sqlVersion")]
        public Output<string> SqlVersion { get; private set; } = null!;

        [Output("sqs")]
        public Output<Outputs.TopicRuleSqs?> Sqs { get; private set; } = null!;

        [Output("stepFunctions")]
        public Output<ImmutableArray<Outputs.TopicRuleStepFunction>> StepFunctions { get; private set; } = null!;

        /// <summary>
        /// Key-value map of resource tags
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a TopicRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TopicRule(string name, TopicRuleArgs args, CustomResourceOptions? options = null)
            : base("aws:iot/topicRule:TopicRule", name, args ?? new TopicRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TopicRule(string name, Input<string> id, TopicRuleState? state = null, CustomResourceOptions? options = null)
            : base("aws:iot/topicRule:TopicRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TopicRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TopicRule Get(string name, Input<string> id, TopicRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new TopicRule(name, id, state, options);
        }
    }

    public sealed class TopicRuleArgs : Pulumi.ResourceArgs
    {
        [Input("cloudwatchAlarm")]
        public Input<Inputs.TopicRuleCloudwatchAlarmArgs>? CloudwatchAlarm { get; set; }

        [Input("cloudwatchMetric")]
        public Input<Inputs.TopicRuleCloudwatchMetricArgs>? CloudwatchMetric { get; set; }

        /// <summary>
        /// The description of the rule.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("dynamodb")]
        public Input<Inputs.TopicRuleDynamodbArgs>? Dynamodb { get; set; }

        [Input("dynamodbv2s")]
        private InputList<Inputs.TopicRuleDynamodbv2Args>? _dynamodbv2s;
        public InputList<Inputs.TopicRuleDynamodbv2Args> Dynamodbv2s
        {
            get => _dynamodbv2s ?? (_dynamodbv2s = new InputList<Inputs.TopicRuleDynamodbv2Args>());
            set => _dynamodbv2s = value;
        }

        [Input("elasticsearch")]
        public Input<Inputs.TopicRuleElasticsearchArgs>? Elasticsearch { get; set; }

        /// <summary>
        /// Specifies whether the rule is enabled.
        /// </summary>
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        /// <summary>
        /// Configuration block with error action to be associated with the rule. See the documentation for `cloudwatch_alarm`, `cloudwatch_metric`, `dynamodb`, `dynamodbv2`, `elasticsearch`, `firehose`, `iot_analytics`, `iot_events`, `kinesis`, `lambda`, `republish`, `s3`, `step_functions`, `sns`, `sqs` configuration blocks for further configuration details.
        /// </summary>
        [Input("errorAction")]
        public Input<Inputs.TopicRuleErrorActionArgs>? ErrorAction { get; set; }

        [Input("firehose")]
        public Input<Inputs.TopicRuleFirehoseArgs>? Firehose { get; set; }

        [Input("iotAnalytics")]
        private InputList<Inputs.TopicRuleIotAnalyticArgs>? _iotAnalytics;
        public InputList<Inputs.TopicRuleIotAnalyticArgs> IotAnalytics
        {
            get => _iotAnalytics ?? (_iotAnalytics = new InputList<Inputs.TopicRuleIotAnalyticArgs>());
            set => _iotAnalytics = value;
        }

        [Input("iotEvents")]
        private InputList<Inputs.TopicRuleIotEventArgs>? _iotEvents;
        public InputList<Inputs.TopicRuleIotEventArgs> IotEvents
        {
            get => _iotEvents ?? (_iotEvents = new InputList<Inputs.TopicRuleIotEventArgs>());
            set => _iotEvents = value;
        }

        [Input("kinesis")]
        public Input<Inputs.TopicRuleKinesisArgs>? Kinesis { get; set; }

        [Input("lambda")]
        public Input<Inputs.TopicRuleLambdaArgs>? Lambda { get; set; }

        /// <summary>
        /// The name of the rule.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("republish")]
        public Input<Inputs.TopicRuleRepublishArgs>? Republish { get; set; }

        [Input("s3")]
        public Input<Inputs.TopicRuleS3Args>? S3 { get; set; }

        [Input("sns")]
        public Input<Inputs.TopicRuleSnsArgs>? Sns { get; set; }

        /// <summary>
        /// The SQL statement used to query the topic. For more information, see AWS IoT SQL Reference (http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference) in the AWS IoT Developer Guide.
        /// </summary>
        [Input("sql", required: true)]
        public Input<string> Sql { get; set; } = null!;

        /// <summary>
        /// The version of the SQL rules engine to use when evaluating the rule.
        /// </summary>
        [Input("sqlVersion", required: true)]
        public Input<string> SqlVersion { get; set; } = null!;

        [Input("sqs")]
        public Input<Inputs.TopicRuleSqsArgs>? Sqs { get; set; }

        [Input("stepFunctions")]
        private InputList<Inputs.TopicRuleStepFunctionArgs>? _stepFunctions;
        public InputList<Inputs.TopicRuleStepFunctionArgs> StepFunctions
        {
            get => _stepFunctions ?? (_stepFunctions = new InputList<Inputs.TopicRuleStepFunctionArgs>());
            set => _stepFunctions = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value map of resource tags
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public TopicRuleArgs()
        {
        }
    }

    public sealed class TopicRuleState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ARN of the topic rule
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("cloudwatchAlarm")]
        public Input<Inputs.TopicRuleCloudwatchAlarmGetArgs>? CloudwatchAlarm { get; set; }

        [Input("cloudwatchMetric")]
        public Input<Inputs.TopicRuleCloudwatchMetricGetArgs>? CloudwatchMetric { get; set; }

        /// <summary>
        /// The description of the rule.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("dynamodb")]
        public Input<Inputs.TopicRuleDynamodbGetArgs>? Dynamodb { get; set; }

        [Input("dynamodbv2s")]
        private InputList<Inputs.TopicRuleDynamodbv2GetArgs>? _dynamodbv2s;
        public InputList<Inputs.TopicRuleDynamodbv2GetArgs> Dynamodbv2s
        {
            get => _dynamodbv2s ?? (_dynamodbv2s = new InputList<Inputs.TopicRuleDynamodbv2GetArgs>());
            set => _dynamodbv2s = value;
        }

        [Input("elasticsearch")]
        public Input<Inputs.TopicRuleElasticsearchGetArgs>? Elasticsearch { get; set; }

        /// <summary>
        /// Specifies whether the rule is enabled.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Configuration block with error action to be associated with the rule. See the documentation for `cloudwatch_alarm`, `cloudwatch_metric`, `dynamodb`, `dynamodbv2`, `elasticsearch`, `firehose`, `iot_analytics`, `iot_events`, `kinesis`, `lambda`, `republish`, `s3`, `step_functions`, `sns`, `sqs` configuration blocks for further configuration details.
        /// </summary>
        [Input("errorAction")]
        public Input<Inputs.TopicRuleErrorActionGetArgs>? ErrorAction { get; set; }

        [Input("firehose")]
        public Input<Inputs.TopicRuleFirehoseGetArgs>? Firehose { get; set; }

        [Input("iotAnalytics")]
        private InputList<Inputs.TopicRuleIotAnalyticGetArgs>? _iotAnalytics;
        public InputList<Inputs.TopicRuleIotAnalyticGetArgs> IotAnalytics
        {
            get => _iotAnalytics ?? (_iotAnalytics = new InputList<Inputs.TopicRuleIotAnalyticGetArgs>());
            set => _iotAnalytics = value;
        }

        [Input("iotEvents")]
        private InputList<Inputs.TopicRuleIotEventGetArgs>? _iotEvents;
        public InputList<Inputs.TopicRuleIotEventGetArgs> IotEvents
        {
            get => _iotEvents ?? (_iotEvents = new InputList<Inputs.TopicRuleIotEventGetArgs>());
            set => _iotEvents = value;
        }

        [Input("kinesis")]
        public Input<Inputs.TopicRuleKinesisGetArgs>? Kinesis { get; set; }

        [Input("lambda")]
        public Input<Inputs.TopicRuleLambdaGetArgs>? Lambda { get; set; }

        /// <summary>
        /// The name of the rule.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("republish")]
        public Input<Inputs.TopicRuleRepublishGetArgs>? Republish { get; set; }

        [Input("s3")]
        public Input<Inputs.TopicRuleS3GetArgs>? S3 { get; set; }

        [Input("sns")]
        public Input<Inputs.TopicRuleSnsGetArgs>? Sns { get; set; }

        /// <summary>
        /// The SQL statement used to query the topic. For more information, see AWS IoT SQL Reference (http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference) in the AWS IoT Developer Guide.
        /// </summary>
        [Input("sql")]
        public Input<string>? Sql { get; set; }

        /// <summary>
        /// The version of the SQL rules engine to use when evaluating the rule.
        /// </summary>
        [Input("sqlVersion")]
        public Input<string>? SqlVersion { get; set; }

        [Input("sqs")]
        public Input<Inputs.TopicRuleSqsGetArgs>? Sqs { get; set; }

        [Input("stepFunctions")]
        private InputList<Inputs.TopicRuleStepFunctionGetArgs>? _stepFunctions;
        public InputList<Inputs.TopicRuleStepFunctionGetArgs> StepFunctions
        {
            get => _stepFunctions ?? (_stepFunctions = new InputList<Inputs.TopicRuleStepFunctionGetArgs>());
            set => _stepFunctions = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value map of resource tags
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public TopicRuleState()
        {
        }
    }
}
