// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Iot
{
    [AwsResourceType("aws:iot/thing:Thing")]
    public partial class Thing : global::Pulumi.CustomResource
    {
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("attributes")]
        public Output<ImmutableDictionary<string, string>?> Attributes { get; private set; } = null!;

        [Output("defaultClientId")]
        public Output<string> DefaultClientId { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("thingTypeName")]
        public Output<string?> ThingTypeName { get; private set; } = null!;

        [Output("version")]
        public Output<int> Version { get; private set; } = null!;


        /// <summary>
        /// Create a Thing resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Thing(string name, ThingArgs? args = null, CustomResourceOptions? options = null)
            : base("aws:iot/thing:Thing", name, args ?? new ThingArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Thing(string name, Input<string> id, ThingState? state = null, CustomResourceOptions? options = null)
            : base("aws:iot/thing:Thing", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Thing resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Thing Get(string name, Input<string> id, ThingState? state = null, CustomResourceOptions? options = null)
        {
            return new Thing(name, id, state, options);
        }
    }

    public sealed class ThingArgs : global::Pulumi.ResourceArgs
    {
        [Input("attributes")]
        private InputMap<string>? _attributes;
        public InputMap<string> Attributes
        {
            get => _attributes ?? (_attributes = new InputMap<string>());
            set => _attributes = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("thingTypeName")]
        public Input<string>? ThingTypeName { get; set; }

        public ThingArgs()
        {
        }
        public static new ThingArgs Empty => new ThingArgs();
    }

    public sealed class ThingState : global::Pulumi.ResourceArgs
    {
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("attributes")]
        private InputMap<string>? _attributes;
        public InputMap<string> Attributes
        {
            get => _attributes ?? (_attributes = new InputMap<string>());
            set => _attributes = value;
        }

        [Input("defaultClientId")]
        public Input<string>? DefaultClientId { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("thingTypeName")]
        public Input<string>? ThingTypeName { get; set; }

        [Input("version")]
        public Input<int>? Version { get; set; }

        public ThingState()
        {
        }
        public static new ThingState Empty => new ThingState();
    }
}
