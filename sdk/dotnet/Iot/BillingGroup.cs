// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Iot
{
    /// <summary>
    /// Manages an AWS IoT Billing Group.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Iot.BillingGroup("example", new()
    ///     {
    ///         Properties = new Aws.Iot.Inputs.BillingGroupPropertiesArgs
    ///         {
    ///             Description = "This is my billing group",
    ///         },
    ///         Tags = 
    ///         {
    ///             { "terraform", "true" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import IoT Billing Groups using the name. For example:
    /// 
    /// ```sh
    ///  $ pulumi import aws:iot/billingGroup:BillingGroup example example
    /// ```
    /// </summary>
    [AwsResourceType("aws:iot/billingGroup:BillingGroup")]
    public partial class BillingGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ARN of the Billing Group.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("metadatas")]
        public Output<ImmutableArray<Outputs.BillingGroupMetadata>> Metadatas { get; private set; } = null!;

        /// <summary>
        /// The name of the Billing Group.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The Billing Group properties. Defined below.
        /// </summary>
        [Output("properties")]
        public Output<Outputs.BillingGroupProperties?> Properties { get; private set; } = null!;

        /// <summary>
        /// Key-value mapping of resource tags
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        /// <summary>
        /// The current version of the Billing Group record in the registry.
        /// </summary>
        [Output("version")]
        public Output<int> Version { get; private set; } = null!;


        /// <summary>
        /// Create a BillingGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BillingGroup(string name, BillingGroupArgs? args = null, CustomResourceOptions? options = null)
            : base("aws:iot/billingGroup:BillingGroup", name, args ?? new BillingGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BillingGroup(string name, Input<string> id, BillingGroupState? state = null, CustomResourceOptions? options = null)
            : base("aws:iot/billingGroup:BillingGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "tagsAll",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BillingGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BillingGroup Get(string name, Input<string> id, BillingGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new BillingGroup(name, id, state, options);
        }
    }

    public sealed class BillingGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the Billing Group.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The Billing Group properties. Defined below.
        /// </summary>
        [Input("properties")]
        public Input<Inputs.BillingGroupPropertiesArgs>? Properties { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value mapping of resource tags
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public BillingGroupArgs()
        {
        }
        public static new BillingGroupArgs Empty => new BillingGroupArgs();
    }

    public sealed class BillingGroupState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ARN of the Billing Group.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("metadatas")]
        private InputList<Inputs.BillingGroupMetadataGetArgs>? _metadatas;
        public InputList<Inputs.BillingGroupMetadataGetArgs> Metadatas
        {
            get => _metadatas ?? (_metadatas = new InputList<Inputs.BillingGroupMetadataGetArgs>());
            set => _metadatas = value;
        }

        /// <summary>
        /// The name of the Billing Group.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The Billing Group properties. Defined below.
        /// </summary>
        [Input("properties")]
        public Input<Inputs.BillingGroupPropertiesGetArgs>? Properties { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value mapping of resource tags
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        [Obsolete(@"Please use `tags` instead.")]
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableDictionary.Create<string, string>());
                _tagsAll = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        /// <summary>
        /// The current version of the Billing Group record in the registry.
        /// </summary>
        [Input("version")]
        public Input<int>? Version { get; set; }

        public BillingGroupState()
        {
        }
        public static new BillingGroupState Empty => new BillingGroupState();
    }
}
