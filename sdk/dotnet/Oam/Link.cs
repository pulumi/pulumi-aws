// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Oam
{
    /// <summary>
    /// Resource for managing an AWS CloudWatch Observability Access Manager Link.
    /// 
    /// ## Example Usage
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Oam.Link("example", new()
    ///     {
    ///         LabelTemplate = "$AccountName",
    ///         ResourceTypes = new[]
    ///         {
    ///             "AWS::CloudWatch::Metric",
    ///         },
    ///         SinkIdentifier = aws_oam_sink.Test.Id,
    ///         Tags = 
    ///         {
    ///             { "Env", "prod" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// CloudWatch Observability Access Manager Link can be imported using the `arn`, e.g.,
    /// 
    /// ```sh
    ///  $ pulumi import aws:oam/link:Link example arn:aws:oam:us-west-2:123456789012:link/link-id
    /// ```
    /// </summary>
    [AwsResourceType("aws:oam/link:Link")]
    public partial class Link : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ARN of the link.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// Label that is assigned to this link.
        /// </summary>
        [Output("label")]
        public Output<string> Label { get; private set; } = null!;

        /// <summary>
        /// Human-readable name to use to identify this source account when you are viewing data from it in the monitoring account.
        /// </summary>
        [Output("labelTemplate")]
        public Output<string> LabelTemplate { get; private set; } = null!;

        /// <summary>
        /// ID string that AWS generated as part of the link ARN.
        /// </summary>
        [Output("linkId")]
        public Output<string> LinkId { get; private set; } = null!;

        /// <summary>
        /// Types of data that the source account shares with the monitoring account.
        /// </summary>
        [Output("resourceTypes")]
        public Output<ImmutableArray<string>> ResourceTypes { get; private set; } = null!;

        /// <summary>
        /// ARN of the sink that is used for this link.
        /// </summary>
        [Output("sinkArn")]
        public Output<string> SinkArn { get; private set; } = null!;

        /// <summary>
        /// Identifier of the sink to use to create this link.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Output("sinkIdentifier")]
        public Output<string> SinkIdentifier { get; private set; } = null!;

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;


        /// <summary>
        /// Create a Link resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Link(string name, LinkArgs args, CustomResourceOptions? options = null)
            : base("aws:oam/link:Link", name, args ?? new LinkArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Link(string name, Input<string> id, LinkState? state = null, CustomResourceOptions? options = null)
            : base("aws:oam/link:Link", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Link resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Link Get(string name, Input<string> id, LinkState? state = null, CustomResourceOptions? options = null)
        {
            return new Link(name, id, state, options);
        }
    }

    public sealed class LinkArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Human-readable name to use to identify this source account when you are viewing data from it in the monitoring account.
        /// </summary>
        [Input("labelTemplate", required: true)]
        public Input<string> LabelTemplate { get; set; } = null!;

        [Input("resourceTypes", required: true)]
        private InputList<string>? _resourceTypes;

        /// <summary>
        /// Types of data that the source account shares with the monitoring account.
        /// </summary>
        public InputList<string> ResourceTypes
        {
            get => _resourceTypes ?? (_resourceTypes = new InputList<string>());
            set => _resourceTypes = value;
        }

        /// <summary>
        /// Identifier of the sink to use to create this link.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("sinkIdentifier", required: true)]
        public Input<string> SinkIdentifier { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public LinkArgs()
        {
        }
        public static new LinkArgs Empty => new LinkArgs();
    }

    public sealed class LinkState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ARN of the link.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// Label that is assigned to this link.
        /// </summary>
        [Input("label")]
        public Input<string>? Label { get; set; }

        /// <summary>
        /// Human-readable name to use to identify this source account when you are viewing data from it in the monitoring account.
        /// </summary>
        [Input("labelTemplate")]
        public Input<string>? LabelTemplate { get; set; }

        /// <summary>
        /// ID string that AWS generated as part of the link ARN.
        /// </summary>
        [Input("linkId")]
        public Input<string>? LinkId { get; set; }

        [Input("resourceTypes")]
        private InputList<string>? _resourceTypes;

        /// <summary>
        /// Types of data that the source account shares with the monitoring account.
        /// </summary>
        public InputList<string> ResourceTypes
        {
            get => _resourceTypes ?? (_resourceTypes = new InputList<string>());
            set => _resourceTypes = value;
        }

        /// <summary>
        /// ARN of the sink that is used for this link.
        /// </summary>
        [Input("sinkArn")]
        public Input<string>? SinkArn { get; set; }

        /// <summary>
        /// Identifier of the sink to use to create this link.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("sinkIdentifier")]
        public Input<string>? SinkIdentifier { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        public LinkState()
        {
        }
        public static new LinkState Empty => new LinkState();
    }
}
