// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CodeCatalyst
{
    public static class GetDevEnvironment
    {
        /// <summary>
        /// Data source for managing an AWS CodeCatalyst Dev Environment.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.CodeCatalyst.GetDevEnvironment.Invoke(new()
        ///     {
        ///         SpaceName = "myspace",
        ///         ProjectName = "myproject",
        ///         EnvId = aws_codecatalyst_dev_environment.Example.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetDevEnvironmentResult> InvokeAsync(GetDevEnvironmentArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDevEnvironmentResult>("aws:codecatalyst/getDevEnvironment:getDevEnvironment", args ?? new GetDevEnvironmentArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for managing an AWS CodeCatalyst Dev Environment.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.CodeCatalyst.GetDevEnvironment.Invoke(new()
        ///     {
        ///         SpaceName = "myspace",
        ///         ProjectName = "myproject",
        ///         EnvId = aws_codecatalyst_dev_environment.Example.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetDevEnvironmentResult> Invoke(GetDevEnvironmentInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDevEnvironmentResult>("aws:codecatalyst/getDevEnvironment:getDevEnvironment", args ?? new GetDevEnvironmentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDevEnvironmentArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The user-specified alias for the Dev Environment.
        /// </summary>
        [Input("alias")]
        public string? Alias { get; set; }

        /// <summary>
        /// The system-generated unique ID of the user who created the Dev Environment.
        /// </summary>
        [Input("creatorId")]
        public string? CreatorId { get; set; }

        /// <summary>
        /// - (Required) The system-generated unique ID of the Dev Environment for which you want to view information. To retrieve a list of Dev Environment IDs, use [ListDevEnvironments](https://docs.aws.amazon.com/codecatalyst/latest/APIReference/API_ListDevEnvironments.html).
        /// </summary>
        [Input("envId", required: true)]
        public string EnvId { get; set; } = null!;

        /// <summary>
        /// The name of the project in the space.
        /// </summary>
        [Input("projectName", required: true)]
        public string ProjectName { get; set; } = null!;

        [Input("repositories")]
        private List<Inputs.GetDevEnvironmentRepositoryArgs>? _repositories;

        /// <summary>
        /// The source repository that contains the branch to clone into the Dev Environment.
        /// </summary>
        public List<Inputs.GetDevEnvironmentRepositoryArgs> Repositories
        {
            get => _repositories ?? (_repositories = new List<Inputs.GetDevEnvironmentRepositoryArgs>());
            set => _repositories = value;
        }

        /// <summary>
        /// The name of the space.
        /// </summary>
        [Input("spaceName", required: true)]
        public string SpaceName { get; set; } = null!;

        [Input("tags")]
        private Dictionary<string, string>? _tags;
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetDevEnvironmentArgs()
        {
        }
        public static new GetDevEnvironmentArgs Empty => new GetDevEnvironmentArgs();
    }

    public sealed class GetDevEnvironmentInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The user-specified alias for the Dev Environment.
        /// </summary>
        [Input("alias")]
        public Input<string>? Alias { get; set; }

        /// <summary>
        /// The system-generated unique ID of the user who created the Dev Environment.
        /// </summary>
        [Input("creatorId")]
        public Input<string>? CreatorId { get; set; }

        /// <summary>
        /// - (Required) The system-generated unique ID of the Dev Environment for which you want to view information. To retrieve a list of Dev Environment IDs, use [ListDevEnvironments](https://docs.aws.amazon.com/codecatalyst/latest/APIReference/API_ListDevEnvironments.html).
        /// </summary>
        [Input("envId", required: true)]
        public Input<string> EnvId { get; set; } = null!;

        /// <summary>
        /// The name of the project in the space.
        /// </summary>
        [Input("projectName", required: true)]
        public Input<string> ProjectName { get; set; } = null!;

        [Input("repositories")]
        private InputList<Inputs.GetDevEnvironmentRepositoryInputArgs>? _repositories;

        /// <summary>
        /// The source repository that contains the branch to clone into the Dev Environment.
        /// </summary>
        public InputList<Inputs.GetDevEnvironmentRepositoryInputArgs> Repositories
        {
            get => _repositories ?? (_repositories = new InputList<Inputs.GetDevEnvironmentRepositoryInputArgs>());
            set => _repositories = value;
        }

        /// <summary>
        /// The name of the space.
        /// </summary>
        [Input("spaceName", required: true)]
        public Input<string> SpaceName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetDevEnvironmentInvokeArgs()
        {
        }
        public static new GetDevEnvironmentInvokeArgs Empty => new GetDevEnvironmentInvokeArgs();
    }


    [OutputType]
    public sealed class GetDevEnvironmentResult
    {
        /// <summary>
        /// The user-specified alias for the Dev Environment.
        /// </summary>
        public readonly string? Alias;
        /// <summary>
        /// The system-generated unique ID of the user who created the Dev Environment.
        /// </summary>
        public readonly string? CreatorId;
        public readonly string EnvId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Information about the integrated development environment (IDE) configured for a Dev Environment.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDevEnvironmentIdeResult> Ides;
        /// <summary>
        /// The amount of time the Dev Environment will run without any activity detected before stopping, in minutes. Only whole integers are allowed. Dev Environments consume compute minutes when running.
        /// </summary>
        public readonly int InactivityTimeoutMinutes;
        /// <summary>
        /// The Amazon EC2 instace type to use for the Dev Environment.
        /// </summary>
        public readonly string InstanceType;
        /// <summary>
        /// The time when the Dev Environment was last updated, in coordinated universal time (UTC) timestamp format as specified in [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339#section-5.6).
        /// </summary>
        public readonly string LastUpdatedTime;
        /// <summary>
        /// Information about the amount of storage allocated to the Dev Environment.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDevEnvironmentPersistentStorageResult> PersistentStorages;
        public readonly string ProjectName;
        /// <summary>
        /// The source repository that contains the branch to clone into the Dev Environment.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDevEnvironmentRepositoryResult> Repositories;
        public readonly string SpaceName;
        /// <summary>
        /// The current status of the Dev Environment. From: PENDING | RUNNING | STARTING | STOPPING | STOPPED | FAILED | DELETING | DELETED.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The reason for the status.
        /// </summary>
        public readonly string StatusReason;
        public readonly ImmutableDictionary<string, string> Tags;

        [OutputConstructor]
        private GetDevEnvironmentResult(
            string? alias,

            string? creatorId,

            string envId,

            string id,

            ImmutableArray<Outputs.GetDevEnvironmentIdeResult> ides,

            int inactivityTimeoutMinutes,

            string instanceType,

            string lastUpdatedTime,

            ImmutableArray<Outputs.GetDevEnvironmentPersistentStorageResult> persistentStorages,

            string projectName,

            ImmutableArray<Outputs.GetDevEnvironmentRepositoryResult> repositories,

            string spaceName,

            string status,

            string statusReason,

            ImmutableDictionary<string, string> tags)
        {
            Alias = alias;
            CreatorId = creatorId;
            EnvId = envId;
            Id = id;
            Ides = ides;
            InactivityTimeoutMinutes = inactivityTimeoutMinutes;
            InstanceType = instanceType;
            LastUpdatedTime = lastUpdatedTime;
            PersistentStorages = persistentStorages;
            ProjectName = projectName;
            Repositories = repositories;
            SpaceName = spaceName;
            Status = status;
            StatusReason = statusReason;
            Tags = tags;
        }
    }
}
