// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Neptune
{
    /// <summary>
    /// Provides an Neptune Cluster Endpoint Resource.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Neptune.ClusterEndpoint("example", new()
    ///     {
    ///         ClusterIdentifier = aws_neptune_cluster.Test.Cluster_identifier,
    ///         ClusterEndpointIdentifier = "example",
    ///         EndpointType = "READER",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import `aws_neptune_cluster_endpoint` using the `cluster-identifier:endpoint-identfier`. For example:
    /// 
    /// ```sh
    ///  $ pulumi import aws:neptune/clusterEndpoint:ClusterEndpoint example my-cluster:my-endpoint
    /// ```
    /// </summary>
    [AwsResourceType("aws:neptune/clusterEndpoint:ClusterEndpoint")]
    public partial class ClusterEndpoint : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Neptune Cluster Endpoint Amazon Resource Name (ARN).
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// The identifier of the endpoint.
        /// </summary>
        [Output("clusterEndpointIdentifier")]
        public Output<string> ClusterEndpointIdentifier { get; private set; } = null!;

        /// <summary>
        /// The DB cluster identifier of the DB cluster associated with the endpoint.
        /// </summary>
        [Output("clusterIdentifier")]
        public Output<string> ClusterIdentifier { get; private set; } = null!;

        /// <summary>
        /// The DNS address of the endpoint.
        /// </summary>
        [Output("endpoint")]
        public Output<string> Endpoint { get; private set; } = null!;

        /// <summary>
        /// The type of the endpoint. One of: `READER`, `WRITER`, `ANY`.
        /// </summary>
        [Output("endpointType")]
        public Output<string> EndpointType { get; private set; } = null!;

        /// <summary>
        /// List of DB instance identifiers that aren't part of the custom endpoint group. All other eligible instances are reachable through the custom endpoint. Only relevant if the list of static members is empty.
        /// </summary>
        [Output("excludedMembers")]
        public Output<ImmutableArray<string>> ExcludedMembers { get; private set; } = null!;

        /// <summary>
        /// List of DB instance identifiers that are part of the custom endpoint group.
        /// </summary>
        [Output("staticMembers")]
        public Output<ImmutableArray<string>> StaticMembers { get; private set; } = null!;

        /// <summary>
        /// A map of tags to assign to the Neptune cluster. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;


        /// <summary>
        /// Create a ClusterEndpoint resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ClusterEndpoint(string name, ClusterEndpointArgs args, CustomResourceOptions? options = null)
            : base("aws:neptune/clusterEndpoint:ClusterEndpoint", name, args ?? new ClusterEndpointArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ClusterEndpoint(string name, Input<string> id, ClusterEndpointState? state = null, CustomResourceOptions? options = null)
            : base("aws:neptune/clusterEndpoint:ClusterEndpoint", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "tagsAll",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ClusterEndpoint resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ClusterEndpoint Get(string name, Input<string> id, ClusterEndpointState? state = null, CustomResourceOptions? options = null)
        {
            return new ClusterEndpoint(name, id, state, options);
        }
    }

    public sealed class ClusterEndpointArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The identifier of the endpoint.
        /// </summary>
        [Input("clusterEndpointIdentifier", required: true)]
        public Input<string> ClusterEndpointIdentifier { get; set; } = null!;

        /// <summary>
        /// The DB cluster identifier of the DB cluster associated with the endpoint.
        /// </summary>
        [Input("clusterIdentifier", required: true)]
        public Input<string> ClusterIdentifier { get; set; } = null!;

        /// <summary>
        /// The type of the endpoint. One of: `READER`, `WRITER`, `ANY`.
        /// </summary>
        [Input("endpointType", required: true)]
        public Input<string> EndpointType { get; set; } = null!;

        [Input("excludedMembers")]
        private InputList<string>? _excludedMembers;

        /// <summary>
        /// List of DB instance identifiers that aren't part of the custom endpoint group. All other eligible instances are reachable through the custom endpoint. Only relevant if the list of static members is empty.
        /// </summary>
        public InputList<string> ExcludedMembers
        {
            get => _excludedMembers ?? (_excludedMembers = new InputList<string>());
            set => _excludedMembers = value;
        }

        [Input("staticMembers")]
        private InputList<string>? _staticMembers;

        /// <summary>
        /// List of DB instance identifiers that are part of the custom endpoint group.
        /// </summary>
        public InputList<string> StaticMembers
        {
            get => _staticMembers ?? (_staticMembers = new InputList<string>());
            set => _staticMembers = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the Neptune cluster. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public ClusterEndpointArgs()
        {
        }
        public static new ClusterEndpointArgs Empty => new ClusterEndpointArgs();
    }

    public sealed class ClusterEndpointState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Neptune Cluster Endpoint Amazon Resource Name (ARN).
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// The identifier of the endpoint.
        /// </summary>
        [Input("clusterEndpointIdentifier")]
        public Input<string>? ClusterEndpointIdentifier { get; set; }

        /// <summary>
        /// The DB cluster identifier of the DB cluster associated with the endpoint.
        /// </summary>
        [Input("clusterIdentifier")]
        public Input<string>? ClusterIdentifier { get; set; }

        /// <summary>
        /// The DNS address of the endpoint.
        /// </summary>
        [Input("endpoint")]
        public Input<string>? Endpoint { get; set; }

        /// <summary>
        /// The type of the endpoint. One of: `READER`, `WRITER`, `ANY`.
        /// </summary>
        [Input("endpointType")]
        public Input<string>? EndpointType { get; set; }

        [Input("excludedMembers")]
        private InputList<string>? _excludedMembers;

        /// <summary>
        /// List of DB instance identifiers that aren't part of the custom endpoint group. All other eligible instances are reachable through the custom endpoint. Only relevant if the list of static members is empty.
        /// </summary>
        public InputList<string> ExcludedMembers
        {
            get => _excludedMembers ?? (_excludedMembers = new InputList<string>());
            set => _excludedMembers = value;
        }

        [Input("staticMembers")]
        private InputList<string>? _staticMembers;

        /// <summary>
        /// List of DB instance identifiers that are part of the custom endpoint group.
        /// </summary>
        public InputList<string> StaticMembers
        {
            get => _staticMembers ?? (_staticMembers = new InputList<string>());
            set => _staticMembers = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the Neptune cluster. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Obsolete(@"Please use `tags` instead.")]
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableDictionary.Create<string, string>());
                _tagsAll = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        public ClusterEndpointState()
        {
        }
        public static new ClusterEndpointState Empty => new ClusterEndpointState();
    }
}
