// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Neptune
{
    public static class GetEngineVersion
    {
        public static Task<GetEngineVersionResult> InvokeAsync(GetEngineVersionArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEngineVersionResult>("aws:neptune/getEngineVersion:getEngineVersion", args ?? new GetEngineVersionArgs(), options.WithDefaults());

        public static Output<GetEngineVersionResult> Invoke(GetEngineVersionInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEngineVersionResult>("aws:neptune/getEngineVersion:getEngineVersion", args ?? new GetEngineVersionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEngineVersionArgs : global::Pulumi.InvokeArgs
    {
        [Input("engine")]
        public string? Engine { get; set; }

        [Input("parameterGroupFamily")]
        public string? ParameterGroupFamily { get; set; }

        [Input("preferredVersions")]
        private List<string>? _preferredVersions;
        public List<string> PreferredVersions
        {
            get => _preferredVersions ?? (_preferredVersions = new List<string>());
            set => _preferredVersions = value;
        }

        [Input("version")]
        public string? Version { get; set; }

        public GetEngineVersionArgs()
        {
        }
        public static new GetEngineVersionArgs Empty => new GetEngineVersionArgs();
    }

    public sealed class GetEngineVersionInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("engine")]
        public Input<string>? Engine { get; set; }

        [Input("parameterGroupFamily")]
        public Input<string>? ParameterGroupFamily { get; set; }

        [Input("preferredVersions")]
        private InputList<string>? _preferredVersions;
        public InputList<string> PreferredVersions
        {
            get => _preferredVersions ?? (_preferredVersions = new InputList<string>());
            set => _preferredVersions = value;
        }

        [Input("version")]
        public Input<string>? Version { get; set; }

        public GetEngineVersionInvokeArgs()
        {
        }
        public static new GetEngineVersionInvokeArgs Empty => new GetEngineVersionInvokeArgs();
    }


    [OutputType]
    public sealed class GetEngineVersionResult
    {
        public readonly string? Engine;
        public readonly string EngineDescription;
        public readonly ImmutableArray<string> ExportableLogTypes;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string ParameterGroupFamily;
        public readonly ImmutableArray<string> PreferredVersions;
        public readonly ImmutableArray<string> SupportedTimezones;
        public readonly bool SupportsLogExportsToCloudwatch;
        public readonly bool SupportsReadReplica;
        public readonly ImmutableArray<string> ValidUpgradeTargets;
        public readonly string Version;
        public readonly string VersionDescription;

        [OutputConstructor]
        private GetEngineVersionResult(
            string? engine,

            string engineDescription,

            ImmutableArray<string> exportableLogTypes,

            string id,

            string parameterGroupFamily,

            ImmutableArray<string> preferredVersions,

            ImmutableArray<string> supportedTimezones,

            bool supportsLogExportsToCloudwatch,

            bool supportsReadReplica,

            ImmutableArray<string> validUpgradeTargets,

            string version,

            string versionDescription)
        {
            Engine = engine;
            EngineDescription = engineDescription;
            ExportableLogTypes = exportableLogTypes;
            Id = id;
            ParameterGroupFamily = parameterGroupFamily;
            PreferredVersions = preferredVersions;
            SupportedTimezones = supportedTimezones;
            SupportsLogExportsToCloudwatch = supportsLogExportsToCloudwatch;
            SupportsReadReplica = supportsReadReplica;
            ValidUpgradeTargets = validUpgradeTargets;
            Version = version;
            VersionDescription = versionDescription;
        }
    }
}
