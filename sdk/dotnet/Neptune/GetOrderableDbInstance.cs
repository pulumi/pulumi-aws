// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Neptune
{
    public static class GetOrderableDbInstance
    {
        /// <summary>
        /// Information about Neptune orderable DB instances.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var test = Output.Create(Aws.Neptune.GetOrderableDbInstance.InvokeAsync(new Aws.Neptune.GetOrderableDbInstanceArgs
        ///         {
        ///             EngineVersion = "1.0.3.0",
        ///             PreferredInstanceClasses = 
        ///             {
        ///                 "db.r5.large",
        ///                 "db.r4.large",
        ///                 "db.t3.medium",
        ///             },
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetOrderableDbInstanceResult> InvokeAsync(GetOrderableDbInstanceArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetOrderableDbInstanceResult>("aws:neptune/getOrderableDbInstance:getOrderableDbInstance", args ?? new GetOrderableDbInstanceArgs(), options.WithDefaults());

        /// <summary>
        /// Information about Neptune orderable DB instances.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var test = Output.Create(Aws.Neptune.GetOrderableDbInstance.InvokeAsync(new Aws.Neptune.GetOrderableDbInstanceArgs
        ///         {
        ///             EngineVersion = "1.0.3.0",
        ///             PreferredInstanceClasses = 
        ///             {
        ///                 "db.r5.large",
        ///                 "db.r4.large",
        ///                 "db.t3.medium",
        ///             },
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetOrderableDbInstanceResult> Invoke(GetOrderableDbInstanceInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetOrderableDbInstanceResult>("aws:neptune/getOrderableDbInstance:getOrderableDbInstance", args ?? new GetOrderableDbInstanceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOrderableDbInstanceArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// DB engine. (Default: `neptune`)
        /// </summary>
        [Input("engine")]
        public string? Engine { get; set; }

        /// <summary>
        /// Version of the DB engine. For example, `1.0.1.0`, `1.0.1.2`, `1.0.2.2`, and `1.0.3.0`.
        /// </summary>
        [Input("engineVersion")]
        public string? EngineVersion { get; set; }

        /// <summary>
        /// DB instance class. Examples of classes are `db.r5.large`, `db.r5.xlarge`, `db.r4.large`, `db.r5.4xlarge`, `db.r5.12xlarge`, `db.r4.xlarge`, and `db.t3.medium`.
        /// </summary>
        [Input("instanceClass")]
        public string? InstanceClass { get; set; }

        /// <summary>
        /// License model. (Default: `amazon-license`)
        /// </summary>
        [Input("licenseModel")]
        public string? LicenseModel { get; set; }

        [Input("preferredInstanceClasses")]
        private List<string>? _preferredInstanceClasses;

        /// <summary>
        /// Ordered list of preferred Neptune DB instance classes. The first match in this list will be returned. If no preferred matches are found and the original search returned more than one result, an error is returned.
        /// </summary>
        public List<string> PreferredInstanceClasses
        {
            get => _preferredInstanceClasses ?? (_preferredInstanceClasses = new List<string>());
            set => _preferredInstanceClasses = value;
        }

        /// <summary>
        /// Enable to show only VPC offerings.
        /// </summary>
        [Input("vpc")]
        public bool? Vpc { get; set; }

        public GetOrderableDbInstanceArgs()
        {
        }
    }

    public sealed class GetOrderableDbInstanceInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// DB engine. (Default: `neptune`)
        /// </summary>
        [Input("engine")]
        public Input<string>? Engine { get; set; }

        /// <summary>
        /// Version of the DB engine. For example, `1.0.1.0`, `1.0.1.2`, `1.0.2.2`, and `1.0.3.0`.
        /// </summary>
        [Input("engineVersion")]
        public Input<string>? EngineVersion { get; set; }

        /// <summary>
        /// DB instance class. Examples of classes are `db.r5.large`, `db.r5.xlarge`, `db.r4.large`, `db.r5.4xlarge`, `db.r5.12xlarge`, `db.r4.xlarge`, and `db.t3.medium`.
        /// </summary>
        [Input("instanceClass")]
        public Input<string>? InstanceClass { get; set; }

        /// <summary>
        /// License model. (Default: `amazon-license`)
        /// </summary>
        [Input("licenseModel")]
        public Input<string>? LicenseModel { get; set; }

        [Input("preferredInstanceClasses")]
        private InputList<string>? _preferredInstanceClasses;

        /// <summary>
        /// Ordered list of preferred Neptune DB instance classes. The first match in this list will be returned. If no preferred matches are found and the original search returned more than one result, an error is returned.
        /// </summary>
        public InputList<string> PreferredInstanceClasses
        {
            get => _preferredInstanceClasses ?? (_preferredInstanceClasses = new InputList<string>());
            set => _preferredInstanceClasses = value;
        }

        /// <summary>
        /// Enable to show only VPC offerings.
        /// </summary>
        [Input("vpc")]
        public Input<bool>? Vpc { get; set; }

        public GetOrderableDbInstanceInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetOrderableDbInstanceResult
    {
        /// <summary>
        /// Availability zones where the instance is available.
        /// </summary>
        public readonly ImmutableArray<string> AvailabilityZones;
        public readonly string? Engine;
        public readonly string EngineVersion;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string InstanceClass;
        public readonly string? LicenseModel;
        /// <summary>
        /// Maximum total provisioned IOPS for a DB instance.
        /// </summary>
        public readonly int MaxIopsPerDbInstance;
        /// <summary>
        /// Maximum provisioned IOPS per GiB for a DB instance.
        /// </summary>
        public readonly double MaxIopsPerGib;
        /// <summary>
        /// Maximum storage size for a DB instance.
        /// </summary>
        public readonly int MaxStorageSize;
        /// <summary>
        /// Minimum total provisioned IOPS for a DB instance.
        /// </summary>
        public readonly int MinIopsPerDbInstance;
        /// <summary>
        /// Minimum provisioned IOPS per GiB for a DB instance.
        /// </summary>
        public readonly double MinIopsPerGib;
        /// <summary>
        /// Minimum storage size for a DB instance.
        /// </summary>
        public readonly int MinStorageSize;
        /// <summary>
        /// Whether a DB instance is Multi-AZ capable.
        /// </summary>
        public readonly bool MultiAzCapable;
        public readonly ImmutableArray<string> PreferredInstanceClasses;
        /// <summary>
        /// Whether a DB instance can have a read replica.
        /// </summary>
        public readonly bool ReadReplicaCapable;
        /// <summary>
        /// The storage type for a DB instance.
        /// </summary>
        public readonly string StorageType;
        /// <summary>
        /// Whether a DB instance supports Enhanced Monitoring at intervals from 1 to 60 seconds.
        /// </summary>
        public readonly bool SupportsEnhancedMonitoring;
        /// <summary>
        /// Whether a DB instance supports IAM database authentication.
        /// </summary>
        public readonly bool SupportsIamDatabaseAuthentication;
        /// <summary>
        /// Whether a DB instance supports provisioned IOPS.
        /// </summary>
        public readonly bool SupportsIops;
        /// <summary>
        /// Whether a DB instance supports Performance Insights.
        /// </summary>
        public readonly bool SupportsPerformanceInsights;
        /// <summary>
        /// Whether a DB instance supports encrypted storage.
        /// </summary>
        public readonly bool SupportsStorageEncryption;
        public readonly bool Vpc;

        [OutputConstructor]
        private GetOrderableDbInstanceResult(
            ImmutableArray<string> availabilityZones,

            string? engine,

            string engineVersion,

            string id,

            string instanceClass,

            string? licenseModel,

            int maxIopsPerDbInstance,

            double maxIopsPerGib,

            int maxStorageSize,

            int minIopsPerDbInstance,

            double minIopsPerGib,

            int minStorageSize,

            bool multiAzCapable,

            ImmutableArray<string> preferredInstanceClasses,

            bool readReplicaCapable,

            string storageType,

            bool supportsEnhancedMonitoring,

            bool supportsIamDatabaseAuthentication,

            bool supportsIops,

            bool supportsPerformanceInsights,

            bool supportsStorageEncryption,

            bool vpc)
        {
            AvailabilityZones = availabilityZones;
            Engine = engine;
            EngineVersion = engineVersion;
            Id = id;
            InstanceClass = instanceClass;
            LicenseModel = licenseModel;
            MaxIopsPerDbInstance = maxIopsPerDbInstance;
            MaxIopsPerGib = maxIopsPerGib;
            MaxStorageSize = maxStorageSize;
            MinIopsPerDbInstance = minIopsPerDbInstance;
            MinIopsPerGib = minIopsPerGib;
            MinStorageSize = minStorageSize;
            MultiAzCapable = multiAzCapable;
            PreferredInstanceClasses = preferredInstanceClasses;
            ReadReplicaCapable = readReplicaCapable;
            StorageType = storageType;
            SupportsEnhancedMonitoring = supportsEnhancedMonitoring;
            SupportsIamDatabaseAuthentication = supportsIamDatabaseAuthentication;
            SupportsIops = supportsIops;
            SupportsPerformanceInsights = supportsPerformanceInsights;
            SupportsStorageEncryption = supportsStorageEncryption;
            Vpc = vpc;
        }
    }
}
