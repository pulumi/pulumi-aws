// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Neptune
{
    [AwsResourceType("aws:neptune/clusterSnapshot:ClusterSnapshot")]
    public partial class ClusterSnapshot : global::Pulumi.CustomResource
    {
        [Output("allocatedStorage")]
        public Output<int> AllocatedStorage { get; private set; } = null!;

        [Output("availabilityZones")]
        public Output<ImmutableArray<string>> AvailabilityZones { get; private set; } = null!;

        [Output("dbClusterIdentifier")]
        public Output<string> DbClusterIdentifier { get; private set; } = null!;

        [Output("dbClusterSnapshotArn")]
        public Output<string> DbClusterSnapshotArn { get; private set; } = null!;

        [Output("dbClusterSnapshotIdentifier")]
        public Output<string> DbClusterSnapshotIdentifier { get; private set; } = null!;

        [Output("engine")]
        public Output<string> Engine { get; private set; } = null!;

        [Output("engineVersion")]
        public Output<string> EngineVersion { get; private set; } = null!;

        [Output("kmsKeyId")]
        public Output<string> KmsKeyId { get; private set; } = null!;

        [Output("licenseModel")]
        public Output<string> LicenseModel { get; private set; } = null!;

        [Output("port")]
        public Output<int> Port { get; private set; } = null!;

        [Output("snapshotType")]
        public Output<string> SnapshotType { get; private set; } = null!;

        [Output("sourceDbClusterSnapshotArn")]
        public Output<string> SourceDbClusterSnapshotArn { get; private set; } = null!;

        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        [Output("storageEncrypted")]
        public Output<bool> StorageEncrypted { get; private set; } = null!;

        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;


        /// <summary>
        /// Create a ClusterSnapshot resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ClusterSnapshot(string name, ClusterSnapshotArgs args, CustomResourceOptions? options = null)
            : base("aws:neptune/clusterSnapshot:ClusterSnapshot", name, args ?? new ClusterSnapshotArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ClusterSnapshot(string name, Input<string> id, ClusterSnapshotState? state = null, CustomResourceOptions? options = null)
            : base("aws:neptune/clusterSnapshot:ClusterSnapshot", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ClusterSnapshot resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ClusterSnapshot Get(string name, Input<string> id, ClusterSnapshotState? state = null, CustomResourceOptions? options = null)
        {
            return new ClusterSnapshot(name, id, state, options);
        }
    }

    public sealed class ClusterSnapshotArgs : global::Pulumi.ResourceArgs
    {
        [Input("dbClusterIdentifier", required: true)]
        public Input<string> DbClusterIdentifier { get; set; } = null!;

        [Input("dbClusterSnapshotIdentifier", required: true)]
        public Input<string> DbClusterSnapshotIdentifier { get; set; } = null!;

        public ClusterSnapshotArgs()
        {
        }
        public static new ClusterSnapshotArgs Empty => new ClusterSnapshotArgs();
    }

    public sealed class ClusterSnapshotState : global::Pulumi.ResourceArgs
    {
        [Input("allocatedStorage")]
        public Input<int>? AllocatedStorage { get; set; }

        [Input("availabilityZones")]
        private InputList<string>? _availabilityZones;
        public InputList<string> AvailabilityZones
        {
            get => _availabilityZones ?? (_availabilityZones = new InputList<string>());
            set => _availabilityZones = value;
        }

        [Input("dbClusterIdentifier")]
        public Input<string>? DbClusterIdentifier { get; set; }

        [Input("dbClusterSnapshotArn")]
        public Input<string>? DbClusterSnapshotArn { get; set; }

        [Input("dbClusterSnapshotIdentifier")]
        public Input<string>? DbClusterSnapshotIdentifier { get; set; }

        [Input("engine")]
        public Input<string>? Engine { get; set; }

        [Input("engineVersion")]
        public Input<string>? EngineVersion { get; set; }

        [Input("kmsKeyId")]
        public Input<string>? KmsKeyId { get; set; }

        [Input("licenseModel")]
        public Input<string>? LicenseModel { get; set; }

        [Input("port")]
        public Input<int>? Port { get; set; }

        [Input("snapshotType")]
        public Input<string>? SnapshotType { get; set; }

        [Input("sourceDbClusterSnapshotArn")]
        public Input<string>? SourceDbClusterSnapshotArn { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("storageEncrypted")]
        public Input<bool>? StorageEncrypted { get; set; }

        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public ClusterSnapshotState()
        {
        }
        public static new ClusterSnapshotState Empty => new ClusterSnapshotState();
    }
}
