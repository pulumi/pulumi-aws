// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.BcmData
{
    /// <summary>
    /// Resource for managing an AWS BCM Data Exports Export.
    /// 
    /// ## Example Usage
    /// 
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var test = new Aws.BcmData.Export("test", new()
    ///     {
    ///         ExportDetails = new Aws.BcmData.Inputs.ExportExportArgs
    ///         {
    ///             Name = "testexample",
    ///             DataQueries = new[]
    ///             {
    ///                 new Aws.BcmData.Inputs.ExportExportDataQueryArgs
    ///                 {
    ///                     QueryStatement = "SELECT identity_line_item_id, identity_time_interval, line_item_product_code,line_item_unblended_cost FROM COST_AND_USAGE_REPORT",
    ///                     TableConfigurations = 
    ///                     {
    ///                         { "COST_AND_USAGE_REPORT", 
    ///                         {
    ///                             { "TIME_GRANULARITY", "HOURLY" },
    ///                             { "INCLUDE_RESOURCES", "FALSE" },
    ///                             { "INCLUDE_MANUAL_DISCOUNT_COMPATIBILITY", "FALSE" },
    ///                             { "INCLUDE_SPLIT_COST_ALLOCATION_DATA", "FALSE" },
    ///                         } },
    ///                     },
    ///                 },
    ///             },
    ///             DestinationConfigurations = new[]
    ///             {
    ///                 new Aws.BcmData.Inputs.ExportExportDestinationConfigurationArgs
    ///                 {
    ///                     S3Destinations = new[]
    ///                     {
    ///                         new Aws.BcmData.Inputs.ExportExportDestinationConfigurationS3DestinationArgs
    ///                         {
    ///                             S3Bucket = testAwsS3Bucket.Bucket,
    ///                             S3Prefix = testAwsS3Bucket.BucketPrefix,
    ///                             S3Region = testAwsS3Bucket.Region,
    ///                             S3OutputConfigurations = new[]
    ///                             {
    ///                                 new Aws.BcmData.Inputs.ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArgs
    ///                                 {
    ///                                     Overwrite = "OVERWRITE_REPORT",
    ///                                     Format = "TEXT_OR_CSV",
    ///                                     Compression = "GZIP",
    ///                                     OutputType = "CUSTOM",
    ///                                 },
    ///                             },
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///             RefreshCadences = new[]
    ///             {
    ///                 new Aws.BcmData.Inputs.ExportExportRefreshCadenceArgs
    ///                 {
    ///                     Frequency = "SYNCHRONOUS",
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import BCM Data Exports Export using the `export_arn`. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:bcmdata/export:Export example export-id-12345678
    /// ```
    /// </summary>
    [AwsResourceType("aws:bcmdata/export:Export")]
    public partial class Export : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The details of the export, including data query, name, description, and destination configuration.  See the `export` argument reference below.
        /// </summary>
        [Output("export")]
        public Output<Outputs.ExportExport?> ExportDetails { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("timeouts")]
        public Output<Outputs.ExportTimeouts?> Timeouts { get; private set; } = null!;


        /// <summary>
        /// Create a Export resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Export(string name, ExportArgs? args = null, CustomResourceOptions? options = null)
            : base("aws:bcmdata/export:Export", name, args ?? new ExportArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Export(string name, Input<string> id, ExportState? state = null, CustomResourceOptions? options = null)
            : base("aws:bcmdata/export:Export", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Export resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Export Get(string name, Input<string> id, ExportState? state = null, CustomResourceOptions? options = null)
        {
            return new Export(name, id, state, options);
        }
    }

    public sealed class ExportArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The details of the export, including data query, name, description, and destination configuration.  See the `export` argument reference below.
        /// </summary>
        [Input("export")]
        public Input<Inputs.ExportExportArgs>? ExportDetails { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("timeouts")]
        public Input<Inputs.ExportTimeoutsArgs>? Timeouts { get; set; }

        public ExportArgs()
        {
        }
        public static new ExportArgs Empty => new ExportArgs();
    }

    public sealed class ExportState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The details of the export, including data query, name, description, and destination configuration.  See the `export` argument reference below.
        /// </summary>
        [Input("export")]
        public Input<Inputs.ExportExportGetArgs>? ExportDetails { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        [Obsolete(@"Please use `tags` instead.")]
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("timeouts")]
        public Input<Inputs.ExportTimeoutsGetArgs>? Timeouts { get; set; }

        public ExportState()
        {
        }
        public static new ExportState Empty => new ExportState();
    }
}
