// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Batch.Outputs
{

    [OutputType]
    public sealed class GetJobDefinitionEksPropertyPodPropertyResult
    {
        /// <summary>
        /// The properties of the container that's used on the Amazon EKS pod. Array of EksContainer objects.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetJobDefinitionEksPropertyPodPropertyContainerResult> Containers;
        /// <summary>
        /// The DNS policy for the pod. The default value is ClusterFirst. If the hostNetwork parameter is not specified, the default is ClusterFirstWithHostNet. ClusterFirst indicates that any DNS query that does not match the configured cluster domain suffix is forwarded to the upstream nameserver inherited from the node.
        /// </summary>
        public readonly string DnsPolicy;
        /// <summary>
        /// Indicates if the pod uses the hosts' network IP address. The default value is true. Setting this to false enables the Kubernetes pod networking model. Most AWS Batch workloads are egress-only and don't require the overhead of IP allocation for each pod for incoming connections.
        /// </summary>
        public readonly bool HostNetwork;
        /// <summary>
        /// Metadata about the Kubernetes pod.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetJobDefinitionEksPropertyPodPropertyMetadataResult> Metadatas;
        /// <summary>
        /// The name of the service account that's used to run the pod.
        /// </summary>
        public readonly bool ServiceAccountName;
        /// <summary>
        /// A list of data volumes used in a job.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetJobDefinitionEksPropertyPodPropertyVolumeResult> Volumes;

        [OutputConstructor]
        private GetJobDefinitionEksPropertyPodPropertyResult(
            ImmutableArray<Outputs.GetJobDefinitionEksPropertyPodPropertyContainerResult> containers,

            string dnsPolicy,

            bool hostNetwork,

            ImmutableArray<Outputs.GetJobDefinitionEksPropertyPodPropertyMetadataResult> metadatas,

            bool serviceAccountName,

            ImmutableArray<Outputs.GetJobDefinitionEksPropertyPodPropertyVolumeResult> volumes)
        {
            Containers = containers;
            DnsPolicy = dnsPolicy;
            HostNetwork = hostNetwork;
            Metadatas = metadatas;
            ServiceAccountName = serviceAccountName;
            Volumes = volumes;
        }
    }
}
