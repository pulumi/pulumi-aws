// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Batch.Outputs
{

    [OutputType]
    public sealed class GetJobDefinitionEksPropertyPodPropertyInitContainerResult
    {
        /// <summary>
        /// An array of arguments to the entrypoint
        /// </summary>
        public readonly ImmutableArray<string> Args;
        /// <summary>
        /// The command that's passed to the container.
        /// </summary>
        public readonly ImmutableArray<string> Commands;
        /// <summary>
        /// The environment variables to pass to a container.  Array of EksContainerEnvironmentVariable objects.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetJobDefinitionEksPropertyPodPropertyInitContainerEnvResult> Envs;
        /// <summary>
        /// The image used to start a container.
        /// </summary>
        public readonly string Image;
        /// <summary>
        /// The image pull policy for the container.
        /// </summary>
        public readonly string ImagePullPolicy;
        /// <summary>
        /// The name of the job definition to register. It can be up to 128 letters long. It can contain uppercase and lowercase letters, numbers, hyphens (-), and underscores (_).
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The type and amount of resources to assign to a container.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetJobDefinitionEksPropertyPodPropertyInitContainerResourceResult> Resources;
        /// <summary>
        /// The security context for a job.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetJobDefinitionEksPropertyPodPropertyInitContainerSecurityContextResult> SecurityContexts;
        /// <summary>
        /// The volume mounts for the container.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetJobDefinitionEksPropertyPodPropertyInitContainerVolumeMountResult> VolumeMounts;

        [OutputConstructor]
        private GetJobDefinitionEksPropertyPodPropertyInitContainerResult(
            ImmutableArray<string> args,

            ImmutableArray<string> commands,

            ImmutableArray<Outputs.GetJobDefinitionEksPropertyPodPropertyInitContainerEnvResult> envs,

            string image,

            string imagePullPolicy,

            string name,

            ImmutableArray<Outputs.GetJobDefinitionEksPropertyPodPropertyInitContainerResourceResult> resources,

            ImmutableArray<Outputs.GetJobDefinitionEksPropertyPodPropertyInitContainerSecurityContextResult> securityContexts,

            ImmutableArray<Outputs.GetJobDefinitionEksPropertyPodPropertyInitContainerVolumeMountResult> volumeMounts)
        {
            Args = args;
            Commands = commands;
            Envs = envs;
            Image = image;
            ImagePullPolicy = imagePullPolicy;
            Name = name;
            Resources = resources;
            SecurityContexts = securityContexts;
            VolumeMounts = volumeMounts;
        }
    }
}
