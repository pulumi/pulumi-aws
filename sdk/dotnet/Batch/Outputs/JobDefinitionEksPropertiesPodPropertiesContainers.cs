// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Batch.Outputs
{

    [OutputType]
    public sealed class JobDefinitionEksPropertiesPodPropertiesContainers
    {
        /// <summary>
        /// An array of arguments to the entrypoint. If this isn't specified, the CMD of the container image is used. This corresponds to the args member in the Entrypoint portion of the Pod in Kubernetes. Environment variable references are expanded using the container's environment.
        /// </summary>
        public readonly ImmutableArray<string> Args;
        /// <summary>
        /// The entrypoint for the container. This isn't run within a shell. If this isn't specified, the ENTRYPOINT of the container image is used. Environment variable references are expanded using the container's environment.
        /// </summary>
        public readonly ImmutableArray<string> Commands;
        /// <summary>
        /// The environment variables to pass to a container. See EKS Environment below.
        /// </summary>
        public readonly ImmutableArray<Outputs.JobDefinitionEksPropertiesPodPropertiesContainersEnv> Envs;
        /// <summary>
        /// The Docker image used to start the container.
        /// </summary>
        public readonly string Image;
        /// <summary>
        /// The image pull policy for the container. Supported values are `Always`, `IfNotPresent`, and `Never`.
        /// </summary>
        public readonly string? ImagePullPolicy;
        /// <summary>
        /// The name of the container. If the name isn't specified, the default name "Default" is used. Each container in a pod must have a unique name.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The type and amount of resources to assign to a container. The supported resources include `memory`, `cpu`, and `nvidia.com/gpu`.
        /// </summary>
        public readonly Outputs.JobDefinitionEksPropertiesPodPropertiesContainersResources? Resources;
        /// <summary>
        /// The security context for a job.
        /// </summary>
        public readonly Outputs.JobDefinitionEksPropertiesPodPropertiesContainersSecurityContext? SecurityContext;
        /// <summary>
        /// The volume mounts for the container.
        /// </summary>
        public readonly ImmutableArray<Outputs.JobDefinitionEksPropertiesPodPropertiesContainersVolumeMount> VolumeMounts;

        [OutputConstructor]
        private JobDefinitionEksPropertiesPodPropertiesContainers(
            ImmutableArray<string> args,

            ImmutableArray<string> commands,

            ImmutableArray<Outputs.JobDefinitionEksPropertiesPodPropertiesContainersEnv> envs,

            string image,

            string? imagePullPolicy,

            string? name,

            Outputs.JobDefinitionEksPropertiesPodPropertiesContainersResources? resources,

            Outputs.JobDefinitionEksPropertiesPodPropertiesContainersSecurityContext? securityContext,

            ImmutableArray<Outputs.JobDefinitionEksPropertiesPodPropertiesContainersVolumeMount> volumeMounts)
        {
            Args = args;
            Commands = commands;
            Envs = envs;
            Image = image;
            ImagePullPolicy = imagePullPolicy;
            Name = name;
            Resources = resources;
            SecurityContext = securityContext;
            VolumeMounts = volumeMounts;
        }
    }
}
