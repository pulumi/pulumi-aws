// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Batch.Outputs
{

    [OutputType]
    public sealed class ComputeEnvironmentComputeResources
    {
        public readonly string? AllocationStrategy;
        public readonly int? BidPercentage;
        public readonly int? DesiredVcpus;
        public readonly Outputs.ComputeEnvironmentComputeResourcesEc2Configuration? Ec2Configuration;
        public readonly string? Ec2KeyPair;
        public readonly string? ImageId;
        public readonly string? InstanceRole;
        public readonly ImmutableArray<string> InstanceTypes;
        public readonly Outputs.ComputeEnvironmentComputeResourcesLaunchTemplate? LaunchTemplate;
        public readonly int MaxVcpus;
        public readonly int? MinVcpus;
        public readonly ImmutableArray<string> SecurityGroupIds;
        public readonly string? SpotIamFleetRole;
        public readonly ImmutableArray<string> Subnets;
        public readonly ImmutableDictionary<string, string>? Tags;
        public readonly string Type;

        [OutputConstructor]
        private ComputeEnvironmentComputeResources(
            string? allocationStrategy,

            int? bidPercentage,

            int? desiredVcpus,

            Outputs.ComputeEnvironmentComputeResourcesEc2Configuration? ec2Configuration,

            string? ec2KeyPair,

            string? imageId,

            string? instanceRole,

            ImmutableArray<string> instanceTypes,

            Outputs.ComputeEnvironmentComputeResourcesLaunchTemplate? launchTemplate,

            int maxVcpus,

            int? minVcpus,

            ImmutableArray<string> securityGroupIds,

            string? spotIamFleetRole,

            ImmutableArray<string> subnets,

            ImmutableDictionary<string, string>? tags,

            string type)
        {
            AllocationStrategy = allocationStrategy;
            BidPercentage = bidPercentage;
            DesiredVcpus = desiredVcpus;
            Ec2Configuration = ec2Configuration;
            Ec2KeyPair = ec2KeyPair;
            ImageId = imageId;
            InstanceRole = instanceRole;
            InstanceTypes = instanceTypes;
            LaunchTemplate = launchTemplate;
            MaxVcpus = maxVcpus;
            MinVcpus = minVcpus;
            SecurityGroupIds = securityGroupIds;
            SpotIamFleetRole = spotIamFleetRole;
            Subnets = subnets;
            Tags = tags;
            Type = type;
        }
    }
}
