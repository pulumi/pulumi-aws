// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Batch
{
    public static class GetJobQueue
    {
        /// <summary>
        /// The Batch Job Queue data source allows access to details of a specific
        /// job queue within AWS Batch.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test_queue = Aws.Batch.GetJobQueue.Invoke(new()
        ///     {
        ///         Name = "tf-test-batch-job-queue",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetJobQueueResult> InvokeAsync(GetJobQueueArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetJobQueueResult>("aws:batch/getJobQueue:getJobQueue", args ?? new GetJobQueueArgs(), options.WithDefaults());

        /// <summary>
        /// The Batch Job Queue data source allows access to details of a specific
        /// job queue within AWS Batch.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test_queue = Aws.Batch.GetJobQueue.Invoke(new()
        ///     {
        ///         Name = "tf-test-batch-job-queue",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetJobQueueResult> Invoke(GetJobQueueInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetJobQueueResult>("aws:batch/getJobQueue:getJobQueue", args ?? new GetJobQueueInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetJobQueueArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the job queue.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("tags")]
        private Dictionary<string, string>? _tags;

        /// <summary>
        /// Key-value map of resource tags
        /// </summary>
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetJobQueueArgs()
        {
        }
        public static new GetJobQueueArgs Empty => new GetJobQueueArgs();
    }

    public sealed class GetJobQueueInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the job queue.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value map of resource tags
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetJobQueueInvokeArgs()
        {
        }
        public static new GetJobQueueInvokeArgs Empty => new GetJobQueueInvokeArgs();
    }


    [OutputType]
    public sealed class GetJobQueueResult
    {
        /// <summary>
        /// ARN of the job queue.
        /// </summary>
        public readonly string Arn;
        /// <summary>
        /// The compute environments that are attached to the job queue and the order in
        /// which job placement is preferred. Compute environments are selected for job placement in ascending order.
        /// * `compute_environment_order.#.order` - The order of the compute environment.
        /// * `compute_environment_order.#.compute_environment` - The ARN of the compute environment.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetJobQueueComputeEnvironmentOrderResult> ComputeEnvironmentOrders;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        /// <summary>
        /// Priority of the job queue. Job queues with a higher priority are evaluated first when
        /// associated with the same compute environment.
        /// </summary>
        public readonly int Priority;
        /// <summary>
        /// The ARN of the fair share scheduling policy. If this attribute has a value, the job queue uses a fair share scheduling policy. If this attribute does not have a value, the job queue uses a first in, first out (FIFO) scheduling policy.
        /// </summary>
        public readonly string SchedulingPolicyArn;
        /// <summary>
        /// Describes the ability of the queue to accept new jobs (for example, `ENABLED` or `DISABLED`).
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Current status of the job queue (for example, `CREATING` or `VALID`).
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Short, human-readable string to provide additional details about the current status
        /// of the job queue.
        /// </summary>
        public readonly string StatusReason;
        /// <summary>
        /// Key-value map of resource tags
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;

        [OutputConstructor]
        private GetJobQueueResult(
            string arn,

            ImmutableArray<Outputs.GetJobQueueComputeEnvironmentOrderResult> computeEnvironmentOrders,

            string id,

            string name,

            int priority,

            string schedulingPolicyArn,

            string state,

            string status,

            string statusReason,

            ImmutableDictionary<string, string> tags)
        {
            Arn = arn;
            ComputeEnvironmentOrders = computeEnvironmentOrders;
            Id = id;
            Name = name;
            Priority = priority;
            SchedulingPolicyArn = schedulingPolicyArn;
            State = state;
            Status = status;
            StatusReason = statusReason;
            Tags = tags;
        }
    }
}
