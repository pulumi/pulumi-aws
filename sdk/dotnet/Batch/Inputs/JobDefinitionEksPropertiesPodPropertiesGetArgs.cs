// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Batch.Inputs
{

    public sealed class JobDefinitionEksPropertiesPodPropertiesGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Properties of the container that's used on the Amazon EKS pod. See containers below.
        /// </summary>
        [Input("containers", required: true)]
        public Input<Inputs.JobDefinitionEksPropertiesPodPropertiesContainersGetArgs> Containers { get; set; } = null!;

        /// <summary>
        /// DNS policy for the pod. The default value is `ClusterFirst`. If the `host_network` argument is not specified, the default is `ClusterFirstWithHostNet`. `ClusterFirst` indicates that any DNS query that does not match the configured cluster domain suffix is forwarded to the upstream nameserver inherited from the node. For more information, see Pod's DNS policy in the Kubernetes documentation.
        /// </summary>
        [Input("dnsPolicy")]
        public Input<string>? DnsPolicy { get; set; }

        /// <summary>
        /// Whether the pod uses the hosts' network IP address. The default value is `true`. Setting this to `false` enables the Kubernetes pod networking model. Most AWS Batch workloads are egress-only and don't require the overhead of IP allocation for each pod for incoming connections.
        /// </summary>
        [Input("hostNetwork")]
        public Input<bool>? HostNetwork { get; set; }

        [Input("imagePullSecrets")]
        private InputList<Inputs.JobDefinitionEksPropertiesPodPropertiesImagePullSecretGetArgs>? _imagePullSecrets;

        /// <summary>
        /// List of Kubernetes secret resources. See `image_pull_secret` below.
        /// </summary>
        public InputList<Inputs.JobDefinitionEksPropertiesPodPropertiesImagePullSecretGetArgs> ImagePullSecrets
        {
            get => _imagePullSecrets ?? (_imagePullSecrets = new InputList<Inputs.JobDefinitionEksPropertiesPodPropertiesImagePullSecretGetArgs>());
            set => _imagePullSecrets = value;
        }

        [Input("initContainers")]
        private InputList<Inputs.JobDefinitionEksPropertiesPodPropertiesInitContainerGetArgs>? _initContainers;

        /// <summary>
        /// Containers which run before application containers, always runs to completion, and must complete successfully before the next container starts. These containers are registered with the Amazon EKS Connector agent and persists the registration information in the Kubernetes backend data store. See containers below.
        /// </summary>
        public InputList<Inputs.JobDefinitionEksPropertiesPodPropertiesInitContainerGetArgs> InitContainers
        {
            get => _initContainers ?? (_initContainers = new InputList<Inputs.JobDefinitionEksPropertiesPodPropertiesInitContainerGetArgs>());
            set => _initContainers = value;
        }

        /// <summary>
        /// Metadata about the Kubernetes pod.
        /// </summary>
        [Input("metadata")]
        public Input<Inputs.JobDefinitionEksPropertiesPodPropertiesMetadataGetArgs>? Metadata { get; set; }

        /// <summary>
        /// Name of the service account that's used to run the pod.
        /// </summary>
        [Input("serviceAccountName")]
        public Input<string>? ServiceAccountName { get; set; }

        /// <summary>
        /// Indicates if the processes in a container are shared, or visible, to other containers in the same pod.
        /// </summary>
        [Input("shareProcessNamespace")]
        public Input<bool>? ShareProcessNamespace { get; set; }

        [Input("volumes")]
        private InputList<Inputs.JobDefinitionEksPropertiesPodPropertiesVolumeGetArgs>? _volumes;

        /// <summary>
        /// Volumes for a job definition that uses Amazon EKS resources. AWS Batch supports emptyDir, hostPath, and secret volume types.
        /// </summary>
        public InputList<Inputs.JobDefinitionEksPropertiesPodPropertiesVolumeGetArgs> Volumes
        {
            get => _volumes ?? (_volumes = new InputList<Inputs.JobDefinitionEksPropertiesPodPropertiesVolumeGetArgs>());
            set => _volumes = value;
        }

        public JobDefinitionEksPropertiesPodPropertiesGetArgs()
        {
        }
        public static new JobDefinitionEksPropertiesPodPropertiesGetArgs Empty => new JobDefinitionEksPropertiesPodPropertiesGetArgs();
    }
}
