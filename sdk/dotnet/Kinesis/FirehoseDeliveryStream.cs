// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Kinesis
{
    [AwsResourceType("aws:kinesis/firehoseDeliveryStream:FirehoseDeliveryStream")]
    public partial class FirehoseDeliveryStream : global::Pulumi.CustomResource
    {
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("destination")]
        public Output<string> Destination { get; private set; } = null!;

        [Output("destinationId")]
        public Output<string> DestinationId { get; private set; } = null!;

        [Output("elasticsearchConfiguration")]
        public Output<Outputs.FirehoseDeliveryStreamElasticsearchConfiguration?> ElasticsearchConfiguration { get; private set; } = null!;

        [Output("extendedS3Configuration")]
        public Output<Outputs.FirehoseDeliveryStreamExtendedS3Configuration?> ExtendedS3Configuration { get; private set; } = null!;

        [Output("httpEndpointConfiguration")]
        public Output<Outputs.FirehoseDeliveryStreamHttpEndpointConfiguration?> HttpEndpointConfiguration { get; private set; } = null!;

        [Output("kinesisSourceConfiguration")]
        public Output<Outputs.FirehoseDeliveryStreamKinesisSourceConfiguration?> KinesisSourceConfiguration { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("redshiftConfiguration")]
        public Output<Outputs.FirehoseDeliveryStreamRedshiftConfiguration?> RedshiftConfiguration { get; private set; } = null!;

        [Output("s3Configuration")]
        public Output<Outputs.FirehoseDeliveryStreamS3Configuration?> S3Configuration { get; private set; } = null!;

        [Output("serverSideEncryption")]
        public Output<Outputs.FirehoseDeliveryStreamServerSideEncryption?> ServerSideEncryption { get; private set; } = null!;

        [Output("splunkConfiguration")]
        public Output<Outputs.FirehoseDeliveryStreamSplunkConfiguration?> SplunkConfiguration { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("versionId")]
        public Output<string> VersionId { get; private set; } = null!;


        /// <summary>
        /// Create a FirehoseDeliveryStream resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FirehoseDeliveryStream(string name, FirehoseDeliveryStreamArgs args, CustomResourceOptions? options = null)
            : base("aws:kinesis/firehoseDeliveryStream:FirehoseDeliveryStream", name, args ?? new FirehoseDeliveryStreamArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FirehoseDeliveryStream(string name, Input<string> id, FirehoseDeliveryStreamState? state = null, CustomResourceOptions? options = null)
            : base("aws:kinesis/firehoseDeliveryStream:FirehoseDeliveryStream", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FirehoseDeliveryStream resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FirehoseDeliveryStream Get(string name, Input<string> id, FirehoseDeliveryStreamState? state = null, CustomResourceOptions? options = null)
        {
            return new FirehoseDeliveryStream(name, id, state, options);
        }
    }

    public sealed class FirehoseDeliveryStreamArgs : global::Pulumi.ResourceArgs
    {
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("destination", required: true)]
        public Input<string> Destination { get; set; } = null!;

        [Input("destinationId")]
        public Input<string>? DestinationId { get; set; }

        [Input("elasticsearchConfiguration")]
        public Input<Inputs.FirehoseDeliveryStreamElasticsearchConfigurationArgs>? ElasticsearchConfiguration { get; set; }

        [Input("extendedS3Configuration")]
        public Input<Inputs.FirehoseDeliveryStreamExtendedS3ConfigurationArgs>? ExtendedS3Configuration { get; set; }

        [Input("httpEndpointConfiguration")]
        public Input<Inputs.FirehoseDeliveryStreamHttpEndpointConfigurationArgs>? HttpEndpointConfiguration { get; set; }

        [Input("kinesisSourceConfiguration")]
        public Input<Inputs.FirehoseDeliveryStreamKinesisSourceConfigurationArgs>? KinesisSourceConfiguration { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("redshiftConfiguration")]
        public Input<Inputs.FirehoseDeliveryStreamRedshiftConfigurationArgs>? RedshiftConfiguration { get; set; }

        [Input("s3Configuration")]
        public Input<Inputs.FirehoseDeliveryStreamS3ConfigurationArgs>? S3Configuration { get; set; }

        [Input("serverSideEncryption")]
        public Input<Inputs.FirehoseDeliveryStreamServerSideEncryptionArgs>? ServerSideEncryption { get; set; }

        [Input("splunkConfiguration")]
        public Input<Inputs.FirehoseDeliveryStreamSplunkConfigurationArgs>? SplunkConfiguration { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("versionId")]
        public Input<string>? VersionId { get; set; }

        public FirehoseDeliveryStreamArgs()
        {
        }
        public static new FirehoseDeliveryStreamArgs Empty => new FirehoseDeliveryStreamArgs();
    }

    public sealed class FirehoseDeliveryStreamState : global::Pulumi.ResourceArgs
    {
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("destination")]
        public Input<string>? Destination { get; set; }

        [Input("destinationId")]
        public Input<string>? DestinationId { get; set; }

        [Input("elasticsearchConfiguration")]
        public Input<Inputs.FirehoseDeliveryStreamElasticsearchConfigurationGetArgs>? ElasticsearchConfiguration { get; set; }

        [Input("extendedS3Configuration")]
        public Input<Inputs.FirehoseDeliveryStreamExtendedS3ConfigurationGetArgs>? ExtendedS3Configuration { get; set; }

        [Input("httpEndpointConfiguration")]
        public Input<Inputs.FirehoseDeliveryStreamHttpEndpointConfigurationGetArgs>? HttpEndpointConfiguration { get; set; }

        [Input("kinesisSourceConfiguration")]
        public Input<Inputs.FirehoseDeliveryStreamKinesisSourceConfigurationGetArgs>? KinesisSourceConfiguration { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("redshiftConfiguration")]
        public Input<Inputs.FirehoseDeliveryStreamRedshiftConfigurationGetArgs>? RedshiftConfiguration { get; set; }

        [Input("s3Configuration")]
        public Input<Inputs.FirehoseDeliveryStreamS3ConfigurationGetArgs>? S3Configuration { get; set; }

        [Input("serverSideEncryption")]
        public Input<Inputs.FirehoseDeliveryStreamServerSideEncryptionGetArgs>? ServerSideEncryption { get; set; }

        [Input("splunkConfiguration")]
        public Input<Inputs.FirehoseDeliveryStreamSplunkConfigurationGetArgs>? SplunkConfiguration { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("versionId")]
        public Input<string>? VersionId { get; set; }

        public FirehoseDeliveryStreamState()
        {
        }
        public static new FirehoseDeliveryStreamState Empty => new FirehoseDeliveryStreamState();
    }
}
