// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Kinesis.Inputs
{

    public sealed class AnalyticsApplicationInputsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ARN of the Kinesis Analytics Application.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The Kinesis Firehose configuration for the streaming source. Conflicts with `kinesis_stream`.
        /// See Kinesis Firehose below for more details.
        /// </summary>
        [Input("kinesisFirehose")]
        public Input<Inputs.AnalyticsApplicationInputsKinesisFirehoseArgs>? KinesisFirehose { get; set; }

        /// <summary>
        /// The Kinesis Stream configuration for the streaming source. Conflicts with `kinesis_firehose`.
        /// See Kinesis Stream below for more details.
        /// </summary>
        [Input("kinesisStream")]
        public Input<Inputs.AnalyticsApplicationInputsKinesisStreamArgs>? KinesisStream { get; set; }

        /// <summary>
        /// The Name Prefix to use when creating an in-application stream.
        /// </summary>
        [Input("namePrefix", required: true)]
        public Input<string> NamePrefix { get; set; } = null!;

        /// <summary>
        /// The number of Parallel in-application streams to create.
        /// See Parallelism below for more details.
        /// </summary>
        [Input("parallelism")]
        public Input<Inputs.AnalyticsApplicationInputsParallelismArgs>? Parallelism { get; set; }

        /// <summary>
        /// The Processing Configuration to transform records as they are received from the stream.
        /// See Processing Configuration below for more details.
        /// </summary>
        [Input("processingConfiguration")]
        public Input<Inputs.AnalyticsApplicationInputsProcessingConfigurationArgs>? ProcessingConfiguration { get; set; }

        /// <summary>
        /// The Schema format of the data in the streaming source. See Source Schema below for more details.
        /// </summary>
        [Input("schema", required: true)]
        public Input<Inputs.AnalyticsApplicationInputsSchemaArgs> Schema { get; set; } = null!;

        [Input("startingPositionConfigurations")]
        private InputList<Inputs.AnalyticsApplicationInputsStartingPositionConfigurationArgs>? _startingPositionConfigurations;
        public InputList<Inputs.AnalyticsApplicationInputsStartingPositionConfigurationArgs> StartingPositionConfigurations
        {
            get => _startingPositionConfigurations ?? (_startingPositionConfigurations = new InputList<Inputs.AnalyticsApplicationInputsStartingPositionConfigurationArgs>());
            set => _startingPositionConfigurations = value;
        }

        [Input("streamNames")]
        private InputList<string>? _streamNames;
        public InputList<string> StreamNames
        {
            get => _streamNames ?? (_streamNames = new InputList<string>());
            set => _streamNames = value;
        }

        public AnalyticsApplicationInputsArgs()
        {
        }
    }
}
