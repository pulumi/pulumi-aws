// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Kinesis.Inputs
{

    public sealed class FirehoseDeliveryStreamSnowflakeConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The URL of the Snowflake account. Format: https://[account_identifier].snowflakecomputing.com.
        /// </summary>
        [Input("accountUrl", required: true)]
        public Input<string> AccountUrl { get; set; } = null!;

        /// <summary>
        /// Buffer incoming data for the specified period of time, in seconds between 0 to 900, before delivering it to the destination.  The default value is 0s.
        /// </summary>
        [Input("bufferingInterval")]
        public Input<int>? BufferingInterval { get; set; }

        /// <summary>
        /// Buffer incoming data to the specified size, in MBs between 1 to 128, before delivering it to the destination.  The default value is 1MB.
        /// </summary>
        [Input("bufferingSize")]
        public Input<int>? BufferingSize { get; set; }

        /// <summary>
        /// The CloudWatch Logging Options for the delivery stream. See `cloudwatch_logging_options` block below for details.
        /// </summary>
        [Input("cloudwatchLoggingOptions")]
        public Input<Inputs.FirehoseDeliveryStreamSnowflakeConfigurationCloudwatchLoggingOptionsArgs>? CloudwatchLoggingOptions { get; set; }

        /// <summary>
        /// The name of the content column.
        /// </summary>
        [Input("contentColumnName")]
        public Input<string>? ContentColumnName { get; set; }

        /// <summary>
        /// The data loading option.
        /// </summary>
        [Input("dataLoadingOption")]
        public Input<string>? DataLoadingOption { get; set; }

        /// <summary>
        /// The Snowflake database name.
        /// </summary>
        [Input("database", required: true)]
        public Input<string> Database { get; set; } = null!;

        [Input("keyPassphrase")]
        private Input<string>? _keyPassphrase;

        /// <summary>
        /// The passphrase for the private key.
        /// </summary>
        public Input<string>? KeyPassphrase
        {
            get => _keyPassphrase;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _keyPassphrase = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The name of the metadata column.
        /// </summary>
        [Input("metadataColumnName")]
        public Input<string>? MetadataColumnName { get; set; }

        [Input("privateKey")]
        private Input<string>? _privateKey;

        /// <summary>
        /// The private key for authentication. This value is required if `secrets_manager_configuration` is not provided.
        /// </summary>
        public Input<string>? PrivateKey
        {
            get => _privateKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _privateKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The processing configuration. See `processing_configuration` block below for details.
        /// </summary>
        [Input("processingConfiguration")]
        public Input<Inputs.FirehoseDeliveryStreamSnowflakeConfigurationProcessingConfigurationArgs>? ProcessingConfiguration { get; set; }

        /// <summary>
        /// After an initial failure to deliver to Snowflake, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 60s.  There will be no retry if the value is 0.
        /// </summary>
        [Input("retryDuration")]
        public Input<int>? RetryDuration { get; set; }

        /// <summary>
        /// The ARN of the IAM role.
        /// </summary>
        [Input("roleArn", required: true)]
        public Input<string> RoleArn { get; set; } = null!;

        /// <summary>
        /// The S3 backup mode.
        /// </summary>
        [Input("s3BackupMode")]
        public Input<string>? S3BackupMode { get; set; }

        /// <summary>
        /// The S3 configuration. See `s3_configuration` block below for details.
        /// </summary>
        [Input("s3Configuration", required: true)]
        public Input<Inputs.FirehoseDeliveryStreamSnowflakeConfigurationS3ConfigurationArgs> S3Configuration { get; set; } = null!;

        /// <summary>
        /// The Snowflake schema name.
        /// </summary>
        [Input("schema", required: true)]
        public Input<string> Schema { get; set; } = null!;

        /// <summary>
        /// The Secrets Manager configuration. See `secrets_manager_configuration` block below for details. This value is required if `user` and `private_key` are not provided.
        /// </summary>
        [Input("secretsManagerConfiguration")]
        public Input<Inputs.FirehoseDeliveryStreamSnowflakeConfigurationSecretsManagerConfigurationArgs>? SecretsManagerConfiguration { get; set; }

        /// <summary>
        /// The configuration for Snowflake role.
        /// </summary>
        [Input("snowflakeRoleConfiguration")]
        public Input<Inputs.FirehoseDeliveryStreamSnowflakeConfigurationSnowflakeRoleConfigurationArgs>? SnowflakeRoleConfiguration { get; set; }

        /// <summary>
        /// The VPC configuration for Snowflake.
        /// </summary>
        [Input("snowflakeVpcConfiguration")]
        public Input<Inputs.FirehoseDeliveryStreamSnowflakeConfigurationSnowflakeVpcConfigurationArgs>? SnowflakeVpcConfiguration { get; set; }

        /// <summary>
        /// The Snowflake table name.
        /// </summary>
        [Input("table", required: true)]
        public Input<string> Table { get; set; } = null!;

        /// <summary>
        /// The user for authentication. This value is required if `secrets_manager_configuration` is not provided.
        /// </summary>
        [Input("user")]
        public Input<string>? User { get; set; }

        public FirehoseDeliveryStreamSnowflakeConfigurationArgs()
        {
        }
        public static new FirehoseDeliveryStreamSnowflakeConfigurationArgs Empty => new FirehoseDeliveryStreamSnowflakeConfigurationArgs();
    }
}
