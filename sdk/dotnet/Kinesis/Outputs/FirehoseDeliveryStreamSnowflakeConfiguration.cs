// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Kinesis.Outputs
{

    [OutputType]
    public sealed class FirehoseDeliveryStreamSnowflakeConfiguration
    {
        /// <summary>
        /// The URL of the Snowflake account. Format: https://[account_identifier].snowflakecomputing.com.
        /// </summary>
        public readonly string AccountUrl;
        /// <summary>
        /// Buffer incoming data for the specified period of time, in seconds between 0 to 900, before delivering it to the destination.  The default value is 0s.
        /// </summary>
        public readonly int? BufferingInterval;
        /// <summary>
        /// Buffer incoming data to the specified size, in MBs between 1 to 128, before delivering it to the destination.  The default value is 1MB.
        /// </summary>
        public readonly int? BufferingSize;
        /// <summary>
        /// The CloudWatch Logging Options for the delivery stream. See `cloudwatch_logging_options` block below for details.
        /// </summary>
        public readonly Outputs.FirehoseDeliveryStreamSnowflakeConfigurationCloudwatchLoggingOptions? CloudwatchLoggingOptions;
        /// <summary>
        /// The name of the content column.
        /// </summary>
        public readonly string? ContentColumnName;
        /// <summary>
        /// The data loading option.
        /// </summary>
        public readonly string? DataLoadingOption;
        /// <summary>
        /// The Snowflake database name.
        /// </summary>
        public readonly string Database;
        /// <summary>
        /// The passphrase for the private key.
        /// </summary>
        public readonly string? KeyPassphrase;
        /// <summary>
        /// The name of the metadata column.
        /// </summary>
        public readonly string? MetadataColumnName;
        /// <summary>
        /// The private key for authentication. This value is required if `secrets_manager_configuration` is not provided.
        /// </summary>
        public readonly string? PrivateKey;
        /// <summary>
        /// The processing configuration. See `processing_configuration` block below for details.
        /// </summary>
        public readonly Outputs.FirehoseDeliveryStreamSnowflakeConfigurationProcessingConfiguration? ProcessingConfiguration;
        /// <summary>
        /// After an initial failure to deliver to Snowflake, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 60s.  There will be no retry if the value is 0.
        /// </summary>
        public readonly int? RetryDuration;
        /// <summary>
        /// The ARN of the IAM role.
        /// </summary>
        public readonly string RoleArn;
        /// <summary>
        /// The S3 backup mode.
        /// </summary>
        public readonly string? S3BackupMode;
        /// <summary>
        /// The S3 configuration. See `s3_configuration` block below for details.
        /// </summary>
        public readonly Outputs.FirehoseDeliveryStreamSnowflakeConfigurationS3Configuration S3Configuration;
        /// <summary>
        /// The Snowflake schema name.
        /// </summary>
        public readonly string Schema;
        /// <summary>
        /// The Secrets Manager configuration. See `secrets_manager_configuration` block below for details. This value is required if `user` and `private_key` are not provided.
        /// </summary>
        public readonly Outputs.FirehoseDeliveryStreamSnowflakeConfigurationSecretsManagerConfiguration? SecretsManagerConfiguration;
        /// <summary>
        /// The configuration for Snowflake role.
        /// </summary>
        public readonly Outputs.FirehoseDeliveryStreamSnowflakeConfigurationSnowflakeRoleConfiguration? SnowflakeRoleConfiguration;
        /// <summary>
        /// The VPC configuration for Snowflake.
        /// </summary>
        public readonly Outputs.FirehoseDeliveryStreamSnowflakeConfigurationSnowflakeVpcConfiguration? SnowflakeVpcConfiguration;
        /// <summary>
        /// The Snowflake table name.
        /// </summary>
        public readonly string Table;
        /// <summary>
        /// The user for authentication. This value is required if `secrets_manager_configuration` is not provided.
        /// </summary>
        public readonly string? User;

        [OutputConstructor]
        private FirehoseDeliveryStreamSnowflakeConfiguration(
            string accountUrl,

            int? bufferingInterval,

            int? bufferingSize,

            Outputs.FirehoseDeliveryStreamSnowflakeConfigurationCloudwatchLoggingOptions? cloudwatchLoggingOptions,

            string? contentColumnName,

            string? dataLoadingOption,

            string database,

            string? keyPassphrase,

            string? metadataColumnName,

            string? privateKey,

            Outputs.FirehoseDeliveryStreamSnowflakeConfigurationProcessingConfiguration? processingConfiguration,

            int? retryDuration,

            string roleArn,

            string? s3BackupMode,

            Outputs.FirehoseDeliveryStreamSnowflakeConfigurationS3Configuration s3Configuration,

            string schema,

            Outputs.FirehoseDeliveryStreamSnowflakeConfigurationSecretsManagerConfiguration? secretsManagerConfiguration,

            Outputs.FirehoseDeliveryStreamSnowflakeConfigurationSnowflakeRoleConfiguration? snowflakeRoleConfiguration,

            Outputs.FirehoseDeliveryStreamSnowflakeConfigurationSnowflakeVpcConfiguration? snowflakeVpcConfiguration,

            string table,

            string? user)
        {
            AccountUrl = accountUrl;
            BufferingInterval = bufferingInterval;
            BufferingSize = bufferingSize;
            CloudwatchLoggingOptions = cloudwatchLoggingOptions;
            ContentColumnName = contentColumnName;
            DataLoadingOption = dataLoadingOption;
            Database = database;
            KeyPassphrase = keyPassphrase;
            MetadataColumnName = metadataColumnName;
            PrivateKey = privateKey;
            ProcessingConfiguration = processingConfiguration;
            RetryDuration = retryDuration;
            RoleArn = roleArn;
            S3BackupMode = s3BackupMode;
            S3Configuration = s3Configuration;
            Schema = schema;
            SecretsManagerConfiguration = secretsManagerConfiguration;
            SnowflakeRoleConfiguration = snowflakeRoleConfiguration;
            SnowflakeVpcConfiguration = snowflakeVpcConfiguration;
            Table = table;
            User = user;
        }
    }
}
