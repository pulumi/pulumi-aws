// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Kinesis.Outputs
{

    [OutputType]
    public sealed class FirehoseDeliveryStreamExtendedS3Configuration
    {
        public readonly string BucketArn;
        public readonly int? BufferingInterval;
        public readonly int? BufferingSize;
        public readonly Outputs.FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions? CloudwatchLoggingOptions;
        public readonly string? CompressionFormat;
        /// <summary>
        /// The time zone you prefer. Valid values are `UTC` or a non-3-letter IANA time zones (for example, `America/Los_Angeles`). Default value is `UTC`.
        /// </summary>
        public readonly string? CustomTimeZone;
        /// <summary>
        /// Nested argument for the serializer, deserializer, and schema for converting data from the JSON format to the Parquet or ORC format before writing it to Amazon S3. See `data_format_conversion_configuration` block below for details.
        /// </summary>
        public readonly Outputs.FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration? DataFormatConversionConfiguration;
        /// <summary>
        /// The configuration for dynamic partitioning. Required when using [dynamic partitioning](https://docs.aws.amazon.com/firehose/latest/dev/dynamic-partitioning.html). See `dynamic_partitioning_configuration` block below for details.
        /// </summary>
        public readonly Outputs.FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfiguration? DynamicPartitioningConfiguration;
        public readonly string? ErrorOutputPrefix;
        /// <summary>
        /// The file extension to override the default file extension (for example, `.json`).
        /// </summary>
        public readonly string? FileExtension;
        public readonly string? KmsKeyArn;
        public readonly string? Prefix;
        /// <summary>
        /// The data processing configuration.  See `processing_configuration` block below for details.
        /// </summary>
        public readonly Outputs.FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration? ProcessingConfiguration;
        public readonly string RoleArn;
        /// <summary>
        /// The configuration for backup in Amazon S3. Required if `s3_backup_mode` is `Enabled`. Supports the same fields as `s3_configuration` object.
        /// </summary>
        public readonly Outputs.FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration? S3BackupConfiguration;
        /// <summary>
        /// The Amazon S3 backup mode.  Valid values are `Disabled` and `Enabled`.  Default value is `Disabled`.
        /// </summary>
        public readonly string? S3BackupMode;

        [OutputConstructor]
        private FirehoseDeliveryStreamExtendedS3Configuration(
            string bucketArn,

            int? bufferingInterval,

            int? bufferingSize,

            Outputs.FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions? cloudwatchLoggingOptions,

            string? compressionFormat,

            string? customTimeZone,

            Outputs.FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration? dataFormatConversionConfiguration,

            Outputs.FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfiguration? dynamicPartitioningConfiguration,

            string? errorOutputPrefix,

            string? fileExtension,

            string? kmsKeyArn,

            string? prefix,

            Outputs.FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration? processingConfiguration,

            string roleArn,

            Outputs.FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration? s3BackupConfiguration,

            string? s3BackupMode)
        {
            BucketArn = bucketArn;
            BufferingInterval = bufferingInterval;
            BufferingSize = bufferingSize;
            CloudwatchLoggingOptions = cloudwatchLoggingOptions;
            CompressionFormat = compressionFormat;
            CustomTimeZone = customTimeZone;
            DataFormatConversionConfiguration = dataFormatConversionConfiguration;
            DynamicPartitioningConfiguration = dynamicPartitioningConfiguration;
            ErrorOutputPrefix = errorOutputPrefix;
            FileExtension = fileExtension;
            KmsKeyArn = kmsKeyArn;
            Prefix = prefix;
            ProcessingConfiguration = processingConfiguration;
            RoleArn = roleArn;
            S3BackupConfiguration = s3BackupConfiguration;
            S3BackupMode = s3BackupMode;
        }
    }
}
