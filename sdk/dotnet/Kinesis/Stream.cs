// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Kinesis
{
    [AwsResourceType("aws:kinesis/stream:Stream")]
    public partial class Stream : global::Pulumi.CustomResource
    {
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("encryptionType")]
        public Output<string?> EncryptionType { get; private set; } = null!;

        [Output("enforceConsumerDeletion")]
        public Output<bool?> EnforceConsumerDeletion { get; private set; } = null!;

        [Output("kmsKeyId")]
        public Output<string?> KmsKeyId { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("retentionPeriod")]
        public Output<int?> RetentionPeriod { get; private set; } = null!;

        [Output("shardCount")]
        public Output<int?> ShardCount { get; private set; } = null!;

        [Output("shardLevelMetrics")]
        public Output<ImmutableArray<string>> ShardLevelMetrics { get; private set; } = null!;

        [Output("streamModeDetails")]
        public Output<Outputs.StreamStreamModeDetails> StreamModeDetails { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;


        /// <summary>
        /// Create a Stream resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Stream(string name, StreamArgs? args = null, CustomResourceOptions? options = null)
            : base("aws:kinesis/stream:Stream", name, args ?? new StreamArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Stream(string name, Input<string> id, StreamState? state = null, CustomResourceOptions? options = null)
            : base("aws:kinesis/stream:Stream", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Stream resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Stream Get(string name, Input<string> id, StreamState? state = null, CustomResourceOptions? options = null)
        {
            return new Stream(name, id, state, options);
        }
    }

    public sealed class StreamArgs : global::Pulumi.ResourceArgs
    {
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("encryptionType")]
        public Input<string>? EncryptionType { get; set; }

        [Input("enforceConsumerDeletion")]
        public Input<bool>? EnforceConsumerDeletion { get; set; }

        [Input("kmsKeyId")]
        public Input<string>? KmsKeyId { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("retentionPeriod")]
        public Input<int>? RetentionPeriod { get; set; }

        [Input("shardCount")]
        public Input<int>? ShardCount { get; set; }

        [Input("shardLevelMetrics")]
        private InputList<string>? _shardLevelMetrics;
        public InputList<string> ShardLevelMetrics
        {
            get => _shardLevelMetrics ?? (_shardLevelMetrics = new InputList<string>());
            set => _shardLevelMetrics = value;
        }

        [Input("streamModeDetails")]
        public Input<Inputs.StreamStreamModeDetailsArgs>? StreamModeDetails { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public StreamArgs()
        {
        }
        public static new StreamArgs Empty => new StreamArgs();
    }

    public sealed class StreamState : global::Pulumi.ResourceArgs
    {
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("encryptionType")]
        public Input<string>? EncryptionType { get; set; }

        [Input("enforceConsumerDeletion")]
        public Input<bool>? EnforceConsumerDeletion { get; set; }

        [Input("kmsKeyId")]
        public Input<string>? KmsKeyId { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("retentionPeriod")]
        public Input<int>? RetentionPeriod { get; set; }

        [Input("shardCount")]
        public Input<int>? ShardCount { get; set; }

        [Input("shardLevelMetrics")]
        private InputList<string>? _shardLevelMetrics;
        public InputList<string> ShardLevelMetrics
        {
            get => _shardLevelMetrics ?? (_shardLevelMetrics = new InputList<string>());
            set => _shardLevelMetrics = value;
        }

        [Input("streamModeDetails")]
        public Input<Inputs.StreamStreamModeDetailsGetArgs>? StreamModeDetails { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        public StreamState()
        {
        }
        public static new StreamState Empty => new StreamState();
    }
}
