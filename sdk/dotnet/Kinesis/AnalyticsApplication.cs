// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Kinesis
{
    [AwsResourceType("aws:kinesis/analyticsApplication:AnalyticsApplication")]
    public partial class AnalyticsApplication : global::Pulumi.CustomResource
    {
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("cloudwatchLoggingOptions")]
        public Output<Outputs.AnalyticsApplicationCloudwatchLoggingOptions?> CloudwatchLoggingOptions { get; private set; } = null!;

        [Output("code")]
        public Output<string?> Code { get; private set; } = null!;

        [Output("createTimestamp")]
        public Output<string> CreateTimestamp { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("inputs")]
        public Output<Outputs.AnalyticsApplicationInputs?> Inputs { get; private set; } = null!;

        [Output("lastUpdateTimestamp")]
        public Output<string> LastUpdateTimestamp { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("outputs")]
        public Output<ImmutableArray<Outputs.AnalyticsApplicationOutput>> Outputs { get; private set; } = null!;

        [Output("referenceDataSources")]
        public Output<Outputs.AnalyticsApplicationReferenceDataSources?> ReferenceDataSources { get; private set; } = null!;

        [Output("startApplication")]
        public Output<bool?> StartApplication { get; private set; } = null!;

        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("version")]
        public Output<int> Version { get; private set; } = null!;


        /// <summary>
        /// Create a AnalyticsApplication resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AnalyticsApplication(string name, AnalyticsApplicationArgs? args = null, CustomResourceOptions? options = null)
            : base("aws:kinesis/analyticsApplication:AnalyticsApplication", name, args ?? new AnalyticsApplicationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AnalyticsApplication(string name, Input<string> id, AnalyticsApplicationState? state = null, CustomResourceOptions? options = null)
            : base("aws:kinesis/analyticsApplication:AnalyticsApplication", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AnalyticsApplication resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AnalyticsApplication Get(string name, Input<string> id, AnalyticsApplicationState? state = null, CustomResourceOptions? options = null)
        {
            return new AnalyticsApplication(name, id, state, options);
        }
    }

    public sealed class AnalyticsApplicationArgs : global::Pulumi.ResourceArgs
    {
        [Input("cloudwatchLoggingOptions")]
        public Input<Inputs.AnalyticsApplicationCloudwatchLoggingOptionsArgs>? CloudwatchLoggingOptions { get; set; }

        [Input("code")]
        public Input<string>? Code { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("inputs")]
        public Input<Inputs.AnalyticsApplicationInputsArgs>? Inputs { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("outputs")]
        private InputList<Inputs.AnalyticsApplicationOutputArgs>? _outputs;
        public InputList<Inputs.AnalyticsApplicationOutputArgs> Outputs
        {
            get => _outputs ?? (_outputs = new InputList<Inputs.AnalyticsApplicationOutputArgs>());
            set => _outputs = value;
        }

        [Input("referenceDataSources")]
        public Input<Inputs.AnalyticsApplicationReferenceDataSourcesArgs>? ReferenceDataSources { get; set; }

        [Input("startApplication")]
        public Input<bool>? StartApplication { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public AnalyticsApplicationArgs()
        {
        }
        public static new AnalyticsApplicationArgs Empty => new AnalyticsApplicationArgs();
    }

    public sealed class AnalyticsApplicationState : global::Pulumi.ResourceArgs
    {
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("cloudwatchLoggingOptions")]
        public Input<Inputs.AnalyticsApplicationCloudwatchLoggingOptionsGetArgs>? CloudwatchLoggingOptions { get; set; }

        [Input("code")]
        public Input<string>? Code { get; set; }

        [Input("createTimestamp")]
        public Input<string>? CreateTimestamp { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("inputs")]
        public Input<Inputs.AnalyticsApplicationInputsGetArgs>? Inputs { get; set; }

        [Input("lastUpdateTimestamp")]
        public Input<string>? LastUpdateTimestamp { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("outputs")]
        private InputList<Inputs.AnalyticsApplicationOutputGetArgs>? _outputs;
        public InputList<Inputs.AnalyticsApplicationOutputGetArgs> Outputs
        {
            get => _outputs ?? (_outputs = new InputList<Inputs.AnalyticsApplicationOutputGetArgs>());
            set => _outputs = value;
        }

        [Input("referenceDataSources")]
        public Input<Inputs.AnalyticsApplicationReferenceDataSourcesGetArgs>? ReferenceDataSources { get; set; }

        [Input("startApplication")]
        public Input<bool>? StartApplication { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("version")]
        public Input<int>? Version { get; set; }

        public AnalyticsApplicationState()
        {
        }
        public static new AnalyticsApplicationState Empty => new AnalyticsApplicationState();
    }
}
