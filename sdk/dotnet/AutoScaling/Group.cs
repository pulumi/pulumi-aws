// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.AutoScaling
{
    [AwsResourceType("aws:autoscaling/group:Group")]
    public partial class Group : global::Pulumi.CustomResource
    {
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("availabilityZones")]
        public Output<ImmutableArray<string>> AvailabilityZones { get; private set; } = null!;

        [Output("capacityRebalance")]
        public Output<bool?> CapacityRebalance { get; private set; } = null!;

        [Output("context")]
        public Output<string?> Context { get; private set; } = null!;

        [Output("defaultCooldown")]
        public Output<int> DefaultCooldown { get; private set; } = null!;

        [Output("defaultInstanceWarmup")]
        public Output<int?> DefaultInstanceWarmup { get; private set; } = null!;

        [Output("desiredCapacity")]
        public Output<int> DesiredCapacity { get; private set; } = null!;

        [Output("desiredCapacityType")]
        public Output<string?> DesiredCapacityType { get; private set; } = null!;

        [Output("enabledMetrics")]
        public Output<ImmutableArray<string>> EnabledMetrics { get; private set; } = null!;

        [Output("forceDelete")]
        public Output<bool?> ForceDelete { get; private set; } = null!;

        [Output("forceDeleteWarmPool")]
        public Output<bool?> ForceDeleteWarmPool { get; private set; } = null!;

        [Output("healthCheckGracePeriod")]
        public Output<int?> HealthCheckGracePeriod { get; private set; } = null!;

        [Output("healthCheckType")]
        public Output<string> HealthCheckType { get; private set; } = null!;

        [Output("initialLifecycleHooks")]
        public Output<ImmutableArray<Outputs.GroupInitialLifecycleHook>> InitialLifecycleHooks { get; private set; } = null!;

        [Output("instanceRefresh")]
        public Output<Outputs.GroupInstanceRefresh?> InstanceRefresh { get; private set; } = null!;

        [Output("launchConfiguration")]
        public Output<string?> LaunchConfiguration { get; private set; } = null!;

        [Output("launchTemplate")]
        public Output<Outputs.GroupLaunchTemplate?> LaunchTemplate { get; private set; } = null!;

        [Output("loadBalancers")]
        public Output<ImmutableArray<string>> LoadBalancers { get; private set; } = null!;

        [Output("maxInstanceLifetime")]
        public Output<int?> MaxInstanceLifetime { get; private set; } = null!;

        [Output("maxSize")]
        public Output<int> MaxSize { get; private set; } = null!;

        [Output("metricsGranularity")]
        public Output<string?> MetricsGranularity { get; private set; } = null!;

        [Output("minElbCapacity")]
        public Output<int?> MinElbCapacity { get; private set; } = null!;

        [Output("minSize")]
        public Output<int> MinSize { get; private set; } = null!;

        [Output("mixedInstancesPolicy")]
        public Output<Outputs.GroupMixedInstancesPolicy?> MixedInstancesPolicy { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("namePrefix")]
        public Output<string> NamePrefix { get; private set; } = null!;

        [Output("placementGroup")]
        public Output<string?> PlacementGroup { get; private set; } = null!;

        [Output("protectFromScaleIn")]
        public Output<bool?> ProtectFromScaleIn { get; private set; } = null!;

        [Output("serviceLinkedRoleArn")]
        public Output<string> ServiceLinkedRoleArn { get; private set; } = null!;

        [Output("suspendedProcesses")]
        public Output<ImmutableArray<string>> SuspendedProcesses { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableArray<Outputs.GroupTag>> Tags { get; private set; } = null!;

        [Output("tagsCollection")]
        public Output<ImmutableArray<ImmutableDictionary<string, string>>> TagsCollection { get; private set; } = null!;

        [Output("targetGroupArns")]
        public Output<ImmutableArray<string>> TargetGroupArns { get; private set; } = null!;

        [Output("terminationPolicies")]
        public Output<ImmutableArray<string>> TerminationPolicies { get; private set; } = null!;

        [Output("vpcZoneIdentifiers")]
        public Output<ImmutableArray<string>> VpcZoneIdentifiers { get; private set; } = null!;

        [Output("waitForCapacityTimeout")]
        public Output<string?> WaitForCapacityTimeout { get; private set; } = null!;

        [Output("waitForElbCapacity")]
        public Output<int?> WaitForElbCapacity { get; private set; } = null!;

        [Output("warmPool")]
        public Output<Outputs.GroupWarmPool?> WarmPool { get; private set; } = null!;


        /// <summary>
        /// Create a Group resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Group(string name, GroupArgs args, CustomResourceOptions? options = null)
            : base("aws:autoscaling/group:Group", name, args ?? new GroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Group(string name, Input<string> id, GroupState? state = null, CustomResourceOptions? options = null)
            : base("aws:autoscaling/group:Group", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Group resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Group Get(string name, Input<string> id, GroupState? state = null, CustomResourceOptions? options = null)
        {
            return new Group(name, id, state, options);
        }
    }

    public sealed class GroupArgs : global::Pulumi.ResourceArgs
    {
        [Input("availabilityZones")]
        private InputList<string>? _availabilityZones;
        public InputList<string> AvailabilityZones
        {
            get => _availabilityZones ?? (_availabilityZones = new InputList<string>());
            set => _availabilityZones = value;
        }

        [Input("capacityRebalance")]
        public Input<bool>? CapacityRebalance { get; set; }

        [Input("context")]
        public Input<string>? Context { get; set; }

        [Input("defaultCooldown")]
        public Input<int>? DefaultCooldown { get; set; }

        [Input("defaultInstanceWarmup")]
        public Input<int>? DefaultInstanceWarmup { get; set; }

        [Input("desiredCapacity")]
        public Input<int>? DesiredCapacity { get; set; }

        [Input("desiredCapacityType")]
        public Input<string>? DesiredCapacityType { get; set; }

        [Input("enabledMetrics")]
        private InputList<string>? _enabledMetrics;
        public InputList<string> EnabledMetrics
        {
            get => _enabledMetrics ?? (_enabledMetrics = new InputList<string>());
            set => _enabledMetrics = value;
        }

        [Input("forceDelete")]
        public Input<bool>? ForceDelete { get; set; }

        [Input("forceDeleteWarmPool")]
        public Input<bool>? ForceDeleteWarmPool { get; set; }

        [Input("healthCheckGracePeriod")]
        public Input<int>? HealthCheckGracePeriod { get; set; }

        [Input("healthCheckType")]
        public Input<string>? HealthCheckType { get; set; }

        [Input("initialLifecycleHooks")]
        private InputList<Inputs.GroupInitialLifecycleHookArgs>? _initialLifecycleHooks;
        public InputList<Inputs.GroupInitialLifecycleHookArgs> InitialLifecycleHooks
        {
            get => _initialLifecycleHooks ?? (_initialLifecycleHooks = new InputList<Inputs.GroupInitialLifecycleHookArgs>());
            set => _initialLifecycleHooks = value;
        }

        [Input("instanceRefresh")]
        public Input<Inputs.GroupInstanceRefreshArgs>? InstanceRefresh { get; set; }

        [Input("launchConfiguration")]
        public Input<string>? LaunchConfiguration { get; set; }

        [Input("launchTemplate")]
        public Input<Inputs.GroupLaunchTemplateArgs>? LaunchTemplate { get; set; }

        [Input("loadBalancers")]
        private InputList<string>? _loadBalancers;
        public InputList<string> LoadBalancers
        {
            get => _loadBalancers ?? (_loadBalancers = new InputList<string>());
            set => _loadBalancers = value;
        }

        [Input("maxInstanceLifetime")]
        public Input<int>? MaxInstanceLifetime { get; set; }

        [Input("maxSize", required: true)]
        public Input<int> MaxSize { get; set; } = null!;

        [Input("metricsGranularity")]
        public InputUnion<string, Pulumi.Aws.AutoScaling.MetricsGranularity>? MetricsGranularity { get; set; }

        [Input("minElbCapacity")]
        public Input<int>? MinElbCapacity { get; set; }

        [Input("minSize", required: true)]
        public Input<int> MinSize { get; set; } = null!;

        [Input("mixedInstancesPolicy")]
        public Input<Inputs.GroupMixedInstancesPolicyArgs>? MixedInstancesPolicy { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("namePrefix")]
        public Input<string>? NamePrefix { get; set; }

        [Input("placementGroup")]
        public Input<string>? PlacementGroup { get; set; }

        [Input("protectFromScaleIn")]
        public Input<bool>? ProtectFromScaleIn { get; set; }

        [Input("serviceLinkedRoleArn")]
        public Input<string>? ServiceLinkedRoleArn { get; set; }

        [Input("suspendedProcesses")]
        private InputList<string>? _suspendedProcesses;
        public InputList<string> SuspendedProcesses
        {
            get => _suspendedProcesses ?? (_suspendedProcesses = new InputList<string>());
            set => _suspendedProcesses = value;
        }

        [Input("tags")]
        private InputList<Inputs.GroupTagArgs>? _tags;
        public InputList<Inputs.GroupTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.GroupTagArgs>());
            set => _tags = value;
        }

        [Input("tagsCollection")]
        private InputList<ImmutableDictionary<string, string>>? _tagsCollection;
        [Obsolete(@"Use tag instead")]
        public InputList<ImmutableDictionary<string, string>> TagsCollection
        {
            get => _tagsCollection ?? (_tagsCollection = new InputList<ImmutableDictionary<string, string>>());
            set => _tagsCollection = value;
        }

        [Input("targetGroupArns")]
        private InputList<string>? _targetGroupArns;
        public InputList<string> TargetGroupArns
        {
            get => _targetGroupArns ?? (_targetGroupArns = new InputList<string>());
            set => _targetGroupArns = value;
        }

        [Input("terminationPolicies")]
        private InputList<string>? _terminationPolicies;
        public InputList<string> TerminationPolicies
        {
            get => _terminationPolicies ?? (_terminationPolicies = new InputList<string>());
            set => _terminationPolicies = value;
        }

        [Input("vpcZoneIdentifiers")]
        private InputList<string>? _vpcZoneIdentifiers;
        public InputList<string> VpcZoneIdentifiers
        {
            get => _vpcZoneIdentifiers ?? (_vpcZoneIdentifiers = new InputList<string>());
            set => _vpcZoneIdentifiers = value;
        }

        [Input("waitForCapacityTimeout")]
        public Input<string>? WaitForCapacityTimeout { get; set; }

        [Input("waitForElbCapacity")]
        public Input<int>? WaitForElbCapacity { get; set; }

        [Input("warmPool")]
        public Input<Inputs.GroupWarmPoolArgs>? WarmPool { get; set; }

        public GroupArgs()
        {
        }
        public static new GroupArgs Empty => new GroupArgs();
    }

    public sealed class GroupState : global::Pulumi.ResourceArgs
    {
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("availabilityZones")]
        private InputList<string>? _availabilityZones;
        public InputList<string> AvailabilityZones
        {
            get => _availabilityZones ?? (_availabilityZones = new InputList<string>());
            set => _availabilityZones = value;
        }

        [Input("capacityRebalance")]
        public Input<bool>? CapacityRebalance { get; set; }

        [Input("context")]
        public Input<string>? Context { get; set; }

        [Input("defaultCooldown")]
        public Input<int>? DefaultCooldown { get; set; }

        [Input("defaultInstanceWarmup")]
        public Input<int>? DefaultInstanceWarmup { get; set; }

        [Input("desiredCapacity")]
        public Input<int>? DesiredCapacity { get; set; }

        [Input("desiredCapacityType")]
        public Input<string>? DesiredCapacityType { get; set; }

        [Input("enabledMetrics")]
        private InputList<string>? _enabledMetrics;
        public InputList<string> EnabledMetrics
        {
            get => _enabledMetrics ?? (_enabledMetrics = new InputList<string>());
            set => _enabledMetrics = value;
        }

        [Input("forceDelete")]
        public Input<bool>? ForceDelete { get; set; }

        [Input("forceDeleteWarmPool")]
        public Input<bool>? ForceDeleteWarmPool { get; set; }

        [Input("healthCheckGracePeriod")]
        public Input<int>? HealthCheckGracePeriod { get; set; }

        [Input("healthCheckType")]
        public Input<string>? HealthCheckType { get; set; }

        [Input("initialLifecycleHooks")]
        private InputList<Inputs.GroupInitialLifecycleHookGetArgs>? _initialLifecycleHooks;
        public InputList<Inputs.GroupInitialLifecycleHookGetArgs> InitialLifecycleHooks
        {
            get => _initialLifecycleHooks ?? (_initialLifecycleHooks = new InputList<Inputs.GroupInitialLifecycleHookGetArgs>());
            set => _initialLifecycleHooks = value;
        }

        [Input("instanceRefresh")]
        public Input<Inputs.GroupInstanceRefreshGetArgs>? InstanceRefresh { get; set; }

        [Input("launchConfiguration")]
        public Input<string>? LaunchConfiguration { get; set; }

        [Input("launchTemplate")]
        public Input<Inputs.GroupLaunchTemplateGetArgs>? LaunchTemplate { get; set; }

        [Input("loadBalancers")]
        private InputList<string>? _loadBalancers;
        public InputList<string> LoadBalancers
        {
            get => _loadBalancers ?? (_loadBalancers = new InputList<string>());
            set => _loadBalancers = value;
        }

        [Input("maxInstanceLifetime")]
        public Input<int>? MaxInstanceLifetime { get; set; }

        [Input("maxSize")]
        public Input<int>? MaxSize { get; set; }

        [Input("metricsGranularity")]
        public InputUnion<string, Pulumi.Aws.AutoScaling.MetricsGranularity>? MetricsGranularity { get; set; }

        [Input("minElbCapacity")]
        public Input<int>? MinElbCapacity { get; set; }

        [Input("minSize")]
        public Input<int>? MinSize { get; set; }

        [Input("mixedInstancesPolicy")]
        public Input<Inputs.GroupMixedInstancesPolicyGetArgs>? MixedInstancesPolicy { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("namePrefix")]
        public Input<string>? NamePrefix { get; set; }

        [Input("placementGroup")]
        public Input<string>? PlacementGroup { get; set; }

        [Input("protectFromScaleIn")]
        public Input<bool>? ProtectFromScaleIn { get; set; }

        [Input("serviceLinkedRoleArn")]
        public Input<string>? ServiceLinkedRoleArn { get; set; }

        [Input("suspendedProcesses")]
        private InputList<string>? _suspendedProcesses;
        public InputList<string> SuspendedProcesses
        {
            get => _suspendedProcesses ?? (_suspendedProcesses = new InputList<string>());
            set => _suspendedProcesses = value;
        }

        [Input("tags")]
        private InputList<Inputs.GroupTagGetArgs>? _tags;
        public InputList<Inputs.GroupTagGetArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.GroupTagGetArgs>());
            set => _tags = value;
        }

        [Input("tagsCollection")]
        private InputList<ImmutableDictionary<string, string>>? _tagsCollection;
        [Obsolete(@"Use tag instead")]
        public InputList<ImmutableDictionary<string, string>> TagsCollection
        {
            get => _tagsCollection ?? (_tagsCollection = new InputList<ImmutableDictionary<string, string>>());
            set => _tagsCollection = value;
        }

        [Input("targetGroupArns")]
        private InputList<string>? _targetGroupArns;
        public InputList<string> TargetGroupArns
        {
            get => _targetGroupArns ?? (_targetGroupArns = new InputList<string>());
            set => _targetGroupArns = value;
        }

        [Input("terminationPolicies")]
        private InputList<string>? _terminationPolicies;
        public InputList<string> TerminationPolicies
        {
            get => _terminationPolicies ?? (_terminationPolicies = new InputList<string>());
            set => _terminationPolicies = value;
        }

        [Input("vpcZoneIdentifiers")]
        private InputList<string>? _vpcZoneIdentifiers;
        public InputList<string> VpcZoneIdentifiers
        {
            get => _vpcZoneIdentifiers ?? (_vpcZoneIdentifiers = new InputList<string>());
            set => _vpcZoneIdentifiers = value;
        }

        [Input("waitForCapacityTimeout")]
        public Input<string>? WaitForCapacityTimeout { get; set; }

        [Input("waitForElbCapacity")]
        public Input<int>? WaitForElbCapacity { get; set; }

        [Input("warmPool")]
        public Input<Inputs.GroupWarmPoolGetArgs>? WarmPool { get; set; }

        public GroupState()
        {
        }
        public static new GroupState Empty => new GroupState();
    }
}
