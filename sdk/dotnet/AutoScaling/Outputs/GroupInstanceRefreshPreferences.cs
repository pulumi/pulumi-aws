// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.AutoScaling.Outputs
{

    [OutputType]
    public sealed class GroupInstanceRefreshPreferences
    {
        /// <summary>
        /// Alarm Specification for Instance Refresh.
        /// </summary>
        public readonly Outputs.GroupInstanceRefreshPreferencesAlarmSpecification? AlarmSpecification;
        /// <summary>
        /// Automatically rollback if instance refresh fails. Defaults to `false`. This option may only be set to `true` when specifying a `launch_template` or `mixed_instances_policy`.
        /// </summary>
        public readonly bool? AutoRollback;
        /// <summary>
        /// Number of seconds to wait after a checkpoint. Defaults to `3600`.
        /// </summary>
        public readonly string? CheckpointDelay;
        /// <summary>
        /// List of percentages for each checkpoint. Values must be unique and in ascending order. To replace all instances, the final number must be `100`.
        /// </summary>
        public readonly ImmutableArray<int> CheckpointPercentages;
        /// <summary>
        /// Number of seconds until a newly launched instance is configured and ready to use. Default behavior is to use the Auto Scaling Group's health check grace period.
        /// </summary>
        public readonly string? InstanceWarmup;
        /// <summary>
        /// Amount of capacity in the Auto Scaling group that can be in service and healthy, or pending, to support your workload when an instance refresh is in place, as a percentage of the desired capacity of the Auto Scaling group. Values must be between `100` and `200`, defaults to `100`.
        /// </summary>
        public readonly int? MaxHealthyPercentage;
        /// <summary>
        /// Amount of capacity in the Auto Scaling group that must remain healthy during an instance refresh to allow the operation to continue, as a percentage of the desired capacity of the Auto Scaling group. Defaults to `90`.
        /// </summary>
        public readonly int? MinHealthyPercentage;
        /// <summary>
        /// Behavior when encountering instances protected from scale in are found. Available behaviors are `Refresh`, `Ignore`, and `Wait`. Default is `Ignore`.
        /// </summary>
        public readonly string? ScaleInProtectedInstances;
        /// <summary>
        /// Replace instances that already have your desired configuration. Defaults to `false`.
        /// </summary>
        public readonly bool? SkipMatching;
        /// <summary>
        /// Behavior when encountering instances in the `Standby` state in are found. Available behaviors are `Terminate`, `Ignore`, and `Wait`. Default is `Ignore`.
        /// </summary>
        public readonly string? StandbyInstances;

        [OutputConstructor]
        private GroupInstanceRefreshPreferences(
            Outputs.GroupInstanceRefreshPreferencesAlarmSpecification? alarmSpecification,

            bool? autoRollback,

            string? checkpointDelay,

            ImmutableArray<int> checkpointPercentages,

            string? instanceWarmup,

            int? maxHealthyPercentage,

            int? minHealthyPercentage,

            string? scaleInProtectedInstances,

            bool? skipMatching,

            string? standbyInstances)
        {
            AlarmSpecification = alarmSpecification;
            AutoRollback = autoRollback;
            CheckpointDelay = checkpointDelay;
            CheckpointPercentages = checkpointPercentages;
            InstanceWarmup = instanceWarmup;
            MaxHealthyPercentage = maxHealthyPercentage;
            MinHealthyPercentage = minHealthyPercentage;
            ScaleInProtectedInstances = scaleInProtectedInstances;
            SkipMatching = skipMatching;
            StandbyInstances = standbyInstances;
        }
    }
}
