// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Chime
{
    /// <summary>
    /// Adds a logging configuration for the specified Amazon Chime Voice Connector. The logging configuration specifies whether SIP message logs are enabled for sending to Amazon CloudWatch Logs.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var defaultVoiceConnector = new Aws.Chime.VoiceConnector("defaultVoiceConnector", new()
    ///     {
    ///         RequireEncryption = true,
    ///     });
    /// 
    ///     var defaultVoiceConnectorLogging = new Aws.Chime.VoiceConnectorLogging("defaultVoiceConnectorLogging", new()
    ///     {
    ///         EnableSipLogs = true,
    ///         EnableMediaMetricLogs = true,
    ///         VoiceConnectorId = defaultVoiceConnector.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import Chime Voice Connector Logging using the `voice_connector_id`. For example:
    /// 
    /// ```sh
    ///  $ pulumi import aws:chime/voiceConnectorLogging:VoiceConnectorLogging default abcdef1ghij2klmno3pqr4
    /// ```
    /// </summary>
    [AwsResourceType("aws:chime/voiceConnectorLogging:VoiceConnectorLogging")]
    public partial class VoiceConnectorLogging : global::Pulumi.CustomResource
    {
        /// <summary>
        /// When true, enables logging of detailed media metrics for Voice Connectors to Amazon CloudWatch logs.
        /// </summary>
        [Output("enableMediaMetricLogs")]
        public Output<bool?> EnableMediaMetricLogs { get; private set; } = null!;

        /// <summary>
        /// When true, enables SIP message logs for sending to Amazon CloudWatch Logs.
        /// </summary>
        [Output("enableSipLogs")]
        public Output<bool?> EnableSipLogs { get; private set; } = null!;

        /// <summary>
        /// The Amazon Chime Voice Connector ID.
        /// </summary>
        [Output("voiceConnectorId")]
        public Output<string> VoiceConnectorId { get; private set; } = null!;


        /// <summary>
        /// Create a VoiceConnectorLogging resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VoiceConnectorLogging(string name, VoiceConnectorLoggingArgs args, CustomResourceOptions? options = null)
            : base("aws:chime/voiceConnectorLogging:VoiceConnectorLogging", name, args ?? new VoiceConnectorLoggingArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VoiceConnectorLogging(string name, Input<string> id, VoiceConnectorLoggingState? state = null, CustomResourceOptions? options = null)
            : base("aws:chime/voiceConnectorLogging:VoiceConnectorLogging", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VoiceConnectorLogging resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VoiceConnectorLogging Get(string name, Input<string> id, VoiceConnectorLoggingState? state = null, CustomResourceOptions? options = null)
        {
            return new VoiceConnectorLogging(name, id, state, options);
        }
    }

    public sealed class VoiceConnectorLoggingArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// When true, enables logging of detailed media metrics for Voice Connectors to Amazon CloudWatch logs.
        /// </summary>
        [Input("enableMediaMetricLogs")]
        public Input<bool>? EnableMediaMetricLogs { get; set; }

        /// <summary>
        /// When true, enables SIP message logs for sending to Amazon CloudWatch Logs.
        /// </summary>
        [Input("enableSipLogs")]
        public Input<bool>? EnableSipLogs { get; set; }

        /// <summary>
        /// The Amazon Chime Voice Connector ID.
        /// </summary>
        [Input("voiceConnectorId", required: true)]
        public Input<string> VoiceConnectorId { get; set; } = null!;

        public VoiceConnectorLoggingArgs()
        {
        }
        public static new VoiceConnectorLoggingArgs Empty => new VoiceConnectorLoggingArgs();
    }

    public sealed class VoiceConnectorLoggingState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// When true, enables logging of detailed media metrics for Voice Connectors to Amazon CloudWatch logs.
        /// </summary>
        [Input("enableMediaMetricLogs")]
        public Input<bool>? EnableMediaMetricLogs { get; set; }

        /// <summary>
        /// When true, enables SIP message logs for sending to Amazon CloudWatch Logs.
        /// </summary>
        [Input("enableSipLogs")]
        public Input<bool>? EnableSipLogs { get; set; }

        /// <summary>
        /// The Amazon Chime Voice Connector ID.
        /// </summary>
        [Input("voiceConnectorId")]
        public Input<string>? VoiceConnectorId { get; set; }

        public VoiceConnectorLoggingState()
        {
        }
        public static new VoiceConnectorLoggingState Empty => new VoiceConnectorLoggingState();
    }
}
