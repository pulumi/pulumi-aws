// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Quicksight.Inputs
{

    public sealed class VisualsLineChartVisualChartConfigurationGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("contributionAnalysisDefaults")]
        private InputList<Inputs.ContributionAnalysisDefaultsGetArgs>? _contributionAnalysisDefaults;
        public InputList<Inputs.ContributionAnalysisDefaultsGetArgs> ContributionAnalysisDefaults
        {
            get => _contributionAnalysisDefaults ?? (_contributionAnalysisDefaults = new InputList<Inputs.ContributionAnalysisDefaultsGetArgs>());
            set => _contributionAnalysisDefaults = value;
        }

        [Input("dataLabels")]
        public Input<Inputs.DataLabelsOptionsGetArgs>? DataLabels { get; set; }

        [Input("defaultSeriesSettings")]
        public Input<Inputs.VisualsLineChartVisualChartConfigurationDefaultSeriesSettingsGetArgs>? DefaultSeriesSettings { get; set; }

        [Input("fieldWells")]
        public Input<Inputs.VisualsLineChartVisualChartConfigurationFieldWellsGetArgs>? FieldWells { get; set; }

        [Input("forecastConfigurations")]
        private InputList<Inputs.VisualsLineChartVisualChartConfigurationForecastConfigurationGetArgs>? _forecastConfigurations;
        public InputList<Inputs.VisualsLineChartVisualChartConfigurationForecastConfigurationGetArgs> ForecastConfigurations
        {
            get => _forecastConfigurations ?? (_forecastConfigurations = new InputList<Inputs.VisualsLineChartVisualChartConfigurationForecastConfigurationGetArgs>());
            set => _forecastConfigurations = value;
        }

        [Input("legend")]
        public Input<Inputs.LegendOptionsGetArgs>? Legend { get; set; }

        [Input("primaryYAxisDisplayOptions")]
        public Input<Inputs.VisualsLineChartVisualChartConfigurationPrimaryYAxisDisplayOptionsGetArgs>? PrimaryYAxisDisplayOptions { get; set; }

        [Input("primaryYAxisLabelOptions")]
        public Input<Inputs.ChartAxisLabelOptionsGetArgs>? PrimaryYAxisLabelOptions { get; set; }

        [Input("referenceLines")]
        private InputList<Inputs.ReferenceLineGetArgs>? _referenceLines;
        public InputList<Inputs.ReferenceLineGetArgs> ReferenceLines
        {
            get => _referenceLines ?? (_referenceLines = new InputList<Inputs.ReferenceLineGetArgs>());
            set => _referenceLines = value;
        }

        [Input("secondaryYAxisDisplayOptions")]
        public Input<Inputs.VisualsLineChartVisualChartConfigurationSecondaryYAxisDisplayOptionsGetArgs>? SecondaryYAxisDisplayOptions { get; set; }

        [Input("secondaryYAxisLabelOptions")]
        public Input<Inputs.ChartAxisLabelOptionsGetArgs>? SecondaryYAxisLabelOptions { get; set; }

        [Input("series")]
        private InputList<Inputs.VisualsLineChartVisualChartConfigurationSeriesGetArgs>? _series;
        public InputList<Inputs.VisualsLineChartVisualChartConfigurationSeriesGetArgs> Series
        {
            get => _series ?? (_series = new InputList<Inputs.VisualsLineChartVisualChartConfigurationSeriesGetArgs>());
            set => _series = value;
        }

        [Input("smallMultiplesOptions")]
        public Input<Inputs.SmallMultiplesOptionsGetArgs>? SmallMultiplesOptions { get; set; }

        [Input("sortConfiguration")]
        public Input<Inputs.VisualsLineChartVisualChartConfigurationSortConfigurationGetArgs>? SortConfiguration { get; set; }

        [Input("tooltip")]
        public Input<Inputs.TooltipOptionsGetArgs>? Tooltip { get; set; }

        [Input("type")]
        public Input<string>? Type { get; set; }

        [Input("visualPalette")]
        public Input<Inputs.VisualPaletteGetArgs>? VisualPalette { get; set; }

        [Input("xAxisDisplayOptions")]
        public Input<Inputs.AxisDisplayOptionsGetArgs>? XAxisDisplayOptions { get; set; }

        [Input("xAxisLabelOptions")]
        public Input<Inputs.ChartAxisLabelOptionsGetArgs>? XAxisLabelOptions { get; set; }

        public VisualsLineChartVisualChartConfigurationGetArgs()
        {
        }
        public static new VisualsLineChartVisualChartConfigurationGetArgs Empty => new VisualsLineChartVisualChartConfigurationGetArgs();
    }
}
