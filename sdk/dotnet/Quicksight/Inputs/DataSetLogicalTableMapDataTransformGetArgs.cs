// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Quicksight.Inputs
{

    public sealed class DataSetLogicalTableMapDataTransformGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A transform operation that casts a column to a different type. See cast_column_type_operation.
        /// </summary>
        [Input("castColumnTypeOperation")]
        public Input<Inputs.DataSetLogicalTableMapDataTransformCastColumnTypeOperationGetArgs>? CastColumnTypeOperation { get; set; }

        /// <summary>
        /// An operation that creates calculated columns. Columns created in one such operation form a lexical closure. See create_columns_operation.
        /// </summary>
        [Input("createColumnsOperation")]
        public Input<Inputs.DataSetLogicalTableMapDataTransformCreateColumnsOperationGetArgs>? CreateColumnsOperation { get; set; }

        /// <summary>
        /// An operation that filters rows based on some condition. See filter_operation.
        /// </summary>
        [Input("filterOperation")]
        public Input<Inputs.DataSetLogicalTableMapDataTransformFilterOperationGetArgs>? FilterOperation { get; set; }

        /// <summary>
        /// An operation that projects columns. Operations that come after a projection can only refer to projected columns. See project_operation.
        /// </summary>
        [Input("projectOperation")]
        public Input<Inputs.DataSetLogicalTableMapDataTransformProjectOperationGetArgs>? ProjectOperation { get; set; }

        /// <summary>
        /// An operation that renames a column. See rename_column_operation.
        /// </summary>
        [Input("renameColumnOperation")]
        public Input<Inputs.DataSetLogicalTableMapDataTransformRenameColumnOperationGetArgs>? RenameColumnOperation { get; set; }

        /// <summary>
        /// An operation that tags a column with additional information. See tag_column_operation.
        /// </summary>
        [Input("tagColumnOperation")]
        public Input<Inputs.DataSetLogicalTableMapDataTransformTagColumnOperationGetArgs>? TagColumnOperation { get; set; }

        /// <summary>
        /// A transform operation that removes tags associated with a column. See untag_column_operation.
        /// </summary>
        [Input("untagColumnOperation")]
        public Input<Inputs.DataSetLogicalTableMapDataTransformUntagColumnOperationGetArgs>? UntagColumnOperation { get; set; }

        public DataSetLogicalTableMapDataTransformGetArgs()
        {
        }
        public static new DataSetLogicalTableMapDataTransformGetArgs Empty => new DataSetLogicalTableMapDataTransformGetArgs();
    }
}
