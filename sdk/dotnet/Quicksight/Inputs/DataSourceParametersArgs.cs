// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Quicksight.Inputs
{

    public sealed class DataSourceParametersArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Parameters for connecting to Amazon Elasticsearch.
        /// </summary>
        [Input("amazonElasticsearch")]
        public Input<Inputs.DataSourceParametersAmazonElasticsearchArgs>? AmazonElasticsearch { get; set; }

        /// <summary>
        /// Parameters for connecting to Athena.
        /// </summary>
        [Input("athena")]
        public Input<Inputs.DataSourceParametersAthenaArgs>? Athena { get; set; }

        /// <summary>
        /// Parameters for connecting to Aurora MySQL.
        /// </summary>
        [Input("aurora")]
        public Input<Inputs.DataSourceParametersAuroraArgs>? Aurora { get; set; }

        /// <summary>
        /// Parameters for connecting to Aurora Postgresql.
        /// </summary>
        [Input("auroraPostgresql")]
        public Input<Inputs.DataSourceParametersAuroraPostgresqlArgs>? AuroraPostgresql { get; set; }

        /// <summary>
        /// Parameters for connecting to AWS IOT Analytics.
        /// </summary>
        [Input("awsIotAnalytics")]
        public Input<Inputs.DataSourceParametersAwsIotAnalyticsArgs>? AwsIotAnalytics { get; set; }

        /// <summary>
        /// Parameters for connecting to Jira.
        /// </summary>
        [Input("jira")]
        public Input<Inputs.DataSourceParametersJiraArgs>? Jira { get; set; }

        /// <summary>
        /// Parameters for connecting to MariaDB.
        /// </summary>
        [Input("mariaDb")]
        public Input<Inputs.DataSourceParametersMariaDbArgs>? MariaDb { get; set; }

        /// <summary>
        /// Parameters for connecting to MySQL.
        /// </summary>
        [Input("mysql")]
        public Input<Inputs.DataSourceParametersMysqlArgs>? Mysql { get; set; }

        /// <summary>
        /// Parameters for connecting to Oracle.
        /// </summary>
        [Input("oracle")]
        public Input<Inputs.DataSourceParametersOracleArgs>? Oracle { get; set; }

        /// <summary>
        /// Parameters for connecting to Postgresql.
        /// </summary>
        [Input("postgresql")]
        public Input<Inputs.DataSourceParametersPostgresqlArgs>? Postgresql { get; set; }

        /// <summary>
        /// Parameters for connecting to Presto.
        /// </summary>
        [Input("presto")]
        public Input<Inputs.DataSourceParametersPrestoArgs>? Presto { get; set; }

        /// <summary>
        /// Parameters for connecting to RDS.
        /// </summary>
        [Input("rds")]
        public Input<Inputs.DataSourceParametersRdsArgs>? Rds { get; set; }

        /// <summary>
        /// Parameters for connecting to Redshift.
        /// </summary>
        [Input("redshift")]
        public Input<Inputs.DataSourceParametersRedshiftArgs>? Redshift { get; set; }

        /// <summary>
        /// Parameters for connecting to S3.
        /// </summary>
        [Input("s3")]
        public Input<Inputs.DataSourceParametersS3Args>? S3 { get; set; }

        /// <summary>
        /// Parameters for connecting to ServiceNow.
        /// </summary>
        [Input("serviceNow")]
        public Input<Inputs.DataSourceParametersServiceNowArgs>? ServiceNow { get; set; }

        /// <summary>
        /// Parameters for connecting to Snowflake.
        /// </summary>
        [Input("snowflake")]
        public Input<Inputs.DataSourceParametersSnowflakeArgs>? Snowflake { get; set; }

        /// <summary>
        /// Parameters for connecting to Spark.
        /// </summary>
        [Input("spark")]
        public Input<Inputs.DataSourceParametersSparkArgs>? Spark { get; set; }

        /// <summary>
        /// Parameters for connecting to SQL Server.
        /// </summary>
        [Input("sqlServer")]
        public Input<Inputs.DataSourceParametersSqlServerArgs>? SqlServer { get; set; }

        /// <summary>
        /// Parameters for connecting to Teradata.
        /// </summary>
        [Input("teradata")]
        public Input<Inputs.DataSourceParametersTeradataArgs>? Teradata { get; set; }

        /// <summary>
        /// Parameters for connecting to Twitter.
        /// </summary>
        [Input("twitter")]
        public Input<Inputs.DataSourceParametersTwitterArgs>? Twitter { get; set; }

        public DataSourceParametersArgs()
        {
        }
        public static new DataSourceParametersArgs Empty => new DataSourceParametersArgs();
    }
}
