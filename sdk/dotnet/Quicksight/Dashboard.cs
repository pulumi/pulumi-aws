// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Quicksight
{
    /// <summary>
    /// Resource for managing a QuickSight Dashboard.
    /// 
    /// ## Example Usage
    /// ### From Source Template
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Quicksight.Dashboard("example", new()
    ///     {
    ///         DashboardId = "example-id",
    ///         VersionDescription = "version",
    ///         SourceEntity = new Aws.Quicksight.Inputs.DashboardSourceEntityArgs
    ///         {
    ///             SourceTemplate = new Aws.Quicksight.Inputs.DashboardSourceEntitySourceTemplateArgs
    ///             {
    ///                 Arn = aws_quicksight_template.Source.Arn,
    ///                 DataSetReferences = new[]
    ///                 {
    ///                     new Aws.Quicksight.Inputs.DashboardSourceEntitySourceTemplateDataSetReferenceArgs
    ///                     {
    ///                         DataSetArn = aws_quicksight_data_set.Dataset.Arn,
    ///                         DataSetPlaceholder = "1",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// terraform import {
    /// 
    ///  to = aws_quicksight_dashboard.example
    /// 
    ///  id = "123456789012,example-id" } Using `pulumi import`, import a QuickSight Dashboard using the AWS account ID and dashboard ID separated by a comma (`,`). For exampleconsole % pulumi import aws_quicksight_dashboard.example 123456789012,example-id
    /// </summary>
    [AwsResourceType("aws:quicksight/dashboard:Dashboard")]
    public partial class Dashboard : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the resource.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// AWS account ID.
        /// </summary>
        [Output("awsAccountId")]
        public Output<string> AwsAccountId { get; private set; } = null!;

        /// <summary>
        /// The time that the dashboard was created.
        /// </summary>
        [Output("createdTime")]
        public Output<string> CreatedTime { get; private set; } = null!;

        /// <summary>
        /// Identifier for the dashboard.
        /// </summary>
        [Output("dashboardId")]
        public Output<string> DashboardId { get; private set; } = null!;

        /// <summary>
        /// Options for publishing the dashboard. See dashboard_publish_options.
        /// </summary>
        [Output("dashboardPublishOptions")]
        public Output<Outputs.DashboardDashboardPublishOptions> DashboardPublishOptions { get; private set; } = null!;

        [Output("lastPublishedTime")]
        public Output<string> LastPublishedTime { get; private set; } = null!;

        /// <summary>
        /// The time that the dashboard was last updated.
        /// </summary>
        [Output("lastUpdatedTime")]
        public Output<string> LastUpdatedTime { get; private set; } = null!;

        /// <summary>
        /// Display name for the dashboard.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The parameters for the creation of the dashboard, which you want to use to override the default settings. A dashboard can have any type of parameters, and some parameters might accept multiple values. See parameters.
        /// </summary>
        [Output("parameters")]
        public Output<Outputs.DashboardParameters> Parameters { get; private set; } = null!;

        /// <summary>
        /// A set of resource permissions on the dashboard. Maximum of 64 items. See permissions.
        /// </summary>
        [Output("permissions")]
        public Output<ImmutableArray<Outputs.DashboardPermission>> Permissions { get; private set; } = null!;

        /// <summary>
        /// The entity that you are using as a source when you create the dashboard (template). Only one of `definition` or `source_entity` should be configured. See source_entity.
        /// </summary>
        [Output("sourceEntity")]
        public Output<Outputs.DashboardSourceEntity?> SourceEntity { get; private set; } = null!;

        /// <summary>
        /// Amazon Resource Name (ARN) of a template that was used to create this dashboard.
        /// </summary>
        [Output("sourceEntityArn")]
        public Output<string> SourceEntityArn { get; private set; } = null!;

        /// <summary>
        /// The dashboard creation status.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the theme that is being used for this dashboard. The theme ARN must exist in the same AWS account where you create the dashboard.
        /// </summary>
        [Output("themeArn")]
        public Output<string?> ThemeArn { get; private set; } = null!;

        /// <summary>
        /// A description of the current dashboard version being created/updated.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Output("versionDescription")]
        public Output<string> VersionDescription { get; private set; } = null!;

        /// <summary>
        /// The version number of the dashboard version.
        /// </summary>
        [Output("versionNumber")]
        public Output<int> VersionNumber { get; private set; } = null!;


        /// <summary>
        /// Create a Dashboard resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Dashboard(string name, DashboardArgs args, CustomResourceOptions? options = null)
            : base("aws:quicksight/dashboard:Dashboard", name, args ?? new DashboardArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Dashboard(string name, Input<string> id, DashboardState? state = null, CustomResourceOptions? options = null)
            : base("aws:quicksight/dashboard:Dashboard", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Dashboard resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Dashboard Get(string name, Input<string> id, DashboardState? state = null, CustomResourceOptions? options = null)
        {
            return new Dashboard(name, id, state, options);
        }
    }

    public sealed class DashboardArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// AWS account ID.
        /// </summary>
        [Input("awsAccountId")]
        public Input<string>? AwsAccountId { get; set; }

        /// <summary>
        /// Identifier for the dashboard.
        /// </summary>
        [Input("dashboardId", required: true)]
        public Input<string> DashboardId { get; set; } = null!;

        /// <summary>
        /// Options for publishing the dashboard. See dashboard_publish_options.
        /// </summary>
        [Input("dashboardPublishOptions")]
        public Input<Inputs.DashboardDashboardPublishOptionsArgs>? DashboardPublishOptions { get; set; }

        /// <summary>
        /// Display name for the dashboard.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The parameters for the creation of the dashboard, which you want to use to override the default settings. A dashboard can have any type of parameters, and some parameters might accept multiple values. See parameters.
        /// </summary>
        [Input("parameters")]
        public Input<Inputs.DashboardParametersArgs>? Parameters { get; set; }

        [Input("permissions")]
        private InputList<Inputs.DashboardPermissionArgs>? _permissions;

        /// <summary>
        /// A set of resource permissions on the dashboard. Maximum of 64 items. See permissions.
        /// </summary>
        public InputList<Inputs.DashboardPermissionArgs> Permissions
        {
            get => _permissions ?? (_permissions = new InputList<Inputs.DashboardPermissionArgs>());
            set => _permissions = value;
        }

        /// <summary>
        /// The entity that you are using as a source when you create the dashboard (template). Only one of `definition` or `source_entity` should be configured. See source_entity.
        /// </summary>
        [Input("sourceEntity")]
        public Input<Inputs.DashboardSourceEntityArgs>? SourceEntity { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the theme that is being used for this dashboard. The theme ARN must exist in the same AWS account where you create the dashboard.
        /// </summary>
        [Input("themeArn")]
        public Input<string>? ThemeArn { get; set; }

        /// <summary>
        /// A description of the current dashboard version being created/updated.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("versionDescription", required: true)]
        public Input<string> VersionDescription { get; set; } = null!;

        public DashboardArgs()
        {
        }
        public static new DashboardArgs Empty => new DashboardArgs();
    }

    public sealed class DashboardState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the resource.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// AWS account ID.
        /// </summary>
        [Input("awsAccountId")]
        public Input<string>? AwsAccountId { get; set; }

        /// <summary>
        /// The time that the dashboard was created.
        /// </summary>
        [Input("createdTime")]
        public Input<string>? CreatedTime { get; set; }

        /// <summary>
        /// Identifier for the dashboard.
        /// </summary>
        [Input("dashboardId")]
        public Input<string>? DashboardId { get; set; }

        /// <summary>
        /// Options for publishing the dashboard. See dashboard_publish_options.
        /// </summary>
        [Input("dashboardPublishOptions")]
        public Input<Inputs.DashboardDashboardPublishOptionsGetArgs>? DashboardPublishOptions { get; set; }

        [Input("lastPublishedTime")]
        public Input<string>? LastPublishedTime { get; set; }

        /// <summary>
        /// The time that the dashboard was last updated.
        /// </summary>
        [Input("lastUpdatedTime")]
        public Input<string>? LastUpdatedTime { get; set; }

        /// <summary>
        /// Display name for the dashboard.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The parameters for the creation of the dashboard, which you want to use to override the default settings. A dashboard can have any type of parameters, and some parameters might accept multiple values. See parameters.
        /// </summary>
        [Input("parameters")]
        public Input<Inputs.DashboardParametersGetArgs>? Parameters { get; set; }

        [Input("permissions")]
        private InputList<Inputs.DashboardPermissionGetArgs>? _permissions;

        /// <summary>
        /// A set of resource permissions on the dashboard. Maximum of 64 items. See permissions.
        /// </summary>
        public InputList<Inputs.DashboardPermissionGetArgs> Permissions
        {
            get => _permissions ?? (_permissions = new InputList<Inputs.DashboardPermissionGetArgs>());
            set => _permissions = value;
        }

        /// <summary>
        /// The entity that you are using as a source when you create the dashboard (template). Only one of `definition` or `source_entity` should be configured. See source_entity.
        /// </summary>
        [Input("sourceEntity")]
        public Input<Inputs.DashboardSourceEntityGetArgs>? SourceEntity { get; set; }

        /// <summary>
        /// Amazon Resource Name (ARN) of a template that was used to create this dashboard.
        /// </summary>
        [Input("sourceEntityArn")]
        public Input<string>? SourceEntityArn { get; set; }

        /// <summary>
        /// The dashboard creation status.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the theme that is being used for this dashboard. The theme ARN must exist in the same AWS account where you create the dashboard.
        /// </summary>
        [Input("themeArn")]
        public Input<string>? ThemeArn { get; set; }

        /// <summary>
        /// A description of the current dashboard version being created/updated.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("versionDescription")]
        public Input<string>? VersionDescription { get; set; }

        /// <summary>
        /// The version number of the dashboard version.
        /// </summary>
        [Input("versionNumber")]
        public Input<int>? VersionNumber { get; set; }

        public DashboardState()
        {
        }
        public static new DashboardState Empty => new DashboardState();
    }
}
