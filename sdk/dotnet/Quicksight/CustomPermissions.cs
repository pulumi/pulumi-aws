// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Quicksight
{
    /// <summary>
    /// Manages a QuickSight custom permissions profile.
    /// 
    /// ## Example Usage
    /// 
    /// resource "aws.quicksight.CustomPermissions" "example" {
    ///   CustomPermissionsName = "example-permissions"
    /// 
    ///   capabilities {
    ///     PrintReports    = "DENY"
    ///     ShareDashboards = "DENY"
    ///   }
    /// }
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import a QuickSight custom permissions profile using the AWS account ID and custom permissions profile name separated by a comma (`,`). For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:quicksight/customPermissions:CustomPermissions example 123456789012,example-permissions
    /// ```
    /// </summary>
    [AwsResourceType("aws:quicksight/customPermissions:CustomPermissions")]
    public partial class CustomPermissions : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ARN of the custom permissions profile.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("awsAccountId")]
        public Output<string> AwsAccountId { get; private set; } = null!;

        /// <summary>
        /// Actions to include in the custom permissions profile. See capabilities.
        /// </summary>
        [Output("capabilities")]
        public Output<Outputs.CustomPermissionsCapabilities?> Capabilities { get; private set; } = null!;

        /// <summary>
        /// Custom permissions profile name.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Output("customPermissionsName")]
        public Output<string> CustomPermissionsName { get; private set; } = null!;

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// Key-value map of resource tags. If configured with a provider `DefaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `DefaultTags` configuration block.
        /// </summary>
        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;


        /// <summary>
        /// Create a CustomPermissions resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CustomPermissions(string name, CustomPermissionsArgs args, CustomResourceOptions? options = null)
            : base("aws:quicksight/customPermissions:CustomPermissions", name, args ?? new CustomPermissionsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CustomPermissions(string name, Input<string> id, CustomPermissionsState? state = null, CustomResourceOptions? options = null)
            : base("aws:quicksight/customPermissions:CustomPermissions", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CustomPermissions resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CustomPermissions Get(string name, Input<string> id, CustomPermissionsState? state = null, CustomResourceOptions? options = null)
        {
            return new CustomPermissions(name, id, state, options);
        }
    }

    public sealed class CustomPermissionsArgs : global::Pulumi.ResourceArgs
    {
        [Input("awsAccountId")]
        public Input<string>? AwsAccountId { get; set; }

        /// <summary>
        /// Actions to include in the custom permissions profile. See capabilities.
        /// </summary>
        [Input("capabilities")]
        public Input<Inputs.CustomPermissionsCapabilitiesArgs>? Capabilities { get; set; }

        /// <summary>
        /// Custom permissions profile name.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("customPermissionsName", required: true)]
        public Input<string> CustomPermissionsName { get; set; } = null!;

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value map of resource tags. If configured with a provider `DefaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public CustomPermissionsArgs()
        {
        }
        public static new CustomPermissionsArgs Empty => new CustomPermissionsArgs();
    }

    public sealed class CustomPermissionsState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ARN of the custom permissions profile.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("awsAccountId")]
        public Input<string>? AwsAccountId { get; set; }

        /// <summary>
        /// Actions to include in the custom permissions profile. See capabilities.
        /// </summary>
        [Input("capabilities")]
        public Input<Inputs.CustomPermissionsCapabilitiesGetArgs>? Capabilities { get; set; }

        /// <summary>
        /// Custom permissions profile name.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("customPermissionsName")]
        public Input<string>? CustomPermissionsName { get; set; }

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value map of resource tags. If configured with a provider `DefaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `DefaultTags` configuration block.
        /// </summary>
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        public CustomPermissionsState()
        {
        }
        public static new CustomPermissionsState Empty => new CustomPermissionsState();
    }
}
