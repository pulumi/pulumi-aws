// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Quicksight
{
    /// <summary>
    /// Resource for managing an AWS QuickSight IAM Policy Assignment.
    /// 
    /// ## Example Usage
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Quicksight.IamPolicyAssignment("example", new()
    ///     {
    ///         AssignmentName = "example",
    ///         AssignmentStatus = "ENABLED",
    ///         PolicyArn = aws_iam_policy.Example.Arn,
    ///         Identities = new Aws.Quicksight.Inputs.IamPolicyAssignmentIdentitiesArgs
    ///         {
    ///             Users = new[]
    ///             {
    ///                 aws_quicksight_user.Example.User_name,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import QuickSight IAM Policy Assignment using the AWS account ID, namespace, and assignment name separated by commas (`,`). For example:
    /// 
    /// ```sh
    ///  $ pulumi import aws:quicksight/iamPolicyAssignment:IamPolicyAssignment example 123456789012,default,example
    /// ```
    /// </summary>
    [AwsResourceType("aws:quicksight/iamPolicyAssignment:IamPolicyAssignment")]
    public partial class IamPolicyAssignment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Assignment ID.
        /// </summary>
        [Output("assignmentId")]
        public Output<string> AssignmentId { get; private set; } = null!;

        /// <summary>
        /// Name of the assignment.
        /// </summary>
        [Output("assignmentName")]
        public Output<string> AssignmentName { get; private set; } = null!;

        /// <summary>
        /// Status of the assignment. Valid values are `ENABLED`, `DISABLED`, and `DRAFT`.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Output("assignmentStatus")]
        public Output<string> AssignmentStatus { get; private set; } = null!;

        /// <summary>
        /// AWS account ID.
        /// </summary>
        [Output("awsAccountId")]
        public Output<string> AwsAccountId { get; private set; } = null!;

        /// <summary>
        /// Amazon QuickSight users, groups, or both to assign the policy to. See `identities`.
        /// </summary>
        [Output("identities")]
        public Output<Outputs.IamPolicyAssignmentIdentities?> Identities { get; private set; } = null!;

        /// <summary>
        /// Namespace that contains the assignment. Defaults to `default`.
        /// </summary>
        [Output("namespace")]
        public Output<string> Namespace { get; private set; } = null!;

        /// <summary>
        /// ARN of the IAM policy to apply to the Amazon QuickSight users and groups specified in this assignment.
        /// </summary>
        [Output("policyArn")]
        public Output<string?> PolicyArn { get; private set; } = null!;


        /// <summary>
        /// Create a IamPolicyAssignment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IamPolicyAssignment(string name, IamPolicyAssignmentArgs args, CustomResourceOptions? options = null)
            : base("aws:quicksight/iamPolicyAssignment:IamPolicyAssignment", name, args ?? new IamPolicyAssignmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private IamPolicyAssignment(string name, Input<string> id, IamPolicyAssignmentState? state = null, CustomResourceOptions? options = null)
            : base("aws:quicksight/iamPolicyAssignment:IamPolicyAssignment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IamPolicyAssignment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IamPolicyAssignment Get(string name, Input<string> id, IamPolicyAssignmentState? state = null, CustomResourceOptions? options = null)
        {
            return new IamPolicyAssignment(name, id, state, options);
        }
    }

    public sealed class IamPolicyAssignmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the assignment.
        /// </summary>
        [Input("assignmentName", required: true)]
        public Input<string> AssignmentName { get; set; } = null!;

        /// <summary>
        /// Status of the assignment. Valid values are `ENABLED`, `DISABLED`, and `DRAFT`.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("assignmentStatus", required: true)]
        public Input<string> AssignmentStatus { get; set; } = null!;

        /// <summary>
        /// AWS account ID.
        /// </summary>
        [Input("awsAccountId")]
        public Input<string>? AwsAccountId { get; set; }

        /// <summary>
        /// Amazon QuickSight users, groups, or both to assign the policy to. See `identities`.
        /// </summary>
        [Input("identities")]
        public Input<Inputs.IamPolicyAssignmentIdentitiesArgs>? Identities { get; set; }

        /// <summary>
        /// Namespace that contains the assignment. Defaults to `default`.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        /// <summary>
        /// ARN of the IAM policy to apply to the Amazon QuickSight users and groups specified in this assignment.
        /// </summary>
        [Input("policyArn")]
        public Input<string>? PolicyArn { get; set; }

        public IamPolicyAssignmentArgs()
        {
        }
        public static new IamPolicyAssignmentArgs Empty => new IamPolicyAssignmentArgs();
    }

    public sealed class IamPolicyAssignmentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Assignment ID.
        /// </summary>
        [Input("assignmentId")]
        public Input<string>? AssignmentId { get; set; }

        /// <summary>
        /// Name of the assignment.
        /// </summary>
        [Input("assignmentName")]
        public Input<string>? AssignmentName { get; set; }

        /// <summary>
        /// Status of the assignment. Valid values are `ENABLED`, `DISABLED`, and `DRAFT`.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("assignmentStatus")]
        public Input<string>? AssignmentStatus { get; set; }

        /// <summary>
        /// AWS account ID.
        /// </summary>
        [Input("awsAccountId")]
        public Input<string>? AwsAccountId { get; set; }

        /// <summary>
        /// Amazon QuickSight users, groups, or both to assign the policy to. See `identities`.
        /// </summary>
        [Input("identities")]
        public Input<Inputs.IamPolicyAssignmentIdentitiesGetArgs>? Identities { get; set; }

        /// <summary>
        /// Namespace that contains the assignment. Defaults to `default`.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        /// <summary>
        /// ARN of the IAM policy to apply to the Amazon QuickSight users and groups specified in this assignment.
        /// </summary>
        [Input("policyArn")]
        public Input<string>? PolicyArn { get; set; }

        public IamPolicyAssignmentState()
        {
        }
        public static new IamPolicyAssignmentState Empty => new IamPolicyAssignmentState();
    }
}
