// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Quicksight
{
    /// <summary>
    /// Registers customer managed keys in a Amazon QuickSight account.
    /// 
    /// &gt; Deletion of this resource clears all CMK registrations from a QuickSight account. QuickSight then uses AWS owned keys to encrypt your resources.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Quicksight.KeyRegistration("example", new()
    ///     {
    ///         KeyRegistrations = new[]
    ///         {
    ///             new Aws.Quicksight.Inputs.KeyRegistrationKeyRegistrationArgs
    ///             {
    ///                 KeyArn = example1.Arn,
    ///             },
    ///             new Aws.Quicksight.Inputs.KeyRegistrationKeyRegistrationArgs
    ///             {
    ///                 KeyArn = example2.Arn,
    ///                 DefaultKey = true,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import QuickSight key registration using the AWS account ID. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:quicksight/keyRegistration:KeyRegistration example "012345678901"
    /// ```
    /// </summary>
    [AwsResourceType("aws:quicksight/keyRegistration:KeyRegistration")]
    public partial class KeyRegistration : global::Pulumi.CustomResource
    {
        [Output("awsAccountId")]
        public Output<string> AwsAccountId { get; private set; } = null!;

        /// <summary>
        /// Registered keys. See key_registration.
        /// </summary>
        [Output("keyRegistrations")]
        public Output<ImmutableArray<Outputs.KeyRegistrationKeyRegistration>> KeyRegistrations { get; private set; } = null!;

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;


        /// <summary>
        /// Create a KeyRegistration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public KeyRegistration(string name, KeyRegistrationArgs? args = null, CustomResourceOptions? options = null)
            : base("aws:quicksight/keyRegistration:KeyRegistration", name, args ?? new KeyRegistrationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private KeyRegistration(string name, Input<string> id, KeyRegistrationState? state = null, CustomResourceOptions? options = null)
            : base("aws:quicksight/keyRegistration:KeyRegistration", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing KeyRegistration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static KeyRegistration Get(string name, Input<string> id, KeyRegistrationState? state = null, CustomResourceOptions? options = null)
        {
            return new KeyRegistration(name, id, state, options);
        }
    }

    public sealed class KeyRegistrationArgs : global::Pulumi.ResourceArgs
    {
        [Input("awsAccountId")]
        public Input<string>? AwsAccountId { get; set; }

        [Input("keyRegistrations")]
        private InputList<Inputs.KeyRegistrationKeyRegistrationArgs>? _keyRegistrations;

        /// <summary>
        /// Registered keys. See key_registration.
        /// </summary>
        public InputList<Inputs.KeyRegistrationKeyRegistrationArgs> KeyRegistrations
        {
            get => _keyRegistrations ?? (_keyRegistrations = new InputList<Inputs.KeyRegistrationKeyRegistrationArgs>());
            set => _keyRegistrations = value;
        }

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public KeyRegistrationArgs()
        {
        }
        public static new KeyRegistrationArgs Empty => new KeyRegistrationArgs();
    }

    public sealed class KeyRegistrationState : global::Pulumi.ResourceArgs
    {
        [Input("awsAccountId")]
        public Input<string>? AwsAccountId { get; set; }

        [Input("keyRegistrations")]
        private InputList<Inputs.KeyRegistrationKeyRegistrationGetArgs>? _keyRegistrations;

        /// <summary>
        /// Registered keys. See key_registration.
        /// </summary>
        public InputList<Inputs.KeyRegistrationKeyRegistrationGetArgs> KeyRegistrations
        {
            get => _keyRegistrations ?? (_keyRegistrations = new InputList<Inputs.KeyRegistrationKeyRegistrationGetArgs>());
            set => _keyRegistrations = value;
        }

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public KeyRegistrationState()
        {
        }
        public static new KeyRegistrationState Empty => new KeyRegistrationState();
    }
}
