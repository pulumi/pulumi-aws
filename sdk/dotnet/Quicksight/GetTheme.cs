// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Quicksight
{
    public static class GetTheme
    {
        /// <summary>
        /// Data source for managing an AWS QuickSight Theme.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Quicksight.GetTheme.Invoke(new()
        ///     {
        ///         ThemeId = "example",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetThemeResult> InvokeAsync(GetThemeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetThemeResult>("aws:quicksight/getTheme:getTheme", args ?? new GetThemeArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for managing an AWS QuickSight Theme.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Quicksight.GetTheme.Invoke(new()
        ///     {
        ///         ThemeId = "example",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetThemeResult> Invoke(GetThemeInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetThemeResult>("aws:quicksight/getTheme:getTheme", args ?? new GetThemeInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetThemeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// AWS account ID.
        /// </summary>
        [Input("awsAccountId")]
        public string? AwsAccountId { get; set; }

        [Input("tags")]
        private Dictionary<string, string>? _tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        /// <summary>
        /// Identifier of the theme.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("themeId", required: true)]
        public string ThemeId { get; set; } = null!;

        public GetThemeArgs()
        {
        }
        public static new GetThemeArgs Empty => new GetThemeArgs();
    }

    public sealed class GetThemeInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// AWS account ID.
        /// </summary>
        [Input("awsAccountId")]
        public Input<string>? AwsAccountId { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Identifier of the theme.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("themeId", required: true)]
        public Input<string> ThemeId { get; set; } = null!;

        public GetThemeInvokeArgs()
        {
        }
        public static new GetThemeInvokeArgs Empty => new GetThemeInvokeArgs();
    }


    [OutputType]
    public sealed class GetThemeResult
    {
        /// <summary>
        /// ARN of the theme.
        /// </summary>
        public readonly string Arn;
        public readonly string AwsAccountId;
        /// <summary>
        /// The ID of the theme that a custom theme will inherit from. All themes inherit from one of the starting themes defined by Amazon QuickSight.
        /// </summary>
        public readonly string BaseThemeId;
        /// <summary>
        /// The theme configuration, which contains the theme display properties. See configuration.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetThemeConfigurationResult> Configurations;
        /// <summary>
        /// The time that the theme was created.
        /// </summary>
        public readonly string CreatedTime;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The time that the theme was last updated.
        /// </summary>
        public readonly string LastUpdatedTime;
        /// <summary>
        /// Display name of the theme.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// A set of resource permissions on the theme. See permissions.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetThemePermissionResult> Permissions;
        /// <summary>
        /// The theme creation status.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        public readonly string ThemeId;
        /// <summary>
        /// A description of the current theme version being created/updated.
        /// </summary>
        public readonly string VersionDescription;
        /// <summary>
        /// The version number of the theme version.
        /// </summary>
        public readonly int VersionNumber;

        [OutputConstructor]
        private GetThemeResult(
            string arn,

            string awsAccountId,

            string baseThemeId,

            ImmutableArray<Outputs.GetThemeConfigurationResult> configurations,

            string createdTime,

            string id,

            string lastUpdatedTime,

            string name,

            ImmutableArray<Outputs.GetThemePermissionResult> permissions,

            string status,

            ImmutableDictionary<string, string> tags,

            string themeId,

            string versionDescription,

            int versionNumber)
        {
            Arn = arn;
            AwsAccountId = awsAccountId;
            BaseThemeId = baseThemeId;
            Configurations = configurations;
            CreatedTime = createdTime;
            Id = id;
            LastUpdatedTime = lastUpdatedTime;
            Name = name;
            Permissions = permissions;
            Status = status;
            Tags = tags;
            ThemeId = themeId;
            VersionDescription = versionDescription;
            VersionNumber = versionNumber;
        }
    }
}
