// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Quicksight
{
    /// <summary>
    /// Resource for managing a QuickSight Data Set.
    /// 
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// A QuickSight Data Set can be imported using the AWS account ID and data set ID separated by a comma (`,`) e.g.,
    /// 
    /// ```sh
    ///  $ pulumi import aws:quicksight/dataSet:DataSet example 123456789012,example-id
    /// ```
    /// </summary>
    [AwsResourceType("aws:quicksight/dataSet:DataSet")]
    public partial class DataSet : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Create a DataSet resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DataSet(string name, DataSetArgs? args = null, CustomResourceOptions? options = null)
            : base("aws:quicksight/dataSet:DataSet", name, args ?? new DataSetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DataSet(string name, Input<string> id, DataSetState? state = null, CustomResourceOptions? options = null)
            : base("aws:quicksight/dataSet:DataSet", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DataSet resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DataSet Get(string name, Input<string> id, DataSetState? state = null, CustomResourceOptions? options = null)
        {
            return new DataSet(name, id, state, options);
        }
    }

    public sealed class DataSetArgs : global::Pulumi.ResourceArgs
    {
        public DataSetArgs()
        {
        }
        public static new DataSetArgs Empty => new DataSetArgs();
    }

    public sealed class DataSetState : global::Pulumi.ResourceArgs
    {
        public DataSetState()
        {
        }
        public static new DataSetState Empty => new DataSetState();
    }
}
