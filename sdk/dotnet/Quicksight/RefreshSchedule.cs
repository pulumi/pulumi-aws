// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Quicksight
{
    /// <summary>
    /// Resource for managing a QuickSight Refresh Schedule.
    /// 
    /// ## Example Usage
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Quicksight.RefreshSchedule("example", new()
    ///     {
    ///         DataSetId = "dataset-id",
    ///         Schedule = new Aws.Quicksight.Inputs.RefreshScheduleScheduleArgs
    ///         {
    ///             RefreshType = "FULL_REFRESH",
    ///             ScheduleFrequency = new Aws.Quicksight.Inputs.RefreshScheduleScheduleScheduleFrequencyArgs
    ///             {
    ///                 Interval = "HOURLY",
    ///             },
    ///         },
    ///         ScheduleId = "schedule-id",
    ///     });
    /// 
    /// });
    /// ```
    /// ### With Weekly Refresh
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Quicksight.RefreshSchedule("example", new()
    ///     {
    ///         DataSetId = "dataset-id",
    ///         Schedule = new Aws.Quicksight.Inputs.RefreshScheduleScheduleArgs
    ///         {
    ///             RefreshType = "INCREMENTAL_REFRESH",
    ///             ScheduleFrequency = new Aws.Quicksight.Inputs.RefreshScheduleScheduleScheduleFrequencyArgs
    ///             {
    ///                 Interval = "WEEKLY",
    ///                 RefreshOnDay = new Aws.Quicksight.Inputs.RefreshScheduleScheduleScheduleFrequencyRefreshOnDayArgs
    ///                 {
    ///                     DayOfWeek = "MONDAY",
    ///                 },
    ///                 TimeOfTheDay = "01:00",
    ///                 Timezone = "Europe/London",
    ///             },
    ///         },
    ///         ScheduleId = "schedule-id",
    ///     });
    /// 
    /// });
    /// ```
    /// ### With Monthly Refresh
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Quicksight.RefreshSchedule("example", new()
    ///     {
    ///         DataSetId = "dataset-id",
    ///         Schedule = new Aws.Quicksight.Inputs.RefreshScheduleScheduleArgs
    ///         {
    ///             RefreshType = "INCREMENTAL_REFRESH",
    ///             ScheduleFrequency = new Aws.Quicksight.Inputs.RefreshScheduleScheduleScheduleFrequencyArgs
    ///             {
    ///                 Interval = "MONTHLY",
    ///                 RefreshOnDay = new Aws.Quicksight.Inputs.RefreshScheduleScheduleScheduleFrequencyRefreshOnDayArgs
    ///                 {
    ///                     DayOfMonth = "1",
    ///                 },
    ///                 TimeOfTheDay = "01:00",
    ///                 Timezone = "Europe/London",
    ///             },
    ///         },
    ///         ScheduleId = "schedule-id",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import a QuickSight Refresh Schedule using the AWS account ID, data set ID and schedule ID separated by commas (`,`). For example:
    /// 
    /// ```sh
    ///  $ pulumi import aws:quicksight/refreshSchedule:RefreshSchedule example 123456789012,dataset-id,schedule-id
    /// ```
    /// </summary>
    [AwsResourceType("aws:quicksight/refreshSchedule:RefreshSchedule")]
    public partial class RefreshSchedule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the refresh schedule.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// AWS account ID.
        /// </summary>
        [Output("awsAccountId")]
        public Output<string> AwsAccountId { get; private set; } = null!;

        /// <summary>
        /// The ID of the dataset.
        /// </summary>
        [Output("dataSetId")]
        public Output<string> DataSetId { get; private set; } = null!;

        /// <summary>
        /// The [refresh schedule](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_RefreshSchedule.html). See schedule
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Output("schedule")]
        public Output<Outputs.RefreshScheduleSchedule?> Schedule { get; private set; } = null!;

        /// <summary>
        /// The ID of the refresh schedule.
        /// </summary>
        [Output("scheduleId")]
        public Output<string> ScheduleId { get; private set; } = null!;


        /// <summary>
        /// Create a RefreshSchedule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RefreshSchedule(string name, RefreshScheduleArgs args, CustomResourceOptions? options = null)
            : base("aws:quicksight/refreshSchedule:RefreshSchedule", name, args ?? new RefreshScheduleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RefreshSchedule(string name, Input<string> id, RefreshScheduleState? state = null, CustomResourceOptions? options = null)
            : base("aws:quicksight/refreshSchedule:RefreshSchedule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RefreshSchedule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RefreshSchedule Get(string name, Input<string> id, RefreshScheduleState? state = null, CustomResourceOptions? options = null)
        {
            return new RefreshSchedule(name, id, state, options);
        }
    }

    public sealed class RefreshScheduleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// AWS account ID.
        /// </summary>
        [Input("awsAccountId")]
        public Input<string>? AwsAccountId { get; set; }

        /// <summary>
        /// The ID of the dataset.
        /// </summary>
        [Input("dataSetId", required: true)]
        public Input<string> DataSetId { get; set; } = null!;

        /// <summary>
        /// The [refresh schedule](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_RefreshSchedule.html). See schedule
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("schedule")]
        public Input<Inputs.RefreshScheduleScheduleArgs>? Schedule { get; set; }

        /// <summary>
        /// The ID of the refresh schedule.
        /// </summary>
        [Input("scheduleId", required: true)]
        public Input<string> ScheduleId { get; set; } = null!;

        public RefreshScheduleArgs()
        {
        }
        public static new RefreshScheduleArgs Empty => new RefreshScheduleArgs();
    }

    public sealed class RefreshScheduleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the refresh schedule.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// AWS account ID.
        /// </summary>
        [Input("awsAccountId")]
        public Input<string>? AwsAccountId { get; set; }

        /// <summary>
        /// The ID of the dataset.
        /// </summary>
        [Input("dataSetId")]
        public Input<string>? DataSetId { get; set; }

        /// <summary>
        /// The [refresh schedule](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_RefreshSchedule.html). See schedule
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("schedule")]
        public Input<Inputs.RefreshScheduleScheduleGetArgs>? Schedule { get; set; }

        /// <summary>
        /// The ID of the refresh schedule.
        /// </summary>
        [Input("scheduleId")]
        public Input<string>? ScheduleId { get; set; }

        public RefreshScheduleState()
        {
        }
        public static new RefreshScheduleState Empty => new RefreshScheduleState();
    }
}
