// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CloudTrail.Inputs
{

    public sealed class TrailAdvancedEventSelectorFieldSelectorArgs : Pulumi.ResourceArgs
    {
        [Input("endsWiths")]
        private InputList<string>? _endsWiths;

        /// <summary>
        /// A list of values that includes events that match the last few characters of the event record field specified as the value of `field`.
        /// </summary>
        public InputList<string> EndsWiths
        {
            get => _endsWiths ?? (_endsWiths = new InputList<string>());
            set => _endsWiths = value;
        }

        [Input("equals")]
        private InputList<string>? _equals;

        /// <summary>
        /// A list of values that includes events that match the exact value of the event record field specified as the value of `field`. This is the only valid operator that you can use with the `readOnly`, `eventCategory`, and `resources.type` fields.
        /// </summary>
        public InputList<string> Equals
        {
            get => _equals ?? (_equals = new InputList<string>());
            set => _equals = value;
        }

        /// <summary>
        /// Specifies a field in an event record on which to filter events to be logged. You can specify only the following values: `readOnly`, `eventSource`, `eventName`, `eventCategory`, `resources.type`, `resources.ARN`.
        /// </summary>
        [Input("field", required: true)]
        public Input<string> Field { get; set; } = null!;

        [Input("notEndsWiths")]
        private InputList<string>? _notEndsWiths;

        /// <summary>
        /// A list of values that excludes events that match the last few characters of the event record field specified as the value of `field`.
        /// </summary>
        public InputList<string> NotEndsWiths
        {
            get => _notEndsWiths ?? (_notEndsWiths = new InputList<string>());
            set => _notEndsWiths = value;
        }

        [Input("notEquals")]
        private InputList<string>? _notEquals;

        /// <summary>
        /// A list of values that excludes events that match the exact value of the event record field specified as the value of `field`.
        /// </summary>
        public InputList<string> NotEquals
        {
            get => _notEquals ?? (_notEquals = new InputList<string>());
            set => _notEquals = value;
        }

        [Input("notStartsWiths")]
        private InputList<string>? _notStartsWiths;

        /// <summary>
        /// A list of values that excludes events that match the first few characters of the event record field specified as the value of `field`.
        /// </summary>
        public InputList<string> NotStartsWiths
        {
            get => _notStartsWiths ?? (_notStartsWiths = new InputList<string>());
            set => _notStartsWiths = value;
        }

        [Input("startsWiths")]
        private InputList<string>? _startsWiths;

        /// <summary>
        /// A list of values that includes events that match the first few characters of the event record field specified as the value of `field`.
        /// </summary>
        public InputList<string> StartsWiths
        {
            get => _startsWiths ?? (_startsWiths = new InputList<string>());
            set => _startsWiths = value;
        }

        public TrailAdvancedEventSelectorFieldSelectorArgs()
        {
        }
    }
}
