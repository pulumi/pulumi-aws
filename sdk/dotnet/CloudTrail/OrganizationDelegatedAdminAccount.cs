// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CloudTrail
{
    /// <summary>
    /// Provides a resource to manage an AWS CloudTrail Delegated Administrator.
    /// 
    /// ## Example Usage
    /// 
    /// Basic usage:
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var delegated = Aws.GetCallerIdentity.Invoke();
    /// 
    ///     var example = new Aws.CloudTrail.OrganizationDelegatedAdminAccount("example", new()
    ///     {
    ///         AccountId = delegated.Apply(getCallerIdentityResult =&gt; getCallerIdentityResult.AccountId),
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import delegated administrators using the delegate account `id`. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:cloudtrail/organizationDelegatedAdminAccount:OrganizationDelegatedAdminAccount example 12345678901
    /// ```
    /// </summary>
    [AwsResourceType("aws:cloudtrail/organizationDelegatedAdminAccount:OrganizationDelegatedAdminAccount")]
    public partial class OrganizationDelegatedAdminAccount : global::Pulumi.CustomResource
    {
        /// <summary>
        /// An organization member account ID that you want to designate as a delegated administrator.
        /// </summary>
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the delegated administrator's account.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// The email address that is associated with the delegated administrator's AWS account.
        /// </summary>
        [Output("email")]
        public Output<string> Email { get; private set; } = null!;

        /// <summary>
        /// The friendly name of the delegated administrator's account.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The AWS CloudTrail service principal name.
        /// </summary>
        [Output("servicePrincipal")]
        public Output<string> ServicePrincipal { get; private set; } = null!;


        /// <summary>
        /// Create a OrganizationDelegatedAdminAccount resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OrganizationDelegatedAdminAccount(string name, OrganizationDelegatedAdminAccountArgs args, CustomResourceOptions? options = null)
            : base("aws:cloudtrail/organizationDelegatedAdminAccount:OrganizationDelegatedAdminAccount", name, args ?? new OrganizationDelegatedAdminAccountArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OrganizationDelegatedAdminAccount(string name, Input<string> id, OrganizationDelegatedAdminAccountState? state = null, CustomResourceOptions? options = null)
            : base("aws:cloudtrail/organizationDelegatedAdminAccount:OrganizationDelegatedAdminAccount", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OrganizationDelegatedAdminAccount resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OrganizationDelegatedAdminAccount Get(string name, Input<string> id, OrganizationDelegatedAdminAccountState? state = null, CustomResourceOptions? options = null)
        {
            return new OrganizationDelegatedAdminAccount(name, id, state, options);
        }
    }

    public sealed class OrganizationDelegatedAdminAccountArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// An organization member account ID that you want to designate as a delegated administrator.
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        public OrganizationDelegatedAdminAccountArgs()
        {
        }
        public static new OrganizationDelegatedAdminAccountArgs Empty => new OrganizationDelegatedAdminAccountArgs();
    }

    public sealed class OrganizationDelegatedAdminAccountState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// An organization member account ID that you want to designate as a delegated administrator.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the delegated administrator's account.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// The email address that is associated with the delegated administrator's AWS account.
        /// </summary>
        [Input("email")]
        public Input<string>? Email { get; set; }

        /// <summary>
        /// The friendly name of the delegated administrator's account.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The AWS CloudTrail service principal name.
        /// </summary>
        [Input("servicePrincipal")]
        public Input<string>? ServicePrincipal { get; set; }

        public OrganizationDelegatedAdminAccountState()
        {
        }
        public static new OrganizationDelegatedAdminAccountState Empty => new OrganizationDelegatedAdminAccountState();
    }
}
