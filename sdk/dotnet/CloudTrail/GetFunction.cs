// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CloudTrail
{
    [Obsolete(@"aws.cloudtrail.getFunction has been deprecated in favor of aws.cloudfront.getFunction")]
    public static class GetFunction
    {
        /// <summary>
        /// Provides information about a CloudFront Function.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const config = new pulumi.Config();
        /// const functionName = config.require("functionName");
        /// const existing = aws.cloudfront.getFunction({
        ///     name: functionName,
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// config = pulumi.Config()
        /// function_name = config.require("functionName")
        /// existing = aws.cloudfront.get_function(name=function_name)
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var functionName = config.Require("functionName");
        ///     var existing = Aws.CloudFront.GetFunction.Invoke(new()
        ///     {
        ///         Name = functionName,
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/cloudfront"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		cfg := config.New(ctx, "")
        /// 		functionName := cfg.Require("functionName")
        /// 		_, err := cloudfront.LookupFunction(ctx, &amp;cloudfront.LookupFunctionArgs{
        /// 			Name: functionName,
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.cloudfront.CloudfrontFunctions;
        /// import com.pulumi.aws.cloudfront.inputs.GetFunctionArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var config = ctx.config();
        ///         final var functionName = config.get("functionName");
        ///         final var existing = CloudfrontFunctions.getFunction(GetFunctionArgs.builder()
        ///             .name(functionName)
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// configuration:
        ///   functionName:
        ///     type: string
        /// variables:
        ///   existing:
        ///     fn::invoke:
        ///       Function: aws:cloudfront:getFunction
        ///       Arguments:
        ///         name: ${functionName}
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetFunctionResult> InvokeAsync(GetFunctionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFunctionResult>("aws:cloudtrail/getFunction:getFunction", args ?? new GetFunctionArgs(), options.WithDefaults());

        /// <summary>
        /// Provides information about a CloudFront Function.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const config = new pulumi.Config();
        /// const functionName = config.require("functionName");
        /// const existing = aws.cloudfront.getFunction({
        ///     name: functionName,
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// config = pulumi.Config()
        /// function_name = config.require("functionName")
        /// existing = aws.cloudfront.get_function(name=function_name)
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var functionName = config.Require("functionName");
        ///     var existing = Aws.CloudFront.GetFunction.Invoke(new()
        ///     {
        ///         Name = functionName,
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/cloudfront"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		cfg := config.New(ctx, "")
        /// 		functionName := cfg.Require("functionName")
        /// 		_, err := cloudfront.LookupFunction(ctx, &amp;cloudfront.LookupFunctionArgs{
        /// 			Name: functionName,
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.cloudfront.CloudfrontFunctions;
        /// import com.pulumi.aws.cloudfront.inputs.GetFunctionArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var config = ctx.config();
        ///         final var functionName = config.get("functionName");
        ///         final var existing = CloudfrontFunctions.getFunction(GetFunctionArgs.builder()
        ///             .name(functionName)
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// configuration:
        ///   functionName:
        ///     type: string
        /// variables:
        ///   existing:
        ///     fn::invoke:
        ///       Function: aws:cloudfront:getFunction
        ///       Arguments:
        ///         name: ${functionName}
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetFunctionResult> Invoke(GetFunctionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFunctionResult>("aws:cloudtrail/getFunction:getFunction", args ?? new GetFunctionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFunctionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the CloudFront function.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// Function’s stage, either `DEVELOPMENT` or `LIVE`.
        /// </summary>
        [Input("stage", required: true)]
        public string Stage { get; set; } = null!;

        public GetFunctionArgs()
        {
        }
        public static new GetFunctionArgs Empty => new GetFunctionArgs();
    }

    public sealed class GetFunctionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the CloudFront function.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Function’s stage, either `DEVELOPMENT` or `LIVE`.
        /// </summary>
        [Input("stage", required: true)]
        public Input<string> Stage { get; set; } = null!;

        public GetFunctionInvokeArgs()
        {
        }
        public static new GetFunctionInvokeArgs Empty => new GetFunctionInvokeArgs();
    }


    [OutputType]
    public sealed class GetFunctionResult
    {
        /// <summary>
        /// ARN identifying your CloudFront Function.
        /// </summary>
        public readonly string Arn;
        /// <summary>
        /// Source code of the function
        /// </summary>
        public readonly string Code;
        /// <summary>
        /// Comment.
        /// </summary>
        public readonly string Comment;
        /// <summary>
        /// ETag hash of the function
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// When this resource was last modified.
        /// </summary>
        public readonly string LastModifiedTime;
        public readonly string Name;
        /// <summary>
        /// Identifier of the function's runtime.
        /// </summary>
        public readonly string Runtime;
        public readonly string Stage;
        /// <summary>
        /// Status of the function. Can be `UNPUBLISHED`, `UNASSOCIATED` or `ASSOCIATED`.
        /// </summary>
        public readonly string Status;

        [OutputConstructor]
        private GetFunctionResult(
            string arn,

            string code,

            string comment,

            string etag,

            string id,

            string lastModifiedTime,

            string name,

            string runtime,

            string stage,

            string status)
        {
            Arn = arn;
            Code = code;
            Comment = comment;
            Etag = etag;
            Id = id;
            LastModifiedTime = lastModifiedTime;
            Name = name;
            Runtime = runtime;
            Stage = stage;
            Status = status;
        }
    }
}
