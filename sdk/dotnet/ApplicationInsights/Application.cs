// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.ApplicationInsights
{
    [AwsResourceType("aws:applicationinsights/application:Application")]
    public partial class Application : global::Pulumi.CustomResource
    {
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("autoConfigEnabled")]
        public Output<bool?> AutoConfigEnabled { get; private set; } = null!;

        [Output("autoCreate")]
        public Output<bool?> AutoCreate { get; private set; } = null!;

        [Output("cweMonitorEnabled")]
        public Output<bool?> CweMonitorEnabled { get; private set; } = null!;

        [Output("groupingType")]
        public Output<string?> GroupingType { get; private set; } = null!;

        [Output("opsCenterEnabled")]
        public Output<bool?> OpsCenterEnabled { get; private set; } = null!;

        [Output("opsItemSnsTopicArn")]
        public Output<string?> OpsItemSnsTopicArn { get; private set; } = null!;

        [Output("resourceGroupName")]
        public Output<string> ResourceGroupName { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;


        /// <summary>
        /// Create a Application resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Application(string name, ApplicationArgs args, CustomResourceOptions? options = null)
            : base("aws:applicationinsights/application:Application", name, args ?? new ApplicationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Application(string name, Input<string> id, ApplicationState? state = null, CustomResourceOptions? options = null)
            : base("aws:applicationinsights/application:Application", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Application resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Application Get(string name, Input<string> id, ApplicationState? state = null, CustomResourceOptions? options = null)
        {
            return new Application(name, id, state, options);
        }
    }

    public sealed class ApplicationArgs : global::Pulumi.ResourceArgs
    {
        [Input("autoConfigEnabled")]
        public Input<bool>? AutoConfigEnabled { get; set; }

        [Input("autoCreate")]
        public Input<bool>? AutoCreate { get; set; }

        [Input("cweMonitorEnabled")]
        public Input<bool>? CweMonitorEnabled { get; set; }

        [Input("groupingType")]
        public Input<string>? GroupingType { get; set; }

        [Input("opsCenterEnabled")]
        public Input<bool>? OpsCenterEnabled { get; set; }

        [Input("opsItemSnsTopicArn")]
        public Input<string>? OpsItemSnsTopicArn { get; set; }

        [Input("resourceGroupName", required: true)]
        public Input<string> ResourceGroupName { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public ApplicationArgs()
        {
        }
        public static new ApplicationArgs Empty => new ApplicationArgs();
    }

    public sealed class ApplicationState : global::Pulumi.ResourceArgs
    {
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("autoConfigEnabled")]
        public Input<bool>? AutoConfigEnabled { get; set; }

        [Input("autoCreate")]
        public Input<bool>? AutoCreate { get; set; }

        [Input("cweMonitorEnabled")]
        public Input<bool>? CweMonitorEnabled { get; set; }

        [Input("groupingType")]
        public Input<string>? GroupingType { get; set; }

        [Input("opsCenterEnabled")]
        public Input<bool>? OpsCenterEnabled { get; set; }

        [Input("opsItemSnsTopicArn")]
        public Input<string>? OpsItemSnsTopicArn { get; set; }

        [Input("resourceGroupName")]
        public Input<string>? ResourceGroupName { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        public ApplicationState()
        {
        }
        public static new ApplicationState Empty => new ApplicationState();
    }
}
