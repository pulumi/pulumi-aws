// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CloudFront
{
    /// <summary>
    /// Creates an Amazon CloudFront web distribution.
    /// 
    /// For information about CloudFront distributions, see the
    /// [Amazon CloudFront Developer Guide][1]. For specific information about creating
    /// CloudFront web distributions, see the [POST Distribution][2] page in the Amazon
    /// CloudFront API Reference.
    /// 
    /// &gt; **NOTE:** CloudFront distributions take about 15 minutes to a deployed state
    /// after creation or modification. During this time, deletes to resources will be
    /// blocked. If you need to delete a distribution that is enabled and you do not
    /// want to wait, you need to use the `retain_on_delete` flag.
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/cloudfront_distribution.html.markdown.
    /// </summary>
    public partial class Distribution : Pulumi.CustomResource
    {
        /// <summary>
        /// The key pair IDs that CloudFront is aware of for
        /// each trusted signer, if the distribution is set up to serve private content
        /// with signed URLs.
        /// </summary>
        [Output("activeTrustedSigners")]
        public Output<ImmutableDictionary<string, object>> ActiveTrustedSigners { get; private set; } = null!;

        /// <summary>
        /// Extra CNAMEs (alternate domain names), if any, for
        /// this distribution.
        /// </summary>
        [Output("aliases")]
        public Output<ImmutableArray<string>> Aliases { get; private set; } = null!;

        /// <summary>
        /// The ARN (Amazon Resource Name) for the distribution. For example: arn:aws:cloudfront::123456789012:distribution/EDFDVBD632BHDS5, where 123456789012 is your AWS account ID.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// Internal value used by CloudFront to allow future
        /// updates to the distribution configuration.
        /// </summary>
        [Output("callerReference")]
        public Output<string> CallerReference { get; private set; } = null!;

        /// <summary>
        /// Any comments you want to include about the
        /// distribution.
        /// </summary>
        [Output("comment")]
        public Output<string?> Comment { get; private set; } = null!;

        /// <summary>
        /// One or more custom error response elements (multiples allowed).
        /// </summary>
        [Output("customErrorResponses")]
        public Output<ImmutableArray<Outputs.DistributionCustomErrorResponses>> CustomErrorResponses { get; private set; } = null!;

        /// <summary>
        /// The default cache behavior for this distribution (maximum
        /// one).
        /// </summary>
        [Output("defaultCacheBehavior")]
        public Output<Outputs.DistributionDefaultCacheBehavior> DefaultCacheBehavior { get; private set; } = null!;

        /// <summary>
        /// The object that you want CloudFront to
        /// return (for example, index.html) when an end user requests the root URL.
        /// </summary>
        [Output("defaultRootObject")]
        public Output<string?> DefaultRootObject { get; private set; } = null!;

        /// <summary>
        /// The DNS domain name of either the S3 bucket, or
        /// web site of your custom origin.
        /// </summary>
        [Output("domainName")]
        public Output<string> DomainName { get; private set; } = null!;

        /// <summary>
        /// Whether the distribution is enabled to accept end
        /// user requests for content.
        /// </summary>
        [Output("enabled")]
        public Output<bool> Enabled { get; private set; } = null!;

        /// <summary>
        /// The current version of the distribution's information. For example:
        /// `E2QWRUHAPOMQZL`.
        /// </summary>
        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        /// <summary>
        /// The CloudFront Route 53 zone ID that can be used to
        /// route an [Alias Resource Record Set][7] to. This attribute is simply an
        /// alias for the zone ID `Z2FDTNDATAQYW2`.
        /// </summary>
        [Output("hostedZoneId")]
        public Output<string> HostedZoneId { get; private set; } = null!;

        /// <summary>
        /// The maximum HTTP version to support on the
        /// distribution. Allowed values are `http1.1` and `http2`. The default is
        /// `http2`.
        /// </summary>
        [Output("httpVersion")]
        public Output<string?> HttpVersion { get; private set; } = null!;

        /// <summary>
        /// The number of invalidation batches
        /// currently in progress.
        /// </summary>
        [Output("inProgressValidationBatches")]
        public Output<int> InProgressValidationBatches { get; private set; } = null!;

        /// <summary>
        /// Whether the IPv6 is enabled for the distribution.
        /// </summary>
        [Output("isIpv6Enabled")]
        public Output<bool?> IsIpv6Enabled { get; private set; } = null!;

        /// <summary>
        /// The date and time the distribution was last modified.
        /// </summary>
        [Output("lastModifiedTime")]
        public Output<string> LastModifiedTime { get; private set; } = null!;

        /// <summary>
        /// The logging
        /// configuration that controls how logs are written
        /// to your distribution (maximum one).
        /// </summary>
        [Output("loggingConfig")]
        public Output<Outputs.DistributionLoggingConfig?> LoggingConfig { get; private set; } = null!;

        /// <summary>
        /// An ordered list of cache behaviors
        /// resource for this distribution. List from top to bottom
        /// in order of precedence. The topmost cache behavior will have precedence 0.
        /// </summary>
        [Output("orderedCacheBehaviors")]
        public Output<ImmutableArray<Outputs.DistributionOrderedCacheBehaviors>> OrderedCacheBehaviors { get; private set; } = null!;

        /// <summary>
        /// One or more origins for this
        /// distribution (multiples allowed).
        /// </summary>
        [Output("origins")]
        public Output<ImmutableArray<Outputs.DistributionOrigins>> Origins { get; private set; } = null!;

        /// <summary>
        /// One or more origin_group for this
        /// distribution (multiples allowed).
        /// </summary>
        [Output("originGroups")]
        public Output<ImmutableArray<Outputs.DistributionOriginGroups>> OriginGroups { get; private set; } = null!;

        /// <summary>
        /// The price class for this distribution. One of
        /// `PriceClass_All`, `PriceClass_200`, `PriceClass_100`
        /// </summary>
        [Output("priceClass")]
        public Output<string?> PriceClass { get; private set; } = null!;

        /// <summary>
        /// The restriction
        /// configuration for this distribution (maximum one).
        /// </summary>
        [Output("restrictions")]
        public Output<Outputs.DistributionRestrictions> Restrictions { get; private set; } = null!;

        /// <summary>
        /// Disables the distribution instead of
        /// deleting it when destroying the resource. If this is set,
        /// the distribution needs to be deleted manually afterwards. Default: `false`.
        /// </summary>
        [Output("retainOnDelete")]
        public Output<bool?> RetainOnDelete { get; private set; } = null!;

        /// <summary>
        /// The current status of the distribution. `Deployed` if the
        /// distribution's information is fully propagated throughout the Amazon
        /// CloudFront system.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, object>?> Tags { get; private set; } = null!;

        /// <summary>
        /// The SSL
        /// configuration for this distribution (maximum
        /// one).
        /// </summary>
        [Output("viewerCertificate")]
        public Output<Outputs.DistributionViewerCertificate> ViewerCertificate { get; private set; } = null!;

        /// <summary>
        /// If enabled, the resource will wait for
        /// the distribution status to change from `InProgress` to `Deployed`. Setting
        /// this to`false` will skip the process. Default: `true`.
        /// </summary>
        [Output("waitForDeployment")]
        public Output<bool?> WaitForDeployment { get; private set; } = null!;

        /// <summary>
        /// If you're using AWS WAF to filter CloudFront
        /// requests, the Id of the AWS WAF web ACL that is associated with the
        /// distribution. The WAF Web ACL must exist in the WAF Global (CloudFront)
        /// region and the credentials configuring this argument must have
        /// `waf:GetWebACL` permissions assigned.
        /// </summary>
        [Output("webAclId")]
        public Output<string?> WebAclId { get; private set; } = null!;


        /// <summary>
        /// Create a Distribution resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Distribution(string name, DistributionArgs args, CustomResourceOptions? options = null)
            : base("aws:cloudfront/distribution:Distribution", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private Distribution(string name, Input<string> id, DistributionState? state = null, CustomResourceOptions? options = null)
            : base("aws:cloudfront/distribution:Distribution", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Distribution resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Distribution Get(string name, Input<string> id, DistributionState? state = null, CustomResourceOptions? options = null)
        {
            return new Distribution(name, id, state, options);
        }
    }

    public sealed class DistributionArgs : Pulumi.ResourceArgs
    {
        [Input("aliases")]
        private InputList<string>? _aliases;

        /// <summary>
        /// Extra CNAMEs (alternate domain names), if any, for
        /// this distribution.
        /// </summary>
        public InputList<string> Aliases
        {
            get => _aliases ?? (_aliases = new InputList<string>());
            set => _aliases = value;
        }

        /// <summary>
        /// Any comments you want to include about the
        /// distribution.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        [Input("customErrorResponses")]
        private InputList<Inputs.DistributionCustomErrorResponsesArgs>? _customErrorResponses;

        /// <summary>
        /// One or more custom error response elements (multiples allowed).
        /// </summary>
        public InputList<Inputs.DistributionCustomErrorResponsesArgs> CustomErrorResponses
        {
            get => _customErrorResponses ?? (_customErrorResponses = new InputList<Inputs.DistributionCustomErrorResponsesArgs>());
            set => _customErrorResponses = value;
        }

        /// <summary>
        /// The default cache behavior for this distribution (maximum
        /// one).
        /// </summary>
        [Input("defaultCacheBehavior", required: true)]
        public Input<Inputs.DistributionDefaultCacheBehaviorArgs> DefaultCacheBehavior { get; set; } = null!;

        /// <summary>
        /// The object that you want CloudFront to
        /// return (for example, index.html) when an end user requests the root URL.
        /// </summary>
        [Input("defaultRootObject")]
        public Input<string>? DefaultRootObject { get; set; }

        /// <summary>
        /// Whether the distribution is enabled to accept end
        /// user requests for content.
        /// </summary>
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        /// <summary>
        /// The maximum HTTP version to support on the
        /// distribution. Allowed values are `http1.1` and `http2`. The default is
        /// `http2`.
        /// </summary>
        [Input("httpVersion")]
        public Input<string>? HttpVersion { get; set; }

        /// <summary>
        /// Whether the IPv6 is enabled for the distribution.
        /// </summary>
        [Input("isIpv6Enabled")]
        public Input<bool>? IsIpv6Enabled { get; set; }

        /// <summary>
        /// The logging
        /// configuration that controls how logs are written
        /// to your distribution (maximum one).
        /// </summary>
        [Input("loggingConfig")]
        public Input<Inputs.DistributionLoggingConfigArgs>? LoggingConfig { get; set; }

        [Input("orderedCacheBehaviors")]
        private InputList<Inputs.DistributionOrderedCacheBehaviorsArgs>? _orderedCacheBehaviors;

        /// <summary>
        /// An ordered list of cache behaviors
        /// resource for this distribution. List from top to bottom
        /// in order of precedence. The topmost cache behavior will have precedence 0.
        /// </summary>
        public InputList<Inputs.DistributionOrderedCacheBehaviorsArgs> OrderedCacheBehaviors
        {
            get => _orderedCacheBehaviors ?? (_orderedCacheBehaviors = new InputList<Inputs.DistributionOrderedCacheBehaviorsArgs>());
            set => _orderedCacheBehaviors = value;
        }

        [Input("origins", required: true)]
        private InputList<Inputs.DistributionOriginsArgs>? _origins;

        /// <summary>
        /// One or more origins for this
        /// distribution (multiples allowed).
        /// </summary>
        public InputList<Inputs.DistributionOriginsArgs> Origins
        {
            get => _origins ?? (_origins = new InputList<Inputs.DistributionOriginsArgs>());
            set => _origins = value;
        }

        [Input("originGroups")]
        private InputList<Inputs.DistributionOriginGroupsArgs>? _originGroups;

        /// <summary>
        /// One or more origin_group for this
        /// distribution (multiples allowed).
        /// </summary>
        public InputList<Inputs.DistributionOriginGroupsArgs> OriginGroups
        {
            get => _originGroups ?? (_originGroups = new InputList<Inputs.DistributionOriginGroupsArgs>());
            set => _originGroups = value;
        }

        /// <summary>
        /// The price class for this distribution. One of
        /// `PriceClass_All`, `PriceClass_200`, `PriceClass_100`
        /// </summary>
        [Input("priceClass")]
        public Input<string>? PriceClass { get; set; }

        /// <summary>
        /// The restriction
        /// configuration for this distribution (maximum one).
        /// </summary>
        [Input("restrictions", required: true)]
        public Input<Inputs.DistributionRestrictionsArgs> Restrictions { get; set; } = null!;

        /// <summary>
        /// Disables the distribution instead of
        /// deleting it when destroying the resource. If this is set,
        /// the distribution needs to be deleted manually afterwards. Default: `false`.
        /// </summary>
        [Input("retainOnDelete")]
        public Input<bool>? RetainOnDelete { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        /// <summary>
        /// The SSL
        /// configuration for this distribution (maximum
        /// one).
        /// </summary>
        [Input("viewerCertificate", required: true)]
        public Input<Inputs.DistributionViewerCertificateArgs> ViewerCertificate { get; set; } = null!;

        /// <summary>
        /// If enabled, the resource will wait for
        /// the distribution status to change from `InProgress` to `Deployed`. Setting
        /// this to`false` will skip the process. Default: `true`.
        /// </summary>
        [Input("waitForDeployment")]
        public Input<bool>? WaitForDeployment { get; set; }

        /// <summary>
        /// If you're using AWS WAF to filter CloudFront
        /// requests, the Id of the AWS WAF web ACL that is associated with the
        /// distribution. The WAF Web ACL must exist in the WAF Global (CloudFront)
        /// region and the credentials configuring this argument must have
        /// `waf:GetWebACL` permissions assigned.
        /// </summary>
        [Input("webAclId")]
        public Input<string>? WebAclId { get; set; }

        public DistributionArgs()
        {
        }
    }

    public sealed class DistributionState : Pulumi.ResourceArgs
    {
        [Input("activeTrustedSigners")]
        private InputMap<object>? _activeTrustedSigners;

        /// <summary>
        /// The key pair IDs that CloudFront is aware of for
        /// each trusted signer, if the distribution is set up to serve private content
        /// with signed URLs.
        /// </summary>
        public InputMap<object> ActiveTrustedSigners
        {
            get => _activeTrustedSigners ?? (_activeTrustedSigners = new InputMap<object>());
            set => _activeTrustedSigners = value;
        }

        [Input("aliases")]
        private InputList<string>? _aliases;

        /// <summary>
        /// Extra CNAMEs (alternate domain names), if any, for
        /// this distribution.
        /// </summary>
        public InputList<string> Aliases
        {
            get => _aliases ?? (_aliases = new InputList<string>());
            set => _aliases = value;
        }

        /// <summary>
        /// The ARN (Amazon Resource Name) for the distribution. For example: arn:aws:cloudfront::123456789012:distribution/EDFDVBD632BHDS5, where 123456789012 is your AWS account ID.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// Internal value used by CloudFront to allow future
        /// updates to the distribution configuration.
        /// </summary>
        [Input("callerReference")]
        public Input<string>? CallerReference { get; set; }

        /// <summary>
        /// Any comments you want to include about the
        /// distribution.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        [Input("customErrorResponses")]
        private InputList<Inputs.DistributionCustomErrorResponsesGetArgs>? _customErrorResponses;

        /// <summary>
        /// One or more custom error response elements (multiples allowed).
        /// </summary>
        public InputList<Inputs.DistributionCustomErrorResponsesGetArgs> CustomErrorResponses
        {
            get => _customErrorResponses ?? (_customErrorResponses = new InputList<Inputs.DistributionCustomErrorResponsesGetArgs>());
            set => _customErrorResponses = value;
        }

        /// <summary>
        /// The default cache behavior for this distribution (maximum
        /// one).
        /// </summary>
        [Input("defaultCacheBehavior")]
        public Input<Inputs.DistributionDefaultCacheBehaviorGetArgs>? DefaultCacheBehavior { get; set; }

        /// <summary>
        /// The object that you want CloudFront to
        /// return (for example, index.html) when an end user requests the root URL.
        /// </summary>
        [Input("defaultRootObject")]
        public Input<string>? DefaultRootObject { get; set; }

        /// <summary>
        /// The DNS domain name of either the S3 bucket, or
        /// web site of your custom origin.
        /// </summary>
        [Input("domainName")]
        public Input<string>? DomainName { get; set; }

        /// <summary>
        /// Whether the distribution is enabled to accept end
        /// user requests for content.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// The current version of the distribution's information. For example:
        /// `E2QWRUHAPOMQZL`.
        /// </summary>
        [Input("etag")]
        public Input<string>? Etag { get; set; }

        /// <summary>
        /// The CloudFront Route 53 zone ID that can be used to
        /// route an [Alias Resource Record Set][7] to. This attribute is simply an
        /// alias for the zone ID `Z2FDTNDATAQYW2`.
        /// </summary>
        [Input("hostedZoneId")]
        public Input<string>? HostedZoneId { get; set; }

        /// <summary>
        /// The maximum HTTP version to support on the
        /// distribution. Allowed values are `http1.1` and `http2`. The default is
        /// `http2`.
        /// </summary>
        [Input("httpVersion")]
        public Input<string>? HttpVersion { get; set; }

        /// <summary>
        /// The number of invalidation batches
        /// currently in progress.
        /// </summary>
        [Input("inProgressValidationBatches")]
        public Input<int>? InProgressValidationBatches { get; set; }

        /// <summary>
        /// Whether the IPv6 is enabled for the distribution.
        /// </summary>
        [Input("isIpv6Enabled")]
        public Input<bool>? IsIpv6Enabled { get; set; }

        /// <summary>
        /// The date and time the distribution was last modified.
        /// </summary>
        [Input("lastModifiedTime")]
        public Input<string>? LastModifiedTime { get; set; }

        /// <summary>
        /// The logging
        /// configuration that controls how logs are written
        /// to your distribution (maximum one).
        /// </summary>
        [Input("loggingConfig")]
        public Input<Inputs.DistributionLoggingConfigGetArgs>? LoggingConfig { get; set; }

        [Input("orderedCacheBehaviors")]
        private InputList<Inputs.DistributionOrderedCacheBehaviorsGetArgs>? _orderedCacheBehaviors;

        /// <summary>
        /// An ordered list of cache behaviors
        /// resource for this distribution. List from top to bottom
        /// in order of precedence. The topmost cache behavior will have precedence 0.
        /// </summary>
        public InputList<Inputs.DistributionOrderedCacheBehaviorsGetArgs> OrderedCacheBehaviors
        {
            get => _orderedCacheBehaviors ?? (_orderedCacheBehaviors = new InputList<Inputs.DistributionOrderedCacheBehaviorsGetArgs>());
            set => _orderedCacheBehaviors = value;
        }

        [Input("origins")]
        private InputList<Inputs.DistributionOriginsGetArgs>? _origins;

        /// <summary>
        /// One or more origins for this
        /// distribution (multiples allowed).
        /// </summary>
        public InputList<Inputs.DistributionOriginsGetArgs> Origins
        {
            get => _origins ?? (_origins = new InputList<Inputs.DistributionOriginsGetArgs>());
            set => _origins = value;
        }

        [Input("originGroups")]
        private InputList<Inputs.DistributionOriginGroupsGetArgs>? _originGroups;

        /// <summary>
        /// One or more origin_group for this
        /// distribution (multiples allowed).
        /// </summary>
        public InputList<Inputs.DistributionOriginGroupsGetArgs> OriginGroups
        {
            get => _originGroups ?? (_originGroups = new InputList<Inputs.DistributionOriginGroupsGetArgs>());
            set => _originGroups = value;
        }

        /// <summary>
        /// The price class for this distribution. One of
        /// `PriceClass_All`, `PriceClass_200`, `PriceClass_100`
        /// </summary>
        [Input("priceClass")]
        public Input<string>? PriceClass { get; set; }

        /// <summary>
        /// The restriction
        /// configuration for this distribution (maximum one).
        /// </summary>
        [Input("restrictions")]
        public Input<Inputs.DistributionRestrictionsGetArgs>? Restrictions { get; set; }

        /// <summary>
        /// Disables the distribution instead of
        /// deleting it when destroying the resource. If this is set,
        /// the distribution needs to be deleted manually afterwards. Default: `false`.
        /// </summary>
        [Input("retainOnDelete")]
        public Input<bool>? RetainOnDelete { get; set; }

        /// <summary>
        /// The current status of the distribution. `Deployed` if the
        /// distribution's information is fully propagated throughout the Amazon
        /// CloudFront system.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        /// <summary>
        /// The SSL
        /// configuration for this distribution (maximum
        /// one).
        /// </summary>
        [Input("viewerCertificate")]
        public Input<Inputs.DistributionViewerCertificateGetArgs>? ViewerCertificate { get; set; }

        /// <summary>
        /// If enabled, the resource will wait for
        /// the distribution status to change from `InProgress` to `Deployed`. Setting
        /// this to`false` will skip the process. Default: `true`.
        /// </summary>
        [Input("waitForDeployment")]
        public Input<bool>? WaitForDeployment { get; set; }

        /// <summary>
        /// If you're using AWS WAF to filter CloudFront
        /// requests, the Id of the AWS WAF web ACL that is associated with the
        /// distribution. The WAF Web ACL must exist in the WAF Global (CloudFront)
        /// region and the credentials configuring this argument must have
        /// `waf:GetWebACL` permissions assigned.
        /// </summary>
        [Input("webAclId")]
        public Input<string>? WebAclId { get; set; }

        public DistributionState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class DistributionCustomErrorResponsesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The minimum amount of time you want
        /// HTTP error codes to stay in CloudFront caches before CloudFront queries your
        /// origin to see whether the object has been updated.
        /// </summary>
        [Input("errorCachingMinTtl")]
        public Input<int>? ErrorCachingMinTtl { get; set; }

        /// <summary>
        /// The 4xx or 5xx HTTP status code that you want to
        /// customize.
        /// </summary>
        [Input("errorCode", required: true)]
        public Input<int> ErrorCode { get; set; } = null!;

        /// <summary>
        /// The HTTP status code that you want CloudFront
        /// to return with the custom error page to the viewer.
        /// </summary>
        [Input("responseCode")]
        public Input<int>? ResponseCode { get; set; }

        /// <summary>
        /// The path of the custom error page (for
        /// example, `/custom_404.html`).
        /// </summary>
        [Input("responsePagePath")]
        public Input<string>? ResponsePagePath { get; set; }

        public DistributionCustomErrorResponsesArgs()
        {
        }
    }

    public sealed class DistributionCustomErrorResponsesGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The minimum amount of time you want
        /// HTTP error codes to stay in CloudFront caches before CloudFront queries your
        /// origin to see whether the object has been updated.
        /// </summary>
        [Input("errorCachingMinTtl")]
        public Input<int>? ErrorCachingMinTtl { get; set; }

        /// <summary>
        /// The 4xx or 5xx HTTP status code that you want to
        /// customize.
        /// </summary>
        [Input("errorCode", required: true)]
        public Input<int> ErrorCode { get; set; } = null!;

        /// <summary>
        /// The HTTP status code that you want CloudFront
        /// to return with the custom error page to the viewer.
        /// </summary>
        [Input("responseCode")]
        public Input<int>? ResponseCode { get; set; }

        /// <summary>
        /// The path of the custom error page (for
        /// example, `/custom_404.html`).
        /// </summary>
        [Input("responsePagePath")]
        public Input<string>? ResponsePagePath { get; set; }

        public DistributionCustomErrorResponsesGetArgs()
        {
        }
    }

    public sealed class DistributionDefaultCacheBehaviorArgs : Pulumi.ResourceArgs
    {
        [Input("allowedMethods", required: true)]
        private InputList<string>? _allowedMethods;

        /// <summary>
        /// Controls which HTTP methods CloudFront
        /// processes and forwards to your Amazon S3 bucket or your custom origin.
        /// </summary>
        public InputList<string> AllowedMethods
        {
            get => _allowedMethods ?? (_allowedMethods = new InputList<string>());
            set => _allowedMethods = value;
        }

        [Input("cachedMethods", required: true)]
        private InputList<string>? _cachedMethods;

        /// <summary>
        /// Controls whether CloudFront caches the
        /// response to requests using the specified HTTP methods.
        /// </summary>
        public InputList<string> CachedMethods
        {
            get => _cachedMethods ?? (_cachedMethods = new InputList<string>());
            set => _cachedMethods = value;
        }

        /// <summary>
        /// Whether you want CloudFront to automatically
        /// compress content for web requests that include `Accept-Encoding: gzip` in
        /// the request header (default: `false`).
        /// </summary>
        [Input("compress")]
        public Input<bool>? Compress { get; set; }

        /// <summary>
        /// The default amount of time (in seconds) that an
        /// object is in a CloudFront cache before CloudFront forwards another request
        /// in the absence of an `Cache-Control max-age` or `Expires` header. Defaults to
        /// 1 day.
        /// </summary>
        [Input("defaultTtl")]
        public Input<int>? DefaultTtl { get; set; }

        /// <summary>
        /// Field level encryption configuration ID
        /// </summary>
        [Input("fieldLevelEncryptionId")]
        public Input<string>? FieldLevelEncryptionId { get; set; }

        /// <summary>
        /// The forwarded values configuration that specifies how CloudFront
        /// handles query strings, cookies and headers (maximum one).
        /// </summary>
        [Input("forwardedValues", required: true)]
        public Input<DistributionDefaultCacheBehaviorForwardedValuesArgs> ForwardedValues { get; set; } = null!;

        [Input("lambdaFunctionAssociations")]
        private InputList<DistributionDefaultCacheBehaviorLambdaFunctionAssociationsArgs>? _lambdaFunctionAssociations;

        /// <summary>
        /// A config block that triggers a lambda function with
        /// specific actions. Defined below, maximum 4.
        /// </summary>
        public InputList<DistributionDefaultCacheBehaviorLambdaFunctionAssociationsArgs> LambdaFunctionAssociations
        {
            get => _lambdaFunctionAssociations ?? (_lambdaFunctionAssociations = new InputList<DistributionDefaultCacheBehaviorLambdaFunctionAssociationsArgs>());
            set => _lambdaFunctionAssociations = value;
        }

        /// <summary>
        /// The maximum amount of time (in seconds) that an
        /// object is in a CloudFront cache before CloudFront forwards another request
        /// to your origin to determine whether the object has been updated. Only
        /// effective in the presence of `Cache-Control max-age`, `Cache-Control
        /// s-maxage`, and `Expires` headers. Defaults to 365 days.
        /// </summary>
        [Input("maxTtl")]
        public Input<int>? MaxTtl { get; set; }

        /// <summary>
        /// The minimum amount of time that you want objects to
        /// stay in CloudFront caches before CloudFront queries your origin to see
        /// whether the object has been updated. Defaults to 0 seconds.
        /// </summary>
        [Input("minTtl")]
        public Input<int>? MinTtl { get; set; }

        /// <summary>
        /// Indicates whether you want to distribute
        /// media files in Microsoft Smooth Streaming format using the origin that is
        /// associated with this cache behavior.
        /// </summary>
        [Input("smoothStreaming")]
        public Input<bool>? SmoothStreaming { get; set; }

        /// <summary>
        /// The value of ID for the origin that you want
        /// CloudFront to route requests to when a request matches the path pattern
        /// either for a cache behavior or for the default cache behavior.
        /// </summary>
        [Input("targetOriginId", required: true)]
        public Input<string> TargetOriginId { get; set; } = null!;

        [Input("trustedSigners")]
        private InputList<string>? _trustedSigners;

        /// <summary>
        /// The AWS accounts, if any, that you want to
        /// allow to create signed URLs for private content.
        /// </summary>
        public InputList<string> TrustedSigners
        {
            get => _trustedSigners ?? (_trustedSigners = new InputList<string>());
            set => _trustedSigners = value;
        }

        /// <summary>
        /// Use this element to specify the
        /// protocol that users can use to access the files in the origin specified by
        /// TargetOriginId when a request matches the path pattern in PathPattern. One
        /// of `allow-all`, `https-only`, or `redirect-to-https`.
        /// </summary>
        [Input("viewerProtocolPolicy", required: true)]
        public Input<string> ViewerProtocolPolicy { get; set; } = null!;

        public DistributionDefaultCacheBehaviorArgs()
        {
        }
    }

    public sealed class DistributionDefaultCacheBehaviorForwardedValuesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The forwarded values cookies
        /// that specifies how CloudFront handles cookies (maximum one).
        /// </summary>
        [Input("cookies", required: true)]
        public Input<DistributionDefaultCacheBehaviorForwardedValuesCookiesArgs> Cookies { get; set; } = null!;

        [Input("headers")]
        private InputList<string>? _headers;

        /// <summary>
        /// Specifies the Headers, if any, that you want
        /// CloudFront to vary upon for this cache behavior. Specify `*` to include all
        /// headers.
        /// </summary>
        public InputList<string> Headers
        {
            get => _headers ?? (_headers = new InputList<string>());
            set => _headers = value;
        }

        /// <summary>
        /// Indicates whether you want CloudFront to forward
        /// query strings to the origin that is associated with this cache behavior.
        /// </summary>
        [Input("queryString", required: true)]
        public Input<bool> QueryString { get; set; } = null!;

        [Input("queryStringCacheKeys")]
        private InputList<string>? _queryStringCacheKeys;

        /// <summary>
        /// When specified, along with a value of
        /// `true` for `query_string`, all query strings are forwarded, however only the
        /// query string keys listed in this argument are cached. When omitted with a
        /// value of `true` for `query_string`, all query string keys are cached.
        /// </summary>
        public InputList<string> QueryStringCacheKeys
        {
            get => _queryStringCacheKeys ?? (_queryStringCacheKeys = new InputList<string>());
            set => _queryStringCacheKeys = value;
        }

        public DistributionDefaultCacheBehaviorForwardedValuesArgs()
        {
        }
    }

    public sealed class DistributionDefaultCacheBehaviorForwardedValuesCookiesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies whether you want CloudFront to forward
        /// cookies to the origin that is associated with this cache behavior. You can
        /// specify `all`, `none` or `whitelist`. If `whitelist`, you must include the
        /// subsequent `whitelisted_names`
        /// </summary>
        [Input("forward", required: true)]
        public Input<string> Forward { get; set; } = null!;

        [Input("whitelistedNames")]
        private InputList<string>? _whitelistedNames;

        /// <summary>
        /// If you have specified `whitelist` to
        /// `forward`, the whitelisted cookies that you want CloudFront to forward to
        /// your origin.
        /// </summary>
        public InputList<string> WhitelistedNames
        {
            get => _whitelistedNames ?? (_whitelistedNames = new InputList<string>());
            set => _whitelistedNames = value;
        }

        public DistributionDefaultCacheBehaviorForwardedValuesCookiesArgs()
        {
        }
    }

    public sealed class DistributionDefaultCacheBehaviorForwardedValuesCookiesGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies whether you want CloudFront to forward
        /// cookies to the origin that is associated with this cache behavior. You can
        /// specify `all`, `none` or `whitelist`. If `whitelist`, you must include the
        /// subsequent `whitelisted_names`
        /// </summary>
        [Input("forward", required: true)]
        public Input<string> Forward { get; set; } = null!;

        [Input("whitelistedNames")]
        private InputList<string>? _whitelistedNames;

        /// <summary>
        /// If you have specified `whitelist` to
        /// `forward`, the whitelisted cookies that you want CloudFront to forward to
        /// your origin.
        /// </summary>
        public InputList<string> WhitelistedNames
        {
            get => _whitelistedNames ?? (_whitelistedNames = new InputList<string>());
            set => _whitelistedNames = value;
        }

        public DistributionDefaultCacheBehaviorForwardedValuesCookiesGetArgs()
        {
        }
    }

    public sealed class DistributionDefaultCacheBehaviorForwardedValuesGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The forwarded values cookies
        /// that specifies how CloudFront handles cookies (maximum one).
        /// </summary>
        [Input("cookies", required: true)]
        public Input<DistributionDefaultCacheBehaviorForwardedValuesCookiesGetArgs> Cookies { get; set; } = null!;

        [Input("headers")]
        private InputList<string>? _headers;

        /// <summary>
        /// Specifies the Headers, if any, that you want
        /// CloudFront to vary upon for this cache behavior. Specify `*` to include all
        /// headers.
        /// </summary>
        public InputList<string> Headers
        {
            get => _headers ?? (_headers = new InputList<string>());
            set => _headers = value;
        }

        /// <summary>
        /// Indicates whether you want CloudFront to forward
        /// query strings to the origin that is associated with this cache behavior.
        /// </summary>
        [Input("queryString", required: true)]
        public Input<bool> QueryString { get; set; } = null!;

        [Input("queryStringCacheKeys")]
        private InputList<string>? _queryStringCacheKeys;

        /// <summary>
        /// When specified, along with a value of
        /// `true` for `query_string`, all query strings are forwarded, however only the
        /// query string keys listed in this argument are cached. When omitted with a
        /// value of `true` for `query_string`, all query string keys are cached.
        /// </summary>
        public InputList<string> QueryStringCacheKeys
        {
            get => _queryStringCacheKeys ?? (_queryStringCacheKeys = new InputList<string>());
            set => _queryStringCacheKeys = value;
        }

        public DistributionDefaultCacheBehaviorForwardedValuesGetArgs()
        {
        }
    }

    public sealed class DistributionDefaultCacheBehaviorGetArgs : Pulumi.ResourceArgs
    {
        [Input("allowedMethods", required: true)]
        private InputList<string>? _allowedMethods;

        /// <summary>
        /// Controls which HTTP methods CloudFront
        /// processes and forwards to your Amazon S3 bucket or your custom origin.
        /// </summary>
        public InputList<string> AllowedMethods
        {
            get => _allowedMethods ?? (_allowedMethods = new InputList<string>());
            set => _allowedMethods = value;
        }

        [Input("cachedMethods", required: true)]
        private InputList<string>? _cachedMethods;

        /// <summary>
        /// Controls whether CloudFront caches the
        /// response to requests using the specified HTTP methods.
        /// </summary>
        public InputList<string> CachedMethods
        {
            get => _cachedMethods ?? (_cachedMethods = new InputList<string>());
            set => _cachedMethods = value;
        }

        /// <summary>
        /// Whether you want CloudFront to automatically
        /// compress content for web requests that include `Accept-Encoding: gzip` in
        /// the request header (default: `false`).
        /// </summary>
        [Input("compress")]
        public Input<bool>? Compress { get; set; }

        /// <summary>
        /// The default amount of time (in seconds) that an
        /// object is in a CloudFront cache before CloudFront forwards another request
        /// in the absence of an `Cache-Control max-age` or `Expires` header. Defaults to
        /// 1 day.
        /// </summary>
        [Input("defaultTtl")]
        public Input<int>? DefaultTtl { get; set; }

        /// <summary>
        /// Field level encryption configuration ID
        /// </summary>
        [Input("fieldLevelEncryptionId")]
        public Input<string>? FieldLevelEncryptionId { get; set; }

        /// <summary>
        /// The forwarded values configuration that specifies how CloudFront
        /// handles query strings, cookies and headers (maximum one).
        /// </summary>
        [Input("forwardedValues", required: true)]
        public Input<DistributionDefaultCacheBehaviorForwardedValuesGetArgs> ForwardedValues { get; set; } = null!;

        [Input("lambdaFunctionAssociations")]
        private InputList<DistributionDefaultCacheBehaviorLambdaFunctionAssociationsGetArgs>? _lambdaFunctionAssociations;

        /// <summary>
        /// A config block that triggers a lambda function with
        /// specific actions. Defined below, maximum 4.
        /// </summary>
        public InputList<DistributionDefaultCacheBehaviorLambdaFunctionAssociationsGetArgs> LambdaFunctionAssociations
        {
            get => _lambdaFunctionAssociations ?? (_lambdaFunctionAssociations = new InputList<DistributionDefaultCacheBehaviorLambdaFunctionAssociationsGetArgs>());
            set => _lambdaFunctionAssociations = value;
        }

        /// <summary>
        /// The maximum amount of time (in seconds) that an
        /// object is in a CloudFront cache before CloudFront forwards another request
        /// to your origin to determine whether the object has been updated. Only
        /// effective in the presence of `Cache-Control max-age`, `Cache-Control
        /// s-maxage`, and `Expires` headers. Defaults to 365 days.
        /// </summary>
        [Input("maxTtl")]
        public Input<int>? MaxTtl { get; set; }

        /// <summary>
        /// The minimum amount of time that you want objects to
        /// stay in CloudFront caches before CloudFront queries your origin to see
        /// whether the object has been updated. Defaults to 0 seconds.
        /// </summary>
        [Input("minTtl")]
        public Input<int>? MinTtl { get; set; }

        /// <summary>
        /// Indicates whether you want to distribute
        /// media files in Microsoft Smooth Streaming format using the origin that is
        /// associated with this cache behavior.
        /// </summary>
        [Input("smoothStreaming")]
        public Input<bool>? SmoothStreaming { get; set; }

        /// <summary>
        /// The value of ID for the origin that you want
        /// CloudFront to route requests to when a request matches the path pattern
        /// either for a cache behavior or for the default cache behavior.
        /// </summary>
        [Input("targetOriginId", required: true)]
        public Input<string> TargetOriginId { get; set; } = null!;

        [Input("trustedSigners")]
        private InputList<string>? _trustedSigners;

        /// <summary>
        /// The AWS accounts, if any, that you want to
        /// allow to create signed URLs for private content.
        /// </summary>
        public InputList<string> TrustedSigners
        {
            get => _trustedSigners ?? (_trustedSigners = new InputList<string>());
            set => _trustedSigners = value;
        }

        /// <summary>
        /// Use this element to specify the
        /// protocol that users can use to access the files in the origin specified by
        /// TargetOriginId when a request matches the path pattern in PathPattern. One
        /// of `allow-all`, `https-only`, or `redirect-to-https`.
        /// </summary>
        [Input("viewerProtocolPolicy", required: true)]
        public Input<string> ViewerProtocolPolicy { get; set; } = null!;

        public DistributionDefaultCacheBehaviorGetArgs()
        {
        }
    }

    public sealed class DistributionDefaultCacheBehaviorLambdaFunctionAssociationsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The specific event to trigger this function.
        /// Valid values: `viewer-request`, `origin-request`, `viewer-response`,
        /// `origin-response`
        /// </summary>
        [Input("eventType", required: true)]
        public Input<string> EventType { get; set; } = null!;

        /// <summary>
        /// When set to true it exposes the request body to the lambda function. Defaults to false. Valid values: `true`, `false`.
        /// </summary>
        [Input("includeBody")]
        public Input<bool>? IncludeBody { get; set; }

        /// <summary>
        /// ARN of the Lambda function.
        /// </summary>
        [Input("lambdaArn", required: true)]
        public Input<string> LambdaArn { get; set; } = null!;

        public DistributionDefaultCacheBehaviorLambdaFunctionAssociationsArgs()
        {
        }
    }

    public sealed class DistributionDefaultCacheBehaviorLambdaFunctionAssociationsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The specific event to trigger this function.
        /// Valid values: `viewer-request`, `origin-request`, `viewer-response`,
        /// `origin-response`
        /// </summary>
        [Input("eventType", required: true)]
        public Input<string> EventType { get; set; } = null!;

        /// <summary>
        /// When set to true it exposes the request body to the lambda function. Defaults to false. Valid values: `true`, `false`.
        /// </summary>
        [Input("includeBody")]
        public Input<bool>? IncludeBody { get; set; }

        /// <summary>
        /// ARN of the Lambda function.
        /// </summary>
        [Input("lambdaArn", required: true)]
        public Input<string> LambdaArn { get; set; } = null!;

        public DistributionDefaultCacheBehaviorLambdaFunctionAssociationsGetArgs()
        {
        }
    }

    public sealed class DistributionLoggingConfigArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Amazon S3 bucket to store the access logs in, for
        /// example, `myawslogbucket.s3.amazonaws.com`.
        /// </summary>
        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        /// <summary>
        /// Specifies whether you want CloudFront to
        /// include cookies in access logs (default: `false`).
        /// </summary>
        [Input("includeCookies")]
        public Input<bool>? IncludeCookies { get; set; }

        /// <summary>
        /// An optional string that you want CloudFront to prefix
        /// to the access log filenames for this distribution, for example, `myprefix/`.
        /// </summary>
        [Input("prefix")]
        public Input<string>? Prefix { get; set; }

        public DistributionLoggingConfigArgs()
        {
        }
    }

    public sealed class DistributionLoggingConfigGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Amazon S3 bucket to store the access logs in, for
        /// example, `myawslogbucket.s3.amazonaws.com`.
        /// </summary>
        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        /// <summary>
        /// Specifies whether you want CloudFront to
        /// include cookies in access logs (default: `false`).
        /// </summary>
        [Input("includeCookies")]
        public Input<bool>? IncludeCookies { get; set; }

        /// <summary>
        /// An optional string that you want CloudFront to prefix
        /// to the access log filenames for this distribution, for example, `myprefix/`.
        /// </summary>
        [Input("prefix")]
        public Input<string>? Prefix { get; set; }

        public DistributionLoggingConfigGetArgs()
        {
        }
    }

    public sealed class DistributionOrderedCacheBehaviorsArgs : Pulumi.ResourceArgs
    {
        [Input("allowedMethods", required: true)]
        private InputList<string>? _allowedMethods;

        /// <summary>
        /// Controls which HTTP methods CloudFront
        /// processes and forwards to your Amazon S3 bucket or your custom origin.
        /// </summary>
        public InputList<string> AllowedMethods
        {
            get => _allowedMethods ?? (_allowedMethods = new InputList<string>());
            set => _allowedMethods = value;
        }

        [Input("cachedMethods", required: true)]
        private InputList<string>? _cachedMethods;

        /// <summary>
        /// Controls whether CloudFront caches the
        /// response to requests using the specified HTTP methods.
        /// </summary>
        public InputList<string> CachedMethods
        {
            get => _cachedMethods ?? (_cachedMethods = new InputList<string>());
            set => _cachedMethods = value;
        }

        /// <summary>
        /// Whether you want CloudFront to automatically
        /// compress content for web requests that include `Accept-Encoding: gzip` in
        /// the request header (default: `false`).
        /// </summary>
        [Input("compress")]
        public Input<bool>? Compress { get; set; }

        /// <summary>
        /// The default amount of time (in seconds) that an
        /// object is in a CloudFront cache before CloudFront forwards another request
        /// in the absence of an `Cache-Control max-age` or `Expires` header. Defaults to
        /// 1 day.
        /// </summary>
        [Input("defaultTtl")]
        public Input<int>? DefaultTtl { get; set; }

        /// <summary>
        /// Field level encryption configuration ID
        /// </summary>
        [Input("fieldLevelEncryptionId")]
        public Input<string>? FieldLevelEncryptionId { get; set; }

        /// <summary>
        /// The forwarded values configuration that specifies how CloudFront
        /// handles query strings, cookies and headers (maximum one).
        /// </summary>
        [Input("forwardedValues", required: true)]
        public Input<DistributionOrderedCacheBehaviorsForwardedValuesArgs> ForwardedValues { get; set; } = null!;

        [Input("lambdaFunctionAssociations")]
        private InputList<DistributionOrderedCacheBehaviorsLambdaFunctionAssociationsArgs>? _lambdaFunctionAssociations;

        /// <summary>
        /// A config block that triggers a lambda function with
        /// specific actions. Defined below, maximum 4.
        /// </summary>
        public InputList<DistributionOrderedCacheBehaviorsLambdaFunctionAssociationsArgs> LambdaFunctionAssociations
        {
            get => _lambdaFunctionAssociations ?? (_lambdaFunctionAssociations = new InputList<DistributionOrderedCacheBehaviorsLambdaFunctionAssociationsArgs>());
            set => _lambdaFunctionAssociations = value;
        }

        /// <summary>
        /// The maximum amount of time (in seconds) that an
        /// object is in a CloudFront cache before CloudFront forwards another request
        /// to your origin to determine whether the object has been updated. Only
        /// effective in the presence of `Cache-Control max-age`, `Cache-Control
        /// s-maxage`, and `Expires` headers. Defaults to 365 days.
        /// </summary>
        [Input("maxTtl")]
        public Input<int>? MaxTtl { get; set; }

        /// <summary>
        /// The minimum amount of time that you want objects to
        /// stay in CloudFront caches before CloudFront queries your origin to see
        /// whether the object has been updated. Defaults to 0 seconds.
        /// </summary>
        [Input("minTtl")]
        public Input<int>? MinTtl { get; set; }

        /// <summary>
        /// The pattern (for example, `images/*.jpg)` that
        /// specifies which requests you want this cache behavior to apply to.
        /// </summary>
        [Input("pathPattern", required: true)]
        public Input<string> PathPattern { get; set; } = null!;

        /// <summary>
        /// Indicates whether you want to distribute
        /// media files in Microsoft Smooth Streaming format using the origin that is
        /// associated with this cache behavior.
        /// </summary>
        [Input("smoothStreaming")]
        public Input<bool>? SmoothStreaming { get; set; }

        /// <summary>
        /// The value of ID for the origin that you want
        /// CloudFront to route requests to when a request matches the path pattern
        /// either for a cache behavior or for the default cache behavior.
        /// </summary>
        [Input("targetOriginId", required: true)]
        public Input<string> TargetOriginId { get; set; } = null!;

        [Input("trustedSigners")]
        private InputList<string>? _trustedSigners;

        /// <summary>
        /// The AWS accounts, if any, that you want to
        /// allow to create signed URLs for private content.
        /// </summary>
        public InputList<string> TrustedSigners
        {
            get => _trustedSigners ?? (_trustedSigners = new InputList<string>());
            set => _trustedSigners = value;
        }

        /// <summary>
        /// Use this element to specify the
        /// protocol that users can use to access the files in the origin specified by
        /// TargetOriginId when a request matches the path pattern in PathPattern. One
        /// of `allow-all`, `https-only`, or `redirect-to-https`.
        /// </summary>
        [Input("viewerProtocolPolicy", required: true)]
        public Input<string> ViewerProtocolPolicy { get; set; } = null!;

        public DistributionOrderedCacheBehaviorsArgs()
        {
        }
    }

    public sealed class DistributionOrderedCacheBehaviorsForwardedValuesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The forwarded values cookies
        /// that specifies how CloudFront handles cookies (maximum one).
        /// </summary>
        [Input("cookies", required: true)]
        public Input<DistributionOrderedCacheBehaviorsForwardedValuesCookiesArgs> Cookies { get; set; } = null!;

        [Input("headers")]
        private InputList<string>? _headers;

        /// <summary>
        /// Specifies the Headers, if any, that you want
        /// CloudFront to vary upon for this cache behavior. Specify `*` to include all
        /// headers.
        /// </summary>
        public InputList<string> Headers
        {
            get => _headers ?? (_headers = new InputList<string>());
            set => _headers = value;
        }

        /// <summary>
        /// Indicates whether you want CloudFront to forward
        /// query strings to the origin that is associated with this cache behavior.
        /// </summary>
        [Input("queryString", required: true)]
        public Input<bool> QueryString { get; set; } = null!;

        [Input("queryStringCacheKeys")]
        private InputList<string>? _queryStringCacheKeys;

        /// <summary>
        /// When specified, along with a value of
        /// `true` for `query_string`, all query strings are forwarded, however only the
        /// query string keys listed in this argument are cached. When omitted with a
        /// value of `true` for `query_string`, all query string keys are cached.
        /// </summary>
        public InputList<string> QueryStringCacheKeys
        {
            get => _queryStringCacheKeys ?? (_queryStringCacheKeys = new InputList<string>());
            set => _queryStringCacheKeys = value;
        }

        public DistributionOrderedCacheBehaviorsForwardedValuesArgs()
        {
        }
    }

    public sealed class DistributionOrderedCacheBehaviorsForwardedValuesCookiesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies whether you want CloudFront to forward
        /// cookies to the origin that is associated with this cache behavior. You can
        /// specify `all`, `none` or `whitelist`. If `whitelist`, you must include the
        /// subsequent `whitelisted_names`
        /// </summary>
        [Input("forward", required: true)]
        public Input<string> Forward { get; set; } = null!;

        [Input("whitelistedNames")]
        private InputList<string>? _whitelistedNames;

        /// <summary>
        /// If you have specified `whitelist` to
        /// `forward`, the whitelisted cookies that you want CloudFront to forward to
        /// your origin.
        /// </summary>
        public InputList<string> WhitelistedNames
        {
            get => _whitelistedNames ?? (_whitelistedNames = new InputList<string>());
            set => _whitelistedNames = value;
        }

        public DistributionOrderedCacheBehaviorsForwardedValuesCookiesArgs()
        {
        }
    }

    public sealed class DistributionOrderedCacheBehaviorsForwardedValuesCookiesGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies whether you want CloudFront to forward
        /// cookies to the origin that is associated with this cache behavior. You can
        /// specify `all`, `none` or `whitelist`. If `whitelist`, you must include the
        /// subsequent `whitelisted_names`
        /// </summary>
        [Input("forward", required: true)]
        public Input<string> Forward { get; set; } = null!;

        [Input("whitelistedNames")]
        private InputList<string>? _whitelistedNames;

        /// <summary>
        /// If you have specified `whitelist` to
        /// `forward`, the whitelisted cookies that you want CloudFront to forward to
        /// your origin.
        /// </summary>
        public InputList<string> WhitelistedNames
        {
            get => _whitelistedNames ?? (_whitelistedNames = new InputList<string>());
            set => _whitelistedNames = value;
        }

        public DistributionOrderedCacheBehaviorsForwardedValuesCookiesGetArgs()
        {
        }
    }

    public sealed class DistributionOrderedCacheBehaviorsForwardedValuesGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The forwarded values cookies
        /// that specifies how CloudFront handles cookies (maximum one).
        /// </summary>
        [Input("cookies", required: true)]
        public Input<DistributionOrderedCacheBehaviorsForwardedValuesCookiesGetArgs> Cookies { get; set; } = null!;

        [Input("headers")]
        private InputList<string>? _headers;

        /// <summary>
        /// Specifies the Headers, if any, that you want
        /// CloudFront to vary upon for this cache behavior. Specify `*` to include all
        /// headers.
        /// </summary>
        public InputList<string> Headers
        {
            get => _headers ?? (_headers = new InputList<string>());
            set => _headers = value;
        }

        /// <summary>
        /// Indicates whether you want CloudFront to forward
        /// query strings to the origin that is associated with this cache behavior.
        /// </summary>
        [Input("queryString", required: true)]
        public Input<bool> QueryString { get; set; } = null!;

        [Input("queryStringCacheKeys")]
        private InputList<string>? _queryStringCacheKeys;

        /// <summary>
        /// When specified, along with a value of
        /// `true` for `query_string`, all query strings are forwarded, however only the
        /// query string keys listed in this argument are cached. When omitted with a
        /// value of `true` for `query_string`, all query string keys are cached.
        /// </summary>
        public InputList<string> QueryStringCacheKeys
        {
            get => _queryStringCacheKeys ?? (_queryStringCacheKeys = new InputList<string>());
            set => _queryStringCacheKeys = value;
        }

        public DistributionOrderedCacheBehaviorsForwardedValuesGetArgs()
        {
        }
    }

    public sealed class DistributionOrderedCacheBehaviorsGetArgs : Pulumi.ResourceArgs
    {
        [Input("allowedMethods", required: true)]
        private InputList<string>? _allowedMethods;

        /// <summary>
        /// Controls which HTTP methods CloudFront
        /// processes and forwards to your Amazon S3 bucket or your custom origin.
        /// </summary>
        public InputList<string> AllowedMethods
        {
            get => _allowedMethods ?? (_allowedMethods = new InputList<string>());
            set => _allowedMethods = value;
        }

        [Input("cachedMethods", required: true)]
        private InputList<string>? _cachedMethods;

        /// <summary>
        /// Controls whether CloudFront caches the
        /// response to requests using the specified HTTP methods.
        /// </summary>
        public InputList<string> CachedMethods
        {
            get => _cachedMethods ?? (_cachedMethods = new InputList<string>());
            set => _cachedMethods = value;
        }

        /// <summary>
        /// Whether you want CloudFront to automatically
        /// compress content for web requests that include `Accept-Encoding: gzip` in
        /// the request header (default: `false`).
        /// </summary>
        [Input("compress")]
        public Input<bool>? Compress { get; set; }

        /// <summary>
        /// The default amount of time (in seconds) that an
        /// object is in a CloudFront cache before CloudFront forwards another request
        /// in the absence of an `Cache-Control max-age` or `Expires` header. Defaults to
        /// 1 day.
        /// </summary>
        [Input("defaultTtl")]
        public Input<int>? DefaultTtl { get; set; }

        /// <summary>
        /// Field level encryption configuration ID
        /// </summary>
        [Input("fieldLevelEncryptionId")]
        public Input<string>? FieldLevelEncryptionId { get; set; }

        /// <summary>
        /// The forwarded values configuration that specifies how CloudFront
        /// handles query strings, cookies and headers (maximum one).
        /// </summary>
        [Input("forwardedValues", required: true)]
        public Input<DistributionOrderedCacheBehaviorsForwardedValuesGetArgs> ForwardedValues { get; set; } = null!;

        [Input("lambdaFunctionAssociations")]
        private InputList<DistributionOrderedCacheBehaviorsLambdaFunctionAssociationsGetArgs>? _lambdaFunctionAssociations;

        /// <summary>
        /// A config block that triggers a lambda function with
        /// specific actions. Defined below, maximum 4.
        /// </summary>
        public InputList<DistributionOrderedCacheBehaviorsLambdaFunctionAssociationsGetArgs> LambdaFunctionAssociations
        {
            get => _lambdaFunctionAssociations ?? (_lambdaFunctionAssociations = new InputList<DistributionOrderedCacheBehaviorsLambdaFunctionAssociationsGetArgs>());
            set => _lambdaFunctionAssociations = value;
        }

        /// <summary>
        /// The maximum amount of time (in seconds) that an
        /// object is in a CloudFront cache before CloudFront forwards another request
        /// to your origin to determine whether the object has been updated. Only
        /// effective in the presence of `Cache-Control max-age`, `Cache-Control
        /// s-maxage`, and `Expires` headers. Defaults to 365 days.
        /// </summary>
        [Input("maxTtl")]
        public Input<int>? MaxTtl { get; set; }

        /// <summary>
        /// The minimum amount of time that you want objects to
        /// stay in CloudFront caches before CloudFront queries your origin to see
        /// whether the object has been updated. Defaults to 0 seconds.
        /// </summary>
        [Input("minTtl")]
        public Input<int>? MinTtl { get; set; }

        /// <summary>
        /// The pattern (for example, `images/*.jpg)` that
        /// specifies which requests you want this cache behavior to apply to.
        /// </summary>
        [Input("pathPattern", required: true)]
        public Input<string> PathPattern { get; set; } = null!;

        /// <summary>
        /// Indicates whether you want to distribute
        /// media files in Microsoft Smooth Streaming format using the origin that is
        /// associated with this cache behavior.
        /// </summary>
        [Input("smoothStreaming")]
        public Input<bool>? SmoothStreaming { get; set; }

        /// <summary>
        /// The value of ID for the origin that you want
        /// CloudFront to route requests to when a request matches the path pattern
        /// either for a cache behavior or for the default cache behavior.
        /// </summary>
        [Input("targetOriginId", required: true)]
        public Input<string> TargetOriginId { get; set; } = null!;

        [Input("trustedSigners")]
        private InputList<string>? _trustedSigners;

        /// <summary>
        /// The AWS accounts, if any, that you want to
        /// allow to create signed URLs for private content.
        /// </summary>
        public InputList<string> TrustedSigners
        {
            get => _trustedSigners ?? (_trustedSigners = new InputList<string>());
            set => _trustedSigners = value;
        }

        /// <summary>
        /// Use this element to specify the
        /// protocol that users can use to access the files in the origin specified by
        /// TargetOriginId when a request matches the path pattern in PathPattern. One
        /// of `allow-all`, `https-only`, or `redirect-to-https`.
        /// </summary>
        [Input("viewerProtocolPolicy", required: true)]
        public Input<string> ViewerProtocolPolicy { get; set; } = null!;

        public DistributionOrderedCacheBehaviorsGetArgs()
        {
        }
    }

    public sealed class DistributionOrderedCacheBehaviorsLambdaFunctionAssociationsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The specific event to trigger this function.
        /// Valid values: `viewer-request`, `origin-request`, `viewer-response`,
        /// `origin-response`
        /// </summary>
        [Input("eventType", required: true)]
        public Input<string> EventType { get; set; } = null!;

        /// <summary>
        /// When set to true it exposes the request body to the lambda function. Defaults to false. Valid values: `true`, `false`.
        /// </summary>
        [Input("includeBody")]
        public Input<bool>? IncludeBody { get; set; }

        /// <summary>
        /// ARN of the Lambda function.
        /// </summary>
        [Input("lambdaArn", required: true)]
        public Input<string> LambdaArn { get; set; } = null!;

        public DistributionOrderedCacheBehaviorsLambdaFunctionAssociationsArgs()
        {
        }
    }

    public sealed class DistributionOrderedCacheBehaviorsLambdaFunctionAssociationsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The specific event to trigger this function.
        /// Valid values: `viewer-request`, `origin-request`, `viewer-response`,
        /// `origin-response`
        /// </summary>
        [Input("eventType", required: true)]
        public Input<string> EventType { get; set; } = null!;

        /// <summary>
        /// When set to true it exposes the request body to the lambda function. Defaults to false. Valid values: `true`, `false`.
        /// </summary>
        [Input("includeBody")]
        public Input<bool>? IncludeBody { get; set; }

        /// <summary>
        /// ARN of the Lambda function.
        /// </summary>
        [Input("lambdaArn", required: true)]
        public Input<string> LambdaArn { get; set; } = null!;

        public DistributionOrderedCacheBehaviorsLambdaFunctionAssociationsGetArgs()
        {
        }
    }

    public sealed class DistributionOriginGroupsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The failover criteria for when to failover to the secondary origin
        /// </summary>
        [Input("failoverCriteria", required: true)]
        public Input<DistributionOriginGroupsFailoverCriteriaArgs> FailoverCriteria { get; set; } = null!;

        [Input("members", required: true)]
        private InputList<DistributionOriginGroupsMembersArgs>? _members;

        /// <summary>
        /// Ordered member configuration blocks assigned to the origin group, where the first member is the primary origin. You must specify two members.
        /// </summary>
        public InputList<DistributionOriginGroupsMembersArgs> Members
        {
            get => _members ?? (_members = new InputList<DistributionOriginGroupsMembersArgs>());
            set => _members = value;
        }

        /// <summary>
        /// The unique identifier of the member origin
        /// </summary>
        [Input("originId", required: true)]
        public Input<string> OriginId { get; set; } = null!;

        public DistributionOriginGroupsArgs()
        {
        }
    }

    public sealed class DistributionOriginGroupsFailoverCriteriaArgs : Pulumi.ResourceArgs
    {
        [Input("statusCodes", required: true)]
        private InputList<int>? _statusCodes;

        /// <summary>
        /// A list of HTTP status codes for the origin group
        /// </summary>
        public InputList<int> StatusCodes
        {
            get => _statusCodes ?? (_statusCodes = new InputList<int>());
            set => _statusCodes = value;
        }

        public DistributionOriginGroupsFailoverCriteriaArgs()
        {
        }
    }

    public sealed class DistributionOriginGroupsFailoverCriteriaGetArgs : Pulumi.ResourceArgs
    {
        [Input("statusCodes", required: true)]
        private InputList<int>? _statusCodes;

        /// <summary>
        /// A list of HTTP status codes for the origin group
        /// </summary>
        public InputList<int> StatusCodes
        {
            get => _statusCodes ?? (_statusCodes = new InputList<int>());
            set => _statusCodes = value;
        }

        public DistributionOriginGroupsFailoverCriteriaGetArgs()
        {
        }
    }

    public sealed class DistributionOriginGroupsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The failover criteria for when to failover to the secondary origin
        /// </summary>
        [Input("failoverCriteria", required: true)]
        public Input<DistributionOriginGroupsFailoverCriteriaGetArgs> FailoverCriteria { get; set; } = null!;

        [Input("members", required: true)]
        private InputList<DistributionOriginGroupsMembersGetArgs>? _members;

        /// <summary>
        /// Ordered member configuration blocks assigned to the origin group, where the first member is the primary origin. You must specify two members.
        /// </summary>
        public InputList<DistributionOriginGroupsMembersGetArgs> Members
        {
            get => _members ?? (_members = new InputList<DistributionOriginGroupsMembersGetArgs>());
            set => _members = value;
        }

        /// <summary>
        /// The unique identifier of the member origin
        /// </summary>
        [Input("originId", required: true)]
        public Input<string> OriginId { get; set; } = null!;

        public DistributionOriginGroupsGetArgs()
        {
        }
    }

    public sealed class DistributionOriginGroupsMembersArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The unique identifier of the member origin
        /// </summary>
        [Input("originId", required: true)]
        public Input<string> OriginId { get; set; } = null!;

        public DistributionOriginGroupsMembersArgs()
        {
        }
    }

    public sealed class DistributionOriginGroupsMembersGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The unique identifier of the member origin
        /// </summary>
        [Input("originId", required: true)]
        public Input<string> OriginId { get; set; } = null!;

        public DistributionOriginGroupsMembersGetArgs()
        {
        }
    }

    public sealed class DistributionOriginsArgs : Pulumi.ResourceArgs
    {
        [Input("customHeaders")]
        private InputList<DistributionOriginsCustomHeadersArgs>? _customHeaders;

        /// <summary>
        /// One or more sub-resources with `name` and
        /// `value` parameters that specify header data that will be sent to the origin
        /// (multiples allowed).
        /// </summary>
        public InputList<DistributionOriginsCustomHeadersArgs> CustomHeaders
        {
            get => _customHeaders ?? (_customHeaders = new InputList<DistributionOriginsCustomHeadersArgs>());
            set => _customHeaders = value;
        }

        /// <summary>
        /// The CloudFront custom
        /// origin configuration information. If an S3
        /// origin is required, use `s3_origin_config` instead.
        /// </summary>
        [Input("customOriginConfig")]
        public Input<DistributionOriginsCustomOriginConfigArgs>? CustomOriginConfig { get; set; }

        /// <summary>
        /// The DNS domain name of either the S3 bucket, or
        /// web site of your custom origin.
        /// </summary>
        [Input("domainName", required: true)]
        public Input<string> DomainName { get; set; } = null!;

        /// <summary>
        /// The unique identifier of the member origin
        /// </summary>
        [Input("originId", required: true)]
        public Input<string> OriginId { get; set; } = null!;

        /// <summary>
        /// An optional element that causes CloudFront to
        /// request your content from a directory in your Amazon S3 bucket or your
        /// custom origin.
        /// </summary>
        [Input("originPath")]
        public Input<string>? OriginPath { get; set; }

        /// <summary>
        /// The CloudFront S3 origin
        /// configuration information. If a custom origin is required, use
        /// `custom_origin_config` instead.
        /// </summary>
        [Input("s3OriginConfig")]
        public Input<DistributionOriginsS3OriginConfigArgs>? S3OriginConfig { get; set; }

        public DistributionOriginsArgs()
        {
        }
    }

    public sealed class DistributionOriginsCustomHeadersArgs : Pulumi.ResourceArgs
    {
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("value", required: true)]
        public Input<string> Value { get; set; } = null!;

        public DistributionOriginsCustomHeadersArgs()
        {
        }
    }

    public sealed class DistributionOriginsCustomHeadersGetArgs : Pulumi.ResourceArgs
    {
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("value", required: true)]
        public Input<string> Value { get; set; } = null!;

        public DistributionOriginsCustomHeadersGetArgs()
        {
        }
    }

    public sealed class DistributionOriginsCustomOriginConfigArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The HTTP port the custom origin listens on.
        /// </summary>
        [Input("httpPort", required: true)]
        public Input<int> HttpPort { get; set; } = null!;

        /// <summary>
        /// The HTTPS port the custom origin listens on.
        /// </summary>
        [Input("httpsPort", required: true)]
        public Input<int> HttpsPort { get; set; } = null!;

        /// <summary>
        /// The Custom KeepAlive timeout, in seconds. By default, AWS enforces a limit of `60`. But you can request an [increase](http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorCustomOrigin.html#request-custom-request-timeout).
        /// </summary>
        [Input("originKeepaliveTimeout")]
        public Input<int>? OriginKeepaliveTimeout { get; set; }

        /// <summary>
        /// The origin protocol policy to apply to
        /// your origin. One of `http-only`, `https-only`, or `match-viewer`.
        /// </summary>
        [Input("originProtocolPolicy", required: true)]
        public Input<string> OriginProtocolPolicy { get; set; } = null!;

        /// <summary>
        /// The Custom Read timeout, in seconds. By default, AWS enforces a limit of `60`. But you can request an [increase](http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorCustomOrigin.html#request-custom-request-timeout).
        /// </summary>
        [Input("originReadTimeout")]
        public Input<int>? OriginReadTimeout { get; set; }

        [Input("originSslProtocols", required: true)]
        private InputList<string>? _originSslProtocols;

        /// <summary>
        /// The SSL/TLS protocols that you want
        /// CloudFront to use when communicating with your origin over HTTPS. A list of
        /// one or more of `SSLv3`, `TLSv1`, `TLSv1.1`, and `TLSv1.2`.
        /// </summary>
        public InputList<string> OriginSslProtocols
        {
            get => _originSslProtocols ?? (_originSslProtocols = new InputList<string>());
            set => _originSslProtocols = value;
        }

        public DistributionOriginsCustomOriginConfigArgs()
        {
        }
    }

    public sealed class DistributionOriginsCustomOriginConfigGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The HTTP port the custom origin listens on.
        /// </summary>
        [Input("httpPort", required: true)]
        public Input<int> HttpPort { get; set; } = null!;

        /// <summary>
        /// The HTTPS port the custom origin listens on.
        /// </summary>
        [Input("httpsPort", required: true)]
        public Input<int> HttpsPort { get; set; } = null!;

        /// <summary>
        /// The Custom KeepAlive timeout, in seconds. By default, AWS enforces a limit of `60`. But you can request an [increase](http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorCustomOrigin.html#request-custom-request-timeout).
        /// </summary>
        [Input("originKeepaliveTimeout")]
        public Input<int>? OriginKeepaliveTimeout { get; set; }

        /// <summary>
        /// The origin protocol policy to apply to
        /// your origin. One of `http-only`, `https-only`, or `match-viewer`.
        /// </summary>
        [Input("originProtocolPolicy", required: true)]
        public Input<string> OriginProtocolPolicy { get; set; } = null!;

        /// <summary>
        /// The Custom Read timeout, in seconds. By default, AWS enforces a limit of `60`. But you can request an [increase](http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorCustomOrigin.html#request-custom-request-timeout).
        /// </summary>
        [Input("originReadTimeout")]
        public Input<int>? OriginReadTimeout { get; set; }

        [Input("originSslProtocols", required: true)]
        private InputList<string>? _originSslProtocols;

        /// <summary>
        /// The SSL/TLS protocols that you want
        /// CloudFront to use when communicating with your origin over HTTPS. A list of
        /// one or more of `SSLv3`, `TLSv1`, `TLSv1.1`, and `TLSv1.2`.
        /// </summary>
        public InputList<string> OriginSslProtocols
        {
            get => _originSslProtocols ?? (_originSslProtocols = new InputList<string>());
            set => _originSslProtocols = value;
        }

        public DistributionOriginsCustomOriginConfigGetArgs()
        {
        }
    }

    public sealed class DistributionOriginsGetArgs : Pulumi.ResourceArgs
    {
        [Input("customHeaders")]
        private InputList<DistributionOriginsCustomHeadersGetArgs>? _customHeaders;

        /// <summary>
        /// One or more sub-resources with `name` and
        /// `value` parameters that specify header data that will be sent to the origin
        /// (multiples allowed).
        /// </summary>
        public InputList<DistributionOriginsCustomHeadersGetArgs> CustomHeaders
        {
            get => _customHeaders ?? (_customHeaders = new InputList<DistributionOriginsCustomHeadersGetArgs>());
            set => _customHeaders = value;
        }

        /// <summary>
        /// The CloudFront custom
        /// origin configuration information. If an S3
        /// origin is required, use `s3_origin_config` instead.
        /// </summary>
        [Input("customOriginConfig")]
        public Input<DistributionOriginsCustomOriginConfigGetArgs>? CustomOriginConfig { get; set; }

        /// <summary>
        /// The DNS domain name of either the S3 bucket, or
        /// web site of your custom origin.
        /// </summary>
        [Input("domainName", required: true)]
        public Input<string> DomainName { get; set; } = null!;

        /// <summary>
        /// The unique identifier of the member origin
        /// </summary>
        [Input("originId", required: true)]
        public Input<string> OriginId { get; set; } = null!;

        /// <summary>
        /// An optional element that causes CloudFront to
        /// request your content from a directory in your Amazon S3 bucket or your
        /// custom origin.
        /// </summary>
        [Input("originPath")]
        public Input<string>? OriginPath { get; set; }

        /// <summary>
        /// The CloudFront S3 origin
        /// configuration information. If a custom origin is required, use
        /// `custom_origin_config` instead.
        /// </summary>
        [Input("s3OriginConfig")]
        public Input<DistributionOriginsS3OriginConfigGetArgs>? S3OriginConfig { get; set; }

        public DistributionOriginsGetArgs()
        {
        }
    }

    public sealed class DistributionOriginsS3OriginConfigArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The [CloudFront origin access
        /// identity][5] to associate with the origin.
        /// </summary>
        [Input("originAccessIdentity", required: true)]
        public Input<string> OriginAccessIdentity { get; set; } = null!;

        public DistributionOriginsS3OriginConfigArgs()
        {
        }
    }

    public sealed class DistributionOriginsS3OriginConfigGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The [CloudFront origin access
        /// identity][5] to associate with the origin.
        /// </summary>
        [Input("originAccessIdentity", required: true)]
        public Input<string> OriginAccessIdentity { get; set; } = null!;

        public DistributionOriginsS3OriginConfigGetArgs()
        {
        }
    }

    public sealed class DistributionRestrictionsArgs : Pulumi.ResourceArgs
    {
        [Input("geoRestriction", required: true)]
        public Input<DistributionRestrictionsGeoRestrictionArgs> GeoRestriction { get; set; } = null!;

        public DistributionRestrictionsArgs()
        {
        }
    }

    public sealed class DistributionRestrictionsGeoRestrictionArgs : Pulumi.ResourceArgs
    {
        [Input("locations")]
        private InputList<string>? _locations;

        /// <summary>
        /// The [ISO 3166-1-alpha-2 codes][4] for which you
        /// want CloudFront either to distribute your content (`whitelist`) or not
        /// distribute your content (`blacklist`).
        /// </summary>
        public InputList<string> Locations
        {
            get => _locations ?? (_locations = new InputList<string>());
            set => _locations = value;
        }

        /// <summary>
        /// The method that you want to use to restrict
        /// distribution of your content by country: `none`, `whitelist`, or
        /// `blacklist`.
        /// </summary>
        [Input("restrictionType", required: true)]
        public Input<string> RestrictionType { get; set; } = null!;

        public DistributionRestrictionsGeoRestrictionArgs()
        {
        }
    }

    public sealed class DistributionRestrictionsGeoRestrictionGetArgs : Pulumi.ResourceArgs
    {
        [Input("locations")]
        private InputList<string>? _locations;

        /// <summary>
        /// The [ISO 3166-1-alpha-2 codes][4] for which you
        /// want CloudFront either to distribute your content (`whitelist`) or not
        /// distribute your content (`blacklist`).
        /// </summary>
        public InputList<string> Locations
        {
            get => _locations ?? (_locations = new InputList<string>());
            set => _locations = value;
        }

        /// <summary>
        /// The method that you want to use to restrict
        /// distribution of your content by country: `none`, `whitelist`, or
        /// `blacklist`.
        /// </summary>
        [Input("restrictionType", required: true)]
        public Input<string> RestrictionType { get; set; } = null!;

        public DistributionRestrictionsGeoRestrictionGetArgs()
        {
        }
    }

    public sealed class DistributionRestrictionsGetArgs : Pulumi.ResourceArgs
    {
        [Input("geoRestriction", required: true)]
        public Input<DistributionRestrictionsGeoRestrictionGetArgs> GeoRestriction { get; set; } = null!;

        public DistributionRestrictionsGetArgs()
        {
        }
    }

    public sealed class DistributionViewerCertificateArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ARN of the [AWS Certificate Manager][6]
        /// certificate that you wish to use with this distribution. Specify this,
        /// `cloudfront_default_certificate`, or `iam_certificate_id`.  The ACM
        /// certificate must be in  US-EAST-1.
        /// </summary>
        [Input("acmCertificateArn")]
        public Input<string>? AcmCertificateArn { get; set; }

        /// <summary>
        /// `true` if you want viewers to use HTTPS
        /// to request your objects and you're using the CloudFront domain name for your
        /// distribution. Specify this, `acm_certificate_arn`, or `iam_certificate_id`.
        /// </summary>
        [Input("cloudfrontDefaultCertificate")]
        public Input<bool>? CloudfrontDefaultCertificate { get; set; }

        /// <summary>
        /// The IAM certificate identifier of the custom viewer
        /// certificate for this distribution if you are using a custom domain. Specify
        /// this, `acm_certificate_arn`, or `cloudfront_default_certificate`.
        /// </summary>
        [Input("iamCertificateId")]
        public Input<string>? IamCertificateId { get; set; }

        /// <summary>
        /// The minimum version of the SSL protocol that
        /// you want CloudFront to use for HTTPS connections. Can only be set if
        /// `cloudfront_default_certificate = false`. One of `SSLv3`, `TLSv1`,
        /// `TLSv1_2016`, `TLSv1.1_2016` or `TLSv1.2_2018`. Default: `TLSv1`. **NOTE**:
        /// If you are using a custom certificate (specified with `acm_certificate_arn`
        /// or `iam_certificate_id`), and have specified `sni-only` in
        /// `ssl_support_method`, `TLSv1` or later must be specified. If you have
        /// specified `vip` in `ssl_support_method`, only `SSLv3` or `TLSv1` can be
        /// specified. If you have specified `cloudfront_default_certificate`, `TLSv1`
        /// must be specified.
        /// </summary>
        [Input("minimumProtocolVersion")]
        public Input<string>? MinimumProtocolVersion { get; set; }

        [Input("sslSupportMethod")]
        public Input<string>? SslSupportMethod { get; set; }

        public DistributionViewerCertificateArgs()
        {
        }
    }

    public sealed class DistributionViewerCertificateGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ARN of the [AWS Certificate Manager][6]
        /// certificate that you wish to use with this distribution. Specify this,
        /// `cloudfront_default_certificate`, or `iam_certificate_id`.  The ACM
        /// certificate must be in  US-EAST-1.
        /// </summary>
        [Input("acmCertificateArn")]
        public Input<string>? AcmCertificateArn { get; set; }

        /// <summary>
        /// `true` if you want viewers to use HTTPS
        /// to request your objects and you're using the CloudFront domain name for your
        /// distribution. Specify this, `acm_certificate_arn`, or `iam_certificate_id`.
        /// </summary>
        [Input("cloudfrontDefaultCertificate")]
        public Input<bool>? CloudfrontDefaultCertificate { get; set; }

        /// <summary>
        /// The IAM certificate identifier of the custom viewer
        /// certificate for this distribution if you are using a custom domain. Specify
        /// this, `acm_certificate_arn`, or `cloudfront_default_certificate`.
        /// </summary>
        [Input("iamCertificateId")]
        public Input<string>? IamCertificateId { get; set; }

        /// <summary>
        /// The minimum version of the SSL protocol that
        /// you want CloudFront to use for HTTPS connections. Can only be set if
        /// `cloudfront_default_certificate = false`. One of `SSLv3`, `TLSv1`,
        /// `TLSv1_2016`, `TLSv1.1_2016` or `TLSv1.2_2018`. Default: `TLSv1`. **NOTE**:
        /// If you are using a custom certificate (specified with `acm_certificate_arn`
        /// or `iam_certificate_id`), and have specified `sni-only` in
        /// `ssl_support_method`, `TLSv1` or later must be specified. If you have
        /// specified `vip` in `ssl_support_method`, only `SSLv3` or `TLSv1` can be
        /// specified. If you have specified `cloudfront_default_certificate`, `TLSv1`
        /// must be specified.
        /// </summary>
        [Input("minimumProtocolVersion")]
        public Input<string>? MinimumProtocolVersion { get; set; }

        [Input("sslSupportMethod")]
        public Input<string>? SslSupportMethod { get; set; }

        public DistributionViewerCertificateGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class DistributionCustomErrorResponses
    {
        /// <summary>
        /// The minimum amount of time you want
        /// HTTP error codes to stay in CloudFront caches before CloudFront queries your
        /// origin to see whether the object has been updated.
        /// </summary>
        public readonly int? ErrorCachingMinTtl;
        /// <summary>
        /// The 4xx or 5xx HTTP status code that you want to
        /// customize.
        /// </summary>
        public readonly int ErrorCode;
        /// <summary>
        /// The HTTP status code that you want CloudFront
        /// to return with the custom error page to the viewer.
        /// </summary>
        public readonly int? ResponseCode;
        /// <summary>
        /// The path of the custom error page (for
        /// example, `/custom_404.html`).
        /// </summary>
        public readonly string? ResponsePagePath;

        [OutputConstructor]
        private DistributionCustomErrorResponses(
            int? errorCachingMinTtl,
            int errorCode,
            int? responseCode,
            string? responsePagePath)
        {
            ErrorCachingMinTtl = errorCachingMinTtl;
            ErrorCode = errorCode;
            ResponseCode = responseCode;
            ResponsePagePath = responsePagePath;
        }
    }

    [OutputType]
    public sealed class DistributionDefaultCacheBehavior
    {
        /// <summary>
        /// Controls which HTTP methods CloudFront
        /// processes and forwards to your Amazon S3 bucket or your custom origin.
        /// </summary>
        public readonly ImmutableArray<string> AllowedMethods;
        /// <summary>
        /// Controls whether CloudFront caches the
        /// response to requests using the specified HTTP methods.
        /// </summary>
        public readonly ImmutableArray<string> CachedMethods;
        /// <summary>
        /// Whether you want CloudFront to automatically
        /// compress content for web requests that include `Accept-Encoding: gzip` in
        /// the request header (default: `false`).
        /// </summary>
        public readonly bool? Compress;
        /// <summary>
        /// The default amount of time (in seconds) that an
        /// object is in a CloudFront cache before CloudFront forwards another request
        /// in the absence of an `Cache-Control max-age` or `Expires` header. Defaults to
        /// 1 day.
        /// </summary>
        public readonly int? DefaultTtl;
        /// <summary>
        /// Field level encryption configuration ID
        /// </summary>
        public readonly string? FieldLevelEncryptionId;
        /// <summary>
        /// The forwarded values configuration that specifies how CloudFront
        /// handles query strings, cookies and headers (maximum one).
        /// </summary>
        public readonly DistributionDefaultCacheBehaviorForwardedValues ForwardedValues;
        /// <summary>
        /// A config block that triggers a lambda function with
        /// specific actions. Defined below, maximum 4.
        /// </summary>
        public readonly ImmutableArray<DistributionDefaultCacheBehaviorLambdaFunctionAssociations> LambdaFunctionAssociations;
        /// <summary>
        /// The maximum amount of time (in seconds) that an
        /// object is in a CloudFront cache before CloudFront forwards another request
        /// to your origin to determine whether the object has been updated. Only
        /// effective in the presence of `Cache-Control max-age`, `Cache-Control
        /// s-maxage`, and `Expires` headers. Defaults to 365 days.
        /// </summary>
        public readonly int? MaxTtl;
        /// <summary>
        /// The minimum amount of time that you want objects to
        /// stay in CloudFront caches before CloudFront queries your origin to see
        /// whether the object has been updated. Defaults to 0 seconds.
        /// </summary>
        public readonly int? MinTtl;
        /// <summary>
        /// Indicates whether you want to distribute
        /// media files in Microsoft Smooth Streaming format using the origin that is
        /// associated with this cache behavior.
        /// </summary>
        public readonly bool? SmoothStreaming;
        /// <summary>
        /// The value of ID for the origin that you want
        /// CloudFront to route requests to when a request matches the path pattern
        /// either for a cache behavior or for the default cache behavior.
        /// </summary>
        public readonly string TargetOriginId;
        /// <summary>
        /// The AWS accounts, if any, that you want to
        /// allow to create signed URLs for private content.
        /// </summary>
        public readonly ImmutableArray<string> TrustedSigners;
        /// <summary>
        /// Use this element to specify the
        /// protocol that users can use to access the files in the origin specified by
        /// TargetOriginId when a request matches the path pattern in PathPattern. One
        /// of `allow-all`, `https-only`, or `redirect-to-https`.
        /// </summary>
        public readonly string ViewerProtocolPolicy;

        [OutputConstructor]
        private DistributionDefaultCacheBehavior(
            ImmutableArray<string> allowedMethods,
            ImmutableArray<string> cachedMethods,
            bool? compress,
            int? defaultTtl,
            string? fieldLevelEncryptionId,
            DistributionDefaultCacheBehaviorForwardedValues forwardedValues,
            ImmutableArray<DistributionDefaultCacheBehaviorLambdaFunctionAssociations> lambdaFunctionAssociations,
            int? maxTtl,
            int? minTtl,
            bool? smoothStreaming,
            string targetOriginId,
            ImmutableArray<string> trustedSigners,
            string viewerProtocolPolicy)
        {
            AllowedMethods = allowedMethods;
            CachedMethods = cachedMethods;
            Compress = compress;
            DefaultTtl = defaultTtl;
            FieldLevelEncryptionId = fieldLevelEncryptionId;
            ForwardedValues = forwardedValues;
            LambdaFunctionAssociations = lambdaFunctionAssociations;
            MaxTtl = maxTtl;
            MinTtl = minTtl;
            SmoothStreaming = smoothStreaming;
            TargetOriginId = targetOriginId;
            TrustedSigners = trustedSigners;
            ViewerProtocolPolicy = viewerProtocolPolicy;
        }
    }

    [OutputType]
    public sealed class DistributionDefaultCacheBehaviorForwardedValues
    {
        /// <summary>
        /// The forwarded values cookies
        /// that specifies how CloudFront handles cookies (maximum one).
        /// </summary>
        public readonly DistributionDefaultCacheBehaviorForwardedValuesCookies Cookies;
        /// <summary>
        /// Specifies the Headers, if any, that you want
        /// CloudFront to vary upon for this cache behavior. Specify `*` to include all
        /// headers.
        /// </summary>
        public readonly ImmutableArray<string> Headers;
        /// <summary>
        /// Indicates whether you want CloudFront to forward
        /// query strings to the origin that is associated with this cache behavior.
        /// </summary>
        public readonly bool QueryString;
        /// <summary>
        /// When specified, along with a value of
        /// `true` for `query_string`, all query strings are forwarded, however only the
        /// query string keys listed in this argument are cached. When omitted with a
        /// value of `true` for `query_string`, all query string keys are cached.
        /// </summary>
        public readonly ImmutableArray<string> QueryStringCacheKeys;

        [OutputConstructor]
        private DistributionDefaultCacheBehaviorForwardedValues(
            DistributionDefaultCacheBehaviorForwardedValuesCookies cookies,
            ImmutableArray<string> headers,
            bool queryString,
            ImmutableArray<string> queryStringCacheKeys)
        {
            Cookies = cookies;
            Headers = headers;
            QueryString = queryString;
            QueryStringCacheKeys = queryStringCacheKeys;
        }
    }

    [OutputType]
    public sealed class DistributionDefaultCacheBehaviorForwardedValuesCookies
    {
        /// <summary>
        /// Specifies whether you want CloudFront to forward
        /// cookies to the origin that is associated with this cache behavior. You can
        /// specify `all`, `none` or `whitelist`. If `whitelist`, you must include the
        /// subsequent `whitelisted_names`
        /// </summary>
        public readonly string Forward;
        /// <summary>
        /// If you have specified `whitelist` to
        /// `forward`, the whitelisted cookies that you want CloudFront to forward to
        /// your origin.
        /// </summary>
        public readonly ImmutableArray<string> WhitelistedNames;

        [OutputConstructor]
        private DistributionDefaultCacheBehaviorForwardedValuesCookies(
            string forward,
            ImmutableArray<string> whitelistedNames)
        {
            Forward = forward;
            WhitelistedNames = whitelistedNames;
        }
    }

    [OutputType]
    public sealed class DistributionDefaultCacheBehaviorLambdaFunctionAssociations
    {
        /// <summary>
        /// The specific event to trigger this function.
        /// Valid values: `viewer-request`, `origin-request`, `viewer-response`,
        /// `origin-response`
        /// </summary>
        public readonly string EventType;
        /// <summary>
        /// When set to true it exposes the request body to the lambda function. Defaults to false. Valid values: `true`, `false`.
        /// </summary>
        public readonly bool? IncludeBody;
        /// <summary>
        /// ARN of the Lambda function.
        /// </summary>
        public readonly string LambdaArn;

        [OutputConstructor]
        private DistributionDefaultCacheBehaviorLambdaFunctionAssociations(
            string eventType,
            bool? includeBody,
            string lambdaArn)
        {
            EventType = eventType;
            IncludeBody = includeBody;
            LambdaArn = lambdaArn;
        }
    }

    [OutputType]
    public sealed class DistributionLoggingConfig
    {
        /// <summary>
        /// The Amazon S3 bucket to store the access logs in, for
        /// example, `myawslogbucket.s3.amazonaws.com`.
        /// </summary>
        public readonly string Bucket;
        /// <summary>
        /// Specifies whether you want CloudFront to
        /// include cookies in access logs (default: `false`).
        /// </summary>
        public readonly bool? IncludeCookies;
        /// <summary>
        /// An optional string that you want CloudFront to prefix
        /// to the access log filenames for this distribution, for example, `myprefix/`.
        /// </summary>
        public readonly string? Prefix;

        [OutputConstructor]
        private DistributionLoggingConfig(
            string bucket,
            bool? includeCookies,
            string? prefix)
        {
            Bucket = bucket;
            IncludeCookies = includeCookies;
            Prefix = prefix;
        }
    }

    [OutputType]
    public sealed class DistributionOrderedCacheBehaviors
    {
        /// <summary>
        /// Controls which HTTP methods CloudFront
        /// processes and forwards to your Amazon S3 bucket or your custom origin.
        /// </summary>
        public readonly ImmutableArray<string> AllowedMethods;
        /// <summary>
        /// Controls whether CloudFront caches the
        /// response to requests using the specified HTTP methods.
        /// </summary>
        public readonly ImmutableArray<string> CachedMethods;
        /// <summary>
        /// Whether you want CloudFront to automatically
        /// compress content for web requests that include `Accept-Encoding: gzip` in
        /// the request header (default: `false`).
        /// </summary>
        public readonly bool? Compress;
        /// <summary>
        /// The default amount of time (in seconds) that an
        /// object is in a CloudFront cache before CloudFront forwards another request
        /// in the absence of an `Cache-Control max-age` or `Expires` header. Defaults to
        /// 1 day.
        /// </summary>
        public readonly int? DefaultTtl;
        /// <summary>
        /// Field level encryption configuration ID
        /// </summary>
        public readonly string? FieldLevelEncryptionId;
        /// <summary>
        /// The forwarded values configuration that specifies how CloudFront
        /// handles query strings, cookies and headers (maximum one).
        /// </summary>
        public readonly DistributionOrderedCacheBehaviorsForwardedValues ForwardedValues;
        /// <summary>
        /// A config block that triggers a lambda function with
        /// specific actions. Defined below, maximum 4.
        /// </summary>
        public readonly ImmutableArray<DistributionOrderedCacheBehaviorsLambdaFunctionAssociations> LambdaFunctionAssociations;
        /// <summary>
        /// The maximum amount of time (in seconds) that an
        /// object is in a CloudFront cache before CloudFront forwards another request
        /// to your origin to determine whether the object has been updated. Only
        /// effective in the presence of `Cache-Control max-age`, `Cache-Control
        /// s-maxage`, and `Expires` headers. Defaults to 365 days.
        /// </summary>
        public readonly int? MaxTtl;
        /// <summary>
        /// The minimum amount of time that you want objects to
        /// stay in CloudFront caches before CloudFront queries your origin to see
        /// whether the object has been updated. Defaults to 0 seconds.
        /// </summary>
        public readonly int? MinTtl;
        /// <summary>
        /// The pattern (for example, `images/*.jpg)` that
        /// specifies which requests you want this cache behavior to apply to.
        /// </summary>
        public readonly string PathPattern;
        /// <summary>
        /// Indicates whether you want to distribute
        /// media files in Microsoft Smooth Streaming format using the origin that is
        /// associated with this cache behavior.
        /// </summary>
        public readonly bool? SmoothStreaming;
        /// <summary>
        /// The value of ID for the origin that you want
        /// CloudFront to route requests to when a request matches the path pattern
        /// either for a cache behavior or for the default cache behavior.
        /// </summary>
        public readonly string TargetOriginId;
        /// <summary>
        /// The AWS accounts, if any, that you want to
        /// allow to create signed URLs for private content.
        /// </summary>
        public readonly ImmutableArray<string> TrustedSigners;
        /// <summary>
        /// Use this element to specify the
        /// protocol that users can use to access the files in the origin specified by
        /// TargetOriginId when a request matches the path pattern in PathPattern. One
        /// of `allow-all`, `https-only`, or `redirect-to-https`.
        /// </summary>
        public readonly string ViewerProtocolPolicy;

        [OutputConstructor]
        private DistributionOrderedCacheBehaviors(
            ImmutableArray<string> allowedMethods,
            ImmutableArray<string> cachedMethods,
            bool? compress,
            int? defaultTtl,
            string? fieldLevelEncryptionId,
            DistributionOrderedCacheBehaviorsForwardedValues forwardedValues,
            ImmutableArray<DistributionOrderedCacheBehaviorsLambdaFunctionAssociations> lambdaFunctionAssociations,
            int? maxTtl,
            int? minTtl,
            string pathPattern,
            bool? smoothStreaming,
            string targetOriginId,
            ImmutableArray<string> trustedSigners,
            string viewerProtocolPolicy)
        {
            AllowedMethods = allowedMethods;
            CachedMethods = cachedMethods;
            Compress = compress;
            DefaultTtl = defaultTtl;
            FieldLevelEncryptionId = fieldLevelEncryptionId;
            ForwardedValues = forwardedValues;
            LambdaFunctionAssociations = lambdaFunctionAssociations;
            MaxTtl = maxTtl;
            MinTtl = minTtl;
            PathPattern = pathPattern;
            SmoothStreaming = smoothStreaming;
            TargetOriginId = targetOriginId;
            TrustedSigners = trustedSigners;
            ViewerProtocolPolicy = viewerProtocolPolicy;
        }
    }

    [OutputType]
    public sealed class DistributionOrderedCacheBehaviorsForwardedValues
    {
        /// <summary>
        /// The forwarded values cookies
        /// that specifies how CloudFront handles cookies (maximum one).
        /// </summary>
        public readonly DistributionOrderedCacheBehaviorsForwardedValuesCookies Cookies;
        /// <summary>
        /// Specifies the Headers, if any, that you want
        /// CloudFront to vary upon for this cache behavior. Specify `*` to include all
        /// headers.
        /// </summary>
        public readonly ImmutableArray<string> Headers;
        /// <summary>
        /// Indicates whether you want CloudFront to forward
        /// query strings to the origin that is associated with this cache behavior.
        /// </summary>
        public readonly bool QueryString;
        /// <summary>
        /// When specified, along with a value of
        /// `true` for `query_string`, all query strings are forwarded, however only the
        /// query string keys listed in this argument are cached. When omitted with a
        /// value of `true` for `query_string`, all query string keys are cached.
        /// </summary>
        public readonly ImmutableArray<string> QueryStringCacheKeys;

        [OutputConstructor]
        private DistributionOrderedCacheBehaviorsForwardedValues(
            DistributionOrderedCacheBehaviorsForwardedValuesCookies cookies,
            ImmutableArray<string> headers,
            bool queryString,
            ImmutableArray<string> queryStringCacheKeys)
        {
            Cookies = cookies;
            Headers = headers;
            QueryString = queryString;
            QueryStringCacheKeys = queryStringCacheKeys;
        }
    }

    [OutputType]
    public sealed class DistributionOrderedCacheBehaviorsForwardedValuesCookies
    {
        /// <summary>
        /// Specifies whether you want CloudFront to forward
        /// cookies to the origin that is associated with this cache behavior. You can
        /// specify `all`, `none` or `whitelist`. If `whitelist`, you must include the
        /// subsequent `whitelisted_names`
        /// </summary>
        public readonly string Forward;
        /// <summary>
        /// If you have specified `whitelist` to
        /// `forward`, the whitelisted cookies that you want CloudFront to forward to
        /// your origin.
        /// </summary>
        public readonly ImmutableArray<string> WhitelistedNames;

        [OutputConstructor]
        private DistributionOrderedCacheBehaviorsForwardedValuesCookies(
            string forward,
            ImmutableArray<string> whitelistedNames)
        {
            Forward = forward;
            WhitelistedNames = whitelistedNames;
        }
    }

    [OutputType]
    public sealed class DistributionOrderedCacheBehaviorsLambdaFunctionAssociations
    {
        /// <summary>
        /// The specific event to trigger this function.
        /// Valid values: `viewer-request`, `origin-request`, `viewer-response`,
        /// `origin-response`
        /// </summary>
        public readonly string EventType;
        /// <summary>
        /// When set to true it exposes the request body to the lambda function. Defaults to false. Valid values: `true`, `false`.
        /// </summary>
        public readonly bool? IncludeBody;
        /// <summary>
        /// ARN of the Lambda function.
        /// </summary>
        public readonly string LambdaArn;

        [OutputConstructor]
        private DistributionOrderedCacheBehaviorsLambdaFunctionAssociations(
            string eventType,
            bool? includeBody,
            string lambdaArn)
        {
            EventType = eventType;
            IncludeBody = includeBody;
            LambdaArn = lambdaArn;
        }
    }

    [OutputType]
    public sealed class DistributionOriginGroups
    {
        /// <summary>
        /// The failover criteria for when to failover to the secondary origin
        /// </summary>
        public readonly DistributionOriginGroupsFailoverCriteria FailoverCriteria;
        /// <summary>
        /// Ordered member configuration blocks assigned to the origin group, where the first member is the primary origin. You must specify two members.
        /// </summary>
        public readonly ImmutableArray<DistributionOriginGroupsMembers> Members;
        /// <summary>
        /// The unique identifier of the member origin
        /// </summary>
        public readonly string OriginId;

        [OutputConstructor]
        private DistributionOriginGroups(
            DistributionOriginGroupsFailoverCriteria failoverCriteria,
            ImmutableArray<DistributionOriginGroupsMembers> members,
            string originId)
        {
            FailoverCriteria = failoverCriteria;
            Members = members;
            OriginId = originId;
        }
    }

    [OutputType]
    public sealed class DistributionOriginGroupsFailoverCriteria
    {
        /// <summary>
        /// A list of HTTP status codes for the origin group
        /// </summary>
        public readonly ImmutableArray<int> StatusCodes;

        [OutputConstructor]
        private DistributionOriginGroupsFailoverCriteria(ImmutableArray<int> statusCodes)
        {
            StatusCodes = statusCodes;
        }
    }

    [OutputType]
    public sealed class DistributionOriginGroupsMembers
    {
        /// <summary>
        /// The unique identifier of the member origin
        /// </summary>
        public readonly string OriginId;

        [OutputConstructor]
        private DistributionOriginGroupsMembers(string originId)
        {
            OriginId = originId;
        }
    }

    [OutputType]
    public sealed class DistributionOrigins
    {
        /// <summary>
        /// One or more sub-resources with `name` and
        /// `value` parameters that specify header data that will be sent to the origin
        /// (multiples allowed).
        /// </summary>
        public readonly ImmutableArray<DistributionOriginsCustomHeaders> CustomHeaders;
        /// <summary>
        /// The CloudFront custom
        /// origin configuration information. If an S3
        /// origin is required, use `s3_origin_config` instead.
        /// </summary>
        public readonly DistributionOriginsCustomOriginConfig? CustomOriginConfig;
        /// <summary>
        /// The DNS domain name of either the S3 bucket, or
        /// web site of your custom origin.
        /// </summary>
        public readonly string DomainName;
        /// <summary>
        /// The unique identifier of the member origin
        /// </summary>
        public readonly string OriginId;
        /// <summary>
        /// An optional element that causes CloudFront to
        /// request your content from a directory in your Amazon S3 bucket or your
        /// custom origin.
        /// </summary>
        public readonly string? OriginPath;
        /// <summary>
        /// The CloudFront S3 origin
        /// configuration information. If a custom origin is required, use
        /// `custom_origin_config` instead.
        /// </summary>
        public readonly DistributionOriginsS3OriginConfig? S3OriginConfig;

        [OutputConstructor]
        private DistributionOrigins(
            ImmutableArray<DistributionOriginsCustomHeaders> customHeaders,
            DistributionOriginsCustomOriginConfig? customOriginConfig,
            string domainName,
            string originId,
            string? originPath,
            DistributionOriginsS3OriginConfig? s3OriginConfig)
        {
            CustomHeaders = customHeaders;
            CustomOriginConfig = customOriginConfig;
            DomainName = domainName;
            OriginId = originId;
            OriginPath = originPath;
            S3OriginConfig = s3OriginConfig;
        }
    }

    [OutputType]
    public sealed class DistributionOriginsCustomHeaders
    {
        public readonly string Name;
        public readonly string Value;

        [OutputConstructor]
        private DistributionOriginsCustomHeaders(
            string name,
            string value)
        {
            Name = name;
            Value = value;
        }
    }

    [OutputType]
    public sealed class DistributionOriginsCustomOriginConfig
    {
        /// <summary>
        /// The HTTP port the custom origin listens on.
        /// </summary>
        public readonly int HttpPort;
        /// <summary>
        /// The HTTPS port the custom origin listens on.
        /// </summary>
        public readonly int HttpsPort;
        /// <summary>
        /// The Custom KeepAlive timeout, in seconds. By default, AWS enforces a limit of `60`. But you can request an [increase](http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorCustomOrigin.html#request-custom-request-timeout).
        /// </summary>
        public readonly int? OriginKeepaliveTimeout;
        /// <summary>
        /// The origin protocol policy to apply to
        /// your origin. One of `http-only`, `https-only`, or `match-viewer`.
        /// </summary>
        public readonly string OriginProtocolPolicy;
        /// <summary>
        /// The Custom Read timeout, in seconds. By default, AWS enforces a limit of `60`. But you can request an [increase](http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/RequestAndResponseBehaviorCustomOrigin.html#request-custom-request-timeout).
        /// </summary>
        public readonly int? OriginReadTimeout;
        /// <summary>
        /// The SSL/TLS protocols that you want
        /// CloudFront to use when communicating with your origin over HTTPS. A list of
        /// one or more of `SSLv3`, `TLSv1`, `TLSv1.1`, and `TLSv1.2`.
        /// </summary>
        public readonly ImmutableArray<string> OriginSslProtocols;

        [OutputConstructor]
        private DistributionOriginsCustomOriginConfig(
            int httpPort,
            int httpsPort,
            int? originKeepaliveTimeout,
            string originProtocolPolicy,
            int? originReadTimeout,
            ImmutableArray<string> originSslProtocols)
        {
            HttpPort = httpPort;
            HttpsPort = httpsPort;
            OriginKeepaliveTimeout = originKeepaliveTimeout;
            OriginProtocolPolicy = originProtocolPolicy;
            OriginReadTimeout = originReadTimeout;
            OriginSslProtocols = originSslProtocols;
        }
    }

    [OutputType]
    public sealed class DistributionOriginsS3OriginConfig
    {
        /// <summary>
        /// The [CloudFront origin access
        /// identity][5] to associate with the origin.
        /// </summary>
        public readonly string OriginAccessIdentity;

        [OutputConstructor]
        private DistributionOriginsS3OriginConfig(string originAccessIdentity)
        {
            OriginAccessIdentity = originAccessIdentity;
        }
    }

    [OutputType]
    public sealed class DistributionRestrictions
    {
        public readonly DistributionRestrictionsGeoRestriction GeoRestriction;

        [OutputConstructor]
        private DistributionRestrictions(DistributionRestrictionsGeoRestriction geoRestriction)
        {
            GeoRestriction = geoRestriction;
        }
    }

    [OutputType]
    public sealed class DistributionRestrictionsGeoRestriction
    {
        /// <summary>
        /// The [ISO 3166-1-alpha-2 codes][4] for which you
        /// want CloudFront either to distribute your content (`whitelist`) or not
        /// distribute your content (`blacklist`).
        /// </summary>
        public readonly ImmutableArray<string> Locations;
        /// <summary>
        /// The method that you want to use to restrict
        /// distribution of your content by country: `none`, `whitelist`, or
        /// `blacklist`.
        /// </summary>
        public readonly string RestrictionType;

        [OutputConstructor]
        private DistributionRestrictionsGeoRestriction(
            ImmutableArray<string> locations,
            string restrictionType)
        {
            Locations = locations;
            RestrictionType = restrictionType;
        }
    }

    [OutputType]
    public sealed class DistributionViewerCertificate
    {
        /// <summary>
        /// The ARN of the [AWS Certificate Manager][6]
        /// certificate that you wish to use with this distribution. Specify this,
        /// `cloudfront_default_certificate`, or `iam_certificate_id`.  The ACM
        /// certificate must be in  US-EAST-1.
        /// </summary>
        public readonly string? AcmCertificateArn;
        /// <summary>
        /// `true` if you want viewers to use HTTPS
        /// to request your objects and you're using the CloudFront domain name for your
        /// distribution. Specify this, `acm_certificate_arn`, or `iam_certificate_id`.
        /// </summary>
        public readonly bool? CloudfrontDefaultCertificate;
        /// <summary>
        /// The IAM certificate identifier of the custom viewer
        /// certificate for this distribution if you are using a custom domain. Specify
        /// this, `acm_certificate_arn`, or `cloudfront_default_certificate`.
        /// </summary>
        public readonly string? IamCertificateId;
        /// <summary>
        /// The minimum version of the SSL protocol that
        /// you want CloudFront to use for HTTPS connections. Can only be set if
        /// `cloudfront_default_certificate = false`. One of `SSLv3`, `TLSv1`,
        /// `TLSv1_2016`, `TLSv1.1_2016` or `TLSv1.2_2018`. Default: `TLSv1`. **NOTE**:
        /// If you are using a custom certificate (specified with `acm_certificate_arn`
        /// or `iam_certificate_id`), and have specified `sni-only` in
        /// `ssl_support_method`, `TLSv1` or later must be specified. If you have
        /// specified `vip` in `ssl_support_method`, only `SSLv3` or `TLSv1` can be
        /// specified. If you have specified `cloudfront_default_certificate`, `TLSv1`
        /// must be specified.
        /// </summary>
        public readonly string? MinimumProtocolVersion;
        public readonly string? SslSupportMethod;

        [OutputConstructor]
        private DistributionViewerCertificate(
            string? acmCertificateArn,
            bool? cloudfrontDefaultCertificate,
            string? iamCertificateId,
            string? minimumProtocolVersion,
            string? sslSupportMethod)
        {
            AcmCertificateArn = acmCertificateArn;
            CloudfrontDefaultCertificate = cloudfrontDefaultCertificate;
            IamCertificateId = iamCertificateId;
            MinimumProtocolVersion = minimumProtocolVersion;
            SslSupportMethod = sslSupportMethod;
        }
    }
    }
}
