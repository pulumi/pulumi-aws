// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.ElastiCache
{
    public static class GetUser
    {
        public static Task<GetUserResult> InvokeAsync(GetUserArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetUserResult>("aws:elasticache/getUser:getUser", args ?? new GetUserArgs(), options.WithDefaults());

        public static Output<GetUserResult> Invoke(GetUserInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetUserResult>("aws:elasticache/getUser:getUser", args ?? new GetUserInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetUserArgs : global::Pulumi.InvokeArgs
    {
        [Input("accessString")]
        public string? AccessString { get; set; }

        [Input("engine")]
        public string? Engine { get; set; }

        [Input("noPasswordRequired")]
        public bool? NoPasswordRequired { get; set; }

        [Input("passwords")]
        private List<string>? _passwords;
        public List<string> Passwords
        {
            get => _passwords ?? (_passwords = new List<string>());
            set => _passwords = value;
        }

        [Input("userId", required: true)]
        public string UserId { get; set; } = null!;

        [Input("userName")]
        public string? UserName { get; set; }

        public GetUserArgs()
        {
        }
        public static new GetUserArgs Empty => new GetUserArgs();
    }

    public sealed class GetUserInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("accessString")]
        public Input<string>? AccessString { get; set; }

        [Input("engine")]
        public Input<string>? Engine { get; set; }

        [Input("noPasswordRequired")]
        public Input<bool>? NoPasswordRequired { get; set; }

        [Input("passwords")]
        private InputList<string>? _passwords;
        public InputList<string> Passwords
        {
            get => _passwords ?? (_passwords = new InputList<string>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableArray.Create<string>());
                _passwords = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        [Input("userId", required: true)]
        public Input<string> UserId { get; set; } = null!;

        [Input("userName")]
        public Input<string>? UserName { get; set; }

        public GetUserInvokeArgs()
        {
        }
        public static new GetUserInvokeArgs Empty => new GetUserInvokeArgs();
    }


    [OutputType]
    public sealed class GetUserResult
    {
        public readonly string? AccessString;
        public readonly string? Engine;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool? NoPasswordRequired;
        public readonly ImmutableArray<string> Passwords;
        public readonly string UserId;
        public readonly string? UserName;

        [OutputConstructor]
        private GetUserResult(
            string? accessString,

            string? engine,

            string id,

            bool? noPasswordRequired,

            ImmutableArray<string> passwords,

            string userId,

            string? userName)
        {
            AccessString = accessString;
            Engine = engine;
            Id = id;
            NoPasswordRequired = noPasswordRequired;
            Passwords = passwords;
            UserId = userId;
            UserName = userName;
        }
    }
}
