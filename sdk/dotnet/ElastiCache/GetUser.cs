// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.ElastiCache
{
    public static class GetUser
    {
        /// <summary>
        /// Use this data source to get information about an ElastiCache User.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const bar = aws.elasticache.getUser({
        ///     userId: "example",
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// bar = aws.elasticache.get_user(user_id="example")
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var bar = Aws.ElastiCache.GetUser.Invoke(new()
        ///     {
        ///         UserId = "example",
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/elasticache"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := elasticache.LookupUser(ctx, &amp;elasticache.LookupUserArgs{
        /// 			UserId: "example",
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.elasticache.ElasticacheFunctions;
        /// import com.pulumi.aws.elasticache.inputs.GetUserArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var bar = ElasticacheFunctions.getUser(GetUserArgs.builder()
        ///             .userId("example")
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   bar:
        ///     fn::invoke:
        ///       Function: aws:elasticache:getUser
        ///       Arguments:
        ///         userId: example
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetUserResult> InvokeAsync(GetUserArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetUserResult>("aws:elasticache/getUser:getUser", args ?? new GetUserArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get information about an ElastiCache User.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const bar = aws.elasticache.getUser({
        ///     userId: "example",
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// bar = aws.elasticache.get_user(user_id="example")
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var bar = Aws.ElastiCache.GetUser.Invoke(new()
        ///     {
        ///         UserId = "example",
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/elasticache"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := elasticache.LookupUser(ctx, &amp;elasticache.LookupUserArgs{
        /// 			UserId: "example",
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.elasticache.ElasticacheFunctions;
        /// import com.pulumi.aws.elasticache.inputs.GetUserArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var bar = ElasticacheFunctions.getUser(GetUserArgs.builder()
        ///             .userId("example")
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   bar:
        ///     fn::invoke:
        ///       Function: aws:elasticache:getUser
        ///       Arguments:
        ///         userId: example
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetUserResult> Invoke(GetUserInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetUserResult>("aws:elasticache/getUser:getUser", args ?? new GetUserInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetUserArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// String for what access a user possesses within the associated ElastiCache replication groups or clusters.
        /// </summary>
        [Input("accessString")]
        public string? AccessString { get; set; }

        [Input("authenticationModes")]
        private List<Inputs.GetUserAuthenticationModeArgs>? _authenticationModes;
        public List<Inputs.GetUserAuthenticationModeArgs> AuthenticationModes
        {
            get => _authenticationModes ?? (_authenticationModes = new List<Inputs.GetUserAuthenticationModeArgs>());
            set => _authenticationModes = value;
        }

        [Input("engine")]
        public string? Engine { get; set; }

        [Input("noPasswordRequired")]
        public bool? NoPasswordRequired { get; set; }

        [Input("passwords")]
        private List<string>? _passwords;
        public List<string> Passwords
        {
            get => _passwords ?? (_passwords = new List<string>());
            set => _passwords = value;
        }

        /// <summary>
        /// Identifier for the user.
        /// </summary>
        [Input("userId", required: true)]
        public string UserId { get; set; } = null!;

        /// <summary>
        /// User name of the user.
        /// </summary>
        [Input("userName")]
        public string? UserName { get; set; }

        public GetUserArgs()
        {
        }
        public static new GetUserArgs Empty => new GetUserArgs();
    }

    public sealed class GetUserInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// String for what access a user possesses within the associated ElastiCache replication groups or clusters.
        /// </summary>
        [Input("accessString")]
        public Input<string>? AccessString { get; set; }

        [Input("authenticationModes")]
        private InputList<Inputs.GetUserAuthenticationModeInputArgs>? _authenticationModes;
        public InputList<Inputs.GetUserAuthenticationModeInputArgs> AuthenticationModes
        {
            get => _authenticationModes ?? (_authenticationModes = new InputList<Inputs.GetUserAuthenticationModeInputArgs>());
            set => _authenticationModes = value;
        }

        [Input("engine")]
        public Input<string>? Engine { get; set; }

        [Input("noPasswordRequired")]
        public Input<bool>? NoPasswordRequired { get; set; }

        [Input("passwords")]
        private InputList<string>? _passwords;
        public InputList<string> Passwords
        {
            get => _passwords ?? (_passwords = new InputList<string>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableArray.Create<string>());
                _passwords = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        /// <summary>
        /// Identifier for the user.
        /// </summary>
        [Input("userId", required: true)]
        public Input<string> UserId { get; set; } = null!;

        /// <summary>
        /// User name of the user.
        /// </summary>
        [Input("userName")]
        public Input<string>? UserName { get; set; }

        public GetUserInvokeArgs()
        {
        }
        public static new GetUserInvokeArgs Empty => new GetUserInvokeArgs();
    }


    [OutputType]
    public sealed class GetUserResult
    {
        /// <summary>
        /// String for what access a user possesses within the associated ElastiCache replication groups or clusters.
        /// </summary>
        public readonly string? AccessString;
        public readonly ImmutableArray<Outputs.GetUserAuthenticationModeResult> AuthenticationModes;
        public readonly string? Engine;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool? NoPasswordRequired;
        public readonly ImmutableArray<string> Passwords;
        /// <summary>
        /// Identifier for the user.
        /// </summary>
        public readonly string UserId;
        /// <summary>
        /// User name of the user.
        /// </summary>
        public readonly string? UserName;

        [OutputConstructor]
        private GetUserResult(
            string? accessString,

            ImmutableArray<Outputs.GetUserAuthenticationModeResult> authenticationModes,

            string? engine,

            string id,

            bool? noPasswordRequired,

            ImmutableArray<string> passwords,

            string userId,

            string? userName)
        {
            AccessString = accessString;
            AuthenticationModes = authenticationModes;
            Engine = engine;
            Id = id;
            NoPasswordRequired = noPasswordRequired;
            Passwords = passwords;
            UserId = userId;
            UserName = userName;
        }
    }
}
