// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi.Utilities;

namespace Pulumi.Aws.ElastiCache
{
    public static class GetUser
    {
        /// <summary>
        /// Use this data source to get information about an Elasticache User.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var bar = Output.Create(Aws.ElastiCache.GetUser.InvokeAsync(new Aws.ElastiCache.GetUserArgs
        ///         {
        ///             UserId = "example",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetUserResult> InvokeAsync(GetUserArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetUserResult>("aws:elasticache/getUser:getUser", args ?? new GetUserArgs(), options.WithVersion());

        /// <summary>
        /// Use this data source to get information about an Elasticache User.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var bar = Output.Create(Aws.ElastiCache.GetUser.InvokeAsync(new Aws.ElastiCache.GetUserArgs
        ///         {
        ///             UserId = "example",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetUserResult> Invoke(GetUserInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetUserResult>("aws:elasticache/getUser:getUser", args ?? new GetUserInvokeArgs(), options.WithVersion());
    }


    public sealed class GetUserArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// A string for what access a user possesses within the associated ElastiCache replication groups or clusters.
        /// </summary>
        [Input("accessString")]
        public string? AccessString { get; set; }

        [Input("engine")]
        public string? Engine { get; set; }

        [Input("noPasswordRequired")]
        public bool? NoPasswordRequired { get; set; }

        [Input("passwords")]
        private List<string>? _passwords;
        public List<string> Passwords
        {
            get => _passwords ?? (_passwords = new List<string>());
            set => _passwords = value;
        }

        /// <summary>
        /// The identifier for the user.
        /// </summary>
        [Input("userId", required: true)]
        public string UserId { get; set; } = null!;

        /// <summary>
        /// The user name of the user.
        /// </summary>
        [Input("userName")]
        public string? UserName { get; set; }

        public GetUserArgs()
        {
        }
    }

    public sealed class GetUserInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// A string for what access a user possesses within the associated ElastiCache replication groups or clusters.
        /// </summary>
        [Input("accessString")]
        public Input<string>? AccessString { get; set; }

        [Input("engine")]
        public Input<string>? Engine { get; set; }

        [Input("noPasswordRequired")]
        public Input<bool>? NoPasswordRequired { get; set; }

        [Input("passwords")]
        private InputList<string>? _passwords;
        public InputList<string> Passwords
        {
            get => _passwords ?? (_passwords = new InputList<string>());
            set => _passwords = value;
        }

        /// <summary>
        /// The identifier for the user.
        /// </summary>
        [Input("userId", required: true)]
        public Input<string> UserId { get; set; } = null!;

        /// <summary>
        /// The user name of the user.
        /// </summary>
        [Input("userName")]
        public Input<string>? UserName { get; set; }

        public GetUserInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetUserResult
    {
        /// <summary>
        /// A string for what access a user possesses within the associated ElastiCache replication groups or clusters.
        /// </summary>
        public readonly string? AccessString;
        public readonly string? Engine;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool? NoPasswordRequired;
        public readonly ImmutableArray<string> Passwords;
        /// <summary>
        /// The identifier for the user.
        /// </summary>
        public readonly string UserId;
        /// <summary>
        /// The user name of the user.
        /// </summary>
        public readonly string? UserName;

        [OutputConstructor]
        private GetUserResult(
            string? accessString,

            string? engine,

            string id,

            bool? noPasswordRequired,

            ImmutableArray<string> passwords,

            string userId,

            string? userName)
        {
            AccessString = accessString;
            Engine = engine;
            Id = id;
            NoPasswordRequired = noPasswordRequired;
            Passwords = passwords;
            UserId = userId;
            UserName = userName;
        }
    }
}
