// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.ElastiCache
{
    /// <summary>
    /// Provides an ElastiCache Cluster resource, which manages either a
    /// [Memcached cluster](https://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/WhatIs.html), a
    /// [single-node Redis instance](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/WhatIs.html), or a
    /// [read replica in a Redis (Cluster Mode Enabled) replication group].
    /// 
    /// For working with Redis (Cluster Mode Enabled) replication groups, see the
    /// `aws.elasticache.ReplicationGroup` resource.
    /// 
    /// &gt; **Note:** When you change an attribute, such as `num_cache_nodes`, by default
    /// it is applied in the next maintenance window. Because of this, this provider may report
    /// a difference in its planning phase because the actual modification has not yet taken
    /// place. You can use the `apply_immediately` flag to instruct the service to apply the
    /// change immediately. Using `apply_immediately` can result in a brief downtime as the server reboots.
    /// See the AWS Documentation on Modifying an ElastiCache Cache Cluster for
    /// [ElastiCache for Memcached](https://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/Clusters.Modify.html) or
    /// [ElastiCache for Redis](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Clusters.Modify.html)
    /// for more information.
    /// 
    /// &gt; **Note:** Any attribute changes that re-create the resource will be applied immediately, regardless of the value of `apply_immediately`.
    /// 
    /// ## Example Usage
    /// ### Memcached Cluster
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.ElastiCache.Cluster("example", new()
    ///     {
    ///         Engine = "memcached",
    ///         NodeType = "cache.m4.large",
    ///         NumCacheNodes = 2,
    ///         ParameterGroupName = "default.memcached1.4",
    ///         Port = 11211,
    ///     });
    /// 
    /// });
    /// ```
    /// ### Redis Instance
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.ElastiCache.Cluster("example", new()
    ///     {
    ///         Engine = "redis",
    ///         EngineVersion = "3.2.10",
    ///         NodeType = "cache.m4.large",
    ///         NumCacheNodes = 1,
    ///         ParameterGroupName = "default.redis3.2",
    ///         Port = 6379,
    ///     });
    /// 
    /// });
    /// ```
    /// ### Redis Cluster Mode Disabled Read Replica Instance
    /// 
    /// These inherit their settings from the replication group.
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var replica = new Aws.ElastiCache.Cluster("replica", new()
    ///     {
    ///         ReplicationGroupId = aws_elasticache_replication_group.Example.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// ### Redis Log Delivery configuration
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var test = new Aws.ElastiCache.Cluster("test", new()
    ///     {
    ///         Engine = "redis",
    ///         NodeType = "cache.t3.micro",
    ///         NumCacheNodes = 1,
    ///         Port = 6379,
    ///         ApplyImmediately = true,
    ///         LogDeliveryConfigurations = new[]
    ///         {
    ///             new Aws.ElastiCache.Inputs.ClusterLogDeliveryConfigurationArgs
    ///             {
    ///                 Destination = aws_cloudwatch_log_group.Example.Name,
    ///                 DestinationType = "cloudwatch-logs",
    ///                 LogFormat = "text",
    ///                 LogType = "slow-log",
    ///             },
    ///             new Aws.ElastiCache.Inputs.ClusterLogDeliveryConfigurationArgs
    ///             {
    ///                 Destination = aws_kinesis_firehose_delivery_stream.Example.Name,
    ///                 DestinationType = "kinesis-firehose",
    ///                 LogFormat = "json",
    ///                 LogType = "engine-log",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import ElastiCache Clusters using the `cluster_id`. For example:
    /// 
    /// ```sh
    ///  $ pulumi import aws:elasticache/cluster:Cluster my_cluster my_cluster
    /// ```
    /// </summary>
    [AwsResourceType("aws:elasticache/cluster:Cluster")]
    public partial class Cluster : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Whether any database modifications are applied immediately, or during the next maintenance window. Default is `false`. See [Amazon ElastiCache Documentation for more information.](https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_ModifyCacheCluster.html).
        /// </summary>
        [Output("applyImmediately")]
        public Output<bool> ApplyImmediately { get; private set; } = null!;

        /// <summary>
        /// The ARN of the created ElastiCache Cluster.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// Specifies whether minor version engine upgrades will be applied automatically to the underlying Cache Cluster instances during the maintenance window.
        /// Only supported for engine type `"redis"` and if the engine version is 6 or higher.
        /// Defaults to `true`.
        /// </summary>
        [Output("autoMinorVersionUpgrade")]
        public Output<string?> AutoMinorVersionUpgrade { get; private set; } = null!;

        /// <summary>
        /// Availability Zone for the cache cluster. If you want to create cache nodes in multi-az, use `preferred_availability_zones` instead. Default: System chosen Availability Zone. Changing this value will re-create the resource.
        /// </summary>
        [Output("availabilityZone")]
        public Output<string> AvailabilityZone { get; private set; } = null!;

        /// <summary>
        /// Whether the nodes in this Memcached node group are created in a single Availability Zone or created across multiple Availability Zones in the cluster's region. Valid values for this parameter are `single-az` or `cross-az`, default is `single-az`. If you want to choose `cross-az`, `num_cache_nodes` must be greater than `1`.
        /// </summary>
        [Output("azMode")]
        public Output<string> AzMode { get; private set; } = null!;

        /// <summary>
        /// List of node objects including `id`, `address`, `port` and `availability_zone`.
        /// </summary>
        [Output("cacheNodes")]
        public Output<ImmutableArray<Outputs.ClusterCacheNode>> CacheNodes { get; private set; } = null!;

        /// <summary>
        /// (Memcached only) DNS name of the cache cluster without the port appended.
        /// </summary>
        [Output("clusterAddress")]
        public Output<string> ClusterAddress { get; private set; } = null!;

        /// <summary>
        /// Group identifier. ElastiCache converts this name to lowercase. Changing this value will re-create the resource.
        /// </summary>
        [Output("clusterId")]
        public Output<string> ClusterId { get; private set; } = null!;

        /// <summary>
        /// (Memcached only) Configuration endpoint to allow host discovery.
        /// </summary>
        [Output("configurationEndpoint")]
        public Output<string> ConfigurationEndpoint { get; private set; } = null!;

        /// <summary>
        /// Name of the cache engine to be used for this cache cluster. Valid values are `memcached` or `redis`.
        /// </summary>
        [Output("engine")]
        public Output<string> Engine { get; private set; } = null!;

        /// <summary>
        /// Version number of the cache engine to be used.
        /// If not set, defaults to the latest version.
        /// See [Describe Cache Engine Versions](https://docs.aws.amazon.com/cli/latest/reference/elasticache/describe-cache-engine-versions.html) in the AWS Documentation for supported versions.
        /// When `engine` is `redis` and the version is 7 or higher, the major and minor version should be set, e.g., `7.2`.
        /// When the version is 6, the major and minor version can be set, e.g., `6.2`,
        /// or the minor version can be unspecified which will use the latest version at creation time, e.g., `6.x`.
        /// Otherwise, specify the full version desired, e.g., `5.0.6`.
        /// The actual engine version used is returned in the attribute `engine_version_actual`, see Attribute Reference below.
        /// </summary>
        [Output("engineVersion")]
        public Output<string> EngineVersion { get; private set; } = null!;

        /// <summary>
        /// Because ElastiCache pulls the latest minor or patch for a version, this attribute returns the running version of the cache engine.
        /// </summary>
        [Output("engineVersionActual")]
        public Output<string> EngineVersionActual { get; private set; } = null!;

        /// <summary>
        /// Name of your final cluster snapshot. If omitted, no final snapshot will be made.
        /// </summary>
        [Output("finalSnapshotIdentifier")]
        public Output<string?> FinalSnapshotIdentifier { get; private set; } = null!;

        /// <summary>
        /// The IP version to advertise in the discovery protocol. Valid values are `ipv4` or `ipv6`.
        /// </summary>
        [Output("ipDiscovery")]
        public Output<string> IpDiscovery { get; private set; } = null!;

        /// <summary>
        /// Specifies the destination and format of Redis [SLOWLOG](https://redis.io/commands/slowlog) or Redis [Engine Log](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Log_Delivery.html#Log_contents-engine-log). See the documentation on [Amazon ElastiCache](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Log_Delivery.html). See Log Delivery Configuration below for more details.
        /// </summary>
        [Output("logDeliveryConfigurations")]
        public Output<ImmutableArray<Outputs.ClusterLogDeliveryConfiguration>> LogDeliveryConfigurations { get; private set; } = null!;

        /// <summary>
        /// Specifies the weekly time range for when maintenance
        /// on the cache cluster is performed. The format is `ddd:hh24:mi-ddd:hh24:mi` (24H Clock UTC).
        /// The minimum maintenance window is a 60 minute period. Example: `sun:05:00-sun:09:00`.
        /// </summary>
        [Output("maintenanceWindow")]
        public Output<string> MaintenanceWindow { get; private set; } = null!;

        /// <summary>
        /// The IP versions for cache cluster connections. IPv6 is supported with Redis engine `6.2` onword or Memcached version `1.6.6` for all [Nitro system](https://aws.amazon.com/ec2/nitro/) instances. Valid values are `ipv4`, `ipv6` or `dual_stack`.
        /// </summary>
        [Output("networkType")]
        public Output<string> NetworkType { get; private set; } = null!;

        /// <summary>
        /// The instance class used. See AWS documentation for information on [supported node types for Redis](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html) and [guidance on selecting node types for Redis](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/nodes-select-size.html). See AWS documentation for information on [supported node types for Memcached](https://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/CacheNodes.SupportedTypes.html) and [guidance on selecting node types for Memcached](https://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/nodes-select-size.html). For Memcached, changing this value will re-create the resource.
        /// </summary>
        [Output("nodeType")]
        public Output<string> NodeType { get; private set; } = null!;

        /// <summary>
        /// ARN of an SNS topic to send ElastiCache notifications to. Example: `arn:aws:sns:us-east-1:012345678999:my_sns_topic`.
        /// </summary>
        [Output("notificationTopicArn")]
        public Output<string?> NotificationTopicArn { get; private set; } = null!;

        /// <summary>
        /// The initial number of cache nodes that the cache cluster will have. For Redis, this value must be 1. For Memcached, this value must be between 1 and 40. If this number is reduced on subsequent runs, the highest numbered nodes will be removed.
        /// </summary>
        [Output("numCacheNodes")]
        public Output<int> NumCacheNodes { get; private set; } = null!;

        /// <summary>
        /// Specify the outpost mode that will apply to the cache cluster creation. Valid values are `"single-outpost"` and `"cross-outpost"`, however AWS currently only supports `"single-outpost"` mode.
        /// </summary>
        [Output("outpostMode")]
        public Output<string?> OutpostMode { get; private set; } = null!;

        /// <summary>
        /// The name of the parameter group to associate with this cache cluster.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Output("parameterGroupName")]
        public Output<string> ParameterGroupName { get; private set; } = null!;

        /// <summary>
        /// The port number on which each of the cache nodes will accept connections. For Memcached the default is 11211, and for Redis the default port is 6379. Cannot be provided with `replication_group_id`. Changing this value will re-create the resource.
        /// </summary>
        [Output("port")]
        public Output<int> Port { get; private set; } = null!;

        /// <summary>
        /// List of the Availability Zones in which cache nodes are created. If you are creating your cluster in an Amazon VPC you can only locate nodes in Availability Zones that are associated with the subnets in the selected subnet group. The number of Availability Zones listed must equal the value of `num_cache_nodes`. If you want all the nodes in the same Availability Zone, use `availability_zone` instead, or repeat the Availability Zone multiple times in the list. Default: System chosen Availability Zones. Detecting drift of existing node availability zone is not currently supported. Updating this argument by itself to migrate existing node availability zones is not currently supported and will show a perpetual difference.
        /// </summary>
        [Output("preferredAvailabilityZones")]
        public Output<ImmutableArray<string>> PreferredAvailabilityZones { get; private set; } = null!;

        /// <summary>
        /// The outpost ARN in which the cache cluster will be created.
        /// </summary>
        [Output("preferredOutpostArn")]
        public Output<string> PreferredOutpostArn { get; private set; } = null!;

        /// <summary>
        /// ID of the replication group to which this cluster should belong. If this parameter is specified, the cluster is added to the specified replication group as a read replica; otherwise, the cluster is a standalone primary that is not part of any replication group.
        /// </summary>
        [Output("replicationGroupId")]
        public Output<string> ReplicationGroupId { get; private set; } = null!;

        /// <summary>
        /// One or more VPC security groups associated with the cache cluster
        /// </summary>
        [Output("securityGroupIds")]
        public Output<ImmutableArray<string>> SecurityGroupIds { get; private set; } = null!;

        /// <summary>
        /// Single-element string list containing an Amazon Resource Name (ARN) of a Redis RDB snapshot file stored in Amazon S3. The object name cannot contain any commas. Changing `snapshot_arns` forces a new resource.
        /// </summary>
        [Output("snapshotArns")]
        public Output<string?> SnapshotArns { get; private set; } = null!;

        /// <summary>
        /// Name of a snapshot from which to restore data into the new node group. Changing `snapshot_name` forces a new resource.
        /// </summary>
        [Output("snapshotName")]
        public Output<string?> SnapshotName { get; private set; } = null!;

        /// <summary>
        /// Number of days for which ElastiCache will retain automatic cache cluster snapshots before deleting them. For example, if you set SnapshotRetentionLimit to 5, then a snapshot that was taken today will be retained for 5 days before being deleted. If the value of SnapshotRetentionLimit is set to zero (0), backups are turned off. Please note that setting a `snapshot_retention_limit` is not supported on cache.t1.micro cache nodes
        /// </summary>
        [Output("snapshotRetentionLimit")]
        public Output<int?> SnapshotRetentionLimit { get; private set; } = null!;

        /// <summary>
        /// Daily time range (in UTC) during which ElastiCache will begin taking a daily snapshot of your cache cluster. Example: 05:00-09:00
        /// </summary>
        [Output("snapshotWindow")]
        public Output<string> SnapshotWindow { get; private set; } = null!;

        /// <summary>
        /// Name of the subnet group to be used for the cache cluster. Changing this value will re-create the resource.
        /// </summary>
        [Output("subnetGroupName")]
        public Output<string> SubnetGroupName { get; private set; } = null!;

        /// <summary>
        /// Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        /// <summary>
        /// Enable encryption in-transit. Supported only with Memcached versions `1.6.12` and later, running in a VPC. See the [ElastiCache in-transit encryption](https://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/in-transit-encryption-mc.html) documentation for more details.
        /// </summary>
        [Output("transitEncryptionEnabled")]
        public Output<bool?> TransitEncryptionEnabled { get; private set; } = null!;


        /// <summary>
        /// Create a Cluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Cluster(string name, ClusterArgs? args = null, CustomResourceOptions? options = null)
            : base("aws:elasticache/cluster:Cluster", name, args ?? new ClusterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Cluster(string name, Input<string> id, ClusterState? state = null, CustomResourceOptions? options = null)
            : base("aws:elasticache/cluster:Cluster", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Cluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Cluster Get(string name, Input<string> id, ClusterState? state = null, CustomResourceOptions? options = null)
        {
            return new Cluster(name, id, state, options);
        }
    }

    public sealed class ClusterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether any database modifications are applied immediately, or during the next maintenance window. Default is `false`. See [Amazon ElastiCache Documentation for more information.](https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_ModifyCacheCluster.html).
        /// </summary>
        [Input("applyImmediately")]
        public Input<bool>? ApplyImmediately { get; set; }

        /// <summary>
        /// Specifies whether minor version engine upgrades will be applied automatically to the underlying Cache Cluster instances during the maintenance window.
        /// Only supported for engine type `"redis"` and if the engine version is 6 or higher.
        /// Defaults to `true`.
        /// </summary>
        [Input("autoMinorVersionUpgrade")]
        public Input<string>? AutoMinorVersionUpgrade { get; set; }

        /// <summary>
        /// Availability Zone for the cache cluster. If you want to create cache nodes in multi-az, use `preferred_availability_zones` instead. Default: System chosen Availability Zone. Changing this value will re-create the resource.
        /// </summary>
        [Input("availabilityZone")]
        public Input<string>? AvailabilityZone { get; set; }

        /// <summary>
        /// Whether the nodes in this Memcached node group are created in a single Availability Zone or created across multiple Availability Zones in the cluster's region. Valid values for this parameter are `single-az` or `cross-az`, default is `single-az`. If you want to choose `cross-az`, `num_cache_nodes` must be greater than `1`.
        /// </summary>
        [Input("azMode")]
        public Input<string>? AzMode { get; set; }

        /// <summary>
        /// Group identifier. ElastiCache converts this name to lowercase. Changing this value will re-create the resource.
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        /// <summary>
        /// Name of the cache engine to be used for this cache cluster. Valid values are `memcached` or `redis`.
        /// </summary>
        [Input("engine")]
        public Input<string>? Engine { get; set; }

        /// <summary>
        /// Version number of the cache engine to be used.
        /// If not set, defaults to the latest version.
        /// See [Describe Cache Engine Versions](https://docs.aws.amazon.com/cli/latest/reference/elasticache/describe-cache-engine-versions.html) in the AWS Documentation for supported versions.
        /// When `engine` is `redis` and the version is 7 or higher, the major and minor version should be set, e.g., `7.2`.
        /// When the version is 6, the major and minor version can be set, e.g., `6.2`,
        /// or the minor version can be unspecified which will use the latest version at creation time, e.g., `6.x`.
        /// Otherwise, specify the full version desired, e.g., `5.0.6`.
        /// The actual engine version used is returned in the attribute `engine_version_actual`, see Attribute Reference below.
        /// </summary>
        [Input("engineVersion")]
        public Input<string>? EngineVersion { get; set; }

        /// <summary>
        /// Name of your final cluster snapshot. If omitted, no final snapshot will be made.
        /// </summary>
        [Input("finalSnapshotIdentifier")]
        public Input<string>? FinalSnapshotIdentifier { get; set; }

        /// <summary>
        /// The IP version to advertise in the discovery protocol. Valid values are `ipv4` or `ipv6`.
        /// </summary>
        [Input("ipDiscovery")]
        public Input<string>? IpDiscovery { get; set; }

        [Input("logDeliveryConfigurations")]
        private InputList<Inputs.ClusterLogDeliveryConfigurationArgs>? _logDeliveryConfigurations;

        /// <summary>
        /// Specifies the destination and format of Redis [SLOWLOG](https://redis.io/commands/slowlog) or Redis [Engine Log](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Log_Delivery.html#Log_contents-engine-log). See the documentation on [Amazon ElastiCache](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Log_Delivery.html). See Log Delivery Configuration below for more details.
        /// </summary>
        public InputList<Inputs.ClusterLogDeliveryConfigurationArgs> LogDeliveryConfigurations
        {
            get => _logDeliveryConfigurations ?? (_logDeliveryConfigurations = new InputList<Inputs.ClusterLogDeliveryConfigurationArgs>());
            set => _logDeliveryConfigurations = value;
        }

        /// <summary>
        /// Specifies the weekly time range for when maintenance
        /// on the cache cluster is performed. The format is `ddd:hh24:mi-ddd:hh24:mi` (24H Clock UTC).
        /// The minimum maintenance window is a 60 minute period. Example: `sun:05:00-sun:09:00`.
        /// </summary>
        [Input("maintenanceWindow")]
        public Input<string>? MaintenanceWindow { get; set; }

        /// <summary>
        /// The IP versions for cache cluster connections. IPv6 is supported with Redis engine `6.2` onword or Memcached version `1.6.6` for all [Nitro system](https://aws.amazon.com/ec2/nitro/) instances. Valid values are `ipv4`, `ipv6` or `dual_stack`.
        /// </summary>
        [Input("networkType")]
        public Input<string>? NetworkType { get; set; }

        /// <summary>
        /// The instance class used. See AWS documentation for information on [supported node types for Redis](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html) and [guidance on selecting node types for Redis](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/nodes-select-size.html). See AWS documentation for information on [supported node types for Memcached](https://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/CacheNodes.SupportedTypes.html) and [guidance on selecting node types for Memcached](https://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/nodes-select-size.html). For Memcached, changing this value will re-create the resource.
        /// </summary>
        [Input("nodeType")]
        public Input<string>? NodeType { get; set; }

        /// <summary>
        /// ARN of an SNS topic to send ElastiCache notifications to. Example: `arn:aws:sns:us-east-1:012345678999:my_sns_topic`.
        /// </summary>
        [Input("notificationTopicArn")]
        public Input<string>? NotificationTopicArn { get; set; }

        /// <summary>
        /// The initial number of cache nodes that the cache cluster will have. For Redis, this value must be 1. For Memcached, this value must be between 1 and 40. If this number is reduced on subsequent runs, the highest numbered nodes will be removed.
        /// </summary>
        [Input("numCacheNodes")]
        public Input<int>? NumCacheNodes { get; set; }

        /// <summary>
        /// Specify the outpost mode that will apply to the cache cluster creation. Valid values are `"single-outpost"` and `"cross-outpost"`, however AWS currently only supports `"single-outpost"` mode.
        /// </summary>
        [Input("outpostMode")]
        public Input<string>? OutpostMode { get; set; }

        /// <summary>
        /// The name of the parameter group to associate with this cache cluster.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("parameterGroupName")]
        public Input<string>? ParameterGroupName { get; set; }

        /// <summary>
        /// The port number on which each of the cache nodes will accept connections. For Memcached the default is 11211, and for Redis the default port is 6379. Cannot be provided with `replication_group_id`. Changing this value will re-create the resource.
        /// </summary>
        [Input("port")]
        public Input<int>? Port { get; set; }

        [Input("preferredAvailabilityZones")]
        private InputList<string>? _preferredAvailabilityZones;

        /// <summary>
        /// List of the Availability Zones in which cache nodes are created. If you are creating your cluster in an Amazon VPC you can only locate nodes in Availability Zones that are associated with the subnets in the selected subnet group. The number of Availability Zones listed must equal the value of `num_cache_nodes`. If you want all the nodes in the same Availability Zone, use `availability_zone` instead, or repeat the Availability Zone multiple times in the list. Default: System chosen Availability Zones. Detecting drift of existing node availability zone is not currently supported. Updating this argument by itself to migrate existing node availability zones is not currently supported and will show a perpetual difference.
        /// </summary>
        public InputList<string> PreferredAvailabilityZones
        {
            get => _preferredAvailabilityZones ?? (_preferredAvailabilityZones = new InputList<string>());
            set => _preferredAvailabilityZones = value;
        }

        /// <summary>
        /// The outpost ARN in which the cache cluster will be created.
        /// </summary>
        [Input("preferredOutpostArn")]
        public Input<string>? PreferredOutpostArn { get; set; }

        /// <summary>
        /// ID of the replication group to which this cluster should belong. If this parameter is specified, the cluster is added to the specified replication group as a read replica; otherwise, the cluster is a standalone primary that is not part of any replication group.
        /// </summary>
        [Input("replicationGroupId")]
        public Input<string>? ReplicationGroupId { get; set; }

        [Input("securityGroupIds")]
        private InputList<string>? _securityGroupIds;

        /// <summary>
        /// One or more VPC security groups associated with the cache cluster
        /// </summary>
        public InputList<string> SecurityGroupIds
        {
            get => _securityGroupIds ?? (_securityGroupIds = new InputList<string>());
            set => _securityGroupIds = value;
        }

        /// <summary>
        /// Single-element string list containing an Amazon Resource Name (ARN) of a Redis RDB snapshot file stored in Amazon S3. The object name cannot contain any commas. Changing `snapshot_arns` forces a new resource.
        /// </summary>
        [Input("snapshotArns")]
        public Input<string>? SnapshotArns { get; set; }

        /// <summary>
        /// Name of a snapshot from which to restore data into the new node group. Changing `snapshot_name` forces a new resource.
        /// </summary>
        [Input("snapshotName")]
        public Input<string>? SnapshotName { get; set; }

        /// <summary>
        /// Number of days for which ElastiCache will retain automatic cache cluster snapshots before deleting them. For example, if you set SnapshotRetentionLimit to 5, then a snapshot that was taken today will be retained for 5 days before being deleted. If the value of SnapshotRetentionLimit is set to zero (0), backups are turned off. Please note that setting a `snapshot_retention_limit` is not supported on cache.t1.micro cache nodes
        /// </summary>
        [Input("snapshotRetentionLimit")]
        public Input<int>? SnapshotRetentionLimit { get; set; }

        /// <summary>
        /// Daily time range (in UTC) during which ElastiCache will begin taking a daily snapshot of your cache cluster. Example: 05:00-09:00
        /// </summary>
        [Input("snapshotWindow")]
        public Input<string>? SnapshotWindow { get; set; }

        /// <summary>
        /// Name of the subnet group to be used for the cache cluster. Changing this value will re-create the resource.
        /// </summary>
        [Input("subnetGroupName")]
        public Input<string>? SubnetGroupName { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Enable encryption in-transit. Supported only with Memcached versions `1.6.12` and later, running in a VPC. See the [ElastiCache in-transit encryption](https://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/in-transit-encryption-mc.html) documentation for more details.
        /// </summary>
        [Input("transitEncryptionEnabled")]
        public Input<bool>? TransitEncryptionEnabled { get; set; }

        public ClusterArgs()
        {
        }
        public static new ClusterArgs Empty => new ClusterArgs();
    }

    public sealed class ClusterState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether any database modifications are applied immediately, or during the next maintenance window. Default is `false`. See [Amazon ElastiCache Documentation for more information.](https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_ModifyCacheCluster.html).
        /// </summary>
        [Input("applyImmediately")]
        public Input<bool>? ApplyImmediately { get; set; }

        /// <summary>
        /// The ARN of the created ElastiCache Cluster.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// Specifies whether minor version engine upgrades will be applied automatically to the underlying Cache Cluster instances during the maintenance window.
        /// Only supported for engine type `"redis"` and if the engine version is 6 or higher.
        /// Defaults to `true`.
        /// </summary>
        [Input("autoMinorVersionUpgrade")]
        public Input<string>? AutoMinorVersionUpgrade { get; set; }

        /// <summary>
        /// Availability Zone for the cache cluster. If you want to create cache nodes in multi-az, use `preferred_availability_zones` instead. Default: System chosen Availability Zone. Changing this value will re-create the resource.
        /// </summary>
        [Input("availabilityZone")]
        public Input<string>? AvailabilityZone { get; set; }

        /// <summary>
        /// Whether the nodes in this Memcached node group are created in a single Availability Zone or created across multiple Availability Zones in the cluster's region. Valid values for this parameter are `single-az` or `cross-az`, default is `single-az`. If you want to choose `cross-az`, `num_cache_nodes` must be greater than `1`.
        /// </summary>
        [Input("azMode")]
        public Input<string>? AzMode { get; set; }

        [Input("cacheNodes")]
        private InputList<Inputs.ClusterCacheNodeGetArgs>? _cacheNodes;

        /// <summary>
        /// List of node objects including `id`, `address`, `port` and `availability_zone`.
        /// </summary>
        public InputList<Inputs.ClusterCacheNodeGetArgs> CacheNodes
        {
            get => _cacheNodes ?? (_cacheNodes = new InputList<Inputs.ClusterCacheNodeGetArgs>());
            set => _cacheNodes = value;
        }

        /// <summary>
        /// (Memcached only) DNS name of the cache cluster without the port appended.
        /// </summary>
        [Input("clusterAddress")]
        public Input<string>? ClusterAddress { get; set; }

        /// <summary>
        /// Group identifier. ElastiCache converts this name to lowercase. Changing this value will re-create the resource.
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        /// <summary>
        /// (Memcached only) Configuration endpoint to allow host discovery.
        /// </summary>
        [Input("configurationEndpoint")]
        public Input<string>? ConfigurationEndpoint { get; set; }

        /// <summary>
        /// Name of the cache engine to be used for this cache cluster. Valid values are `memcached` or `redis`.
        /// </summary>
        [Input("engine")]
        public Input<string>? Engine { get; set; }

        /// <summary>
        /// Version number of the cache engine to be used.
        /// If not set, defaults to the latest version.
        /// See [Describe Cache Engine Versions](https://docs.aws.amazon.com/cli/latest/reference/elasticache/describe-cache-engine-versions.html) in the AWS Documentation for supported versions.
        /// When `engine` is `redis` and the version is 7 or higher, the major and minor version should be set, e.g., `7.2`.
        /// When the version is 6, the major and minor version can be set, e.g., `6.2`,
        /// or the minor version can be unspecified which will use the latest version at creation time, e.g., `6.x`.
        /// Otherwise, specify the full version desired, e.g., `5.0.6`.
        /// The actual engine version used is returned in the attribute `engine_version_actual`, see Attribute Reference below.
        /// </summary>
        [Input("engineVersion")]
        public Input<string>? EngineVersion { get; set; }

        /// <summary>
        /// Because ElastiCache pulls the latest minor or patch for a version, this attribute returns the running version of the cache engine.
        /// </summary>
        [Input("engineVersionActual")]
        public Input<string>? EngineVersionActual { get; set; }

        /// <summary>
        /// Name of your final cluster snapshot. If omitted, no final snapshot will be made.
        /// </summary>
        [Input("finalSnapshotIdentifier")]
        public Input<string>? FinalSnapshotIdentifier { get; set; }

        /// <summary>
        /// The IP version to advertise in the discovery protocol. Valid values are `ipv4` or `ipv6`.
        /// </summary>
        [Input("ipDiscovery")]
        public Input<string>? IpDiscovery { get; set; }

        [Input("logDeliveryConfigurations")]
        private InputList<Inputs.ClusterLogDeliveryConfigurationGetArgs>? _logDeliveryConfigurations;

        /// <summary>
        /// Specifies the destination and format of Redis [SLOWLOG](https://redis.io/commands/slowlog) or Redis [Engine Log](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Log_Delivery.html#Log_contents-engine-log). See the documentation on [Amazon ElastiCache](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Log_Delivery.html). See Log Delivery Configuration below for more details.
        /// </summary>
        public InputList<Inputs.ClusterLogDeliveryConfigurationGetArgs> LogDeliveryConfigurations
        {
            get => _logDeliveryConfigurations ?? (_logDeliveryConfigurations = new InputList<Inputs.ClusterLogDeliveryConfigurationGetArgs>());
            set => _logDeliveryConfigurations = value;
        }

        /// <summary>
        /// Specifies the weekly time range for when maintenance
        /// on the cache cluster is performed. The format is `ddd:hh24:mi-ddd:hh24:mi` (24H Clock UTC).
        /// The minimum maintenance window is a 60 minute period. Example: `sun:05:00-sun:09:00`.
        /// </summary>
        [Input("maintenanceWindow")]
        public Input<string>? MaintenanceWindow { get; set; }

        /// <summary>
        /// The IP versions for cache cluster connections. IPv6 is supported with Redis engine `6.2` onword or Memcached version `1.6.6` for all [Nitro system](https://aws.amazon.com/ec2/nitro/) instances. Valid values are `ipv4`, `ipv6` or `dual_stack`.
        /// </summary>
        [Input("networkType")]
        public Input<string>? NetworkType { get; set; }

        /// <summary>
        /// The instance class used. See AWS documentation for information on [supported node types for Redis](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html) and [guidance on selecting node types for Redis](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/nodes-select-size.html). See AWS documentation for information on [supported node types for Memcached](https://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/CacheNodes.SupportedTypes.html) and [guidance on selecting node types for Memcached](https://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/nodes-select-size.html). For Memcached, changing this value will re-create the resource.
        /// </summary>
        [Input("nodeType")]
        public Input<string>? NodeType { get; set; }

        /// <summary>
        /// ARN of an SNS topic to send ElastiCache notifications to. Example: `arn:aws:sns:us-east-1:012345678999:my_sns_topic`.
        /// </summary>
        [Input("notificationTopicArn")]
        public Input<string>? NotificationTopicArn { get; set; }

        /// <summary>
        /// The initial number of cache nodes that the cache cluster will have. For Redis, this value must be 1. For Memcached, this value must be between 1 and 40. If this number is reduced on subsequent runs, the highest numbered nodes will be removed.
        /// </summary>
        [Input("numCacheNodes")]
        public Input<int>? NumCacheNodes { get; set; }

        /// <summary>
        /// Specify the outpost mode that will apply to the cache cluster creation. Valid values are `"single-outpost"` and `"cross-outpost"`, however AWS currently only supports `"single-outpost"` mode.
        /// </summary>
        [Input("outpostMode")]
        public Input<string>? OutpostMode { get; set; }

        /// <summary>
        /// The name of the parameter group to associate with this cache cluster.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("parameterGroupName")]
        public Input<string>? ParameterGroupName { get; set; }

        /// <summary>
        /// The port number on which each of the cache nodes will accept connections. For Memcached the default is 11211, and for Redis the default port is 6379. Cannot be provided with `replication_group_id`. Changing this value will re-create the resource.
        /// </summary>
        [Input("port")]
        public Input<int>? Port { get; set; }

        [Input("preferredAvailabilityZones")]
        private InputList<string>? _preferredAvailabilityZones;

        /// <summary>
        /// List of the Availability Zones in which cache nodes are created. If you are creating your cluster in an Amazon VPC you can only locate nodes in Availability Zones that are associated with the subnets in the selected subnet group. The number of Availability Zones listed must equal the value of `num_cache_nodes`. If you want all the nodes in the same Availability Zone, use `availability_zone` instead, or repeat the Availability Zone multiple times in the list. Default: System chosen Availability Zones. Detecting drift of existing node availability zone is not currently supported. Updating this argument by itself to migrate existing node availability zones is not currently supported and will show a perpetual difference.
        /// </summary>
        public InputList<string> PreferredAvailabilityZones
        {
            get => _preferredAvailabilityZones ?? (_preferredAvailabilityZones = new InputList<string>());
            set => _preferredAvailabilityZones = value;
        }

        /// <summary>
        /// The outpost ARN in which the cache cluster will be created.
        /// </summary>
        [Input("preferredOutpostArn")]
        public Input<string>? PreferredOutpostArn { get; set; }

        /// <summary>
        /// ID of the replication group to which this cluster should belong. If this parameter is specified, the cluster is added to the specified replication group as a read replica; otherwise, the cluster is a standalone primary that is not part of any replication group.
        /// </summary>
        [Input("replicationGroupId")]
        public Input<string>? ReplicationGroupId { get; set; }

        [Input("securityGroupIds")]
        private InputList<string>? _securityGroupIds;

        /// <summary>
        /// One or more VPC security groups associated with the cache cluster
        /// </summary>
        public InputList<string> SecurityGroupIds
        {
            get => _securityGroupIds ?? (_securityGroupIds = new InputList<string>());
            set => _securityGroupIds = value;
        }

        /// <summary>
        /// Single-element string list containing an Amazon Resource Name (ARN) of a Redis RDB snapshot file stored in Amazon S3. The object name cannot contain any commas. Changing `snapshot_arns` forces a new resource.
        /// </summary>
        [Input("snapshotArns")]
        public Input<string>? SnapshotArns { get; set; }

        /// <summary>
        /// Name of a snapshot from which to restore data into the new node group. Changing `snapshot_name` forces a new resource.
        /// </summary>
        [Input("snapshotName")]
        public Input<string>? SnapshotName { get; set; }

        /// <summary>
        /// Number of days for which ElastiCache will retain automatic cache cluster snapshots before deleting them. For example, if you set SnapshotRetentionLimit to 5, then a snapshot that was taken today will be retained for 5 days before being deleted. If the value of SnapshotRetentionLimit is set to zero (0), backups are turned off. Please note that setting a `snapshot_retention_limit` is not supported on cache.t1.micro cache nodes
        /// </summary>
        [Input("snapshotRetentionLimit")]
        public Input<int>? SnapshotRetentionLimit { get; set; }

        /// <summary>
        /// Daily time range (in UTC) during which ElastiCache will begin taking a daily snapshot of your cache cluster. Example: 05:00-09:00
        /// </summary>
        [Input("snapshotWindow")]
        public Input<string>? SnapshotWindow { get; set; }

        /// <summary>
        /// Name of the subnet group to be used for the cache cluster. Changing this value will re-create the resource.
        /// </summary>
        [Input("subnetGroupName")]
        public Input<string>? SubnetGroupName { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        /// <summary>
        /// Enable encryption in-transit. Supported only with Memcached versions `1.6.12` and later, running in a VPC. See the [ElastiCache in-transit encryption](https://docs.aws.amazon.com/AmazonElastiCache/latest/mem-ug/in-transit-encryption-mc.html) documentation for more details.
        /// </summary>
        [Input("transitEncryptionEnabled")]
        public Input<bool>? TransitEncryptionEnabled { get; set; }

        public ClusterState()
        {
        }
        public static new ClusterState Empty => new ClusterState();
    }
}
