// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CloudFront
{
    /// <summary>
    /// ## Import
    /// 
    /// Using `pulumi import`, import AWS CloudFront KeyValueStore Key Value Pairs using the `key_value_store_arn`. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:cloudfront/keyvaluestoreKeysExclusive:KeyvaluestoreKeysExclusive example arn:aws:cloudfront::111111111111:key-value-store/8562g61f-caba-2845-9d99-b97diwae5d3c
    /// ```
    /// </summary>
    [AwsResourceType("aws:cloudfront/keyvaluestoreKeysExclusive:KeyvaluestoreKeysExclusive")]
    public partial class KeyvaluestoreKeysExclusive : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the Key Value Store.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Output("keyValueStoreArn")]
        public Output<string> KeyValueStoreArn { get; private set; } = null!;

        /// <summary>
        /// A list of all resource key value pairs associated with the KeyValueStore.
        /// See `resource_key_value_pair` below.
        /// </summary>
        [Output("resourceKeyValuePairs")]
        public Output<ImmutableArray<Outputs.KeyvaluestoreKeysExclusiveResourceKeyValuePair>> ResourceKeyValuePairs { get; private set; } = null!;

        /// <summary>
        /// Total size of the Key Value Store in bytes.
        /// </summary>
        [Output("totalSizeInBytes")]
        public Output<int> TotalSizeInBytes { get; private set; } = null!;


        /// <summary>
        /// Create a KeyvaluestoreKeysExclusive resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public KeyvaluestoreKeysExclusive(string name, KeyvaluestoreKeysExclusiveArgs args, CustomResourceOptions? options = null)
            : base("aws:cloudfront/keyvaluestoreKeysExclusive:KeyvaluestoreKeysExclusive", name, args ?? new KeyvaluestoreKeysExclusiveArgs(), MakeResourceOptions(options, ""))
        {
        }

        private KeyvaluestoreKeysExclusive(string name, Input<string> id, KeyvaluestoreKeysExclusiveState? state = null, CustomResourceOptions? options = null)
            : base("aws:cloudfront/keyvaluestoreKeysExclusive:KeyvaluestoreKeysExclusive", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing KeyvaluestoreKeysExclusive resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static KeyvaluestoreKeysExclusive Get(string name, Input<string> id, KeyvaluestoreKeysExclusiveState? state = null, CustomResourceOptions? options = null)
        {
            return new KeyvaluestoreKeysExclusive(name, id, state, options);
        }
    }

    public sealed class KeyvaluestoreKeysExclusiveArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the Key Value Store.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("keyValueStoreArn", required: true)]
        public Input<string> KeyValueStoreArn { get; set; } = null!;

        [Input("resourceKeyValuePairs")]
        private InputList<Inputs.KeyvaluestoreKeysExclusiveResourceKeyValuePairArgs>? _resourceKeyValuePairs;

        /// <summary>
        /// A list of all resource key value pairs associated with the KeyValueStore.
        /// See `resource_key_value_pair` below.
        /// </summary>
        public InputList<Inputs.KeyvaluestoreKeysExclusiveResourceKeyValuePairArgs> ResourceKeyValuePairs
        {
            get => _resourceKeyValuePairs ?? (_resourceKeyValuePairs = new InputList<Inputs.KeyvaluestoreKeysExclusiveResourceKeyValuePairArgs>());
            set => _resourceKeyValuePairs = value;
        }

        public KeyvaluestoreKeysExclusiveArgs()
        {
        }
        public static new KeyvaluestoreKeysExclusiveArgs Empty => new KeyvaluestoreKeysExclusiveArgs();
    }

    public sealed class KeyvaluestoreKeysExclusiveState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the Key Value Store.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("keyValueStoreArn")]
        public Input<string>? KeyValueStoreArn { get; set; }

        [Input("resourceKeyValuePairs")]
        private InputList<Inputs.KeyvaluestoreKeysExclusiveResourceKeyValuePairGetArgs>? _resourceKeyValuePairs;

        /// <summary>
        /// A list of all resource key value pairs associated with the KeyValueStore.
        /// See `resource_key_value_pair` below.
        /// </summary>
        public InputList<Inputs.KeyvaluestoreKeysExclusiveResourceKeyValuePairGetArgs> ResourceKeyValuePairs
        {
            get => _resourceKeyValuePairs ?? (_resourceKeyValuePairs = new InputList<Inputs.KeyvaluestoreKeysExclusiveResourceKeyValuePairGetArgs>());
            set => _resourceKeyValuePairs = value;
        }

        /// <summary>
        /// Total size of the Key Value Store in bytes.
        /// </summary>
        [Input("totalSizeInBytes")]
        public Input<int>? TotalSizeInBytes { get; set; }

        public KeyvaluestoreKeysExclusiveState()
        {
        }
        public static new KeyvaluestoreKeysExclusiveState Empty => new KeyvaluestoreKeysExclusiveState();
    }
}
