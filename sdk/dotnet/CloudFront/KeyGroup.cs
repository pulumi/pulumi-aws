// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CloudFront
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// The following example below creates a CloudFront key group.
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.IO;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var examplePublicKey = new Aws.CloudFront.PublicKey("examplePublicKey", new()
    ///     {
    ///         Comment = "example public key",
    ///         EncodedKey = File.ReadAllText("public_key.pem"),
    ///     });
    /// 
    ///     var exampleKeyGroup = new Aws.CloudFront.KeyGroup("exampleKeyGroup", new()
    ///     {
    ///         Comment = "example key group",
    ///         Items = new[]
    ///         {
    ///             examplePublicKey.Id,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// terraform import {
    /// 
    ///  to = aws_cloudfront_key_group.example
    /// 
    ///  id = "4b4f2r1c-315d-5c2e-f093-216t50jed10f" } Using `pulumi import`, import CloudFront Key Group using the `id`. For exampleconsole % pulumi import aws_cloudfront_key_group.example 4b4f2r1c-315d-5c2e-f093-216t50jed10f
    /// </summary>
    [AwsResourceType("aws:cloudfront/keyGroup:KeyGroup")]
    public partial class KeyGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A comment to describe the key group..
        /// </summary>
        [Output("comment")]
        public Output<string?> Comment { get; private set; } = null!;

        /// <summary>
        /// The identifier for this version of the key group.
        /// </summary>
        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        /// <summary>
        /// A list of the identifiers of the public keys in the key group.
        /// </summary>
        [Output("items")]
        public Output<ImmutableArray<string>> Items { get; private set; } = null!;

        /// <summary>
        /// A name to identify the key group.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a KeyGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public KeyGroup(string name, KeyGroupArgs args, CustomResourceOptions? options = null)
            : base("aws:cloudfront/keyGroup:KeyGroup", name, args ?? new KeyGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private KeyGroup(string name, Input<string> id, KeyGroupState? state = null, CustomResourceOptions? options = null)
            : base("aws:cloudfront/keyGroup:KeyGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing KeyGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static KeyGroup Get(string name, Input<string> id, KeyGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new KeyGroup(name, id, state, options);
        }
    }

    public sealed class KeyGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A comment to describe the key group..
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        [Input("items", required: true)]
        private InputList<string>? _items;

        /// <summary>
        /// A list of the identifiers of the public keys in the key group.
        /// </summary>
        public InputList<string> Items
        {
            get => _items ?? (_items = new InputList<string>());
            set => _items = value;
        }

        /// <summary>
        /// A name to identify the key group.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public KeyGroupArgs()
        {
        }
        public static new KeyGroupArgs Empty => new KeyGroupArgs();
    }

    public sealed class KeyGroupState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A comment to describe the key group..
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// The identifier for this version of the key group.
        /// </summary>
        [Input("etag")]
        public Input<string>? Etag { get; set; }

        [Input("items")]
        private InputList<string>? _items;

        /// <summary>
        /// A list of the identifiers of the public keys in the key group.
        /// </summary>
        public InputList<string> Items
        {
            get => _items ?? (_items = new InputList<string>());
            set => _items = value;
        }

        /// <summary>
        /// A name to identify the key group.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public KeyGroupState()
        {
        }
        public static new KeyGroupState Empty => new KeyGroupState();
    }
}
