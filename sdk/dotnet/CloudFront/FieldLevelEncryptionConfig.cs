// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CloudFront
{
    /// <summary>
    /// Provides a CloudFront Field-level Encryption Config resource.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var test = new Aws.CloudFront.FieldLevelEncryptionConfig("test", new()
    ///     {
    ///         Comment = "test comment",
    ///         ContentTypeProfileConfig = new Aws.CloudFront.Inputs.FieldLevelEncryptionConfigContentTypeProfileConfigArgs
    ///         {
    ///             ForwardWhenContentTypeIsUnknown = true,
    ///             ContentTypeProfiles = new Aws.CloudFront.Inputs.FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesArgs
    ///             {
    ///                 Items = new[]
    ///                 {
    ///                     new Aws.CloudFront.Inputs.FieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemArgs
    ///                     {
    ///                         ContentType = "application/x-www-form-urlencoded",
    ///                         Format = "URLEncoded",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         QueryArgProfileConfig = new Aws.CloudFront.Inputs.FieldLevelEncryptionConfigQueryArgProfileConfigArgs
    ///         {
    ///             ForwardWhenQueryArgProfileIsUnknown = true,
    ///             QueryArgProfiles = new Aws.CloudFront.Inputs.FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesArgs
    ///             {
    ///                 Items = new[]
    ///                 {
    ///                     new Aws.CloudFront.Inputs.FieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemArgs
    ///                     {
    ///                         ProfileId = aws_cloudfront_field_level_encryption_profile.Test.Id,
    ///                         QueryArg = "Arg1",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Cloudfront Field Level Encryption Config can be imported using the `id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import aws:cloudfront/fieldLevelEncryptionConfig:FieldLevelEncryptionConfig config E74FTE3AEXAMPLE
    /// ```
    /// </summary>
    [AwsResourceType("aws:cloudfront/fieldLevelEncryptionConfig:FieldLevelEncryptionConfig")]
    public partial class FieldLevelEncryptionConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Internal value used by CloudFront to allow future updates to the Field Level Encryption Config.
        /// </summary>
        [Output("callerReference")]
        public Output<string> CallerReference { get; private set; } = null!;

        /// <summary>
        /// An optional comment about the Field Level Encryption Config.
        /// </summary>
        [Output("comment")]
        public Output<string?> Comment { get; private set; } = null!;

        /// <summary>
        /// Content Type Profile Config specifies when to forward content if a content type isn't recognized and profiles to use as by default in a request if a query argument doesn't specify a profile to use.
        /// </summary>
        [Output("contentTypeProfileConfig")]
        public Output<Outputs.FieldLevelEncryptionConfigContentTypeProfileConfig> ContentTypeProfileConfig { get; private set; } = null!;

        /// <summary>
        /// The current version of the Field Level Encryption Config. For example: `E2QWRUHAPOMQZL`.
        /// </summary>
        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        /// <summary>
        /// Query Arg Profile Config that specifies when to forward content if a profile isn't found and the profile that can be provided as a query argument in a request.
        /// </summary>
        [Output("queryArgProfileConfig")]
        public Output<Outputs.FieldLevelEncryptionConfigQueryArgProfileConfig> QueryArgProfileConfig { get; private set; } = null!;


        /// <summary>
        /// Create a FieldLevelEncryptionConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FieldLevelEncryptionConfig(string name, FieldLevelEncryptionConfigArgs args, CustomResourceOptions? options = null)
            : base("aws:cloudfront/fieldLevelEncryptionConfig:FieldLevelEncryptionConfig", name, args ?? new FieldLevelEncryptionConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FieldLevelEncryptionConfig(string name, Input<string> id, FieldLevelEncryptionConfigState? state = null, CustomResourceOptions? options = null)
            : base("aws:cloudfront/fieldLevelEncryptionConfig:FieldLevelEncryptionConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FieldLevelEncryptionConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FieldLevelEncryptionConfig Get(string name, Input<string> id, FieldLevelEncryptionConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new FieldLevelEncryptionConfig(name, id, state, options);
        }
    }

    public sealed class FieldLevelEncryptionConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// An optional comment about the Field Level Encryption Config.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// Content Type Profile Config specifies when to forward content if a content type isn't recognized and profiles to use as by default in a request if a query argument doesn't specify a profile to use.
        /// </summary>
        [Input("contentTypeProfileConfig", required: true)]
        public Input<Inputs.FieldLevelEncryptionConfigContentTypeProfileConfigArgs> ContentTypeProfileConfig { get; set; } = null!;

        /// <summary>
        /// Query Arg Profile Config that specifies when to forward content if a profile isn't found and the profile that can be provided as a query argument in a request.
        /// </summary>
        [Input("queryArgProfileConfig", required: true)]
        public Input<Inputs.FieldLevelEncryptionConfigQueryArgProfileConfigArgs> QueryArgProfileConfig { get; set; } = null!;

        public FieldLevelEncryptionConfigArgs()
        {
        }
        public static new FieldLevelEncryptionConfigArgs Empty => new FieldLevelEncryptionConfigArgs();
    }

    public sealed class FieldLevelEncryptionConfigState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Internal value used by CloudFront to allow future updates to the Field Level Encryption Config.
        /// </summary>
        [Input("callerReference")]
        public Input<string>? CallerReference { get; set; }

        /// <summary>
        /// An optional comment about the Field Level Encryption Config.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// Content Type Profile Config specifies when to forward content if a content type isn't recognized and profiles to use as by default in a request if a query argument doesn't specify a profile to use.
        /// </summary>
        [Input("contentTypeProfileConfig")]
        public Input<Inputs.FieldLevelEncryptionConfigContentTypeProfileConfigGetArgs>? ContentTypeProfileConfig { get; set; }

        /// <summary>
        /// The current version of the Field Level Encryption Config. For example: `E2QWRUHAPOMQZL`.
        /// </summary>
        [Input("etag")]
        public Input<string>? Etag { get; set; }

        /// <summary>
        /// Query Arg Profile Config that specifies when to forward content if a profile isn't found and the profile that can be provided as a query argument in a request.
        /// </summary>
        [Input("queryArgProfileConfig")]
        public Input<Inputs.FieldLevelEncryptionConfigQueryArgProfileConfigGetArgs>? QueryArgProfileConfig { get; set; }

        public FieldLevelEncryptionConfigState()
        {
        }
        public static new FieldLevelEncryptionConfigState Empty => new FieldLevelEncryptionConfigState();
    }
}
