// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CloudFront
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// The following example below creates a CloudFront cache policy.
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var example = new Aws.CloudFront.CachePolicy("example", new Aws.CloudFront.CachePolicyArgs
    ///         {
    ///             Comment = "test comment",
    ///             DefaultTtl = 50,
    ///             MaxTtl = 100,
    ///             MinTtl = 1,
    ///             ParametersInCacheKeyAndForwardedToOrigin = new Aws.CloudFront.Inputs.CachePolicyParametersInCacheKeyAndForwardedToOriginArgs
    ///             {
    ///                 CookiesConfig = new Aws.CloudFront.Inputs.CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigArgs
    ///                 {
    ///                     CookieBehavior = "whitelist",
    ///                     Cookies = new Aws.CloudFront.Inputs.CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigCookiesArgs
    ///                     {
    ///                         Items = 
    ///                         {
    ///                             "example",
    ///                         },
    ///                     },
    ///                 },
    ///                 HeadersConfig = new Aws.CloudFront.Inputs.CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigArgs
    ///                 {
    ///                     HeaderBehavior = "whitelist",
    ///                     Headers = new Aws.CloudFront.Inputs.CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigHeadersArgs
    ///                     {
    ///                         Items = 
    ///                         {
    ///                             "example",
    ///                         },
    ///                     },
    ///                 },
    ///                 QueryStringsConfig = new Aws.CloudFront.Inputs.CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigArgs
    ///                 {
    ///                     QueryStringBehavior = "whitelist",
    ///                     QueryStrings = new Aws.CloudFront.Inputs.CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStringsArgs
    ///                     {
    ///                         Items = 
    ///                         {
    ///                             "example",
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// </summary>
    [AwsResourceType("aws:cloudfront/cachePolicy:CachePolicy")]
    public partial class CachePolicy : Pulumi.CustomResource
    {
        /// <summary>
        /// A comment to describe the cache policy.
        /// </summary>
        [Output("comment")]
        public Output<string?> Comment { get; private set; } = null!;

        /// <summary>
        /// The default amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated.
        /// </summary>
        [Output("defaultTtl")]
        public Output<int?> DefaultTtl { get; private set; } = null!;

        /// <summary>
        /// The current version of the cache policy.
        /// </summary>
        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        /// <summary>
        /// The maximum amount of time, in seconds, that objects stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated.
        /// </summary>
        [Output("maxTtl")]
        public Output<int?> MaxTtl { get; private set; } = null!;

        /// <summary>
        /// The minimum amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated.
        /// </summary>
        [Output("minTtl")]
        public Output<int?> MinTtl { get; private set; } = null!;

        /// <summary>
        /// A unique name to identify the cache policy.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The HTTP headers, cookies, and URL query strings to include in the cache key. See Parameters In Cache Key And Forwarded To Origin for more information.
        /// </summary>
        [Output("parametersInCacheKeyAndForwardedToOrigin")]
        public Output<Outputs.CachePolicyParametersInCacheKeyAndForwardedToOrigin?> ParametersInCacheKeyAndForwardedToOrigin { get; private set; } = null!;


        /// <summary>
        /// Create a CachePolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CachePolicy(string name, CachePolicyArgs? args = null, CustomResourceOptions? options = null)
            : base("aws:cloudfront/cachePolicy:CachePolicy", name, args ?? new CachePolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CachePolicy(string name, Input<string> id, CachePolicyState? state = null, CustomResourceOptions? options = null)
            : base("aws:cloudfront/cachePolicy:CachePolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CachePolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CachePolicy Get(string name, Input<string> id, CachePolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new CachePolicy(name, id, state, options);
        }
    }

    public sealed class CachePolicyArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// A comment to describe the cache policy.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// The default amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated.
        /// </summary>
        [Input("defaultTtl")]
        public Input<int>? DefaultTtl { get; set; }

        /// <summary>
        /// The current version of the cache policy.
        /// </summary>
        [Input("etag")]
        public Input<string>? Etag { get; set; }

        /// <summary>
        /// The maximum amount of time, in seconds, that objects stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated.
        /// </summary>
        [Input("maxTtl")]
        public Input<int>? MaxTtl { get; set; }

        /// <summary>
        /// The minimum amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated.
        /// </summary>
        [Input("minTtl")]
        public Input<int>? MinTtl { get; set; }

        /// <summary>
        /// A unique name to identify the cache policy.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The HTTP headers, cookies, and URL query strings to include in the cache key. See Parameters In Cache Key And Forwarded To Origin for more information.
        /// </summary>
        [Input("parametersInCacheKeyAndForwardedToOrigin")]
        public Input<Inputs.CachePolicyParametersInCacheKeyAndForwardedToOriginArgs>? ParametersInCacheKeyAndForwardedToOrigin { get; set; }

        public CachePolicyArgs()
        {
        }
    }

    public sealed class CachePolicyState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// A comment to describe the cache policy.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// The default amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated.
        /// </summary>
        [Input("defaultTtl")]
        public Input<int>? DefaultTtl { get; set; }

        /// <summary>
        /// The current version of the cache policy.
        /// </summary>
        [Input("etag")]
        public Input<string>? Etag { get; set; }

        /// <summary>
        /// The maximum amount of time, in seconds, that objects stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated.
        /// </summary>
        [Input("maxTtl")]
        public Input<int>? MaxTtl { get; set; }

        /// <summary>
        /// The minimum amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated.
        /// </summary>
        [Input("minTtl")]
        public Input<int>? MinTtl { get; set; }

        /// <summary>
        /// A unique name to identify the cache policy.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The HTTP headers, cookies, and URL query strings to include in the cache key. See Parameters In Cache Key And Forwarded To Origin for more information.
        /// </summary>
        [Input("parametersInCacheKeyAndForwardedToOrigin")]
        public Input<Inputs.CachePolicyParametersInCacheKeyAndForwardedToOriginGetArgs>? ParametersInCacheKeyAndForwardedToOrigin { get; set; }

        public CachePolicyState()
        {
        }
    }
}
