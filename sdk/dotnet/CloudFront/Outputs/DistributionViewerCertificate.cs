// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CloudFront.Outputs
{

    [OutputType]
    public sealed class DistributionViewerCertificate
    {
        /// <summary>
        /// ARN of the [AWS Certificate Manager](https://aws.amazon.com/certificate-manager/) certificate that you wish to use with this distribution. Specify this, `CloudfrontDefaultCertificate`, or `IamCertificateId`.  The ACM certificate must be in  US-EAST-1.
        /// </summary>
        public readonly string? AcmCertificateArn;
        /// <summary>
        /// `True` if you want viewers to use HTTPS to request your objects and you're using the CloudFront domain name for your distribution. Specify this, `AcmCertificateArn`, or `IamCertificateId`.
        /// </summary>
        public readonly bool? CloudfrontDefaultCertificate;
        /// <summary>
        /// IAM certificate identifier of the custom viewer certificate for this distribution if you are using a custom domain. Specify this, `AcmCertificateArn`, or `CloudfrontDefaultCertificate`.
        /// </summary>
        public readonly string? IamCertificateId;
        /// <summary>
        /// Minimum version of the SSL protocol that you want CloudFront to use for HTTPS connections. Can only be set if `CloudfrontDefaultCertificate = false`. See all possible values in [this](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html) table under "Security policy." Some examples include: `TLSv1.2_2019` and `TLSv1.2_2021`. Default: `TLSv1`. **NOTE**: If you are using a custom certificate (specified with `AcmCertificateArn` or `IamCertificateId`), and have specified `sni-only` in `SslSupportMethod`, `TLSv1` or later must be specified. If you have specified `Vip` in `SslSupportMethod`, only `SSLv3` or `TLSv1` can be specified. If you have specified `CloudfrontDefaultCertificate`, `TLSv1` must be specified.
        /// </summary>
        public readonly string? MinimumProtocolVersion;
        /// <summary>
        /// How you want CloudFront to serve HTTPS requests. One of `Vip`, `sni-only`, or `static-ip`. Required if you specify `AcmCertificateArn` or `IamCertificateId`. **NOTE:** `Vip` causes CloudFront to use a dedicated IP address and may incur extra charges.
        /// </summary>
        public readonly string? SslSupportMethod;

        [OutputConstructor]
        private DistributionViewerCertificate(
            string? acmCertificateArn,

            bool? cloudfrontDefaultCertificate,

            string? iamCertificateId,

            string? minimumProtocolVersion,

            string? sslSupportMethod)
        {
            AcmCertificateArn = acmCertificateArn;
            CloudfrontDefaultCertificate = cloudfrontDefaultCertificate;
            IamCertificateId = iamCertificateId;
            MinimumProtocolVersion = minimumProtocolVersion;
            SslSupportMethod = sslSupportMethod;
        }
    }
}
