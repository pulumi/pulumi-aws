// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Glue
{
    /// <summary>
    /// Provides a Glue Data Quality Ruleset Resource. You can refer to the [Glue Developer Guide](https://docs.aws.amazon.com/glue/latest/dg/glue-data-quality.html) for a full explanation of the Glue Data Quality Ruleset functionality
    /// 
    /// ## Example Usage
    /// ### Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Glue.DataQualityRuleset("example", new()
    ///     {
    ///         Ruleset = "Rules = [Completeness \"colA\" between 0.4 and 0.8]",
    ///     });
    /// 
    /// });
    /// ```
    /// ### With description
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Glue.DataQualityRuleset("example", new()
    ///     {
    ///         Description = "example",
    ///         Ruleset = "Rules = [Completeness \"colA\" between 0.4 and 0.8]",
    ///     });
    /// 
    /// });
    /// ```
    /// ### With tags
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Glue.DataQualityRuleset("example", new()
    ///     {
    ///         Ruleset = "Rules = [Completeness \"colA\" between 0.4 and 0.8]",
    ///         Tags = 
    ///         {
    ///             { "hello", "world" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### With target_table
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Glue.DataQualityRuleset("example", new()
    ///     {
    ///         Ruleset = "Rules = [Completeness \"colA\" between 0.4 and 0.8]",
    ///         TargetTable = new Aws.Glue.Inputs.DataQualityRulesetTargetTableArgs
    ///         {
    ///             DatabaseName = aws_glue_catalog_database.Example.Name,
    ///             TableName = aws_glue_catalog_table.Example.Name,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// terraform import {
    /// 
    ///  to = aws_glue_data_quality_ruleset.example
    /// 
    ///  id = "exampleName" } Using `pulumi import`, import Glue Data Quality Ruleset using the `name`. For exampleconsole % pulumi import aws_glue_data_quality_ruleset.example exampleName
    /// </summary>
    [AwsResourceType("aws:glue/dataQualityRuleset:DataQualityRuleset")]
    public partial class DataQualityRuleset : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ARN of the Glue Data Quality Ruleset.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// The time and date that this data quality ruleset was created.
        /// </summary>
        [Output("createdOn")]
        public Output<string> CreatedOn { get; private set; } = null!;

        /// <summary>
        /// Description of the data quality ruleset.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The time and date that this data quality ruleset was created.
        /// </summary>
        [Output("lastModifiedOn")]
        public Output<string> LastModifiedOn { get; private set; } = null!;

        /// <summary>
        /// Name of the data quality ruleset.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// When a ruleset was created from a recommendation run, this run ID is generated to link the two together.
        /// </summary>
        [Output("recommendationRunId")]
        public Output<string> RecommendationRunId { get; private set; } = null!;

        /// <summary>
        /// A Data Quality Definition Language (DQDL) ruleset. For more information, see the AWS Glue developer guide.
        /// </summary>
        [Output("ruleset")]
        public Output<string> Ruleset { get; private set; } = null!;

        /// <summary>
        /// Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        /// <summary>
        /// A Configuration block specifying a target table associated with the data quality ruleset. See `target_table` below.
        /// </summary>
        [Output("targetTable")]
        public Output<Outputs.DataQualityRulesetTargetTable?> TargetTable { get; private set; } = null!;


        /// <summary>
        /// Create a DataQualityRuleset resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DataQualityRuleset(string name, DataQualityRulesetArgs args, CustomResourceOptions? options = null)
            : base("aws:glue/dataQualityRuleset:DataQualityRuleset", name, args ?? new DataQualityRulesetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DataQualityRuleset(string name, Input<string> id, DataQualityRulesetState? state = null, CustomResourceOptions? options = null)
            : base("aws:glue/dataQualityRuleset:DataQualityRuleset", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DataQualityRuleset resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DataQualityRuleset Get(string name, Input<string> id, DataQualityRulesetState? state = null, CustomResourceOptions? options = null)
        {
            return new DataQualityRuleset(name, id, state, options);
        }
    }

    public sealed class DataQualityRulesetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description of the data quality ruleset.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Name of the data quality ruleset.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A Data Quality Definition Language (DQDL) ruleset. For more information, see the AWS Glue developer guide.
        /// </summary>
        [Input("ruleset", required: true)]
        public Input<string> Ruleset { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// A Configuration block specifying a target table associated with the data quality ruleset. See `target_table` below.
        /// </summary>
        [Input("targetTable")]
        public Input<Inputs.DataQualityRulesetTargetTableArgs>? TargetTable { get; set; }

        public DataQualityRulesetArgs()
        {
        }
        public static new DataQualityRulesetArgs Empty => new DataQualityRulesetArgs();
    }

    public sealed class DataQualityRulesetState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ARN of the Glue Data Quality Ruleset.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// The time and date that this data quality ruleset was created.
        /// </summary>
        [Input("createdOn")]
        public Input<string>? CreatedOn { get; set; }

        /// <summary>
        /// Description of the data quality ruleset.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The time and date that this data quality ruleset was created.
        /// </summary>
        [Input("lastModifiedOn")]
        public Input<string>? LastModifiedOn { get; set; }

        /// <summary>
        /// Name of the data quality ruleset.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// When a ruleset was created from a recommendation run, this run ID is generated to link the two together.
        /// </summary>
        [Input("recommendationRunId")]
        public Input<string>? RecommendationRunId { get; set; }

        /// <summary>
        /// A Data Quality Definition Language (DQDL) ruleset. For more information, see the AWS Glue developer guide.
        /// </summary>
        [Input("ruleset")]
        public Input<string>? Ruleset { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        /// <summary>
        /// A Configuration block specifying a target table associated with the data quality ruleset. See `target_table` below.
        /// </summary>
        [Input("targetTable")]
        public Input<Inputs.DataQualityRulesetTargetTableGetArgs>? TargetTable { get; set; }

        public DataQualityRulesetState()
        {
        }
        public static new DataQualityRulesetState Empty => new DataQualityRulesetState();
    }
}
