// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Glue
{
    /// <summary>
    /// Provides a Glue resource policy. Only one can exist per region.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var currentCallerIdentity = Output.Create(Aws.GetCallerIdentity.InvokeAsync());
    ///         var currentPartition = Output.Create(Aws.GetPartition.InvokeAsync());
    ///         var currentRegion = Output.Create(Aws.GetRegion.InvokeAsync());
    ///         var glue_example_policy = Output.Tuple(currentPartition, currentRegion, currentCallerIdentity).Apply(values =&gt;
    ///         {
    ///             var currentPartition = values.Item1;
    ///             var currentRegion = values.Item2;
    ///             var currentCallerIdentity = values.Item3;
    ///             return Output.Create(Aws.Iam.GetPolicyDocument.InvokeAsync(new Aws.Iam.GetPolicyDocumentArgs
    ///             {
    ///                 Statements = 
    ///                 {
    ///                     new Aws.Iam.Inputs.GetPolicyDocumentStatementArgs
    ///                     {
    ///                         Actions = 
    ///                         {
    ///                             "glue:CreateTable",
    ///                         },
    ///                         Resources = 
    ///                         {
    ///                             $"arn:{currentPartition.Partition}:glue:{currentRegion.Name}:{currentCallerIdentity.AccountId}:*",
    ///                         },
    ///                         Principals = 
    ///                         {
    ///                             new Aws.Iam.Inputs.GetPolicyDocumentStatementPrincipalArgs
    ///                             {
    ///                                 Identifiers = 
    ///                                 {
    ///                                     "*",
    ///                                 },
    ///                                 Type = "AWS",
    ///                             },
    ///                         },
    ///                     },
    ///                 },
    ///             }));
    ///         });
    ///         var example = new Aws.Glue.ResourcePolicy("example", new Aws.Glue.ResourcePolicyArgs
    ///         {
    ///             Policy = glue_example_policy.Apply(glue_example_policy =&gt; glue_example_policy.Json),
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// Glue Resource Policy can be imported using the account ID
    /// 
    /// ```sh
    ///  $ pulumi import aws:glue/resourcePolicy:ResourcePolicy Test 12356789012
    /// ```
    /// </summary>
    public partial class ResourcePolicy : Pulumi.CustomResource
    {
        /// <summary>
        /// The policy to be applied to the aws glue data catalog.
        /// </summary>
        [Output("policy")]
        public Output<string> Policy { get; private set; } = null!;


        /// <summary>
        /// Create a ResourcePolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ResourcePolicy(string name, ResourcePolicyArgs args, CustomResourceOptions? options = null)
            : base("aws:glue/resourcePolicy:ResourcePolicy", name, args ?? new ResourcePolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ResourcePolicy(string name, Input<string> id, ResourcePolicyState? state = null, CustomResourceOptions? options = null)
            : base("aws:glue/resourcePolicy:ResourcePolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ResourcePolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ResourcePolicy Get(string name, Input<string> id, ResourcePolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new ResourcePolicy(name, id, state, options);
        }
    }

    public sealed class ResourcePolicyArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The policy to be applied to the aws glue data catalog.
        /// </summary>
        [Input("policy", required: true)]
        public Input<string> Policy { get; set; } = null!;

        public ResourcePolicyArgs()
        {
        }
    }

    public sealed class ResourcePolicyState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The policy to be applied to the aws glue data catalog.
        /// </summary>
        [Input("policy")]
        public Input<string>? Policy { get; set; }

        public ResourcePolicyState()
        {
        }
    }
}
