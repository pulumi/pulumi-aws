// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Glue
{
    /// <summary>
    /// Provides a Glue Development Endpoint resource.
    /// 
    /// ## Example Usage
    /// 
    /// Basic usage:
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var examplePolicyDocument = Output.Create(Aws.Iam.GetPolicyDocument.InvokeAsync(new Aws.Iam.GetPolicyDocumentArgs
    ///         {
    ///             Statements = 
    ///             {
    ///                 new Aws.Iam.Inputs.GetPolicyDocumentStatementArgs
    ///                 {
    ///                     Actions = 
    ///                     {
    ///                         "sts:AssumeRole",
    ///                     },
    ///                     Principals = 
    ///                     {
    ///                         new Aws.Iam.Inputs.GetPolicyDocumentStatementPrincipalArgs
    ///                         {
    ///                             Type = "Service",
    ///                             Identifiers = 
    ///                             {
    ///                                 "glue.amazonaws.com",
    ///                             },
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///         }));
    ///         var exampleRole = new Aws.Iam.Role("exampleRole", new Aws.Iam.RoleArgs
    ///         {
    ///             AssumeRolePolicy = examplePolicyDocument.Apply(examplePolicyDocument =&gt; examplePolicyDocument.Json),
    ///         });
    ///         var exampleDevEndpoint = new Aws.Glue.DevEndpoint("exampleDevEndpoint", new Aws.Glue.DevEndpointArgs
    ///         {
    ///             RoleArn = exampleRole.Arn,
    ///         });
    ///         var example_AWSGlueServiceRole = new Aws.Iam.RolePolicyAttachment("example-AWSGlueServiceRole", new Aws.Iam.RolePolicyAttachmentArgs
    ///         {
    ///             PolicyArn = "arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole",
    ///             Role = exampleRole.Name,
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// A Glue Development Endpoint can be imported using the `name`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import aws:glue/devEndpoint:DevEndpoint example foo
    /// ```
    /// </summary>
    public partial class DevEndpoint : Pulumi.CustomResource
    {
        /// <summary>
        /// A map of arguments used to configure the endpoint.
        /// </summary>
        [Output("arguments")]
        public Output<ImmutableDictionary<string, object>?> Arguments { get; private set; } = null!;

        /// <summary>
        /// The ARN of the endpoint.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// The AWS availability zone where this endpoint is located.
        /// </summary>
        [Output("availabilityZone")]
        public Output<string> AvailabilityZone { get; private set; } = null!;

        /// <summary>
        /// Path to one or more Java Jars in an S3 bucket that should be loaded in this endpoint.
        /// </summary>
        [Output("extraJarsS3Path")]
        public Output<string?> ExtraJarsS3Path { get; private set; } = null!;

        /// <summary>
        /// Path(s) to one or more Python libraries in an S3 bucket that should be loaded in this endpoint. Multiple values must be complete paths separated by a comma.
        /// </summary>
        [Output("extraPythonLibsS3Path")]
        public Output<string?> ExtraPythonLibsS3Path { get; private set; } = null!;

        /// <summary>
        /// The reason for a current failure in this endpoint.
        /// </summary>
        [Output("failureReason")]
        public Output<string> FailureReason { get; private set; } = null!;

        /// <summary>
        /// -  Specifies the versions of Python and Apache Spark to use. Defaults to AWS Glue version 0.9.
        /// </summary>
        [Output("glueVersion")]
        public Output<string?> GlueVersion { get; private set; } = null!;

        /// <summary>
        /// The name of this endpoint. It must be unique in your account.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The number of AWS Glue Data Processing Units (DPUs) to allocate to this endpoint. Conflicts with `worker_type`.
        /// </summary>
        [Output("numberOfNodes")]
        public Output<int?> NumberOfNodes { get; private set; } = null!;

        /// <summary>
        /// The number of workers of a defined worker type that are allocated to this endpoint. This field is available only when you choose worker type G.1X or G.2X.
        /// </summary>
        [Output("numberOfWorkers")]
        public Output<int?> NumberOfWorkers { get; private set; } = null!;

        /// <summary>
        /// A private IP address to access the endpoint within a VPC, if this endpoint is created within one.
        /// </summary>
        [Output("privateAddress")]
        public Output<string> PrivateAddress { get; private set; } = null!;

        /// <summary>
        /// The public IP address used by this endpoint. The PublicAddress field is present only when you create a non-VPC endpoint.
        /// </summary>
        [Output("publicAddress")]
        public Output<string> PublicAddress { get; private set; } = null!;

        /// <summary>
        /// The public key to be used by this endpoint for authentication.
        /// </summary>
        [Output("publicKey")]
        public Output<string?> PublicKey { get; private set; } = null!;

        /// <summary>
        /// A list of public keys to be used by this endpoint for authentication.
        /// </summary>
        [Output("publicKeys")]
        public Output<ImmutableArray<string>> PublicKeys { get; private set; } = null!;

        /// <summary>
        /// The IAM role for this endpoint.
        /// </summary>
        [Output("roleArn")]
        public Output<string> RoleArn { get; private set; } = null!;

        /// <summary>
        /// The name of the Security Configuration structure to be used with this endpoint.
        /// </summary>
        [Output("securityConfiguration")]
        public Output<string?> SecurityConfiguration { get; private set; } = null!;

        /// <summary>
        /// Security group IDs for the security groups to be used by this endpoint.
        /// </summary>
        [Output("securityGroupIds")]
        public Output<ImmutableArray<string>> SecurityGroupIds { get; private set; } = null!;

        /// <summary>
        /// The current status of this endpoint.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The subnet ID for the new endpoint to use.
        /// </summary>
        [Output("subnetId")]
        public Output<string?> SubnetId { get; private set; } = null!;

        /// <summary>
        /// Key-value map of resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// he ID of the VPC used by this endpoint.
        /// </summary>
        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;

        /// <summary>
        /// The type of predefined worker that is allocated to this endpoint. Accepts a value of Standard, G.1X, or G.2X.
        /// </summary>
        [Output("workerType")]
        public Output<string?> WorkerType { get; private set; } = null!;

        /// <summary>
        /// The YARN endpoint address used by this endpoint.
        /// </summary>
        [Output("yarnEndpointAddress")]
        public Output<string> YarnEndpointAddress { get; private set; } = null!;

        /// <summary>
        /// The Apache Zeppelin port for the remote Apache Spark interpreter.
        /// </summary>
        [Output("zeppelinRemoteSparkInterpreterPort")]
        public Output<int> ZeppelinRemoteSparkInterpreterPort { get; private set; } = null!;


        /// <summary>
        /// Create a DevEndpoint resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DevEndpoint(string name, DevEndpointArgs args, CustomResourceOptions? options = null)
            : base("aws:glue/devEndpoint:DevEndpoint", name, args ?? new DevEndpointArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DevEndpoint(string name, Input<string> id, DevEndpointState? state = null, CustomResourceOptions? options = null)
            : base("aws:glue/devEndpoint:DevEndpoint", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DevEndpoint resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DevEndpoint Get(string name, Input<string> id, DevEndpointState? state = null, CustomResourceOptions? options = null)
        {
            return new DevEndpoint(name, id, state, options);
        }
    }

    public sealed class DevEndpointArgs : Pulumi.ResourceArgs
    {
        [Input("arguments")]
        private InputMap<object>? _arguments;

        /// <summary>
        /// A map of arguments used to configure the endpoint.
        /// </summary>
        public InputMap<object> Arguments
        {
            get => _arguments ?? (_arguments = new InputMap<object>());
            set => _arguments = value;
        }

        /// <summary>
        /// Path to one or more Java Jars in an S3 bucket that should be loaded in this endpoint.
        /// </summary>
        [Input("extraJarsS3Path")]
        public Input<string>? ExtraJarsS3Path { get; set; }

        /// <summary>
        /// Path(s) to one or more Python libraries in an S3 bucket that should be loaded in this endpoint. Multiple values must be complete paths separated by a comma.
        /// </summary>
        [Input("extraPythonLibsS3Path")]
        public Input<string>? ExtraPythonLibsS3Path { get; set; }

        /// <summary>
        /// -  Specifies the versions of Python and Apache Spark to use. Defaults to AWS Glue version 0.9.
        /// </summary>
        [Input("glueVersion")]
        public Input<string>? GlueVersion { get; set; }

        /// <summary>
        /// The name of this endpoint. It must be unique in your account.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The number of AWS Glue Data Processing Units (DPUs) to allocate to this endpoint. Conflicts with `worker_type`.
        /// </summary>
        [Input("numberOfNodes")]
        public Input<int>? NumberOfNodes { get; set; }

        /// <summary>
        /// The number of workers of a defined worker type that are allocated to this endpoint. This field is available only when you choose worker type G.1X or G.2X.
        /// </summary>
        [Input("numberOfWorkers")]
        public Input<int>? NumberOfWorkers { get; set; }

        /// <summary>
        /// The public key to be used by this endpoint for authentication.
        /// </summary>
        [Input("publicKey")]
        public Input<string>? PublicKey { get; set; }

        [Input("publicKeys")]
        private InputList<string>? _publicKeys;

        /// <summary>
        /// A list of public keys to be used by this endpoint for authentication.
        /// </summary>
        public InputList<string> PublicKeys
        {
            get => _publicKeys ?? (_publicKeys = new InputList<string>());
            set => _publicKeys = value;
        }

        /// <summary>
        /// The IAM role for this endpoint.
        /// </summary>
        [Input("roleArn", required: true)]
        public Input<string> RoleArn { get; set; } = null!;

        /// <summary>
        /// The name of the Security Configuration structure to be used with this endpoint.
        /// </summary>
        [Input("securityConfiguration")]
        public Input<string>? SecurityConfiguration { get; set; }

        [Input("securityGroupIds")]
        private InputList<string>? _securityGroupIds;

        /// <summary>
        /// Security group IDs for the security groups to be used by this endpoint.
        /// </summary>
        public InputList<string> SecurityGroupIds
        {
            get => _securityGroupIds ?? (_securityGroupIds = new InputList<string>());
            set => _securityGroupIds = value;
        }

        /// <summary>
        /// The subnet ID for the new endpoint to use.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value map of resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The type of predefined worker that is allocated to this endpoint. Accepts a value of Standard, G.1X, or G.2X.
        /// </summary>
        [Input("workerType")]
        public Input<string>? WorkerType { get; set; }

        public DevEndpointArgs()
        {
        }
    }

    public sealed class DevEndpointState : Pulumi.ResourceArgs
    {
        [Input("arguments")]
        private InputMap<object>? _arguments;

        /// <summary>
        /// A map of arguments used to configure the endpoint.
        /// </summary>
        public InputMap<object> Arguments
        {
            get => _arguments ?? (_arguments = new InputMap<object>());
            set => _arguments = value;
        }

        /// <summary>
        /// The ARN of the endpoint.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// The AWS availability zone where this endpoint is located.
        /// </summary>
        [Input("availabilityZone")]
        public Input<string>? AvailabilityZone { get; set; }

        /// <summary>
        /// Path to one or more Java Jars in an S3 bucket that should be loaded in this endpoint.
        /// </summary>
        [Input("extraJarsS3Path")]
        public Input<string>? ExtraJarsS3Path { get; set; }

        /// <summary>
        /// Path(s) to one or more Python libraries in an S3 bucket that should be loaded in this endpoint. Multiple values must be complete paths separated by a comma.
        /// </summary>
        [Input("extraPythonLibsS3Path")]
        public Input<string>? ExtraPythonLibsS3Path { get; set; }

        /// <summary>
        /// The reason for a current failure in this endpoint.
        /// </summary>
        [Input("failureReason")]
        public Input<string>? FailureReason { get; set; }

        /// <summary>
        /// -  Specifies the versions of Python and Apache Spark to use. Defaults to AWS Glue version 0.9.
        /// </summary>
        [Input("glueVersion")]
        public Input<string>? GlueVersion { get; set; }

        /// <summary>
        /// The name of this endpoint. It must be unique in your account.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The number of AWS Glue Data Processing Units (DPUs) to allocate to this endpoint. Conflicts with `worker_type`.
        /// </summary>
        [Input("numberOfNodes")]
        public Input<int>? NumberOfNodes { get; set; }

        /// <summary>
        /// The number of workers of a defined worker type that are allocated to this endpoint. This field is available only when you choose worker type G.1X or G.2X.
        /// </summary>
        [Input("numberOfWorkers")]
        public Input<int>? NumberOfWorkers { get; set; }

        /// <summary>
        /// A private IP address to access the endpoint within a VPC, if this endpoint is created within one.
        /// </summary>
        [Input("privateAddress")]
        public Input<string>? PrivateAddress { get; set; }

        /// <summary>
        /// The public IP address used by this endpoint. The PublicAddress field is present only when you create a non-VPC endpoint.
        /// </summary>
        [Input("publicAddress")]
        public Input<string>? PublicAddress { get; set; }

        /// <summary>
        /// The public key to be used by this endpoint for authentication.
        /// </summary>
        [Input("publicKey")]
        public Input<string>? PublicKey { get; set; }

        [Input("publicKeys")]
        private InputList<string>? _publicKeys;

        /// <summary>
        /// A list of public keys to be used by this endpoint for authentication.
        /// </summary>
        public InputList<string> PublicKeys
        {
            get => _publicKeys ?? (_publicKeys = new InputList<string>());
            set => _publicKeys = value;
        }

        /// <summary>
        /// The IAM role for this endpoint.
        /// </summary>
        [Input("roleArn")]
        public Input<string>? RoleArn { get; set; }

        /// <summary>
        /// The name of the Security Configuration structure to be used with this endpoint.
        /// </summary>
        [Input("securityConfiguration")]
        public Input<string>? SecurityConfiguration { get; set; }

        [Input("securityGroupIds")]
        private InputList<string>? _securityGroupIds;

        /// <summary>
        /// Security group IDs for the security groups to be used by this endpoint.
        /// </summary>
        public InputList<string> SecurityGroupIds
        {
            get => _securityGroupIds ?? (_securityGroupIds = new InputList<string>());
            set => _securityGroupIds = value;
        }

        /// <summary>
        /// The current status of this endpoint.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The subnet ID for the new endpoint to use.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value map of resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// he ID of the VPC used by this endpoint.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        /// <summary>
        /// The type of predefined worker that is allocated to this endpoint. Accepts a value of Standard, G.1X, or G.2X.
        /// </summary>
        [Input("workerType")]
        public Input<string>? WorkerType { get; set; }

        /// <summary>
        /// The YARN endpoint address used by this endpoint.
        /// </summary>
        [Input("yarnEndpointAddress")]
        public Input<string>? YarnEndpointAddress { get; set; }

        /// <summary>
        /// The Apache Zeppelin port for the remote Apache Spark interpreter.
        /// </summary>
        [Input("zeppelinRemoteSparkInterpreterPort")]
        public Input<int>? ZeppelinRemoteSparkInterpreterPort { get; set; }

        public DevEndpointState()
        {
        }
    }
}
