// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Glue.Outputs
{

    [OutputType]
    public sealed class CatalogTableStorageDescriptor
    {
        public readonly ImmutableArray<string> BucketColumns;
        public readonly ImmutableArray<Outputs.CatalogTableStorageDescriptorColumn> Columns;
        public readonly bool? Compressed;
        public readonly string? InputFormat;
        public readonly string? Location;
        public readonly int? NumberOfBuckets;
        public readonly string? OutputFormat;
        public readonly ImmutableDictionary<string, string>? Parameters;
        public readonly Outputs.CatalogTableStorageDescriptorSchemaReference? SchemaReference;
        public readonly Outputs.CatalogTableStorageDescriptorSerDeInfo? SerDeInfo;
        public readonly Outputs.CatalogTableStorageDescriptorSkewedInfo? SkewedInfo;
        public readonly ImmutableArray<Outputs.CatalogTableStorageDescriptorSortColumn> SortColumns;
        public readonly bool? StoredAsSubDirectories;

        [OutputConstructor]
        private CatalogTableStorageDescriptor(
            ImmutableArray<string> bucketColumns,

            ImmutableArray<Outputs.CatalogTableStorageDescriptorColumn> columns,

            bool? compressed,

            string? inputFormat,

            string? location,

            int? numberOfBuckets,

            string? outputFormat,

            ImmutableDictionary<string, string>? parameters,

            Outputs.CatalogTableStorageDescriptorSchemaReference? schemaReference,

            Outputs.CatalogTableStorageDescriptorSerDeInfo? serDeInfo,

            Outputs.CatalogTableStorageDescriptorSkewedInfo? skewedInfo,

            ImmutableArray<Outputs.CatalogTableStorageDescriptorSortColumn> sortColumns,

            bool? storedAsSubDirectories)
        {
            BucketColumns = bucketColumns;
            Columns = columns;
            Compressed = compressed;
            InputFormat = inputFormat;
            Location = location;
            NumberOfBuckets = numberOfBuckets;
            OutputFormat = outputFormat;
            Parameters = parameters;
            SchemaReference = schemaReference;
            SerDeInfo = serDeInfo;
            SkewedInfo = skewedInfo;
            SortColumns = sortColumns;
            StoredAsSubDirectories = storedAsSubDirectories;
        }
    }
}
