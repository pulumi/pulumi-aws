// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Glue
{
    /// <summary>
    /// Provides a Glue Partition Resource.
    /// 
    /// ## Import
    /// 
    /// Glue Partitions can be imported with their catalog ID (usually AWS account ID), database name, table name and partition values e.g.
    /// 
    /// ```sh
    ///  $ pulumi import aws:glue/partition:Partition part 123456789012:MyDatabase:MyTable:val1#val2
    /// ```
    /// </summary>
    public partial class Partition : Pulumi.CustomResource
    {
        /// <summary>
        /// ID of the Glue Catalog and database to create the table in. If omitted, this defaults to the AWS Account ID plus the database name.
        /// </summary>
        [Output("catalogId")]
        public Output<string> CatalogId { get; private set; } = null!;

        /// <summary>
        /// The time at which the partition was created.
        /// </summary>
        [Output("creationTime")]
        public Output<string> CreationTime { get; private set; } = null!;

        /// <summary>
        /// Name of the metadata database where the table metadata resides. For Hive compatibility, this must be all lowercase.
        /// </summary>
        [Output("databaseName")]
        public Output<string> DatabaseName { get; private set; } = null!;

        /// <summary>
        /// The last time at which the partition was accessed.
        /// </summary>
        [Output("lastAccessedTime")]
        public Output<string> LastAccessedTime { get; private set; } = null!;

        /// <summary>
        /// The last time at which column statistics were computed for this partition.
        /// </summary>
        [Output("lastAnalyzedTime")]
        public Output<string> LastAnalyzedTime { get; private set; } = null!;

        /// <summary>
        /// A map of initialization parameters for the SerDe, in key-value form.
        /// </summary>
        [Output("parameters")]
        public Output<ImmutableDictionary<string, string>?> Parameters { get; private set; } = null!;

        /// <summary>
        /// The values that define the partition.
        /// </summary>
        [Output("partitionValues")]
        public Output<ImmutableArray<string>> PartitionValues { get; private set; } = null!;

        /// <summary>
        /// A storage descriptor object containing information about the physical storage of this table. You can refer to the [Glue Developer Guide](https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-catalog-tables.html#aws-glue-api-catalog-tables-StorageDescriptor) for a full explanation of this object.
        /// </summary>
        [Output("storageDescriptor")]
        public Output<Outputs.PartitionStorageDescriptor?> StorageDescriptor { get; private set; } = null!;

        [Output("tableName")]
        public Output<string> TableName { get; private set; } = null!;


        /// <summary>
        /// Create a Partition resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Partition(string name, PartitionArgs args, CustomResourceOptions? options = null)
            : base("aws:glue/partition:Partition", name, args ?? new PartitionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Partition(string name, Input<string> id, PartitionState? state = null, CustomResourceOptions? options = null)
            : base("aws:glue/partition:Partition", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Partition resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Partition Get(string name, Input<string> id, PartitionState? state = null, CustomResourceOptions? options = null)
        {
            return new Partition(name, id, state, options);
        }
    }

    public sealed class PartitionArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// ID of the Glue Catalog and database to create the table in. If omitted, this defaults to the AWS Account ID plus the database name.
        /// </summary>
        [Input("catalogId")]
        public Input<string>? CatalogId { get; set; }

        /// <summary>
        /// Name of the metadata database where the table metadata resides. For Hive compatibility, this must be all lowercase.
        /// </summary>
        [Input("databaseName", required: true)]
        public Input<string> DatabaseName { get; set; } = null!;

        [Input("parameters")]
        private InputMap<string>? _parameters;

        /// <summary>
        /// A map of initialization parameters for the SerDe, in key-value form.
        /// </summary>
        public InputMap<string> Parameters
        {
            get => _parameters ?? (_parameters = new InputMap<string>());
            set => _parameters = value;
        }

        [Input("partitionValues", required: true)]
        private InputList<string>? _partitionValues;

        /// <summary>
        /// The values that define the partition.
        /// </summary>
        public InputList<string> PartitionValues
        {
            get => _partitionValues ?? (_partitionValues = new InputList<string>());
            set => _partitionValues = value;
        }

        /// <summary>
        /// A storage descriptor object containing information about the physical storage of this table. You can refer to the [Glue Developer Guide](https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-catalog-tables.html#aws-glue-api-catalog-tables-StorageDescriptor) for a full explanation of this object.
        /// </summary>
        [Input("storageDescriptor")]
        public Input<Inputs.PartitionStorageDescriptorArgs>? StorageDescriptor { get; set; }

        [Input("tableName", required: true)]
        public Input<string> TableName { get; set; } = null!;

        public PartitionArgs()
        {
        }
    }

    public sealed class PartitionState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// ID of the Glue Catalog and database to create the table in. If omitted, this defaults to the AWS Account ID plus the database name.
        /// </summary>
        [Input("catalogId")]
        public Input<string>? CatalogId { get; set; }

        /// <summary>
        /// The time at which the partition was created.
        /// </summary>
        [Input("creationTime")]
        public Input<string>? CreationTime { get; set; }

        /// <summary>
        /// Name of the metadata database where the table metadata resides. For Hive compatibility, this must be all lowercase.
        /// </summary>
        [Input("databaseName")]
        public Input<string>? DatabaseName { get; set; }

        /// <summary>
        /// The last time at which the partition was accessed.
        /// </summary>
        [Input("lastAccessedTime")]
        public Input<string>? LastAccessedTime { get; set; }

        /// <summary>
        /// The last time at which column statistics were computed for this partition.
        /// </summary>
        [Input("lastAnalyzedTime")]
        public Input<string>? LastAnalyzedTime { get; set; }

        [Input("parameters")]
        private InputMap<string>? _parameters;

        /// <summary>
        /// A map of initialization parameters for the SerDe, in key-value form.
        /// </summary>
        public InputMap<string> Parameters
        {
            get => _parameters ?? (_parameters = new InputMap<string>());
            set => _parameters = value;
        }

        [Input("partitionValues")]
        private InputList<string>? _partitionValues;

        /// <summary>
        /// The values that define the partition.
        /// </summary>
        public InputList<string> PartitionValues
        {
            get => _partitionValues ?? (_partitionValues = new InputList<string>());
            set => _partitionValues = value;
        }

        /// <summary>
        /// A storage descriptor object containing information about the physical storage of this table. You can refer to the [Glue Developer Guide](https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-catalog-tables.html#aws-glue-api-catalog-tables-StorageDescriptor) for a full explanation of this object.
        /// </summary>
        [Input("storageDescriptor")]
        public Input<Inputs.PartitionStorageDescriptorGetArgs>? StorageDescriptor { get; set; }

        [Input("tableName")]
        public Input<string>? TableName { get; set; }

        public PartitionState()
        {
        }
    }
}
