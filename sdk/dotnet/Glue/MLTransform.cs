// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Glue
{
    [AwsResourceType("aws:glue/mLTransform:MLTransform")]
    public partial class MLTransform : global::Pulumi.CustomResource
    {
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("glueVersion")]
        public Output<string> GlueVersion { get; private set; } = null!;

        [Output("inputRecordTables")]
        public Output<ImmutableArray<Outputs.MLTransformInputRecordTable>> InputRecordTables { get; private set; } = null!;

        [Output("labelCount")]
        public Output<int> LabelCount { get; private set; } = null!;

        [Output("maxCapacity")]
        public Output<double> MaxCapacity { get; private set; } = null!;

        [Output("maxRetries")]
        public Output<int?> MaxRetries { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("numberOfWorkers")]
        public Output<int?> NumberOfWorkers { get; private set; } = null!;

        [Output("parameters")]
        public Output<Outputs.MLTransformParameters> Parameters { get; private set; } = null!;

        [Output("roleArn")]
        public Output<string> RoleArn { get; private set; } = null!;

        [Output("schemas")]
        public Output<ImmutableArray<Outputs.MLTransformSchema>> Schemas { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("timeout")]
        public Output<int?> Timeout { get; private set; } = null!;

        [Output("workerType")]
        public Output<string?> WorkerType { get; private set; } = null!;


        /// <summary>
        /// Create a MLTransform resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MLTransform(string name, MLTransformArgs args, CustomResourceOptions? options = null)
            : base("aws:glue/mLTransform:MLTransform", name, args ?? new MLTransformArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MLTransform(string name, Input<string> id, MLTransformState? state = null, CustomResourceOptions? options = null)
            : base("aws:glue/mLTransform:MLTransform", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MLTransform resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MLTransform Get(string name, Input<string> id, MLTransformState? state = null, CustomResourceOptions? options = null)
        {
            return new MLTransform(name, id, state, options);
        }
    }

    public sealed class MLTransformArgs : global::Pulumi.ResourceArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("glueVersion")]
        public Input<string>? GlueVersion { get; set; }

        [Input("inputRecordTables", required: true)]
        private InputList<Inputs.MLTransformInputRecordTableArgs>? _inputRecordTables;
        public InputList<Inputs.MLTransformInputRecordTableArgs> InputRecordTables
        {
            get => _inputRecordTables ?? (_inputRecordTables = new InputList<Inputs.MLTransformInputRecordTableArgs>());
            set => _inputRecordTables = value;
        }

        [Input("maxCapacity")]
        public Input<double>? MaxCapacity { get; set; }

        [Input("maxRetries")]
        public Input<int>? MaxRetries { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("numberOfWorkers")]
        public Input<int>? NumberOfWorkers { get; set; }

        [Input("parameters", required: true)]
        public Input<Inputs.MLTransformParametersArgs> Parameters { get; set; } = null!;

        [Input("roleArn", required: true)]
        public Input<string> RoleArn { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("timeout")]
        public Input<int>? Timeout { get; set; }

        [Input("workerType")]
        public Input<string>? WorkerType { get; set; }

        public MLTransformArgs()
        {
        }
        public static new MLTransformArgs Empty => new MLTransformArgs();
    }

    public sealed class MLTransformState : global::Pulumi.ResourceArgs
    {
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("glueVersion")]
        public Input<string>? GlueVersion { get; set; }

        [Input("inputRecordTables")]
        private InputList<Inputs.MLTransformInputRecordTableGetArgs>? _inputRecordTables;
        public InputList<Inputs.MLTransformInputRecordTableGetArgs> InputRecordTables
        {
            get => _inputRecordTables ?? (_inputRecordTables = new InputList<Inputs.MLTransformInputRecordTableGetArgs>());
            set => _inputRecordTables = value;
        }

        [Input("labelCount")]
        public Input<int>? LabelCount { get; set; }

        [Input("maxCapacity")]
        public Input<double>? MaxCapacity { get; set; }

        [Input("maxRetries")]
        public Input<int>? MaxRetries { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("numberOfWorkers")]
        public Input<int>? NumberOfWorkers { get; set; }

        [Input("parameters")]
        public Input<Inputs.MLTransformParametersGetArgs>? Parameters { get; set; }

        [Input("roleArn")]
        public Input<string>? RoleArn { get; set; }

        [Input("schemas")]
        private InputList<Inputs.MLTransformSchemaGetArgs>? _schemas;
        public InputList<Inputs.MLTransformSchemaGetArgs> Schemas
        {
            get => _schemas ?? (_schemas = new InputList<Inputs.MLTransformSchemaGetArgs>());
            set => _schemas = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("timeout")]
        public Input<int>? Timeout { get; set; }

        [Input("workerType")]
        public Input<string>? WorkerType { get; set; }

        public MLTransformState()
        {
        }
        public static new MLTransformState Empty => new MLTransformState();
    }
}
