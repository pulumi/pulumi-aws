// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2TransitGateway
{
    public static class GetVpnAttachment
    {
        /// <summary>
        /// Get information on an EC2 Transit Gateway VPN Attachment.
        /// 
        /// &gt; EC2 Transit Gateway VPN Attachments are implicitly created by VPN Connections referencing an EC2 Transit Gateway so there is no managed resource. For ease, the `aws.ec2.VpnConnection` resource includes a `transit_gateway_attachment_id` attribute which can replace some usage of this data source. For tagging the attachment, see the `aws.ec2.Tag` resource.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### By Transit Gateway and VPN Connection Identifiers
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const example = aws.ec2transitgateway.getVpnAttachment({
        ///     transitGatewayId: aws_ec2_transit_gateway.example.id,
        ///     vpnConnectionId: aws_vpn_connection.example.id,
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// example = aws.ec2transitgateway.get_vpn_attachment(transit_gateway_id=%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference),
        ///     vpn_connection_id=%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Ec2TransitGateway.GetVpnAttachment.Invoke(new()
        ///     {
        ///         TransitGatewayId = aws_ec2_transit_gateway.Example.Id,
        ///         VpnConnectionId = aws_vpn_connection.Example.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/ec2transitgateway"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := ec2transitgateway.GetVpnAttachment(ctx, &amp;ec2transitgateway.GetVpnAttachmentArgs{
        /// 			TransitGatewayId: pulumi.StringRef(aws_ec2_transit_gateway.Example.Id),
        /// 			VpnConnectionId:  pulumi.StringRef(aws_vpn_connection.Example.Id),
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.ec2transitgateway.Ec2transitgatewayFunctions;
        /// import com.pulumi.aws.ec2transitgateway.inputs.GetVpnAttachmentArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var example = Ec2transitgatewayFunctions.getVpnAttachment(GetVpnAttachmentArgs.builder()
        ///             .transitGatewayId(aws_ec2_transit_gateway.example().id())
        ///             .vpnConnectionId(aws_vpn_connection.example().id())
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   example:
        ///     fn::invoke:
        ///       Function: aws:ec2transitgateway:getVpnAttachment
        ///       Arguments:
        ///         transitGatewayId: ${aws_ec2_transit_gateway.example.id}
        ///         vpnConnectionId: ${aws_vpn_connection.example.id}
        /// ```
        /// {{% /example %}}
        /// {{% example %}}
        /// ### Filter
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const test = aws.ec2transitgateway.getVpnAttachment({
        ///     filters: [{
        ///         name: "resource-id",
        ///         values: ["some-resource"],
        ///     }],
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// test = aws.ec2transitgateway.get_vpn_attachment(filters=[aws.ec2transitgateway.GetVpnAttachmentFilterArgs(
        ///     name="resource-id",
        ///     values=["some-resource"],
        /// )])
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.Ec2TransitGateway.GetVpnAttachment.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Aws.Ec2TransitGateway.Inputs.GetVpnAttachmentFilterInputArgs
        ///             {
        ///                 Name = "resource-id",
        ///                 Values = new[]
        ///                 {
        ///                     "some-resource",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/ec2transitgateway"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := ec2transitgateway.GetVpnAttachment(ctx, &amp;ec2transitgateway.GetVpnAttachmentArgs{
        /// 			Filters: []ec2transitgateway.GetVpnAttachmentFilter{
        /// 				{
        /// 					Name: "resource-id",
        /// 					Values: []string{
        /// 						"some-resource",
        /// 					},
        /// 				},
        /// 			},
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.ec2transitgateway.Ec2transitgatewayFunctions;
        /// import com.pulumi.aws.ec2transitgateway.inputs.GetVpnAttachmentArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var test = Ec2transitgatewayFunctions.getVpnAttachment(GetVpnAttachmentArgs.builder()
        ///             .filters(GetVpnAttachmentFilterArgs.builder()
        ///                 .name("resource-id")
        ///                 .values("some-resource")
        ///                 .build())
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   test:
        ///     fn::invoke:
        ///       Function: aws:ec2transitgateway:getVpnAttachment
        ///       Arguments:
        ///         filters:
        ///           - name: resource-id
        ///             values:
        ///               - some-resource
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetVpnAttachmentResult> InvokeAsync(GetVpnAttachmentArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVpnAttachmentResult>("aws:ec2transitgateway/getVpnAttachment:getVpnAttachment", args ?? new GetVpnAttachmentArgs(), options.WithDefaults());

        /// <summary>
        /// Get information on an EC2 Transit Gateway VPN Attachment.
        /// 
        /// &gt; EC2 Transit Gateway VPN Attachments are implicitly created by VPN Connections referencing an EC2 Transit Gateway so there is no managed resource. For ease, the `aws.ec2.VpnConnection` resource includes a `transit_gateway_attachment_id` attribute which can replace some usage of this data source. For tagging the attachment, see the `aws.ec2.Tag` resource.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### By Transit Gateway and VPN Connection Identifiers
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const example = aws.ec2transitgateway.getVpnAttachment({
        ///     transitGatewayId: aws_ec2_transit_gateway.example.id,
        ///     vpnConnectionId: aws_vpn_connection.example.id,
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// example = aws.ec2transitgateway.get_vpn_attachment(transit_gateway_id=%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference),
        ///     vpn_connection_id=%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Ec2TransitGateway.GetVpnAttachment.Invoke(new()
        ///     {
        ///         TransitGatewayId = aws_ec2_transit_gateway.Example.Id,
        ///         VpnConnectionId = aws_vpn_connection.Example.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/ec2transitgateway"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := ec2transitgateway.GetVpnAttachment(ctx, &amp;ec2transitgateway.GetVpnAttachmentArgs{
        /// 			TransitGatewayId: pulumi.StringRef(aws_ec2_transit_gateway.Example.Id),
        /// 			VpnConnectionId:  pulumi.StringRef(aws_vpn_connection.Example.Id),
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.ec2transitgateway.Ec2transitgatewayFunctions;
        /// import com.pulumi.aws.ec2transitgateway.inputs.GetVpnAttachmentArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var example = Ec2transitgatewayFunctions.getVpnAttachment(GetVpnAttachmentArgs.builder()
        ///             .transitGatewayId(aws_ec2_transit_gateway.example().id())
        ///             .vpnConnectionId(aws_vpn_connection.example().id())
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   example:
        ///     fn::invoke:
        ///       Function: aws:ec2transitgateway:getVpnAttachment
        ///       Arguments:
        ///         transitGatewayId: ${aws_ec2_transit_gateway.example.id}
        ///         vpnConnectionId: ${aws_vpn_connection.example.id}
        /// ```
        /// {{% /example %}}
        /// {{% example %}}
        /// ### Filter
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const test = aws.ec2transitgateway.getVpnAttachment({
        ///     filters: [{
        ///         name: "resource-id",
        ///         values: ["some-resource"],
        ///     }],
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// test = aws.ec2transitgateway.get_vpn_attachment(filters=[aws.ec2transitgateway.GetVpnAttachmentFilterArgs(
        ///     name="resource-id",
        ///     values=["some-resource"],
        /// )])
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.Ec2TransitGateway.GetVpnAttachment.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Aws.Ec2TransitGateway.Inputs.GetVpnAttachmentFilterInputArgs
        ///             {
        ///                 Name = "resource-id",
        ///                 Values = new[]
        ///                 {
        ///                     "some-resource",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/ec2transitgateway"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := ec2transitgateway.GetVpnAttachment(ctx, &amp;ec2transitgateway.GetVpnAttachmentArgs{
        /// 			Filters: []ec2transitgateway.GetVpnAttachmentFilter{
        /// 				{
        /// 					Name: "resource-id",
        /// 					Values: []string{
        /// 						"some-resource",
        /// 					},
        /// 				},
        /// 			},
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.ec2transitgateway.Ec2transitgatewayFunctions;
        /// import com.pulumi.aws.ec2transitgateway.inputs.GetVpnAttachmentArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var test = Ec2transitgatewayFunctions.getVpnAttachment(GetVpnAttachmentArgs.builder()
        ///             .filters(GetVpnAttachmentFilterArgs.builder()
        ///                 .name("resource-id")
        ///                 .values("some-resource")
        ///                 .build())
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   test:
        ///     fn::invoke:
        ///       Function: aws:ec2transitgateway:getVpnAttachment
        ///       Arguments:
        ///         filters:
        ///           - name: resource-id
        ///             values:
        ///               - some-resource
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetVpnAttachmentResult> Invoke(GetVpnAttachmentInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVpnAttachmentResult>("aws:ec2transitgateway/getVpnAttachment:getVpnAttachment", args ?? new GetVpnAttachmentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVpnAttachmentArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetVpnAttachmentFilterArgs>? _filters;

        /// <summary>
        /// Configuration block(s) for filtering. Detailed below.
        /// </summary>
        public List<Inputs.GetVpnAttachmentFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetVpnAttachmentFilterArgs>());
            set => _filters = value;
        }

        [Input("tags")]
        private Dictionary<string, string>? _tags;

        /// <summary>
        /// Map of tags, each pair of which must exactly match a pair on the desired Transit Gateway VPN Attachment.
        /// </summary>
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        /// <summary>
        /// Identifier of the EC2 Transit Gateway.
        /// </summary>
        [Input("transitGatewayId")]
        public string? TransitGatewayId { get; set; }

        /// <summary>
        /// Identifier of the EC2 VPN Connection.
        /// </summary>
        [Input("vpnConnectionId")]
        public string? VpnConnectionId { get; set; }

        public GetVpnAttachmentArgs()
        {
        }
        public static new GetVpnAttachmentArgs Empty => new GetVpnAttachmentArgs();
    }

    public sealed class GetVpnAttachmentInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetVpnAttachmentFilterInputArgs>? _filters;

        /// <summary>
        /// Configuration block(s) for filtering. Detailed below.
        /// </summary>
        public InputList<Inputs.GetVpnAttachmentFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetVpnAttachmentFilterInputArgs>());
            set => _filters = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Map of tags, each pair of which must exactly match a pair on the desired Transit Gateway VPN Attachment.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Identifier of the EC2 Transit Gateway.
        /// </summary>
        [Input("transitGatewayId")]
        public Input<string>? TransitGatewayId { get; set; }

        /// <summary>
        /// Identifier of the EC2 VPN Connection.
        /// </summary>
        [Input("vpnConnectionId")]
        public Input<string>? VpnConnectionId { get; set; }

        public GetVpnAttachmentInvokeArgs()
        {
        }
        public static new GetVpnAttachmentInvokeArgs Empty => new GetVpnAttachmentInvokeArgs();
    }


    [OutputType]
    public sealed class GetVpnAttachmentResult
    {
        public readonly ImmutableArray<Outputs.GetVpnAttachmentFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Key-value tags for the EC2 Transit Gateway VPN Attachment
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        public readonly string? TransitGatewayId;
        public readonly string? VpnConnectionId;

        [OutputConstructor]
        private GetVpnAttachmentResult(
            ImmutableArray<Outputs.GetVpnAttachmentFilterResult> filters,

            string id,

            ImmutableDictionary<string, string> tags,

            string? transitGatewayId,

            string? vpnConnectionId)
        {
            Filters = filters;
            Id = id;
            Tags = tags;
            TransitGatewayId = transitGatewayId;
            VpnConnectionId = vpnConnectionId;
        }
    }
}
