// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2TransitGateway
{
    public static class GetConnectPeer
    {
        /// <summary>
        /// Get information on an EC2 Transit Gateway Connect Peer.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### By Filter
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Ec2TransitGateway.GetConnectPeer.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Aws.Ec2TransitGateway.Inputs.GetConnectPeerFilterInputArgs
        ///             {
        ///                 Name = "transit-gateway-attachment-id",
        ///                 Values = new[]
        ///                 {
        ///                     "tgw-attach-12345678",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% example %}}
        /// ### By Identifier
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Ec2TransitGateway.GetConnectPeer.Invoke(new()
        ///     {
        ///         TransitGatewayConnectPeerId = "tgw-connect-peer-12345678",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetConnectPeerResult> InvokeAsync(GetConnectPeerArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetConnectPeerResult>("aws:ec2transitgateway/getConnectPeer:getConnectPeer", args ?? new GetConnectPeerArgs(), options.WithDefaults());

        /// <summary>
        /// Get information on an EC2 Transit Gateway Connect Peer.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### By Filter
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Ec2TransitGateway.GetConnectPeer.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Aws.Ec2TransitGateway.Inputs.GetConnectPeerFilterInputArgs
        ///             {
        ///                 Name = "transit-gateway-attachment-id",
        ///                 Values = new[]
        ///                 {
        ///                     "tgw-attach-12345678",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% example %}}
        /// ### By Identifier
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Ec2TransitGateway.GetConnectPeer.Invoke(new()
        ///     {
        ///         TransitGatewayConnectPeerId = "tgw-connect-peer-12345678",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetConnectPeerResult> Invoke(GetConnectPeerInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetConnectPeerResult>("aws:ec2transitgateway/getConnectPeer:getConnectPeer", args ?? new GetConnectPeerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetConnectPeerArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetConnectPeerFilterArgs>? _filters;

        /// <summary>
        /// One or more configuration blocks containing name-values filters. Detailed below.
        /// </summary>
        public List<Inputs.GetConnectPeerFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetConnectPeerFilterArgs>());
            set => _filters = value;
        }

        [Input("tags")]
        private Dictionary<string, string>? _tags;

        /// <summary>
        /// Key-value tags for the EC2 Transit Gateway Connect Peer
        /// </summary>
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        /// <summary>
        /// Identifier of the EC2 Transit Gateway Connect Peer.
        /// </summary>
        [Input("transitGatewayConnectPeerId")]
        public string? TransitGatewayConnectPeerId { get; set; }

        public GetConnectPeerArgs()
        {
        }
        public static new GetConnectPeerArgs Empty => new GetConnectPeerArgs();
    }

    public sealed class GetConnectPeerInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetConnectPeerFilterInputArgs>? _filters;

        /// <summary>
        /// One or more configuration blocks containing name-values filters. Detailed below.
        /// </summary>
        public InputList<Inputs.GetConnectPeerFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetConnectPeerFilterInputArgs>());
            set => _filters = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value tags for the EC2 Transit Gateway Connect Peer
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Identifier of the EC2 Transit Gateway Connect Peer.
        /// </summary>
        [Input("transitGatewayConnectPeerId")]
        public Input<string>? TransitGatewayConnectPeerId { get; set; }

        public GetConnectPeerInvokeArgs()
        {
        }
        public static new GetConnectPeerInvokeArgs Empty => new GetConnectPeerInvokeArgs();
    }


    [OutputType]
    public sealed class GetConnectPeerResult
    {
        /// <summary>
        /// EC2 Transit Gateway Connect Peer ARN
        /// </summary>
        public readonly string Arn;
        /// <summary>
        /// BGP ASN number assigned customer device
        /// </summary>
        public readonly string BgpAsn;
        public readonly ImmutableArray<Outputs.GetConnectPeerFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// CIDR blocks that will be used for addressing within the tunnel.
        /// </summary>
        public readonly ImmutableArray<string> InsideCidrBlocks;
        /// <summary>
        /// IP addressed assigned to customer device, which is used as tunnel endpoint
        /// </summary>
        public readonly string PeerAddress;
        /// <summary>
        /// Key-value tags for the EC2 Transit Gateway Connect Peer
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// The IP address assigned to Transit Gateway, which is used as tunnel endpoint.
        /// </summary>
        public readonly string TransitGatewayAddress;
        /// <summary>
        /// The Transit Gateway Connect
        /// </summary>
        public readonly string TransitGatewayAttachmentId;
        public readonly string TransitGatewayConnectPeerId;

        [OutputConstructor]
        private GetConnectPeerResult(
            string arn,

            string bgpAsn,

            ImmutableArray<Outputs.GetConnectPeerFilterResult> filters,

            string id,

            ImmutableArray<string> insideCidrBlocks,

            string peerAddress,

            ImmutableDictionary<string, string> tags,

            string transitGatewayAddress,

            string transitGatewayAttachmentId,

            string transitGatewayConnectPeerId)
        {
            Arn = arn;
            BgpAsn = bgpAsn;
            Filters = filters;
            Id = id;
            InsideCidrBlocks = insideCidrBlocks;
            PeerAddress = peerAddress;
            Tags = tags;
            TransitGatewayAddress = transitGatewayAddress;
            TransitGatewayAttachmentId = transitGatewayAttachmentId;
            TransitGatewayConnectPeerId = transitGatewayConnectPeerId;
        }
    }
}
