// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2TransitGateway
{
    /// <summary>
    /// Manages an EC2 Transit Gateway VPC Attachment. For examples of custom route table association and propagation, see the EC2 Transit Gateway Networking Examples Guide.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var example = new Aws.Ec2TransitGateway.VpcAttachment("example", new Aws.Ec2TransitGateway.VpcAttachmentArgs
    ///         {
    ///             SubnetIds = 
    ///             {
    ///                 aws_subnet.Example.Id,
    ///             },
    ///             TransitGatewayId = aws_ec2_transit_gateway.Example.Id,
    ///             VpcId = aws_vpc.Example.Id,
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// `aws_ec2_transit_gateway_vpc_attachment` can be imported by using the EC2 Transit Gateway Attachment identifier, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import aws:ec2transitgateway/vpcAttachment:VpcAttachment example tgw-attach-12345678
    /// ```
    /// </summary>
    public partial class VpcAttachment : Pulumi.CustomResource
    {
        /// <summary>
        /// Whether Appliance Mode support is enabled. If enabled, a traffic flow between a source and destination uses the same Availability Zone for the VPC attachment for the lifetime of that flow. Valid values: `disable`, `enable`. Default value: `disable`.
        /// </summary>
        [Output("applianceModeSupport")]
        public Output<string?> ApplianceModeSupport { get; private set; } = null!;

        /// <summary>
        /// Whether DNS support is enabled. Valid values: `disable`, `enable`. Default value: `enable`.
        /// </summary>
        [Output("dnsSupport")]
        public Output<string?> DnsSupport { get; private set; } = null!;

        /// <summary>
        /// Whether IPv6 support is enabled. Valid values: `disable`, `enable`. Default value: `disable`.
        /// </summary>
        [Output("ipv6Support")]
        public Output<string?> Ipv6Support { get; private set; } = null!;

        /// <summary>
        /// Identifiers of EC2 Subnets.
        /// </summary>
        [Output("subnetIds")]
        public Output<ImmutableArray<string>> SubnetIds { get; private set; } = null!;

        /// <summary>
        /// Key-value tags for the EC2 Transit Gateway VPC Attachment.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Boolean whether the VPC Attachment should be associated with the EC2 Transit Gateway association default route table. This cannot be configured or perform drift detection with Resource Access Manager shared EC2 Transit Gateways. Default value: `true`.
        /// </summary>
        [Output("transitGatewayDefaultRouteTableAssociation")]
        public Output<bool?> TransitGatewayDefaultRouteTableAssociation { get; private set; } = null!;

        /// <summary>
        /// Boolean whether the VPC Attachment should propagate routes with the EC2 Transit Gateway propagation default route table. This cannot be configured or perform drift detection with Resource Access Manager shared EC2 Transit Gateways. Default value: `true`.
        /// </summary>
        [Output("transitGatewayDefaultRouteTablePropagation")]
        public Output<bool?> TransitGatewayDefaultRouteTablePropagation { get; private set; } = null!;

        /// <summary>
        /// Identifier of EC2 Transit Gateway.
        /// </summary>
        [Output("transitGatewayId")]
        public Output<string> TransitGatewayId { get; private set; } = null!;

        /// <summary>
        /// Identifier of EC2 VPC.
        /// </summary>
        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;

        /// <summary>
        /// Identifier of the AWS account that owns the EC2 VPC.
        /// </summary>
        [Output("vpcOwnerId")]
        public Output<string> VpcOwnerId { get; private set; } = null!;


        /// <summary>
        /// Create a VpcAttachment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VpcAttachment(string name, VpcAttachmentArgs args, CustomResourceOptions? options = null)
            : base("aws:ec2transitgateway/vpcAttachment:VpcAttachment", name, args ?? new VpcAttachmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VpcAttachment(string name, Input<string> id, VpcAttachmentState? state = null, CustomResourceOptions? options = null)
            : base("aws:ec2transitgateway/vpcAttachment:VpcAttachment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VpcAttachment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VpcAttachment Get(string name, Input<string> id, VpcAttachmentState? state = null, CustomResourceOptions? options = null)
        {
            return new VpcAttachment(name, id, state, options);
        }
    }

    public sealed class VpcAttachmentArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether Appliance Mode support is enabled. If enabled, a traffic flow between a source and destination uses the same Availability Zone for the VPC attachment for the lifetime of that flow. Valid values: `disable`, `enable`. Default value: `disable`.
        /// </summary>
        [Input("applianceModeSupport")]
        public Input<string>? ApplianceModeSupport { get; set; }

        /// <summary>
        /// Whether DNS support is enabled. Valid values: `disable`, `enable`. Default value: `enable`.
        /// </summary>
        [Input("dnsSupport")]
        public Input<string>? DnsSupport { get; set; }

        /// <summary>
        /// Whether IPv6 support is enabled. Valid values: `disable`, `enable`. Default value: `disable`.
        /// </summary>
        [Input("ipv6Support")]
        public Input<string>? Ipv6Support { get; set; }

        [Input("subnetIds", required: true)]
        private InputList<string>? _subnetIds;

        /// <summary>
        /// Identifiers of EC2 Subnets.
        /// </summary>
        public InputList<string> SubnetIds
        {
            get => _subnetIds ?? (_subnetIds = new InputList<string>());
            set => _subnetIds = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value tags for the EC2 Transit Gateway VPC Attachment.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Boolean whether the VPC Attachment should be associated with the EC2 Transit Gateway association default route table. This cannot be configured or perform drift detection with Resource Access Manager shared EC2 Transit Gateways. Default value: `true`.
        /// </summary>
        [Input("transitGatewayDefaultRouteTableAssociation")]
        public Input<bool>? TransitGatewayDefaultRouteTableAssociation { get; set; }

        /// <summary>
        /// Boolean whether the VPC Attachment should propagate routes with the EC2 Transit Gateway propagation default route table. This cannot be configured or perform drift detection with Resource Access Manager shared EC2 Transit Gateways. Default value: `true`.
        /// </summary>
        [Input("transitGatewayDefaultRouteTablePropagation")]
        public Input<bool>? TransitGatewayDefaultRouteTablePropagation { get; set; }

        /// <summary>
        /// Identifier of EC2 Transit Gateway.
        /// </summary>
        [Input("transitGatewayId", required: true)]
        public Input<string> TransitGatewayId { get; set; } = null!;

        /// <summary>
        /// Identifier of EC2 VPC.
        /// </summary>
        [Input("vpcId", required: true)]
        public Input<string> VpcId { get; set; } = null!;

        public VpcAttachmentArgs()
        {
        }
    }

    public sealed class VpcAttachmentState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether Appliance Mode support is enabled. If enabled, a traffic flow between a source and destination uses the same Availability Zone for the VPC attachment for the lifetime of that flow. Valid values: `disable`, `enable`. Default value: `disable`.
        /// </summary>
        [Input("applianceModeSupport")]
        public Input<string>? ApplianceModeSupport { get; set; }

        /// <summary>
        /// Whether DNS support is enabled. Valid values: `disable`, `enable`. Default value: `enable`.
        /// </summary>
        [Input("dnsSupport")]
        public Input<string>? DnsSupport { get; set; }

        /// <summary>
        /// Whether IPv6 support is enabled. Valid values: `disable`, `enable`. Default value: `disable`.
        /// </summary>
        [Input("ipv6Support")]
        public Input<string>? Ipv6Support { get; set; }

        [Input("subnetIds")]
        private InputList<string>? _subnetIds;

        /// <summary>
        /// Identifiers of EC2 Subnets.
        /// </summary>
        public InputList<string> SubnetIds
        {
            get => _subnetIds ?? (_subnetIds = new InputList<string>());
            set => _subnetIds = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value tags for the EC2 Transit Gateway VPC Attachment.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Boolean whether the VPC Attachment should be associated with the EC2 Transit Gateway association default route table. This cannot be configured or perform drift detection with Resource Access Manager shared EC2 Transit Gateways. Default value: `true`.
        /// </summary>
        [Input("transitGatewayDefaultRouteTableAssociation")]
        public Input<bool>? TransitGatewayDefaultRouteTableAssociation { get; set; }

        /// <summary>
        /// Boolean whether the VPC Attachment should propagate routes with the EC2 Transit Gateway propagation default route table. This cannot be configured or perform drift detection with Resource Access Manager shared EC2 Transit Gateways. Default value: `true`.
        /// </summary>
        [Input("transitGatewayDefaultRouteTablePropagation")]
        public Input<bool>? TransitGatewayDefaultRouteTablePropagation { get; set; }

        /// <summary>
        /// Identifier of EC2 Transit Gateway.
        /// </summary>
        [Input("transitGatewayId")]
        public Input<string>? TransitGatewayId { get; set; }

        /// <summary>
        /// Identifier of EC2 VPC.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        /// <summary>
        /// Identifier of the AWS account that owns the EC2 VPC.
        /// </summary>
        [Input("vpcOwnerId")]
        public Input<string>? VpcOwnerId { get; set; }

        public VpcAttachmentState()
        {
        }
    }
}
