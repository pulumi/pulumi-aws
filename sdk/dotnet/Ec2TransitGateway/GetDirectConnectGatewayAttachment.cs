// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2TransitGateway
{
    public static class GetDirectConnectGatewayAttachment
    {
        /// <summary>
        /// Get information on an EC2 Transit Gateway's attachment to a Direct Connect Gateway.
        /// 
        /// {{% examples %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetDirectConnectGatewayAttachmentResult> InvokeAsync(GetDirectConnectGatewayAttachmentArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDirectConnectGatewayAttachmentResult>("aws:ec2transitgateway/getDirectConnectGatewayAttachment:getDirectConnectGatewayAttachment", args ?? new GetDirectConnectGatewayAttachmentArgs(), options.WithVersion());
    }


    public sealed class GetDirectConnectGatewayAttachmentArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier of the Direct Connect Gateway.
        /// </summary>
        [Input("dxGatewayId")]
        public string? DxGatewayId { get; set; }

        [Input("filters")]
        private List<Inputs.GetDirectConnectGatewayAttachmentFilterArgs>? _filters;

        /// <summary>
        /// Configuration block(s) for filtering. Detailed below.
        /// </summary>
        public List<Inputs.GetDirectConnectGatewayAttachmentFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetDirectConnectGatewayAttachmentFilterArgs>());
            set => _filters = value;
        }

        [Input("tags")]
        private Dictionary<string, object>? _tags;

        /// <summary>
        /// A mapping of tags, each pair of which must exactly match a pair on the desired Transit Gateway Direct Connect Gateway Attachment.
        /// </summary>
        public Dictionary<string, object> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, object>());
            set => _tags = value;
        }

        /// <summary>
        /// Identifier of the EC2 Transit Gateway.
        /// </summary>
        [Input("transitGatewayId")]
        public string? TransitGatewayId { get; set; }

        public GetDirectConnectGatewayAttachmentArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDirectConnectGatewayAttachmentResult
    {
        public readonly string? DxGatewayId;
        public readonly ImmutableArray<Outputs.GetDirectConnectGatewayAttachmentFilterResult> Filters;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Key-value tags for the EC2 Transit Gateway Attachment
        /// </summary>
        public readonly ImmutableDictionary<string, object> Tags;
        public readonly string? TransitGatewayId;

        [OutputConstructor]
        private GetDirectConnectGatewayAttachmentResult(
            string? dxGatewayId,

            ImmutableArray<Outputs.GetDirectConnectGatewayAttachmentFilterResult> filters,

            string id,

            ImmutableDictionary<string, object> tags,

            string? transitGatewayId)
        {
            DxGatewayId = dxGatewayId;
            Filters = filters;
            Id = id;
            Tags = tags;
            TransitGatewayId = transitGatewayId;
        }
    }
}
