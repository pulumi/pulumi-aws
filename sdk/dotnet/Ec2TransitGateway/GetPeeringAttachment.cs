// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2TransitGateway
{
    public static class GetPeeringAttachment
    {
        /// <summary>
        /// Get information on an EC2 Transit Gateway Peering Attachment.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### By Filter
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(Aws.Ec2TransitGateway.GetPeeringAttachment.InvokeAsync(new Aws.Ec2TransitGateway.GetPeeringAttachmentArgs
        ///         {
        ///             Filters = 
        ///             {
        ///                 new Aws.Ec2TransitGateway.Inputs.GetPeeringAttachmentFilterArgs
        ///                 {
        ///                     Name = "transit-gateway-attachment-id",
        ///                     Values = 
        ///                     {
        ///                         "tgw-attach-12345678",
        ///                     },
        ///                 },
        ///             },
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% example %}}
        /// ### By Identifier
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var attachment = Output.Create(Aws.Ec2TransitGateway.GetPeeringAttachment.InvokeAsync(new Aws.Ec2TransitGateway.GetPeeringAttachmentArgs
        ///         {
        ///             Id = "tgw-attach-12345678",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetPeeringAttachmentResult> InvokeAsync(GetPeeringAttachmentArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetPeeringAttachmentResult>("aws:ec2transitgateway/getPeeringAttachment:getPeeringAttachment", args ?? new GetPeeringAttachmentArgs(), options.WithVersion());
    }


    public sealed class GetPeeringAttachmentArgs : Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetPeeringAttachmentFilterArgs>? _filters;

        /// <summary>
        /// One or more configuration blocks containing name-values filters. Detailed below.
        /// </summary>
        public List<Inputs.GetPeeringAttachmentFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetPeeringAttachmentFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Identifier of the EC2 Transit Gateway Peering Attachment.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        [Input("tags")]
        private Dictionary<string, string>? _tags;

        /// <summary>
        /// A mapping of tags, each pair of which must exactly match
        /// a pair on the specific EC2 Transit Gateway Peering Attachment to retrieve.
        /// </summary>
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetPeeringAttachmentArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetPeeringAttachmentResult
    {
        public readonly ImmutableArray<Outputs.GetPeeringAttachmentFilterResult> Filters;
        public readonly string Id;
        /// <summary>
        /// Identifier of the peer AWS account
        /// </summary>
        public readonly string PeerAccountId;
        /// <summary>
        /// Identifier of the peer AWS region
        /// </summary>
        public readonly string PeerRegion;
        /// <summary>
        /// Identifier of the peer EC2 Transit Gateway
        /// </summary>
        public readonly string PeerTransitGatewayId;
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// Identifier of the local EC2 Transit Gateway
        /// </summary>
        public readonly string TransitGatewayId;

        [OutputConstructor]
        private GetPeeringAttachmentResult(
            ImmutableArray<Outputs.GetPeeringAttachmentFilterResult> filters,

            string id,

            string peerAccountId,

            string peerRegion,

            string peerTransitGatewayId,

            ImmutableDictionary<string, string> tags,

            string transitGatewayId)
        {
            Filters = filters;
            Id = id;
            PeerAccountId = peerAccountId;
            PeerRegion = peerRegion;
            PeerTransitGatewayId = peerTransitGatewayId;
            Tags = tags;
            TransitGatewayId = transitGatewayId;
        }
    }
}
