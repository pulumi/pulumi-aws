// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2TransitGateway
{
    public static class GetPeeringAttachment
    {
        public static Task<GetPeeringAttachmentResult> InvokeAsync(GetPeeringAttachmentArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPeeringAttachmentResult>("aws:ec2transitgateway/getPeeringAttachment:getPeeringAttachment", args ?? new GetPeeringAttachmentArgs(), options.WithDefaults());

        public static Output<GetPeeringAttachmentResult> Invoke(GetPeeringAttachmentInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPeeringAttachmentResult>("aws:ec2transitgateway/getPeeringAttachment:getPeeringAttachment", args ?? new GetPeeringAttachmentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPeeringAttachmentArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetPeeringAttachmentFilterArgs>? _filters;
        public List<Inputs.GetPeeringAttachmentFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetPeeringAttachmentFilterArgs>());
            set => _filters = value;
        }

        [Input("id")]
        public string? Id { get; set; }

        [Input("tags")]
        private Dictionary<string, string>? _tags;
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetPeeringAttachmentArgs()
        {
        }
        public static new GetPeeringAttachmentArgs Empty => new GetPeeringAttachmentArgs();
    }

    public sealed class GetPeeringAttachmentInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetPeeringAttachmentFilterInputArgs>? _filters;
        public InputList<Inputs.GetPeeringAttachmentFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetPeeringAttachmentFilterInputArgs>());
            set => _filters = value;
        }

        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetPeeringAttachmentInvokeArgs()
        {
        }
        public static new GetPeeringAttachmentInvokeArgs Empty => new GetPeeringAttachmentInvokeArgs();
    }


    [OutputType]
    public sealed class GetPeeringAttachmentResult
    {
        public readonly ImmutableArray<Outputs.GetPeeringAttachmentFilterResult> Filters;
        public readonly string Id;
        public readonly string PeerAccountId;
        public readonly string PeerRegion;
        public readonly string PeerTransitGatewayId;
        public readonly ImmutableDictionary<string, string> Tags;
        public readonly string TransitGatewayId;

        [OutputConstructor]
        private GetPeeringAttachmentResult(
            ImmutableArray<Outputs.GetPeeringAttachmentFilterResult> filters,

            string id,

            string peerAccountId,

            string peerRegion,

            string peerTransitGatewayId,

            ImmutableDictionary<string, string> tags,

            string transitGatewayId)
        {
            Filters = filters;
            Id = id;
            PeerAccountId = peerAccountId;
            PeerRegion = peerRegion;
            PeerTransitGatewayId = peerTransitGatewayId;
            Tags = tags;
            TransitGatewayId = transitGatewayId;
        }
    }
}
