// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2TransitGateway
{
    public static class GetVpcAttachments
    {
        /// <summary>
        /// Get information on EC2 Transit Gateway VPC Attachments.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### By Filter
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var filtered = Aws.Ec2TransitGateway.GetVpcAttachments.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Aws.Ec2TransitGateway.Inputs.GetVpcAttachmentsFilterInputArgs
        ///             {
        ///                 Name = "state",
        ///                 Values = new[]
        ///                 {
        ///                     "pendingAcceptance",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        ///     var unit = .Select(__index =&gt; 
        ///     {
        ///         return  Aws.Ec2TransitGateway.GetVpcAttachment.Invoke(new()
        ///         {
        ///             Id = _arg0_.Ids[__index],
        ///         });
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetVpcAttachmentsResult> InvokeAsync(GetVpcAttachmentsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVpcAttachmentsResult>("aws:ec2transitgateway/getVpcAttachments:getVpcAttachments", args ?? new GetVpcAttachmentsArgs(), options.WithDefaults());

        /// <summary>
        /// Get information on EC2 Transit Gateway VPC Attachments.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### By Filter
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var filtered = Aws.Ec2TransitGateway.GetVpcAttachments.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Aws.Ec2TransitGateway.Inputs.GetVpcAttachmentsFilterInputArgs
        ///             {
        ///                 Name = "state",
        ///                 Values = new[]
        ///                 {
        ///                     "pendingAcceptance",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        ///     var unit = .Select(__index =&gt; 
        ///     {
        ///         return  Aws.Ec2TransitGateway.GetVpcAttachment.Invoke(new()
        ///         {
        ///             Id = _arg0_.Ids[__index],
        ///         });
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetVpcAttachmentsResult> Invoke(GetVpcAttachmentsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVpcAttachmentsResult>("aws:ec2transitgateway/getVpcAttachments:getVpcAttachments", args ?? new GetVpcAttachmentsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVpcAttachmentsArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetVpcAttachmentsFilterArgs>? _filters;

        /// <summary>
        /// One or more configuration blocks containing name-values filters. Detailed below.
        /// </summary>
        public List<Inputs.GetVpcAttachmentsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetVpcAttachmentsFilterArgs>());
            set => _filters = value;
        }

        public GetVpcAttachmentsArgs()
        {
        }
        public static new GetVpcAttachmentsArgs Empty => new GetVpcAttachmentsArgs();
    }

    public sealed class GetVpcAttachmentsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetVpcAttachmentsFilterInputArgs>? _filters;

        /// <summary>
        /// One or more configuration blocks containing name-values filters. Detailed below.
        /// </summary>
        public InputList<Inputs.GetVpcAttachmentsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetVpcAttachmentsFilterInputArgs>());
            set => _filters = value;
        }

        public GetVpcAttachmentsInvokeArgs()
        {
        }
        public static new GetVpcAttachmentsInvokeArgs Empty => new GetVpcAttachmentsInvokeArgs();
    }


    [OutputType]
    public sealed class GetVpcAttachmentsResult
    {
        public readonly ImmutableArray<Outputs.GetVpcAttachmentsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list of all attachments ids matching the filter. You can retrieve more information about the attachment using the [aws.ec2transitgateway.VpcAttachment][2] data source, searching by identifier.
        /// </summary>
        public readonly ImmutableArray<string> Ids;

        [OutputConstructor]
        private GetVpcAttachmentsResult(
            ImmutableArray<Outputs.GetVpcAttachmentsFilterResult> filters,

            string id,

            ImmutableArray<string> ids)
        {
            Filters = filters;
            Id = id;
            Ids = ids;
        }
    }
}
