// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2TransitGateway
{
    /// <summary>
    /// Registers members (network interfaces) with the transit gateway multicast group.
    /// A member is a network interface associated with a supported EC2 instance that receives multicast traffic.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Ec2TransitGateway.MulticastGroupMember("example", new()
    ///     {
    ///         GroupIpAddress = "224.0.0.1",
    ///         NetworkInterfaceId = aws_network_interface.Example.Id,
    ///         TransitGatewayMulticastDomainId = aws_ec2_transit_gateway_multicast_domain.Example.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [AwsResourceType("aws:ec2transitgateway/multicastGroupMember:MulticastGroupMember")]
    public partial class MulticastGroupMember : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The IP address assigned to the transit gateway multicast group.
        /// </summary>
        [Output("groupIpAddress")]
        public Output<string> GroupIpAddress { get; private set; } = null!;

        /// <summary>
        /// The group members' network interface ID to register with the transit gateway multicast group.
        /// </summary>
        [Output("networkInterfaceId")]
        public Output<string> NetworkInterfaceId { get; private set; } = null!;

        /// <summary>
        /// The ID of the transit gateway multicast domain.
        /// </summary>
        [Output("transitGatewayMulticastDomainId")]
        public Output<string> TransitGatewayMulticastDomainId { get; private set; } = null!;


        /// <summary>
        /// Create a MulticastGroupMember resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MulticastGroupMember(string name, MulticastGroupMemberArgs args, CustomResourceOptions? options = null)
            : base("aws:ec2transitgateway/multicastGroupMember:MulticastGroupMember", name, args ?? new MulticastGroupMemberArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MulticastGroupMember(string name, Input<string> id, MulticastGroupMemberState? state = null, CustomResourceOptions? options = null)
            : base("aws:ec2transitgateway/multicastGroupMember:MulticastGroupMember", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MulticastGroupMember resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MulticastGroupMember Get(string name, Input<string> id, MulticastGroupMemberState? state = null, CustomResourceOptions? options = null)
        {
            return new MulticastGroupMember(name, id, state, options);
        }
    }

    public sealed class MulticastGroupMemberArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The IP address assigned to the transit gateway multicast group.
        /// </summary>
        [Input("groupIpAddress", required: true)]
        public Input<string> GroupIpAddress { get; set; } = null!;

        /// <summary>
        /// The group members' network interface ID to register with the transit gateway multicast group.
        /// </summary>
        [Input("networkInterfaceId", required: true)]
        public Input<string> NetworkInterfaceId { get; set; } = null!;

        /// <summary>
        /// The ID of the transit gateway multicast domain.
        /// </summary>
        [Input("transitGatewayMulticastDomainId", required: true)]
        public Input<string> TransitGatewayMulticastDomainId { get; set; } = null!;

        public MulticastGroupMemberArgs()
        {
        }
        public static new MulticastGroupMemberArgs Empty => new MulticastGroupMemberArgs();
    }

    public sealed class MulticastGroupMemberState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The IP address assigned to the transit gateway multicast group.
        /// </summary>
        [Input("groupIpAddress")]
        public Input<string>? GroupIpAddress { get; set; }

        /// <summary>
        /// The group members' network interface ID to register with the transit gateway multicast group.
        /// </summary>
        [Input("networkInterfaceId")]
        public Input<string>? NetworkInterfaceId { get; set; }

        /// <summary>
        /// The ID of the transit gateway multicast domain.
        /// </summary>
        [Input("transitGatewayMulticastDomainId")]
        public Input<string>? TransitGatewayMulticastDomainId { get; set; }

        public MulticastGroupMemberState()
        {
        }
        public static new MulticastGroupMemberState Empty => new MulticastGroupMemberState();
    }
}
