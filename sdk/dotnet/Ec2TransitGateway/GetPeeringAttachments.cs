// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ec2TransitGateway
{
    public static class GetPeeringAttachments
    {
        /// <summary>
        /// Get information on EC2 Transit Gateway Peering Attachments.
        /// 
        /// ## Example Usage
        /// 
        /// ### All Resources
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.Ec2TransitGateway.GetPeeringAttachments.Invoke();
        /// 
        /// });
        /// ```
        /// 
        /// ### By Filter
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var filtered = Aws.Ec2TransitGateway.GetPeeringAttachments.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Aws.Ec2TransitGateway.Inputs.GetPeeringAttachmentsFilterInputArgs
        ///             {
        ///                 Name = "state",
        ///                 Values = new[]
        ///                 {
        ///                     "pendingAcceptance",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        ///     var unit = ;
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetPeeringAttachmentsResult> InvokeAsync(GetPeeringAttachmentsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPeeringAttachmentsResult>("aws:ec2transitgateway/getPeeringAttachments:getPeeringAttachments", args ?? new GetPeeringAttachmentsArgs(), options.WithDefaults());

        /// <summary>
        /// Get information on EC2 Transit Gateway Peering Attachments.
        /// 
        /// ## Example Usage
        /// 
        /// ### All Resources
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.Ec2TransitGateway.GetPeeringAttachments.Invoke();
        /// 
        /// });
        /// ```
        /// 
        /// ### By Filter
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var filtered = Aws.Ec2TransitGateway.GetPeeringAttachments.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Aws.Ec2TransitGateway.Inputs.GetPeeringAttachmentsFilterInputArgs
        ///             {
        ///                 Name = "state",
        ///                 Values = new[]
        ///                 {
        ///                     "pendingAcceptance",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        ///     var unit = ;
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetPeeringAttachmentsResult> Invoke(GetPeeringAttachmentsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPeeringAttachmentsResult>("aws:ec2transitgateway/getPeeringAttachments:getPeeringAttachments", args ?? new GetPeeringAttachmentsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get information on EC2 Transit Gateway Peering Attachments.
        /// 
        /// ## Example Usage
        /// 
        /// ### All Resources
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.Ec2TransitGateway.GetPeeringAttachments.Invoke();
        /// 
        /// });
        /// ```
        /// 
        /// ### By Filter
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var filtered = Aws.Ec2TransitGateway.GetPeeringAttachments.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Aws.Ec2TransitGateway.Inputs.GetPeeringAttachmentsFilterInputArgs
        ///             {
        ///                 Name = "state",
        ///                 Values = new[]
        ///                 {
        ///                     "pendingAcceptance",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        ///     var unit = ;
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetPeeringAttachmentsResult> Invoke(GetPeeringAttachmentsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetPeeringAttachmentsResult>("aws:ec2transitgateway/getPeeringAttachments:getPeeringAttachments", args ?? new GetPeeringAttachmentsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPeeringAttachmentsArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetPeeringAttachmentsFilterArgs>? _filters;

        /// <summary>
        /// One or more configuration blocks containing name-values filters. Detailed below.
        /// </summary>
        public List<Inputs.GetPeeringAttachmentsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetPeeringAttachmentsFilterArgs>());
            set => _filters = value;
        }

        public GetPeeringAttachmentsArgs()
        {
        }
        public static new GetPeeringAttachmentsArgs Empty => new GetPeeringAttachmentsArgs();
    }

    public sealed class GetPeeringAttachmentsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetPeeringAttachmentsFilterInputArgs>? _filters;

        /// <summary>
        /// One or more configuration blocks containing name-values filters. Detailed below.
        /// </summary>
        public InputList<Inputs.GetPeeringAttachmentsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetPeeringAttachmentsFilterInputArgs>());
            set => _filters = value;
        }

        public GetPeeringAttachmentsInvokeArgs()
        {
        }
        public static new GetPeeringAttachmentsInvokeArgs Empty => new GetPeeringAttachmentsInvokeArgs();
    }


    [OutputType]
    public sealed class GetPeeringAttachmentsResult
    {
        public readonly ImmutableArray<Outputs.GetPeeringAttachmentsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list of all attachments ids matching the filter. You can retrieve more information about the attachment using the [aws.ec2transitgateway.PeeringAttachment][2] data source, searching by identifier.
        /// </summary>
        public readonly ImmutableArray<string> Ids;

        [OutputConstructor]
        private GetPeeringAttachmentsResult(
            ImmutableArray<Outputs.GetPeeringAttachmentsFilterResult> filters,

            string id,

            ImmutableArray<string> ids)
        {
            Filters = filters;
            Id = id;
            Ids = ids;
        }
    }
}
