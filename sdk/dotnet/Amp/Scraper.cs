// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Amp
{
    /// <summary>
    /// ## Import
    /// 
    /// Using `pulumi import`, import the Managed Scraper using its identifier.
    /// For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:amp/scraper:Scraper example s-0123abc-0000-0123-a000-000000000000
    /// ```
    /// </summary>
    [AwsResourceType("aws:amp/scraper:Scraper")]
    public partial class Scraper : global::Pulumi.CustomResource
    {
        /// <summary>
        /// a name to associate with the managed scraper. This is for your use, and does not need to be unique.
        /// </summary>
        [Output("alias")]
        public Output<string?> Alias { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the new scraper.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// Configuration block for the managed scraper to send metrics to. See `destination`.
        /// </summary>
        [Output("destination")]
        public Output<Outputs.ScraperDestination?> Destination { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the IAM role that provides permissions for the scraper to discover, collect, and produce metrics
        /// </summary>
        [Output("roleArn")]
        public Output<string> RoleArn { get; private set; } = null!;

        /// <summary>
        /// The configuration file to use in the new scraper. For more information, see [Scraper configuration](https://docs.aws.amazon.com/prometheus/latest/userguide/AMP-collector-how-to.html#AMP-collector-configuration).
        /// </summary>
        [Output("scrapeConfiguration")]
        public Output<string> ScrapeConfiguration { get; private set; } = null!;

        /// <summary>
        /// Configuration block to specify where the managed scraper will collect metrics from. See `source`.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Output("source")]
        public Output<Outputs.ScraperSource?> Source { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("timeouts")]
        public Output<Outputs.ScraperTimeouts?> Timeouts { get; private set; } = null!;


        /// <summary>
        /// Create a Scraper resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Scraper(string name, ScraperArgs args, CustomResourceOptions? options = null)
            : base("aws:amp/scraper:Scraper", name, args ?? new ScraperArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Scraper(string name, Input<string> id, ScraperState? state = null, CustomResourceOptions? options = null)
            : base("aws:amp/scraper:Scraper", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Scraper resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Scraper Get(string name, Input<string> id, ScraperState? state = null, CustomResourceOptions? options = null)
        {
            return new Scraper(name, id, state, options);
        }
    }

    public sealed class ScraperArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// a name to associate with the managed scraper. This is for your use, and does not need to be unique.
        /// </summary>
        [Input("alias")]
        public Input<string>? Alias { get; set; }

        /// <summary>
        /// Configuration block for the managed scraper to send metrics to. See `destination`.
        /// </summary>
        [Input("destination")]
        public Input<Inputs.ScraperDestinationArgs>? Destination { get; set; }

        /// <summary>
        /// The configuration file to use in the new scraper. For more information, see [Scraper configuration](https://docs.aws.amazon.com/prometheus/latest/userguide/AMP-collector-how-to.html#AMP-collector-configuration).
        /// </summary>
        [Input("scrapeConfiguration", required: true)]
        public Input<string> ScrapeConfiguration { get; set; } = null!;

        /// <summary>
        /// Configuration block to specify where the managed scraper will collect metrics from. See `source`.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("source")]
        public Input<Inputs.ScraperSourceArgs>? Source { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("timeouts")]
        public Input<Inputs.ScraperTimeoutsArgs>? Timeouts { get; set; }

        public ScraperArgs()
        {
        }
        public static new ScraperArgs Empty => new ScraperArgs();
    }

    public sealed class ScraperState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// a name to associate with the managed scraper. This is for your use, and does not need to be unique.
        /// </summary>
        [Input("alias")]
        public Input<string>? Alias { get; set; }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the new scraper.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// Configuration block for the managed scraper to send metrics to. See `destination`.
        /// </summary>
        [Input("destination")]
        public Input<Inputs.ScraperDestinationGetArgs>? Destination { get; set; }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the IAM role that provides permissions for the scraper to discover, collect, and produce metrics
        /// </summary>
        [Input("roleArn")]
        public Input<string>? RoleArn { get; set; }

        /// <summary>
        /// The configuration file to use in the new scraper. For more information, see [Scraper configuration](https://docs.aws.amazon.com/prometheus/latest/userguide/AMP-collector-how-to.html#AMP-collector-configuration).
        /// </summary>
        [Input("scrapeConfiguration")]
        public Input<string>? ScrapeConfiguration { get; set; }

        /// <summary>
        /// Configuration block to specify where the managed scraper will collect metrics from. See `source`.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("source")]
        public Input<Inputs.ScraperSourceGetArgs>? Source { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        [Obsolete(@"Please use `tags` instead.")]
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("timeouts")]
        public Input<Inputs.ScraperTimeoutsGetArgs>? Timeouts { get; set; }

        public ScraperState()
        {
        }
        public static new ScraperState Empty => new ScraperState();
    }
}
