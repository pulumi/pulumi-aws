// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.SsmContacts
{
    /// <summary>
    /// Resource for managing an AWS SSM Contacts Contact Channel.
    /// 
    /// ## Example Usage
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.SsmContacts.ContactChannel("example", new()
    ///     {
    ///         ContactId = "arn:aws:ssm-contacts:us-west-2:123456789012:contact/contactalias",
    ///         DeliveryAddress = new Aws.SsmContacts.Inputs.ContactChannelDeliveryAddressArgs
    ///         {
    ///             SimpleAddress = "email@example.com",
    ///         },
    ///         Type = "EMAIL",
    ///     });
    /// 
    /// });
    /// ```
    /// ### Usage with SSM Contact
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleContact = new Aws.SsmContacts.Contact("exampleContact", new()
    ///     {
    ///         Alias = "example_contact",
    ///         Type = "PERSONAL",
    ///     });
    /// 
    ///     var example = new Aws.SsmContacts.ContactChannel("example", new()
    ///     {
    ///         ContactId = exampleContact.Arn,
    ///         DeliveryAddress = new Aws.SsmContacts.Inputs.ContactChannelDeliveryAddressArgs
    ///         {
    ///             SimpleAddress = "email@example.com",
    ///         },
    ///         Type = "EMAIL",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import SSM Contact Channel using the `ARN`. For example:
    /// 
    /// ```sh
    ///  $ pulumi import aws:ssmcontacts/contactChannel:ContactChannel example arn:aws:ssm-contacts:us-west-2:123456789012:contact-channel/example
    /// ```
    /// </summary>
    [AwsResourceType("aws:ssmcontacts/contactChannel:ContactChannel")]
    public partial class ContactChannel : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Whether the contact channel is activated. The contact channel must be activated to use it to engage the contact. One of `ACTIVATED` or `NOT_ACTIVATED`.
        /// </summary>
        [Output("activationStatus")]
        public Output<string> ActivationStatus { get; private set; } = null!;

        /// <summary>
        /// Amazon Resource Name (ARN) of the contact channel.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// Amazon Resource Name (ARN) of the AWS SSM Contact that the contact channel belongs to.
        /// </summary>
        [Output("contactId")]
        public Output<string> ContactId { get; private set; } = null!;

        /// <summary>
        /// Block that contains contact engagement details. See details below.
        /// </summary>
        [Output("deliveryAddress")]
        public Output<Outputs.ContactChannelDeliveryAddress> DeliveryAddress { get; private set; } = null!;

        /// <summary>
        /// Name of the contact channel.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Type of the contact channel. One of `SMS`, `VOICE` or `EMAIL`.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a ContactChannel resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ContactChannel(string name, ContactChannelArgs args, CustomResourceOptions? options = null)
            : base("aws:ssmcontacts/contactChannel:ContactChannel", name, args ?? new ContactChannelArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ContactChannel(string name, Input<string> id, ContactChannelState? state = null, CustomResourceOptions? options = null)
            : base("aws:ssmcontacts/contactChannel:ContactChannel", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ContactChannel resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ContactChannel Get(string name, Input<string> id, ContactChannelState? state = null, CustomResourceOptions? options = null)
        {
            return new ContactChannel(name, id, state, options);
        }
    }

    public sealed class ContactChannelArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the AWS SSM Contact that the contact channel belongs to.
        /// </summary>
        [Input("contactId", required: true)]
        public Input<string> ContactId { get; set; } = null!;

        /// <summary>
        /// Block that contains contact engagement details. See details below.
        /// </summary>
        [Input("deliveryAddress", required: true)]
        public Input<Inputs.ContactChannelDeliveryAddressArgs> DeliveryAddress { get; set; } = null!;

        /// <summary>
        /// Name of the contact channel.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Type of the contact channel. One of `SMS`, `VOICE` or `EMAIL`.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public ContactChannelArgs()
        {
        }
        public static new ContactChannelArgs Empty => new ContactChannelArgs();
    }

    public sealed class ContactChannelState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether the contact channel is activated. The contact channel must be activated to use it to engage the contact. One of `ACTIVATED` or `NOT_ACTIVATED`.
        /// </summary>
        [Input("activationStatus")]
        public Input<string>? ActivationStatus { get; set; }

        /// <summary>
        /// Amazon Resource Name (ARN) of the contact channel.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// Amazon Resource Name (ARN) of the AWS SSM Contact that the contact channel belongs to.
        /// </summary>
        [Input("contactId")]
        public Input<string>? ContactId { get; set; }

        /// <summary>
        /// Block that contains contact engagement details. See details below.
        /// </summary>
        [Input("deliveryAddress")]
        public Input<Inputs.ContactChannelDeliveryAddressGetArgs>? DeliveryAddress { get; set; }

        /// <summary>
        /// Name of the contact channel.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Type of the contact channel. One of `SMS`, `VOICE` or `EMAIL`.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public ContactChannelState()
        {
        }
        public static new ContactChannelState Empty => new ContactChannelState();
    }
}
