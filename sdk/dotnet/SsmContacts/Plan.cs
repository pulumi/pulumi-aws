// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.SsmContacts
{
    /// <summary>
    /// TODO resource for managing an AWS SSM Contact Plan.
    /// 
    /// ## Example Usage
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.SsmContacts.Plan("example", new()
    ///     {
    ///         ContactId = "arn:aws:ssm-contacts:us-west-2:123456789012:contact/contactalias",
    ///         Stages = new[]
    ///         {
    ///             new Aws.SsmContacts.Inputs.PlanStageArgs
    ///             {
    ///                 DurationInMinutes = 1,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### Usage with SSM Contact
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var contact = new Aws.SsmContacts.Contact("contact", new()
    ///     {
    ///         Alias = "alias",
    ///         Type = "PERSONAL",
    ///     });
    /// 
    ///     var plan = new Aws.SsmContacts.Plan("plan", new()
    ///     {
    ///         ContactId = contact.Arn,
    ///         Stages = new[]
    ///         {
    ///             new Aws.SsmContacts.Inputs.PlanStageArgs
    ///             {
    ///                 DurationInMinutes = 1,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### Usage With All Fields
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var escalationPlan = new Aws.SsmContacts.Contact("escalationPlan", new()
    ///     {
    ///         Alias = "escalation-plan-alias",
    ///         Type = "ESCALATION",
    ///     });
    /// 
    ///     var contactOne = new Aws.SsmContacts.Contact("contactOne", new()
    ///     {
    ///         Alias = "alias",
    ///         Type = "PERSONAL",
    ///     });
    /// 
    ///     var contactTwo = new Aws.SsmContacts.Contact("contactTwo", new()
    ///     {
    ///         Alias = "alias",
    ///         Type = "PERSONAL",
    ///     });
    /// 
    ///     var test = new Aws.SsmContacts.Plan("test", new()
    ///     {
    ///         ContactId = escalationPlan.Arn,
    ///         Stages = new[]
    ///         {
    ///             new Aws.SsmContacts.Inputs.PlanStageArgs
    ///             {
    ///                 DurationInMinutes = 0,
    ///                 Targets = new[]
    ///                 {
    ///                     new Aws.SsmContacts.Inputs.PlanStageTargetArgs
    ///                     {
    ///                         ContactTargetInfo = new Aws.SsmContacts.Inputs.PlanStageTargetContactTargetInfoArgs
    ///                         {
    ///                             IsEssential = false,
    ///                             ContactId = contactOne.Arn,
    ///                         },
    ///                     },
    ///                     new Aws.SsmContacts.Inputs.PlanStageTargetArgs
    ///                     {
    ///                         ContactTargetInfo = new Aws.SsmContacts.Inputs.PlanStageTargetContactTargetInfoArgs
    ///                         {
    ///                             IsEssential = true,
    ///                             ContactId = contactTwo.Arn,
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Import SSM Contact Plan using the Contact ARN. For example
    /// 
    /// ```sh
    ///  $ pulumi import aws:ssmcontacts/plan:Plan example {ARNValue}
    /// ```
    /// </summary>
    [AwsResourceType("aws:ssmcontacts/plan:Plan")]
    public partial class Plan : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the contact or escalation plan.
        /// </summary>
        [Output("contactId")]
        public Output<string> ContactId { get; private set; } = null!;

        /// <summary>
        /// List of stages. A contact has an engagement plan with stages that contact specified contact channels. An escalation plan uses stages that contact specified contacts.
        /// </summary>
        [Output("stages")]
        public Output<ImmutableArray<Outputs.PlanStage>> Stages { get; private set; } = null!;


        /// <summary>
        /// Create a Plan resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Plan(string name, PlanArgs args, CustomResourceOptions? options = null)
            : base("aws:ssmcontacts/plan:Plan", name, args ?? new PlanArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Plan(string name, Input<string> id, PlanState? state = null, CustomResourceOptions? options = null)
            : base("aws:ssmcontacts/plan:Plan", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Plan resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Plan Get(string name, Input<string> id, PlanState? state = null, CustomResourceOptions? options = null)
        {
            return new Plan(name, id, state, options);
        }
    }

    public sealed class PlanArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the contact or escalation plan.
        /// </summary>
        [Input("contactId", required: true)]
        public Input<string> ContactId { get; set; } = null!;

        [Input("stages", required: true)]
        private InputList<Inputs.PlanStageArgs>? _stages;

        /// <summary>
        /// List of stages. A contact has an engagement plan with stages that contact specified contact channels. An escalation plan uses stages that contact specified contacts.
        /// </summary>
        public InputList<Inputs.PlanStageArgs> Stages
        {
            get => _stages ?? (_stages = new InputList<Inputs.PlanStageArgs>());
            set => _stages = value;
        }

        public PlanArgs()
        {
        }
        public static new PlanArgs Empty => new PlanArgs();
    }

    public sealed class PlanState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the contact or escalation plan.
        /// </summary>
        [Input("contactId")]
        public Input<string>? ContactId { get; set; }

        [Input("stages")]
        private InputList<Inputs.PlanStageGetArgs>? _stages;

        /// <summary>
        /// List of stages. A contact has an engagement plan with stages that contact specified contact channels. An escalation plan uses stages that contact specified contacts.
        /// </summary>
        public InputList<Inputs.PlanStageGetArgs> Stages
        {
            get => _stages ?? (_stages = new InputList<Inputs.PlanStageGetArgs>());
            set => _stages = value;
        }

        public PlanState()
        {
        }
        public static new PlanState Empty => new PlanState();
    }
}
