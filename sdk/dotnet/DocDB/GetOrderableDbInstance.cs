// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.DocDB
{
    public static class GetOrderableDbInstance
    {
        public static Task<GetOrderableDbInstanceResult> InvokeAsync(GetOrderableDbInstanceArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOrderableDbInstanceResult>("aws:docdb/getOrderableDbInstance:getOrderableDbInstance", args ?? new GetOrderableDbInstanceArgs(), options.WithDefaults());

        public static Output<GetOrderableDbInstanceResult> Invoke(GetOrderableDbInstanceInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOrderableDbInstanceResult>("aws:docdb/getOrderableDbInstance:getOrderableDbInstance", args ?? new GetOrderableDbInstanceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOrderableDbInstanceArgs : global::Pulumi.InvokeArgs
    {
        [Input("engine")]
        public string? Engine { get; set; }

        [Input("engineVersion")]
        public string? EngineVersion { get; set; }

        [Input("instanceClass")]
        public string? InstanceClass { get; set; }

        [Input("licenseModel")]
        public string? LicenseModel { get; set; }

        [Input("preferredInstanceClasses")]
        private List<string>? _preferredInstanceClasses;
        public List<string> PreferredInstanceClasses
        {
            get => _preferredInstanceClasses ?? (_preferredInstanceClasses = new List<string>());
            set => _preferredInstanceClasses = value;
        }

        [Input("vpc")]
        public bool? Vpc { get; set; }

        public GetOrderableDbInstanceArgs()
        {
        }
        public static new GetOrderableDbInstanceArgs Empty => new GetOrderableDbInstanceArgs();
    }

    public sealed class GetOrderableDbInstanceInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("engine")]
        public Input<string>? Engine { get; set; }

        [Input("engineVersion")]
        public Input<string>? EngineVersion { get; set; }

        [Input("instanceClass")]
        public Input<string>? InstanceClass { get; set; }

        [Input("licenseModel")]
        public Input<string>? LicenseModel { get; set; }

        [Input("preferredInstanceClasses")]
        private InputList<string>? _preferredInstanceClasses;
        public InputList<string> PreferredInstanceClasses
        {
            get => _preferredInstanceClasses ?? (_preferredInstanceClasses = new InputList<string>());
            set => _preferredInstanceClasses = value;
        }

        [Input("vpc")]
        public Input<bool>? Vpc { get; set; }

        public GetOrderableDbInstanceInvokeArgs()
        {
        }
        public static new GetOrderableDbInstanceInvokeArgs Empty => new GetOrderableDbInstanceInvokeArgs();
    }


    [OutputType]
    public sealed class GetOrderableDbInstanceResult
    {
        public readonly ImmutableArray<string> AvailabilityZones;
        public readonly string? Engine;
        public readonly string EngineVersion;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string InstanceClass;
        public readonly string? LicenseModel;
        public readonly ImmutableArray<string> PreferredInstanceClasses;
        public readonly bool Vpc;

        [OutputConstructor]
        private GetOrderableDbInstanceResult(
            ImmutableArray<string> availabilityZones,

            string? engine,

            string engineVersion,

            string id,

            string instanceClass,

            string? licenseModel,

            ImmutableArray<string> preferredInstanceClasses,

            bool vpc)
        {
            AvailabilityZones = availabilityZones;
            Engine = engine;
            EngineVersion = engineVersion;
            Id = id;
            InstanceClass = instanceClass;
            LicenseModel = licenseModel;
            PreferredInstanceClasses = preferredInstanceClasses;
            Vpc = vpc;
        }
    }
}
