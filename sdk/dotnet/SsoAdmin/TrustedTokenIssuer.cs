// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.SsoAdmin
{
    /// <summary>
    /// Resource for managing an AWS SSO Admin Trusted Token Issuer.
    /// 
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import SSO Admin Trusted Token Issuer using the `id`. For example:
    /// 
    /// ```sh
    ///  $ pulumi import aws:ssoadmin/trustedTokenIssuer:TrustedTokenIssuer example arn:aws:sso::012345678901:trustedTokenIssuer/ssoins-lu1ye3gew4mbc7ju/tti-2657c556-9707-11ee-b9d1-0242ac120002
    /// ```
    /// </summary>
    [AwsResourceType("aws:ssoadmin/trustedTokenIssuer:TrustedTokenIssuer")]
    public partial class TrustedTokenIssuer : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ARN of the trusted token issuer.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// A unique, case-sensitive ID that you provide to ensure the idempotency of the request. AWS generates a random value when not provided.
        /// </summary>
        [Output("clientToken")]
        public Output<string?> ClientToken { get; private set; } = null!;

        /// <summary>
        /// ARN of the instance of IAM Identity Center.
        /// </summary>
        [Output("instanceArn")]
        public Output<string> InstanceArn { get; private set; } = null!;

        /// <summary>
        /// Name of the trusted token issuer.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        /// <summary>
        /// A block that specifies settings that apply to the trusted token issuer, these change depending on the type you specify in `trusted_token_issuer_type`. Documented below.
        /// </summary>
        [Output("trustedTokenIssuerConfiguration")]
        public Output<Outputs.TrustedTokenIssuerTrustedTokenIssuerConfiguration?> TrustedTokenIssuerConfiguration { get; private set; } = null!;

        /// <summary>
        /// Specifies the type of the trusted token issuer. Valid values are `OIDC_JWT`
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Output("trustedTokenIssuerType")]
        public Output<string> TrustedTokenIssuerType { get; private set; } = null!;


        /// <summary>
        /// Create a TrustedTokenIssuer resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TrustedTokenIssuer(string name, TrustedTokenIssuerArgs args, CustomResourceOptions? options = null)
            : base("aws:ssoadmin/trustedTokenIssuer:TrustedTokenIssuer", name, args ?? new TrustedTokenIssuerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TrustedTokenIssuer(string name, Input<string> id, TrustedTokenIssuerState? state = null, CustomResourceOptions? options = null)
            : base("aws:ssoadmin/trustedTokenIssuer:TrustedTokenIssuer", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "tagsAll",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TrustedTokenIssuer resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TrustedTokenIssuer Get(string name, Input<string> id, TrustedTokenIssuerState? state = null, CustomResourceOptions? options = null)
        {
            return new TrustedTokenIssuer(name, id, state, options);
        }
    }

    public sealed class TrustedTokenIssuerArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A unique, case-sensitive ID that you provide to ensure the idempotency of the request. AWS generates a random value when not provided.
        /// </summary>
        [Input("clientToken")]
        public Input<string>? ClientToken { get; set; }

        /// <summary>
        /// ARN of the instance of IAM Identity Center.
        /// </summary>
        [Input("instanceArn", required: true)]
        public Input<string> InstanceArn { get; set; } = null!;

        /// <summary>
        /// Name of the trusted token issuer.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// A block that specifies settings that apply to the trusted token issuer, these change depending on the type you specify in `trusted_token_issuer_type`. Documented below.
        /// </summary>
        [Input("trustedTokenIssuerConfiguration")]
        public Input<Inputs.TrustedTokenIssuerTrustedTokenIssuerConfigurationArgs>? TrustedTokenIssuerConfiguration { get; set; }

        /// <summary>
        /// Specifies the type of the trusted token issuer. Valid values are `OIDC_JWT`
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("trustedTokenIssuerType", required: true)]
        public Input<string> TrustedTokenIssuerType { get; set; } = null!;

        public TrustedTokenIssuerArgs()
        {
        }
        public static new TrustedTokenIssuerArgs Empty => new TrustedTokenIssuerArgs();
    }

    public sealed class TrustedTokenIssuerState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ARN of the trusted token issuer.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// A unique, case-sensitive ID that you provide to ensure the idempotency of the request. AWS generates a random value when not provided.
        /// </summary>
        [Input("clientToken")]
        public Input<string>? ClientToken { get; set; }

        /// <summary>
        /// ARN of the instance of IAM Identity Center.
        /// </summary>
        [Input("instanceArn")]
        public Input<string>? InstanceArn { get; set; }

        /// <summary>
        /// Name of the trusted token issuer.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Obsolete(@"Please use `tags` instead.")]
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableDictionary.Create<string, string>());
                _tagsAll = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        /// <summary>
        /// A block that specifies settings that apply to the trusted token issuer, these change depending on the type you specify in `trusted_token_issuer_type`. Documented below.
        /// </summary>
        [Input("trustedTokenIssuerConfiguration")]
        public Input<Inputs.TrustedTokenIssuerTrustedTokenIssuerConfigurationGetArgs>? TrustedTokenIssuerConfiguration { get; set; }

        /// <summary>
        /// Specifies the type of the trusted token issuer. Valid values are `OIDC_JWT`
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("trustedTokenIssuerType")]
        public Input<string>? TrustedTokenIssuerType { get; set; }

        public TrustedTokenIssuerState()
        {
        }
        public static new TrustedTokenIssuerState Empty => new TrustedTokenIssuerState();
    }
}
