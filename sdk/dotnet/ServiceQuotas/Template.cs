// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.ServiceQuotas
{
    /// <summary>
    /// Resource for managing an AWS Service Quotas Template.
    /// 
    /// &gt; Only the management account of an organization can alter Service Quota templates, and this must be done from the `us-east-1` region.
    /// 
    /// ## Example Usage
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.ServiceQuotas.Template("example", new()
    ///     {
    ///         QuotaCode = "L-2ACBD22F",
    ///         Region = "us-east-1",
    ///         ServiceCode = "lambda",
    ///         Value = 80,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import Service Quotas Template using the `id`. For example:
    /// 
    /// ```sh
    ///  $ pulumi import aws:servicequotas/template:Template example us-east-1,L-2ACBD22F,lambda
    /// ```
    /// </summary>
    [AwsResourceType("aws:servicequotas/template:Template")]
    public partial class Template : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Indicates whether the quota is global.
        /// </summary>
        [Output("globalQuota")]
        public Output<bool> GlobalQuota { get; private set; } = null!;

        /// <summary>
        /// Quota identifier. To find the quota code for a specific quota, use the aws.servicequotas.ServiceQuota data source.
        /// </summary>
        [Output("quotaCode")]
        public Output<string> QuotaCode { get; private set; } = null!;

        /// <summary>
        /// Quota name.
        /// </summary>
        [Output("quotaName")]
        public Output<string> QuotaName { get; private set; } = null!;

        /// <summary>
        /// AWS Region to which the template applies.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// Service identifier. To find the service code value for an AWS service, use the aws.servicequotas.getService data source.
        /// </summary>
        [Output("serviceCode")]
        public Output<string> ServiceCode { get; private set; } = null!;

        /// <summary>
        /// Service name.
        /// </summary>
        [Output("serviceName")]
        public Output<string> ServiceName { get; private set; } = null!;

        /// <summary>
        /// Unit of measurement.
        /// </summary>
        [Output("unit")]
        public Output<string> Unit { get; private set; } = null!;

        /// <summary>
        /// The new, increased value for the quota.
        /// </summary>
        [Output("value")]
        public Output<double> Value { get; private set; } = null!;


        /// <summary>
        /// Create a Template resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Template(string name, TemplateArgs args, CustomResourceOptions? options = null)
            : base("aws:servicequotas/template:Template", name, args ?? new TemplateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Template(string name, Input<string> id, TemplateState? state = null, CustomResourceOptions? options = null)
            : base("aws:servicequotas/template:Template", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Template resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Template Get(string name, Input<string> id, TemplateState? state = null, CustomResourceOptions? options = null)
        {
            return new Template(name, id, state, options);
        }
    }

    public sealed class TemplateArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Quota identifier. To find the quota code for a specific quota, use the aws.servicequotas.ServiceQuota data source.
        /// </summary>
        [Input("quotaCode", required: true)]
        public Input<string> QuotaCode { get; set; } = null!;

        /// <summary>
        /// AWS Region to which the template applies.
        /// </summary>
        [Input("region", required: true)]
        public Input<string> Region { get; set; } = null!;

        /// <summary>
        /// Service identifier. To find the service code value for an AWS service, use the aws.servicequotas.getService data source.
        /// </summary>
        [Input("serviceCode", required: true)]
        public Input<string> ServiceCode { get; set; } = null!;

        /// <summary>
        /// The new, increased value for the quota.
        /// </summary>
        [Input("value", required: true)]
        public Input<double> Value { get; set; } = null!;

        public TemplateArgs()
        {
        }
        public static new TemplateArgs Empty => new TemplateArgs();
    }

    public sealed class TemplateState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Indicates whether the quota is global.
        /// </summary>
        [Input("globalQuota")]
        public Input<bool>? GlobalQuota { get; set; }

        /// <summary>
        /// Quota identifier. To find the quota code for a specific quota, use the aws.servicequotas.ServiceQuota data source.
        /// </summary>
        [Input("quotaCode")]
        public Input<string>? QuotaCode { get; set; }

        /// <summary>
        /// Quota name.
        /// </summary>
        [Input("quotaName")]
        public Input<string>? QuotaName { get; set; }

        /// <summary>
        /// AWS Region to which the template applies.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Service identifier. To find the service code value for an AWS service, use the aws.servicequotas.getService data source.
        /// </summary>
        [Input("serviceCode")]
        public Input<string>? ServiceCode { get; set; }

        /// <summary>
        /// Service name.
        /// </summary>
        [Input("serviceName")]
        public Input<string>? ServiceName { get; set; }

        /// <summary>
        /// Unit of measurement.
        /// </summary>
        [Input("unit")]
        public Input<string>? Unit { get; set; }

        /// <summary>
        /// The new, increased value for the quota.
        /// </summary>
        [Input("value")]
        public Input<double>? Value { get; set; }

        public TemplateState()
        {
        }
        public static new TemplateState Empty => new TemplateState();
    }
}
