// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.ServiceQuotas
{
    public static class GetServiceQuota
    {
        /// <summary>
        /// Retrieve information about a Service Quota.
        /// 
        /// &gt; **NOTE:** Global quotas apply to all AWS regions, but can only be accessed in `us-east-1` in the Commercial partition or `us-gov-west-1` in the GovCloud partition. In other regions, the AWS API will return the error `The request failed because the specified service does not exist.`
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const byQuotaCode = aws.servicequotas.getServiceQuota({
        ///     quotaCode: "L-F678F1CE",
        ///     serviceCode: "vpc",
        /// });
        /// const byQuotaName = aws.servicequotas.getServiceQuota({
        ///     quotaName: "VPCs per Region",
        ///     serviceCode: "vpc",
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// by_quota_code = aws.servicequotas.get_service_quota(quota_code="L-F678F1CE",
        ///     service_code="vpc")
        /// by_quota_name = aws.servicequotas.get_service_quota(quota_name="VPCs per Region",
        ///     service_code="vpc")
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var byQuotaCode = Aws.ServiceQuotas.GetServiceQuota.Invoke(new()
        ///     {
        ///         QuotaCode = "L-F678F1CE",
        ///         ServiceCode = "vpc",
        ///     });
        /// 
        ///     var byQuotaName = Aws.ServiceQuotas.GetServiceQuota.Invoke(new()
        ///     {
        ///         QuotaName = "VPCs per Region",
        ///         ServiceCode = "vpc",
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/servicequotas"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := servicequotas.LookupServiceQuota(ctx, &amp;servicequotas.LookupServiceQuotaArgs{
        /// 			QuotaCode:   pulumi.StringRef("L-F678F1CE"),
        /// 			ServiceCode: "vpc",
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		_, err = servicequotas.LookupServiceQuota(ctx, &amp;servicequotas.LookupServiceQuotaArgs{
        /// 			QuotaName:   pulumi.StringRef("VPCs per Region"),
        /// 			ServiceCode: "vpc",
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.servicequotas.ServicequotasFunctions;
        /// import com.pulumi.aws.servicequotas.inputs.GetServiceQuotaArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var byQuotaCode = ServicequotasFunctions.getServiceQuota(GetServiceQuotaArgs.builder()
        ///             .quotaCode("L-F678F1CE")
        ///             .serviceCode("vpc")
        ///             .build());
        /// 
        ///         final var byQuotaName = ServicequotasFunctions.getServiceQuota(GetServiceQuotaArgs.builder()
        ///             .quotaName("VPCs per Region")
        ///             .serviceCode("vpc")
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   byQuotaCode:
        ///     fn::invoke:
        ///       Function: aws:servicequotas:getServiceQuota
        ///       Arguments:
        ///         quotaCode: L-F678F1CE
        ///         serviceCode: vpc
        ///   byQuotaName:
        ///     fn::invoke:
        ///       Function: aws:servicequotas:getServiceQuota
        ///       Arguments:
        ///         quotaName: VPCs per Region
        ///         serviceCode: vpc
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetServiceQuotaResult> InvokeAsync(GetServiceQuotaArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetServiceQuotaResult>("aws:servicequotas/getServiceQuota:getServiceQuota", args ?? new GetServiceQuotaArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieve information about a Service Quota.
        /// 
        /// &gt; **NOTE:** Global quotas apply to all AWS regions, but can only be accessed in `us-east-1` in the Commercial partition or `us-gov-west-1` in the GovCloud partition. In other regions, the AWS API will return the error `The request failed because the specified service does not exist.`
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const byQuotaCode = aws.servicequotas.getServiceQuota({
        ///     quotaCode: "L-F678F1CE",
        ///     serviceCode: "vpc",
        /// });
        /// const byQuotaName = aws.servicequotas.getServiceQuota({
        ///     quotaName: "VPCs per Region",
        ///     serviceCode: "vpc",
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// by_quota_code = aws.servicequotas.get_service_quota(quota_code="L-F678F1CE",
        ///     service_code="vpc")
        /// by_quota_name = aws.servicequotas.get_service_quota(quota_name="VPCs per Region",
        ///     service_code="vpc")
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var byQuotaCode = Aws.ServiceQuotas.GetServiceQuota.Invoke(new()
        ///     {
        ///         QuotaCode = "L-F678F1CE",
        ///         ServiceCode = "vpc",
        ///     });
        /// 
        ///     var byQuotaName = Aws.ServiceQuotas.GetServiceQuota.Invoke(new()
        ///     {
        ///         QuotaName = "VPCs per Region",
        ///         ServiceCode = "vpc",
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/servicequotas"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := servicequotas.LookupServiceQuota(ctx, &amp;servicequotas.LookupServiceQuotaArgs{
        /// 			QuotaCode:   pulumi.StringRef("L-F678F1CE"),
        /// 			ServiceCode: "vpc",
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		_, err = servicequotas.LookupServiceQuota(ctx, &amp;servicequotas.LookupServiceQuotaArgs{
        /// 			QuotaName:   pulumi.StringRef("VPCs per Region"),
        /// 			ServiceCode: "vpc",
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.servicequotas.ServicequotasFunctions;
        /// import com.pulumi.aws.servicequotas.inputs.GetServiceQuotaArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var byQuotaCode = ServicequotasFunctions.getServiceQuota(GetServiceQuotaArgs.builder()
        ///             .quotaCode("L-F678F1CE")
        ///             .serviceCode("vpc")
        ///             .build());
        /// 
        ///         final var byQuotaName = ServicequotasFunctions.getServiceQuota(GetServiceQuotaArgs.builder()
        ///             .quotaName("VPCs per Region")
        ///             .serviceCode("vpc")
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   byQuotaCode:
        ///     fn::invoke:
        ///       Function: aws:servicequotas:getServiceQuota
        ///       Arguments:
        ///         quotaCode: L-F678F1CE
        ///         serviceCode: vpc
        ///   byQuotaName:
        ///     fn::invoke:
        ///       Function: aws:servicequotas:getServiceQuota
        ///       Arguments:
        ///         quotaName: VPCs per Region
        ///         serviceCode: vpc
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetServiceQuotaResult> Invoke(GetServiceQuotaInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetServiceQuotaResult>("aws:servicequotas/getServiceQuota:getServiceQuota", args ?? new GetServiceQuotaInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServiceQuotaArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Quota code within the service. When configured, the data source directly looks up the service quota. Available values can be found with the [AWS CLI service-quotas list-service-quotas command](https://docs.aws.amazon.com/cli/latest/reference/service-quotas/list-service-quotas.html). One of `quota_code` or `quota_name` must be specified.
        /// </summary>
        [Input("quotaCode")]
        public string? QuotaCode { get; set; }

        /// <summary>
        /// Quota name within the service. When configured, the data source searches through all service quotas to find the matching quota name. Available values can be found with the [AWS CLI service-quotas list-service-quotas command](https://docs.aws.amazon.com/cli/latest/reference/service-quotas/list-service-quotas.html). One of `quota_name` or `quota_code` must be specified.
        /// </summary>
        [Input("quotaName")]
        public string? QuotaName { get; set; }

        /// <summary>
        /// Service code for the quota. Available values can be found with the `aws.servicequotas.getService` data source or [AWS CLI service-quotas list-services command](https://docs.aws.amazon.com/cli/latest/reference/service-quotas/list-services.html).
        /// </summary>
        [Input("serviceCode", required: true)]
        public string ServiceCode { get; set; } = null!;

        public GetServiceQuotaArgs()
        {
        }
        public static new GetServiceQuotaArgs Empty => new GetServiceQuotaArgs();
    }

    public sealed class GetServiceQuotaInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Quota code within the service. When configured, the data source directly looks up the service quota. Available values can be found with the [AWS CLI service-quotas list-service-quotas command](https://docs.aws.amazon.com/cli/latest/reference/service-quotas/list-service-quotas.html). One of `quota_code` or `quota_name` must be specified.
        /// </summary>
        [Input("quotaCode")]
        public Input<string>? QuotaCode { get; set; }

        /// <summary>
        /// Quota name within the service. When configured, the data source searches through all service quotas to find the matching quota name. Available values can be found with the [AWS CLI service-quotas list-service-quotas command](https://docs.aws.amazon.com/cli/latest/reference/service-quotas/list-service-quotas.html). One of `quota_name` or `quota_code` must be specified.
        /// </summary>
        [Input("quotaName")]
        public Input<string>? QuotaName { get; set; }

        /// <summary>
        /// Service code for the quota. Available values can be found with the `aws.servicequotas.getService` data source or [AWS CLI service-quotas list-services command](https://docs.aws.amazon.com/cli/latest/reference/service-quotas/list-services.html).
        /// </summary>
        [Input("serviceCode", required: true)]
        public Input<string> ServiceCode { get; set; } = null!;

        public GetServiceQuotaInvokeArgs()
        {
        }
        public static new GetServiceQuotaInvokeArgs Empty => new GetServiceQuotaInvokeArgs();
    }


    [OutputType]
    public sealed class GetServiceQuotaResult
    {
        /// <summary>
        /// Whether the service quota is adjustable.
        /// </summary>
        public readonly bool Adjustable;
        /// <summary>
        /// ARN of the service quota.
        /// </summary>
        public readonly string Arn;
        /// <summary>
        /// Default value of the service quota.
        /// </summary>
        public readonly double DefaultValue;
        /// <summary>
        /// Whether the service quota is global for the AWS account.
        /// </summary>
        public readonly bool GlobalQuota;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string QuotaCode;
        public readonly string QuotaName;
        public readonly string ServiceCode;
        /// <summary>
        /// Name of the service.
        /// </summary>
        public readonly string ServiceName;
        /// <summary>
        /// Information about the measurement.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetServiceQuotaUsageMetricResult> UsageMetrics;
        /// <summary>
        /// Current value of the service quota.
        /// </summary>
        public readonly double Value;

        [OutputConstructor]
        private GetServiceQuotaResult(
            bool adjustable,

            string arn,

            double defaultValue,

            bool globalQuota,

            string id,

            string quotaCode,

            string quotaName,

            string serviceCode,

            string serviceName,

            ImmutableArray<Outputs.GetServiceQuotaUsageMetricResult> usageMetrics,

            double value)
        {
            Adjustable = adjustable;
            Arn = arn;
            DefaultValue = defaultValue;
            GlobalQuota = globalQuota;
            Id = id;
            QuotaCode = quotaCode;
            QuotaName = quotaName;
            ServiceCode = serviceCode;
            ServiceName = serviceName;
            UsageMetrics = usageMetrics;
            Value = value;
        }
    }
}
