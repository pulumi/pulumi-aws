// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.ServiceDiscovery
{
    public static class GetDnsNamespace
    {
        /// <summary>
        /// Retrieves information about a Service Discovery private or public DNS namespace.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const test = aws.servicediscovery.getDnsNamespace({
        ///     name: "example.service.local",
        ///     type: "DNS_PRIVATE",
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// test = aws.servicediscovery.get_dns_namespace(name="example.service.local",
        ///     type="DNS_PRIVATE")
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.ServiceDiscovery.GetDnsNamespace.Invoke(new()
        ///     {
        ///         Name = "example.service.local",
        ///         Type = "DNS_PRIVATE",
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/servicediscovery"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := servicediscovery.GetDnsNamespace(ctx, &amp;servicediscovery.GetDnsNamespaceArgs{
        /// 			Name: "example.service.local",
        /// 			Type: "DNS_PRIVATE",
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.servicediscovery.ServicediscoveryFunctions;
        /// import com.pulumi.aws.servicediscovery.inputs.GetDnsNamespaceArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var test = ServicediscoveryFunctions.getDnsNamespace(GetDnsNamespaceArgs.builder()
        ///             .name("example.service.local")
        ///             .type("DNS_PRIVATE")
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   test:
        ///     fn::invoke:
        ///       Function: aws:servicediscovery:getDnsNamespace
        ///       Arguments:
        ///         name: example.service.local
        ///         type: DNS_PRIVATE
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetDnsNamespaceResult> InvokeAsync(GetDnsNamespaceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDnsNamespaceResult>("aws:servicediscovery/getDnsNamespace:getDnsNamespace", args ?? new GetDnsNamespaceArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves information about a Service Discovery private or public DNS namespace.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const test = aws.servicediscovery.getDnsNamespace({
        ///     name: "example.service.local",
        ///     type: "DNS_PRIVATE",
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// test = aws.servicediscovery.get_dns_namespace(name="example.service.local",
        ///     type="DNS_PRIVATE")
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.ServiceDiscovery.GetDnsNamespace.Invoke(new()
        ///     {
        ///         Name = "example.service.local",
        ///         Type = "DNS_PRIVATE",
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/servicediscovery"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := servicediscovery.GetDnsNamespace(ctx, &amp;servicediscovery.GetDnsNamespaceArgs{
        /// 			Name: "example.service.local",
        /// 			Type: "DNS_PRIVATE",
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.servicediscovery.ServicediscoveryFunctions;
        /// import com.pulumi.aws.servicediscovery.inputs.GetDnsNamespaceArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var test = ServicediscoveryFunctions.getDnsNamespace(GetDnsNamespaceArgs.builder()
        ///             .name("example.service.local")
        ///             .type("DNS_PRIVATE")
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   test:
        ///     fn::invoke:
        ///       Function: aws:servicediscovery:getDnsNamespace
        ///       Arguments:
        ///         name: example.service.local
        ///         type: DNS_PRIVATE
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetDnsNamespaceResult> Invoke(GetDnsNamespaceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDnsNamespaceResult>("aws:servicediscovery/getDnsNamespace:getDnsNamespace", args ?? new GetDnsNamespaceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDnsNamespaceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the namespace.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("tags")]
        private Dictionary<string, string>? _tags;

        /// <summary>
        /// Map of tags for the resource.
        /// </summary>
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        /// <summary>
        /// Type of the namespace. Allowed values are `DNS_PUBLIC` or `DNS_PRIVATE`.
        /// </summary>
        [Input("type", required: true)]
        public string Type { get; set; } = null!;

        public GetDnsNamespaceArgs()
        {
        }
        public static new GetDnsNamespaceArgs Empty => new GetDnsNamespaceArgs();
    }

    public sealed class GetDnsNamespaceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the namespace.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Map of tags for the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Type of the namespace. Allowed values are `DNS_PUBLIC` or `DNS_PRIVATE`.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public GetDnsNamespaceInvokeArgs()
        {
        }
        public static new GetDnsNamespaceInvokeArgs Empty => new GetDnsNamespaceInvokeArgs();
    }


    [OutputType]
    public sealed class GetDnsNamespaceResult
    {
        /// <summary>
        /// ARN of the namespace.
        /// </summary>
        public readonly string Arn;
        /// <summary>
        /// Description of the namespace.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// ID for the hosted zone that Amazon Route 53 creates when you create a namespace.
        /// </summary>
        public readonly string HostedZone;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        /// <summary>
        /// Map of tags for the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        public readonly string Type;

        [OutputConstructor]
        private GetDnsNamespaceResult(
            string arn,

            string description,

            string hostedZone,

            string id,

            string name,

            ImmutableDictionary<string, string> tags,

            string type)
        {
            Arn = arn;
            Description = description;
            HostedZone = hostedZone;
            Id = id;
            Name = name;
            Tags = tags;
            Type = type;
        }
    }
}
