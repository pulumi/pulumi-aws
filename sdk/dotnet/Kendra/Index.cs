// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Kendra
{
    [AwsResourceType("aws:kendra/index:Index")]
    public partial class Index : global::Pulumi.CustomResource
    {
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("capacityUnits")]
        public Output<Outputs.IndexCapacityUnits> CapacityUnits { get; private set; } = null!;

        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("documentMetadataConfigurationUpdates")]
        public Output<ImmutableArray<Outputs.IndexDocumentMetadataConfigurationUpdate>> DocumentMetadataConfigurationUpdates { get; private set; } = null!;

        [Output("edition")]
        public Output<string?> Edition { get; private set; } = null!;

        [Output("errorMessage")]
        public Output<string> ErrorMessage { get; private set; } = null!;

        [Output("indexStatistics")]
        public Output<ImmutableArray<Outputs.IndexIndexStatistic>> IndexStatistics { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("roleArn")]
        public Output<string> RoleArn { get; private set; } = null!;

        [Output("serverSideEncryptionConfiguration")]
        public Output<Outputs.IndexServerSideEncryptionConfiguration?> ServerSideEncryptionConfiguration { get; private set; } = null!;

        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;

        [Output("userContextPolicy")]
        public Output<string?> UserContextPolicy { get; private set; } = null!;

        [Output("userGroupResolutionConfiguration")]
        public Output<Outputs.IndexUserGroupResolutionConfiguration?> UserGroupResolutionConfiguration { get; private set; } = null!;

        [Output("userTokenConfigurations")]
        public Output<Outputs.IndexUserTokenConfigurations?> UserTokenConfigurations { get; private set; } = null!;


        /// <summary>
        /// Create a Index resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Index(string name, IndexArgs args, CustomResourceOptions? options = null)
            : base("aws:kendra/index:Index", name, args ?? new IndexArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Index(string name, Input<string> id, IndexState? state = null, CustomResourceOptions? options = null)
            : base("aws:kendra/index:Index", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Index resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Index Get(string name, Input<string> id, IndexState? state = null, CustomResourceOptions? options = null)
        {
            return new Index(name, id, state, options);
        }
    }

    public sealed class IndexArgs : global::Pulumi.ResourceArgs
    {
        [Input("capacityUnits")]
        public Input<Inputs.IndexCapacityUnitsArgs>? CapacityUnits { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("documentMetadataConfigurationUpdates")]
        private InputList<Inputs.IndexDocumentMetadataConfigurationUpdateArgs>? _documentMetadataConfigurationUpdates;
        public InputList<Inputs.IndexDocumentMetadataConfigurationUpdateArgs> DocumentMetadataConfigurationUpdates
        {
            get => _documentMetadataConfigurationUpdates ?? (_documentMetadataConfigurationUpdates = new InputList<Inputs.IndexDocumentMetadataConfigurationUpdateArgs>());
            set => _documentMetadataConfigurationUpdates = value;
        }

        [Input("edition")]
        public Input<string>? Edition { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("roleArn", required: true)]
        public Input<string> RoleArn { get; set; } = null!;

        [Input("serverSideEncryptionConfiguration")]
        public Input<Inputs.IndexServerSideEncryptionConfigurationArgs>? ServerSideEncryptionConfiguration { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("userContextPolicy")]
        public Input<string>? UserContextPolicy { get; set; }

        [Input("userGroupResolutionConfiguration")]
        public Input<Inputs.IndexUserGroupResolutionConfigurationArgs>? UserGroupResolutionConfiguration { get; set; }

        [Input("userTokenConfigurations")]
        public Input<Inputs.IndexUserTokenConfigurationsArgs>? UserTokenConfigurations { get; set; }

        public IndexArgs()
        {
        }
        public static new IndexArgs Empty => new IndexArgs();
    }

    public sealed class IndexState : global::Pulumi.ResourceArgs
    {
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("capacityUnits")]
        public Input<Inputs.IndexCapacityUnitsGetArgs>? CapacityUnits { get; set; }

        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("documentMetadataConfigurationUpdates")]
        private InputList<Inputs.IndexDocumentMetadataConfigurationUpdateGetArgs>? _documentMetadataConfigurationUpdates;
        public InputList<Inputs.IndexDocumentMetadataConfigurationUpdateGetArgs> DocumentMetadataConfigurationUpdates
        {
            get => _documentMetadataConfigurationUpdates ?? (_documentMetadataConfigurationUpdates = new InputList<Inputs.IndexDocumentMetadataConfigurationUpdateGetArgs>());
            set => _documentMetadataConfigurationUpdates = value;
        }

        [Input("edition")]
        public Input<string>? Edition { get; set; }

        [Input("errorMessage")]
        public Input<string>? ErrorMessage { get; set; }

        [Input("indexStatistics")]
        private InputList<Inputs.IndexIndexStatisticGetArgs>? _indexStatistics;
        public InputList<Inputs.IndexIndexStatisticGetArgs> IndexStatistics
        {
            get => _indexStatistics ?? (_indexStatistics = new InputList<Inputs.IndexIndexStatisticGetArgs>());
            set => _indexStatistics = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("roleArn")]
        public Input<string>? RoleArn { get; set; }

        [Input("serverSideEncryptionConfiguration")]
        public Input<Inputs.IndexServerSideEncryptionConfigurationGetArgs>? ServerSideEncryptionConfiguration { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        [Input("userContextPolicy")]
        public Input<string>? UserContextPolicy { get; set; }

        [Input("userGroupResolutionConfiguration")]
        public Input<Inputs.IndexUserGroupResolutionConfigurationGetArgs>? UserGroupResolutionConfiguration { get; set; }

        [Input("userTokenConfigurations")]
        public Input<Inputs.IndexUserTokenConfigurationsGetArgs>? UserTokenConfigurations { get; set; }

        public IndexState()
        {
        }
        public static new IndexState Empty => new IndexState();
    }
}
