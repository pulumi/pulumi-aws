// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Kendra
{
    public static class GetIndex
    {
        /// <summary>
        /// Provides details about a specific Amazon Kendra Index.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Kendra.GetIndex.Invoke(new()
        ///     {
        ///         Id = "12345678-1234-1234-1234-123456789123",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetIndexResult> InvokeAsync(GetIndexArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIndexResult>("aws:kendra/getIndex:getIndex", args ?? new GetIndexArgs(), options.WithDefaults());

        /// <summary>
        /// Provides details about a specific Amazon Kendra Index.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Kendra.GetIndex.Invoke(new()
        ///     {
        ///         Id = "12345678-1234-1234-1234-123456789123",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetIndexResult> Invoke(GetIndexInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIndexResult>("aws:kendra/getIndex:getIndex", args ?? new GetIndexInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIndexArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Returns information on a specific Index by id.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        [Input("tags")]
        private Dictionary<string, string>? _tags;

        /// <summary>
        /// Metadata that helps organize the Indices you create.
        /// </summary>
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetIndexArgs()
        {
        }
        public static new GetIndexArgs Empty => new GetIndexArgs();
    }

    public sealed class GetIndexInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Returns information on a specific Index by id.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Metadata that helps organize the Indices you create.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetIndexInvokeArgs()
        {
        }
        public static new GetIndexInvokeArgs Empty => new GetIndexInvokeArgs();
    }


    [OutputType]
    public sealed class GetIndexResult
    {
        /// <summary>
        /// ARN of the Index.
        /// </summary>
        public readonly string Arn;
        /// <summary>
        /// Block that sets the number of additional document storage and query capacity units that should be used by the index. Documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetIndexCapacityUnitResult> CapacityUnits;
        /// <summary>
        /// Unix datetime that the index was created.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// Description of the Index.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// One or more blocks that specify the configuration settings for any metadata applied to the documents in the index. Documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetIndexDocumentMetadataConfigurationUpdateResult> DocumentMetadataConfigurationUpdates;
        /// <summary>
        /// Amazon Kendra edition for the index.
        /// </summary>
        public readonly string Edition;
        /// <summary>
        /// When the Status field value is `FAILED`, this contains a message that explains why.
        /// </summary>
        public readonly string ErrorMessage;
        /// <summary>
        /// Identifier of the Index.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Block that provides information about the number of FAQ questions and answers and the number of text documents indexed. Documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetIndexIndexStatisticResult> IndexStatistics;
        /// <summary>
        /// Name of the index field. Minimum length of 1. Maximum length of 30.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// An AWS Identity and Access Management (IAM) role that gives Amazon Kendra permissions to access your Amazon CloudWatch logs and metrics. This is also the role you use when you call the `BatchPutDocument` API to index documents from an Amazon S3 bucket.
        /// </summary>
        public readonly string RoleArn;
        /// <summary>
        /// A block that specifies the identifier of the AWS KMS customer managed key (CMK) that's used to encrypt data indexed by Amazon Kendra. Amazon Kendra doesn't support asymmetric CMKs. Documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetIndexServerSideEncryptionConfigurationResult> ServerSideEncryptionConfigurations;
        /// <summary>
        /// Current status of the index. When the value is `ACTIVE`, the index is ready for use. If the Status field value is `FAILED`, the `error_message` field contains a message that explains why.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Metadata that helps organize the Indices you create.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// Unix datetime that the index was last updated.
        /// </summary>
        public readonly string UpdatedAt;
        /// <summary>
        /// User context policy. Valid values are `ATTRIBUTE_FILTER` or `USER_TOKEN`. For more information, refer to [UserContextPolicy](https://docs.aws.amazon.com/kendra/latest/dg/API_CreateIndex.
        /// html#Kendra-CreateIndex-request-UserContextPolicy).
        /// </summary>
        public readonly string UserContextPolicy;
        /// <summary>
        /// A block that enables fetching access levels of groups and users from an AWS Single Sign-On identity source. Documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetIndexUserGroupResolutionConfigurationResult> UserGroupResolutionConfigurations;
        /// <summary>
        /// A block that specifies the user token configuration. Documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetIndexUserTokenConfigurationResult> UserTokenConfigurations;

        [OutputConstructor]
        private GetIndexResult(
            string arn,

            ImmutableArray<Outputs.GetIndexCapacityUnitResult> capacityUnits,

            string createdAt,

            string description,

            ImmutableArray<Outputs.GetIndexDocumentMetadataConfigurationUpdateResult> documentMetadataConfigurationUpdates,

            string edition,

            string errorMessage,

            string id,

            ImmutableArray<Outputs.GetIndexIndexStatisticResult> indexStatistics,

            string name,

            string roleArn,

            ImmutableArray<Outputs.GetIndexServerSideEncryptionConfigurationResult> serverSideEncryptionConfigurations,

            string status,

            ImmutableDictionary<string, string> tags,

            string updatedAt,

            string userContextPolicy,

            ImmutableArray<Outputs.GetIndexUserGroupResolutionConfigurationResult> userGroupResolutionConfigurations,

            ImmutableArray<Outputs.GetIndexUserTokenConfigurationResult> userTokenConfigurations)
        {
            Arn = arn;
            CapacityUnits = capacityUnits;
            CreatedAt = createdAt;
            Description = description;
            DocumentMetadataConfigurationUpdates = documentMetadataConfigurationUpdates;
            Edition = edition;
            ErrorMessage = errorMessage;
            Id = id;
            IndexStatistics = indexStatistics;
            Name = name;
            RoleArn = roleArn;
            ServerSideEncryptionConfigurations = serverSideEncryptionConfigurations;
            Status = status;
            Tags = tags;
            UpdatedAt = updatedAt;
            UserContextPolicy = userContextPolicy;
            UserGroupResolutionConfigurations = userGroupResolutionConfigurations;
            UserTokenConfigurations = userTokenConfigurations;
        }
    }
}
