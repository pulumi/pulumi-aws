// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Kendra
{
    public static class GetQuerySuggestionsBlockList
    {
        public static Task<GetQuerySuggestionsBlockListResult> InvokeAsync(GetQuerySuggestionsBlockListArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetQuerySuggestionsBlockListResult>("aws:kendra/getQuerySuggestionsBlockList:getQuerySuggestionsBlockList", args ?? new GetQuerySuggestionsBlockListArgs(), options.WithDefaults());

        public static Output<GetQuerySuggestionsBlockListResult> Invoke(GetQuerySuggestionsBlockListInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetQuerySuggestionsBlockListResult>("aws:kendra/getQuerySuggestionsBlockList:getQuerySuggestionsBlockList", args ?? new GetQuerySuggestionsBlockListInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetQuerySuggestionsBlockListArgs : global::Pulumi.InvokeArgs
    {
        [Input("indexId", required: true)]
        public string IndexId { get; set; } = null!;

        [Input("querySuggestionsBlockListId", required: true)]
        public string QuerySuggestionsBlockListId { get; set; } = null!;

        [Input("tags")]
        private Dictionary<string, string>? _tags;
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetQuerySuggestionsBlockListArgs()
        {
        }
        public static new GetQuerySuggestionsBlockListArgs Empty => new GetQuerySuggestionsBlockListArgs();
    }

    public sealed class GetQuerySuggestionsBlockListInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("indexId", required: true)]
        public Input<string> IndexId { get; set; } = null!;

        [Input("querySuggestionsBlockListId", required: true)]
        public Input<string> QuerySuggestionsBlockListId { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetQuerySuggestionsBlockListInvokeArgs()
        {
        }
        public static new GetQuerySuggestionsBlockListInvokeArgs Empty => new GetQuerySuggestionsBlockListInvokeArgs();
    }


    [OutputType]
    public sealed class GetQuerySuggestionsBlockListResult
    {
        public readonly string Arn;
        public readonly string CreatedAt;
        public readonly string Description;
        public readonly string ErrorMessage;
        public readonly int FileSizeBytes;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string IndexId;
        public readonly int ItemCount;
        public readonly string Name;
        public readonly string QuerySuggestionsBlockListId;
        public readonly string RoleArn;
        public readonly ImmutableArray<Outputs.GetQuerySuggestionsBlockListSourceS3PathResult> SourceS3Paths;
        public readonly string Status;
        public readonly ImmutableDictionary<string, string> Tags;
        public readonly string UpdatedAt;

        [OutputConstructor]
        private GetQuerySuggestionsBlockListResult(
            string arn,

            string createdAt,

            string description,

            string errorMessage,

            int fileSizeBytes,

            string id,

            string indexId,

            int itemCount,

            string name,

            string querySuggestionsBlockListId,

            string roleArn,

            ImmutableArray<Outputs.GetQuerySuggestionsBlockListSourceS3PathResult> sourceS3Paths,

            string status,

            ImmutableDictionary<string, string> tags,

            string updatedAt)
        {
            Arn = arn;
            CreatedAt = createdAt;
            Description = description;
            ErrorMessage = errorMessage;
            FileSizeBytes = fileSizeBytes;
            Id = id;
            IndexId = indexId;
            ItemCount = itemCount;
            Name = name;
            QuerySuggestionsBlockListId = querySuggestionsBlockListId;
            RoleArn = roleArn;
            SourceS3Paths = sourceS3Paths;
            Status = status;
            Tags = tags;
            UpdatedAt = updatedAt;
        }
    }
}
