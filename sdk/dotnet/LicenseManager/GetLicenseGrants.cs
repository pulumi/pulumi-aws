// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.LicenseManager
{
    public static class GetLicenseGrants
    {
        /// <summary>
        /// This resource can be used to get a set of license grant ARNs matching a filter.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// The following shows getting all license grant ARNs granted to your account.
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const current = aws.getCallerIdentity({});
        /// const test = current.then(current =&gt; aws.licensemanager.getLicenseGrants({
        ///     filters: [{
        ///         name: "GranteePrincipalARN",
        ///         values: [`arn:aws:iam::${current.accountId}:root`],
        ///     }],
        /// }));
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// current = aws.get_caller_identity()
        /// test = aws.licensemanager.get_license_grants(filters=[aws.licensemanager.GetLicenseGrantsFilterArgs(
        ///     name="GranteePrincipalARN",
        ///     values=[f"arn:aws:iam::{current.account_id}:root"],
        /// )])
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var current = Aws.GetCallerIdentity.Invoke();
        /// 
        ///     var test = Aws.LicenseManager.GetLicenseGrants.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Aws.LicenseManager.Inputs.GetLicenseGrantsFilterInputArgs
        ///             {
        ///                 Name = "GranteePrincipalARN",
        ///                 Values = new[]
        ///                 {
        ///                     $"arn:aws:iam::{current.Apply(getCallerIdentityResult =&gt; getCallerIdentityResult.AccountId)}:root",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"fmt"
        /// 
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws"
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/licensemanager"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		current, err := aws.GetCallerIdentity(ctx, nil, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		_, err = licensemanager.GetLicenseGrants(ctx, &amp;licensemanager.GetLicenseGrantsArgs{
        /// 			Filters: []licensemanager.GetLicenseGrantsFilter{
        /// 				{
        /// 					Name: "GranteePrincipalARN",
        /// 					Values: []string{
        /// 						fmt.Sprintf("arn:aws:iam::%v:root", current.AccountId),
        /// 					},
        /// 				},
        /// 			},
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.AwsFunctions;
        /// import com.pulumi.aws.licensemanager.LicensemanagerFunctions;
        /// import com.pulumi.aws.licensemanager.inputs.GetLicenseGrantsArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var current = AwsFunctions.getCallerIdentity();
        /// 
        ///         final var test = LicensemanagerFunctions.getLicenseGrants(GetLicenseGrantsArgs.builder()
        ///             .filters(GetLicenseGrantsFilterArgs.builder()
        ///                 .name("GranteePrincipalARN")
        ///                 .values(String.format("arn:aws:iam::%s:root", current.applyValue(getCallerIdentityResult -&gt; getCallerIdentityResult.accountId())))
        ///                 .build())
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   current:
        ///     fn::invoke:
        ///       Function: aws:getCallerIdentity
        ///       Arguments: {}
        ///   test:
        ///     fn::invoke:
        ///       Function: aws:licensemanager:getLicenseGrants
        ///       Arguments:
        ///         filters:
        ///           - name: GranteePrincipalARN
        ///             values:
        ///               - arn:aws:iam::${current.accountId}:root
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetLicenseGrantsResult> InvokeAsync(GetLicenseGrantsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLicenseGrantsResult>("aws:licensemanager/getLicenseGrants:getLicenseGrants", args ?? new GetLicenseGrantsArgs(), options.WithDefaults());

        /// <summary>
        /// This resource can be used to get a set of license grant ARNs matching a filter.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// The following shows getting all license grant ARNs granted to your account.
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const current = aws.getCallerIdentity({});
        /// const test = current.then(current =&gt; aws.licensemanager.getLicenseGrants({
        ///     filters: [{
        ///         name: "GranteePrincipalARN",
        ///         values: [`arn:aws:iam::${current.accountId}:root`],
        ///     }],
        /// }));
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// current = aws.get_caller_identity()
        /// test = aws.licensemanager.get_license_grants(filters=[aws.licensemanager.GetLicenseGrantsFilterArgs(
        ///     name="GranteePrincipalARN",
        ///     values=[f"arn:aws:iam::{current.account_id}:root"],
        /// )])
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var current = Aws.GetCallerIdentity.Invoke();
        /// 
        ///     var test = Aws.LicenseManager.GetLicenseGrants.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Aws.LicenseManager.Inputs.GetLicenseGrantsFilterInputArgs
        ///             {
        ///                 Name = "GranteePrincipalARN",
        ///                 Values = new[]
        ///                 {
        ///                     $"arn:aws:iam::{current.Apply(getCallerIdentityResult =&gt; getCallerIdentityResult.AccountId)}:root",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"fmt"
        /// 
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws"
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/licensemanager"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		current, err := aws.GetCallerIdentity(ctx, nil, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		_, err = licensemanager.GetLicenseGrants(ctx, &amp;licensemanager.GetLicenseGrantsArgs{
        /// 			Filters: []licensemanager.GetLicenseGrantsFilter{
        /// 				{
        /// 					Name: "GranteePrincipalARN",
        /// 					Values: []string{
        /// 						fmt.Sprintf("arn:aws:iam::%v:root", current.AccountId),
        /// 					},
        /// 				},
        /// 			},
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.AwsFunctions;
        /// import com.pulumi.aws.licensemanager.LicensemanagerFunctions;
        /// import com.pulumi.aws.licensemanager.inputs.GetLicenseGrantsArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var current = AwsFunctions.getCallerIdentity();
        /// 
        ///         final var test = LicensemanagerFunctions.getLicenseGrants(GetLicenseGrantsArgs.builder()
        ///             .filters(GetLicenseGrantsFilterArgs.builder()
        ///                 .name("GranteePrincipalARN")
        ///                 .values(String.format("arn:aws:iam::%s:root", current.applyValue(getCallerIdentityResult -&gt; getCallerIdentityResult.accountId())))
        ///                 .build())
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   current:
        ///     fn::invoke:
        ///       Function: aws:getCallerIdentity
        ///       Arguments: {}
        ///   test:
        ///     fn::invoke:
        ///       Function: aws:licensemanager:getLicenseGrants
        ///       Arguments:
        ///         filters:
        ///           - name: GranteePrincipalARN
        ///             values:
        ///               - arn:aws:iam::${current.accountId}:root
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetLicenseGrantsResult> Invoke(GetLicenseGrantsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLicenseGrantsResult>("aws:licensemanager/getLicenseGrants:getLicenseGrants", args ?? new GetLicenseGrantsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLicenseGrantsArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetLicenseGrantsFilterArgs>? _filters;

        /// <summary>
        /// Custom filter block as described below.
        /// 
        /// More complex filters can be expressed using one or more `filter` sub-blocks,
        /// which take the following arguments:
        /// </summary>
        public List<Inputs.GetLicenseGrantsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetLicenseGrantsFilterArgs>());
            set => _filters = value;
        }

        public GetLicenseGrantsArgs()
        {
        }
        public static new GetLicenseGrantsArgs Empty => new GetLicenseGrantsArgs();
    }

    public sealed class GetLicenseGrantsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetLicenseGrantsFilterInputArgs>? _filters;

        /// <summary>
        /// Custom filter block as described below.
        /// 
        /// More complex filters can be expressed using one or more `filter` sub-blocks,
        /// which take the following arguments:
        /// </summary>
        public InputList<Inputs.GetLicenseGrantsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetLicenseGrantsFilterInputArgs>());
            set => _filters = value;
        }

        public GetLicenseGrantsInvokeArgs()
        {
        }
        public static new GetLicenseGrantsInvokeArgs Empty => new GetLicenseGrantsInvokeArgs();
    }


    [OutputType]
    public sealed class GetLicenseGrantsResult
    {
        /// <summary>
        /// List of all the license grant ARNs found.
        /// </summary>
        public readonly ImmutableArray<string> Arns;
        public readonly ImmutableArray<Outputs.GetLicenseGrantsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetLicenseGrantsResult(
            ImmutableArray<string> arns,

            ImmutableArray<Outputs.GetLicenseGrantsFilterResult> filters,

            string id)
        {
            Arns = arns;
            Filters = filters;
            Id = id;
        }
    }
}
