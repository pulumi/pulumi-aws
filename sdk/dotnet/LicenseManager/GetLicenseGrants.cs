// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.LicenseManager
{
    public static class GetLicenseGrants
    {
        /// <summary>
        /// This resource can be used to get a set of license grant ARNs matching a filter.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// The following shows getting all license grant ARNs granted to your account.
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var current = Aws.GetCallerIdentity.Invoke();
        /// 
        ///     var test = Aws.LicenseManager.GetLicenseGrants.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Aws.LicenseManager.Inputs.GetLicenseGrantsFilterInputArgs
        ///             {
        ///                 Name = "GranteePrincipalARN",
        ///                 Values = new[]
        ///                 {
        ///                     $"arn:aws:iam::{current.Apply(getCallerIdentityResult =&gt; getCallerIdentityResult.AccountId)}:root",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetLicenseGrantsResult> InvokeAsync(GetLicenseGrantsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLicenseGrantsResult>("aws:licensemanager/getLicenseGrants:getLicenseGrants", args ?? new GetLicenseGrantsArgs(), options.WithDefaults());

        /// <summary>
        /// This resource can be used to get a set of license grant ARNs matching a filter.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// The following shows getting all license grant ARNs granted to your account.
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var current = Aws.GetCallerIdentity.Invoke();
        /// 
        ///     var test = Aws.LicenseManager.GetLicenseGrants.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Aws.LicenseManager.Inputs.GetLicenseGrantsFilterInputArgs
        ///             {
        ///                 Name = "GranteePrincipalARN",
        ///                 Values = new[]
        ///                 {
        ///                     $"arn:aws:iam::{current.Apply(getCallerIdentityResult =&gt; getCallerIdentityResult.AccountId)}:root",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetLicenseGrantsResult> Invoke(GetLicenseGrantsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLicenseGrantsResult>("aws:licensemanager/getLicenseGrants:getLicenseGrants", args ?? new GetLicenseGrantsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLicenseGrantsArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetLicenseGrantsFilterArgs>? _filters;

        /// <summary>
        /// Custom filter block as described below.
        /// </summary>
        public List<Inputs.GetLicenseGrantsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetLicenseGrantsFilterArgs>());
            set => _filters = value;
        }

        public GetLicenseGrantsArgs()
        {
        }
        public static new GetLicenseGrantsArgs Empty => new GetLicenseGrantsArgs();
    }

    public sealed class GetLicenseGrantsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetLicenseGrantsFilterInputArgs>? _filters;

        /// <summary>
        /// Custom filter block as described below.
        /// </summary>
        public InputList<Inputs.GetLicenseGrantsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetLicenseGrantsFilterInputArgs>());
            set => _filters = value;
        }

        public GetLicenseGrantsInvokeArgs()
        {
        }
        public static new GetLicenseGrantsInvokeArgs Empty => new GetLicenseGrantsInvokeArgs();
    }


    [OutputType]
    public sealed class GetLicenseGrantsResult
    {
        /// <summary>
        /// List of all the license grant ARNs found.
        /// </summary>
        public readonly ImmutableArray<string> Arns;
        public readonly ImmutableArray<Outputs.GetLicenseGrantsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetLicenseGrantsResult(
            ImmutableArray<string> arns,

            ImmutableArray<Outputs.GetLicenseGrantsFilterResult> filters,

            string id)
        {
            Arns = arns;
            Filters = filters;
            Id = id;
        }
    }
}
