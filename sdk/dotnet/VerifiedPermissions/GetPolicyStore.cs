// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.VerifiedPermissions
{
    public static class GetPolicyStore
    {
        /// <summary>
        /// Data source for managing an AWS Verified Permissions Policy Store.
        /// 
        /// ## Example Usage
        /// 
        /// ### Basic Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.VerifiedPermissions.GetPolicyStore.Invoke(new()
        ///     {
        ///         Id = "example",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetPolicyStoreResult> InvokeAsync(GetPolicyStoreArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPolicyStoreResult>("aws:verifiedpermissions/getPolicyStore:getPolicyStore", args ?? new GetPolicyStoreArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for managing an AWS Verified Permissions Policy Store.
        /// 
        /// ## Example Usage
        /// 
        /// ### Basic Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.VerifiedPermissions.GetPolicyStore.Invoke(new()
        ///     {
        ///         Id = "example",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetPolicyStoreResult> Invoke(GetPolicyStoreInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPolicyStoreResult>("aws:verifiedpermissions/getPolicyStore:getPolicyStore", args ?? new GetPolicyStoreInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPolicyStoreArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Policy Store.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetPolicyStoreArgs()
        {
        }
        public static new GetPolicyStoreArgs Empty => new GetPolicyStoreArgs();
    }

    public sealed class GetPolicyStoreInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Policy Store.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetPolicyStoreInvokeArgs()
        {
        }
        public static new GetPolicyStoreInvokeArgs Empty => new GetPolicyStoreInvokeArgs();
    }


    [OutputType]
    public sealed class GetPolicyStoreResult
    {
        /// <summary>
        /// The ARN of the Policy Store.
        /// </summary>
        public readonly string Arn;
        /// <summary>
        /// The date the Policy Store was created.
        /// </summary>
        public readonly string CreatedDate;
        public readonly string Description;
        public readonly string Id;
        /// <summary>
        /// The date the Policy Store was last updated.
        /// </summary>
        public readonly string LastUpdatedDate;
        /// <summary>
        /// Validation settings for the policy store.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPolicyStoreValidationSettingResult> ValidationSettings;

        [OutputConstructor]
        private GetPolicyStoreResult(
            string arn,

            string createdDate,

            string description,

            string id,

            string lastUpdatedDate,

            ImmutableArray<Outputs.GetPolicyStoreValidationSettingResult> validationSettings)
        {
            Arn = arn;
            CreatedDate = createdDate;
            Description = description;
            Id = id;
            LastUpdatedDate = lastUpdatedDate;
            ValidationSettings = validationSettings;
        }
    }
}
