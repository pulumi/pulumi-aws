// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Mq
{
    public static class GetInstanceTypeOfferings
    {
        /// <summary>
        /// Provides information about a MQ Broker Instance Offerings.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var empty = Output.Create(Aws.Mq.GetInstanceTypeOfferings.InvokeAsync());
        ///         var engine = Output.Create(Aws.Mq.GetInstanceTypeOfferings.InvokeAsync(new Aws.Mq.GetInstanceTypeOfferingsArgs
        ///         {
        ///             EngineType = "ACTIVEMQ",
        ///         }));
        ///         var storage = Output.Create(Aws.Mq.GetInstanceTypeOfferings.InvokeAsync(new Aws.Mq.GetInstanceTypeOfferingsArgs
        ///         {
        ///             StorageType = "EBS",
        ///         }));
        ///         var instance = Output.Create(Aws.Mq.GetInstanceTypeOfferings.InvokeAsync(new Aws.Mq.GetInstanceTypeOfferingsArgs
        ///         {
        ///             HostInstanceType = "mq.m5.large",
        ///         }));
        ///         var all = Output.Create(Aws.Mq.GetInstanceTypeOfferings.InvokeAsync(new Aws.Mq.GetInstanceTypeOfferingsArgs
        ///         {
        ///             EngineType = "ACTIVEMQ",
        ///             HostInstanceType = "mq.m5.large",
        ///             StorageType = "EBS",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetInstanceTypeOfferingsResult> InvokeAsync(GetInstanceTypeOfferingsArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetInstanceTypeOfferingsResult>("aws:mq/getInstanceTypeOfferings:getInstanceTypeOfferings", args ?? new GetInstanceTypeOfferingsArgs(), options.WithDefaults());

        /// <summary>
        /// Provides information about a MQ Broker Instance Offerings.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var empty = Output.Create(Aws.Mq.GetInstanceTypeOfferings.InvokeAsync());
        ///         var engine = Output.Create(Aws.Mq.GetInstanceTypeOfferings.InvokeAsync(new Aws.Mq.GetInstanceTypeOfferingsArgs
        ///         {
        ///             EngineType = "ACTIVEMQ",
        ///         }));
        ///         var storage = Output.Create(Aws.Mq.GetInstanceTypeOfferings.InvokeAsync(new Aws.Mq.GetInstanceTypeOfferingsArgs
        ///         {
        ///             StorageType = "EBS",
        ///         }));
        ///         var instance = Output.Create(Aws.Mq.GetInstanceTypeOfferings.InvokeAsync(new Aws.Mq.GetInstanceTypeOfferingsArgs
        ///         {
        ///             HostInstanceType = "mq.m5.large",
        ///         }));
        ///         var all = Output.Create(Aws.Mq.GetInstanceTypeOfferings.InvokeAsync(new Aws.Mq.GetInstanceTypeOfferingsArgs
        ///         {
        ///             EngineType = "ACTIVEMQ",
        ///             HostInstanceType = "mq.m5.large",
        ///             StorageType = "EBS",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetInstanceTypeOfferingsResult> Invoke(GetInstanceTypeOfferingsInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetInstanceTypeOfferingsResult>("aws:mq/getInstanceTypeOfferings:getInstanceTypeOfferings", args ?? new GetInstanceTypeOfferingsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInstanceTypeOfferingsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Filter response by engine type.
        /// </summary>
        [Input("engineType")]
        public string? EngineType { get; set; }

        /// <summary>
        /// Filter response by host instance type.
        /// </summary>
        [Input("hostInstanceType")]
        public string? HostInstanceType { get; set; }

        /// <summary>
        /// Filter response by storage type.
        /// </summary>
        [Input("storageType")]
        public string? StorageType { get; set; }

        public GetInstanceTypeOfferingsArgs()
        {
        }
    }

    public sealed class GetInstanceTypeOfferingsInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Filter response by engine type.
        /// </summary>
        [Input("engineType")]
        public Input<string>? EngineType { get; set; }

        /// <summary>
        /// Filter response by host instance type.
        /// </summary>
        [Input("hostInstanceType")]
        public Input<string>? HostInstanceType { get; set; }

        /// <summary>
        /// Filter response by storage type.
        /// </summary>
        [Input("storageType")]
        public Input<string>? StorageType { get; set; }

        public GetInstanceTypeOfferingsInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetInstanceTypeOfferingsResult
    {
        /// <summary>
        /// Option for host instance type. See Broker Instance Options below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInstanceTypeOfferingsBrokerInstanceOptionResult> BrokerInstanceOptions;
        /// <summary>
        /// The broker's engine type.
        /// </summary>
        public readonly string? EngineType;
        /// <summary>
        /// The broker's instance type.
        /// </summary>
        public readonly string? HostInstanceType;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The broker's storage type.
        /// </summary>
        public readonly string? StorageType;

        [OutputConstructor]
        private GetInstanceTypeOfferingsResult(
            ImmutableArray<Outputs.GetInstanceTypeOfferingsBrokerInstanceOptionResult> brokerInstanceOptions,

            string? engineType,

            string? hostInstanceType,

            string id,

            string? storageType)
        {
            BrokerInstanceOptions = brokerInstanceOptions;
            EngineType = engineType;
            HostInstanceType = hostInstanceType;
            Id = id;
            StorageType = storageType;
        }
    }
}
