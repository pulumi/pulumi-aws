// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Mq
{
    public static class GetInstanceTypeOfferings
    {
        /// <summary>
        /// Provides information about a MQ Broker Instance Offerings.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const empty = aws.mq.getInstanceTypeOfferings({});
        /// const engine = aws.mq.getInstanceTypeOfferings({
        ///     engineType: "ACTIVEMQ",
        /// });
        /// const storage = aws.mq.getInstanceTypeOfferings({
        ///     storageType: "EBS",
        /// });
        /// const instance = aws.mq.getInstanceTypeOfferings({
        ///     hostInstanceType: "mq.m5.large",
        /// });
        /// const all = aws.mq.getInstanceTypeOfferings({
        ///     engineType: "ACTIVEMQ",
        ///     hostInstanceType: "mq.m5.large",
        ///     storageType: "EBS",
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// empty = aws.mq.get_instance_type_offerings()
        /// engine = aws.mq.get_instance_type_offerings(engine_type="ACTIVEMQ")
        /// storage = aws.mq.get_instance_type_offerings(storage_type="EBS")
        /// instance = aws.mq.get_instance_type_offerings(host_instance_type="mq.m5.large")
        /// all = aws.mq.get_instance_type_offerings(engine_type="ACTIVEMQ",
        ///     host_instance_type="mq.m5.large",
        ///     storage_type="EBS")
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var empty = Aws.Mq.GetInstanceTypeOfferings.Invoke();
        /// 
        ///     var engine = Aws.Mq.GetInstanceTypeOfferings.Invoke(new()
        ///     {
        ///         EngineType = "ACTIVEMQ",
        ///     });
        /// 
        ///     var storage = Aws.Mq.GetInstanceTypeOfferings.Invoke(new()
        ///     {
        ///         StorageType = "EBS",
        ///     });
        /// 
        ///     var instance = Aws.Mq.GetInstanceTypeOfferings.Invoke(new()
        ///     {
        ///         HostInstanceType = "mq.m5.large",
        ///     });
        /// 
        ///     var all = Aws.Mq.GetInstanceTypeOfferings.Invoke(new()
        ///     {
        ///         EngineType = "ACTIVEMQ",
        ///         HostInstanceType = "mq.m5.large",
        ///         StorageType = "EBS",
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/mq"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := mq.GetInstanceTypeOfferings(ctx, nil, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		_, err = mq.GetInstanceTypeOfferings(ctx, &amp;mq.GetInstanceTypeOfferingsArgs{
        /// 			EngineType: pulumi.StringRef("ACTIVEMQ"),
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		_, err = mq.GetInstanceTypeOfferings(ctx, &amp;mq.GetInstanceTypeOfferingsArgs{
        /// 			StorageType: pulumi.StringRef("EBS"),
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		_, err = mq.GetInstanceTypeOfferings(ctx, &amp;mq.GetInstanceTypeOfferingsArgs{
        /// 			HostInstanceType: pulumi.StringRef("mq.m5.large"),
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		_, err = mq.GetInstanceTypeOfferings(ctx, &amp;mq.GetInstanceTypeOfferingsArgs{
        /// 			EngineType:       pulumi.StringRef("ACTIVEMQ"),
        /// 			HostInstanceType: pulumi.StringRef("mq.m5.large"),
        /// 			StorageType:      pulumi.StringRef("EBS"),
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.mq.MqFunctions;
        /// import com.pulumi.aws.mq.inputs.GetInstanceTypeOfferingsArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var empty = MqFunctions.getInstanceTypeOfferings();
        /// 
        ///         final var engine = MqFunctions.getInstanceTypeOfferings(GetInstanceTypeOfferingsArgs.builder()
        ///             .engineType("ACTIVEMQ")
        ///             .build());
        /// 
        ///         final var storage = MqFunctions.getInstanceTypeOfferings(GetInstanceTypeOfferingsArgs.builder()
        ///             .storageType("EBS")
        ///             .build());
        /// 
        ///         final var instance = MqFunctions.getInstanceTypeOfferings(GetInstanceTypeOfferingsArgs.builder()
        ///             .hostInstanceType("mq.m5.large")
        ///             .build());
        /// 
        ///         final var all = MqFunctions.getInstanceTypeOfferings(GetInstanceTypeOfferingsArgs.builder()
        ///             .engineType("ACTIVEMQ")
        ///             .hostInstanceType("mq.m5.large")
        ///             .storageType("EBS")
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   empty:
        ///     fn::invoke:
        ///       Function: aws:mq:getInstanceTypeOfferings
        ///       Arguments: {}
        ///   engine:
        ///     fn::invoke:
        ///       Function: aws:mq:getInstanceTypeOfferings
        ///       Arguments:
        ///         engineType: ACTIVEMQ
        ///   storage:
        ///     fn::invoke:
        ///       Function: aws:mq:getInstanceTypeOfferings
        ///       Arguments:
        ///         storageType: EBS
        ///   instance:
        ///     fn::invoke:
        ///       Function: aws:mq:getInstanceTypeOfferings
        ///       Arguments:
        ///         hostInstanceType: mq.m5.large
        ///   all:
        ///     fn::invoke:
        ///       Function: aws:mq:getInstanceTypeOfferings
        ///       Arguments:
        ///         engineType: ACTIVEMQ
        ///         hostInstanceType: mq.m5.large
        ///         storageType: EBS
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetInstanceTypeOfferingsResult> InvokeAsync(GetInstanceTypeOfferingsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInstanceTypeOfferingsResult>("aws:mq/getInstanceTypeOfferings:getInstanceTypeOfferings", args ?? new GetInstanceTypeOfferingsArgs(), options.WithDefaults());

        /// <summary>
        /// Provides information about a MQ Broker Instance Offerings.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const empty = aws.mq.getInstanceTypeOfferings({});
        /// const engine = aws.mq.getInstanceTypeOfferings({
        ///     engineType: "ACTIVEMQ",
        /// });
        /// const storage = aws.mq.getInstanceTypeOfferings({
        ///     storageType: "EBS",
        /// });
        /// const instance = aws.mq.getInstanceTypeOfferings({
        ///     hostInstanceType: "mq.m5.large",
        /// });
        /// const all = aws.mq.getInstanceTypeOfferings({
        ///     engineType: "ACTIVEMQ",
        ///     hostInstanceType: "mq.m5.large",
        ///     storageType: "EBS",
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// empty = aws.mq.get_instance_type_offerings()
        /// engine = aws.mq.get_instance_type_offerings(engine_type="ACTIVEMQ")
        /// storage = aws.mq.get_instance_type_offerings(storage_type="EBS")
        /// instance = aws.mq.get_instance_type_offerings(host_instance_type="mq.m5.large")
        /// all = aws.mq.get_instance_type_offerings(engine_type="ACTIVEMQ",
        ///     host_instance_type="mq.m5.large",
        ///     storage_type="EBS")
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var empty = Aws.Mq.GetInstanceTypeOfferings.Invoke();
        /// 
        ///     var engine = Aws.Mq.GetInstanceTypeOfferings.Invoke(new()
        ///     {
        ///         EngineType = "ACTIVEMQ",
        ///     });
        /// 
        ///     var storage = Aws.Mq.GetInstanceTypeOfferings.Invoke(new()
        ///     {
        ///         StorageType = "EBS",
        ///     });
        /// 
        ///     var instance = Aws.Mq.GetInstanceTypeOfferings.Invoke(new()
        ///     {
        ///         HostInstanceType = "mq.m5.large",
        ///     });
        /// 
        ///     var all = Aws.Mq.GetInstanceTypeOfferings.Invoke(new()
        ///     {
        ///         EngineType = "ACTIVEMQ",
        ///         HostInstanceType = "mq.m5.large",
        ///         StorageType = "EBS",
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/mq"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := mq.GetInstanceTypeOfferings(ctx, nil, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		_, err = mq.GetInstanceTypeOfferings(ctx, &amp;mq.GetInstanceTypeOfferingsArgs{
        /// 			EngineType: pulumi.StringRef("ACTIVEMQ"),
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		_, err = mq.GetInstanceTypeOfferings(ctx, &amp;mq.GetInstanceTypeOfferingsArgs{
        /// 			StorageType: pulumi.StringRef("EBS"),
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		_, err = mq.GetInstanceTypeOfferings(ctx, &amp;mq.GetInstanceTypeOfferingsArgs{
        /// 			HostInstanceType: pulumi.StringRef("mq.m5.large"),
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		_, err = mq.GetInstanceTypeOfferings(ctx, &amp;mq.GetInstanceTypeOfferingsArgs{
        /// 			EngineType:       pulumi.StringRef("ACTIVEMQ"),
        /// 			HostInstanceType: pulumi.StringRef("mq.m5.large"),
        /// 			StorageType:      pulumi.StringRef("EBS"),
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.mq.MqFunctions;
        /// import com.pulumi.aws.mq.inputs.GetInstanceTypeOfferingsArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var empty = MqFunctions.getInstanceTypeOfferings();
        /// 
        ///         final var engine = MqFunctions.getInstanceTypeOfferings(GetInstanceTypeOfferingsArgs.builder()
        ///             .engineType("ACTIVEMQ")
        ///             .build());
        /// 
        ///         final var storage = MqFunctions.getInstanceTypeOfferings(GetInstanceTypeOfferingsArgs.builder()
        ///             .storageType("EBS")
        ///             .build());
        /// 
        ///         final var instance = MqFunctions.getInstanceTypeOfferings(GetInstanceTypeOfferingsArgs.builder()
        ///             .hostInstanceType("mq.m5.large")
        ///             .build());
        /// 
        ///         final var all = MqFunctions.getInstanceTypeOfferings(GetInstanceTypeOfferingsArgs.builder()
        ///             .engineType("ACTIVEMQ")
        ///             .hostInstanceType("mq.m5.large")
        ///             .storageType("EBS")
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   empty:
        ///     fn::invoke:
        ///       Function: aws:mq:getInstanceTypeOfferings
        ///       Arguments: {}
        ///   engine:
        ///     fn::invoke:
        ///       Function: aws:mq:getInstanceTypeOfferings
        ///       Arguments:
        ///         engineType: ACTIVEMQ
        ///   storage:
        ///     fn::invoke:
        ///       Function: aws:mq:getInstanceTypeOfferings
        ///       Arguments:
        ///         storageType: EBS
        ///   instance:
        ///     fn::invoke:
        ///       Function: aws:mq:getInstanceTypeOfferings
        ///       Arguments:
        ///         hostInstanceType: mq.m5.large
        ///   all:
        ///     fn::invoke:
        ///       Function: aws:mq:getInstanceTypeOfferings
        ///       Arguments:
        ///         engineType: ACTIVEMQ
        ///         hostInstanceType: mq.m5.large
        ///         storageType: EBS
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetInstanceTypeOfferingsResult> Invoke(GetInstanceTypeOfferingsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInstanceTypeOfferingsResult>("aws:mq/getInstanceTypeOfferings:getInstanceTypeOfferings", args ?? new GetInstanceTypeOfferingsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInstanceTypeOfferingsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Filter response by engine type.
        /// </summary>
        [Input("engineType")]
        public string? EngineType { get; set; }

        /// <summary>
        /// Filter response by host instance type.
        /// </summary>
        [Input("hostInstanceType")]
        public string? HostInstanceType { get; set; }

        /// <summary>
        /// Filter response by storage type.
        /// </summary>
        [Input("storageType")]
        public string? StorageType { get; set; }

        public GetInstanceTypeOfferingsArgs()
        {
        }
        public static new GetInstanceTypeOfferingsArgs Empty => new GetInstanceTypeOfferingsArgs();
    }

    public sealed class GetInstanceTypeOfferingsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Filter response by engine type.
        /// </summary>
        [Input("engineType")]
        public Input<string>? EngineType { get; set; }

        /// <summary>
        /// Filter response by host instance type.
        /// </summary>
        [Input("hostInstanceType")]
        public Input<string>? HostInstanceType { get; set; }

        /// <summary>
        /// Filter response by storage type.
        /// </summary>
        [Input("storageType")]
        public Input<string>? StorageType { get; set; }

        public GetInstanceTypeOfferingsInvokeArgs()
        {
        }
        public static new GetInstanceTypeOfferingsInvokeArgs Empty => new GetInstanceTypeOfferingsInvokeArgs();
    }


    [OutputType]
    public sealed class GetInstanceTypeOfferingsResult
    {
        /// <summary>
        /// Option for host instance type. See Broker Instance Options below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInstanceTypeOfferingsBrokerInstanceOptionResult> BrokerInstanceOptions;
        /// <summary>
        /// Broker's engine type.
        /// </summary>
        public readonly string? EngineType;
        /// <summary>
        /// Broker's instance type.
        /// </summary>
        public readonly string? HostInstanceType;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Broker's storage type.
        /// </summary>
        public readonly string? StorageType;

        [OutputConstructor]
        private GetInstanceTypeOfferingsResult(
            ImmutableArray<Outputs.GetInstanceTypeOfferingsBrokerInstanceOptionResult> brokerInstanceOptions,

            string? engineType,

            string? hostInstanceType,

            string id,

            string? storageType)
        {
            BrokerInstanceOptions = brokerInstanceOptions;
            EngineType = engineType;
            HostInstanceType = hostInstanceType;
            Id = id;
            StorageType = storageType;
        }
    }
}
