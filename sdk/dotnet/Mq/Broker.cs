// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Mq
{
    [AwsResourceType("aws:mq/broker:Broker")]
    public partial class Broker : global::Pulumi.CustomResource
    {
        [Output("applyImmediately")]
        public Output<bool?> ApplyImmediately { get; private set; } = null!;

        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("authenticationStrategy")]
        public Output<string> AuthenticationStrategy { get; private set; } = null!;

        [Output("autoMinorVersionUpgrade")]
        public Output<bool?> AutoMinorVersionUpgrade { get; private set; } = null!;

        [Output("brokerName")]
        public Output<string> BrokerName { get; private set; } = null!;

        [Output("configuration")]
        public Output<Outputs.BrokerConfiguration> Configuration { get; private set; } = null!;

        [Output("deploymentMode")]
        public Output<string?> DeploymentMode { get; private set; } = null!;

        [Output("encryptionOptions")]
        public Output<Outputs.BrokerEncryptionOptions?> EncryptionOptions { get; private set; } = null!;

        [Output("engineType")]
        public Output<string> EngineType { get; private set; } = null!;

        [Output("engineVersion")]
        public Output<string> EngineVersion { get; private set; } = null!;

        [Output("hostInstanceType")]
        public Output<string> HostInstanceType { get; private set; } = null!;

        [Output("instances")]
        public Output<ImmutableArray<Outputs.BrokerInstance>> Instances { get; private set; } = null!;

        [Output("ldapServerMetadata")]
        public Output<Outputs.BrokerLdapServerMetadata?> LdapServerMetadata { get; private set; } = null!;

        [Output("logs")]
        public Output<Outputs.BrokerLogs?> Logs { get; private set; } = null!;

        [Output("maintenanceWindowStartTime")]
        public Output<Outputs.BrokerMaintenanceWindowStartTime> MaintenanceWindowStartTime { get; private set; } = null!;

        [Output("publiclyAccessible")]
        public Output<bool?> PubliclyAccessible { get; private set; } = null!;

        [Output("securityGroups")]
        public Output<ImmutableArray<string>> SecurityGroups { get; private set; } = null!;

        [Output("storageType")]
        public Output<string> StorageType { get; private set; } = null!;

        [Output("subnetIds")]
        public Output<ImmutableArray<string>> SubnetIds { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("users")]
        public Output<ImmutableArray<Outputs.BrokerUser>> Users { get; private set; } = null!;


        /// <summary>
        /// Create a Broker resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Broker(string name, BrokerArgs args, CustomResourceOptions? options = null)
            : base("aws:mq/broker:Broker", name, args ?? new BrokerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Broker(string name, Input<string> id, BrokerState? state = null, CustomResourceOptions? options = null)
            : base("aws:mq/broker:Broker", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Broker resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Broker Get(string name, Input<string> id, BrokerState? state = null, CustomResourceOptions? options = null)
        {
            return new Broker(name, id, state, options);
        }
    }

    public sealed class BrokerArgs : global::Pulumi.ResourceArgs
    {
        [Input("applyImmediately")]
        public Input<bool>? ApplyImmediately { get; set; }

        [Input("authenticationStrategy")]
        public Input<string>? AuthenticationStrategy { get; set; }

        [Input("autoMinorVersionUpgrade")]
        public Input<bool>? AutoMinorVersionUpgrade { get; set; }

        [Input("brokerName")]
        public Input<string>? BrokerName { get; set; }

        [Input("configuration")]
        public Input<Inputs.BrokerConfigurationArgs>? Configuration { get; set; }

        [Input("deploymentMode")]
        public Input<string>? DeploymentMode { get; set; }

        [Input("encryptionOptions")]
        public Input<Inputs.BrokerEncryptionOptionsArgs>? EncryptionOptions { get; set; }

        [Input("engineType", required: true)]
        public Input<string> EngineType { get; set; } = null!;

        [Input("engineVersion", required: true)]
        public Input<string> EngineVersion { get; set; } = null!;

        [Input("hostInstanceType", required: true)]
        public Input<string> HostInstanceType { get; set; } = null!;

        [Input("ldapServerMetadata")]
        public Input<Inputs.BrokerLdapServerMetadataArgs>? LdapServerMetadata { get; set; }

        [Input("logs")]
        public Input<Inputs.BrokerLogsArgs>? Logs { get; set; }

        [Input("maintenanceWindowStartTime")]
        public Input<Inputs.BrokerMaintenanceWindowStartTimeArgs>? MaintenanceWindowStartTime { get; set; }

        [Input("publiclyAccessible")]
        public Input<bool>? PubliclyAccessible { get; set; }

        [Input("securityGroups")]
        private InputList<string>? _securityGroups;
        public InputList<string> SecurityGroups
        {
            get => _securityGroups ?? (_securityGroups = new InputList<string>());
            set => _securityGroups = value;
        }

        [Input("storageType")]
        public Input<string>? StorageType { get; set; }

        [Input("subnetIds")]
        private InputList<string>? _subnetIds;
        public InputList<string> SubnetIds
        {
            get => _subnetIds ?? (_subnetIds = new InputList<string>());
            set => _subnetIds = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("users", required: true)]
        private InputList<Inputs.BrokerUserArgs>? _users;
        public InputList<Inputs.BrokerUserArgs> Users
        {
            get => _users ?? (_users = new InputList<Inputs.BrokerUserArgs>());
            set => _users = value;
        }

        public BrokerArgs()
        {
        }
        public static new BrokerArgs Empty => new BrokerArgs();
    }

    public sealed class BrokerState : global::Pulumi.ResourceArgs
    {
        [Input("applyImmediately")]
        public Input<bool>? ApplyImmediately { get; set; }

        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("authenticationStrategy")]
        public Input<string>? AuthenticationStrategy { get; set; }

        [Input("autoMinorVersionUpgrade")]
        public Input<bool>? AutoMinorVersionUpgrade { get; set; }

        [Input("brokerName")]
        public Input<string>? BrokerName { get; set; }

        [Input("configuration")]
        public Input<Inputs.BrokerConfigurationGetArgs>? Configuration { get; set; }

        [Input("deploymentMode")]
        public Input<string>? DeploymentMode { get; set; }

        [Input("encryptionOptions")]
        public Input<Inputs.BrokerEncryptionOptionsGetArgs>? EncryptionOptions { get; set; }

        [Input("engineType")]
        public Input<string>? EngineType { get; set; }

        [Input("engineVersion")]
        public Input<string>? EngineVersion { get; set; }

        [Input("hostInstanceType")]
        public Input<string>? HostInstanceType { get; set; }

        [Input("instances")]
        private InputList<Inputs.BrokerInstanceGetArgs>? _instances;
        public InputList<Inputs.BrokerInstanceGetArgs> Instances
        {
            get => _instances ?? (_instances = new InputList<Inputs.BrokerInstanceGetArgs>());
            set => _instances = value;
        }

        [Input("ldapServerMetadata")]
        public Input<Inputs.BrokerLdapServerMetadataGetArgs>? LdapServerMetadata { get; set; }

        [Input("logs")]
        public Input<Inputs.BrokerLogsGetArgs>? Logs { get; set; }

        [Input("maintenanceWindowStartTime")]
        public Input<Inputs.BrokerMaintenanceWindowStartTimeGetArgs>? MaintenanceWindowStartTime { get; set; }

        [Input("publiclyAccessible")]
        public Input<bool>? PubliclyAccessible { get; set; }

        [Input("securityGroups")]
        private InputList<string>? _securityGroups;
        public InputList<string> SecurityGroups
        {
            get => _securityGroups ?? (_securityGroups = new InputList<string>());
            set => _securityGroups = value;
        }

        [Input("storageType")]
        public Input<string>? StorageType { get; set; }

        [Input("subnetIds")]
        private InputList<string>? _subnetIds;
        public InputList<string> SubnetIds
        {
            get => _subnetIds ?? (_subnetIds = new InputList<string>());
            set => _subnetIds = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("users")]
        private InputList<Inputs.BrokerUserGetArgs>? _users;
        public InputList<Inputs.BrokerUserGetArgs> Users
        {
            get => _users ?? (_users = new InputList<Inputs.BrokerUserGetArgs>());
            set => _users = value;
        }

        public BrokerState()
        {
        }
        public static new BrokerState Empty => new BrokerState();
    }
}
