// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Fms.Outputs
{

    [OutputType]
    public sealed class ResourceSetResourceSet
    {
        /// <summary>
        /// Description of the resource set.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Unique identifier for the resource set. It's returned in the responses to create and list commands. You provide it to operations like update and delete.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Last time that the reosurce set was changed.
        /// </summary>
        public readonly string? LastUpdateTime;
        /// <summary>
        /// Descriptive name of the resource set. You can't change the name of a resource set after you create it.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Indicates whether the resource set is in or out of the admin's Region scope. Valid values are `ACTIVE` (Admin can manage and delete the resource set) or `OUT_OF_ADMIN_SCOPE` (Admin can view the resource set, but they can't edit or delete the resource set.)
        /// </summary>
        public readonly string? ResourceSetStatus;
        /// <summary>
        /// Determines the resources that can be associated to the resource set. Depending on your setting for max results and the number of resource sets, a single call might not return the full list.
        /// </summary>
        public readonly ImmutableArray<string> ResourceTypeLists;
        public readonly string? UpdateToken;

        [OutputConstructor]
        private ResourceSetResourceSet(
            string? description,

            string? id,

            string? lastUpdateTime,

            string name,

            string? resourceSetStatus,

            ImmutableArray<string> resourceTypeLists,

            string? updateToken)
        {
            Description = description;
            Id = id;
            LastUpdateTime = lastUpdateTime;
            Name = name;
            ResourceSetStatus = resourceSetStatus;
            ResourceTypeLists = resourceTypeLists;
            UpdateToken = updateToken;
        }
    }
}
