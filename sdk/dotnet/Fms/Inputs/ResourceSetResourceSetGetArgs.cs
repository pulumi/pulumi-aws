// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Fms.Inputs
{

    public sealed class ResourceSetResourceSetGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description of the resource set.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Unique identifier for the resource set. It's returned in the responses to create and list commands. You provide it to operations like update and delete.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Last time that the reosurce set was changed.
        /// </summary>
        [Input("lastUpdateTime")]
        public Input<string>? LastUpdateTime { get; set; }

        /// <summary>
        /// Descriptive name of the resource set. You can't change the name of a resource set after you create it.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Indicates whether the resource set is in or out of the admin's Region scope. Valid values are `ACTIVE` (Admin can manage and delete the resource set) or `OUT_OF_ADMIN_SCOPE` (Admin can view the resource set, but they can't edit or delete the resource set.)
        /// </summary>
        [Input("resourceSetStatus")]
        public Input<string>? ResourceSetStatus { get; set; }

        [Input("resourceTypeLists")]
        private InputList<string>? _resourceTypeLists;

        /// <summary>
        /// Determines the resources that can be associated to the resource set. Depending on your setting for max results and the number of resource sets, a single call might not return the full list.
        /// </summary>
        public InputList<string> ResourceTypeLists
        {
            get => _resourceTypeLists ?? (_resourceTypeLists = new InputList<string>());
            set => _resourceTypeLists = value;
        }

        [Input("updateToken")]
        public Input<string>? UpdateToken { get; set; }

        public ResourceSetResourceSetGetArgs()
        {
        }
        public static new ResourceSetResourceSetGetArgs Empty => new ResourceSetResourceSetGetArgs();
    }
}
