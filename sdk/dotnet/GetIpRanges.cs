// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws
{
    public static class GetIpRanges
    {
        public static Task<GetIpRangesResult> InvokeAsync(GetIpRangesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIpRangesResult>("aws:index/getIpRanges:getIpRanges", args ?? new GetIpRangesArgs(), options.WithDefaults());

        public static Output<GetIpRangesResult> Invoke(GetIpRangesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIpRangesResult>("aws:index/getIpRanges:getIpRanges", args ?? new GetIpRangesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIpRangesArgs : global::Pulumi.InvokeArgs
    {
        [Input("regions")]
        private List<string>? _regions;
        public List<string> Regions
        {
            get => _regions ?? (_regions = new List<string>());
            set => _regions = value;
        }

        [Input("services", required: true)]
        private List<string>? _services;
        public List<string> Services
        {
            get => _services ?? (_services = new List<string>());
            set => _services = value;
        }

        [Input("url")]
        public string? Url { get; set; }

        public GetIpRangesArgs()
        {
        }
        public static new GetIpRangesArgs Empty => new GetIpRangesArgs();
    }

    public sealed class GetIpRangesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("regions")]
        private InputList<string>? _regions;
        public InputList<string> Regions
        {
            get => _regions ?? (_regions = new InputList<string>());
            set => _regions = value;
        }

        [Input("services", required: true)]
        private InputList<string>? _services;
        public InputList<string> Services
        {
            get => _services ?? (_services = new InputList<string>());
            set => _services = value;
        }

        [Input("url")]
        public Input<string>? Url { get; set; }

        public GetIpRangesInvokeArgs()
        {
        }
        public static new GetIpRangesInvokeArgs Empty => new GetIpRangesInvokeArgs();
    }


    [OutputType]
    public sealed class GetIpRangesResult
    {
        public readonly ImmutableArray<string> CidrBlocks;
        public readonly string CreateDate;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ipv6CidrBlocks;
        public readonly ImmutableArray<string> Regions;
        public readonly ImmutableArray<string> Services;
        public readonly int SyncToken;
        public readonly string? Url;

        [OutputConstructor]
        private GetIpRangesResult(
            ImmutableArray<string> cidrBlocks,

            string createDate,

            string id,

            ImmutableArray<string> ipv6CidrBlocks,

            ImmutableArray<string> regions,

            ImmutableArray<string> services,

            int syncToken,

            string? url)
        {
            CidrBlocks = cidrBlocks;
            CreateDate = createDate;
            Id = id;
            Ipv6CidrBlocks = ipv6CidrBlocks;
            Regions = regions;
            Services = services;
            SyncToken = syncToken;
            Url = url;
        }
    }
}
