// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.RedshiftServerless
{
    [AwsResourceType("aws:redshiftserverless/snapshot:Snapshot")]
    public partial class Snapshot : global::Pulumi.CustomResource
    {
        [Output("accountsWithProvisionedRestoreAccesses")]
        public Output<ImmutableArray<string>> AccountsWithProvisionedRestoreAccesses { get; private set; } = null!;

        [Output("accountsWithRestoreAccesses")]
        public Output<ImmutableArray<string>> AccountsWithRestoreAccesses { get; private set; } = null!;

        [Output("adminUsername")]
        public Output<string> AdminUsername { get; private set; } = null!;

        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("kmsKeyId")]
        public Output<string> KmsKeyId { get; private set; } = null!;

        [Output("namespaceArn")]
        public Output<string> NamespaceArn { get; private set; } = null!;

        [Output("namespaceName")]
        public Output<string> NamespaceName { get; private set; } = null!;

        [Output("ownerAccount")]
        public Output<string> OwnerAccount { get; private set; } = null!;

        [Output("retentionPeriod")]
        public Output<int?> RetentionPeriod { get; private set; } = null!;

        [Output("snapshotName")]
        public Output<string> SnapshotName { get; private set; } = null!;


        /// <summary>
        /// Create a Snapshot resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Snapshot(string name, SnapshotArgs args, CustomResourceOptions? options = null)
            : base("aws:redshiftserverless/snapshot:Snapshot", name, args ?? new SnapshotArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Snapshot(string name, Input<string> id, SnapshotState? state = null, CustomResourceOptions? options = null)
            : base("aws:redshiftserverless/snapshot:Snapshot", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Snapshot resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Snapshot Get(string name, Input<string> id, SnapshotState? state = null, CustomResourceOptions? options = null)
        {
            return new Snapshot(name, id, state, options);
        }
    }

    public sealed class SnapshotArgs : global::Pulumi.ResourceArgs
    {
        [Input("namespaceName", required: true)]
        public Input<string> NamespaceName { get; set; } = null!;

        [Input("retentionPeriod")]
        public Input<int>? RetentionPeriod { get; set; }

        [Input("snapshotName", required: true)]
        public Input<string> SnapshotName { get; set; } = null!;

        public SnapshotArgs()
        {
        }
        public static new SnapshotArgs Empty => new SnapshotArgs();
    }

    public sealed class SnapshotState : global::Pulumi.ResourceArgs
    {
        [Input("accountsWithProvisionedRestoreAccesses")]
        private InputList<string>? _accountsWithProvisionedRestoreAccesses;
        public InputList<string> AccountsWithProvisionedRestoreAccesses
        {
            get => _accountsWithProvisionedRestoreAccesses ?? (_accountsWithProvisionedRestoreAccesses = new InputList<string>());
            set => _accountsWithProvisionedRestoreAccesses = value;
        }

        [Input("accountsWithRestoreAccesses")]
        private InputList<string>? _accountsWithRestoreAccesses;
        public InputList<string> AccountsWithRestoreAccesses
        {
            get => _accountsWithRestoreAccesses ?? (_accountsWithRestoreAccesses = new InputList<string>());
            set => _accountsWithRestoreAccesses = value;
        }

        [Input("adminUsername")]
        public Input<string>? AdminUsername { get; set; }

        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("kmsKeyId")]
        public Input<string>? KmsKeyId { get; set; }

        [Input("namespaceArn")]
        public Input<string>? NamespaceArn { get; set; }

        [Input("namespaceName")]
        public Input<string>? NamespaceName { get; set; }

        [Input("ownerAccount")]
        public Input<string>? OwnerAccount { get; set; }

        [Input("retentionPeriod")]
        public Input<int>? RetentionPeriod { get; set; }

        [Input("snapshotName")]
        public Input<string>? SnapshotName { get; set; }

        public SnapshotState()
        {
        }
        public static new SnapshotState Empty => new SnapshotState();
    }
}
