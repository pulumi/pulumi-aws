// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.RedshiftServerless
{
    public static class GetCredentials
    {
        public static Task<GetCredentialsResult> InvokeAsync(GetCredentialsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCredentialsResult>("aws:redshiftserverless/getCredentials:getCredentials", args ?? new GetCredentialsArgs(), options.WithDefaults());

        public static Output<GetCredentialsResult> Invoke(GetCredentialsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCredentialsResult>("aws:redshiftserverless/getCredentials:getCredentials", args ?? new GetCredentialsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCredentialsArgs : global::Pulumi.InvokeArgs
    {
        [Input("dbName")]
        public string? DbName { get; set; }

        [Input("durationSeconds")]
        public int? DurationSeconds { get; set; }

        [Input("workgroupName", required: true)]
        public string WorkgroupName { get; set; } = null!;

        public GetCredentialsArgs()
        {
        }
        public static new GetCredentialsArgs Empty => new GetCredentialsArgs();
    }

    public sealed class GetCredentialsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("dbName")]
        public Input<string>? DbName { get; set; }

        [Input("durationSeconds")]
        public Input<int>? DurationSeconds { get; set; }

        [Input("workgroupName", required: true)]
        public Input<string> WorkgroupName { get; set; } = null!;

        public GetCredentialsInvokeArgs()
        {
        }
        public static new GetCredentialsInvokeArgs Empty => new GetCredentialsInvokeArgs();
    }


    [OutputType]
    public sealed class GetCredentialsResult
    {
        public readonly string? DbName;
        public readonly string DbPassword;
        public readonly string DbUser;
        public readonly int? DurationSeconds;
        public readonly string Expiration;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string WorkgroupName;

        [OutputConstructor]
        private GetCredentialsResult(
            string? dbName,

            string dbPassword,

            string dbUser,

            int? durationSeconds,

            string expiration,

            string id,

            string workgroupName)
        {
            DbName = dbName;
            DbPassword = dbPassword;
            DbUser = dbUser;
            DurationSeconds = durationSeconds;
            Expiration = expiration;
            Id = id;
            WorkgroupName = workgroupName;
        }
    }
}
