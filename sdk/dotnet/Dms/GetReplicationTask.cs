// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Dms
{
    public static class GetReplicationTask
    {
        /// <summary>
        /// TODO data source for managing an AWS DMS (Database Migration) Replication Task.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.Dms.GetReplicationTask.Invoke(new()
        ///     {
        ///         ReplicationTaskId = aws_dms_replication_task.Test.Replication_task_id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetReplicationTaskResult> InvokeAsync(GetReplicationTaskArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetReplicationTaskResult>("aws:dms/getReplicationTask:getReplicationTask", args ?? new GetReplicationTaskArgs(), options.WithDefaults());

        /// <summary>
        /// TODO data source for managing an AWS DMS (Database Migration) Replication Task.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.Dms.GetReplicationTask.Invoke(new()
        ///     {
        ///         ReplicationTaskId = aws_dms_replication_task.Test.Replication_task_id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetReplicationTaskResult> Invoke(GetReplicationTaskInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetReplicationTaskResult>("aws:dms/getReplicationTask:getReplicationTask", args ?? new GetReplicationTaskInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetReplicationTaskArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The replication task identifier.
        /// </summary>
        [Input("replicationTaskId", required: true)]
        public string ReplicationTaskId { get; set; } = null!;

        [Input("tags")]
        private Dictionary<string, string>? _tags;
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetReplicationTaskArgs()
        {
        }
        public static new GetReplicationTaskArgs Empty => new GetReplicationTaskArgs();
    }

    public sealed class GetReplicationTaskInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The replication task identifier.
        /// </summary>
        [Input("replicationTaskId", required: true)]
        public Input<string> ReplicationTaskId { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetReplicationTaskInvokeArgs()
        {
        }
        public static new GetReplicationTaskInvokeArgs Empty => new GetReplicationTaskInvokeArgs();
    }


    [OutputType]
    public sealed class GetReplicationTaskResult
    {
        /// <summary>
        /// (Conflicts with `cdc_start_time`) Indicates when you want a change data capture (CDC) operation to start. The value can be in date, checkpoint, or LSN/SCN format depending on the source engine. For more information, see [Determining a CDC native start point](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Task.CDC.html#CHAP_Task.CDC.StartPoint.Native).
        /// </summary>
        public readonly string CdcStartPosition;
        /// <summary>
        /// (Conflicts with `cdc_start_position`) The Unix timestamp integer for the start of the Change Data Capture (CDC) operation.
        /// </summary>
        public readonly string CdcStartTime;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The migration type. Can be one of `full-load | cdc | full-load-and-cdc`.
        /// </summary>
        public readonly string MigrationType;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the replication instance.
        /// </summary>
        public readonly string ReplicationInstanceArn;
        /// <summary>
        /// The Amazon Resource Name (ARN) for the replication task.
        /// </summary>
        public readonly string ReplicationTaskArn;
        public readonly string ReplicationTaskId;
        /// <summary>
        /// An escaped JSON string that contains the task settings. For a complete list of task settings, see [Task Settings for AWS Database Migration Service Tasks](http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Tasks.CustomizingTasks.TaskSettings.html).
        /// </summary>
        public readonly string ReplicationTaskSettings;
        /// <summary>
        /// The Amazon Resource Name (ARN) string that uniquely identifies the source endpoint.
        /// </summary>
        public readonly string SourceEndpointArn;
        /// <summary>
        /// Whether to run or stop the replication task.
        /// </summary>
        public readonly bool StartReplicationTask;
        /// <summary>
        /// Replication Task status.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// An escaped JSON string that contains the table mappings. For information on table mapping see [Using Table Mapping with an AWS Database Migration Service Task to Select and Filter Data](http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Tasks.CustomizingTasks.TableMapping.html)
        /// </summary>
        public readonly string TableMappings;
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// The Amazon Resource Name (ARN) string that uniquely identifies the target endpoint.
        /// </summary>
        public readonly string TargetEndpointArn;

        [OutputConstructor]
        private GetReplicationTaskResult(
            string cdcStartPosition,

            string cdcStartTime,

            string id,

            string migrationType,

            string replicationInstanceArn,

            string replicationTaskArn,

            string replicationTaskId,

            string replicationTaskSettings,

            string sourceEndpointArn,

            bool startReplicationTask,

            string status,

            string tableMappings,

            ImmutableDictionary<string, string> tags,

            string targetEndpointArn)
        {
            CdcStartPosition = cdcStartPosition;
            CdcStartTime = cdcStartTime;
            Id = id;
            MigrationType = migrationType;
            ReplicationInstanceArn = replicationInstanceArn;
            ReplicationTaskArn = replicationTaskArn;
            ReplicationTaskId = replicationTaskId;
            ReplicationTaskSettings = replicationTaskSettings;
            SourceEndpointArn = sourceEndpointArn;
            StartReplicationTask = startReplicationTask;
            Status = status;
            TableMappings = tableMappings;
            Tags = tags;
            TargetEndpointArn = targetEndpointArn;
        }
    }
}
