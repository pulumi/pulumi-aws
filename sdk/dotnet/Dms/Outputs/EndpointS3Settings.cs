// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Dms.Outputs
{

    [OutputType]
    public sealed class EndpointS3Settings
    {
        /// <summary>
        /// S3 Bucket Object prefix.
        /// </summary>
        public readonly string? BucketFolder;
        /// <summary>
        /// S3 Bucket name.
        /// </summary>
        public readonly string? BucketName;
        /// <summary>
        /// Set to compress target files. Defaults to `NONE`. Valid values are `GZIP` and `NONE`.
        /// </summary>
        public readonly string? CompressionType;
        /// <summary>
        /// Delimiter used to separate columns in the source files. Defaults to `,`.
        /// </summary>
        public readonly string? CsvDelimiter;
        /// <summary>
        /// Delimiter used to separate rows in the source files. Defaults to `\n`.
        /// </summary>
        public readonly string? CsvRowDelimiter;
        /// <summary>
        /// Partition S3 bucket folders based on transaction commit dates. Defaults to `false`.
        /// </summary>
        public readonly bool? DatePartitionEnabled;
        /// <summary>
        /// JSON document that describes how AWS DMS should interpret the data.
        /// </summary>
        public readonly string? ExternalTableDefinition;
        /// <summary>
        /// Amazon Resource Name (ARN) of the IAM Role with permissions to read from or write to the S3 Bucket.
        /// </summary>
        public readonly string? ServiceAccessRoleArn;

        [OutputConstructor]
        private EndpointS3Settings(
            string? bucketFolder,

            string? bucketName,

            string? compressionType,

            string? csvDelimiter,

            string? csvRowDelimiter,

            bool? datePartitionEnabled,

            string? externalTableDefinition,

            string? serviceAccessRoleArn)
        {
            BucketFolder = bucketFolder;
            BucketName = bucketName;
            CompressionType = compressionType;
            CsvDelimiter = csvDelimiter;
            CsvRowDelimiter = csvRowDelimiter;
            DatePartitionEnabled = datePartitionEnabled;
            ExternalTableDefinition = externalTableDefinition;
            ServiceAccessRoleArn = serviceAccessRoleArn;
        }
    }
}
