// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Dms.Outputs
{

    [OutputType]
    public sealed class EndpointMysqlSettings
    {
        /// <summary>
        /// Script to run immediately after AWS DMS connects to the endpoint.
        /// </summary>
        public readonly string? AfterConnectScript;
        /// <summary>
        /// Authentication method to use. Valid values: `Password`, `Iam`.
        /// </summary>
        public readonly string? AuthenticationMethod;
        /// <summary>
        /// Whether to clean and recreate table metadata information on the replication instance when a mismatch occurs.
        /// </summary>
        public readonly bool? CleanSourceMetadataOnMismatch;
        /// <summary>
        /// Time interval to check the binary log for new changes/events when the database is idle. Default is `5`.
        /// </summary>
        public readonly int? EventsPollInterval;
        /// <summary>
        /// Client statement timeout (in seconds) for a MySQL source endpoint.
        /// </summary>
        public readonly int? ExecuteTimeout;
        /// <summary>
        /// Maximum size (in KB) of any .csv file used to transfer data to a MySQL-compatible database.
        /// </summary>
        public readonly int? MaxFileSize;
        /// <summary>
        /// Number of threads to use to load the data into the MySQL-compatible target database.
        /// </summary>
        public readonly int? ParallelLoadThreads;
        /// <summary>
        /// Time zone for the source MySQL database.
        /// </summary>
        public readonly string? ServerTimezone;
        /// <summary>
        /// ARN of the IAM role to authenticate when connecting to the endpoint.
        /// </summary>
        public readonly string? ServiceAccessRoleArn;
        /// <summary>
        /// Where to migrate source tables on the target. Valid values are `specific-database` and `multiple-databases`.
        /// </summary>
        public readonly string? TargetDbType;

        [OutputConstructor]
        private EndpointMysqlSettings(
            string? afterConnectScript,

            string? authenticationMethod,

            bool? cleanSourceMetadataOnMismatch,

            int? eventsPollInterval,

            int? executeTimeout,

            int? maxFileSize,

            int? parallelLoadThreads,

            string? serverTimezone,

            string? serviceAccessRoleArn,

            string? targetDbType)
        {
            AfterConnectScript = afterConnectScript;
            AuthenticationMethod = authenticationMethod;
            CleanSourceMetadataOnMismatch = cleanSourceMetadataOnMismatch;
            EventsPollInterval = eventsPollInterval;
            ExecuteTimeout = executeTimeout;
            MaxFileSize = maxFileSize;
            ParallelLoadThreads = parallelLoadThreads;
            ServerTimezone = serverTimezone;
            ServiceAccessRoleArn = serviceAccessRoleArn;
            TargetDbType = targetDbType;
        }
    }
}
