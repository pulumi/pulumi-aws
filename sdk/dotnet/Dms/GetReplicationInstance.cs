// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Dms
{
    public static class GetReplicationInstance
    {
        /// <summary>
        /// Data source for managing an AWS DMS (Database Migration) Replication Instance.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.Dms.GetReplicationInstance.Invoke(new()
        ///     {
        ///         ReplicationInstanceId = aws_dms_replication_instance.Test.Replication_instance_id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetReplicationInstanceResult> InvokeAsync(GetReplicationInstanceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetReplicationInstanceResult>("aws:dms/getReplicationInstance:getReplicationInstance", args ?? new GetReplicationInstanceArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for managing an AWS DMS (Database Migration) Replication Instance.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.Dms.GetReplicationInstance.Invoke(new()
        ///     {
        ///         ReplicationInstanceId = aws_dms_replication_instance.Test.Replication_instance_id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetReplicationInstanceResult> Invoke(GetReplicationInstanceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetReplicationInstanceResult>("aws:dms/getReplicationInstance:getReplicationInstance", args ?? new GetReplicationInstanceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetReplicationInstanceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The replication instance identifier. This parameter is stored as a lowercase string.
        /// 
        /// - Must contain from 1 to 63 alphanumeric characters or hyphens.
        /// - First character must be a letter.
        /// - Cannot end with a hyphen
        /// - Cannot contain two consecutive hyphens.
        /// </summary>
        [Input("replicationInstanceId", required: true)]
        public string ReplicationInstanceId { get; set; } = null!;

        [Input("tags")]
        private Dictionary<string, string>? _tags;
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetReplicationInstanceArgs()
        {
        }
        public static new GetReplicationInstanceArgs Empty => new GetReplicationInstanceArgs();
    }

    public sealed class GetReplicationInstanceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The replication instance identifier. This parameter is stored as a lowercase string.
        /// 
        /// - Must contain from 1 to 63 alphanumeric characters or hyphens.
        /// - First character must be a letter.
        /// - Cannot end with a hyphen
        /// - Cannot contain two consecutive hyphens.
        /// </summary>
        [Input("replicationInstanceId", required: true)]
        public Input<string> ReplicationInstanceId { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetReplicationInstanceInvokeArgs()
        {
        }
        public static new GetReplicationInstanceInvokeArgs Empty => new GetReplicationInstanceInvokeArgs();
    }


    [OutputType]
    public sealed class GetReplicationInstanceResult
    {
        /// <summary>
        /// (Default: 50, Min: 5, Max: 6144) The amount of storage (in gigabytes) to be initially allocated for the replication instance.
        /// </summary>
        public readonly int AllocatedStorage;
        /// <summary>
        /// (Default: false) Indicates that major version upgrades are allowed.
        /// </summary>
        public readonly bool AllowMajorVersionUpgrade;
        /// <summary>
        /// (Default: false) Indicates whether the changes should be applied immediately or during the next maintenance window. Only used when updating an existing resource.
        /// </summary>
        public readonly bool ApplyImmediately;
        /// <summary>
        /// (Default: false) Indicates that minor engine upgrades will be applied automatically to the replication instance during the maintenance window.
        /// </summary>
        public readonly bool AutoMinorVersionUpgrade;
        /// <summary>
        /// The EC2 Availability Zone that the replication instance will be created in.
        /// </summary>
        public readonly string AvailabilityZone;
        /// <summary>
        /// The engine version number of the replication instance.
        /// </summary>
        public readonly string EngineVersion;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The Amazon Resource Name (ARN) for the KMS key that will be used to encrypt the connection parameters. If you do not specify a value for `kms_key_arn`, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region.
        /// </summary>
        public readonly string KmsKeyArn;
        /// <summary>
        /// Specifies if the replication instance is a multi-az deployment. You cannot set the `availability_zone` parameter if the `multi_az` parameter is set to `true`.
        /// </summary>
        public readonly bool MultiAz;
        /// <summary>
        /// The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).
        /// </summary>
        public readonly string PreferredMaintenanceWindow;
        /// <summary>
        /// (Default: false) Specifies the accessibility options for the replication instance. A value of true represents an instance with a public IP address. A value of false represents an instance with a private IP address.
        /// </summary>
        public readonly bool PubliclyAccessible;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the replication instance.
        /// </summary>
        public readonly string ReplicationInstanceArn;
        /// <summary>
        /// The compute and memory capacity of the replication instance as specified by the replication instance class. See [AWS DMS User Guide](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_ReplicationInstance.Types.html) for available instance sizes and advice on which one to choose.
        /// </summary>
        public readonly string ReplicationInstanceClass;
        public readonly string ReplicationInstanceId;
        /// <summary>
        /// A list of the private IP addresses of the replication instance.
        /// </summary>
        public readonly ImmutableArray<string> ReplicationInstancePrivateIps;
        /// <summary>
        /// A list of the public IP addresses of the replication instance.
        /// </summary>
        public readonly ImmutableArray<string> ReplicationInstancePublicIps;
        /// <summary>
        /// (Optional) A subnet group to associate with the replication instance.
        /// </summary>
        public readonly string ReplicationSubnetGroupId;
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// (Optional) A list of VPC security group IDs to be used with the replication instance. The VPC security groups must work with the VPC containing the replication instance.
        /// </summary>
        public readonly ImmutableArray<string> VpcSecurityGroupIds;

        [OutputConstructor]
        private GetReplicationInstanceResult(
            int allocatedStorage,

            bool allowMajorVersionUpgrade,

            bool applyImmediately,

            bool autoMinorVersionUpgrade,

            string availabilityZone,

            string engineVersion,

            string id,

            string kmsKeyArn,

            bool multiAz,

            string preferredMaintenanceWindow,

            bool publiclyAccessible,

            string replicationInstanceArn,

            string replicationInstanceClass,

            string replicationInstanceId,

            ImmutableArray<string> replicationInstancePrivateIps,

            ImmutableArray<string> replicationInstancePublicIps,

            string replicationSubnetGroupId,

            ImmutableDictionary<string, string> tags,

            ImmutableArray<string> vpcSecurityGroupIds)
        {
            AllocatedStorage = allocatedStorage;
            AllowMajorVersionUpgrade = allowMajorVersionUpgrade;
            ApplyImmediately = applyImmediately;
            AutoMinorVersionUpgrade = autoMinorVersionUpgrade;
            AvailabilityZone = availabilityZone;
            EngineVersion = engineVersion;
            Id = id;
            KmsKeyArn = kmsKeyArn;
            MultiAz = multiAz;
            PreferredMaintenanceWindow = preferredMaintenanceWindow;
            PubliclyAccessible = publiclyAccessible;
            ReplicationInstanceArn = replicationInstanceArn;
            ReplicationInstanceClass = replicationInstanceClass;
            ReplicationInstanceId = replicationInstanceId;
            ReplicationInstancePrivateIps = replicationInstancePrivateIps;
            ReplicationInstancePublicIps = replicationInstancePublicIps;
            ReplicationSubnetGroupId = replicationSubnetGroupId;
            Tags = tags;
            VpcSecurityGroupIds = vpcSecurityGroupIds;
        }
    }
}
