// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Dms
{
    public static class GetReplicationInstance
    {
        /// <summary>
        /// Data source for managing an AWS DMS (Database Migration) Replication Instance.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.Dms.GetReplicationInstance.Invoke(new()
        ///     {
        ///         ReplicationInstanceId = aws_dms_replication_instance.Test.Replication_instance_id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetReplicationInstanceResult> InvokeAsync(GetReplicationInstanceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetReplicationInstanceResult>("aws:dms/getReplicationInstance:getReplicationInstance", args ?? new GetReplicationInstanceArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for managing an AWS DMS (Database Migration) Replication Instance.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.Dms.GetReplicationInstance.Invoke(new()
        ///     {
        ///         ReplicationInstanceId = aws_dms_replication_instance.Test.Replication_instance_id,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetReplicationInstanceResult> Invoke(GetReplicationInstanceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetReplicationInstanceResult>("aws:dms/getReplicationInstance:getReplicationInstance", args ?? new GetReplicationInstanceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetReplicationInstanceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The replication instance identifier.
        /// </summary>
        [Input("replicationInstanceId", required: true)]
        public string ReplicationInstanceId { get; set; } = null!;

        [Input("tags")]
        private Dictionary<string, string>? _tags;
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetReplicationInstanceArgs()
        {
        }
        public static new GetReplicationInstanceArgs Empty => new GetReplicationInstanceArgs();
    }

    public sealed class GetReplicationInstanceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The replication instance identifier.
        /// </summary>
        [Input("replicationInstanceId", required: true)]
        public Input<string> ReplicationInstanceId { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetReplicationInstanceInvokeArgs()
        {
        }
        public static new GetReplicationInstanceInvokeArgs Empty => new GetReplicationInstanceInvokeArgs();
    }


    [OutputType]
    public sealed class GetReplicationInstanceResult
    {
        /// <summary>
        /// The amount of storage (in gigabytes) to be initially allocated for the replication instance.
        /// </summary>
        public readonly int AllocatedStorage;
        /// <summary>
        /// Indicates that minor engine upgrades will be applied automatically to the replication instance during the maintenance window.
        /// </summary>
        public readonly bool AutoMinorVersionUpgrade;
        /// <summary>
        /// The EC2 Availability Zone that the replication instance will be created in.
        /// </summary>
        public readonly string AvailabilityZone;
        /// <summary>
        /// The engine version number of the replication instance.
        /// </summary>
        public readonly string EngineVersion;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The Amazon Resource Name (ARN) for the KMS key used to encrypt the connection parameters.
        /// </summary>
        public readonly string KmsKeyArn;
        /// <summary>
        /// Specifies if the replication instance is a multi-az deployment.
        /// </summary>
        public readonly bool MultiAz;
        /// <summary>
        /// The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).
        /// </summary>
        public readonly string PreferredMaintenanceWindow;
        /// <summary>
        /// Specifies the accessibility options for the replication instance. A value of true represents an instance with a public IP address. A value of false represents an instance with a private IP address.
        /// </summary>
        public readonly bool PubliclyAccessible;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the replication instance.
        /// </summary>
        public readonly string ReplicationInstanceArn;
        /// <summary>
        /// The compute and memory capacity of the replication instance as specified by the replication instance class. See [AWS DMS User Guide](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_ReplicationInstance.Types.html) for information on instance classes.
        /// </summary>
        public readonly string ReplicationInstanceClass;
        public readonly string ReplicationInstanceId;
        /// <summary>
        /// A list of the private IP addresses of the replication instance.
        /// </summary>
        public readonly ImmutableArray<string> ReplicationInstancePrivateIps;
        /// <summary>
        /// A list of the public IP addresses of the replication instance.
        /// </summary>
        public readonly ImmutableArray<string> ReplicationInstancePublicIps;
        /// <summary>
        /// A subnet group to associate with the replication instance.
        /// </summary>
        public readonly string ReplicationSubnetGroupId;
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// A set of VPC security group IDs that are used with the replication instance.
        /// </summary>
        public readonly ImmutableArray<string> VpcSecurityGroupIds;

        [OutputConstructor]
        private GetReplicationInstanceResult(
            int allocatedStorage,

            bool autoMinorVersionUpgrade,

            string availabilityZone,

            string engineVersion,

            string id,

            string kmsKeyArn,

            bool multiAz,

            string preferredMaintenanceWindow,

            bool publiclyAccessible,

            string replicationInstanceArn,

            string replicationInstanceClass,

            string replicationInstanceId,

            ImmutableArray<string> replicationInstancePrivateIps,

            ImmutableArray<string> replicationInstancePublicIps,

            string replicationSubnetGroupId,

            ImmutableDictionary<string, string> tags,

            ImmutableArray<string> vpcSecurityGroupIds)
        {
            AllocatedStorage = allocatedStorage;
            AutoMinorVersionUpgrade = autoMinorVersionUpgrade;
            AvailabilityZone = availabilityZone;
            EngineVersion = engineVersion;
            Id = id;
            KmsKeyArn = kmsKeyArn;
            MultiAz = multiAz;
            PreferredMaintenanceWindow = preferredMaintenanceWindow;
            PubliclyAccessible = publiclyAccessible;
            ReplicationInstanceArn = replicationInstanceArn;
            ReplicationInstanceClass = replicationInstanceClass;
            ReplicationInstanceId = replicationInstanceId;
            ReplicationInstancePrivateIps = replicationInstancePrivateIps;
            ReplicationInstancePublicIps = replicationInstancePublicIps;
            ReplicationSubnetGroupId = replicationSubnetGroupId;
            Tags = tags;
            VpcSecurityGroupIds = vpcSecurityGroupIds;
        }
    }
}
