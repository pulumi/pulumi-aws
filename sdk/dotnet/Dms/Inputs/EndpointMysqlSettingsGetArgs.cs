// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Dms.Inputs
{

    public sealed class EndpointMysqlSettingsGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Script to run immediately after AWS DMS connects to the endpoint.
        /// </summary>
        [Input("afterConnectScript")]
        public Input<string>? AfterConnectScript { get; set; }

        /// <summary>
        /// Authentication method to use. Valid values: `Password`, `Iam`.
        /// </summary>
        [Input("authenticationMethod")]
        public Input<string>? AuthenticationMethod { get; set; }

        /// <summary>
        /// Whether to clean and recreate table metadata information on the replication instance when a mismatch occurs.
        /// </summary>
        [Input("cleanSourceMetadataOnMismatch")]
        public Input<bool>? CleanSourceMetadataOnMismatch { get; set; }

        /// <summary>
        /// Time interval to check the binary log for new changes/events when the database is idle. Default is `5`.
        /// </summary>
        [Input("eventsPollInterval")]
        public Input<int>? EventsPollInterval { get; set; }

        /// <summary>
        /// Client statement timeout (in seconds) for a MySQL source endpoint.
        /// </summary>
        [Input("executeTimeout")]
        public Input<int>? ExecuteTimeout { get; set; }

        /// <summary>
        /// Maximum size (in KB) of any .csv file used to transfer data to a MySQL-compatible database.
        /// </summary>
        [Input("maxFileSize")]
        public Input<int>? MaxFileSize { get; set; }

        /// <summary>
        /// Number of threads to use to load the data into the MySQL-compatible target database.
        /// </summary>
        [Input("parallelLoadThreads")]
        public Input<int>? ParallelLoadThreads { get; set; }

        /// <summary>
        /// Time zone for the source MySQL database.
        /// </summary>
        [Input("serverTimezone")]
        public Input<string>? ServerTimezone { get; set; }

        /// <summary>
        /// ARN of the IAM role to authenticate when connecting to the endpoint.
        /// </summary>
        [Input("serviceAccessRoleArn")]
        public Input<string>? ServiceAccessRoleArn { get; set; }

        /// <summary>
        /// Where to migrate source tables on the target. Valid values are `specific-database` and `multiple-databases`.
        /// </summary>
        [Input("targetDbType")]
        public Input<string>? TargetDbType { get; set; }

        public EndpointMysqlSettingsGetArgs()
        {
        }
        public static new EndpointMysqlSettingsGetArgs Empty => new EndpointMysqlSettingsGetArgs();
    }
}
