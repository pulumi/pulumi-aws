// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Dms.Inputs
{

    public sealed class EndpointKafkaSettingsArgs : global::Pulumi.ResourceArgs
    {
        [Input("broker", required: true)]
        public Input<string> Broker { get; set; } = null!;

        [Input("includeControlDetails")]
        public Input<bool>? IncludeControlDetails { get; set; }

        [Input("includeNullAndEmpty")]
        public Input<bool>? IncludeNullAndEmpty { get; set; }

        [Input("includePartitionValue")]
        public Input<bool>? IncludePartitionValue { get; set; }

        [Input("includeTableAlterOperations")]
        public Input<bool>? IncludeTableAlterOperations { get; set; }

        [Input("includeTransactionDetails")]
        public Input<bool>? IncludeTransactionDetails { get; set; }

        [Input("messageFormat")]
        public Input<string>? MessageFormat { get; set; }

        [Input("messageMaxBytes")]
        public Input<int>? MessageMaxBytes { get; set; }

        [Input("noHexPrefix")]
        public Input<bool>? NoHexPrefix { get; set; }

        [Input("partitionIncludeSchemaTable")]
        public Input<bool>? PartitionIncludeSchemaTable { get; set; }

        [Input("saslPassword")]
        private Input<string>? _saslPassword;
        public Input<string>? SaslPassword
        {
            get => _saslPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _saslPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("saslUsername")]
        public Input<string>? SaslUsername { get; set; }

        [Input("securityProtocol")]
        public Input<string>? SecurityProtocol { get; set; }

        [Input("sslCaCertificateArn")]
        public Input<string>? SslCaCertificateArn { get; set; }

        [Input("sslClientCertificateArn")]
        public Input<string>? SslClientCertificateArn { get; set; }

        [Input("sslClientKeyArn")]
        public Input<string>? SslClientKeyArn { get; set; }

        [Input("sslClientKeyPassword")]
        private Input<string>? _sslClientKeyPassword;
        public Input<string>? SslClientKeyPassword
        {
            get => _sslClientKeyPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _sslClientKeyPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("topic")]
        public Input<string>? Topic { get; set; }

        public EndpointKafkaSettingsArgs()
        {
        }
        public static new EndpointKafkaSettingsArgs Empty => new EndpointKafkaSettingsArgs();
    }
}
