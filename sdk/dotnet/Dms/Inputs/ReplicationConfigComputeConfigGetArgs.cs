// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Dms.Inputs
{

    public sealed class ReplicationConfigComputeConfigGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Availability Zone where the DMS Serverless replication using this configuration will run. The default value is a random.
        /// </summary>
        [Input("availabilityZone")]
        public Input<string>? AvailabilityZone { get; set; }

        /// <summary>
        /// A list of custom DNS name servers supported for the DMS Serverless replication to access your source or target database.
        /// </summary>
        [Input("dnsNameServers")]
        public Input<string>? DnsNameServers { get; set; }

        /// <summary>
        /// An Key Management Service (KMS) key Amazon Resource Name (ARN) that is used to encrypt the data during DMS Serverless replication. If you don't specify a value for the KmsKeyId parameter, DMS uses your default encryption key.
        /// </summary>
        [Input("kmsKeyId")]
        public Input<string>? KmsKeyId { get; set; }

        /// <summary>
        /// Specifies the maximum value of the DMS capacity units (DCUs) for which a given DMS Serverless replication can be provisioned. A single DCU is 2GB of RAM, with 2 DCUs as the minimum value allowed. The list of valid DCU values includes 2, 4, 8, 16, 32, 64, 128, 192, 256, and 384.
        /// </summary>
        [Input("maxCapacityUnits")]
        public Input<int>? MaxCapacityUnits { get; set; }

        /// <summary>
        /// Specifies the minimum value of the DMS capacity units (DCUs) for which a given DMS Serverless replication can be provisioned. The list of valid DCU values includes 2, 4, 8, 16, 32, 64, 128, 192, 256, and 384. If this value isn't set DMS scans the current activity of available source tables to identify an optimum setting for this parameter.
        /// </summary>
        [Input("minCapacityUnits")]
        public Input<int>? MinCapacityUnits { get; set; }

        /// <summary>
        /// Specifies if the replication instance is a multi-az deployment. You cannot set the `availability_zone` parameter if the `multi_az` parameter is set to `true`.
        /// </summary>
        [Input("multiAz")]
        public Input<bool>? MultiAz { get; set; }

        /// <summary>
        /// The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).
        /// 
        /// - Default: A 30-minute window selected at random from an 8-hour block of time per region, occurring on a random day of the week.
        /// - Format: `ddd:hh24:mi-ddd:hh24:mi`
        /// - Valid Days: `mon, tue, wed, thu, fri, sat, sun`
        /// - Constraints: Minimum 30-minute window.
        /// </summary>
        [Input("preferredMaintenanceWindow")]
        public Input<string>? PreferredMaintenanceWindow { get; set; }

        /// <summary>
        /// Specifies a subnet group identifier to associate with the DMS Serverless replication.
        /// </summary>
        [Input("replicationSubnetGroupId", required: true)]
        public Input<string> ReplicationSubnetGroupId { get; set; } = null!;

        [Input("vpcSecurityGroupIds")]
        private InputList<string>? _vpcSecurityGroupIds;

        /// <summary>
        /// Specifies the virtual private cloud (VPC) security group to use with the DMS Serverless replication. The VPC security group must work with the VPC containing the replication.
        /// </summary>
        public InputList<string> VpcSecurityGroupIds
        {
            get => _vpcSecurityGroupIds ?? (_vpcSecurityGroupIds = new InputList<string>());
            set => _vpcSecurityGroupIds = value;
        }

        public ReplicationConfigComputeConfigGetArgs()
        {
        }
        public static new ReplicationConfigComputeConfigGetArgs Empty => new ReplicationConfigComputeConfigGetArgs();
    }
}
