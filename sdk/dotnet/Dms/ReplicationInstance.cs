// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Dms
{
    [AwsResourceType("aws:dms/replicationInstance:ReplicationInstance")]
    public partial class ReplicationInstance : global::Pulumi.CustomResource
    {
        [Output("allocatedStorage")]
        public Output<int> AllocatedStorage { get; private set; } = null!;

        [Output("allowMajorVersionUpgrade")]
        public Output<bool?> AllowMajorVersionUpgrade { get; private set; } = null!;

        [Output("applyImmediately")]
        public Output<bool?> ApplyImmediately { get; private set; } = null!;

        [Output("autoMinorVersionUpgrade")]
        public Output<bool> AutoMinorVersionUpgrade { get; private set; } = null!;

        [Output("availabilityZone")]
        public Output<string> AvailabilityZone { get; private set; } = null!;

        [Output("engineVersion")]
        public Output<string> EngineVersion { get; private set; } = null!;

        [Output("kmsKeyArn")]
        public Output<string> KmsKeyArn { get; private set; } = null!;

        [Output("multiAz")]
        public Output<bool> MultiAz { get; private set; } = null!;

        [Output("preferredMaintenanceWindow")]
        public Output<string> PreferredMaintenanceWindow { get; private set; } = null!;

        [Output("publiclyAccessible")]
        public Output<bool> PubliclyAccessible { get; private set; } = null!;

        [Output("replicationInstanceArn")]
        public Output<string> ReplicationInstanceArn { get; private set; } = null!;

        [Output("replicationInstanceClass")]
        public Output<string> ReplicationInstanceClass { get; private set; } = null!;

        [Output("replicationInstanceId")]
        public Output<string> ReplicationInstanceId { get; private set; } = null!;

        [Output("replicationInstancePrivateIps")]
        public Output<ImmutableArray<string>> ReplicationInstancePrivateIps { get; private set; } = null!;

        [Output("replicationInstancePublicIps")]
        public Output<ImmutableArray<string>> ReplicationInstancePublicIps { get; private set; } = null!;

        [Output("replicationSubnetGroupId")]
        public Output<string> ReplicationSubnetGroupId { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("vpcSecurityGroupIds")]
        public Output<ImmutableArray<string>> VpcSecurityGroupIds { get; private set; } = null!;


        /// <summary>
        /// Create a ReplicationInstance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ReplicationInstance(string name, ReplicationInstanceArgs args, CustomResourceOptions? options = null)
            : base("aws:dms/replicationInstance:ReplicationInstance", name, args ?? new ReplicationInstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ReplicationInstance(string name, Input<string> id, ReplicationInstanceState? state = null, CustomResourceOptions? options = null)
            : base("aws:dms/replicationInstance:ReplicationInstance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ReplicationInstance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ReplicationInstance Get(string name, Input<string> id, ReplicationInstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new ReplicationInstance(name, id, state, options);
        }
    }

    public sealed class ReplicationInstanceArgs : global::Pulumi.ResourceArgs
    {
        [Input("allocatedStorage")]
        public Input<int>? AllocatedStorage { get; set; }

        [Input("allowMajorVersionUpgrade")]
        public Input<bool>? AllowMajorVersionUpgrade { get; set; }

        [Input("applyImmediately")]
        public Input<bool>? ApplyImmediately { get; set; }

        [Input("autoMinorVersionUpgrade")]
        public Input<bool>? AutoMinorVersionUpgrade { get; set; }

        [Input("availabilityZone")]
        public Input<string>? AvailabilityZone { get; set; }

        [Input("engineVersion")]
        public Input<string>? EngineVersion { get; set; }

        [Input("kmsKeyArn")]
        public Input<string>? KmsKeyArn { get; set; }

        [Input("multiAz")]
        public Input<bool>? MultiAz { get; set; }

        [Input("preferredMaintenanceWindow")]
        public Input<string>? PreferredMaintenanceWindow { get; set; }

        [Input("publiclyAccessible")]
        public Input<bool>? PubliclyAccessible { get; set; }

        [Input("replicationInstanceClass", required: true)]
        public Input<string> ReplicationInstanceClass { get; set; } = null!;

        [Input("replicationInstanceId", required: true)]
        public Input<string> ReplicationInstanceId { get; set; } = null!;

        [Input("replicationSubnetGroupId")]
        public Input<string>? ReplicationSubnetGroupId { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("vpcSecurityGroupIds")]
        private InputList<string>? _vpcSecurityGroupIds;
        public InputList<string> VpcSecurityGroupIds
        {
            get => _vpcSecurityGroupIds ?? (_vpcSecurityGroupIds = new InputList<string>());
            set => _vpcSecurityGroupIds = value;
        }

        public ReplicationInstanceArgs()
        {
        }
        public static new ReplicationInstanceArgs Empty => new ReplicationInstanceArgs();
    }

    public sealed class ReplicationInstanceState : global::Pulumi.ResourceArgs
    {
        [Input("allocatedStorage")]
        public Input<int>? AllocatedStorage { get; set; }

        [Input("allowMajorVersionUpgrade")]
        public Input<bool>? AllowMajorVersionUpgrade { get; set; }

        [Input("applyImmediately")]
        public Input<bool>? ApplyImmediately { get; set; }

        [Input("autoMinorVersionUpgrade")]
        public Input<bool>? AutoMinorVersionUpgrade { get; set; }

        [Input("availabilityZone")]
        public Input<string>? AvailabilityZone { get; set; }

        [Input("engineVersion")]
        public Input<string>? EngineVersion { get; set; }

        [Input("kmsKeyArn")]
        public Input<string>? KmsKeyArn { get; set; }

        [Input("multiAz")]
        public Input<bool>? MultiAz { get; set; }

        [Input("preferredMaintenanceWindow")]
        public Input<string>? PreferredMaintenanceWindow { get; set; }

        [Input("publiclyAccessible")]
        public Input<bool>? PubliclyAccessible { get; set; }

        [Input("replicationInstanceArn")]
        public Input<string>? ReplicationInstanceArn { get; set; }

        [Input("replicationInstanceClass")]
        public Input<string>? ReplicationInstanceClass { get; set; }

        [Input("replicationInstanceId")]
        public Input<string>? ReplicationInstanceId { get; set; }

        [Input("replicationInstancePrivateIps")]
        private InputList<string>? _replicationInstancePrivateIps;
        public InputList<string> ReplicationInstancePrivateIps
        {
            get => _replicationInstancePrivateIps ?? (_replicationInstancePrivateIps = new InputList<string>());
            set => _replicationInstancePrivateIps = value;
        }

        [Input("replicationInstancePublicIps")]
        private InputList<string>? _replicationInstancePublicIps;
        public InputList<string> ReplicationInstancePublicIps
        {
            get => _replicationInstancePublicIps ?? (_replicationInstancePublicIps = new InputList<string>());
            set => _replicationInstancePublicIps = value;
        }

        [Input("replicationSubnetGroupId")]
        public Input<string>? ReplicationSubnetGroupId { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("vpcSecurityGroupIds")]
        private InputList<string>? _vpcSecurityGroupIds;
        public InputList<string> VpcSecurityGroupIds
        {
            get => _vpcSecurityGroupIds ?? (_vpcSecurityGroupIds = new InputList<string>());
            set => _vpcSecurityGroupIds = value;
        }

        public ReplicationInstanceState()
        {
        }
        public static new ReplicationInstanceState Empty => new ReplicationInstanceState();
    }
}
