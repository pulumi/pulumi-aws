// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Dms
{
    [AwsResourceType("aws:dms/s3Endpoint:S3Endpoint")]
    public partial class S3Endpoint : global::Pulumi.CustomResource
    {
        [Output("addColumnName")]
        public Output<bool?> AddColumnName { get; private set; } = null!;

        [Output("addTrailingPaddingCharacter")]
        public Output<bool?> AddTrailingPaddingCharacter { get; private set; } = null!;

        [Output("bucketFolder")]
        public Output<string?> BucketFolder { get; private set; } = null!;

        [Output("bucketName")]
        public Output<string> BucketName { get; private set; } = null!;

        [Output("cannedAclForObjects")]
        public Output<string?> CannedAclForObjects { get; private set; } = null!;

        [Output("cdcInsertsAndUpdates")]
        public Output<bool?> CdcInsertsAndUpdates { get; private set; } = null!;

        [Output("cdcInsertsOnly")]
        public Output<bool?> CdcInsertsOnly { get; private set; } = null!;

        [Output("cdcMaxBatchInterval")]
        public Output<int?> CdcMaxBatchInterval { get; private set; } = null!;

        [Output("cdcMinFileSize")]
        public Output<int?> CdcMinFileSize { get; private set; } = null!;

        [Output("cdcPath")]
        public Output<string?> CdcPath { get; private set; } = null!;

        [Output("certificateArn")]
        public Output<string> CertificateArn { get; private set; } = null!;

        [Output("compressionType")]
        public Output<string?> CompressionType { get; private set; } = null!;

        [Output("csvDelimiter")]
        public Output<string?> CsvDelimiter { get; private set; } = null!;

        [Output("csvNoSupValue")]
        public Output<string?> CsvNoSupValue { get; private set; } = null!;

        [Output("csvNullValue")]
        public Output<string?> CsvNullValue { get; private set; } = null!;

        [Output("csvRowDelimiter")]
        public Output<string?> CsvRowDelimiter { get; private set; } = null!;

        [Output("dataFormat")]
        public Output<string?> DataFormat { get; private set; } = null!;

        [Output("dataPageSize")]
        public Output<int?> DataPageSize { get; private set; } = null!;

        [Output("datePartitionDelimiter")]
        public Output<string?> DatePartitionDelimiter { get; private set; } = null!;

        [Output("datePartitionEnabled")]
        public Output<bool?> DatePartitionEnabled { get; private set; } = null!;

        [Output("datePartitionSequence")]
        public Output<string?> DatePartitionSequence { get; private set; } = null!;

        [Output("datePartitionTimezone")]
        public Output<string?> DatePartitionTimezone { get; private set; } = null!;

        [Output("dictPageSizeLimit")]
        public Output<int?> DictPageSizeLimit { get; private set; } = null!;

        [Output("enableStatistics")]
        public Output<bool?> EnableStatistics { get; private set; } = null!;

        [Output("encodingType")]
        public Output<string?> EncodingType { get; private set; } = null!;

        [Output("encryptionMode")]
        public Output<string?> EncryptionMode { get; private set; } = null!;

        [Output("endpointArn")]
        public Output<string> EndpointArn { get; private set; } = null!;

        [Output("endpointId")]
        public Output<string> EndpointId { get; private set; } = null!;

        [Output("endpointType")]
        public Output<string> EndpointType { get; private set; } = null!;

        [Output("engineDisplayName")]
        public Output<string> EngineDisplayName { get; private set; } = null!;

        [Output("expectedBucketOwner")]
        public Output<string?> ExpectedBucketOwner { get; private set; } = null!;

        [Output("externalId")]
        public Output<string> ExternalId { get; private set; } = null!;

        [Output("externalTableDefinition")]
        public Output<string?> ExternalTableDefinition { get; private set; } = null!;

        [Output("ignoreHeaderRows")]
        public Output<int?> IgnoreHeaderRows { get; private set; } = null!;

        [Output("includeOpForFullLoad")]
        public Output<bool?> IncludeOpForFullLoad { get; private set; } = null!;

        [Output("kmsKeyArn")]
        public Output<string> KmsKeyArn { get; private set; } = null!;

        [Output("maxFileSize")]
        public Output<int?> MaxFileSize { get; private set; } = null!;

        [Output("parquetTimestampInMillisecond")]
        public Output<bool?> ParquetTimestampInMillisecond { get; private set; } = null!;

        [Output("parquetVersion")]
        public Output<string?> ParquetVersion { get; private set; } = null!;

        [Output("preserveTransactions")]
        public Output<bool?> PreserveTransactions { get; private set; } = null!;

        [Output("rfc4180")]
        public Output<bool?> Rfc4180 { get; private set; } = null!;

        [Output("rowGroupLength")]
        public Output<int?> RowGroupLength { get; private set; } = null!;

        [Output("serverSideEncryptionKmsKeyId")]
        public Output<string?> ServerSideEncryptionKmsKeyId { get; private set; } = null!;

        [Output("serviceAccessRoleArn")]
        public Output<string> ServiceAccessRoleArn { get; private set; } = null!;

        [Output("sslMode")]
        public Output<string> SslMode { get; private set; } = null!;

        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("timestampColumnName")]
        public Output<string?> TimestampColumnName { get; private set; } = null!;

        [Output("useCsvNoSupValue")]
        public Output<bool?> UseCsvNoSupValue { get; private set; } = null!;

        [Output("useTaskStartTimeForFullLoadTimestamp")]
        public Output<bool?> UseTaskStartTimeForFullLoadTimestamp { get; private set; } = null!;


        /// <summary>
        /// Create a S3Endpoint resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public S3Endpoint(string name, S3EndpointArgs args, CustomResourceOptions? options = null)
            : base("aws:dms/s3Endpoint:S3Endpoint", name, args ?? new S3EndpointArgs(), MakeResourceOptions(options, ""))
        {
        }

        private S3Endpoint(string name, Input<string> id, S3EndpointState? state = null, CustomResourceOptions? options = null)
            : base("aws:dms/s3Endpoint:S3Endpoint", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing S3Endpoint resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static S3Endpoint Get(string name, Input<string> id, S3EndpointState? state = null, CustomResourceOptions? options = null)
        {
            return new S3Endpoint(name, id, state, options);
        }
    }

    public sealed class S3EndpointArgs : global::Pulumi.ResourceArgs
    {
        [Input("addColumnName")]
        public Input<bool>? AddColumnName { get; set; }

        [Input("addTrailingPaddingCharacter")]
        public Input<bool>? AddTrailingPaddingCharacter { get; set; }

        [Input("bucketFolder")]
        public Input<string>? BucketFolder { get; set; }

        [Input("bucketName", required: true)]
        public Input<string> BucketName { get; set; } = null!;

        [Input("cannedAclForObjects")]
        public Input<string>? CannedAclForObjects { get; set; }

        [Input("cdcInsertsAndUpdates")]
        public Input<bool>? CdcInsertsAndUpdates { get; set; }

        [Input("cdcInsertsOnly")]
        public Input<bool>? CdcInsertsOnly { get; set; }

        [Input("cdcMaxBatchInterval")]
        public Input<int>? CdcMaxBatchInterval { get; set; }

        [Input("cdcMinFileSize")]
        public Input<int>? CdcMinFileSize { get; set; }

        [Input("cdcPath")]
        public Input<string>? CdcPath { get; set; }

        [Input("certificateArn")]
        public Input<string>? CertificateArn { get; set; }

        [Input("compressionType")]
        public Input<string>? CompressionType { get; set; }

        [Input("csvDelimiter")]
        public Input<string>? CsvDelimiter { get; set; }

        [Input("csvNoSupValue")]
        public Input<string>? CsvNoSupValue { get; set; }

        [Input("csvNullValue")]
        public Input<string>? CsvNullValue { get; set; }

        [Input("csvRowDelimiter")]
        public Input<string>? CsvRowDelimiter { get; set; }

        [Input("dataFormat")]
        public Input<string>? DataFormat { get; set; }

        [Input("dataPageSize")]
        public Input<int>? DataPageSize { get; set; }

        [Input("datePartitionDelimiter")]
        public Input<string>? DatePartitionDelimiter { get; set; }

        [Input("datePartitionEnabled")]
        public Input<bool>? DatePartitionEnabled { get; set; }

        [Input("datePartitionSequence")]
        public Input<string>? DatePartitionSequence { get; set; }

        [Input("datePartitionTimezone")]
        public Input<string>? DatePartitionTimezone { get; set; }

        [Input("dictPageSizeLimit")]
        public Input<int>? DictPageSizeLimit { get; set; }

        [Input("enableStatistics")]
        public Input<bool>? EnableStatistics { get; set; }

        [Input("encodingType")]
        public Input<string>? EncodingType { get; set; }

        [Input("encryptionMode")]
        public Input<string>? EncryptionMode { get; set; }

        [Input("endpointId", required: true)]
        public Input<string> EndpointId { get; set; } = null!;

        [Input("endpointType", required: true)]
        public Input<string> EndpointType { get; set; } = null!;

        [Input("expectedBucketOwner")]
        public Input<string>? ExpectedBucketOwner { get; set; }

        [Input("externalTableDefinition")]
        public Input<string>? ExternalTableDefinition { get; set; }

        [Input("ignoreHeaderRows")]
        public Input<int>? IgnoreHeaderRows { get; set; }

        [Input("includeOpForFullLoad")]
        public Input<bool>? IncludeOpForFullLoad { get; set; }

        [Input("kmsKeyArn")]
        public Input<string>? KmsKeyArn { get; set; }

        [Input("maxFileSize")]
        public Input<int>? MaxFileSize { get; set; }

        [Input("parquetTimestampInMillisecond")]
        public Input<bool>? ParquetTimestampInMillisecond { get; set; }

        [Input("parquetVersion")]
        public Input<string>? ParquetVersion { get; set; }

        [Input("preserveTransactions")]
        public Input<bool>? PreserveTransactions { get; set; }

        [Input("rfc4180")]
        public Input<bool>? Rfc4180 { get; set; }

        [Input("rowGroupLength")]
        public Input<int>? RowGroupLength { get; set; }

        [Input("serverSideEncryptionKmsKeyId")]
        public Input<string>? ServerSideEncryptionKmsKeyId { get; set; }

        [Input("serviceAccessRoleArn", required: true)]
        public Input<string> ServiceAccessRoleArn { get; set; } = null!;

        [Input("sslMode")]
        public Input<string>? SslMode { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("timestampColumnName")]
        public Input<string>? TimestampColumnName { get; set; }

        [Input("useCsvNoSupValue")]
        public Input<bool>? UseCsvNoSupValue { get; set; }

        [Input("useTaskStartTimeForFullLoadTimestamp")]
        public Input<bool>? UseTaskStartTimeForFullLoadTimestamp { get; set; }

        public S3EndpointArgs()
        {
        }
        public static new S3EndpointArgs Empty => new S3EndpointArgs();
    }

    public sealed class S3EndpointState : global::Pulumi.ResourceArgs
    {
        [Input("addColumnName")]
        public Input<bool>? AddColumnName { get; set; }

        [Input("addTrailingPaddingCharacter")]
        public Input<bool>? AddTrailingPaddingCharacter { get; set; }

        [Input("bucketFolder")]
        public Input<string>? BucketFolder { get; set; }

        [Input("bucketName")]
        public Input<string>? BucketName { get; set; }

        [Input("cannedAclForObjects")]
        public Input<string>? CannedAclForObjects { get; set; }

        [Input("cdcInsertsAndUpdates")]
        public Input<bool>? CdcInsertsAndUpdates { get; set; }

        [Input("cdcInsertsOnly")]
        public Input<bool>? CdcInsertsOnly { get; set; }

        [Input("cdcMaxBatchInterval")]
        public Input<int>? CdcMaxBatchInterval { get; set; }

        [Input("cdcMinFileSize")]
        public Input<int>? CdcMinFileSize { get; set; }

        [Input("cdcPath")]
        public Input<string>? CdcPath { get; set; }

        [Input("certificateArn")]
        public Input<string>? CertificateArn { get; set; }

        [Input("compressionType")]
        public Input<string>? CompressionType { get; set; }

        [Input("csvDelimiter")]
        public Input<string>? CsvDelimiter { get; set; }

        [Input("csvNoSupValue")]
        public Input<string>? CsvNoSupValue { get; set; }

        [Input("csvNullValue")]
        public Input<string>? CsvNullValue { get; set; }

        [Input("csvRowDelimiter")]
        public Input<string>? CsvRowDelimiter { get; set; }

        [Input("dataFormat")]
        public Input<string>? DataFormat { get; set; }

        [Input("dataPageSize")]
        public Input<int>? DataPageSize { get; set; }

        [Input("datePartitionDelimiter")]
        public Input<string>? DatePartitionDelimiter { get; set; }

        [Input("datePartitionEnabled")]
        public Input<bool>? DatePartitionEnabled { get; set; }

        [Input("datePartitionSequence")]
        public Input<string>? DatePartitionSequence { get; set; }

        [Input("datePartitionTimezone")]
        public Input<string>? DatePartitionTimezone { get; set; }

        [Input("dictPageSizeLimit")]
        public Input<int>? DictPageSizeLimit { get; set; }

        [Input("enableStatistics")]
        public Input<bool>? EnableStatistics { get; set; }

        [Input("encodingType")]
        public Input<string>? EncodingType { get; set; }

        [Input("encryptionMode")]
        public Input<string>? EncryptionMode { get; set; }

        [Input("endpointArn")]
        public Input<string>? EndpointArn { get; set; }

        [Input("endpointId")]
        public Input<string>? EndpointId { get; set; }

        [Input("endpointType")]
        public Input<string>? EndpointType { get; set; }

        [Input("engineDisplayName")]
        public Input<string>? EngineDisplayName { get; set; }

        [Input("expectedBucketOwner")]
        public Input<string>? ExpectedBucketOwner { get; set; }

        [Input("externalId")]
        public Input<string>? ExternalId { get; set; }

        [Input("externalTableDefinition")]
        public Input<string>? ExternalTableDefinition { get; set; }

        [Input("ignoreHeaderRows")]
        public Input<int>? IgnoreHeaderRows { get; set; }

        [Input("includeOpForFullLoad")]
        public Input<bool>? IncludeOpForFullLoad { get; set; }

        [Input("kmsKeyArn")]
        public Input<string>? KmsKeyArn { get; set; }

        [Input("maxFileSize")]
        public Input<int>? MaxFileSize { get; set; }

        [Input("parquetTimestampInMillisecond")]
        public Input<bool>? ParquetTimestampInMillisecond { get; set; }

        [Input("parquetVersion")]
        public Input<string>? ParquetVersion { get; set; }

        [Input("preserveTransactions")]
        public Input<bool>? PreserveTransactions { get; set; }

        [Input("rfc4180")]
        public Input<bool>? Rfc4180 { get; set; }

        [Input("rowGroupLength")]
        public Input<int>? RowGroupLength { get; set; }

        [Input("serverSideEncryptionKmsKeyId")]
        public Input<string>? ServerSideEncryptionKmsKeyId { get; set; }

        [Input("serviceAccessRoleArn")]
        public Input<string>? ServiceAccessRoleArn { get; set; }

        [Input("sslMode")]
        public Input<string>? SslMode { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("timestampColumnName")]
        public Input<string>? TimestampColumnName { get; set; }

        [Input("useCsvNoSupValue")]
        public Input<bool>? UseCsvNoSupValue { get; set; }

        [Input("useTaskStartTimeForFullLoadTimestamp")]
        public Input<bool>? UseTaskStartTimeForFullLoadTimestamp { get; set; }

        public S3EndpointState()
        {
        }
        public static new S3EndpointState Empty => new S3EndpointState();
    }
}
