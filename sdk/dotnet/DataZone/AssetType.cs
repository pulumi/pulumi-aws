// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.DataZone
{
    /// <summary>
    /// Resource for managing an AWS DataZone Asset Type.
    /// 
    /// ## Example Usage
    /// 
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var test = new Aws.DataZone.AssetType("test", new()
    ///     {
    ///         Description = "example",
    ///         DomainIdentifier = testAwsDatazoneDomain.Id,
    ///         Name = "example",
    ///         OwningProjectIdentifier = testAwsDatazoneProject.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import DataZone Asset Type using the `domain_identifier,name`. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:datazone/assetType:AssetType example domain-id-12345678,example
    /// ```
    /// </summary>
    [AwsResourceType("aws:datazone/assetType:AssetType")]
    public partial class AssetType : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The timestamp when the custom asset type was created.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The user who created the custom asset type.
        /// </summary>
        [Output("createdBy")]
        public Output<string> CreatedBy { get; private set; } = null!;

        /// <summary>
        /// The description of the custom asset type.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The unique identifier of the Amazon DataZone domain where the custom asset type is being created.
        /// </summary>
        [Output("domainIdentifier")]
        public Output<string> DomainIdentifier { get; private set; } = null!;

        /// <summary>
        /// The metadata forms that are to be attached to the custom asset type.
        /// </summary>
        [Output("formsInputs")]
        public Output<ImmutableArray<Outputs.AssetTypeFormsInput>> FormsInputs { get; private set; } = null!;

        /// <summary>
        /// The name of the custom asset type.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The unique identifier of the Amazon DataZone project that owns the custom asset type.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Output("owningProjectIdentifier")]
        public Output<string> OwningProjectIdentifier { get; private set; } = null!;

        /// <summary>
        /// The revision of the asset type.
        /// </summary>
        [Output("revision")]
        public Output<string> Revision { get; private set; } = null!;

        [Output("timeouts")]
        public Output<Outputs.AssetTypeTimeouts?> Timeouts { get; private set; } = null!;


        /// <summary>
        /// Create a AssetType resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AssetType(string name, AssetTypeArgs args, CustomResourceOptions? options = null)
            : base("aws:datazone/assetType:AssetType", name, args ?? new AssetTypeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AssetType(string name, Input<string> id, AssetTypeState? state = null, CustomResourceOptions? options = null)
            : base("aws:datazone/assetType:AssetType", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AssetType resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AssetType Get(string name, Input<string> id, AssetTypeState? state = null, CustomResourceOptions? options = null)
        {
            return new AssetType(name, id, state, options);
        }
    }

    public sealed class AssetTypeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the custom asset type.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The unique identifier of the Amazon DataZone domain where the custom asset type is being created.
        /// </summary>
        [Input("domainIdentifier", required: true)]
        public Input<string> DomainIdentifier { get; set; } = null!;

        [Input("formsInputs")]
        private InputList<Inputs.AssetTypeFormsInputArgs>? _formsInputs;

        /// <summary>
        /// The metadata forms that are to be attached to the custom asset type.
        /// </summary>
        public InputList<Inputs.AssetTypeFormsInputArgs> FormsInputs
        {
            get => _formsInputs ?? (_formsInputs = new InputList<Inputs.AssetTypeFormsInputArgs>());
            set => _formsInputs = value;
        }

        /// <summary>
        /// The name of the custom asset type.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The unique identifier of the Amazon DataZone project that owns the custom asset type.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("owningProjectIdentifier", required: true)]
        public Input<string> OwningProjectIdentifier { get; set; } = null!;

        [Input("timeouts")]
        public Input<Inputs.AssetTypeTimeoutsArgs>? Timeouts { get; set; }

        public AssetTypeArgs()
        {
        }
        public static new AssetTypeArgs Empty => new AssetTypeArgs();
    }

    public sealed class AssetTypeState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The timestamp when the custom asset type was created.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// The user who created the custom asset type.
        /// </summary>
        [Input("createdBy")]
        public Input<string>? CreatedBy { get; set; }

        /// <summary>
        /// The description of the custom asset type.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The unique identifier of the Amazon DataZone domain where the custom asset type is being created.
        /// </summary>
        [Input("domainIdentifier")]
        public Input<string>? DomainIdentifier { get; set; }

        [Input("formsInputs")]
        private InputList<Inputs.AssetTypeFormsInputGetArgs>? _formsInputs;

        /// <summary>
        /// The metadata forms that are to be attached to the custom asset type.
        /// </summary>
        public InputList<Inputs.AssetTypeFormsInputGetArgs> FormsInputs
        {
            get => _formsInputs ?? (_formsInputs = new InputList<Inputs.AssetTypeFormsInputGetArgs>());
            set => _formsInputs = value;
        }

        /// <summary>
        /// The name of the custom asset type.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The unique identifier of the Amazon DataZone project that owns the custom asset type.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("owningProjectIdentifier")]
        public Input<string>? OwningProjectIdentifier { get; set; }

        /// <summary>
        /// The revision of the asset type.
        /// </summary>
        [Input("revision")]
        public Input<string>? Revision { get; set; }

        [Input("timeouts")]
        public Input<Inputs.AssetTypeTimeoutsGetArgs>? Timeouts { get; set; }

        public AssetTypeState()
        {
        }
        public static new AssetTypeState Empty => new AssetTypeState();
    }
}
