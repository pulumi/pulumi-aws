// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.DataZone
{
    /// <summary>
    /// Resource for managing an AWS DataZone User Profile.
    /// 
    /// ## Example Usage
    /// 
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.DataZone.UserProfile("example", new()
    ///     {
    ///         UserIdentifier = exampleAwsIamUser.Arn,
    ///         DomainIdentifier = exampleAwsDatazoneDomain.Id,
    ///         UserType = "IAM_USER",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import DataZone User Profile using the `user_identifier,domain_identifier,type`. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:datazone/userProfile:UserProfile example arn:aws:iam::123456789012:user/example,dzd_54nakfrg9k6suo,IAM
    /// ```
    /// </summary>
    [AwsResourceType("aws:datazone/userProfile:UserProfile")]
    public partial class UserProfile : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Details about the user profile.
        /// </summary>
        [Output("details")]
        public Output<ImmutableArray<Outputs.UserProfileDetail>> Details { get; private set; } = null!;

        /// <summary>
        /// The domain identifier.
        /// </summary>
        [Output("domainIdentifier")]
        public Output<string> DomainIdentifier { get; private set; } = null!;

        /// <summary>
        /// The user profile status.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        [Output("timeouts")]
        public Output<Outputs.UserProfileTimeouts?> Timeouts { get; private set; } = null!;

        /// <summary>
        /// The user profile type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// The user identifier.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Output("userIdentifier")]
        public Output<string> UserIdentifier { get; private set; } = null!;

        /// <summary>
        /// The user type.
        /// </summary>
        [Output("userType")]
        public Output<string> UserType { get; private set; } = null!;


        /// <summary>
        /// Create a UserProfile resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public UserProfile(string name, UserProfileArgs args, CustomResourceOptions? options = null)
            : base("aws:datazone/userProfile:UserProfile", name, args ?? new UserProfileArgs(), MakeResourceOptions(options, ""))
        {
        }

        private UserProfile(string name, Input<string> id, UserProfileState? state = null, CustomResourceOptions? options = null)
            : base("aws:datazone/userProfile:UserProfile", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing UserProfile resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static UserProfile Get(string name, Input<string> id, UserProfileState? state = null, CustomResourceOptions? options = null)
        {
            return new UserProfile(name, id, state, options);
        }
    }

    public sealed class UserProfileArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The domain identifier.
        /// </summary>
        [Input("domainIdentifier", required: true)]
        public Input<string> DomainIdentifier { get; set; } = null!;

        /// <summary>
        /// The user profile status.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("timeouts")]
        public Input<Inputs.UserProfileTimeoutsArgs>? Timeouts { get; set; }

        /// <summary>
        /// The user identifier.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("userIdentifier", required: true)]
        public Input<string> UserIdentifier { get; set; } = null!;

        /// <summary>
        /// The user type.
        /// </summary>
        [Input("userType")]
        public Input<string>? UserType { get; set; }

        public UserProfileArgs()
        {
        }
        public static new UserProfileArgs Empty => new UserProfileArgs();
    }

    public sealed class UserProfileState : global::Pulumi.ResourceArgs
    {
        [Input("details")]
        private InputList<Inputs.UserProfileDetailGetArgs>? _details;

        /// <summary>
        /// Details about the user profile.
        /// </summary>
        public InputList<Inputs.UserProfileDetailGetArgs> Details
        {
            get => _details ?? (_details = new InputList<Inputs.UserProfileDetailGetArgs>());
            set => _details = value;
        }

        /// <summary>
        /// The domain identifier.
        /// </summary>
        [Input("domainIdentifier")]
        public Input<string>? DomainIdentifier { get; set; }

        /// <summary>
        /// The user profile status.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("timeouts")]
        public Input<Inputs.UserProfileTimeoutsGetArgs>? Timeouts { get; set; }

        /// <summary>
        /// The user profile type.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// The user identifier.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("userIdentifier")]
        public Input<string>? UserIdentifier { get; set; }

        /// <summary>
        /// The user type.
        /// </summary>
        [Input("userType")]
        public Input<string>? UserType { get; set; }

        public UserProfileState()
        {
        }
        public static new UserProfileState Empty => new UserProfileState();
    }
}
