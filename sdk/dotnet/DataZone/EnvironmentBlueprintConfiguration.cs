// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.DataZone
{
    /// <summary>
    /// Resource for managing an AWS DataZone Environment Blueprint Configuration.
    /// 
    /// ## Example Usage
    /// 
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.DataZone.Domain("example", new()
    ///     {
    ///         Name = "example_domain",
    ///         DomainExecutionRole = domainExecutionRole.Arn,
    ///     });
    /// 
    ///     var defaultDataLake = Aws.DataZone.GetEnvironmentBlueprint.Invoke(new()
    ///     {
    ///         DomainId = example.Id,
    ///         Name = "DefaultDataLake",
    ///         Managed = true,
    ///     });
    /// 
    ///     var exampleEnvironmentBlueprintConfiguration = new Aws.DataZone.EnvironmentBlueprintConfiguration("example", new()
    ///     {
    ///         DomainId = example.Id,
    ///         EnvironmentBlueprintId = defaultDataLake.Apply(getEnvironmentBlueprintResult =&gt; getEnvironmentBlueprintResult.Id),
    ///         EnabledRegions = new[]
    ///         {
    ///             "us-east-1",
    ///         },
    ///         RegionalParameters = 
    ///         {
    ///             { "us-east-1", 
    ///             {
    ///                 { "s3Location", "s3://my-amazon-datazone-bucket" },
    ///             } },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import DataZone Environment Blueprint Configuration using the `domain_id` and `environment_blueprint_id`, separated by a `/`. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:datazone/environmentBlueprintConfiguration:EnvironmentBlueprintConfiguration example domain-id-12345/environment-blueprint-id-54321
    /// ```
    /// </summary>
    [AwsResourceType("aws:datazone/environmentBlueprintConfiguration:EnvironmentBlueprintConfiguration")]
    public partial class EnvironmentBlueprintConfiguration : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ID of the Domain.
        /// </summary>
        [Output("domainId")]
        public Output<string> DomainId { get; private set; } = null!;

        /// <summary>
        /// Regions in which the blueprint is enabled
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Output("enabledRegions")]
        public Output<ImmutableArray<string>> EnabledRegions { get; private set; } = null!;

        /// <summary>
        /// ID of the Environment Blueprint
        /// </summary>
        [Output("environmentBlueprintId")]
        public Output<string> EnvironmentBlueprintId { get; private set; } = null!;

        /// <summary>
        /// ARN of the manage access role with which this blueprint is created.
        /// </summary>
        [Output("manageAccessRoleArn")]
        public Output<string?> ManageAccessRoleArn { get; private set; } = null!;

        /// <summary>
        /// ARN of the provisioning role with which this blueprint is created.
        /// </summary>
        [Output("provisioningRoleArn")]
        public Output<string?> ProvisioningRoleArn { get; private set; } = null!;

        /// <summary>
        /// Parameters for each region in which the blueprint is enabled
        /// </summary>
        [Output("regionalParameters")]
        public Output<ImmutableDictionary<string, ImmutableDictionary<string, string>>?> RegionalParameters { get; private set; } = null!;


        /// <summary>
        /// Create a EnvironmentBlueprintConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EnvironmentBlueprintConfiguration(string name, EnvironmentBlueprintConfigurationArgs args, CustomResourceOptions? options = null)
            : base("aws:datazone/environmentBlueprintConfiguration:EnvironmentBlueprintConfiguration", name, args ?? new EnvironmentBlueprintConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EnvironmentBlueprintConfiguration(string name, Input<string> id, EnvironmentBlueprintConfigurationState? state = null, CustomResourceOptions? options = null)
            : base("aws:datazone/environmentBlueprintConfiguration:EnvironmentBlueprintConfiguration", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EnvironmentBlueprintConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EnvironmentBlueprintConfiguration Get(string name, Input<string> id, EnvironmentBlueprintConfigurationState? state = null, CustomResourceOptions? options = null)
        {
            return new EnvironmentBlueprintConfiguration(name, id, state, options);
        }
    }

    public sealed class EnvironmentBlueprintConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ID of the Domain.
        /// </summary>
        [Input("domainId", required: true)]
        public Input<string> DomainId { get; set; } = null!;

        [Input("enabledRegions", required: true)]
        private InputList<string>? _enabledRegions;

        /// <summary>
        /// Regions in which the blueprint is enabled
        /// 
        /// The following arguments are optional:
        /// </summary>
        public InputList<string> EnabledRegions
        {
            get => _enabledRegions ?? (_enabledRegions = new InputList<string>());
            set => _enabledRegions = value;
        }

        /// <summary>
        /// ID of the Environment Blueprint
        /// </summary>
        [Input("environmentBlueprintId", required: true)]
        public Input<string> EnvironmentBlueprintId { get; set; } = null!;

        /// <summary>
        /// ARN of the manage access role with which this blueprint is created.
        /// </summary>
        [Input("manageAccessRoleArn")]
        public Input<string>? ManageAccessRoleArn { get; set; }

        /// <summary>
        /// ARN of the provisioning role with which this blueprint is created.
        /// </summary>
        [Input("provisioningRoleArn")]
        public Input<string>? ProvisioningRoleArn { get; set; }

        [Input("regionalParameters")]
        private InputMap<ImmutableDictionary<string, string>>? _regionalParameters;

        /// <summary>
        /// Parameters for each region in which the blueprint is enabled
        /// </summary>
        public InputMap<ImmutableDictionary<string, string>> RegionalParameters
        {
            get => _regionalParameters ?? (_regionalParameters = new InputMap<ImmutableDictionary<string, string>>());
            set => _regionalParameters = value;
        }

        public EnvironmentBlueprintConfigurationArgs()
        {
        }
        public static new EnvironmentBlueprintConfigurationArgs Empty => new EnvironmentBlueprintConfigurationArgs();
    }

    public sealed class EnvironmentBlueprintConfigurationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ID of the Domain.
        /// </summary>
        [Input("domainId")]
        public Input<string>? DomainId { get; set; }

        [Input("enabledRegions")]
        private InputList<string>? _enabledRegions;

        /// <summary>
        /// Regions in which the blueprint is enabled
        /// 
        /// The following arguments are optional:
        /// </summary>
        public InputList<string> EnabledRegions
        {
            get => _enabledRegions ?? (_enabledRegions = new InputList<string>());
            set => _enabledRegions = value;
        }

        /// <summary>
        /// ID of the Environment Blueprint
        /// </summary>
        [Input("environmentBlueprintId")]
        public Input<string>? EnvironmentBlueprintId { get; set; }

        /// <summary>
        /// ARN of the manage access role with which this blueprint is created.
        /// </summary>
        [Input("manageAccessRoleArn")]
        public Input<string>? ManageAccessRoleArn { get; set; }

        /// <summary>
        /// ARN of the provisioning role with which this blueprint is created.
        /// </summary>
        [Input("provisioningRoleArn")]
        public Input<string>? ProvisioningRoleArn { get; set; }

        [Input("regionalParameters")]
        private InputMap<ImmutableDictionary<string, string>>? _regionalParameters;

        /// <summary>
        /// Parameters for each region in which the blueprint is enabled
        /// </summary>
        public InputMap<ImmutableDictionary<string, string>> RegionalParameters
        {
            get => _regionalParameters ?? (_regionalParameters = new InputMap<ImmutableDictionary<string, string>>());
            set => _regionalParameters = value;
        }

        public EnvironmentBlueprintConfigurationState()
        {
        }
        public static new EnvironmentBlueprintConfigurationState Empty => new EnvironmentBlueprintConfigurationState();
    }
}
