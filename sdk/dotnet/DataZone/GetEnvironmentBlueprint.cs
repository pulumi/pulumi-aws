// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.DataZone
{
    public static class GetEnvironmentBlueprint
    {
        /// <summary>
        /// Data source for managing an AWS DataZone Environment Blueprint.
        /// 
        /// ## Example Usage
        /// 
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleDomain = new Aws.DataZone.Domain("example", new()
        ///     {
        ///         Name = "example_domain",
        ///         DomainExecutionRole = domainExecutionRole.Arn,
        ///     });
        /// 
        ///     var example = Aws.DataZone.GetEnvironmentBlueprint.Invoke(new()
        ///     {
        ///         DomainId = exampleDomain.Id,
        ///         Name = "DefaultDataLake",
        ///         Managed = true,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetEnvironmentBlueprintResult> InvokeAsync(GetEnvironmentBlueprintArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEnvironmentBlueprintResult>("aws:datazone/getEnvironmentBlueprint:getEnvironmentBlueprint", args ?? new GetEnvironmentBlueprintArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for managing an AWS DataZone Environment Blueprint.
        /// 
        /// ## Example Usage
        /// 
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleDomain = new Aws.DataZone.Domain("example", new()
        ///     {
        ///         Name = "example_domain",
        ///         DomainExecutionRole = domainExecutionRole.Arn,
        ///     });
        /// 
        ///     var example = Aws.DataZone.GetEnvironmentBlueprint.Invoke(new()
        ///     {
        ///         DomainId = exampleDomain.Id,
        ///         Name = "DefaultDataLake",
        ///         Managed = true,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetEnvironmentBlueprintResult> Invoke(GetEnvironmentBlueprintInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEnvironmentBlueprintResult>("aws:datazone/getEnvironmentBlueprint:getEnvironmentBlueprint", args ?? new GetEnvironmentBlueprintInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEnvironmentBlueprintArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the domain.
        /// </summary>
        [Input("domainId", required: true)]
        public string DomainId { get; set; } = null!;

        /// <summary>
        /// Whether the blueprint is managed by Amazon DataZone.
        /// </summary>
        [Input("managed", required: true)]
        public bool Managed { get; set; }

        /// <summary>
        /// Name of the blueprint.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetEnvironmentBlueprintArgs()
        {
        }
        public static new GetEnvironmentBlueprintArgs Empty => new GetEnvironmentBlueprintArgs();
    }

    public sealed class GetEnvironmentBlueprintInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the domain.
        /// </summary>
        [Input("domainId", required: true)]
        public Input<string> DomainId { get; set; } = null!;

        /// <summary>
        /// Whether the blueprint is managed by Amazon DataZone.
        /// </summary>
        [Input("managed", required: true)]
        public Input<bool> Managed { get; set; } = null!;

        /// <summary>
        /// Name of the blueprint.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetEnvironmentBlueprintInvokeArgs()
        {
        }
        public static new GetEnvironmentBlueprintInvokeArgs Empty => new GetEnvironmentBlueprintInvokeArgs();
    }


    [OutputType]
    public sealed class GetEnvironmentBlueprintResult
    {
        /// <summary>
        /// Provider of the blueprint
        /// </summary>
        public readonly string BlueprintProvider;
        /// <summary>
        /// Description of the blueprint
        /// </summary>
        public readonly string Description;
        public readonly string DomainId;
        /// <summary>
        /// ID of the environment blueprint
        /// </summary>
        public readonly string Id;
        public readonly bool Managed;
        public readonly string Name;

        [OutputConstructor]
        private GetEnvironmentBlueprintResult(
            string blueprintProvider,

            string description,

            string domainId,

            string id,

            bool managed,

            string name)
        {
            BlueprintProvider = blueprintProvider;
            Description = description;
            DomainId = domainId;
            Id = id;
            Managed = managed;
            Name = name;
        }
    }
}
