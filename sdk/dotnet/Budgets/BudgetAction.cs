// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Budgets
{
    [AwsResourceType("aws:budgets/budgetAction:BudgetAction")]
    public partial class BudgetAction : global::Pulumi.CustomResource
    {
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        [Output("actionId")]
        public Output<string> ActionId { get; private set; } = null!;

        [Output("actionThreshold")]
        public Output<Outputs.BudgetActionActionThreshold> ActionThreshold { get; private set; } = null!;

        [Output("actionType")]
        public Output<string> ActionType { get; private set; } = null!;

        [Output("approvalModel")]
        public Output<string> ApprovalModel { get; private set; } = null!;

        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("budgetName")]
        public Output<string> BudgetName { get; private set; } = null!;

        [Output("definition")]
        public Output<Outputs.BudgetActionDefinition> Definition { get; private set; } = null!;

        [Output("executionRoleArn")]
        public Output<string> ExecutionRoleArn { get; private set; } = null!;

        [Output("notificationType")]
        public Output<string> NotificationType { get; private set; } = null!;

        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        [Output("subscribers")]
        public Output<ImmutableArray<Outputs.BudgetActionSubscriber>> Subscribers { get; private set; } = null!;


        /// <summary>
        /// Create a BudgetAction resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BudgetAction(string name, BudgetActionArgs args, CustomResourceOptions? options = null)
            : base("aws:budgets/budgetAction:BudgetAction", name, args ?? new BudgetActionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BudgetAction(string name, Input<string> id, BudgetActionState? state = null, CustomResourceOptions? options = null)
            : base("aws:budgets/budgetAction:BudgetAction", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BudgetAction resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BudgetAction Get(string name, Input<string> id, BudgetActionState? state = null, CustomResourceOptions? options = null)
        {
            return new BudgetAction(name, id, state, options);
        }
    }

    public sealed class BudgetActionArgs : global::Pulumi.ResourceArgs
    {
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        [Input("actionThreshold", required: true)]
        public Input<Inputs.BudgetActionActionThresholdArgs> ActionThreshold { get; set; } = null!;

        [Input("actionType", required: true)]
        public Input<string> ActionType { get; set; } = null!;

        [Input("approvalModel", required: true)]
        public Input<string> ApprovalModel { get; set; } = null!;

        [Input("budgetName", required: true)]
        public Input<string> BudgetName { get; set; } = null!;

        [Input("definition", required: true)]
        public Input<Inputs.BudgetActionDefinitionArgs> Definition { get; set; } = null!;

        [Input("executionRoleArn", required: true)]
        public Input<string> ExecutionRoleArn { get; set; } = null!;

        [Input("notificationType", required: true)]
        public Input<string> NotificationType { get; set; } = null!;

        [Input("subscribers", required: true)]
        private InputList<Inputs.BudgetActionSubscriberArgs>? _subscribers;
        public InputList<Inputs.BudgetActionSubscriberArgs> Subscribers
        {
            get => _subscribers ?? (_subscribers = new InputList<Inputs.BudgetActionSubscriberArgs>());
            set => _subscribers = value;
        }

        public BudgetActionArgs()
        {
        }
        public static new BudgetActionArgs Empty => new BudgetActionArgs();
    }

    public sealed class BudgetActionState : global::Pulumi.ResourceArgs
    {
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        [Input("actionId")]
        public Input<string>? ActionId { get; set; }

        [Input("actionThreshold")]
        public Input<Inputs.BudgetActionActionThresholdGetArgs>? ActionThreshold { get; set; }

        [Input("actionType")]
        public Input<string>? ActionType { get; set; }

        [Input("approvalModel")]
        public Input<string>? ApprovalModel { get; set; }

        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("budgetName")]
        public Input<string>? BudgetName { get; set; }

        [Input("definition")]
        public Input<Inputs.BudgetActionDefinitionGetArgs>? Definition { get; set; }

        [Input("executionRoleArn")]
        public Input<string>? ExecutionRoleArn { get; set; }

        [Input("notificationType")]
        public Input<string>? NotificationType { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("subscribers")]
        private InputList<Inputs.BudgetActionSubscriberGetArgs>? _subscribers;
        public InputList<Inputs.BudgetActionSubscriberGetArgs> Subscribers
        {
            get => _subscribers ?? (_subscribers = new InputList<Inputs.BudgetActionSubscriberGetArgs>());
            set => _subscribers = value;
        }

        public BudgetActionState()
        {
        }
        public static new BudgetActionState Empty => new BudgetActionState();
    }
}
