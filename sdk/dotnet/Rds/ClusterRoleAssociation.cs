// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Rds
{
    /// <summary>
    /// Manages a RDS DB Cluster association with an IAM Role. Example use cases:
    /// 
    /// * [Creating an IAM Role to Allow Amazon Aurora to Access AWS Services](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Integrating.Authorizing.IAM.CreateRole.html)
    /// * [Importing Amazon S3 Data into an RDS PostgreSQL DB Cluster](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PostgreSQL.S3Import.html)
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Rds.ClusterRoleAssociation("example", new()
    ///     {
    ///         DbClusterIdentifier = aws_rds_cluster.Example.Id,
    ///         FeatureName = "S3_INTEGRATION",
    ///         RoleArn = aws_iam_role.Example.Arn,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import `aws_rds_cluster_role_association` using the DB Cluster Identifier and IAM Role ARN separated by a comma (`,`). For example:
    /// 
    /// ```sh
    ///  $ pulumi import aws:rds/clusterRoleAssociation:ClusterRoleAssociation example my-db-cluster,arn:aws:iam::123456789012:role/my-role
    /// ```
    /// </summary>
    [AwsResourceType("aws:rds/clusterRoleAssociation:ClusterRoleAssociation")]
    public partial class ClusterRoleAssociation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// DB Cluster Identifier to associate with the IAM Role.
        /// </summary>
        [Output("dbClusterIdentifier")]
        public Output<string> DbClusterIdentifier { get; private set; } = null!;

        /// <summary>
        /// Name of the feature for association. This can be found in the AWS documentation relevant to the integration or a full list is available in the `SupportedFeatureNames` list returned by [AWS CLI rds describe-db-engine-versions](https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-engine-versions.html).
        /// </summary>
        [Output("featureName")]
        public Output<string> FeatureName { get; private set; } = null!;

        /// <summary>
        /// Amazon Resource Name (ARN) of the IAM Role to associate with the DB Cluster.
        /// </summary>
        [Output("roleArn")]
        public Output<string> RoleArn { get; private set; } = null!;


        /// <summary>
        /// Create a ClusterRoleAssociation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ClusterRoleAssociation(string name, ClusterRoleAssociationArgs args, CustomResourceOptions? options = null)
            : base("aws:rds/clusterRoleAssociation:ClusterRoleAssociation", name, args ?? new ClusterRoleAssociationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ClusterRoleAssociation(string name, Input<string> id, ClusterRoleAssociationState? state = null, CustomResourceOptions? options = null)
            : base("aws:rds/clusterRoleAssociation:ClusterRoleAssociation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ClusterRoleAssociation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ClusterRoleAssociation Get(string name, Input<string> id, ClusterRoleAssociationState? state = null, CustomResourceOptions? options = null)
        {
            return new ClusterRoleAssociation(name, id, state, options);
        }
    }

    public sealed class ClusterRoleAssociationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// DB Cluster Identifier to associate with the IAM Role.
        /// </summary>
        [Input("dbClusterIdentifier", required: true)]
        public Input<string> DbClusterIdentifier { get; set; } = null!;

        /// <summary>
        /// Name of the feature for association. This can be found in the AWS documentation relevant to the integration or a full list is available in the `SupportedFeatureNames` list returned by [AWS CLI rds describe-db-engine-versions](https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-engine-versions.html).
        /// </summary>
        [Input("featureName", required: true)]
        public Input<string> FeatureName { get; set; } = null!;

        /// <summary>
        /// Amazon Resource Name (ARN) of the IAM Role to associate with the DB Cluster.
        /// </summary>
        [Input("roleArn", required: true)]
        public Input<string> RoleArn { get; set; } = null!;

        public ClusterRoleAssociationArgs()
        {
        }
        public static new ClusterRoleAssociationArgs Empty => new ClusterRoleAssociationArgs();
    }

    public sealed class ClusterRoleAssociationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// DB Cluster Identifier to associate with the IAM Role.
        /// </summary>
        [Input("dbClusterIdentifier")]
        public Input<string>? DbClusterIdentifier { get; set; }

        /// <summary>
        /// Name of the feature for association. This can be found in the AWS documentation relevant to the integration or a full list is available in the `SupportedFeatureNames` list returned by [AWS CLI rds describe-db-engine-versions](https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-engine-versions.html).
        /// </summary>
        [Input("featureName")]
        public Input<string>? FeatureName { get; set; }

        /// <summary>
        /// Amazon Resource Name (ARN) of the IAM Role to associate with the DB Cluster.
        /// </summary>
        [Input("roleArn")]
        public Input<string>? RoleArn { get; set; }

        public ClusterRoleAssociationState()
        {
        }
        public static new ClusterRoleAssociationState Empty => new ClusterRoleAssociationState();
    }
}
