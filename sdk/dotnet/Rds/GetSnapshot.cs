// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Rds
{
    public static class GetSnapshot
    {
        public static Task<GetSnapshotResult> InvokeAsync(GetSnapshotArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSnapshotResult>("aws:rds/getSnapshot:getSnapshot", args ?? new GetSnapshotArgs(), options.WithDefaults());

        public static Output<GetSnapshotResult> Invoke(GetSnapshotInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSnapshotResult>("aws:rds/getSnapshot:getSnapshot", args ?? new GetSnapshotInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSnapshotArgs : global::Pulumi.InvokeArgs
    {
        [Input("dbInstanceIdentifier")]
        public string? DbInstanceIdentifier { get; set; }

        [Input("dbSnapshotIdentifier")]
        public string? DbSnapshotIdentifier { get; set; }

        [Input("includePublic")]
        public bool? IncludePublic { get; set; }

        [Input("includeShared")]
        public bool? IncludeShared { get; set; }

        [Input("mostRecent")]
        public bool? MostRecent { get; set; }

        [Input("snapshotType")]
        public string? SnapshotType { get; set; }

        public GetSnapshotArgs()
        {
        }
        public static new GetSnapshotArgs Empty => new GetSnapshotArgs();
    }

    public sealed class GetSnapshotInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("dbInstanceIdentifier")]
        public Input<string>? DbInstanceIdentifier { get; set; }

        [Input("dbSnapshotIdentifier")]
        public Input<string>? DbSnapshotIdentifier { get; set; }

        [Input("includePublic")]
        public Input<bool>? IncludePublic { get; set; }

        [Input("includeShared")]
        public Input<bool>? IncludeShared { get; set; }

        [Input("mostRecent")]
        public Input<bool>? MostRecent { get; set; }

        [Input("snapshotType")]
        public Input<string>? SnapshotType { get; set; }

        public GetSnapshotInvokeArgs()
        {
        }
        public static new GetSnapshotInvokeArgs Empty => new GetSnapshotInvokeArgs();
    }


    [OutputType]
    public sealed class GetSnapshotResult
    {
        public readonly int AllocatedStorage;
        public readonly string AvailabilityZone;
        public readonly string? DbInstanceIdentifier;
        public readonly string DbSnapshotArn;
        public readonly string? DbSnapshotIdentifier;
        public readonly bool Encrypted;
        public readonly string Engine;
        public readonly string EngineVersion;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool? IncludePublic;
        public readonly bool? IncludeShared;
        public readonly int Iops;
        public readonly string KmsKeyId;
        public readonly string LicenseModel;
        public readonly bool? MostRecent;
        public readonly string OptionGroupName;
        public readonly int Port;
        public readonly string SnapshotCreateTime;
        public readonly string? SnapshotType;
        public readonly string SourceDbSnapshotIdentifier;
        public readonly string SourceRegion;
        public readonly string Status;
        public readonly string StorageType;
        public readonly string VpcId;

        [OutputConstructor]
        private GetSnapshotResult(
            int allocatedStorage,

            string availabilityZone,

            string? dbInstanceIdentifier,

            string dbSnapshotArn,

            string? dbSnapshotIdentifier,

            bool encrypted,

            string engine,

            string engineVersion,

            string id,

            bool? includePublic,

            bool? includeShared,

            int iops,

            string kmsKeyId,

            string licenseModel,

            bool? mostRecent,

            string optionGroupName,

            int port,

            string snapshotCreateTime,

            string? snapshotType,

            string sourceDbSnapshotIdentifier,

            string sourceRegion,

            string status,

            string storageType,

            string vpcId)
        {
            AllocatedStorage = allocatedStorage;
            AvailabilityZone = availabilityZone;
            DbInstanceIdentifier = dbInstanceIdentifier;
            DbSnapshotArn = dbSnapshotArn;
            DbSnapshotIdentifier = dbSnapshotIdentifier;
            Encrypted = encrypted;
            Engine = engine;
            EngineVersion = engineVersion;
            Id = id;
            IncludePublic = includePublic;
            IncludeShared = includeShared;
            Iops = iops;
            KmsKeyId = kmsKeyId;
            LicenseModel = licenseModel;
            MostRecent = mostRecent;
            OptionGroupName = optionGroupName;
            Port = port;
            SnapshotCreateTime = snapshotCreateTime;
            SnapshotType = snapshotType;
            SourceDbSnapshotIdentifier = sourceDbSnapshotIdentifier;
            SourceRegion = sourceRegion;
            Status = status;
            StorageType = storageType;
            VpcId = vpcId;
        }
    }
}
