// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Rds
{
    public static class GetClusters
    {
        /// <summary>
        /// Data source for managing an AWS RDS (Relational Database) Clusters.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### Basic Usage
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const example = aws.rds.getClusters({
        ///     filters: [{
        ///         name: "engine",
        ///         values: ["aurora-postgresql"],
        ///     }],
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// example = aws.rds.get_clusters(filters=[aws.rds.GetClustersFilterArgs(
        ///     name="engine",
        ///     values=["aurora-postgresql"],
        /// )])
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Rds.GetClusters.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Aws.Rds.Inputs.GetClustersFilterInputArgs
        ///             {
        ///                 Name = "engine",
        ///                 Values = new[]
        ///                 {
        ///                     "aurora-postgresql",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/rds"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := rds.GetClusters(ctx, &amp;rds.GetClustersArgs{
        /// 			Filters: []rds.GetClustersFilter{
        /// 				{
        /// 					Name: "engine",
        /// 					Values: []string{
        /// 						"aurora-postgresql",
        /// 					},
        /// 				},
        /// 			},
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.rds.RdsFunctions;
        /// import com.pulumi.aws.rds.inputs.GetClustersArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var example = RdsFunctions.getClusters(GetClustersArgs.builder()
        ///             .filters(GetClustersFilterArgs.builder()
        ///                 .name("engine")
        ///                 .values("aurora-postgresql")
        ///                 .build())
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   example:
        ///     fn::invoke:
        ///       Function: aws:rds:getClusters
        ///       Arguments:
        ///         filters:
        ///           - name: engine
        ///             values:
        ///               - aurora-postgresql
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetClustersResult> InvokeAsync(GetClustersArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetClustersResult>("aws:rds/getClusters:getClusters", args ?? new GetClustersArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for managing an AWS RDS (Relational Database) Clusters.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### Basic Usage
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const example = aws.rds.getClusters({
        ///     filters: [{
        ///         name: "engine",
        ///         values: ["aurora-postgresql"],
        ///     }],
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// example = aws.rds.get_clusters(filters=[aws.rds.GetClustersFilterArgs(
        ///     name="engine",
        ///     values=["aurora-postgresql"],
        /// )])
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Rds.GetClusters.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Aws.Rds.Inputs.GetClustersFilterInputArgs
        ///             {
        ///                 Name = "engine",
        ///                 Values = new[]
        ///                 {
        ///                     "aurora-postgresql",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/rds"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := rds.GetClusters(ctx, &amp;rds.GetClustersArgs{
        /// 			Filters: []rds.GetClustersFilter{
        /// 				{
        /// 					Name: "engine",
        /// 					Values: []string{
        /// 						"aurora-postgresql",
        /// 					},
        /// 				},
        /// 			},
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.rds.RdsFunctions;
        /// import com.pulumi.aws.rds.inputs.GetClustersArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var example = RdsFunctions.getClusters(GetClustersArgs.builder()
        ///             .filters(GetClustersFilterArgs.builder()
        ///                 .name("engine")
        ///                 .values("aurora-postgresql")
        ///                 .build())
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   example:
        ///     fn::invoke:
        ///       Function: aws:rds:getClusters
        ///       Arguments:
        ///         filters:
        ///           - name: engine
        ///             values:
        ///               - aurora-postgresql
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetClustersResult> Invoke(GetClustersInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetClustersResult>("aws:rds/getClusters:getClusters", args ?? new GetClustersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetClustersArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetClustersFilterArgs>? _filters;

        /// <summary>
        /// Configuration block(s) for filtering. Detailed below.
        /// </summary>
        public List<Inputs.GetClustersFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetClustersFilterArgs>());
            set => _filters = value;
        }

        public GetClustersArgs()
        {
        }
        public static new GetClustersArgs Empty => new GetClustersArgs();
    }

    public sealed class GetClustersInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetClustersFilterInputArgs>? _filters;

        /// <summary>
        /// Configuration block(s) for filtering. Detailed below.
        /// </summary>
        public InputList<Inputs.GetClustersFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetClustersFilterInputArgs>());
            set => _filters = value;
        }

        public GetClustersInvokeArgs()
        {
        }
        public static new GetClustersInvokeArgs Empty => new GetClustersInvokeArgs();
    }


    [OutputType]
    public sealed class GetClustersResult
    {
        /// <summary>
        /// Set of cluster ARNs of the matched RDS clusters.
        /// </summary>
        public readonly ImmutableArray<string> ClusterArns;
        /// <summary>
        /// Set of ARNs of cluster identifiers of the matched RDS clusters.
        /// </summary>
        public readonly ImmutableArray<string> ClusterIdentifiers;
        public readonly ImmutableArray<Outputs.GetClustersFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetClustersResult(
            ImmutableArray<string> clusterArns,

            ImmutableArray<string> clusterIdentifiers,

            ImmutableArray<Outputs.GetClustersFilterResult> filters,

            string id)
        {
            ClusterArns = clusterArns;
            ClusterIdentifiers = clusterIdentifiers;
            Filters = filters;
            Id = id;
        }
    }
}
