// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Rds
{
    public static class GetEngineVersion
    {
        public static Task<GetEngineVersionResult> InvokeAsync(GetEngineVersionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEngineVersionResult>("aws:rds/getEngineVersion:getEngineVersion", args ?? new GetEngineVersionArgs(), options.WithDefaults());

        public static Output<GetEngineVersionResult> Invoke(GetEngineVersionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEngineVersionResult>("aws:rds/getEngineVersion:getEngineVersion", args ?? new GetEngineVersionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEngineVersionArgs : global::Pulumi.InvokeArgs
    {
        [Input("defaultOnly")]
        public bool? DefaultOnly { get; set; }

        [Input("engine", required: true)]
        public string Engine { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetEngineVersionFilterArgs>? _filters;
        public List<Inputs.GetEngineVersionFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetEngineVersionFilterArgs>());
            set => _filters = value;
        }

        [Input("includeAll")]
        public bool? IncludeAll { get; set; }

        [Input("parameterGroupFamily")]
        public string? ParameterGroupFamily { get; set; }

        [Input("preferredVersions")]
        private List<string>? _preferredVersions;
        public List<string> PreferredVersions
        {
            get => _preferredVersions ?? (_preferredVersions = new List<string>());
            set => _preferredVersions = value;
        }

        [Input("version")]
        public string? Version { get; set; }

        public GetEngineVersionArgs()
        {
        }
        public static new GetEngineVersionArgs Empty => new GetEngineVersionArgs();
    }

    public sealed class GetEngineVersionInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("defaultOnly")]
        public Input<bool>? DefaultOnly { get; set; }

        [Input("engine", required: true)]
        public Input<string> Engine { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetEngineVersionFilterInputArgs>? _filters;
        public InputList<Inputs.GetEngineVersionFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetEngineVersionFilterInputArgs>());
            set => _filters = value;
        }

        [Input("includeAll")]
        public Input<bool>? IncludeAll { get; set; }

        [Input("parameterGroupFamily")]
        public Input<string>? ParameterGroupFamily { get; set; }

        [Input("preferredVersions")]
        private InputList<string>? _preferredVersions;
        public InputList<string> PreferredVersions
        {
            get => _preferredVersions ?? (_preferredVersions = new InputList<string>());
            set => _preferredVersions = value;
        }

        [Input("version")]
        public Input<string>? Version { get; set; }

        public GetEngineVersionInvokeArgs()
        {
        }
        public static new GetEngineVersionInvokeArgs Empty => new GetEngineVersionInvokeArgs();
    }


    [OutputType]
    public sealed class GetEngineVersionResult
    {
        public readonly string DefaultCharacterSet;
        public readonly bool? DefaultOnly;
        public readonly string Engine;
        public readonly string EngineDescription;
        public readonly ImmutableArray<string> ExportableLogTypes;
        public readonly ImmutableArray<Outputs.GetEngineVersionFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool? IncludeAll;
        public readonly string ParameterGroupFamily;
        public readonly ImmutableArray<string> PreferredVersions;
        public readonly string Status;
        public readonly ImmutableArray<string> SupportedCharacterSets;
        public readonly ImmutableArray<string> SupportedFeatureNames;
        public readonly ImmutableArray<string> SupportedModes;
        public readonly ImmutableArray<string> SupportedTimezones;
        public readonly bool SupportsGlobalDatabases;
        public readonly bool SupportsLogExportsToCloudwatch;
        public readonly bool SupportsParallelQuery;
        public readonly bool SupportsReadReplica;
        public readonly ImmutableArray<string> ValidUpgradeTargets;
        public readonly string Version;
        public readonly string VersionDescription;

        [OutputConstructor]
        private GetEngineVersionResult(
            string defaultCharacterSet,

            bool? defaultOnly,

            string engine,

            string engineDescription,

            ImmutableArray<string> exportableLogTypes,

            ImmutableArray<Outputs.GetEngineVersionFilterResult> filters,

            string id,

            bool? includeAll,

            string parameterGroupFamily,

            ImmutableArray<string> preferredVersions,

            string status,

            ImmutableArray<string> supportedCharacterSets,

            ImmutableArray<string> supportedFeatureNames,

            ImmutableArray<string> supportedModes,

            ImmutableArray<string> supportedTimezones,

            bool supportsGlobalDatabases,

            bool supportsLogExportsToCloudwatch,

            bool supportsParallelQuery,

            bool supportsReadReplica,

            ImmutableArray<string> validUpgradeTargets,

            string version,

            string versionDescription)
        {
            DefaultCharacterSet = defaultCharacterSet;
            DefaultOnly = defaultOnly;
            Engine = engine;
            EngineDescription = engineDescription;
            ExportableLogTypes = exportableLogTypes;
            Filters = filters;
            Id = id;
            IncludeAll = includeAll;
            ParameterGroupFamily = parameterGroupFamily;
            PreferredVersions = preferredVersions;
            Status = status;
            SupportedCharacterSets = supportedCharacterSets;
            SupportedFeatureNames = supportedFeatureNames;
            SupportedModes = supportedModes;
            SupportedTimezones = supportedTimezones;
            SupportsGlobalDatabases = supportsGlobalDatabases;
            SupportsLogExportsToCloudwatch = supportsLogExportsToCloudwatch;
            SupportsParallelQuery = supportsParallelQuery;
            SupportsReadReplica = supportsReadReplica;
            ValidUpgradeTargets = validUpgradeTargets;
            Version = version;
            VersionDescription = versionDescription;
        }
    }
}
