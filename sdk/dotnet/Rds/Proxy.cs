// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Rds
{
    [AwsResourceType("aws:rds/proxy:Proxy")]
    public partial class Proxy : global::Pulumi.CustomResource
    {
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("auths")]
        public Output<ImmutableArray<Outputs.ProxyAuth>> Auths { get; private set; } = null!;

        [Output("debugLogging")]
        public Output<bool?> DebugLogging { get; private set; } = null!;

        [Output("endpoint")]
        public Output<string> Endpoint { get; private set; } = null!;

        [Output("engineFamily")]
        public Output<string> EngineFamily { get; private set; } = null!;

        [Output("idleClientTimeout")]
        public Output<int> IdleClientTimeout { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("requireTls")]
        public Output<bool?> RequireTls { get; private set; } = null!;

        [Output("roleArn")]
        public Output<string> RoleArn { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("vpcSecurityGroupIds")]
        public Output<ImmutableArray<string>> VpcSecurityGroupIds { get; private set; } = null!;

        [Output("vpcSubnetIds")]
        public Output<ImmutableArray<string>> VpcSubnetIds { get; private set; } = null!;


        /// <summary>
        /// Create a Proxy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Proxy(string name, ProxyArgs args, CustomResourceOptions? options = null)
            : base("aws:rds/proxy:Proxy", name, args ?? new ProxyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Proxy(string name, Input<string> id, ProxyState? state = null, CustomResourceOptions? options = null)
            : base("aws:rds/proxy:Proxy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Proxy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Proxy Get(string name, Input<string> id, ProxyState? state = null, CustomResourceOptions? options = null)
        {
            return new Proxy(name, id, state, options);
        }
    }

    public sealed class ProxyArgs : global::Pulumi.ResourceArgs
    {
        [Input("auths", required: true)]
        private InputList<Inputs.ProxyAuthArgs>? _auths;
        public InputList<Inputs.ProxyAuthArgs> Auths
        {
            get => _auths ?? (_auths = new InputList<Inputs.ProxyAuthArgs>());
            set => _auths = value;
        }

        [Input("debugLogging")]
        public Input<bool>? DebugLogging { get; set; }

        [Input("engineFamily", required: true)]
        public Input<string> EngineFamily { get; set; } = null!;

        [Input("idleClientTimeout")]
        public Input<int>? IdleClientTimeout { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("requireTls")]
        public Input<bool>? RequireTls { get; set; }

        [Input("roleArn", required: true)]
        public Input<string> RoleArn { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("vpcSecurityGroupIds")]
        private InputList<string>? _vpcSecurityGroupIds;
        public InputList<string> VpcSecurityGroupIds
        {
            get => _vpcSecurityGroupIds ?? (_vpcSecurityGroupIds = new InputList<string>());
            set => _vpcSecurityGroupIds = value;
        }

        [Input("vpcSubnetIds", required: true)]
        private InputList<string>? _vpcSubnetIds;
        public InputList<string> VpcSubnetIds
        {
            get => _vpcSubnetIds ?? (_vpcSubnetIds = new InputList<string>());
            set => _vpcSubnetIds = value;
        }

        public ProxyArgs()
        {
        }
        public static new ProxyArgs Empty => new ProxyArgs();
    }

    public sealed class ProxyState : global::Pulumi.ResourceArgs
    {
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("auths")]
        private InputList<Inputs.ProxyAuthGetArgs>? _auths;
        public InputList<Inputs.ProxyAuthGetArgs> Auths
        {
            get => _auths ?? (_auths = new InputList<Inputs.ProxyAuthGetArgs>());
            set => _auths = value;
        }

        [Input("debugLogging")]
        public Input<bool>? DebugLogging { get; set; }

        [Input("endpoint")]
        public Input<string>? Endpoint { get; set; }

        [Input("engineFamily")]
        public Input<string>? EngineFamily { get; set; }

        [Input("idleClientTimeout")]
        public Input<int>? IdleClientTimeout { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("requireTls")]
        public Input<bool>? RequireTls { get; set; }

        [Input("roleArn")]
        public Input<string>? RoleArn { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("vpcSecurityGroupIds")]
        private InputList<string>? _vpcSecurityGroupIds;
        public InputList<string> VpcSecurityGroupIds
        {
            get => _vpcSecurityGroupIds ?? (_vpcSecurityGroupIds = new InputList<string>());
            set => _vpcSecurityGroupIds = value;
        }

        [Input("vpcSubnetIds")]
        private InputList<string>? _vpcSubnetIds;
        public InputList<string> VpcSubnetIds
        {
            get => _vpcSubnetIds ?? (_vpcSubnetIds = new InputList<string>());
            set => _vpcSubnetIds = value;
        }

        public ProxyState()
        {
        }
        public static new ProxyState Empty => new ProxyState();
    }
}
