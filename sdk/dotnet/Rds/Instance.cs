// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Rds
{
    [AwsResourceType("aws:rds/instance:Instance")]
    public partial class Instance : global::Pulumi.CustomResource
    {
        [Output("address")]
        public Output<string> Address { get; private set; } = null!;

        [Output("allocatedStorage")]
        public Output<int> AllocatedStorage { get; private set; } = null!;

        [Output("allowMajorVersionUpgrade")]
        public Output<bool?> AllowMajorVersionUpgrade { get; private set; } = null!;

        [Output("applyImmediately")]
        public Output<bool?> ApplyImmediately { get; private set; } = null!;

        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("autoMinorVersionUpgrade")]
        public Output<bool?> AutoMinorVersionUpgrade { get; private set; } = null!;

        [Output("availabilityZone")]
        public Output<string> AvailabilityZone { get; private set; } = null!;

        [Output("backupRetentionPeriod")]
        public Output<int> BackupRetentionPeriod { get; private set; } = null!;

        [Output("backupWindow")]
        public Output<string> BackupWindow { get; private set; } = null!;

        [Output("blueGreenUpdate")]
        public Output<Outputs.InstanceBlueGreenUpdate?> BlueGreenUpdate { get; private set; } = null!;

        [Output("caCertIdentifier")]
        public Output<string> CaCertIdentifier { get; private set; } = null!;

        [Output("characterSetName")]
        public Output<string> CharacterSetName { get; private set; } = null!;

        [Output("copyTagsToSnapshot")]
        public Output<bool?> CopyTagsToSnapshot { get; private set; } = null!;

        [Output("customIamInstanceProfile")]
        public Output<string?> CustomIamInstanceProfile { get; private set; } = null!;

        [Output("customerOwnedIpEnabled")]
        public Output<bool?> CustomerOwnedIpEnabled { get; private set; } = null!;

        [Output("dbName")]
        public Output<string> DbName { get; private set; } = null!;

        [Output("dbSubnetGroupName")]
        public Output<string> DbSubnetGroupName { get; private set; } = null!;

        [Output("deleteAutomatedBackups")]
        public Output<bool?> DeleteAutomatedBackups { get; private set; } = null!;

        [Output("deletionProtection")]
        public Output<bool?> DeletionProtection { get; private set; } = null!;

        [Output("domain")]
        public Output<string?> Domain { get; private set; } = null!;

        [Output("domainIamRoleName")]
        public Output<string?> DomainIamRoleName { get; private set; } = null!;

        [Output("enabledCloudwatchLogsExports")]
        public Output<ImmutableArray<string>> EnabledCloudwatchLogsExports { get; private set; } = null!;

        [Output("endpoint")]
        public Output<string> Endpoint { get; private set; } = null!;

        [Output("engine")]
        public Output<string> Engine { get; private set; } = null!;

        [Output("engineVersion")]
        public Output<string> EngineVersion { get; private set; } = null!;

        [Output("engineVersionActual")]
        public Output<string> EngineVersionActual { get; private set; } = null!;

        [Output("finalSnapshotIdentifier")]
        public Output<string?> FinalSnapshotIdentifier { get; private set; } = null!;

        [Output("hostedZoneId")]
        public Output<string> HostedZoneId { get; private set; } = null!;

        [Output("iamDatabaseAuthenticationEnabled")]
        public Output<bool?> IamDatabaseAuthenticationEnabled { get; private set; } = null!;

        [Output("identifier")]
        public Output<string> Identifier { get; private set; } = null!;

        [Output("identifierPrefix")]
        public Output<string> IdentifierPrefix { get; private set; } = null!;

        [Output("instanceClass")]
        public Output<string> InstanceClass { get; private set; } = null!;

        [Output("iops")]
        public Output<int> Iops { get; private set; } = null!;

        [Output("kmsKeyId")]
        public Output<string> KmsKeyId { get; private set; } = null!;

        [Output("latestRestorableTime")]
        public Output<string> LatestRestorableTime { get; private set; } = null!;

        [Output("licenseModel")]
        public Output<string> LicenseModel { get; private set; } = null!;

        [Output("maintenanceWindow")]
        public Output<string> MaintenanceWindow { get; private set; } = null!;

        [Output("maxAllocatedStorage")]
        public Output<int?> MaxAllocatedStorage { get; private set; } = null!;

        [Output("monitoringInterval")]
        public Output<int?> MonitoringInterval { get; private set; } = null!;

        [Output("monitoringRoleArn")]
        public Output<string> MonitoringRoleArn { get; private set; } = null!;

        [Output("multiAz")]
        public Output<bool> MultiAz { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("ncharCharacterSetName")]
        public Output<string> NcharCharacterSetName { get; private set; } = null!;

        [Output("networkType")]
        public Output<string> NetworkType { get; private set; } = null!;

        [Output("optionGroupName")]
        public Output<string> OptionGroupName { get; private set; } = null!;

        [Output("parameterGroupName")]
        public Output<string> ParameterGroupName { get; private set; } = null!;

        [Output("password")]
        public Output<string?> Password { get; private set; } = null!;

        [Output("performanceInsightsEnabled")]
        public Output<bool?> PerformanceInsightsEnabled { get; private set; } = null!;

        [Output("performanceInsightsKmsKeyId")]
        public Output<string> PerformanceInsightsKmsKeyId { get; private set; } = null!;

        [Output("performanceInsightsRetentionPeriod")]
        public Output<int> PerformanceInsightsRetentionPeriod { get; private set; } = null!;

        [Output("port")]
        public Output<int> Port { get; private set; } = null!;

        [Output("publiclyAccessible")]
        public Output<bool?> PubliclyAccessible { get; private set; } = null!;

        [Output("replicaMode")]
        public Output<string> ReplicaMode { get; private set; } = null!;

        [Output("replicas")]
        public Output<ImmutableArray<string>> Replicas { get; private set; } = null!;

        [Output("replicateSourceDb")]
        public Output<string?> ReplicateSourceDb { get; private set; } = null!;

        [Output("resourceId")]
        public Output<string> ResourceId { get; private set; } = null!;

        [Output("restoreToPointInTime")]
        public Output<Outputs.InstanceRestoreToPointInTime?> RestoreToPointInTime { get; private set; } = null!;

        [Output("s3Import")]
        public Output<Outputs.InstanceS3Import?> S3Import { get; private set; } = null!;

        [Output("securityGroupNames")]
        public Output<ImmutableArray<string>> SecurityGroupNames { get; private set; } = null!;

        [Output("skipFinalSnapshot")]
        public Output<bool?> SkipFinalSnapshot { get; private set; } = null!;

        [Output("snapshotIdentifier")]
        public Output<string> SnapshotIdentifier { get; private set; } = null!;

        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        [Output("storageEncrypted")]
        public Output<bool?> StorageEncrypted { get; private set; } = null!;

        [Output("storageThroughput")]
        public Output<int> StorageThroughput { get; private set; } = null!;

        [Output("storageType")]
        public Output<string> StorageType { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("timezone")]
        public Output<string> Timezone { get; private set; } = null!;

        [Output("username")]
        public Output<string> Username { get; private set; } = null!;

        [Output("vpcSecurityGroupIds")]
        public Output<ImmutableArray<string>> VpcSecurityGroupIds { get; private set; } = null!;


        /// <summary>
        /// Create a Instance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Instance(string name, InstanceArgs args, CustomResourceOptions? options = null)
            : base("aws:rds/instance:Instance", name, args ?? new InstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Instance(string name, Input<string> id, InstanceState? state = null, CustomResourceOptions? options = null)
            : base("aws:rds/instance:Instance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "password",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Instance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Instance Get(string name, Input<string> id, InstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new Instance(name, id, state, options);
        }
    }

    public sealed class InstanceArgs : global::Pulumi.ResourceArgs
    {
        [Input("allocatedStorage")]
        public Input<int>? AllocatedStorage { get; set; }

        [Input("allowMajorVersionUpgrade")]
        public Input<bool>? AllowMajorVersionUpgrade { get; set; }

        [Input("applyImmediately")]
        public Input<bool>? ApplyImmediately { get; set; }

        [Input("autoMinorVersionUpgrade")]
        public Input<bool>? AutoMinorVersionUpgrade { get; set; }

        [Input("availabilityZone")]
        public Input<string>? AvailabilityZone { get; set; }

        [Input("backupRetentionPeriod")]
        public Input<int>? BackupRetentionPeriod { get; set; }

        [Input("backupWindow")]
        public Input<string>? BackupWindow { get; set; }

        [Input("blueGreenUpdate")]
        public Input<Inputs.InstanceBlueGreenUpdateArgs>? BlueGreenUpdate { get; set; }

        [Input("caCertIdentifier")]
        public Input<string>? CaCertIdentifier { get; set; }

        [Input("characterSetName")]
        public Input<string>? CharacterSetName { get; set; }

        [Input("copyTagsToSnapshot")]
        public Input<bool>? CopyTagsToSnapshot { get; set; }

        [Input("customIamInstanceProfile")]
        public Input<string>? CustomIamInstanceProfile { get; set; }

        [Input("customerOwnedIpEnabled")]
        public Input<bool>? CustomerOwnedIpEnabled { get; set; }

        [Input("dbName")]
        public Input<string>? DbName { get; set; }

        [Input("dbSubnetGroupName")]
        public Input<string>? DbSubnetGroupName { get; set; }

        [Input("deleteAutomatedBackups")]
        public Input<bool>? DeleteAutomatedBackups { get; set; }

        [Input("deletionProtection")]
        public Input<bool>? DeletionProtection { get; set; }

        [Input("domain")]
        public Input<string>? Domain { get; set; }

        [Input("domainIamRoleName")]
        public Input<string>? DomainIamRoleName { get; set; }

        [Input("enabledCloudwatchLogsExports")]
        private InputList<string>? _enabledCloudwatchLogsExports;
        public InputList<string> EnabledCloudwatchLogsExports
        {
            get => _enabledCloudwatchLogsExports ?? (_enabledCloudwatchLogsExports = new InputList<string>());
            set => _enabledCloudwatchLogsExports = value;
        }

        [Input("engine")]
        public Input<string>? Engine { get; set; }

        [Input("engineVersion")]
        public Input<string>? EngineVersion { get; set; }

        [Input("finalSnapshotIdentifier")]
        public Input<string>? FinalSnapshotIdentifier { get; set; }

        [Input("iamDatabaseAuthenticationEnabled")]
        public Input<bool>? IamDatabaseAuthenticationEnabled { get; set; }

        [Input("identifier")]
        public Input<string>? Identifier { get; set; }

        [Input("identifierPrefix")]
        public Input<string>? IdentifierPrefix { get; set; }

        [Input("instanceClass", required: true)]
        public InputUnion<string, Pulumi.Aws.Rds.InstanceType> InstanceClass { get; set; } = null!;

        [Input("iops")]
        public Input<int>? Iops { get; set; }

        [Input("kmsKeyId")]
        public Input<string>? KmsKeyId { get; set; }

        [Input("licenseModel")]
        public Input<string>? LicenseModel { get; set; }

        [Input("maintenanceWindow")]
        public Input<string>? MaintenanceWindow { get; set; }

        [Input("maxAllocatedStorage")]
        public Input<int>? MaxAllocatedStorage { get; set; }

        [Input("monitoringInterval")]
        public Input<int>? MonitoringInterval { get; set; }

        [Input("monitoringRoleArn")]
        public Input<string>? MonitoringRoleArn { get; set; }

        [Input("multiAz")]
        public Input<bool>? MultiAz { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("ncharCharacterSetName")]
        public Input<string>? NcharCharacterSetName { get; set; }

        [Input("networkType")]
        public Input<string>? NetworkType { get; set; }

        [Input("optionGroupName")]
        public Input<string>? OptionGroupName { get; set; }

        [Input("parameterGroupName")]
        public Input<string>? ParameterGroupName { get; set; }

        [Input("password")]
        private Input<string>? _password;
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("performanceInsightsEnabled")]
        public Input<bool>? PerformanceInsightsEnabled { get; set; }

        [Input("performanceInsightsKmsKeyId")]
        public Input<string>? PerformanceInsightsKmsKeyId { get; set; }

        [Input("performanceInsightsRetentionPeriod")]
        public Input<int>? PerformanceInsightsRetentionPeriod { get; set; }

        [Input("port")]
        public Input<int>? Port { get; set; }

        [Input("publiclyAccessible")]
        public Input<bool>? PubliclyAccessible { get; set; }

        [Input("replicaMode")]
        public Input<string>? ReplicaMode { get; set; }

        [Input("replicateSourceDb")]
        public Input<string>? ReplicateSourceDb { get; set; }

        [Input("restoreToPointInTime")]
        public Input<Inputs.InstanceRestoreToPointInTimeArgs>? RestoreToPointInTime { get; set; }

        [Input("s3Import")]
        public Input<Inputs.InstanceS3ImportArgs>? S3Import { get; set; }

        [Input("securityGroupNames")]
        private InputList<string>? _securityGroupNames;
        [Obsolete(@"With the retirement of EC2-Classic the security_group_names attribute has been deprecated and will be removed in a future version.")]
        public InputList<string> SecurityGroupNames
        {
            get => _securityGroupNames ?? (_securityGroupNames = new InputList<string>());
            set => _securityGroupNames = value;
        }

        [Input("skipFinalSnapshot")]
        public Input<bool>? SkipFinalSnapshot { get; set; }

        [Input("snapshotIdentifier")]
        public Input<string>? SnapshotIdentifier { get; set; }

        [Input("storageEncrypted")]
        public Input<bool>? StorageEncrypted { get; set; }

        [Input("storageThroughput")]
        public Input<int>? StorageThroughput { get; set; }

        [Input("storageType")]
        public InputUnion<string, Pulumi.Aws.Rds.StorageType>? StorageType { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("timezone")]
        public Input<string>? Timezone { get; set; }

        [Input("username")]
        public Input<string>? Username { get; set; }

        [Input("vpcSecurityGroupIds")]
        private InputList<string>? _vpcSecurityGroupIds;
        public InputList<string> VpcSecurityGroupIds
        {
            get => _vpcSecurityGroupIds ?? (_vpcSecurityGroupIds = new InputList<string>());
            set => _vpcSecurityGroupIds = value;
        }

        public InstanceArgs()
        {
        }
        public static new InstanceArgs Empty => new InstanceArgs();
    }

    public sealed class InstanceState : global::Pulumi.ResourceArgs
    {
        [Input("address")]
        public Input<string>? Address { get; set; }

        [Input("allocatedStorage")]
        public Input<int>? AllocatedStorage { get; set; }

        [Input("allowMajorVersionUpgrade")]
        public Input<bool>? AllowMajorVersionUpgrade { get; set; }

        [Input("applyImmediately")]
        public Input<bool>? ApplyImmediately { get; set; }

        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("autoMinorVersionUpgrade")]
        public Input<bool>? AutoMinorVersionUpgrade { get; set; }

        [Input("availabilityZone")]
        public Input<string>? AvailabilityZone { get; set; }

        [Input("backupRetentionPeriod")]
        public Input<int>? BackupRetentionPeriod { get; set; }

        [Input("backupWindow")]
        public Input<string>? BackupWindow { get; set; }

        [Input("blueGreenUpdate")]
        public Input<Inputs.InstanceBlueGreenUpdateGetArgs>? BlueGreenUpdate { get; set; }

        [Input("caCertIdentifier")]
        public Input<string>? CaCertIdentifier { get; set; }

        [Input("characterSetName")]
        public Input<string>? CharacterSetName { get; set; }

        [Input("copyTagsToSnapshot")]
        public Input<bool>? CopyTagsToSnapshot { get; set; }

        [Input("customIamInstanceProfile")]
        public Input<string>? CustomIamInstanceProfile { get; set; }

        [Input("customerOwnedIpEnabled")]
        public Input<bool>? CustomerOwnedIpEnabled { get; set; }

        [Input("dbName")]
        public Input<string>? DbName { get; set; }

        [Input("dbSubnetGroupName")]
        public Input<string>? DbSubnetGroupName { get; set; }

        [Input("deleteAutomatedBackups")]
        public Input<bool>? DeleteAutomatedBackups { get; set; }

        [Input("deletionProtection")]
        public Input<bool>? DeletionProtection { get; set; }

        [Input("domain")]
        public Input<string>? Domain { get; set; }

        [Input("domainIamRoleName")]
        public Input<string>? DomainIamRoleName { get; set; }

        [Input("enabledCloudwatchLogsExports")]
        private InputList<string>? _enabledCloudwatchLogsExports;
        public InputList<string> EnabledCloudwatchLogsExports
        {
            get => _enabledCloudwatchLogsExports ?? (_enabledCloudwatchLogsExports = new InputList<string>());
            set => _enabledCloudwatchLogsExports = value;
        }

        [Input("endpoint")]
        public Input<string>? Endpoint { get; set; }

        [Input("engine")]
        public Input<string>? Engine { get; set; }

        [Input("engineVersion")]
        public Input<string>? EngineVersion { get; set; }

        [Input("engineVersionActual")]
        public Input<string>? EngineVersionActual { get; set; }

        [Input("finalSnapshotIdentifier")]
        public Input<string>? FinalSnapshotIdentifier { get; set; }

        [Input("hostedZoneId")]
        public Input<string>? HostedZoneId { get; set; }

        [Input("iamDatabaseAuthenticationEnabled")]
        public Input<bool>? IamDatabaseAuthenticationEnabled { get; set; }

        [Input("identifier")]
        public Input<string>? Identifier { get; set; }

        [Input("identifierPrefix")]
        public Input<string>? IdentifierPrefix { get; set; }

        [Input("instanceClass")]
        public InputUnion<string, Pulumi.Aws.Rds.InstanceType>? InstanceClass { get; set; }

        [Input("iops")]
        public Input<int>? Iops { get; set; }

        [Input("kmsKeyId")]
        public Input<string>? KmsKeyId { get; set; }

        [Input("latestRestorableTime")]
        public Input<string>? LatestRestorableTime { get; set; }

        [Input("licenseModel")]
        public Input<string>? LicenseModel { get; set; }

        [Input("maintenanceWindow")]
        public Input<string>? MaintenanceWindow { get; set; }

        [Input("maxAllocatedStorage")]
        public Input<int>? MaxAllocatedStorage { get; set; }

        [Input("monitoringInterval")]
        public Input<int>? MonitoringInterval { get; set; }

        [Input("monitoringRoleArn")]
        public Input<string>? MonitoringRoleArn { get; set; }

        [Input("multiAz")]
        public Input<bool>? MultiAz { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("ncharCharacterSetName")]
        public Input<string>? NcharCharacterSetName { get; set; }

        [Input("networkType")]
        public Input<string>? NetworkType { get; set; }

        [Input("optionGroupName")]
        public Input<string>? OptionGroupName { get; set; }

        [Input("parameterGroupName")]
        public Input<string>? ParameterGroupName { get; set; }

        [Input("password")]
        private Input<string>? _password;
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("performanceInsightsEnabled")]
        public Input<bool>? PerformanceInsightsEnabled { get; set; }

        [Input("performanceInsightsKmsKeyId")]
        public Input<string>? PerformanceInsightsKmsKeyId { get; set; }

        [Input("performanceInsightsRetentionPeriod")]
        public Input<int>? PerformanceInsightsRetentionPeriod { get; set; }

        [Input("port")]
        public Input<int>? Port { get; set; }

        [Input("publiclyAccessible")]
        public Input<bool>? PubliclyAccessible { get; set; }

        [Input("replicaMode")]
        public Input<string>? ReplicaMode { get; set; }

        [Input("replicas")]
        private InputList<string>? _replicas;
        public InputList<string> Replicas
        {
            get => _replicas ?? (_replicas = new InputList<string>());
            set => _replicas = value;
        }

        [Input("replicateSourceDb")]
        public Input<string>? ReplicateSourceDb { get; set; }

        [Input("resourceId")]
        public Input<string>? ResourceId { get; set; }

        [Input("restoreToPointInTime")]
        public Input<Inputs.InstanceRestoreToPointInTimeGetArgs>? RestoreToPointInTime { get; set; }

        [Input("s3Import")]
        public Input<Inputs.InstanceS3ImportGetArgs>? S3Import { get; set; }

        [Input("securityGroupNames")]
        private InputList<string>? _securityGroupNames;
        [Obsolete(@"With the retirement of EC2-Classic the security_group_names attribute has been deprecated and will be removed in a future version.")]
        public InputList<string> SecurityGroupNames
        {
            get => _securityGroupNames ?? (_securityGroupNames = new InputList<string>());
            set => _securityGroupNames = value;
        }

        [Input("skipFinalSnapshot")]
        public Input<bool>? SkipFinalSnapshot { get; set; }

        [Input("snapshotIdentifier")]
        public Input<string>? SnapshotIdentifier { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("storageEncrypted")]
        public Input<bool>? StorageEncrypted { get; set; }

        [Input("storageThroughput")]
        public Input<int>? StorageThroughput { get; set; }

        [Input("storageType")]
        public InputUnion<string, Pulumi.Aws.Rds.StorageType>? StorageType { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("timezone")]
        public Input<string>? Timezone { get; set; }

        [Input("username")]
        public Input<string>? Username { get; set; }

        [Input("vpcSecurityGroupIds")]
        private InputList<string>? _vpcSecurityGroupIds;
        public InputList<string> VpcSecurityGroupIds
        {
            get => _vpcSecurityGroupIds ?? (_vpcSecurityGroupIds = new InputList<string>());
            set => _vpcSecurityGroupIds = value;
        }

        public InstanceState()
        {
        }
        public static new InstanceState Empty => new InstanceState();
    }
}
