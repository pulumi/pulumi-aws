// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Rds
{
    public static class GetCertificate
    {
        public static Task<GetCertificateResult> InvokeAsync(GetCertificateArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCertificateResult>("aws:rds/getCertificate:getCertificate", args ?? new GetCertificateArgs(), options.WithDefaults());

        public static Output<GetCertificateResult> Invoke(GetCertificateInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCertificateResult>("aws:rds/getCertificate:getCertificate", args ?? new GetCertificateInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCertificateArgs : global::Pulumi.InvokeArgs
    {
        [Input("id")]
        public string? Id { get; set; }

        [Input("latestValidTill")]
        public bool? LatestValidTill { get; set; }

        public GetCertificateArgs()
        {
        }
        public static new GetCertificateArgs Empty => new GetCertificateArgs();
    }

    public sealed class GetCertificateInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("latestValidTill")]
        public Input<bool>? LatestValidTill { get; set; }

        public GetCertificateInvokeArgs()
        {
        }
        public static new GetCertificateInvokeArgs Empty => new GetCertificateInvokeArgs();
    }


    [OutputType]
    public sealed class GetCertificateResult
    {
        public readonly string Arn;
        public readonly string CertificateType;
        public readonly bool CustomerOverride;
        public readonly string CustomerOverrideValidTill;
        public readonly string Id;
        public readonly bool? LatestValidTill;
        public readonly string Thumbprint;
        public readonly string ValidFrom;
        public readonly string ValidTill;

        [OutputConstructor]
        private GetCertificateResult(
            string arn,

            string certificateType,

            bool customerOverride,

            string customerOverrideValidTill,

            string id,

            bool? latestValidTill,

            string thumbprint,

            string validFrom,

            string validTill)
        {
            Arn = arn;
            CertificateType = certificateType;
            CustomerOverride = customerOverride;
            CustomerOverrideValidTill = customerOverrideValidTill;
            Id = id;
            LatestValidTill = latestValidTill;
            Thumbprint = thumbprint;
            ValidFrom = validFrom;
            ValidTill = validTill;
        }
    }
}
