// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Rds
{
    public static class GetCertificate
    {
        /// <summary>
        /// Information about an RDS Certificate.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(Aws.Rds.GetCertificate.InvokeAsync(new Aws.Rds.GetCertificateArgs
        ///         {
        ///             LatestValidTill = true,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetCertificateResult> InvokeAsync(GetCertificateArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetCertificateResult>("aws:rds/getCertificate:getCertificate", args ?? new GetCertificateArgs(), options.WithVersion());
    }


    public sealed class GetCertificateArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Certificate identifier. For example, `rds-ca-2019`.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// When enabled, returns the certificate with the latest `ValidTill`.
        /// </summary>
        [Input("latestValidTill")]
        public bool? LatestValidTill { get; set; }

        public GetCertificateArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetCertificateResult
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the certificate.
        /// </summary>
        public readonly string Arn;
        /// <summary>
        /// Type of certificate. For example, `CA`.
        /// </summary>
        public readonly string CertificateType;
        /// <summary>
        /// Boolean whether there is an override for the default certificate identifier.
        /// </summary>
        public readonly bool CustomerOverride;
        /// <summary>
        /// If there is an override for the default certificate identifier, when the override expires.
        /// </summary>
        public readonly string CustomerOverrideValidTill;
        public readonly string Id;
        public readonly bool? LatestValidTill;
        /// <summary>
        /// Thumbprint of the certificate.
        /// </summary>
        public readonly string Thumbprint;
        /// <summary>
        /// [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) of certificate starting validity date.
        /// </summary>
        public readonly string ValidFrom;
        /// <summary>
        /// [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) of certificate ending validity date.
        /// </summary>
        public readonly string ValidTill;

        [OutputConstructor]
        private GetCertificateResult(
            string arn,

            string certificateType,

            bool customerOverride,

            string customerOverrideValidTill,

            string id,

            bool? latestValidTill,

            string thumbprint,

            string validFrom,

            string validTill)
        {
            Arn = arn;
            CertificateType = certificateType;
            CustomerOverride = customerOverride;
            CustomerOverrideValidTill = customerOverrideValidTill;
            Id = id;
            LatestValidTill = latestValidTill;
            Thumbprint = thumbprint;
            ValidFrom = validFrom;
            ValidTill = validTill;
        }
    }
}
