// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Rds
{
    public static class GetProxy
    {
        /// <summary>
        /// Use this data source to get information about a DB Proxy.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const proxy = aws.rds.getProxy({
        ///     name: "my-test-db-proxy",
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// proxy = aws.rds.get_proxy(name="my-test-db-proxy")
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var proxy = Aws.Rds.GetProxy.Invoke(new()
        ///     {
        ///         Name = "my-test-db-proxy",
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/rds"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := rds.LookupProxy(ctx, &amp;rds.LookupProxyArgs{
        /// 			Name: "my-test-db-proxy",
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.rds.RdsFunctions;
        /// import com.pulumi.aws.rds.inputs.GetProxyArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var proxy = RdsFunctions.getProxy(GetProxyArgs.builder()
        ///             .name("my-test-db-proxy")
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   proxy:
        ///     fn::invoke:
        ///       Function: aws:rds:getProxy
        ///       Arguments:
        ///         name: my-test-db-proxy
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetProxyResult> InvokeAsync(GetProxyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetProxyResult>("aws:rds/getProxy:getProxy", args ?? new GetProxyArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get information about a DB Proxy.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const proxy = aws.rds.getProxy({
        ///     name: "my-test-db-proxy",
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// proxy = aws.rds.get_proxy(name="my-test-db-proxy")
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var proxy = Aws.Rds.GetProxy.Invoke(new()
        ///     {
        ///         Name = "my-test-db-proxy",
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/rds"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := rds.LookupProxy(ctx, &amp;rds.LookupProxyArgs{
        /// 			Name: "my-test-db-proxy",
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.rds.RdsFunctions;
        /// import com.pulumi.aws.rds.inputs.GetProxyArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var proxy = RdsFunctions.getProxy(GetProxyArgs.builder()
        ///             .name("my-test-db-proxy")
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   proxy:
        ///     fn::invoke:
        ///       Function: aws:rds:getProxy
        ///       Arguments:
        ///         name: my-test-db-proxy
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetProxyResult> Invoke(GetProxyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetProxyResult>("aws:rds/getProxy:getProxy", args ?? new GetProxyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProxyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the DB proxy.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetProxyArgs()
        {
        }
        public static new GetProxyArgs Empty => new GetProxyArgs();
    }

    public sealed class GetProxyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the DB proxy.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetProxyInvokeArgs()
        {
        }
        public static new GetProxyInvokeArgs Empty => new GetProxyInvokeArgs();
    }


    [OutputType]
    public sealed class GetProxyResult
    {
        /// <summary>
        /// ARN of the DB Proxy.
        /// </summary>
        public readonly string Arn;
        /// <summary>
        /// Configuration(s) with authorization mechanisms to connect to the associated instance or cluster.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetProxyAuthResult> Auths;
        /// <summary>
        /// Whether the proxy includes detailed information about SQL statements in its logs.
        /// </summary>
        public readonly bool DebugLogging;
        /// <summary>
        /// Endpoint that you can use to connect to the DB proxy.
        /// </summary>
        public readonly string Endpoint;
        /// <summary>
        /// Kinds of databases that the proxy can connect to.
        /// </summary>
        public readonly string EngineFamily;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Number of seconds a connection to the proxy can have no activity before the proxy drops the client connection.
        /// </summary>
        public readonly int IdleClientTimeout;
        public readonly string Name;
        /// <summary>
        /// Whether Transport Layer Security (TLS) encryption is required for connections to the proxy.
        /// </summary>
        public readonly bool RequireTls;
        /// <summary>
        /// ARN for the IAM role that the proxy uses to access Amazon Secrets Manager.
        /// </summary>
        public readonly string RoleArn;
        /// <summary>
        /// Provides the VPC ID of the DB proxy.
        /// </summary>
        public readonly string VpcId;
        /// <summary>
        /// Provides a list of VPC security groups that the proxy belongs to.
        /// </summary>
        public readonly ImmutableArray<string> VpcSecurityGroupIds;
        /// <summary>
        /// EC2 subnet IDs for the proxy.
        /// </summary>
        public readonly ImmutableArray<string> VpcSubnetIds;

        [OutputConstructor]
        private GetProxyResult(
            string arn,

            ImmutableArray<Outputs.GetProxyAuthResult> auths,

            bool debugLogging,

            string endpoint,

            string engineFamily,

            string id,

            int idleClientTimeout,

            string name,

            bool requireTls,

            string roleArn,

            string vpcId,

            ImmutableArray<string> vpcSecurityGroupIds,

            ImmutableArray<string> vpcSubnetIds)
        {
            Arn = arn;
            Auths = auths;
            DebugLogging = debugLogging;
            Endpoint = endpoint;
            EngineFamily = engineFamily;
            Id = id;
            IdleClientTimeout = idleClientTimeout;
            Name = name;
            RequireTls = requireTls;
            RoleArn = roleArn;
            VpcId = vpcId;
            VpcSecurityGroupIds = vpcSecurityGroupIds;
            VpcSubnetIds = vpcSubnetIds;
        }
    }
}
