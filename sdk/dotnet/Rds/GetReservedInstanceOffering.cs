// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Rds
{
    public static class GetReservedInstanceOffering
    {
        /// <summary>
        /// Information about a single RDS Reserved Instance Offering.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.Rds.GetReservedInstanceOffering.Invoke(new()
        ///     {
        ///         DbInstanceClass = "db.t2.micro",
        ///         Duration = 31536000,
        ///         MultiAz = false,
        ///         OfferingType = "All Upfront",
        ///         ProductDescription = "mysql",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetReservedInstanceOfferingResult> InvokeAsync(GetReservedInstanceOfferingArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetReservedInstanceOfferingResult>("aws:rds/getReservedInstanceOffering:getReservedInstanceOffering", args ?? new GetReservedInstanceOfferingArgs(), options.WithDefaults());

        /// <summary>
        /// Information about a single RDS Reserved Instance Offering.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.Rds.GetReservedInstanceOffering.Invoke(new()
        ///     {
        ///         DbInstanceClass = "db.t2.micro",
        ///         Duration = 31536000,
        ///         MultiAz = false,
        ///         OfferingType = "All Upfront",
        ///         ProductDescription = "mysql",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetReservedInstanceOfferingResult> Invoke(GetReservedInstanceOfferingInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetReservedInstanceOfferingResult>("aws:rds/getReservedInstanceOffering:getReservedInstanceOffering", args ?? new GetReservedInstanceOfferingInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetReservedInstanceOfferingArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// DB instance class for the reserved DB instance.
        /// </summary>
        [Input("dbInstanceClass", required: true)]
        public string DbInstanceClass { get; set; } = null!;

        /// <summary>
        /// Duration of the reservation in years or seconds. Valid values are `1`, `3`, `31536000`, `94608000`
        /// </summary>
        [Input("duration", required: true)]
        public int Duration { get; set; }

        /// <summary>
        /// Whether the reservation applies to Multi-AZ deployments.
        /// </summary>
        [Input("multiAz", required: true)]
        public bool MultiAz { get; set; }

        /// <summary>
        /// Offering type of this reserved DB instance. Valid values are `No Upfront`, `Partial Upfront`, `All Upfront`.
        /// </summary>
        [Input("offeringType", required: true)]
        public string OfferingType { get; set; } = null!;

        /// <summary>
        /// Description of the reserved DB instance.
        /// </summary>
        [Input("productDescription", required: true)]
        public string ProductDescription { get; set; } = null!;

        public GetReservedInstanceOfferingArgs()
        {
        }
        public static new GetReservedInstanceOfferingArgs Empty => new GetReservedInstanceOfferingArgs();
    }

    public sealed class GetReservedInstanceOfferingInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// DB instance class for the reserved DB instance.
        /// </summary>
        [Input("dbInstanceClass", required: true)]
        public Input<string> DbInstanceClass { get; set; } = null!;

        /// <summary>
        /// Duration of the reservation in years or seconds. Valid values are `1`, `3`, `31536000`, `94608000`
        /// </summary>
        [Input("duration", required: true)]
        public Input<int> Duration { get; set; } = null!;

        /// <summary>
        /// Whether the reservation applies to Multi-AZ deployments.
        /// </summary>
        [Input("multiAz", required: true)]
        public Input<bool> MultiAz { get; set; } = null!;

        /// <summary>
        /// Offering type of this reserved DB instance. Valid values are `No Upfront`, `Partial Upfront`, `All Upfront`.
        /// </summary>
        [Input("offeringType", required: true)]
        public Input<string> OfferingType { get; set; } = null!;

        /// <summary>
        /// Description of the reserved DB instance.
        /// </summary>
        [Input("productDescription", required: true)]
        public Input<string> ProductDescription { get; set; } = null!;

        public GetReservedInstanceOfferingInvokeArgs()
        {
        }
        public static new GetReservedInstanceOfferingInvokeArgs Empty => new GetReservedInstanceOfferingInvokeArgs();
    }


    [OutputType]
    public sealed class GetReservedInstanceOfferingResult
    {
        /// <summary>
        /// Currency code for the reserved DB instance.
        /// </summary>
        public readonly string CurrencyCode;
        public readonly string DbInstanceClass;
        public readonly int Duration;
        /// <summary>
        /// Fixed price charged for this reserved DB instance.
        /// </summary>
        public readonly double FixedPrice;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool MultiAz;
        /// <summary>
        /// Unique identifier for the reservation.
        /// </summary>
        public readonly string OfferingId;
        public readonly string OfferingType;
        public readonly string ProductDescription;

        [OutputConstructor]
        private GetReservedInstanceOfferingResult(
            string currencyCode,

            string dbInstanceClass,

            int duration,

            double fixedPrice,

            string id,

            bool multiAz,

            string offeringId,

            string offeringType,

            string productDescription)
        {
            CurrencyCode = currencyCode;
            DbInstanceClass = dbInstanceClass;
            Duration = duration;
            FixedPrice = fixedPrice;
            Id = id;
            MultiAz = multiAz;
            OfferingId = offeringId;
            OfferingType = offeringType;
            ProductDescription = productDescription;
        }
    }
}
