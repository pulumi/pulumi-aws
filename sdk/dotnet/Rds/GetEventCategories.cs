// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Rds
{
    public static class GetEventCategories
    {
        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// List the event categories of all the RDS resources.
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleEventCategories = Aws.Rds.GetEventCategories.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["example"] = exampleEventCategories.Apply(getEventCategoriesResult =&gt; getEventCategoriesResult.EventCategories),
        ///     };
        /// });
        /// ```
        /// 
        /// List the event categories specific to the RDS resource `db-snapshot`.
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleEventCategories = Aws.Rds.GetEventCategories.Invoke(new()
        ///     {
        ///         SourceType = "db-snapshot",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["example"] = exampleEventCategories.Apply(getEventCategoriesResult =&gt; getEventCategoriesResult.EventCategories),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetEventCategoriesResult> InvokeAsync(GetEventCategoriesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEventCategoriesResult>("aws:rds/getEventCategories:getEventCategories", args ?? new GetEventCategoriesArgs(), options.WithDefaults());

        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// List the event categories of all the RDS resources.
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleEventCategories = Aws.Rds.GetEventCategories.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["example"] = exampleEventCategories.Apply(getEventCategoriesResult =&gt; getEventCategoriesResult.EventCategories),
        ///     };
        /// });
        /// ```
        /// 
        /// List the event categories specific to the RDS resource `db-snapshot`.
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleEventCategories = Aws.Rds.GetEventCategories.Invoke(new()
        ///     {
        ///         SourceType = "db-snapshot",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["example"] = exampleEventCategories.Apply(getEventCategoriesResult =&gt; getEventCategoriesResult.EventCategories),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetEventCategoriesResult> Invoke(GetEventCategoriesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEventCategoriesResult>("aws:rds/getEventCategories:getEventCategories", args ?? new GetEventCategoriesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEventCategoriesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Type of source that will be generating the events. Valid options are db-instance, db-security-group, db-parameter-group, db-snapshot, db-cluster or db-cluster-snapshot.
        /// </summary>
        [Input("sourceType")]
        public string? SourceType { get; set; }

        public GetEventCategoriesArgs()
        {
        }
        public static new GetEventCategoriesArgs Empty => new GetEventCategoriesArgs();
    }

    public sealed class GetEventCategoriesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Type of source that will be generating the events. Valid options are db-instance, db-security-group, db-parameter-group, db-snapshot, db-cluster or db-cluster-snapshot.
        /// </summary>
        [Input("sourceType")]
        public Input<string>? SourceType { get; set; }

        public GetEventCategoriesInvokeArgs()
        {
        }
        public static new GetEventCategoriesInvokeArgs Empty => new GetEventCategoriesInvokeArgs();
    }


    [OutputType]
    public sealed class GetEventCategoriesResult
    {
        /// <summary>
        /// List of the event categories.
        /// </summary>
        public readonly ImmutableArray<string> EventCategories;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? SourceType;

        [OutputConstructor]
        private GetEventCategoriesResult(
            ImmutableArray<string> eventCategories,

            string id,

            string? sourceType)
        {
            EventCategories = eventCategories;
            Id = id;
            SourceType = sourceType;
        }
    }
}
