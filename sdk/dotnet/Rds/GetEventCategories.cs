// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Rds
{
    public static class GetEventCategories
    {
        public static Task<GetEventCategoriesResult> InvokeAsync(GetEventCategoriesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEventCategoriesResult>("aws:rds/getEventCategories:getEventCategories", args ?? new GetEventCategoriesArgs(), options.WithDefaults());

        public static Output<GetEventCategoriesResult> Invoke(GetEventCategoriesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEventCategoriesResult>("aws:rds/getEventCategories:getEventCategories", args ?? new GetEventCategoriesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEventCategoriesArgs : global::Pulumi.InvokeArgs
    {
        [Input("sourceType")]
        public string? SourceType { get; set; }

        public GetEventCategoriesArgs()
        {
        }
        public static new GetEventCategoriesArgs Empty => new GetEventCategoriesArgs();
    }

    public sealed class GetEventCategoriesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("sourceType")]
        public Input<string>? SourceType { get; set; }

        public GetEventCategoriesInvokeArgs()
        {
        }
        public static new GetEventCategoriesInvokeArgs Empty => new GetEventCategoriesInvokeArgs();
    }


    [OutputType]
    public sealed class GetEventCategoriesResult
    {
        public readonly ImmutableArray<string> EventCategories;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? SourceType;

        [OutputConstructor]
        private GetEventCategoriesResult(
            ImmutableArray<string> eventCategories,

            string id,

            string? sourceType)
        {
            EventCategories = eventCategories;
            Id = id;
            SourceType = sourceType;
        }
    }
}
