// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi.Utilities;

namespace Pulumi.Aws.Rds
{
    public static class GetSubnetGroup
    {
        /// <summary>
        /// Use this data source to get information about an RDS subnet group.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var database = Output.Create(Aws.Rds.GetSubnetGroup.InvokeAsync(new Aws.Rds.GetSubnetGroupArgs
        ///         {
        ///             Name = "my-test-database-subnet-group",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetSubnetGroupResult> InvokeAsync(GetSubnetGroupArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSubnetGroupResult>("aws:rds/getSubnetGroup:getSubnetGroup", args ?? new GetSubnetGroupArgs(), options.WithVersion());

        /// <summary>
        /// Use this data source to get information about an RDS subnet group.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var database = Output.Create(Aws.Rds.GetSubnetGroup.InvokeAsync(new Aws.Rds.GetSubnetGroupArgs
        ///         {
        ///             Name = "my-test-database-subnet-group",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetSubnetGroupResult> Invoke(GetSubnetGroupInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetSubnetGroupResult>("aws:rds/getSubnetGroup:getSubnetGroup", args ?? new GetSubnetGroupInvokeArgs(), options.WithVersion());
    }


    public sealed class GetSubnetGroupArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the RDS database subnet group.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetSubnetGroupArgs()
        {
        }
    }

    public sealed class GetSubnetGroupInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the RDS database subnet group.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetSubnetGroupInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetSubnetGroupResult
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) for the DB subnet group.
        /// </summary>
        public readonly string Arn;
        /// <summary>
        /// Provides the description of the DB subnet group.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        /// <summary>
        /// Provides the status of the DB subnet group.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Contains a list of subnet identifiers.
        /// </summary>
        public readonly ImmutableArray<string> SubnetIds;
        /// <summary>
        /// Provides the VPC ID of the subnet group.
        /// </summary>
        public readonly string VpcId;

        [OutputConstructor]
        private GetSubnetGroupResult(
            string arn,

            string description,

            string id,

            string name,

            string status,

            ImmutableArray<string> subnetIds,

            string vpcId)
        {
            Arn = arn;
            Description = description;
            Id = id;
            Name = name;
            Status = status;
            SubnetIds = subnetIds;
            VpcId = vpcId;
        }
    }
}
