// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Rds
{
    /// <summary>
    /// Resource for managing an AWS RDS (Relational Database) RDS Instance State.
    /// 
    /// &gt; Destruction of this resource is a no-op and **will not** modify the instance state
    /// 
    /// ## Example Usage
    /// 
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var test = new Aws.Rds.InstanceDesiredState("test", new()
    ///     {
    ///         Identifier = testAwsDbInstance.Identifier,
    ///         State = "available",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import RDS (Relational Database) RDS Instance State using the `example_id_arg`. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:rds/instanceDesiredState:InstanceDesiredState example rds_instance_state-id-12345678
    /// ```
    /// </summary>
    [AwsResourceType("aws:rds/instanceDesiredState:InstanceDesiredState")]
    public partial class InstanceDesiredState : global::Pulumi.CustomResource
    {
        /// <summary>
        /// DB Instance Identifier
        /// </summary>
        [Output("identifier")]
        public Output<string> Identifier { get; private set; } = null!;

        /// <summary>
        /// Configured state of the DB Instance. Valid values are `available` and `stopped`.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        [Output("timeouts")]
        public Output<Outputs.InstanceDesiredStateTimeouts?> Timeouts { get; private set; } = null!;


        /// <summary>
        /// Create a InstanceDesiredState resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public InstanceDesiredState(string name, InstanceDesiredStateArgs args, CustomResourceOptions? options = null)
            : base("aws:rds/instanceDesiredState:InstanceDesiredState", name, args ?? new InstanceDesiredStateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private InstanceDesiredState(string name, Input<string> id, InstanceDesiredStateState? state = null, CustomResourceOptions? options = null)
            : base("aws:rds/instanceDesiredState:InstanceDesiredState", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing InstanceDesiredState resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static InstanceDesiredState Get(string name, Input<string> id, InstanceDesiredStateState? state = null, CustomResourceOptions? options = null)
        {
            return new InstanceDesiredState(name, id, state, options);
        }
    }

    public sealed class InstanceDesiredStateArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// DB Instance Identifier
        /// </summary>
        [Input("identifier", required: true)]
        public Input<string> Identifier { get; set; } = null!;

        /// <summary>
        /// Configured state of the DB Instance. Valid values are `available` and `stopped`.
        /// </summary>
        [Input("state", required: true)]
        public Input<string> State { get; set; } = null!;

        [Input("timeouts")]
        public Input<Inputs.InstanceDesiredStateTimeoutsArgs>? Timeouts { get; set; }

        public InstanceDesiredStateArgs()
        {
        }
        public static new InstanceDesiredStateArgs Empty => new InstanceDesiredStateArgs();
    }

    public sealed class InstanceDesiredStateState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// DB Instance Identifier
        /// </summary>
        [Input("identifier")]
        public Input<string>? Identifier { get; set; }

        /// <summary>
        /// Configured state of the DB Instance. Valid values are `available` and `stopped`.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("timeouts")]
        public Input<Inputs.InstanceDesiredStateTimeoutsGetArgs>? Timeouts { get; set; }

        public InstanceDesiredStateState()
        {
        }
        public static new InstanceDesiredStateState Empty => new InstanceDesiredStateState();
    }
}
