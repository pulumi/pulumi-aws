// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Rds
{
    /// <summary>
    /// Manages a [RDS Aurora Cluster](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Aurora.html). To manage cluster instances that inherit configuration from the cluster (when not running the cluster in `serverless` engine mode), see the `aws.rds.ClusterInstance` resource. To manage non-Aurora databases (e.g. MySQL, PostgreSQL, SQL Server, etc.), see the `aws.rds.Instance` resource.
    /// 
    /// For information on the difference between the available Aurora MySQL engines
    /// see [Comparison between Aurora MySQL 1 and Aurora MySQL 2](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AuroraMySQL.Updates.20180206.html)
    /// in the Amazon RDS User Guide.
    /// 
    /// Changes to an RDS Cluster can occur when you manually change a
    /// parameter, such as `port`, and are reflected in the next maintenance
    /// window. Because of this, this provider may report a difference in its planning
    /// phase because a modification has not yet taken place. You can use the
    /// `apply_immediately` flag to instruct the service to apply the change immediately
    /// (see documentation below).
    /// 
    /// &gt; **Note:** using `apply_immediately` can result in a
    /// brief downtime as the server reboots. See the AWS Docs on [RDS Maintenance](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Maintenance.html)
    /// for more information.
    /// 
    /// &gt; **Note:** All arguments including the username and password will be stored in the raw state as plain-text.
    /// 
    /// ## Example Usage
    /// ### Aurora MySQL 2.x (MySQL 5.7)
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var @default = new Aws.Rds.Cluster("default", new Aws.Rds.ClusterArgs
    ///         {
    ///             AvailabilityZones = 
    ///             {
    ///                 "us-west-2a",
    ///                 "us-west-2b",
    ///                 "us-west-2c",
    ///             },
    ///             BackupRetentionPeriod = 5,
    ///             DatabaseName = "mydb",
    ///             Engine = "aurora-mysql",
    ///             EngineVersion = "5.7.mysql_aurora.2.03.2",
    ///             MasterPassword = "bar",
    ///             MasterUsername = "foo",
    ///             PreferredBackupWindow = "07:00-09:00",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// ### Aurora MySQL 1.x (MySQL 5.6)
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var @default = new Aws.Rds.Cluster("default", new Aws.Rds.ClusterArgs
    ///         {
    ///             AvailabilityZones = 
    ///             {
    ///                 "us-west-2a",
    ///                 "us-west-2b",
    ///                 "us-west-2c",
    ///             },
    ///             BackupRetentionPeriod = 5,
    ///             DatabaseName = "mydb",
    ///             MasterPassword = "bar",
    ///             MasterUsername = "foo",
    ///             PreferredBackupWindow = "07:00-09:00",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// ### Aurora with PostgreSQL engine
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var postgresql = new Aws.Rds.Cluster("postgresql", new Aws.Rds.ClusterArgs
    ///         {
    ///             AvailabilityZones = 
    ///             {
    ///                 "us-west-2a",
    ///                 "us-west-2b",
    ///                 "us-west-2c",
    ///             },
    ///             BackupRetentionPeriod = 5,
    ///             DatabaseName = "mydb",
    ///             Engine = "aurora-postgresql",
    ///             MasterPassword = "bar",
    ///             MasterUsername = "foo",
    ///             PreferredBackupWindow = "07:00-09:00",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// ### Aurora Multi-Master Cluster
    /// 
    /// &gt; More information about Aurora Multi-Master Clusters can be found in the [RDS User Guide](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-multi-master.html).
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var example = new Aws.Rds.Cluster("example", new Aws.Rds.ClusterArgs
    ///         {
    ///             DbSubnetGroupName = aws_db_subnet_group.Example.Name,
    ///             EngineMode = "multimaster",
    ///             MasterPassword = "barbarbarbar",
    ///             MasterUsername = "foo",
    ///             SkipFinalSnapshot = true,
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// RDS Clusters can be imported using the `cluster_identifier`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import aws:rds/cluster:Cluster aurora_cluster aurora-prod-cluster
    /// ```
    /// </summary>
    public partial class Cluster : Pulumi.CustomResource
    {
        /// <summary>
        /// Enable to allow major engine version upgrades when changing engine versions. Defaults to `false`.
        /// </summary>
        [Output("allowMajorVersionUpgrade")]
        public Output<bool?> AllowMajorVersionUpgrade { get; private set; } = null!;

        /// <summary>
        /// Specifies whether any cluster modifications are applied immediately, or during the next maintenance window. Default is `false`. See [Amazon RDS Documentation for more information.](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.DBInstance.Modifying.html)
        /// </summary>
        [Output("applyImmediately")]
        public Output<bool> ApplyImmediately { get; private set; } = null!;

        /// <summary>
        /// Amazon Resource Name (ARN) of cluster
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// A list of EC2 Availability Zones for the DB cluster storage where DB cluster instances can be created. RDS automatically assigns 3 AZs if less than 3 AZs are configured, which will show as a difference requiring resource recreation next provider update. It is recommended to specify 3 AZs or use [the `ignoreChanges` argument](https://www.pulumi.com/docs/intro/concepts/programming-model/#ignorechanges) if necessary.
        /// </summary>
        [Output("availabilityZones")]
        public Output<ImmutableArray<string>> AvailabilityZones { get; private set; } = null!;

        /// <summary>
        /// The target backtrack window, in seconds. Only available for `aurora` engine currently. To disable backtracking, set this value to `0`. Defaults to `0`. Must be between `0` and `259200` (72 hours)
        /// </summary>
        [Output("backtrackWindow")]
        public Output<int?> BacktrackWindow { get; private set; } = null!;

        /// <summary>
        /// The days to retain backups for. Default `1`
        /// </summary>
        [Output("backupRetentionPeriod")]
        public Output<int?> BackupRetentionPeriod { get; private set; } = null!;

        /// <summary>
        /// The cluster identifier. If omitted, this provider will assign a random, unique identifier.
        /// </summary>
        [Output("clusterIdentifier")]
        public Output<string> ClusterIdentifier { get; private set; } = null!;

        /// <summary>
        /// Creates a unique cluster identifier beginning with the specified prefix. Conflicts with `cluster_identifier`.
        /// </summary>
        [Output("clusterIdentifierPrefix")]
        public Output<string> ClusterIdentifierPrefix { get; private set; } = null!;

        /// <summary>
        /// List of RDS Instances that are a part of this cluster
        /// </summary>
        [Output("clusterMembers")]
        public Output<ImmutableArray<string>> ClusterMembers { get; private set; } = null!;

        /// <summary>
        /// The RDS Cluster Resource ID
        /// </summary>
        [Output("clusterResourceId")]
        public Output<string> ClusterResourceId { get; private set; } = null!;

        /// <summary>
        /// Copy all Cluster `tags` to snapshots. Default is `false`.
        /// </summary>
        [Output("copyTagsToSnapshot")]
        public Output<bool?> CopyTagsToSnapshot { get; private set; } = null!;

        /// <summary>
        /// Name for an automatically created database on cluster creation. There are different naming restrictions per database engine: [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints)
        /// </summary>
        [Output("databaseName")]
        public Output<string> DatabaseName { get; private set; } = null!;

        /// <summary>
        /// A cluster parameter group to associate with the cluster.
        /// </summary>
        [Output("dbClusterParameterGroupName")]
        public Output<string> DbClusterParameterGroupName { get; private set; } = null!;

        /// <summary>
        /// A DB subnet group to associate with this DB instance. **NOTE:** This must match the `db_subnet_group_name` specified on every `aws.rds.ClusterInstance` in the cluster.
        /// </summary>
        [Output("dbSubnetGroupName")]
        public Output<string> DbSubnetGroupName { get; private set; } = null!;

        /// <summary>
        /// If the DB instance should have deletion protection enabled. The database can't be deleted when this value is set to `true`. The default is `false`.
        /// </summary>
        [Output("deletionProtection")]
        public Output<bool?> DeletionProtection { get; private set; } = null!;

        /// <summary>
        /// Enable HTTP endpoint (data API). Only valid when `engine_mode` is set to `serverless`.
        /// </summary>
        [Output("enableHttpEndpoint")]
        public Output<bool?> EnableHttpEndpoint { get; private set; } = null!;

        /// <summary>
        /// Set of log types to export to cloudwatch. If omitted, no logs will be exported. The following log types are supported: `audit`, `error`, `general`, `slowquery`, `postgresql` (PostgreSQL).
        /// </summary>
        [Output("enabledCloudwatchLogsExports")]
        public Output<ImmutableArray<string>> EnabledCloudwatchLogsExports { get; private set; } = null!;

        /// <summary>
        /// The DNS address of the RDS instance
        /// </summary>
        [Output("endpoint")]
        public Output<string> Endpoint { get; private set; } = null!;

        /// <summary>
        /// The name of the database engine to be used for this DB cluster. Defaults to `aurora`. Valid Values: `aurora`, `aurora-mysql`, `aurora-postgresql`
        /// </summary>
        [Output("engine")]
        public Output<string?> Engine { get; private set; } = null!;

        /// <summary>
        /// The database engine mode. Valid values: `global` (only valid for Aurora MySQL 1.21 and earlier), `multimaster`, `parallelquery`, `provisioned`, `serverless`. Defaults to: `provisioned`. See the [RDS User Guide](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/aurora-serverless.html) for limitations when using `serverless`.
        /// </summary>
        [Output("engineMode")]
        public Output<string?> EngineMode { get; private set; } = null!;

        /// <summary>
        /// The database engine version. Updating this argument results in an outage. See the [Aurora MySQL](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Updates.html) and [Aurora Postgres](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraPostgreSQL.Updates.html) documentation for your configured engine to determine this value. For example with Aurora MySQL 2, a potential value for this argument is `5.7.mysql_aurora.2.03.2`.
        /// </summary>
        [Output("engineVersion")]
        public Output<string> EngineVersion { get; private set; } = null!;

        /// <summary>
        /// The name of your final DB snapshot when this DB cluster is deleted. If omitted, no final snapshot will be made.
        /// </summary>
        [Output("finalSnapshotIdentifier")]
        public Output<string?> FinalSnapshotIdentifier { get; private set; } = null!;

        /// <summary>
        /// The global cluster identifier specified on `aws.rds.GlobalCluster`.
        /// </summary>
        [Output("globalClusterIdentifier")]
        public Output<string?> GlobalClusterIdentifier { get; private set; } = null!;

        /// <summary>
        /// The Route53 Hosted Zone ID of the endpoint
        /// </summary>
        [Output("hostedZoneId")]
        public Output<string> HostedZoneId { get; private set; } = null!;

        /// <summary>
        /// Specifies whether or mappings of AWS Identity and Access Management (IAM) accounts to database accounts is enabled. Please see [AWS Documentation](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html) for availability and limitations.
        /// </summary>
        [Output("iamDatabaseAuthenticationEnabled")]
        public Output<bool?> IamDatabaseAuthenticationEnabled { get; private set; } = null!;

        /// <summary>
        /// A List of ARNs for the IAM roles to associate to the RDS Cluster.
        /// </summary>
        [Output("iamRoles")]
        public Output<ImmutableArray<string>> IamRoles { get; private set; } = null!;

        /// <summary>
        /// The ARN for the KMS encryption key. When specifying `kms_key_id`, `storage_encrypted` needs to be set to true.
        /// </summary>
        [Output("kmsKeyId")]
        public Output<string> KmsKeyId { get; private set; } = null!;

        /// <summary>
        /// Password for the master DB user. Note that this may show up in logs, and it will be stored in the state file. Please refer to the [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints)
        /// </summary>
        [Output("masterPassword")]
        public Output<string?> MasterPassword { get; private set; } = null!;

        /// <summary>
        /// Username for the master DB user. Please refer to the [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints). This argument does not support in-place updates and cannot be changed during a restore from snapshot.
        /// </summary>
        [Output("masterUsername")]
        public Output<string> MasterUsername { get; private set; } = null!;

        /// <summary>
        /// The port on which the DB accepts connections
        /// </summary>
        [Output("port")]
        public Output<int> Port { get; private set; } = null!;

        /// <summary>
        /// The daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter.Time in UTC. Default: A 30-minute window selected at random from an 8-hour block of time per region. e.g. 04:00-09:00
        /// </summary>
        [Output("preferredBackupWindow")]
        public Output<string> PreferredBackupWindow { get; private set; } = null!;

        /// <summary>
        /// The weekly time range during which system maintenance can occur, in (UTC) e.g. wed:04:00-wed:04:30
        /// </summary>
        [Output("preferredMaintenanceWindow")]
        public Output<string> PreferredMaintenanceWindow { get; private set; } = null!;

        /// <summary>
        /// A read-only endpoint for the Aurora cluster, automatically
        /// load-balanced across replicas
        /// </summary>
        [Output("readerEndpoint")]
        public Output<string> ReaderEndpoint { get; private set; } = null!;

        /// <summary>
        /// ARN of the source DB cluster or DB instance if this DB cluster is created as a Read Replica.
        /// </summary>
        [Output("replicationSourceIdentifier")]
        public Output<string?> ReplicationSourceIdentifier { get; private set; } = null!;

        /// <summary>
        /// Nested attribute for [point in time restore](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_PIT.html). More details below.
        /// </summary>
        [Output("restoreToPointInTime")]
        public Output<Outputs.ClusterRestoreToPointInTime?> RestoreToPointInTime { get; private set; } = null!;

        [Output("s3Import")]
        public Output<Outputs.ClusterS3Import?> S3Import { get; private set; } = null!;

        /// <summary>
        /// Nested attribute with scaling properties. Only valid when `engine_mode` is set to `serverless`. More details below.
        /// </summary>
        [Output("scalingConfiguration")]
        public Output<Outputs.ClusterScalingConfiguration?> ScalingConfiguration { get; private set; } = null!;

        /// <summary>
        /// Determines whether a final DB snapshot is created before the DB cluster is deleted. If true is specified, no DB snapshot is created. If false is specified, a DB snapshot is created before the DB cluster is deleted, using the value from `final_snapshot_identifier`. Default is `false`.
        /// </summary>
        [Output("skipFinalSnapshot")]
        public Output<bool?> SkipFinalSnapshot { get; private set; } = null!;

        /// <summary>
        /// Specifies whether or not to create this cluster from a snapshot. You can use either the name or ARN when specifying a DB cluster snapshot, or the ARN when specifying a DB snapshot.
        /// </summary>
        [Output("snapshotIdentifier")]
        public Output<string?> SnapshotIdentifier { get; private set; } = null!;

        /// <summary>
        /// The source region for an encrypted replica DB cluster.
        /// </summary>
        [Output("sourceRegion")]
        public Output<string?> SourceRegion { get; private set; } = null!;

        /// <summary>
        /// Specifies whether the DB cluster is encrypted
        /// </summary>
        [Output("storageEncrypted")]
        public Output<bool> StorageEncrypted { get; private set; } = null!;

        /// <summary>
        /// A map of tags to assign to the DB cluster.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// List of VPC security groups to associate with the Cluster
        /// </summary>
        [Output("vpcSecurityGroupIds")]
        public Output<ImmutableArray<string>> VpcSecurityGroupIds { get; private set; } = null!;


        /// <summary>
        /// Create a Cluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Cluster(string name, ClusterArgs? args = null, CustomResourceOptions? options = null)
            : base("aws:rds/cluster:Cluster", name, args ?? new ClusterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Cluster(string name, Input<string> id, ClusterState? state = null, CustomResourceOptions? options = null)
            : base("aws:rds/cluster:Cluster", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Cluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Cluster Get(string name, Input<string> id, ClusterState? state = null, CustomResourceOptions? options = null)
        {
            return new Cluster(name, id, state, options);
        }
    }

    public sealed class ClusterArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable to allow major engine version upgrades when changing engine versions. Defaults to `false`.
        /// </summary>
        [Input("allowMajorVersionUpgrade")]
        public Input<bool>? AllowMajorVersionUpgrade { get; set; }

        /// <summary>
        /// Specifies whether any cluster modifications are applied immediately, or during the next maintenance window. Default is `false`. See [Amazon RDS Documentation for more information.](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.DBInstance.Modifying.html)
        /// </summary>
        [Input("applyImmediately")]
        public Input<bool>? ApplyImmediately { get; set; }

        [Input("availabilityZones")]
        private InputList<string>? _availabilityZones;

        /// <summary>
        /// A list of EC2 Availability Zones for the DB cluster storage where DB cluster instances can be created. RDS automatically assigns 3 AZs if less than 3 AZs are configured, which will show as a difference requiring resource recreation next provider update. It is recommended to specify 3 AZs or use [the `ignoreChanges` argument](https://www.pulumi.com/docs/intro/concepts/programming-model/#ignorechanges) if necessary.
        /// </summary>
        public InputList<string> AvailabilityZones
        {
            get => _availabilityZones ?? (_availabilityZones = new InputList<string>());
            set => _availabilityZones = value;
        }

        /// <summary>
        /// The target backtrack window, in seconds. Only available for `aurora` engine currently. To disable backtracking, set this value to `0`. Defaults to `0`. Must be between `0` and `259200` (72 hours)
        /// </summary>
        [Input("backtrackWindow")]
        public Input<int>? BacktrackWindow { get; set; }

        /// <summary>
        /// The days to retain backups for. Default `1`
        /// </summary>
        [Input("backupRetentionPeriod")]
        public Input<int>? BackupRetentionPeriod { get; set; }

        /// <summary>
        /// The cluster identifier. If omitted, this provider will assign a random, unique identifier.
        /// </summary>
        [Input("clusterIdentifier")]
        public Input<string>? ClusterIdentifier { get; set; }

        /// <summary>
        /// Creates a unique cluster identifier beginning with the specified prefix. Conflicts with `cluster_identifier`.
        /// </summary>
        [Input("clusterIdentifierPrefix")]
        public Input<string>? ClusterIdentifierPrefix { get; set; }

        [Input("clusterMembers")]
        private InputList<string>? _clusterMembers;

        /// <summary>
        /// List of RDS Instances that are a part of this cluster
        /// </summary>
        public InputList<string> ClusterMembers
        {
            get => _clusterMembers ?? (_clusterMembers = new InputList<string>());
            set => _clusterMembers = value;
        }

        /// <summary>
        /// Copy all Cluster `tags` to snapshots. Default is `false`.
        /// </summary>
        [Input("copyTagsToSnapshot")]
        public Input<bool>? CopyTagsToSnapshot { get; set; }

        /// <summary>
        /// Name for an automatically created database on cluster creation. There are different naming restrictions per database engine: [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints)
        /// </summary>
        [Input("databaseName")]
        public Input<string>? DatabaseName { get; set; }

        /// <summary>
        /// A cluster parameter group to associate with the cluster.
        /// </summary>
        [Input("dbClusterParameterGroupName")]
        public Input<string>? DbClusterParameterGroupName { get; set; }

        /// <summary>
        /// A DB subnet group to associate with this DB instance. **NOTE:** This must match the `db_subnet_group_name` specified on every `aws.rds.ClusterInstance` in the cluster.
        /// </summary>
        [Input("dbSubnetGroupName")]
        public Input<string>? DbSubnetGroupName { get; set; }

        /// <summary>
        /// If the DB instance should have deletion protection enabled. The database can't be deleted when this value is set to `true`. The default is `false`.
        /// </summary>
        [Input("deletionProtection")]
        public Input<bool>? DeletionProtection { get; set; }

        /// <summary>
        /// Enable HTTP endpoint (data API). Only valid when `engine_mode` is set to `serverless`.
        /// </summary>
        [Input("enableHttpEndpoint")]
        public Input<bool>? EnableHttpEndpoint { get; set; }

        [Input("enabledCloudwatchLogsExports")]
        private InputList<string>? _enabledCloudwatchLogsExports;

        /// <summary>
        /// Set of log types to export to cloudwatch. If omitted, no logs will be exported. The following log types are supported: `audit`, `error`, `general`, `slowquery`, `postgresql` (PostgreSQL).
        /// </summary>
        public InputList<string> EnabledCloudwatchLogsExports
        {
            get => _enabledCloudwatchLogsExports ?? (_enabledCloudwatchLogsExports = new InputList<string>());
            set => _enabledCloudwatchLogsExports = value;
        }

        /// <summary>
        /// The name of the database engine to be used for this DB cluster. Defaults to `aurora`. Valid Values: `aurora`, `aurora-mysql`, `aurora-postgresql`
        /// </summary>
        [Input("engine")]
        public InputUnion<string, Pulumi.Aws.Rds.EngineType>? Engine { get; set; }

        /// <summary>
        /// The database engine mode. Valid values: `global` (only valid for Aurora MySQL 1.21 and earlier), `multimaster`, `parallelquery`, `provisioned`, `serverless`. Defaults to: `provisioned`. See the [RDS User Guide](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/aurora-serverless.html) for limitations when using `serverless`.
        /// </summary>
        [Input("engineMode")]
        public InputUnion<string, Pulumi.Aws.Rds.EngineMode>? EngineMode { get; set; }

        /// <summary>
        /// The database engine version. Updating this argument results in an outage. See the [Aurora MySQL](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Updates.html) and [Aurora Postgres](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraPostgreSQL.Updates.html) documentation for your configured engine to determine this value. For example with Aurora MySQL 2, a potential value for this argument is `5.7.mysql_aurora.2.03.2`.
        /// </summary>
        [Input("engineVersion")]
        public Input<string>? EngineVersion { get; set; }

        /// <summary>
        /// The name of your final DB snapshot when this DB cluster is deleted. If omitted, no final snapshot will be made.
        /// </summary>
        [Input("finalSnapshotIdentifier")]
        public Input<string>? FinalSnapshotIdentifier { get; set; }

        /// <summary>
        /// The global cluster identifier specified on `aws.rds.GlobalCluster`.
        /// </summary>
        [Input("globalClusterIdentifier")]
        public Input<string>? GlobalClusterIdentifier { get; set; }

        /// <summary>
        /// Specifies whether or mappings of AWS Identity and Access Management (IAM) accounts to database accounts is enabled. Please see [AWS Documentation](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html) for availability and limitations.
        /// </summary>
        [Input("iamDatabaseAuthenticationEnabled")]
        public Input<bool>? IamDatabaseAuthenticationEnabled { get; set; }

        [Input("iamRoles")]
        private InputList<string>? _iamRoles;

        /// <summary>
        /// A List of ARNs for the IAM roles to associate to the RDS Cluster.
        /// </summary>
        public InputList<string> IamRoles
        {
            get => _iamRoles ?? (_iamRoles = new InputList<string>());
            set => _iamRoles = value;
        }

        /// <summary>
        /// The ARN for the KMS encryption key. When specifying `kms_key_id`, `storage_encrypted` needs to be set to true.
        /// </summary>
        [Input("kmsKeyId")]
        public Input<string>? KmsKeyId { get; set; }

        /// <summary>
        /// Password for the master DB user. Note that this may show up in logs, and it will be stored in the state file. Please refer to the [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints)
        /// </summary>
        [Input("masterPassword")]
        public Input<string>? MasterPassword { get; set; }

        /// <summary>
        /// Username for the master DB user. Please refer to the [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints). This argument does not support in-place updates and cannot be changed during a restore from snapshot.
        /// </summary>
        [Input("masterUsername")]
        public Input<string>? MasterUsername { get; set; }

        /// <summary>
        /// The port on which the DB accepts connections
        /// </summary>
        [Input("port")]
        public Input<int>? Port { get; set; }

        /// <summary>
        /// The daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter.Time in UTC. Default: A 30-minute window selected at random from an 8-hour block of time per region. e.g. 04:00-09:00
        /// </summary>
        [Input("preferredBackupWindow")]
        public Input<string>? PreferredBackupWindow { get; set; }

        /// <summary>
        /// The weekly time range during which system maintenance can occur, in (UTC) e.g. wed:04:00-wed:04:30
        /// </summary>
        [Input("preferredMaintenanceWindow")]
        public Input<string>? PreferredMaintenanceWindow { get; set; }

        /// <summary>
        /// ARN of the source DB cluster or DB instance if this DB cluster is created as a Read Replica.
        /// </summary>
        [Input("replicationSourceIdentifier")]
        public Input<string>? ReplicationSourceIdentifier { get; set; }

        /// <summary>
        /// Nested attribute for [point in time restore](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_PIT.html). More details below.
        /// </summary>
        [Input("restoreToPointInTime")]
        public Input<Inputs.ClusterRestoreToPointInTimeArgs>? RestoreToPointInTime { get; set; }

        [Input("s3Import")]
        public Input<Inputs.ClusterS3ImportArgs>? S3Import { get; set; }

        /// <summary>
        /// Nested attribute with scaling properties. Only valid when `engine_mode` is set to `serverless`. More details below.
        /// </summary>
        [Input("scalingConfiguration")]
        public Input<Inputs.ClusterScalingConfigurationArgs>? ScalingConfiguration { get; set; }

        /// <summary>
        /// Determines whether a final DB snapshot is created before the DB cluster is deleted. If true is specified, no DB snapshot is created. If false is specified, a DB snapshot is created before the DB cluster is deleted, using the value from `final_snapshot_identifier`. Default is `false`.
        /// </summary>
        [Input("skipFinalSnapshot")]
        public Input<bool>? SkipFinalSnapshot { get; set; }

        /// <summary>
        /// Specifies whether or not to create this cluster from a snapshot. You can use either the name or ARN when specifying a DB cluster snapshot, or the ARN when specifying a DB snapshot.
        /// </summary>
        [Input("snapshotIdentifier")]
        public Input<string>? SnapshotIdentifier { get; set; }

        /// <summary>
        /// The source region for an encrypted replica DB cluster.
        /// </summary>
        [Input("sourceRegion")]
        public Input<string>? SourceRegion { get; set; }

        /// <summary>
        /// Specifies whether the DB cluster is encrypted
        /// </summary>
        [Input("storageEncrypted")]
        public Input<bool>? StorageEncrypted { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the DB cluster.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("vpcSecurityGroupIds")]
        private InputList<string>? _vpcSecurityGroupIds;

        /// <summary>
        /// List of VPC security groups to associate with the Cluster
        /// </summary>
        public InputList<string> VpcSecurityGroupIds
        {
            get => _vpcSecurityGroupIds ?? (_vpcSecurityGroupIds = new InputList<string>());
            set => _vpcSecurityGroupIds = value;
        }

        public ClusterArgs()
        {
        }
    }

    public sealed class ClusterState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable to allow major engine version upgrades when changing engine versions. Defaults to `false`.
        /// </summary>
        [Input("allowMajorVersionUpgrade")]
        public Input<bool>? AllowMajorVersionUpgrade { get; set; }

        /// <summary>
        /// Specifies whether any cluster modifications are applied immediately, or during the next maintenance window. Default is `false`. See [Amazon RDS Documentation for more information.](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.DBInstance.Modifying.html)
        /// </summary>
        [Input("applyImmediately")]
        public Input<bool>? ApplyImmediately { get; set; }

        /// <summary>
        /// Amazon Resource Name (ARN) of cluster
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("availabilityZones")]
        private InputList<string>? _availabilityZones;

        /// <summary>
        /// A list of EC2 Availability Zones for the DB cluster storage where DB cluster instances can be created. RDS automatically assigns 3 AZs if less than 3 AZs are configured, which will show as a difference requiring resource recreation next provider update. It is recommended to specify 3 AZs or use [the `ignoreChanges` argument](https://www.pulumi.com/docs/intro/concepts/programming-model/#ignorechanges) if necessary.
        /// </summary>
        public InputList<string> AvailabilityZones
        {
            get => _availabilityZones ?? (_availabilityZones = new InputList<string>());
            set => _availabilityZones = value;
        }

        /// <summary>
        /// The target backtrack window, in seconds. Only available for `aurora` engine currently. To disable backtracking, set this value to `0`. Defaults to `0`. Must be between `0` and `259200` (72 hours)
        /// </summary>
        [Input("backtrackWindow")]
        public Input<int>? BacktrackWindow { get; set; }

        /// <summary>
        /// The days to retain backups for. Default `1`
        /// </summary>
        [Input("backupRetentionPeriod")]
        public Input<int>? BackupRetentionPeriod { get; set; }

        /// <summary>
        /// The cluster identifier. If omitted, this provider will assign a random, unique identifier.
        /// </summary>
        [Input("clusterIdentifier")]
        public Input<string>? ClusterIdentifier { get; set; }

        /// <summary>
        /// Creates a unique cluster identifier beginning with the specified prefix. Conflicts with `cluster_identifier`.
        /// </summary>
        [Input("clusterIdentifierPrefix")]
        public Input<string>? ClusterIdentifierPrefix { get; set; }

        [Input("clusterMembers")]
        private InputList<string>? _clusterMembers;

        /// <summary>
        /// List of RDS Instances that are a part of this cluster
        /// </summary>
        public InputList<string> ClusterMembers
        {
            get => _clusterMembers ?? (_clusterMembers = new InputList<string>());
            set => _clusterMembers = value;
        }

        /// <summary>
        /// The RDS Cluster Resource ID
        /// </summary>
        [Input("clusterResourceId")]
        public Input<string>? ClusterResourceId { get; set; }

        /// <summary>
        /// Copy all Cluster `tags` to snapshots. Default is `false`.
        /// </summary>
        [Input("copyTagsToSnapshot")]
        public Input<bool>? CopyTagsToSnapshot { get; set; }

        /// <summary>
        /// Name for an automatically created database on cluster creation. There are different naming restrictions per database engine: [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints)
        /// </summary>
        [Input("databaseName")]
        public Input<string>? DatabaseName { get; set; }

        /// <summary>
        /// A cluster parameter group to associate with the cluster.
        /// </summary>
        [Input("dbClusterParameterGroupName")]
        public Input<string>? DbClusterParameterGroupName { get; set; }

        /// <summary>
        /// A DB subnet group to associate with this DB instance. **NOTE:** This must match the `db_subnet_group_name` specified on every `aws.rds.ClusterInstance` in the cluster.
        /// </summary>
        [Input("dbSubnetGroupName")]
        public Input<string>? DbSubnetGroupName { get; set; }

        /// <summary>
        /// If the DB instance should have deletion protection enabled. The database can't be deleted when this value is set to `true`. The default is `false`.
        /// </summary>
        [Input("deletionProtection")]
        public Input<bool>? DeletionProtection { get; set; }

        /// <summary>
        /// Enable HTTP endpoint (data API). Only valid when `engine_mode` is set to `serverless`.
        /// </summary>
        [Input("enableHttpEndpoint")]
        public Input<bool>? EnableHttpEndpoint { get; set; }

        [Input("enabledCloudwatchLogsExports")]
        private InputList<string>? _enabledCloudwatchLogsExports;

        /// <summary>
        /// Set of log types to export to cloudwatch. If omitted, no logs will be exported. The following log types are supported: `audit`, `error`, `general`, `slowquery`, `postgresql` (PostgreSQL).
        /// </summary>
        public InputList<string> EnabledCloudwatchLogsExports
        {
            get => _enabledCloudwatchLogsExports ?? (_enabledCloudwatchLogsExports = new InputList<string>());
            set => _enabledCloudwatchLogsExports = value;
        }

        /// <summary>
        /// The DNS address of the RDS instance
        /// </summary>
        [Input("endpoint")]
        public Input<string>? Endpoint { get; set; }

        /// <summary>
        /// The name of the database engine to be used for this DB cluster. Defaults to `aurora`. Valid Values: `aurora`, `aurora-mysql`, `aurora-postgresql`
        /// </summary>
        [Input("engine")]
        public InputUnion<string, Pulumi.Aws.Rds.EngineType>? Engine { get; set; }

        /// <summary>
        /// The database engine mode. Valid values: `global` (only valid for Aurora MySQL 1.21 and earlier), `multimaster`, `parallelquery`, `provisioned`, `serverless`. Defaults to: `provisioned`. See the [RDS User Guide](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/aurora-serverless.html) for limitations when using `serverless`.
        /// </summary>
        [Input("engineMode")]
        public InputUnion<string, Pulumi.Aws.Rds.EngineMode>? EngineMode { get; set; }

        /// <summary>
        /// The database engine version. Updating this argument results in an outage. See the [Aurora MySQL](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Updates.html) and [Aurora Postgres](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraPostgreSQL.Updates.html) documentation for your configured engine to determine this value. For example with Aurora MySQL 2, a potential value for this argument is `5.7.mysql_aurora.2.03.2`.
        /// </summary>
        [Input("engineVersion")]
        public Input<string>? EngineVersion { get; set; }

        /// <summary>
        /// The name of your final DB snapshot when this DB cluster is deleted. If omitted, no final snapshot will be made.
        /// </summary>
        [Input("finalSnapshotIdentifier")]
        public Input<string>? FinalSnapshotIdentifier { get; set; }

        /// <summary>
        /// The global cluster identifier specified on `aws.rds.GlobalCluster`.
        /// </summary>
        [Input("globalClusterIdentifier")]
        public Input<string>? GlobalClusterIdentifier { get; set; }

        /// <summary>
        /// The Route53 Hosted Zone ID of the endpoint
        /// </summary>
        [Input("hostedZoneId")]
        public Input<string>? HostedZoneId { get; set; }

        /// <summary>
        /// Specifies whether or mappings of AWS Identity and Access Management (IAM) accounts to database accounts is enabled. Please see [AWS Documentation](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html) for availability and limitations.
        /// </summary>
        [Input("iamDatabaseAuthenticationEnabled")]
        public Input<bool>? IamDatabaseAuthenticationEnabled { get; set; }

        [Input("iamRoles")]
        private InputList<string>? _iamRoles;

        /// <summary>
        /// A List of ARNs for the IAM roles to associate to the RDS Cluster.
        /// </summary>
        public InputList<string> IamRoles
        {
            get => _iamRoles ?? (_iamRoles = new InputList<string>());
            set => _iamRoles = value;
        }

        /// <summary>
        /// The ARN for the KMS encryption key. When specifying `kms_key_id`, `storage_encrypted` needs to be set to true.
        /// </summary>
        [Input("kmsKeyId")]
        public Input<string>? KmsKeyId { get; set; }

        /// <summary>
        /// Password for the master DB user. Note that this may show up in logs, and it will be stored in the state file. Please refer to the [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints)
        /// </summary>
        [Input("masterPassword")]
        public Input<string>? MasterPassword { get; set; }

        /// <summary>
        /// Username for the master DB user. Please refer to the [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints). This argument does not support in-place updates and cannot be changed during a restore from snapshot.
        /// </summary>
        [Input("masterUsername")]
        public Input<string>? MasterUsername { get; set; }

        /// <summary>
        /// The port on which the DB accepts connections
        /// </summary>
        [Input("port")]
        public Input<int>? Port { get; set; }

        /// <summary>
        /// The daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter.Time in UTC. Default: A 30-minute window selected at random from an 8-hour block of time per region. e.g. 04:00-09:00
        /// </summary>
        [Input("preferredBackupWindow")]
        public Input<string>? PreferredBackupWindow { get; set; }

        /// <summary>
        /// The weekly time range during which system maintenance can occur, in (UTC) e.g. wed:04:00-wed:04:30
        /// </summary>
        [Input("preferredMaintenanceWindow")]
        public Input<string>? PreferredMaintenanceWindow { get; set; }

        /// <summary>
        /// A read-only endpoint for the Aurora cluster, automatically
        /// load-balanced across replicas
        /// </summary>
        [Input("readerEndpoint")]
        public Input<string>? ReaderEndpoint { get; set; }

        /// <summary>
        /// ARN of the source DB cluster or DB instance if this DB cluster is created as a Read Replica.
        /// </summary>
        [Input("replicationSourceIdentifier")]
        public Input<string>? ReplicationSourceIdentifier { get; set; }

        /// <summary>
        /// Nested attribute for [point in time restore](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_PIT.html). More details below.
        /// </summary>
        [Input("restoreToPointInTime")]
        public Input<Inputs.ClusterRestoreToPointInTimeGetArgs>? RestoreToPointInTime { get; set; }

        [Input("s3Import")]
        public Input<Inputs.ClusterS3ImportGetArgs>? S3Import { get; set; }

        /// <summary>
        /// Nested attribute with scaling properties. Only valid when `engine_mode` is set to `serverless`. More details below.
        /// </summary>
        [Input("scalingConfiguration")]
        public Input<Inputs.ClusterScalingConfigurationGetArgs>? ScalingConfiguration { get; set; }

        /// <summary>
        /// Determines whether a final DB snapshot is created before the DB cluster is deleted. If true is specified, no DB snapshot is created. If false is specified, a DB snapshot is created before the DB cluster is deleted, using the value from `final_snapshot_identifier`. Default is `false`.
        /// </summary>
        [Input("skipFinalSnapshot")]
        public Input<bool>? SkipFinalSnapshot { get; set; }

        /// <summary>
        /// Specifies whether or not to create this cluster from a snapshot. You can use either the name or ARN when specifying a DB cluster snapshot, or the ARN when specifying a DB snapshot.
        /// </summary>
        [Input("snapshotIdentifier")]
        public Input<string>? SnapshotIdentifier { get; set; }

        /// <summary>
        /// The source region for an encrypted replica DB cluster.
        /// </summary>
        [Input("sourceRegion")]
        public Input<string>? SourceRegion { get; set; }

        /// <summary>
        /// Specifies whether the DB cluster is encrypted
        /// </summary>
        [Input("storageEncrypted")]
        public Input<bool>? StorageEncrypted { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the DB cluster.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("vpcSecurityGroupIds")]
        private InputList<string>? _vpcSecurityGroupIds;

        /// <summary>
        /// List of VPC security groups to associate with the Cluster
        /// </summary>
        public InputList<string> VpcSecurityGroupIds
        {
            get => _vpcSecurityGroupIds ?? (_vpcSecurityGroupIds = new InputList<string>());
            set => _vpcSecurityGroupIds = value;
        }

        public ClusterState()
        {
        }
    }
}
