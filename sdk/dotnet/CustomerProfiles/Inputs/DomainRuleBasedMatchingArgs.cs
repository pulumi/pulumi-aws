// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CustomerProfiles.Inputs
{

    public sealed class DomainRuleBasedMatchingArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A block that configures information about the `AttributeTypesSelector` where the rule-based identity resolution uses to match profiles. Documented below.
        /// </summary>
        [Input("attributeTypesSelector")]
        public Input<Inputs.DomainRuleBasedMatchingAttributeTypesSelectorArgs>? AttributeTypesSelector { get; set; }

        /// <summary>
        /// A block that specifies how the auto-merging process should resolve conflicts between different profiles. Documented below.
        /// </summary>
        [Input("conflictResolution")]
        public Input<Inputs.DomainRuleBasedMatchingConflictResolutionArgs>? ConflictResolution { get; set; }

        /// <summary>
        /// The flag that enables the rule-based matching process of duplicate profiles.
        /// </summary>
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        /// <summary>
        /// A block that specifies the configuration for exporting Identity Resolution results. Documented below.
        /// </summary>
        [Input("exportingConfig")]
        public Input<Inputs.DomainRuleBasedMatchingExportingConfigArgs>? ExportingConfig { get; set; }

        [Input("matchingRules")]
        private InputList<Inputs.DomainRuleBasedMatchingMatchingRuleArgs>? _matchingRules;

        /// <summary>
        /// A block that configures how the rule-based matching process should match profiles. You can have up to 15 `rule` in the `natching_rules`. Documented below.
        /// </summary>
        public InputList<Inputs.DomainRuleBasedMatchingMatchingRuleArgs> MatchingRules
        {
            get => _matchingRules ?? (_matchingRules = new InputList<Inputs.DomainRuleBasedMatchingMatchingRuleArgs>());
            set => _matchingRules = value;
        }

        /// <summary>
        /// Indicates the maximum allowed rule level for matching.
        /// </summary>
        [Input("maxAllowedRuleLevelForMatching")]
        public Input<int>? MaxAllowedRuleLevelForMatching { get; set; }

        /// <summary>
        /// Indicates the maximum allowed rule level for merging.
        /// </summary>
        [Input("maxAllowedRuleLevelForMerging")]
        public Input<int>? MaxAllowedRuleLevelForMerging { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        public DomainRuleBasedMatchingArgs()
        {
        }
        public static new DomainRuleBasedMatchingArgs Empty => new DomainRuleBasedMatchingArgs();
    }
}
