// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CustomerProfiles.Outputs
{

    [OutputType]
    public sealed class DomainRuleBasedMatching
    {
        /// <summary>
        /// A block that configures information about the `AttributeTypesSelector` where the rule-based identity resolution uses to match profiles. Documented below.
        /// </summary>
        public readonly Outputs.DomainRuleBasedMatchingAttributeTypesSelector? AttributeTypesSelector;
        /// <summary>
        /// A block that specifies how the auto-merging process should resolve conflicts between different profiles. Documented below.
        /// </summary>
        public readonly Outputs.DomainRuleBasedMatchingConflictResolution? ConflictResolution;
        /// <summary>
        /// The flag that enables the rule-based matching process of duplicate profiles.
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// A block that specifies the configuration for exporting Identity Resolution results. Documented below.
        /// </summary>
        public readonly Outputs.DomainRuleBasedMatchingExportingConfig? ExportingConfig;
        /// <summary>
        /// A block that configures how the rule-based matching process should match profiles. You can have up to 15 `rule` in the `natching_rules`. Documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.DomainRuleBasedMatchingMatchingRule> MatchingRules;
        /// <summary>
        /// Indicates the maximum allowed rule level for matching.
        /// </summary>
        public readonly int? MaxAllowedRuleLevelForMatching;
        /// <summary>
        /// Indicates the maximum allowed rule level for merging.
        /// </summary>
        public readonly int? MaxAllowedRuleLevelForMerging;
        public readonly string? Status;

        [OutputConstructor]
        private DomainRuleBasedMatching(
            Outputs.DomainRuleBasedMatchingAttributeTypesSelector? attributeTypesSelector,

            Outputs.DomainRuleBasedMatchingConflictResolution? conflictResolution,

            bool enabled,

            Outputs.DomainRuleBasedMatchingExportingConfig? exportingConfig,

            ImmutableArray<Outputs.DomainRuleBasedMatchingMatchingRule> matchingRules,

            int? maxAllowedRuleLevelForMatching,

            int? maxAllowedRuleLevelForMerging,

            string? status)
        {
            AttributeTypesSelector = attributeTypesSelector;
            ConflictResolution = conflictResolution;
            Enabled = enabled;
            ExportingConfig = exportingConfig;
            MatchingRules = matchingRules;
            MaxAllowedRuleLevelForMatching = maxAllowedRuleLevelForMatching;
            MaxAllowedRuleLevelForMerging = maxAllowedRuleLevelForMerging;
            Status = status;
        }
    }
}
