// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.MskConnect
{
    [AwsResourceType("aws:mskconnect/connector:Connector")]
    public partial class Connector : global::Pulumi.CustomResource
    {
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("capacity")]
        public Output<Outputs.ConnectorCapacity> Capacity { get; private set; } = null!;

        [Output("connectorConfiguration")]
        public Output<ImmutableDictionary<string, string>> ConnectorConfiguration { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("kafkaCluster")]
        public Output<Outputs.ConnectorKafkaCluster> KafkaCluster { get; private set; } = null!;

        [Output("kafkaClusterClientAuthentication")]
        public Output<Outputs.ConnectorKafkaClusterClientAuthentication> KafkaClusterClientAuthentication { get; private set; } = null!;

        [Output("kafkaClusterEncryptionInTransit")]
        public Output<Outputs.ConnectorKafkaClusterEncryptionInTransit> KafkaClusterEncryptionInTransit { get; private set; } = null!;

        [Output("kafkaconnectVersion")]
        public Output<string> KafkaconnectVersion { get; private set; } = null!;

        [Output("logDelivery")]
        public Output<Outputs.ConnectorLogDelivery?> LogDelivery { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("plugins")]
        public Output<ImmutableArray<Outputs.ConnectorPlugin>> Plugins { get; private set; } = null!;

        [Output("serviceExecutionRoleArn")]
        public Output<string> ServiceExecutionRoleArn { get; private set; } = null!;

        [Output("version")]
        public Output<string> Version { get; private set; } = null!;

        [Output("workerConfiguration")]
        public Output<Outputs.ConnectorWorkerConfiguration?> WorkerConfiguration { get; private set; } = null!;


        /// <summary>
        /// Create a Connector resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Connector(string name, ConnectorArgs args, CustomResourceOptions? options = null)
            : base("aws:mskconnect/connector:Connector", name, args ?? new ConnectorArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Connector(string name, Input<string> id, ConnectorState? state = null, CustomResourceOptions? options = null)
            : base("aws:mskconnect/connector:Connector", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Connector resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Connector Get(string name, Input<string> id, ConnectorState? state = null, CustomResourceOptions? options = null)
        {
            return new Connector(name, id, state, options);
        }
    }

    public sealed class ConnectorArgs : global::Pulumi.ResourceArgs
    {
        [Input("capacity", required: true)]
        public Input<Inputs.ConnectorCapacityArgs> Capacity { get; set; } = null!;

        [Input("connectorConfiguration", required: true)]
        private InputMap<string>? _connectorConfiguration;
        public InputMap<string> ConnectorConfiguration
        {
            get => _connectorConfiguration ?? (_connectorConfiguration = new InputMap<string>());
            set => _connectorConfiguration = value;
        }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("kafkaCluster", required: true)]
        public Input<Inputs.ConnectorKafkaClusterArgs> KafkaCluster { get; set; } = null!;

        [Input("kafkaClusterClientAuthentication", required: true)]
        public Input<Inputs.ConnectorKafkaClusterClientAuthenticationArgs> KafkaClusterClientAuthentication { get; set; } = null!;

        [Input("kafkaClusterEncryptionInTransit", required: true)]
        public Input<Inputs.ConnectorKafkaClusterEncryptionInTransitArgs> KafkaClusterEncryptionInTransit { get; set; } = null!;

        [Input("kafkaconnectVersion", required: true)]
        public Input<string> KafkaconnectVersion { get; set; } = null!;

        [Input("logDelivery")]
        public Input<Inputs.ConnectorLogDeliveryArgs>? LogDelivery { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("plugins", required: true)]
        private InputList<Inputs.ConnectorPluginArgs>? _plugins;
        public InputList<Inputs.ConnectorPluginArgs> Plugins
        {
            get => _plugins ?? (_plugins = new InputList<Inputs.ConnectorPluginArgs>());
            set => _plugins = value;
        }

        [Input("serviceExecutionRoleArn", required: true)]
        public Input<string> ServiceExecutionRoleArn { get; set; } = null!;

        [Input("workerConfiguration")]
        public Input<Inputs.ConnectorWorkerConfigurationArgs>? WorkerConfiguration { get; set; }

        public ConnectorArgs()
        {
        }
        public static new ConnectorArgs Empty => new ConnectorArgs();
    }

    public sealed class ConnectorState : global::Pulumi.ResourceArgs
    {
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("capacity")]
        public Input<Inputs.ConnectorCapacityGetArgs>? Capacity { get; set; }

        [Input("connectorConfiguration")]
        private InputMap<string>? _connectorConfiguration;
        public InputMap<string> ConnectorConfiguration
        {
            get => _connectorConfiguration ?? (_connectorConfiguration = new InputMap<string>());
            set => _connectorConfiguration = value;
        }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("kafkaCluster")]
        public Input<Inputs.ConnectorKafkaClusterGetArgs>? KafkaCluster { get; set; }

        [Input("kafkaClusterClientAuthentication")]
        public Input<Inputs.ConnectorKafkaClusterClientAuthenticationGetArgs>? KafkaClusterClientAuthentication { get; set; }

        [Input("kafkaClusterEncryptionInTransit")]
        public Input<Inputs.ConnectorKafkaClusterEncryptionInTransitGetArgs>? KafkaClusterEncryptionInTransit { get; set; }

        [Input("kafkaconnectVersion")]
        public Input<string>? KafkaconnectVersion { get; set; }

        [Input("logDelivery")]
        public Input<Inputs.ConnectorLogDeliveryGetArgs>? LogDelivery { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("plugins")]
        private InputList<Inputs.ConnectorPluginGetArgs>? _plugins;
        public InputList<Inputs.ConnectorPluginGetArgs> Plugins
        {
            get => _plugins ?? (_plugins = new InputList<Inputs.ConnectorPluginGetArgs>());
            set => _plugins = value;
        }

        [Input("serviceExecutionRoleArn")]
        public Input<string>? ServiceExecutionRoleArn { get; set; }

        [Input("version")]
        public Input<string>? Version { get; set; }

        [Input("workerConfiguration")]
        public Input<Inputs.ConnectorWorkerConfigurationGetArgs>? WorkerConfiguration { get; set; }

        public ConnectorState()
        {
        }
        public static new ConnectorState Empty => new ConnectorState();
    }
}
