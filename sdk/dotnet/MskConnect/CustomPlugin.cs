// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.MskConnect
{
    /// <summary>
    /// Provides an Amazon MSK Connect Custom Plugin Resource.
    /// 
    /// ## Example Usage
    /// 
    /// ### Basic configuration
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.S3.BucketV2("example", new()
    ///     {
    ///         Bucket = "example",
    ///     });
    /// 
    ///     var exampleBucketObjectv2 = new Aws.S3.BucketObjectv2("example", new()
    ///     {
    ///         Bucket = example.Id,
    ///         Key = "debezium.zip",
    ///         Source = new FileAsset("debezium.zip"),
    ///     });
    /// 
    ///     var exampleCustomPlugin = new Aws.MskConnect.CustomPlugin("example", new()
    ///     {
    ///         Name = "debezium-example",
    ///         ContentType = "ZIP",
    ///         Location = new Aws.MskConnect.Inputs.CustomPluginLocationArgs
    ///         {
    ///             S3 = new Aws.MskConnect.Inputs.CustomPluginLocationS3Args
    ///             {
    ///                 BucketArn = example.Arn,
    ///                 FileKey = exampleBucketObjectv2.Key,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import MSK Connect Custom Plugin using the plugin's `arn`. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:mskconnect/customPlugin:CustomPlugin example 'arn:aws:kafkaconnect:eu-central-1:123456789012:custom-plugin/debezium-example/abcdefgh-1234-5678-9abc-defghijklmno-4'
    /// ```
    /// </summary>
    [AwsResourceType("aws:mskconnect/customPlugin:CustomPlugin")]
    public partial class CustomPlugin : global::Pulumi.CustomResource
    {
        /// <summary>
        /// the Amazon Resource Name (ARN) of the custom plugin.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// The type of the plugin file. Allowed values are `ZIP` and `JAR`.
        /// </summary>
        [Output("contentType")]
        public Output<string> ContentType { get; private set; } = null!;

        /// <summary>
        /// A summary description of the custom plugin.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// an ID of the latest successfully created revision of the custom plugin.
        /// </summary>
        [Output("latestRevision")]
        public Output<int> LatestRevision { get; private set; } = null!;

        /// <summary>
        /// Information about the location of a custom plugin. See `location` Block for details.
        /// </summary>
        [Output("location")]
        public Output<Outputs.CustomPluginLocation> Location { get; private set; } = null!;

        /// <summary>
        /// The name of the custom plugin..
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// the state of the custom plugin.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;


        /// <summary>
        /// Create a CustomPlugin resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CustomPlugin(string name, CustomPluginArgs args, CustomResourceOptions? options = null)
            : base("aws:mskconnect/customPlugin:CustomPlugin", name, args ?? new CustomPluginArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CustomPlugin(string name, Input<string> id, CustomPluginState? state = null, CustomResourceOptions? options = null)
            : base("aws:mskconnect/customPlugin:CustomPlugin", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CustomPlugin resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CustomPlugin Get(string name, Input<string> id, CustomPluginState? state = null, CustomResourceOptions? options = null)
        {
            return new CustomPlugin(name, id, state, options);
        }
    }

    public sealed class CustomPluginArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The type of the plugin file. Allowed values are `ZIP` and `JAR`.
        /// </summary>
        [Input("contentType", required: true)]
        public Input<string> ContentType { get; set; } = null!;

        /// <summary>
        /// A summary description of the custom plugin.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Information about the location of a custom plugin. See `location` Block for details.
        /// </summary>
        [Input("location", required: true)]
        public Input<Inputs.CustomPluginLocationArgs> Location { get; set; } = null!;

        /// <summary>
        /// The name of the custom plugin..
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// 
        /// The following arguments are optional:
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public CustomPluginArgs()
        {
        }
        public static new CustomPluginArgs Empty => new CustomPluginArgs();
    }

    public sealed class CustomPluginState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// the Amazon Resource Name (ARN) of the custom plugin.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// The type of the plugin file. Allowed values are `ZIP` and `JAR`.
        /// </summary>
        [Input("contentType")]
        public Input<string>? ContentType { get; set; }

        /// <summary>
        /// A summary description of the custom plugin.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// an ID of the latest successfully created revision of the custom plugin.
        /// </summary>
        [Input("latestRevision")]
        public Input<int>? LatestRevision { get; set; }

        /// <summary>
        /// Information about the location of a custom plugin. See `location` Block for details.
        /// </summary>
        [Input("location")]
        public Input<Inputs.CustomPluginLocationGetArgs>? Location { get; set; }

        /// <summary>
        /// The name of the custom plugin..
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// the state of the custom plugin.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// 
        /// The following arguments are optional:
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Obsolete(@"Please use `tags` instead.")]
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        public CustomPluginState()
        {
        }
        public static new CustomPluginState Empty => new CustomPluginState();
    }
}
