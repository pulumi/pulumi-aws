// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Kms
{
    /// <summary>
    /// Resource for managing an AWS KMS (Key Management) Custom Key Store.
    /// 
    /// ## Example Usage
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.IO;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var test = new Aws.Kms.CustomKeyStore("test", new()
    ///     {
    ///         CloudHsmClusterId = @var.Cloud_hsm_cluster_id,
    ///         CustomKeyStoreName = "kms-custom-key-store-test",
    ///         KeyStorePassword = "noplaintextpasswords1",
    ///         TrustAnchorCertificate = File.ReadAllText("anchor-certificate.crt"),
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// KMS (Key Management) Custom Key Store can be imported using the `id`, e.g.,
    /// 
    /// ```sh
    ///  $ pulumi import aws:kms/customKeyStore:CustomKeyStore example cks-5ebd4ef395a96288e
    /// ```
    /// </summary>
    [AwsResourceType("aws:kms/customKeyStore:CustomKeyStore")]
    public partial class CustomKeyStore : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Cluster ID of CloudHSM.
        /// </summary>
        [Output("cloudHsmClusterId")]
        public Output<string> CloudHsmClusterId { get; private set; } = null!;

        /// <summary>
        /// Unique name for Custom Key Store.
        /// </summary>
        [Output("customKeyStoreName")]
        public Output<string> CustomKeyStoreName { get; private set; } = null!;

        /// <summary>
        /// Password for `kmsuser` on CloudHSM.
        /// </summary>
        [Output("keyStorePassword")]
        public Output<string> KeyStorePassword { get; private set; } = null!;

        /// <summary>
        /// Customer certificate used for signing on CloudHSM.
        /// </summary>
        [Output("trustAnchorCertificate")]
        public Output<string> TrustAnchorCertificate { get; private set; } = null!;


        /// <summary>
        /// Create a CustomKeyStore resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CustomKeyStore(string name, CustomKeyStoreArgs args, CustomResourceOptions? options = null)
            : base("aws:kms/customKeyStore:CustomKeyStore", name, args ?? new CustomKeyStoreArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CustomKeyStore(string name, Input<string> id, CustomKeyStoreState? state = null, CustomResourceOptions? options = null)
            : base("aws:kms/customKeyStore:CustomKeyStore", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CustomKeyStore resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CustomKeyStore Get(string name, Input<string> id, CustomKeyStoreState? state = null, CustomResourceOptions? options = null)
        {
            return new CustomKeyStore(name, id, state, options);
        }
    }

    public sealed class CustomKeyStoreArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Cluster ID of CloudHSM.
        /// </summary>
        [Input("cloudHsmClusterId", required: true)]
        public Input<string> CloudHsmClusterId { get; set; } = null!;

        /// <summary>
        /// Unique name for Custom Key Store.
        /// </summary>
        [Input("customKeyStoreName", required: true)]
        public Input<string> CustomKeyStoreName { get; set; } = null!;

        /// <summary>
        /// Password for `kmsuser` on CloudHSM.
        /// </summary>
        [Input("keyStorePassword", required: true)]
        public Input<string> KeyStorePassword { get; set; } = null!;

        /// <summary>
        /// Customer certificate used for signing on CloudHSM.
        /// </summary>
        [Input("trustAnchorCertificate", required: true)]
        public Input<string> TrustAnchorCertificate { get; set; } = null!;

        public CustomKeyStoreArgs()
        {
        }
        public static new CustomKeyStoreArgs Empty => new CustomKeyStoreArgs();
    }

    public sealed class CustomKeyStoreState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Cluster ID of CloudHSM.
        /// </summary>
        [Input("cloudHsmClusterId")]
        public Input<string>? CloudHsmClusterId { get; set; }

        /// <summary>
        /// Unique name for Custom Key Store.
        /// </summary>
        [Input("customKeyStoreName")]
        public Input<string>? CustomKeyStoreName { get; set; }

        /// <summary>
        /// Password for `kmsuser` on CloudHSM.
        /// </summary>
        [Input("keyStorePassword")]
        public Input<string>? KeyStorePassword { get; set; }

        /// <summary>
        /// Customer certificate used for signing on CloudHSM.
        /// </summary>
        [Input("trustAnchorCertificate")]
        public Input<string>? TrustAnchorCertificate { get; set; }

        public CustomKeyStoreState()
        {
        }
        public static new CustomKeyStoreState Empty => new CustomKeyStoreState();
    }
}
