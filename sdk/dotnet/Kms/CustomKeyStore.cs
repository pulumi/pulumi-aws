// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Kms
{
    /// <summary>
    /// Resource for managing an AWS KMS (Key Management) Custom Key Store.
    /// 
    /// ## Example Usage
    /// 
    /// ### CloudHSM
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// using Std = Pulumi.Std;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var test = new Aws.Kms.CustomKeyStore("test", new()
    ///     {
    ///         CloudHsmClusterId = cloudHsmClusterId,
    ///         CustomKeyStoreName = "kms-custom-key-store-test",
    ///         KeyStorePassword = "noplaintextpasswords1",
    ///         TrustAnchorCertificate = Std.File.Invoke(new()
    ///         {
    ///             Input = "anchor-certificate.crt",
    ///         }).Apply(invoke =&gt; invoke.Result),
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ### External Key Store (VPC)
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Kms.CustomKeyStore("example", new()
    ///     {
    ///         CustomKeyStoreName = "example-vpc-xks",
    ///         CustomKeyStoreType = "EXTERNAL_KEY_STORE",
    ///         XksProxyAuthenticationCredential = new Aws.Kms.Inputs.CustomKeyStoreXksProxyAuthenticationCredentialArgs
    ///         {
    ///             AccessKeyId = ephemeralAccessKeyId,
    ///             RawSecretAccessKey = ephemeralSecretAccessKey,
    ///         },
    ///         XksProxyConnectivity = "VPC_ENDPOINT_SERVICE",
    ///         XksProxyUriEndpoint = "https://myproxy-private.xks.example.com",
    ///         XksProxyUriPath = "/kms/xks/v1",
    ///         XksProxyVpcEndpointServiceName = "com.amazonaws.vpce.us-east-1.vpce-svc-example",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ### External Key Store (Public)
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Kms.CustomKeyStore("example", new()
    ///     {
    ///         CustomKeyStoreName = "example-public-xks",
    ///         CustomKeyStoreType = "EXTERNAL_KEY_STORE",
    ///         XksProxyAuthenticationCredential = new Aws.Kms.Inputs.CustomKeyStoreXksProxyAuthenticationCredentialArgs
    ///         {
    ///             AccessKeyId = ephemeralAccessKeyId,
    ///             RawSecretAccessKey = ephemeralSecretAccessKey,
    ///         },
    ///         XksProxyConnectivity = "PUBLIC_ENDPOINT",
    ///         XksProxyUriEndpoint = "https://myproxy.xks.example.com",
    ///         XksProxyUriPath = "/kms/xks/v1",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import KMS (Key Management) Custom Key Store using the `id`. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:kms/customKeyStore:CustomKeyStore example cks-5ebd4ef395a96288e
    /// ```
    /// </summary>
    [AwsResourceType("aws:kms/customKeyStore:CustomKeyStore")]
    public partial class CustomKeyStore : global::Pulumi.CustomResource
    {
        [Output("cloudHsmClusterId")]
        public Output<string?> CloudHsmClusterId { get; private set; } = null!;

        /// <summary>
        /// Unique name for Custom Key Store.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Output("customKeyStoreName")]
        public Output<string> CustomKeyStoreName { get; private set; } = null!;

        /// <summary>
        /// Specifies the type of key store to create. Valid values are `AWS_CLOUDHSM` and `EXTERNAL_KEY_STORE`. If omitted, AWS will default the value to `AWS_CLOUDHSM`.
        /// </summary>
        [Output("customKeyStoreType")]
        public Output<string> CustomKeyStoreType { get; private set; } = null!;

        [Output("keyStorePassword")]
        public Output<string?> KeyStorePassword { get; private set; } = null!;

        [Output("trustAnchorCertificate")]
        public Output<string?> TrustAnchorCertificate { get; private set; } = null!;

        [Output("xksProxyAuthenticationCredential")]
        public Output<Outputs.CustomKeyStoreXksProxyAuthenticationCredential?> XksProxyAuthenticationCredential { get; private set; } = null!;

        [Output("xksProxyConnectivity")]
        public Output<string?> XksProxyConnectivity { get; private set; } = null!;

        [Output("xksProxyUriEndpoint")]
        public Output<string?> XksProxyUriEndpoint { get; private set; } = null!;

        [Output("xksProxyUriPath")]
        public Output<string?> XksProxyUriPath { get; private set; } = null!;

        [Output("xksProxyVpcEndpointServiceName")]
        public Output<string?> XksProxyVpcEndpointServiceName { get; private set; } = null!;


        /// <summary>
        /// Create a CustomKeyStore resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CustomKeyStore(string name, CustomKeyStoreArgs args, CustomResourceOptions? options = null)
            : base("aws:kms/customKeyStore:CustomKeyStore", name, args ?? new CustomKeyStoreArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CustomKeyStore(string name, Input<string> id, CustomKeyStoreState? state = null, CustomResourceOptions? options = null)
            : base("aws:kms/customKeyStore:CustomKeyStore", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CustomKeyStore resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CustomKeyStore Get(string name, Input<string> id, CustomKeyStoreState? state = null, CustomResourceOptions? options = null)
        {
            return new CustomKeyStore(name, id, state, options);
        }
    }

    public sealed class CustomKeyStoreArgs : global::Pulumi.ResourceArgs
    {
        [Input("cloudHsmClusterId")]
        public Input<string>? CloudHsmClusterId { get; set; }

        /// <summary>
        /// Unique name for Custom Key Store.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("customKeyStoreName", required: true)]
        public Input<string> CustomKeyStoreName { get; set; } = null!;

        /// <summary>
        /// Specifies the type of key store to create. Valid values are `AWS_CLOUDHSM` and `EXTERNAL_KEY_STORE`. If omitted, AWS will default the value to `AWS_CLOUDHSM`.
        /// </summary>
        [Input("customKeyStoreType")]
        public Input<string>? CustomKeyStoreType { get; set; }

        [Input("keyStorePassword")]
        public Input<string>? KeyStorePassword { get; set; }

        [Input("trustAnchorCertificate")]
        public Input<string>? TrustAnchorCertificate { get; set; }

        [Input("xksProxyAuthenticationCredential")]
        public Input<Inputs.CustomKeyStoreXksProxyAuthenticationCredentialArgs>? XksProxyAuthenticationCredential { get; set; }

        [Input("xksProxyConnectivity")]
        public Input<string>? XksProxyConnectivity { get; set; }

        [Input("xksProxyUriEndpoint")]
        public Input<string>? XksProxyUriEndpoint { get; set; }

        [Input("xksProxyUriPath")]
        public Input<string>? XksProxyUriPath { get; set; }

        [Input("xksProxyVpcEndpointServiceName")]
        public Input<string>? XksProxyVpcEndpointServiceName { get; set; }

        public CustomKeyStoreArgs()
        {
        }
        public static new CustomKeyStoreArgs Empty => new CustomKeyStoreArgs();
    }

    public sealed class CustomKeyStoreState : global::Pulumi.ResourceArgs
    {
        [Input("cloudHsmClusterId")]
        public Input<string>? CloudHsmClusterId { get; set; }

        /// <summary>
        /// Unique name for Custom Key Store.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("customKeyStoreName")]
        public Input<string>? CustomKeyStoreName { get; set; }

        /// <summary>
        /// Specifies the type of key store to create. Valid values are `AWS_CLOUDHSM` and `EXTERNAL_KEY_STORE`. If omitted, AWS will default the value to `AWS_CLOUDHSM`.
        /// </summary>
        [Input("customKeyStoreType")]
        public Input<string>? CustomKeyStoreType { get; set; }

        [Input("keyStorePassword")]
        public Input<string>? KeyStorePassword { get; set; }

        [Input("trustAnchorCertificate")]
        public Input<string>? TrustAnchorCertificate { get; set; }

        [Input("xksProxyAuthenticationCredential")]
        public Input<Inputs.CustomKeyStoreXksProxyAuthenticationCredentialGetArgs>? XksProxyAuthenticationCredential { get; set; }

        [Input("xksProxyConnectivity")]
        public Input<string>? XksProxyConnectivity { get; set; }

        [Input("xksProxyUriEndpoint")]
        public Input<string>? XksProxyUriEndpoint { get; set; }

        [Input("xksProxyUriPath")]
        public Input<string>? XksProxyUriPath { get; set; }

        [Input("xksProxyVpcEndpointServiceName")]
        public Input<string>? XksProxyVpcEndpointServiceName { get; set; }

        public CustomKeyStoreState()
        {
        }
        public static new CustomKeyStoreState Empty => new CustomKeyStoreState();
    }
}
