// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.ImageBuilder
{
    [AwsResourceType("aws:imagebuilder/infrastructureConfiguration:InfrastructureConfiguration")]
    public partial class InfrastructureConfiguration : global::Pulumi.CustomResource
    {
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("dateCreated")]
        public Output<string> DateCreated { get; private set; } = null!;

        [Output("dateUpdated")]
        public Output<string> DateUpdated { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("instanceMetadataOptions")]
        public Output<Outputs.InfrastructureConfigurationInstanceMetadataOptions?> InstanceMetadataOptions { get; private set; } = null!;

        [Output("instanceProfileName")]
        public Output<string> InstanceProfileName { get; private set; } = null!;

        [Output("instanceTypes")]
        public Output<ImmutableArray<string>> InstanceTypes { get; private set; } = null!;

        [Output("keyPair")]
        public Output<string?> KeyPair { get; private set; } = null!;

        [Output("logging")]
        public Output<Outputs.InfrastructureConfigurationLogging?> Logging { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("resourceTags")]
        public Output<ImmutableDictionary<string, string>?> ResourceTags { get; private set; } = null!;

        [Output("securityGroupIds")]
        public Output<ImmutableArray<string>> SecurityGroupIds { get; private set; } = null!;

        [Output("snsTopicArn")]
        public Output<string?> SnsTopicArn { get; private set; } = null!;

        [Output("subnetId")]
        public Output<string?> SubnetId { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("terminateInstanceOnFailure")]
        public Output<bool?> TerminateInstanceOnFailure { get; private set; } = null!;


        /// <summary>
        /// Create a InfrastructureConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public InfrastructureConfiguration(string name, InfrastructureConfigurationArgs args, CustomResourceOptions? options = null)
            : base("aws:imagebuilder/infrastructureConfiguration:InfrastructureConfiguration", name, args ?? new InfrastructureConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private InfrastructureConfiguration(string name, Input<string> id, InfrastructureConfigurationState? state = null, CustomResourceOptions? options = null)
            : base("aws:imagebuilder/infrastructureConfiguration:InfrastructureConfiguration", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing InfrastructureConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static InfrastructureConfiguration Get(string name, Input<string> id, InfrastructureConfigurationState? state = null, CustomResourceOptions? options = null)
        {
            return new InfrastructureConfiguration(name, id, state, options);
        }
    }

    public sealed class InfrastructureConfigurationArgs : global::Pulumi.ResourceArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("instanceMetadataOptions")]
        public Input<Inputs.InfrastructureConfigurationInstanceMetadataOptionsArgs>? InstanceMetadataOptions { get; set; }

        [Input("instanceProfileName", required: true)]
        public Input<string> InstanceProfileName { get; set; } = null!;

        [Input("instanceTypes")]
        private InputList<string>? _instanceTypes;
        public InputList<string> InstanceTypes
        {
            get => _instanceTypes ?? (_instanceTypes = new InputList<string>());
            set => _instanceTypes = value;
        }

        [Input("keyPair")]
        public Input<string>? KeyPair { get; set; }

        [Input("logging")]
        public Input<Inputs.InfrastructureConfigurationLoggingArgs>? Logging { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("resourceTags")]
        private InputMap<string>? _resourceTags;
        public InputMap<string> ResourceTags
        {
            get => _resourceTags ?? (_resourceTags = new InputMap<string>());
            set => _resourceTags = value;
        }

        [Input("securityGroupIds")]
        private InputList<string>? _securityGroupIds;
        public InputList<string> SecurityGroupIds
        {
            get => _securityGroupIds ?? (_securityGroupIds = new InputList<string>());
            set => _securityGroupIds = value;
        }

        [Input("snsTopicArn")]
        public Input<string>? SnsTopicArn { get; set; }

        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("terminateInstanceOnFailure")]
        public Input<bool>? TerminateInstanceOnFailure { get; set; }

        public InfrastructureConfigurationArgs()
        {
        }
        public static new InfrastructureConfigurationArgs Empty => new InfrastructureConfigurationArgs();
    }

    public sealed class InfrastructureConfigurationState : global::Pulumi.ResourceArgs
    {
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("dateCreated")]
        public Input<string>? DateCreated { get; set; }

        [Input("dateUpdated")]
        public Input<string>? DateUpdated { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("instanceMetadataOptions")]
        public Input<Inputs.InfrastructureConfigurationInstanceMetadataOptionsGetArgs>? InstanceMetadataOptions { get; set; }

        [Input("instanceProfileName")]
        public Input<string>? InstanceProfileName { get; set; }

        [Input("instanceTypes")]
        private InputList<string>? _instanceTypes;
        public InputList<string> InstanceTypes
        {
            get => _instanceTypes ?? (_instanceTypes = new InputList<string>());
            set => _instanceTypes = value;
        }

        [Input("keyPair")]
        public Input<string>? KeyPair { get; set; }

        [Input("logging")]
        public Input<Inputs.InfrastructureConfigurationLoggingGetArgs>? Logging { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("resourceTags")]
        private InputMap<string>? _resourceTags;
        public InputMap<string> ResourceTags
        {
            get => _resourceTags ?? (_resourceTags = new InputMap<string>());
            set => _resourceTags = value;
        }

        [Input("securityGroupIds")]
        private InputList<string>? _securityGroupIds;
        public InputList<string> SecurityGroupIds
        {
            get => _securityGroupIds ?? (_securityGroupIds = new InputList<string>());
            set => _securityGroupIds = value;
        }

        [Input("snsTopicArn")]
        public Input<string>? SnsTopicArn { get; set; }

        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("terminateInstanceOnFailure")]
        public Input<bool>? TerminateInstanceOnFailure { get; set; }

        public InfrastructureConfigurationState()
        {
        }
        public static new InfrastructureConfigurationState Empty => new InfrastructureConfigurationState();
    }
}
