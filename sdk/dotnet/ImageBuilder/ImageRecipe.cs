// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.ImageBuilder
{
    /// <summary>
    /// Manages an Image Builder Image Recipe.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var example = new Aws.ImageBuilder.ImageRecipe("example", new Aws.ImageBuilder.ImageRecipeArgs
    ///         {
    ///             BlockDeviceMappings = 
    ///             {
    ///                 new Aws.ImageBuilder.Inputs.ImageRecipeBlockDeviceMappingArgs
    ///                 {
    ///                     DeviceName = "/dev/xvdb",
    ///                     Ebs = new Aws.ImageBuilder.Inputs.ImageRecipeBlockDeviceMappingEbsArgs
    ///                     {
    ///                         DeleteOnTermination = "true",
    ///                         VolumeSize = 100,
    ///                         VolumeType = "gp2",
    ///                     },
    ///                 },
    ///             },
    ///             Components = 
    ///             {
    ///                 new Aws.ImageBuilder.Inputs.ImageRecipeComponentArgs
    ///                 {
    ///                     ComponentArn = aws_imagebuilder_component.Example.Arn,
    ///                 },
    ///             },
    ///             ParentImage = $"arn:{data.Aws_partition.Current.Partition}:imagebuilder:{data.Aws_region.Current.Name}:aws:image/amazon-linux-2-x86/x.x.x",
    ///             Version = "1.0.0",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// `aws_imagebuilder_image_recipe` resources can be imported by using the Amazon Resource Name (ARN), e.g.
    /// 
    /// ```sh
    ///  $ pulumi import aws:imagebuilder/imageRecipe:ImageRecipe example arn:aws:imagebuilder:us-east-1:123456789012:image-recipe/example/1.0.0
    /// ```
    /// </summary>
    public partial class ImageRecipe : Pulumi.CustomResource
    {
        /// <summary>
        /// (Required) Amazon Resource Name (ARN) of the image recipe.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// Configuration block(s) with block device mappings for the the image recipe. Detailed below.
        /// </summary>
        [Output("blockDeviceMappings")]
        public Output<ImmutableArray<Outputs.ImageRecipeBlockDeviceMapping>> BlockDeviceMappings { get; private set; } = null!;

        /// <summary>
        /// Ordered configuration block(s) with components for the image recipe. Detailed below.
        /// </summary>
        [Output("components")]
        public Output<ImmutableArray<Outputs.ImageRecipeComponent>> Components { get; private set; } = null!;

        /// <summary>
        /// Date the image recipe was created.
        /// </summary>
        [Output("dateCreated")]
        public Output<string> DateCreated { get; private set; } = null!;

        /// <summary>
        /// Description of the image recipe.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Name of the image recipe.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Owner of the image recipe.
        /// </summary>
        [Output("owner")]
        public Output<string> Owner { get; private set; } = null!;

        /// <summary>
        /// Platform of the image recipe.
        /// </summary>
        [Output("parentImage")]
        public Output<string> ParentImage { get; private set; } = null!;

        /// <summary>
        /// Platform of the image recipe.
        /// </summary>
        [Output("platform")]
        public Output<string> Platform { get; private set; } = null!;

        /// <summary>
        /// Key-value map of resource tags for the image recipe.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Version of the image recipe.
        /// </summary>
        [Output("version")]
        public Output<string> Version { get; private set; } = null!;


        /// <summary>
        /// Create a ImageRecipe resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ImageRecipe(string name, ImageRecipeArgs args, CustomResourceOptions? options = null)
            : base("aws:imagebuilder/imageRecipe:ImageRecipe", name, args ?? new ImageRecipeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ImageRecipe(string name, Input<string> id, ImageRecipeState? state = null, CustomResourceOptions? options = null)
            : base("aws:imagebuilder/imageRecipe:ImageRecipe", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ImageRecipe resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ImageRecipe Get(string name, Input<string> id, ImageRecipeState? state = null, CustomResourceOptions? options = null)
        {
            return new ImageRecipe(name, id, state, options);
        }
    }

    public sealed class ImageRecipeArgs : Pulumi.ResourceArgs
    {
        [Input("blockDeviceMappings")]
        private InputList<Inputs.ImageRecipeBlockDeviceMappingArgs>? _blockDeviceMappings;

        /// <summary>
        /// Configuration block(s) with block device mappings for the the image recipe. Detailed below.
        /// </summary>
        public InputList<Inputs.ImageRecipeBlockDeviceMappingArgs> BlockDeviceMappings
        {
            get => _blockDeviceMappings ?? (_blockDeviceMappings = new InputList<Inputs.ImageRecipeBlockDeviceMappingArgs>());
            set => _blockDeviceMappings = value;
        }

        [Input("components", required: true)]
        private InputList<Inputs.ImageRecipeComponentArgs>? _components;

        /// <summary>
        /// Ordered configuration block(s) with components for the image recipe. Detailed below.
        /// </summary>
        public InputList<Inputs.ImageRecipeComponentArgs> Components
        {
            get => _components ?? (_components = new InputList<Inputs.ImageRecipeComponentArgs>());
            set => _components = value;
        }

        /// <summary>
        /// Description of the image recipe.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Name of the image recipe.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Platform of the image recipe.
        /// </summary>
        [Input("parentImage", required: true)]
        public Input<string> ParentImage { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value map of resource tags for the image recipe.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Version of the image recipe.
        /// </summary>
        [Input("version", required: true)]
        public Input<string> Version { get; set; } = null!;

        public ImageRecipeArgs()
        {
        }
    }

    public sealed class ImageRecipeState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Required) Amazon Resource Name (ARN) of the image recipe.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("blockDeviceMappings")]
        private InputList<Inputs.ImageRecipeBlockDeviceMappingGetArgs>? _blockDeviceMappings;

        /// <summary>
        /// Configuration block(s) with block device mappings for the the image recipe. Detailed below.
        /// </summary>
        public InputList<Inputs.ImageRecipeBlockDeviceMappingGetArgs> BlockDeviceMappings
        {
            get => _blockDeviceMappings ?? (_blockDeviceMappings = new InputList<Inputs.ImageRecipeBlockDeviceMappingGetArgs>());
            set => _blockDeviceMappings = value;
        }

        [Input("components")]
        private InputList<Inputs.ImageRecipeComponentGetArgs>? _components;

        /// <summary>
        /// Ordered configuration block(s) with components for the image recipe. Detailed below.
        /// </summary>
        public InputList<Inputs.ImageRecipeComponentGetArgs> Components
        {
            get => _components ?? (_components = new InputList<Inputs.ImageRecipeComponentGetArgs>());
            set => _components = value;
        }

        /// <summary>
        /// Date the image recipe was created.
        /// </summary>
        [Input("dateCreated")]
        public Input<string>? DateCreated { get; set; }

        /// <summary>
        /// Description of the image recipe.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Name of the image recipe.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Owner of the image recipe.
        /// </summary>
        [Input("owner")]
        public Input<string>? Owner { get; set; }

        /// <summary>
        /// Platform of the image recipe.
        /// </summary>
        [Input("parentImage")]
        public Input<string>? ParentImage { get; set; }

        /// <summary>
        /// Platform of the image recipe.
        /// </summary>
        [Input("platform")]
        public Input<string>? Platform { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value map of resource tags for the image recipe.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Version of the image recipe.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public ImageRecipeState()
        {
        }
    }
}
