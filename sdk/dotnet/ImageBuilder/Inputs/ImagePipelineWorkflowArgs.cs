// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.ImageBuilder.Inputs
{

    public sealed class ImagePipelineWorkflowArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The action to take if the workflow fails. Must be one of `CONTINUE` or `ABORT`.
        /// </summary>
        [Input("onFailure")]
        public Input<string>? OnFailure { get; set; }

        /// <summary>
        /// The parallel group in which to run a test Workflow.
        /// </summary>
        [Input("parallelGroup")]
        public Input<string>? ParallelGroup { get; set; }

        [Input("parameters")]
        private InputList<Inputs.ImagePipelineWorkflowParameterArgs>? _parameters;

        /// <summary>
        /// Configuration block for the workflow parameters. Detailed below.
        /// </summary>
        public InputList<Inputs.ImagePipelineWorkflowParameterArgs> Parameters
        {
            get => _parameters ?? (_parameters = new InputList<Inputs.ImagePipelineWorkflowParameterArgs>());
            set => _parameters = value;
        }

        /// <summary>
        /// Amazon Resource Name (ARN) of the Image Builder Workflow.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("workflowArn", required: true)]
        public Input<string> WorkflowArn { get; set; } = null!;

        public ImagePipelineWorkflowArgs()
        {
        }
        public static new ImagePipelineWorkflowArgs Empty => new ImagePipelineWorkflowArgs();
    }
}
