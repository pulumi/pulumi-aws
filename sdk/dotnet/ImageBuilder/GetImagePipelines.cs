// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.ImageBuilder
{
    public static class GetImagePipelines
    {
        /// <summary>
        /// Use this data source to get the ARNs and names of Image Builder Image Pipelines matching the specified criteria.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.ImageBuilder.GetImagePipelines.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Aws.ImageBuilder.Inputs.GetImagePipelinesFilterInputArgs
        ///             {
        ///                 Name = "name",
        ///                 Values = new[]
        ///                 {
        ///                     "example",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetImagePipelinesResult> InvokeAsync(GetImagePipelinesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetImagePipelinesResult>("aws:imagebuilder/getImagePipelines:getImagePipelines", args ?? new GetImagePipelinesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get the ARNs and names of Image Builder Image Pipelines matching the specified criteria.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.ImageBuilder.GetImagePipelines.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Aws.ImageBuilder.Inputs.GetImagePipelinesFilterInputArgs
        ///             {
        ///                 Name = "name",
        ///                 Values = new[]
        ///                 {
        ///                     "example",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetImagePipelinesResult> Invoke(GetImagePipelinesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetImagePipelinesResult>("aws:imagebuilder/getImagePipelines:getImagePipelines", args ?? new GetImagePipelinesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetImagePipelinesArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetImagePipelinesFilterArgs>? _filters;

        /// <summary>
        /// Configuration block(s) for filtering. Detailed below.
        /// </summary>
        public List<Inputs.GetImagePipelinesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetImagePipelinesFilterArgs>());
            set => _filters = value;
        }

        public GetImagePipelinesArgs()
        {
        }
        public static new GetImagePipelinesArgs Empty => new GetImagePipelinesArgs();
    }

    public sealed class GetImagePipelinesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetImagePipelinesFilterInputArgs>? _filters;

        /// <summary>
        /// Configuration block(s) for filtering. Detailed below.
        /// </summary>
        public InputList<Inputs.GetImagePipelinesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetImagePipelinesFilterInputArgs>());
            set => _filters = value;
        }

        public GetImagePipelinesInvokeArgs()
        {
        }
        public static new GetImagePipelinesInvokeArgs Empty => new GetImagePipelinesInvokeArgs();
    }


    [OutputType]
    public sealed class GetImagePipelinesResult
    {
        /// <summary>
        /// Set of ARNs of the matched Image Builder Image Pipelines.
        /// </summary>
        public readonly ImmutableArray<string> Arns;
        public readonly ImmutableArray<Outputs.GetImagePipelinesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Set of names of the matched Image Builder Image Pipelines.
        /// </summary>
        public readonly ImmutableArray<string> Names;

        [OutputConstructor]
        private GetImagePipelinesResult(
            ImmutableArray<string> arns,

            ImmutableArray<Outputs.GetImagePipelinesFilterResult> filters,

            string id,

            ImmutableArray<string> names)
        {
            Arns = arns;
            Filters = filters;
            Id = id;
            Names = names;
        }
    }
}
