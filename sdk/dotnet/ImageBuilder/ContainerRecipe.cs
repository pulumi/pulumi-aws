// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.ImageBuilder
{
    [AwsResourceType("aws:imagebuilder/containerRecipe:ContainerRecipe")]
    public partial class ContainerRecipe : global::Pulumi.CustomResource
    {
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("components")]
        public Output<ImmutableArray<Outputs.ContainerRecipeComponent>> Components { get; private set; } = null!;

        [Output("containerType")]
        public Output<string> ContainerType { get; private set; } = null!;

        [Output("dateCreated")]
        public Output<string> DateCreated { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("dockerfileTemplateData")]
        public Output<string> DockerfileTemplateData { get; private set; } = null!;

        [Output("dockerfileTemplateUri")]
        public Output<string?> DockerfileTemplateUri { get; private set; } = null!;

        [Output("encrypted")]
        public Output<bool> Encrypted { get; private set; } = null!;

        [Output("instanceConfiguration")]
        public Output<Outputs.ContainerRecipeInstanceConfiguration?> InstanceConfiguration { get; private set; } = null!;

        [Output("kmsKeyId")]
        public Output<string?> KmsKeyId { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("owner")]
        public Output<string> Owner { get; private set; } = null!;

        [Output("parentImage")]
        public Output<string> ParentImage { get; private set; } = null!;

        [Output("platform")]
        public Output<string> Platform { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("targetRepository")]
        public Output<Outputs.ContainerRecipeTargetRepository> TargetRepository { get; private set; } = null!;

        [Output("version")]
        public Output<string> Version { get; private set; } = null!;

        [Output("workingDirectory")]
        public Output<string?> WorkingDirectory { get; private set; } = null!;


        /// <summary>
        /// Create a ContainerRecipe resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ContainerRecipe(string name, ContainerRecipeArgs args, CustomResourceOptions? options = null)
            : base("aws:imagebuilder/containerRecipe:ContainerRecipe", name, args ?? new ContainerRecipeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ContainerRecipe(string name, Input<string> id, ContainerRecipeState? state = null, CustomResourceOptions? options = null)
            : base("aws:imagebuilder/containerRecipe:ContainerRecipe", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ContainerRecipe resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ContainerRecipe Get(string name, Input<string> id, ContainerRecipeState? state = null, CustomResourceOptions? options = null)
        {
            return new ContainerRecipe(name, id, state, options);
        }
    }

    public sealed class ContainerRecipeArgs : global::Pulumi.ResourceArgs
    {
        [Input("components", required: true)]
        private InputList<Inputs.ContainerRecipeComponentArgs>? _components;
        public InputList<Inputs.ContainerRecipeComponentArgs> Components
        {
            get => _components ?? (_components = new InputList<Inputs.ContainerRecipeComponentArgs>());
            set => _components = value;
        }

        [Input("containerType", required: true)]
        public Input<string> ContainerType { get; set; } = null!;

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("dockerfileTemplateData")]
        public Input<string>? DockerfileTemplateData { get; set; }

        [Input("dockerfileTemplateUri")]
        public Input<string>? DockerfileTemplateUri { get; set; }

        [Input("instanceConfiguration")]
        public Input<Inputs.ContainerRecipeInstanceConfigurationArgs>? InstanceConfiguration { get; set; }

        [Input("kmsKeyId")]
        public Input<string>? KmsKeyId { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("parentImage", required: true)]
        public Input<string> ParentImage { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("targetRepository", required: true)]
        public Input<Inputs.ContainerRecipeTargetRepositoryArgs> TargetRepository { get; set; } = null!;

        [Input("version", required: true)]
        public Input<string> Version { get; set; } = null!;

        [Input("workingDirectory")]
        public Input<string>? WorkingDirectory { get; set; }

        public ContainerRecipeArgs()
        {
        }
        public static new ContainerRecipeArgs Empty => new ContainerRecipeArgs();
    }

    public sealed class ContainerRecipeState : global::Pulumi.ResourceArgs
    {
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("components")]
        private InputList<Inputs.ContainerRecipeComponentGetArgs>? _components;
        public InputList<Inputs.ContainerRecipeComponentGetArgs> Components
        {
            get => _components ?? (_components = new InputList<Inputs.ContainerRecipeComponentGetArgs>());
            set => _components = value;
        }

        [Input("containerType")]
        public Input<string>? ContainerType { get; set; }

        [Input("dateCreated")]
        public Input<string>? DateCreated { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("dockerfileTemplateData")]
        public Input<string>? DockerfileTemplateData { get; set; }

        [Input("dockerfileTemplateUri")]
        public Input<string>? DockerfileTemplateUri { get; set; }

        [Input("encrypted")]
        public Input<bool>? Encrypted { get; set; }

        [Input("instanceConfiguration")]
        public Input<Inputs.ContainerRecipeInstanceConfigurationGetArgs>? InstanceConfiguration { get; set; }

        [Input("kmsKeyId")]
        public Input<string>? KmsKeyId { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("owner")]
        public Input<string>? Owner { get; set; }

        [Input("parentImage")]
        public Input<string>? ParentImage { get; set; }

        [Input("platform")]
        public Input<string>? Platform { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("targetRepository")]
        public Input<Inputs.ContainerRecipeTargetRepositoryGetArgs>? TargetRepository { get; set; }

        [Input("version")]
        public Input<string>? Version { get; set; }

        [Input("workingDirectory")]
        public Input<string>? WorkingDirectory { get; set; }

        public ContainerRecipeState()
        {
        }
        public static new ContainerRecipeState Empty => new ContainerRecipeState();
    }
}
