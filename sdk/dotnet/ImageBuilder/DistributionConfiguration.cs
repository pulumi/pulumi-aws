// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.ImageBuilder
{
    /// <summary>
    /// Manages an Image Builder Distribution Configuration.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var example = new Aws.ImageBuilder.DistributionConfiguration("example", new Aws.ImageBuilder.DistributionConfigurationArgs
    ///         {
    ///             Distributions = 
    ///             {
    ///                 new Aws.ImageBuilder.Inputs.DistributionConfigurationDistributionArgs
    ///                 {
    ///                     AmiDistributionConfiguration = new Aws.ImageBuilder.Inputs.DistributionConfigurationDistributionAmiDistributionConfigurationArgs
    ///                     {
    ///                         AmiTags = 
    ///                         {
    ///                             { "CostCenter", "IT" },
    ///                         },
    ///                         LaunchPermission = new Aws.ImageBuilder.Inputs.DistributionConfigurationDistributionAmiDistributionConfigurationLaunchPermissionArgs
    ///                         {
    ///                             UserIds = 
    ///                             {
    ///                                 "123456789012",
    ///                             },
    ///                         },
    ///                         Name = "example-{{ imagebuilder:buildDate }}",
    ///                     },
    ///                     Region = "us-east-1",
    ///                 },
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// `aws_imagebuilder_distribution_configurations` resources can be imported by using the Amazon Resource Name (ARN), e.g.
    /// 
    /// ```sh
    ///  $ pulumi import aws:imagebuilder/distributionConfiguration:DistributionConfiguration example arn:aws:imagebuilder:us-east-1:123456789012:distribution-configuration/example
    /// ```
    /// </summary>
    public partial class DistributionConfiguration : Pulumi.CustomResource
    {
        /// <summary>
        /// (Required) Amazon Resource Name (ARN) of the distribution configuration.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// Date the distribution configuration was created.
        /// </summary>
        [Output("dateCreated")]
        public Output<string> DateCreated { get; private set; } = null!;

        /// <summary>
        /// Date the distribution configuration was updated.
        /// </summary>
        [Output("dateUpdated")]
        public Output<string> DateUpdated { get; private set; } = null!;

        /// <summary>
        /// Description to apply to the distributed AMI.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// One or more configuration blocks with distribution settings. Detailed below.
        /// </summary>
        [Output("distributions")]
        public Output<ImmutableArray<Outputs.DistributionConfigurationDistribution>> Distributions { get; private set; } = null!;

        /// <summary>
        /// Name to apply to the distributed AMI.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Key-value map of resource tags for the distribution configuration.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a DistributionConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DistributionConfiguration(string name, DistributionConfigurationArgs args, CustomResourceOptions? options = null)
            : base("aws:imagebuilder/distributionConfiguration:DistributionConfiguration", name, args ?? new DistributionConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DistributionConfiguration(string name, Input<string> id, DistributionConfigurationState? state = null, CustomResourceOptions? options = null)
            : base("aws:imagebuilder/distributionConfiguration:DistributionConfiguration", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DistributionConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DistributionConfiguration Get(string name, Input<string> id, DistributionConfigurationState? state = null, CustomResourceOptions? options = null)
        {
            return new DistributionConfiguration(name, id, state, options);
        }
    }

    public sealed class DistributionConfigurationArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description to apply to the distributed AMI.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("distributions", required: true)]
        private InputList<Inputs.DistributionConfigurationDistributionArgs>? _distributions;

        /// <summary>
        /// One or more configuration blocks with distribution settings. Detailed below.
        /// </summary>
        public InputList<Inputs.DistributionConfigurationDistributionArgs> Distributions
        {
            get => _distributions ?? (_distributions = new InputList<Inputs.DistributionConfigurationDistributionArgs>());
            set => _distributions = value;
        }

        /// <summary>
        /// Name to apply to the distributed AMI.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value map of resource tags for the distribution configuration.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public DistributionConfigurationArgs()
        {
        }
    }

    public sealed class DistributionConfigurationState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Required) Amazon Resource Name (ARN) of the distribution configuration.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// Date the distribution configuration was created.
        /// </summary>
        [Input("dateCreated")]
        public Input<string>? DateCreated { get; set; }

        /// <summary>
        /// Date the distribution configuration was updated.
        /// </summary>
        [Input("dateUpdated")]
        public Input<string>? DateUpdated { get; set; }

        /// <summary>
        /// Description to apply to the distributed AMI.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("distributions")]
        private InputList<Inputs.DistributionConfigurationDistributionGetArgs>? _distributions;

        /// <summary>
        /// One or more configuration blocks with distribution settings. Detailed below.
        /// </summary>
        public InputList<Inputs.DistributionConfigurationDistributionGetArgs> Distributions
        {
            get => _distributions ?? (_distributions = new InputList<Inputs.DistributionConfigurationDistributionGetArgs>());
            set => _distributions = value;
        }

        /// <summary>
        /// Name to apply to the distributed AMI.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value map of resource tags for the distribution configuration.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public DistributionConfigurationState()
        {
        }
    }
}
