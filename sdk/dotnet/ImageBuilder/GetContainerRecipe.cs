// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.ImageBuilder
{
    public static class GetContainerRecipe
    {
        public static Task<GetContainerRecipeResult> InvokeAsync(GetContainerRecipeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetContainerRecipeResult>("aws:imagebuilder/getContainerRecipe:getContainerRecipe", args ?? new GetContainerRecipeArgs(), options.WithDefaults());

        public static Output<GetContainerRecipeResult> Invoke(GetContainerRecipeInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetContainerRecipeResult>("aws:imagebuilder/getContainerRecipe:getContainerRecipe", args ?? new GetContainerRecipeInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetContainerRecipeArgs : global::Pulumi.InvokeArgs
    {
        [Input("arn", required: true)]
        public string Arn { get; set; } = null!;

        [Input("tags")]
        private Dictionary<string, string>? _tags;
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetContainerRecipeArgs()
        {
        }
        public static new GetContainerRecipeArgs Empty => new GetContainerRecipeArgs();
    }

    public sealed class GetContainerRecipeInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("arn", required: true)]
        public Input<string> Arn { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetContainerRecipeInvokeArgs()
        {
        }
        public static new GetContainerRecipeInvokeArgs Empty => new GetContainerRecipeInvokeArgs();
    }


    [OutputType]
    public sealed class GetContainerRecipeResult
    {
        public readonly string Arn;
        public readonly ImmutableArray<Outputs.GetContainerRecipeComponentResult> Components;
        public readonly string ContainerType;
        public readonly string DateCreated;
        public readonly string Description;
        public readonly string DockerfileTemplateData;
        public readonly bool Encrypted;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetContainerRecipeInstanceConfigurationResult> InstanceConfigurations;
        public readonly string KmsKeyId;
        public readonly string Name;
        public readonly string Owner;
        public readonly string ParentImage;
        public readonly string Platform;
        public readonly ImmutableDictionary<string, string>? Tags;
        public readonly ImmutableArray<Outputs.GetContainerRecipeTargetRepositoryResult> TargetRepositories;
        public readonly string Version;
        public readonly string WorkingDirectory;

        [OutputConstructor]
        private GetContainerRecipeResult(
            string arn,

            ImmutableArray<Outputs.GetContainerRecipeComponentResult> components,

            string containerType,

            string dateCreated,

            string description,

            string dockerfileTemplateData,

            bool encrypted,

            string id,

            ImmutableArray<Outputs.GetContainerRecipeInstanceConfigurationResult> instanceConfigurations,

            string kmsKeyId,

            string name,

            string owner,

            string parentImage,

            string platform,

            ImmutableDictionary<string, string>? tags,

            ImmutableArray<Outputs.GetContainerRecipeTargetRepositoryResult> targetRepositories,

            string version,

            string workingDirectory)
        {
            Arn = arn;
            Components = components;
            ContainerType = containerType;
            DateCreated = dateCreated;
            Description = description;
            DockerfileTemplateData = dockerfileTemplateData;
            Encrypted = encrypted;
            Id = id;
            InstanceConfigurations = instanceConfigurations;
            KmsKeyId = kmsKeyId;
            Name = name;
            Owner = owner;
            ParentImage = parentImage;
            Platform = platform;
            Tags = tags;
            TargetRepositories = targetRepositories;
            Version = version;
            WorkingDirectory = workingDirectory;
        }
    }
}
