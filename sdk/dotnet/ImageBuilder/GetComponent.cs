// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.ImageBuilder
{
    public static class GetComponent
    {
        /// <summary>
        /// Provides details about an Image Builder Component.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(Aws.ImageBuilder.GetComponent.InvokeAsync(new Aws.ImageBuilder.GetComponentArgs
        ///         {
        ///             Arn = "arn:aws:imagebuilder:us-west-2:aws:component/amazon-cloudwatch-agent-linux/1.0.0",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetComponentResult> InvokeAsync(GetComponentArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetComponentResult>("aws:imagebuilder/getComponent:getComponent", args ?? new GetComponentArgs(), options.WithVersion());
    }


    public sealed class GetComponentArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the component.
        /// </summary>
        [Input("arn", required: true)]
        public string Arn { get; set; } = null!;

        [Input("tags")]
        private Dictionary<string, string>? _tags;

        /// <summary>
        /// Key-value map of resource tags for the component.
        /// </summary>
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetComponentArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetComponentResult
    {
        public readonly string Arn;
        /// <summary>
        /// Change description of the component.
        /// </summary>
        public readonly string ChangeDescription;
        /// <summary>
        /// Data of the component.
        /// </summary>
        public readonly string Data;
        /// <summary>
        /// Date the component was created.
        /// </summary>
        public readonly string DateCreated;
        /// <summary>
        /// Description of the component.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Encryption status of the component.
        /// </summary>
        public readonly bool Encrypted;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Amazon Resource Name (ARN) of the Key Management Service (KMS) Key used to encrypt the component.
        /// </summary>
        public readonly string KmsKeyId;
        /// <summary>
        /// Name of the component.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Owner of the component.
        /// </summary>
        public readonly string Owner;
        /// <summary>
        /// Platform of the component.
        /// </summary>
        public readonly string Platform;
        /// <summary>
        /// Operating Systems (OSes) supported by the component.
        /// </summary>
        public readonly ImmutableArray<string> SupportedOsVersions;
        /// <summary>
        /// Key-value map of resource tags for the component.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// Type of the component.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Version of the component.
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private GetComponentResult(
            string arn,

            string changeDescription,

            string data,

            string dateCreated,

            string description,

            bool encrypted,

            string id,

            string kmsKeyId,

            string name,

            string owner,

            string platform,

            ImmutableArray<string> supportedOsVersions,

            ImmutableDictionary<string, string> tags,

            string type,

            string version)
        {
            Arn = arn;
            ChangeDescription = changeDescription;
            Data = data;
            DateCreated = dateCreated;
            Description = description;
            Encrypted = encrypted;
            Id = id;
            KmsKeyId = kmsKeyId;
            Name = name;
            Owner = owner;
            Platform = platform;
            SupportedOsVersions = supportedOsVersions;
            Tags = tags;
            Type = type;
            Version = version;
        }
    }
}
