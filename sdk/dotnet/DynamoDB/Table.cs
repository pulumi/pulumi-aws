// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.DynamoDB
{
    [AwsResourceType("aws:dynamodb/table:Table")]
    public partial class Table : global::Pulumi.CustomResource
    {
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("attributes")]
        public Output<ImmutableArray<Outputs.TableAttribute>> Attributes { get; private set; } = null!;

        [Output("billingMode")]
        public Output<string?> BillingMode { get; private set; } = null!;

        [Output("globalSecondaryIndexes")]
        public Output<ImmutableArray<Outputs.TableGlobalSecondaryIndex>> GlobalSecondaryIndexes { get; private set; } = null!;

        [Output("hashKey")]
        public Output<string> HashKey { get; private set; } = null!;

        [Output("localSecondaryIndexes")]
        public Output<ImmutableArray<Outputs.TableLocalSecondaryIndex>> LocalSecondaryIndexes { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("pointInTimeRecovery")]
        public Output<Outputs.TablePointInTimeRecovery> PointInTimeRecovery { get; private set; } = null!;

        [Output("rangeKey")]
        public Output<string?> RangeKey { get; private set; } = null!;

        [Output("readCapacity")]
        public Output<int> ReadCapacity { get; private set; } = null!;

        [Output("replicas")]
        public Output<ImmutableArray<Outputs.TableReplica>> Replicas { get; private set; } = null!;

        [Output("restoreDateTime")]
        public Output<string?> RestoreDateTime { get; private set; } = null!;

        [Output("restoreSourceName")]
        public Output<string?> RestoreSourceName { get; private set; } = null!;

        [Output("restoreToLatestTime")]
        public Output<bool?> RestoreToLatestTime { get; private set; } = null!;

        [Output("serverSideEncryption")]
        public Output<Outputs.TableServerSideEncryption> ServerSideEncryption { get; private set; } = null!;

        [Output("streamArn")]
        public Output<string> StreamArn { get; private set; } = null!;

        [Output("streamEnabled")]
        public Output<bool?> StreamEnabled { get; private set; } = null!;

        [Output("streamLabel")]
        public Output<string> StreamLabel { get; private set; } = null!;

        [Output("streamViewType")]
        public Output<string> StreamViewType { get; private set; } = null!;

        [Output("tableClass")]
        public Output<string?> TableClass { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("ttl")]
        public Output<Outputs.TableTtl> Ttl { get; private set; } = null!;

        [Output("writeCapacity")]
        public Output<int> WriteCapacity { get; private set; } = null!;


        /// <summary>
        /// Create a Table resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Table(string name, TableArgs? args = null, CustomResourceOptions? options = null)
            : base("aws:dynamodb/table:Table", name, args ?? new TableArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Table(string name, Input<string> id, TableState? state = null, CustomResourceOptions? options = null)
            : base("aws:dynamodb/table:Table", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Table resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Table Get(string name, Input<string> id, TableState? state = null, CustomResourceOptions? options = null)
        {
            return new Table(name, id, state, options);
        }
    }

    public sealed class TableArgs : global::Pulumi.ResourceArgs
    {
        [Input("attributes")]
        private InputList<Inputs.TableAttributeArgs>? _attributes;
        public InputList<Inputs.TableAttributeArgs> Attributes
        {
            get => _attributes ?? (_attributes = new InputList<Inputs.TableAttributeArgs>());
            set => _attributes = value;
        }

        [Input("billingMode")]
        public Input<string>? BillingMode { get; set; }

        [Input("globalSecondaryIndexes")]
        private InputList<Inputs.TableGlobalSecondaryIndexArgs>? _globalSecondaryIndexes;
        public InputList<Inputs.TableGlobalSecondaryIndexArgs> GlobalSecondaryIndexes
        {
            get => _globalSecondaryIndexes ?? (_globalSecondaryIndexes = new InputList<Inputs.TableGlobalSecondaryIndexArgs>());
            set => _globalSecondaryIndexes = value;
        }

        [Input("hashKey")]
        public Input<string>? HashKey { get; set; }

        [Input("localSecondaryIndexes")]
        private InputList<Inputs.TableLocalSecondaryIndexArgs>? _localSecondaryIndexes;
        public InputList<Inputs.TableLocalSecondaryIndexArgs> LocalSecondaryIndexes
        {
            get => _localSecondaryIndexes ?? (_localSecondaryIndexes = new InputList<Inputs.TableLocalSecondaryIndexArgs>());
            set => _localSecondaryIndexes = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("pointInTimeRecovery")]
        public Input<Inputs.TablePointInTimeRecoveryArgs>? PointInTimeRecovery { get; set; }

        [Input("rangeKey")]
        public Input<string>? RangeKey { get; set; }

        [Input("readCapacity")]
        public Input<int>? ReadCapacity { get; set; }

        [Input("replicas")]
        private InputList<Inputs.TableReplicaArgs>? _replicas;
        public InputList<Inputs.TableReplicaArgs> Replicas
        {
            get => _replicas ?? (_replicas = new InputList<Inputs.TableReplicaArgs>());
            set => _replicas = value;
        }

        [Input("restoreDateTime")]
        public Input<string>? RestoreDateTime { get; set; }

        [Input("restoreSourceName")]
        public Input<string>? RestoreSourceName { get; set; }

        [Input("restoreToLatestTime")]
        public Input<bool>? RestoreToLatestTime { get; set; }

        [Input("serverSideEncryption")]
        public Input<Inputs.TableServerSideEncryptionArgs>? ServerSideEncryption { get; set; }

        [Input("streamEnabled")]
        public Input<bool>? StreamEnabled { get; set; }

        [Input("streamViewType")]
        public Input<string>? StreamViewType { get; set; }

        [Input("tableClass")]
        public Input<string>? TableClass { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("ttl")]
        public Input<Inputs.TableTtlArgs>? Ttl { get; set; }

        [Input("writeCapacity")]
        public Input<int>? WriteCapacity { get; set; }

        public TableArgs()
        {
        }
        public static new TableArgs Empty => new TableArgs();
    }

    public sealed class TableState : global::Pulumi.ResourceArgs
    {
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("attributes")]
        private InputList<Inputs.TableAttributeGetArgs>? _attributes;
        public InputList<Inputs.TableAttributeGetArgs> Attributes
        {
            get => _attributes ?? (_attributes = new InputList<Inputs.TableAttributeGetArgs>());
            set => _attributes = value;
        }

        [Input("billingMode")]
        public Input<string>? BillingMode { get; set; }

        [Input("globalSecondaryIndexes")]
        private InputList<Inputs.TableGlobalSecondaryIndexGetArgs>? _globalSecondaryIndexes;
        public InputList<Inputs.TableGlobalSecondaryIndexGetArgs> GlobalSecondaryIndexes
        {
            get => _globalSecondaryIndexes ?? (_globalSecondaryIndexes = new InputList<Inputs.TableGlobalSecondaryIndexGetArgs>());
            set => _globalSecondaryIndexes = value;
        }

        [Input("hashKey")]
        public Input<string>? HashKey { get; set; }

        [Input("localSecondaryIndexes")]
        private InputList<Inputs.TableLocalSecondaryIndexGetArgs>? _localSecondaryIndexes;
        public InputList<Inputs.TableLocalSecondaryIndexGetArgs> LocalSecondaryIndexes
        {
            get => _localSecondaryIndexes ?? (_localSecondaryIndexes = new InputList<Inputs.TableLocalSecondaryIndexGetArgs>());
            set => _localSecondaryIndexes = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("pointInTimeRecovery")]
        public Input<Inputs.TablePointInTimeRecoveryGetArgs>? PointInTimeRecovery { get; set; }

        [Input("rangeKey")]
        public Input<string>? RangeKey { get; set; }

        [Input("readCapacity")]
        public Input<int>? ReadCapacity { get; set; }

        [Input("replicas")]
        private InputList<Inputs.TableReplicaGetArgs>? _replicas;
        public InputList<Inputs.TableReplicaGetArgs> Replicas
        {
            get => _replicas ?? (_replicas = new InputList<Inputs.TableReplicaGetArgs>());
            set => _replicas = value;
        }

        [Input("restoreDateTime")]
        public Input<string>? RestoreDateTime { get; set; }

        [Input("restoreSourceName")]
        public Input<string>? RestoreSourceName { get; set; }

        [Input("restoreToLatestTime")]
        public Input<bool>? RestoreToLatestTime { get; set; }

        [Input("serverSideEncryption")]
        public Input<Inputs.TableServerSideEncryptionGetArgs>? ServerSideEncryption { get; set; }

        [Input("streamArn")]
        public Input<string>? StreamArn { get; set; }

        [Input("streamEnabled")]
        public Input<bool>? StreamEnabled { get; set; }

        [Input("streamLabel")]
        public Input<string>? StreamLabel { get; set; }

        [Input("streamViewType")]
        public Input<string>? StreamViewType { get; set; }

        [Input("tableClass")]
        public Input<string>? TableClass { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("ttl")]
        public Input<Inputs.TableTtlGetArgs>? Ttl { get; set; }

        [Input("writeCapacity")]
        public Input<int>? WriteCapacity { get; set; }

        public TableState()
        {
        }
        public static new TableState Empty => new TableState();
    }
}
