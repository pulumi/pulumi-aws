// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.DynamoDB
{
    public static class GetTableItem
    {
        /// <summary>
        /// Data source for retrieving a value from an AWS DynamoDB table.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.DynamoDB.GetTableItem.Invoke(new()
        ///     {
        ///         TableName = aws_dynamodb_table.Example.Name,
        ///         ExpressionAttributeNames = 
        ///         {
        ///             { "#P", "Percentile" },
        ///         },
        ///         ProjectionExpression = "#P",
        ///         Key = @"{
        /// 	""hashKey"": {""S"": ""example""}
        /// }
        /// ",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetTableItemResult> InvokeAsync(GetTableItemArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTableItemResult>("aws:dynamodb/getTableItem:getTableItem", args ?? new GetTableItemArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for retrieving a value from an AWS DynamoDB table.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.DynamoDB.GetTableItem.Invoke(new()
        ///     {
        ///         TableName = aws_dynamodb_table.Example.Name,
        ///         ExpressionAttributeNames = 
        ///         {
        ///             { "#P", "Percentile" },
        ///         },
        ///         ProjectionExpression = "#P",
        ///         Key = @"{
        /// 	""hashKey"": {""S"": ""example""}
        /// }
        /// ",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetTableItemResult> Invoke(GetTableItemInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTableItemResult>("aws:dynamodb/getTableItem:getTableItem", args ?? new GetTableItemInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTableItemArgs : global::Pulumi.InvokeArgs
    {
        [Input("expressionAttributeNames")]
        private Dictionary<string, string>? _expressionAttributeNames;
        public Dictionary<string, string> ExpressionAttributeNames
        {
            get => _expressionAttributeNames ?? (_expressionAttributeNames = new Dictionary<string, string>());
            set => _expressionAttributeNames = value;
        }

        /// <summary>
        /// A map of attribute names to AttributeValue objects, representing the primary key of the item to retrieve.
        /// For the primary key, you must provide all of the attributes. For example, with a simple primary key, you only need to provide a value for the partition key. For a composite primary key, you must provide values for both the partition key and the sort key.
        /// </summary>
        [Input("key", required: true)]
        public string Key { get; set; } = null!;

        /// <summary>
        /// A string that identifies one or more attributes to retrieve from the table. These attributes can include scalars, sets, or elements of a JSON document. The attributes in the expression must be separated by commas.
        /// If no attribute names are specified, then all attributes are returned. If any of the requested attributes are not found, they do not appear in the result.
        /// </summary>
        [Input("projectionExpression")]
        public string? ProjectionExpression { get; set; }

        /// <summary>
        /// The name of the table containing the requested item.
        /// </summary>
        [Input("tableName", required: true)]
        public string TableName { get; set; } = null!;

        public GetTableItemArgs()
        {
        }
        public static new GetTableItemArgs Empty => new GetTableItemArgs();
    }

    public sealed class GetTableItemInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("expressionAttributeNames")]
        private InputMap<string>? _expressionAttributeNames;
        public InputMap<string> ExpressionAttributeNames
        {
            get => _expressionAttributeNames ?? (_expressionAttributeNames = new InputMap<string>());
            set => _expressionAttributeNames = value;
        }

        /// <summary>
        /// A map of attribute names to AttributeValue objects, representing the primary key of the item to retrieve.
        /// For the primary key, you must provide all of the attributes. For example, with a simple primary key, you only need to provide a value for the partition key. For a composite primary key, you must provide values for both the partition key and the sort key.
        /// </summary>
        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        /// <summary>
        /// A string that identifies one or more attributes to retrieve from the table. These attributes can include scalars, sets, or elements of a JSON document. The attributes in the expression must be separated by commas.
        /// If no attribute names are specified, then all attributes are returned. If any of the requested attributes are not found, they do not appear in the result.
        /// </summary>
        [Input("projectionExpression")]
        public Input<string>? ProjectionExpression { get; set; }

        /// <summary>
        /// The name of the table containing the requested item.
        /// </summary>
        [Input("tableName", required: true)]
        public Input<string> TableName { get; set; } = null!;

        public GetTableItemInvokeArgs()
        {
        }
        public static new GetTableItemInvokeArgs Empty => new GetTableItemInvokeArgs();
    }


    [OutputType]
    public sealed class GetTableItemResult
    {
        public readonly ImmutableDictionary<string, string>? ExpressionAttributeNames;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// JSON representation of a map of attribute names to [AttributeValue](https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_AttributeValue.html) objects, as specified by ProjectionExpression.
        /// </summary>
        public readonly string Item;
        public readonly string Key;
        public readonly string? ProjectionExpression;
        public readonly string TableName;

        [OutputConstructor]
        private GetTableItemResult(
            ImmutableDictionary<string, string>? expressionAttributeNames,

            string id,

            string item,

            string key,

            string? projectionExpression,

            string tableName)
        {
            ExpressionAttributeNames = expressionAttributeNames;
            Id = id;
            Item = item;
            Key = key;
            ProjectionExpression = projectionExpression;
            TableName = tableName;
        }
    }
}
