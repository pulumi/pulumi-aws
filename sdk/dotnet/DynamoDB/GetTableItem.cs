// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.DynamoDB
{
    public static class GetTableItem
    {
        public static Task<GetTableItemResult> InvokeAsync(GetTableItemArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTableItemResult>("aws:dynamodb/getTableItem:getTableItem", args ?? new GetTableItemArgs(), options.WithDefaults());

        public static Output<GetTableItemResult> Invoke(GetTableItemInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTableItemResult>("aws:dynamodb/getTableItem:getTableItem", args ?? new GetTableItemInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTableItemArgs : global::Pulumi.InvokeArgs
    {
        [Input("expressionAttributeNames")]
        private Dictionary<string, string>? _expressionAttributeNames;
        public Dictionary<string, string> ExpressionAttributeNames
        {
            get => _expressionAttributeNames ?? (_expressionAttributeNames = new Dictionary<string, string>());
            set => _expressionAttributeNames = value;
        }

        [Input("key", required: true)]
        public string Key { get; set; } = null!;

        [Input("projectionExpression")]
        public string? ProjectionExpression { get; set; }

        [Input("tableName", required: true)]
        public string TableName { get; set; } = null!;

        public GetTableItemArgs()
        {
        }
        public static new GetTableItemArgs Empty => new GetTableItemArgs();
    }

    public sealed class GetTableItemInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("expressionAttributeNames")]
        private InputMap<string>? _expressionAttributeNames;
        public InputMap<string> ExpressionAttributeNames
        {
            get => _expressionAttributeNames ?? (_expressionAttributeNames = new InputMap<string>());
            set => _expressionAttributeNames = value;
        }

        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        [Input("projectionExpression")]
        public Input<string>? ProjectionExpression { get; set; }

        [Input("tableName", required: true)]
        public Input<string> TableName { get; set; } = null!;

        public GetTableItemInvokeArgs()
        {
        }
        public static new GetTableItemInvokeArgs Empty => new GetTableItemInvokeArgs();
    }


    [OutputType]
    public sealed class GetTableItemResult
    {
        public readonly ImmutableDictionary<string, string>? ExpressionAttributeNames;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Item;
        public readonly string Key;
        public readonly string? ProjectionExpression;
        public readonly string TableName;

        [OutputConstructor]
        private GetTableItemResult(
            ImmutableDictionary<string, string>? expressionAttributeNames,

            string id,

            string item,

            string key,

            string? projectionExpression,

            string tableName)
        {
            ExpressionAttributeNames = expressionAttributeNames;
            Id = id;
            Item = item;
            Key = key;
            ProjectionExpression = projectionExpression;
            TableName = tableName;
        }
    }
}
