// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.DynamoDB
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ### Basic Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.S3.BucketV2("example", new()
    ///     {
    ///         BucketPrefix = "example",
    ///         ForceDestroy = true,
    ///     });
    /// 
    ///     var exampleTable = new Aws.DynamoDB.Table("example", new()
    ///     {
    ///         Name = "example-table-1",
    ///         BillingMode = "PAY_PER_REQUEST",
    ///         HashKey = "user_id",
    ///         Attributes = new[]
    ///         {
    ///             new Aws.DynamoDB.Inputs.TableAttributeArgs
    ///             {
    ///                 Name = "user_id",
    ///                 Type = "S",
    ///             },
    ///         },
    ///         PointInTimeRecovery = new Aws.DynamoDB.Inputs.TablePointInTimeRecoveryArgs
    ///         {
    ///             Enabled = true,
    ///         },
    ///     });
    /// 
    ///     var exampleTableExport = new Aws.DynamoDB.TableExport("example", new()
    ///     {
    ///         TableArn = exampleTable.Arn,
    ///         S3Bucket = example.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ### Example with export time
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.DynamoDB.TableExport("example", new()
    ///     {
    ///         ExportTime = "2023-04-02T11:30:13+01:00",
    ///         S3Bucket = exampleAwsS3Bucket.Id,
    ///         TableArn = exampleAwsDynamodbTable.Arn,
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import DynamoDB table exports using the `arn`. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:dynamodb/tableExport:TableExport example arn:aws:dynamodb:us-west-2:12345678911:table/my-table-1/export/01580735656614-2c2f422e
    /// ```
    /// </summary>
    [AwsResourceType("aws:dynamodb/tableExport:TableExport")]
    public partial class TableExport : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ARN of the Table Export.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// Billable size of the table export.
        /// </summary>
        [Output("billedSizeInBytes")]
        public Output<int> BilledSizeInBytes { get; private set; } = null!;

        /// <summary>
        /// Time at which the export task completed.
        /// </summary>
        [Output("endTime")]
        public Output<string> EndTime { get; private set; } = null!;

        /// <summary>
        /// Format for the exported data. Valid values are `DYNAMODB_JSON` or `ION`. See the [AWS Documentation](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/S3DataExport.Output.html#S3DataExport.Output_Data) for more information on these export formats. Default is `DYNAMODB_JSON`.
        /// </summary>
        [Output("exportFormat")]
        public Output<string?> ExportFormat { get; private set; } = null!;

        /// <summary>
        /// Status of the export - export can be in one of the following states `IN_PROGRESS`, `COMPLETED`, or `FAILED`.
        /// </summary>
        [Output("exportStatus")]
        public Output<string> ExportStatus { get; private set; } = null!;

        /// <summary>
        /// Time in RFC3339 format from which to export table data. The table export will be a snapshot of the table's state at this point in time. Omitting this value will result in a snapshot from the current time.
        /// </summary>
        [Output("exportTime")]
        public Output<string> ExportTime { get; private set; } = null!;

        /// <summary>
        /// Number of items exported.
        /// </summary>
        [Output("itemCount")]
        public Output<int> ItemCount { get; private set; } = null!;

        /// <summary>
        /// Name of the manifest file for the export task. See the [AWS Documentation](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/S3DataExport.Output.html#S3DataExport.Output_Manifest) for more information on this manifest file.
        /// </summary>
        [Output("manifestFilesS3Key")]
        public Output<string> ManifestFilesS3Key { get; private set; } = null!;

        /// <summary>
        /// Name of the Amazon S3 bucket to export the snapshot to. See the [AWS Documentation](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/S3DataExport_Requesting.html#S3DataExport_Requesting_Permissions) for information on how configure this S3 bucket.
        /// </summary>
        [Output("s3Bucket")]
        public Output<string> S3Bucket { get; private set; } = null!;

        /// <summary>
        /// ID of the AWS account that owns the bucket the export will be stored in.
        /// </summary>
        [Output("s3BucketOwner")]
        public Output<string> S3BucketOwner { get; private set; } = null!;

        /// <summary>
        /// Amazon S3 bucket prefix to use as the file name and path of the exported snapshot.
        /// </summary>
        [Output("s3Prefix")]
        public Output<string> S3Prefix { get; private set; } = null!;

        /// <summary>
        /// Type of encryption used on the bucket where export data will be stored. Valid values are: `AES256`, `KMS`.
        /// </summary>
        [Output("s3SseAlgorithm")]
        public Output<string> S3SseAlgorithm { get; private set; } = null!;

        /// <summary>
        /// ID of the AWS KMS managed key used to encrypt the S3 bucket where export data will be stored (if applicable).
        /// </summary>
        [Output("s3SseKmsKeyId")]
        public Output<string?> S3SseKmsKeyId { get; private set; } = null!;

        /// <summary>
        /// Time at which the export task began.
        /// </summary>
        [Output("startTime")]
        public Output<string> StartTime { get; private set; } = null!;

        /// <summary>
        /// ARN associated with the table to export.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Output("tableArn")]
        public Output<string> TableArn { get; private set; } = null!;


        /// <summary>
        /// Create a TableExport resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TableExport(string name, TableExportArgs args, CustomResourceOptions? options = null)
            : base("aws:dynamodb/tableExport:TableExport", name, args ?? new TableExportArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TableExport(string name, Input<string> id, TableExportState? state = null, CustomResourceOptions? options = null)
            : base("aws:dynamodb/tableExport:TableExport", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TableExport resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TableExport Get(string name, Input<string> id, TableExportState? state = null, CustomResourceOptions? options = null)
        {
            return new TableExport(name, id, state, options);
        }
    }

    public sealed class TableExportArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Format for the exported data. Valid values are `DYNAMODB_JSON` or `ION`. See the [AWS Documentation](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/S3DataExport.Output.html#S3DataExport.Output_Data) for more information on these export formats. Default is `DYNAMODB_JSON`.
        /// </summary>
        [Input("exportFormat")]
        public Input<string>? ExportFormat { get; set; }

        /// <summary>
        /// Time in RFC3339 format from which to export table data. The table export will be a snapshot of the table's state at this point in time. Omitting this value will result in a snapshot from the current time.
        /// </summary>
        [Input("exportTime")]
        public Input<string>? ExportTime { get; set; }

        /// <summary>
        /// Name of the Amazon S3 bucket to export the snapshot to. See the [AWS Documentation](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/S3DataExport_Requesting.html#S3DataExport_Requesting_Permissions) for information on how configure this S3 bucket.
        /// </summary>
        [Input("s3Bucket", required: true)]
        public Input<string> S3Bucket { get; set; } = null!;

        /// <summary>
        /// ID of the AWS account that owns the bucket the export will be stored in.
        /// </summary>
        [Input("s3BucketOwner")]
        public Input<string>? S3BucketOwner { get; set; }

        /// <summary>
        /// Amazon S3 bucket prefix to use as the file name and path of the exported snapshot.
        /// </summary>
        [Input("s3Prefix")]
        public Input<string>? S3Prefix { get; set; }

        /// <summary>
        /// Type of encryption used on the bucket where export data will be stored. Valid values are: `AES256`, `KMS`.
        /// </summary>
        [Input("s3SseAlgorithm")]
        public Input<string>? S3SseAlgorithm { get; set; }

        /// <summary>
        /// ID of the AWS KMS managed key used to encrypt the S3 bucket where export data will be stored (if applicable).
        /// </summary>
        [Input("s3SseKmsKeyId")]
        public Input<string>? S3SseKmsKeyId { get; set; }

        /// <summary>
        /// ARN associated with the table to export.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("tableArn", required: true)]
        public Input<string> TableArn { get; set; } = null!;

        public TableExportArgs()
        {
        }
        public static new TableExportArgs Empty => new TableExportArgs();
    }

    public sealed class TableExportState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ARN of the Table Export.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// Billable size of the table export.
        /// </summary>
        [Input("billedSizeInBytes")]
        public Input<int>? BilledSizeInBytes { get; set; }

        /// <summary>
        /// Time at which the export task completed.
        /// </summary>
        [Input("endTime")]
        public Input<string>? EndTime { get; set; }

        /// <summary>
        /// Format for the exported data. Valid values are `DYNAMODB_JSON` or `ION`. See the [AWS Documentation](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/S3DataExport.Output.html#S3DataExport.Output_Data) for more information on these export formats. Default is `DYNAMODB_JSON`.
        /// </summary>
        [Input("exportFormat")]
        public Input<string>? ExportFormat { get; set; }

        /// <summary>
        /// Status of the export - export can be in one of the following states `IN_PROGRESS`, `COMPLETED`, or `FAILED`.
        /// </summary>
        [Input("exportStatus")]
        public Input<string>? ExportStatus { get; set; }

        /// <summary>
        /// Time in RFC3339 format from which to export table data. The table export will be a snapshot of the table's state at this point in time. Omitting this value will result in a snapshot from the current time.
        /// </summary>
        [Input("exportTime")]
        public Input<string>? ExportTime { get; set; }

        /// <summary>
        /// Number of items exported.
        /// </summary>
        [Input("itemCount")]
        public Input<int>? ItemCount { get; set; }

        /// <summary>
        /// Name of the manifest file for the export task. See the [AWS Documentation](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/S3DataExport.Output.html#S3DataExport.Output_Manifest) for more information on this manifest file.
        /// </summary>
        [Input("manifestFilesS3Key")]
        public Input<string>? ManifestFilesS3Key { get; set; }

        /// <summary>
        /// Name of the Amazon S3 bucket to export the snapshot to. See the [AWS Documentation](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/S3DataExport_Requesting.html#S3DataExport_Requesting_Permissions) for information on how configure this S3 bucket.
        /// </summary>
        [Input("s3Bucket")]
        public Input<string>? S3Bucket { get; set; }

        /// <summary>
        /// ID of the AWS account that owns the bucket the export will be stored in.
        /// </summary>
        [Input("s3BucketOwner")]
        public Input<string>? S3BucketOwner { get; set; }

        /// <summary>
        /// Amazon S3 bucket prefix to use as the file name and path of the exported snapshot.
        /// </summary>
        [Input("s3Prefix")]
        public Input<string>? S3Prefix { get; set; }

        /// <summary>
        /// Type of encryption used on the bucket where export data will be stored. Valid values are: `AES256`, `KMS`.
        /// </summary>
        [Input("s3SseAlgorithm")]
        public Input<string>? S3SseAlgorithm { get; set; }

        /// <summary>
        /// ID of the AWS KMS managed key used to encrypt the S3 bucket where export data will be stored (if applicable).
        /// </summary>
        [Input("s3SseKmsKeyId")]
        public Input<string>? S3SseKmsKeyId { get; set; }

        /// <summary>
        /// Time at which the export task began.
        /// </summary>
        [Input("startTime")]
        public Input<string>? StartTime { get; set; }

        /// <summary>
        /// ARN associated with the table to export.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("tableArn")]
        public Input<string>? TableArn { get; set; }

        public TableExportState()
        {
        }
        public static new TableExportState Empty => new TableExportState();
    }
}
