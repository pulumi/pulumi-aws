// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Efs
{
    /// <summary>
    /// Provides an Elastic File System (EFS) File System Policy resource.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var fs = new Aws.Efs.FileSystem("fs", new Aws.Efs.FileSystemArgs
    ///         {
    ///         });
    ///         var policy = new Aws.Efs.FileSystemPolicy("policy", new Aws.Efs.FileSystemPolicyArgs
    ///         {
    ///             FileSystemId = fs.Id,
    ///             Policy = @$"{{
    ///     ""Version"": ""2012-10-17"",
    ///     ""Id"": ""ExamplePolicy01"",
    ///     ""Statement"": [
    ///         {{
    ///             ""Sid"": ""ExampleStatement01"",
    ///             ""Effect"": ""Allow"",
    ///             ""Principal"": {{
    ///                 ""AWS"": ""*""
    ///             }},
    ///             ""Resource"": ""{aws_efs_file_system.Test.Arn}"",
    ///             ""Action"": [
    ///                 ""elasticfilesystem:ClientMount"",
    ///                 ""elasticfilesystem:ClientWrite""
    ///             ],
    ///             ""Condition"": {{
    ///                 ""Bool"": {{
    ///                     ""aws:SecureTransport"": ""true""
    ///                 }}
    ///             }}
    ///         }}
    ///     ]
    /// }}
    /// ",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// The EFS file system policies can be imported using the `id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import aws:efs/fileSystemPolicy:FileSystemPolicy foo fs-6fa144c6
    /// ```
    /// </summary>
    public partial class FileSystemPolicy : Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the EFS file system.
        /// </summary>
        [Output("fileSystemId")]
        public Output<string> FileSystemId { get; private set; } = null!;

        /// <summary>
        /// The JSON formatted file system policy for the EFS file system. see [Docs](https://docs.aws.amazon.com/efs/latest/ug/access-control-overview.html#access-control-manage-access-intro-resource-policies) for more info.
        /// </summary>
        [Output("policy")]
        public Output<string> Policy { get; private set; } = null!;


        /// <summary>
        /// Create a FileSystemPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FileSystemPolicy(string name, FileSystemPolicyArgs args, CustomResourceOptions? options = null)
            : base("aws:efs/fileSystemPolicy:FileSystemPolicy", name, args ?? new FileSystemPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FileSystemPolicy(string name, Input<string> id, FileSystemPolicyState? state = null, CustomResourceOptions? options = null)
            : base("aws:efs/fileSystemPolicy:FileSystemPolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FileSystemPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FileSystemPolicy Get(string name, Input<string> id, FileSystemPolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new FileSystemPolicy(name, id, state, options);
        }
    }

    public sealed class FileSystemPolicyArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the EFS file system.
        /// </summary>
        [Input("fileSystemId", required: true)]
        public Input<string> FileSystemId { get; set; } = null!;

        /// <summary>
        /// The JSON formatted file system policy for the EFS file system. see [Docs](https://docs.aws.amazon.com/efs/latest/ug/access-control-overview.html#access-control-manage-access-intro-resource-policies) for more info.
        /// </summary>
        [Input("policy", required: true)]
        public Input<string> Policy { get; set; } = null!;

        public FileSystemPolicyArgs()
        {
        }
    }

    public sealed class FileSystemPolicyState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the EFS file system.
        /// </summary>
        [Input("fileSystemId")]
        public Input<string>? FileSystemId { get; set; }

        /// <summary>
        /// The JSON formatted file system policy for the EFS file system. see [Docs](https://docs.aws.amazon.com/efs/latest/ug/access-control-overview.html#access-control-manage-access-intro-resource-policies) for more info.
        /// </summary>
        [Input("policy")]
        public Input<string>? Policy { get; set; }

        public FileSystemPolicyState()
        {
        }
    }
}
