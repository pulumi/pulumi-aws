// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Efs
{
    /// <summary>
    /// Provides an Elastic File System (EFS) access point.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var test = new Aws.Efs.AccessPoint("test", new Aws.Efs.AccessPointArgs
    ///         {
    ///             FileSystemId = aws_efs_file_system.Foo.Id,
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// The EFS access points can be imported using the `id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import aws:efs/accessPoint:AccessPoint test fsap-52a643fb
    /// ```
    /// </summary>
    public partial class AccessPoint : Pulumi.CustomResource
    {
        /// <summary>
        /// Amazon Resource Name of the access point.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// Amazon Resource Name of the file system.
        /// </summary>
        [Output("fileSystemArn")]
        public Output<string> FileSystemArn { get; private set; } = null!;

        /// <summary>
        /// The ID of the file system for which the access point is intended.
        /// </summary>
        [Output("fileSystemId")]
        public Output<string> FileSystemId { get; private set; } = null!;

        [Output("ownerId")]
        public Output<string> OwnerId { get; private set; } = null!;

        /// <summary>
        /// The operating system user and group applied to all file system requests made using the access point. See Posix User below.
        /// </summary>
        [Output("posixUser")]
        public Output<Outputs.AccessPointPosixUser?> PosixUser { get; private set; } = null!;

        /// <summary>
        /// Specifies the directory on the Amazon EFS file system that the access point provides access to. See Root Directory below.
        /// </summary>
        [Output("rootDirectory")]
        public Output<Outputs.AccessPointRootDirectory> RootDirectory { get; private set; } = null!;

        /// <summary>
        /// Key-value mapping of resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a AccessPoint resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AccessPoint(string name, AccessPointArgs args, CustomResourceOptions? options = null)
            : base("aws:efs/accessPoint:AccessPoint", name, args ?? new AccessPointArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AccessPoint(string name, Input<string> id, AccessPointState? state = null, CustomResourceOptions? options = null)
            : base("aws:efs/accessPoint:AccessPoint", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AccessPoint resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AccessPoint Get(string name, Input<string> id, AccessPointState? state = null, CustomResourceOptions? options = null)
        {
            return new AccessPoint(name, id, state, options);
        }
    }

    public sealed class AccessPointArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the file system for which the access point is intended.
        /// </summary>
        [Input("fileSystemId", required: true)]
        public Input<string> FileSystemId { get; set; } = null!;

        /// <summary>
        /// The operating system user and group applied to all file system requests made using the access point. See Posix User below.
        /// </summary>
        [Input("posixUser")]
        public Input<Inputs.AccessPointPosixUserArgs>? PosixUser { get; set; }

        /// <summary>
        /// Specifies the directory on the Amazon EFS file system that the access point provides access to. See Root Directory below.
        /// </summary>
        [Input("rootDirectory")]
        public Input<Inputs.AccessPointRootDirectoryArgs>? RootDirectory { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value mapping of resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public AccessPointArgs()
        {
        }
    }

    public sealed class AccessPointState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Amazon Resource Name of the access point.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// Amazon Resource Name of the file system.
        /// </summary>
        [Input("fileSystemArn")]
        public Input<string>? FileSystemArn { get; set; }

        /// <summary>
        /// The ID of the file system for which the access point is intended.
        /// </summary>
        [Input("fileSystemId")]
        public Input<string>? FileSystemId { get; set; }

        [Input("ownerId")]
        public Input<string>? OwnerId { get; set; }

        /// <summary>
        /// The operating system user and group applied to all file system requests made using the access point. See Posix User below.
        /// </summary>
        [Input("posixUser")]
        public Input<Inputs.AccessPointPosixUserGetArgs>? PosixUser { get; set; }

        /// <summary>
        /// Specifies the directory on the Amazon EFS file system that the access point provides access to. See Root Directory below.
        /// </summary>
        [Input("rootDirectory")]
        public Input<Inputs.AccessPointRootDirectoryGetArgs>? RootDirectory { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value mapping of resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public AccessPointState()
        {
        }
    }
}
