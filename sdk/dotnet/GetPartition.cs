// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws
{
    public static class GetPartition
    {
        /// <summary>
        /// Use this data source to lookup information about the current AWS partition in
        /// which the provider is working.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const current = aws.getPartition({});
        /// const s3Policy = current.then(current =&gt; aws.iam.getPolicyDocument({
        ///     statements: [{
        ///         actions: ["s3:ListBucket"],
        ///         resources: [`arn:${current.partition}:s3:::my-bucket`],
        ///         sid: "1",
        ///     }],
        /// }));
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// current = aws.get_partition()
        /// s3_policy = aws.iam.get_policy_document(statements=[aws.iam.GetPolicyDocumentStatementArgs(
        ///     actions=["s3:ListBucket"],
        ///     resources=[f"arn:{current.partition}:s3:::my-bucket"],
        ///     sid="1",
        /// )])
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var current = Aws.GetPartition.Invoke();
        /// 
        ///     var s3Policy = Aws.Iam.GetPolicyDocument.Invoke(new()
        ///     {
        ///         Statements = new[]
        ///         {
        ///             new Aws.Iam.Inputs.GetPolicyDocumentStatementInputArgs
        ///             {
        ///                 Actions = new[]
        ///                 {
        ///                     "s3:ListBucket",
        ///                 },
        ///                 Resources = new[]
        ///                 {
        ///                     $"arn:{current.Apply(getPartitionResult =&gt; getPartitionResult.Partition)}:s3:::my-bucket",
        ///                 },
        ///                 Sid = "1",
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"fmt"
        /// 
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws"
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/iam"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		current, err := aws.GetPartition(ctx, nil, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		_, err = iam.GetPolicyDocument(ctx, &amp;iam.GetPolicyDocumentArgs{
        /// 			Statements: []iam.GetPolicyDocumentStatement{
        /// 				{
        /// 					Actions: []string{
        /// 						"s3:ListBucket",
        /// 					},
        /// 					Resources: []string{
        /// 						fmt.Sprintf("arn:%v:s3:::my-bucket", current.Partition),
        /// 					},
        /// 					Sid: pulumi.StringRef("1"),
        /// 				},
        /// 			},
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.AwsFunctions;
        /// import com.pulumi.aws.iam.IamFunctions;
        /// import com.pulumi.aws.iam.inputs.GetPolicyDocumentArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var current = AwsFunctions.getPartition();
        /// 
        ///         final var s3Policy = IamFunctions.getPolicyDocument(GetPolicyDocumentArgs.builder()
        ///             .statements(GetPolicyDocumentStatementArgs.builder()
        ///                 .actions("s3:ListBucket")
        ///                 .resources(String.format("arn:%s:s3:::my-bucket", current.applyValue(getPartitionResult -&gt; getPartitionResult.partition())))
        ///                 .sid("1")
        ///                 .build())
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   current:
        ///     fn::invoke:
        ///       Function: aws:getPartition
        ///       Arguments: {}
        ///   s3Policy:
        ///     fn::invoke:
        ///       Function: aws:iam:getPolicyDocument
        ///       Arguments:
        ///         statements:
        ///           - actions:
        ///               - s3:ListBucket
        ///             resources:
        ///               - arn:${current.partition}:s3:::my-bucket
        ///             sid: '1'
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetPartitionResult> InvokeAsync(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPartitionResult>("aws:index/getPartition:getPartition", InvokeArgs.Empty, options.WithDefaults());
    }


    [OutputType]
    public sealed class GetPartitionResult
    {
        /// <summary>
        /// Base DNS domain name for the current partition (e.g., `amazonaws.com` in AWS Commercial, `amazonaws.com.cn` in AWS China).
        /// </summary>
        public readonly string DnsSuffix;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Identifier of the current partition (e.g., `aws` in AWS Commercial, `aws-cn` in AWS China).
        /// </summary>
        public readonly string Partition;
        /// <summary>
        /// Prefix of service names (e.g., `com.amazonaws` in AWS Commercial, `cn.com.amazonaws` in AWS China).
        /// </summary>
        public readonly string ReverseDnsPrefix;

        [OutputConstructor]
        private GetPartitionResult(
            string dnsSuffix,

            string id,

            string partition,

            string reverseDnsPrefix)
        {
            DnsSuffix = dnsSuffix;
            Id = id;
            Partition = partition;
            ReverseDnsPrefix = reverseDnsPrefix;
        }
    }
}
