// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws
{
    public static class GetPartition
    {
        /// <summary>
        /// Use this data source to lookup information about the current AWS partition in
        /// which the provider is working.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var current = Aws.GetPartition.Invoke();
        /// 
        ///     var s3Policy = Aws.Iam.GetPolicyDocument.Invoke(new()
        ///     {
        ///         Statements = new[]
        ///         {
        ///             new Aws.Iam.Inputs.GetPolicyDocumentStatementInputArgs
        ///             {
        ///                 Actions = new[]
        ///                 {
        ///                     "s3:ListBucket",
        ///                 },
        ///                 Resources = new[]
        ///                 {
        ///                     $"arn:{current.Apply(getPartitionResult =&gt; getPartitionResult.Partition)}:s3:::my-bucket",
        ///                 },
        ///                 Sid = "1",
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetPartitionResult> InvokeAsync(GetPartitionArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPartitionResult>("aws:index/getPartition:getPartition", args ?? new GetPartitionArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to lookup information about the current AWS partition in
        /// which the provider is working.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var current = Aws.GetPartition.Invoke();
        /// 
        ///     var s3Policy = Aws.Iam.GetPolicyDocument.Invoke(new()
        ///     {
        ///         Statements = new[]
        ///         {
        ///             new Aws.Iam.Inputs.GetPolicyDocumentStatementInputArgs
        ///             {
        ///                 Actions = new[]
        ///                 {
        ///                     "s3:ListBucket",
        ///                 },
        ///                 Resources = new[]
        ///                 {
        ///                     $"arn:{current.Apply(getPartitionResult =&gt; getPartitionResult.Partition)}:s3:::my-bucket",
        ///                 },
        ///                 Sid = "1",
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetPartitionResult> Invoke(GetPartitionInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPartitionResult>("aws:index/getPartition:getPartition", args ?? new GetPartitionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPartitionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier of the current partition (e.g., `aws` in AWS Commercial, `aws-cn` in AWS China).
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        public GetPartitionArgs()
        {
        }
        public static new GetPartitionArgs Empty => new GetPartitionArgs();
    }

    public sealed class GetPartitionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Identifier of the current partition (e.g., `aws` in AWS Commercial, `aws-cn` in AWS China).
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        public GetPartitionInvokeArgs()
        {
        }
        public static new GetPartitionInvokeArgs Empty => new GetPartitionInvokeArgs();
    }


    [OutputType]
    public sealed class GetPartitionResult
    {
        /// <summary>
        /// Base DNS domain name for the current partition (e.g., `amazonaws.com` in AWS Commercial, `amazonaws.com.cn` in AWS China).
        /// </summary>
        public readonly string DnsSuffix;
        /// <summary>
        /// Identifier of the current partition (e.g., `aws` in AWS Commercial, `aws-cn` in AWS China).
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Identifier of the current partition (e.g., `aws` in AWS Commercial, `aws-cn` in AWS China).
        /// </summary>
        public readonly string Partition;
        /// <summary>
        /// Prefix of service names (e.g., `com.amazonaws` in AWS Commercial, `cn.com.amazonaws` in AWS China).
        /// </summary>
        public readonly string ReverseDnsPrefix;

        [OutputConstructor]
        private GetPartitionResult(
            string dnsSuffix,

            string id,

            string partition,

            string reverseDnsPrefix)
        {
            DnsSuffix = dnsSuffix;
            Id = id;
            Partition = partition;
            ReverseDnsPrefix = reverseDnsPrefix;
        }
    }
}
