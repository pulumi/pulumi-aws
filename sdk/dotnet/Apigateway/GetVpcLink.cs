// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.ApiGateway
{
    public static partial class Invokes
    {
        /// <summary>
        /// Use this data source to get the id of a VPC Link in
        /// API Gateway. To fetch the VPC Link you must provide a name to match against. 
        /// As there is no unique name constraint on API Gateway VPC Links this data source will 
        /// error if there is more than one match.
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/d/api_gateway_vpc_link.html.markdown.
        /// </summary>
        [Obsolete("Use GetVpcLink.InvokeAsync() instead")]
        public static Task<GetVpcLinkResult> GetVpcLink(GetVpcLinkArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetVpcLinkResult>("aws:apigateway/getVpcLink:getVpcLink", args ?? InvokeArgs.Empty, options.WithVersion());
    }
    public static class GetVpcLink
    {
        /// <summary>
        /// Use this data source to get the id of a VPC Link in
        /// API Gateway. To fetch the VPC Link you must provide a name to match against. 
        /// As there is no unique name constraint on API Gateway VPC Links this data source will 
        /// error if there is more than one match.
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/d/api_gateway_vpc_link.html.markdown.
        /// </summary>
        public static Task<GetVpcLinkResult> InvokeAsync(GetVpcLinkArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetVpcLinkResult>("aws:apigateway/getVpcLink:getVpcLink", args ?? InvokeArgs.Empty, options.WithVersion());
    }

    public sealed class GetVpcLinkArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the API Gateway VPC Link to look up. If no API Gateway VPC Link is found with this name, an error will be returned. 
        /// If multiple API Gateway VPC Links are found with this name, an error will be returned.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("tags")]
        private Dictionary<string, object>? _tags;
        public Dictionary<string, object> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, object>());
            set => _tags = value;
        }

        public GetVpcLinkArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetVpcLinkResult
    {
        /// <summary>
        /// The description of the VPC link.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Set to the ID of the found API Gateway VPC Link.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        /// <summary>
        /// The status of the VPC link.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The status message of the VPC link.
        /// </summary>
        public readonly string StatusMessage;
        /// <summary>
        /// Key-value mapping of resource tags
        /// </summary>
        public readonly ImmutableDictionary<string, object> Tags;
        /// <summary>
        /// The list of network load balancer arns in the VPC targeted by the VPC link. Currently AWS only supports 1 target.
        /// </summary>
        public readonly ImmutableArray<string> TargetArns;

        [OutputConstructor]
        private GetVpcLinkResult(
            string description,
            string id,
            string name,
            string status,
            string statusMessage,
            ImmutableDictionary<string, object> tags,
            ImmutableArray<string> targetArns)
        {
            Description = description;
            Id = id;
            Name = name;
            Status = status;
            StatusMessage = statusMessage;
            Tags = tags;
            TargetArns = targetArns;
        }
    }
}
