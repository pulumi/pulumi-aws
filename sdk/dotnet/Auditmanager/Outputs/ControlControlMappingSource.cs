// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Auditmanager.Outputs
{

    [OutputType]
    public sealed class ControlControlMappingSource
    {
        /// <summary>
        /// Description of the source.
        /// </summary>
        public readonly string? SourceDescription;
        /// <summary>
        /// Frequency of evidence collection. Valid values are `DAILY`, `WEEKLY`, or `MONTHLY`.
        /// </summary>
        public readonly string? SourceFrequency;
        public readonly string? SourceId;
        /// <summary>
        /// The keyword to search for in CloudTrail logs, Config rules, Security Hub checks, and Amazon Web Services API names. See `source_keyword` below.
        /// </summary>
        public readonly Outputs.ControlControlMappingSourceSourceKeyword? SourceKeyword;
        /// <summary>
        /// Name of the source.
        /// </summary>
        public readonly string SourceName;
        /// <summary>
        /// The setup option for the data source. This option reflects if the evidence collection is automated or manual. Valid values are `System_Controls_Mapping` (automated) and `Procedural_Controls_Mapping` (manual).
        /// </summary>
        public readonly string SourceSetUpOption;
        /// <summary>
        /// Type of data source for evidence collection. If `source_set_up_option` is manual, the only valid value is `MANUAL`. If `source_set_up_option` is automated, valid values are `AWS_Cloudtrail`, `AWS_Config`, `AWS_Security_Hub`, or `AWS_API_Call`.
        /// 
        /// The following arguments are optional:
        /// </summary>
        public readonly string SourceType;
        /// <summary>
        /// Instructions for troubleshooting the control.
        /// </summary>
        public readonly string? TroubleshootingText;

        [OutputConstructor]
        private ControlControlMappingSource(
            string? sourceDescription,

            string? sourceFrequency,

            string? sourceId,

            Outputs.ControlControlMappingSourceSourceKeyword? sourceKeyword,

            string sourceName,

            string sourceSetUpOption,

            string sourceType,

            string? troubleshootingText)
        {
            SourceDescription = sourceDescription;
            SourceFrequency = sourceFrequency;
            SourceId = sourceId;
            SourceKeyword = sourceKeyword;
            SourceName = sourceName;
            SourceSetUpOption = sourceSetUpOption;
            SourceType = sourceType;
            TroubleshootingText = troubleshootingText;
        }
    }
}
