// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.DirectoryService
{
    [AwsResourceType("aws:directoryservice/sharedDirectoryAccepter:SharedDirectoryAccepter")]
    public partial class SharedDirectoryAccepter : global::Pulumi.CustomResource
    {
        [Output("method")]
        public Output<string> Method { get; private set; } = null!;

        [Output("notes")]
        public Output<string> Notes { get; private set; } = null!;

        [Output("ownerAccountId")]
        public Output<string> OwnerAccountId { get; private set; } = null!;

        [Output("ownerDirectoryId")]
        public Output<string> OwnerDirectoryId { get; private set; } = null!;

        [Output("sharedDirectoryId")]
        public Output<string> SharedDirectoryId { get; private set; } = null!;


        /// <summary>
        /// Create a SharedDirectoryAccepter resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SharedDirectoryAccepter(string name, SharedDirectoryAccepterArgs args, CustomResourceOptions? options = null)
            : base("aws:directoryservice/sharedDirectoryAccepter:SharedDirectoryAccepter", name, args ?? new SharedDirectoryAccepterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SharedDirectoryAccepter(string name, Input<string> id, SharedDirectoryAccepterState? state = null, CustomResourceOptions? options = null)
            : base("aws:directoryservice/sharedDirectoryAccepter:SharedDirectoryAccepter", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SharedDirectoryAccepter resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SharedDirectoryAccepter Get(string name, Input<string> id, SharedDirectoryAccepterState? state = null, CustomResourceOptions? options = null)
        {
            return new SharedDirectoryAccepter(name, id, state, options);
        }
    }

    public sealed class SharedDirectoryAccepterArgs : global::Pulumi.ResourceArgs
    {
        [Input("sharedDirectoryId", required: true)]
        public Input<string> SharedDirectoryId { get; set; } = null!;

        public SharedDirectoryAccepterArgs()
        {
        }
        public static new SharedDirectoryAccepterArgs Empty => new SharedDirectoryAccepterArgs();
    }

    public sealed class SharedDirectoryAccepterState : global::Pulumi.ResourceArgs
    {
        [Input("method")]
        public Input<string>? Method { get; set; }

        [Input("notes")]
        public Input<string>? Notes { get; set; }

        [Input("ownerAccountId")]
        public Input<string>? OwnerAccountId { get; set; }

        [Input("ownerDirectoryId")]
        public Input<string>? OwnerDirectoryId { get; set; }

        [Input("sharedDirectoryId")]
        public Input<string>? SharedDirectoryId { get; set; }

        public SharedDirectoryAccepterState()
        {
        }
        public static new SharedDirectoryAccepterState Empty => new SharedDirectoryAccepterState();
    }
}
