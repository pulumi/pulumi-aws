// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.DirectoryService
{
    [AwsResourceType("aws:directoryservice/sharedDirectory:SharedDirectory")]
    public partial class SharedDirectory : global::Pulumi.CustomResource
    {
        [Output("directoryId")]
        public Output<string> DirectoryId { get; private set; } = null!;

        [Output("method")]
        public Output<string?> Method { get; private set; } = null!;

        [Output("notes")]
        public Output<string?> Notes { get; private set; } = null!;

        [Output("sharedDirectoryId")]
        public Output<string> SharedDirectoryId { get; private set; } = null!;

        [Output("target")]
        public Output<Outputs.SharedDirectoryTarget> Target { get; private set; } = null!;


        /// <summary>
        /// Create a SharedDirectory resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SharedDirectory(string name, SharedDirectoryArgs args, CustomResourceOptions? options = null)
            : base("aws:directoryservice/sharedDirectory:SharedDirectory", name, args ?? new SharedDirectoryArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SharedDirectory(string name, Input<string> id, SharedDirectoryState? state = null, CustomResourceOptions? options = null)
            : base("aws:directoryservice/sharedDirectory:SharedDirectory", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "notes",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SharedDirectory resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SharedDirectory Get(string name, Input<string> id, SharedDirectoryState? state = null, CustomResourceOptions? options = null)
        {
            return new SharedDirectory(name, id, state, options);
        }
    }

    public sealed class SharedDirectoryArgs : global::Pulumi.ResourceArgs
    {
        [Input("directoryId", required: true)]
        public Input<string> DirectoryId { get; set; } = null!;

        [Input("method")]
        public Input<string>? Method { get; set; }

        [Input("notes")]
        private Input<string>? _notes;
        public Input<string>? Notes
        {
            get => _notes;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _notes = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("target", required: true)]
        public Input<Inputs.SharedDirectoryTargetArgs> Target { get; set; } = null!;

        public SharedDirectoryArgs()
        {
        }
        public static new SharedDirectoryArgs Empty => new SharedDirectoryArgs();
    }

    public sealed class SharedDirectoryState : global::Pulumi.ResourceArgs
    {
        [Input("directoryId")]
        public Input<string>? DirectoryId { get; set; }

        [Input("method")]
        public Input<string>? Method { get; set; }

        [Input("notes")]
        private Input<string>? _notes;
        public Input<string>? Notes
        {
            get => _notes;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _notes = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("sharedDirectoryId")]
        public Input<string>? SharedDirectoryId { get; set; }

        [Input("target")]
        public Input<Inputs.SharedDirectoryTargetGetArgs>? Target { get; set; }

        public SharedDirectoryState()
        {
        }
        public static new SharedDirectoryState Empty => new SharedDirectoryState();
    }
}
