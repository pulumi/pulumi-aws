// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.DirectoryService
{
    [AwsResourceType("aws:directoryservice/radiusSettings:RadiusSettings")]
    public partial class RadiusSettings : global::Pulumi.CustomResource
    {
        [Output("authenticationProtocol")]
        public Output<string> AuthenticationProtocol { get; private set; } = null!;

        [Output("directoryId")]
        public Output<string> DirectoryId { get; private set; } = null!;

        [Output("displayLabel")]
        public Output<string> DisplayLabel { get; private set; } = null!;

        [Output("radiusPort")]
        public Output<int> RadiusPort { get; private set; } = null!;

        [Output("radiusRetries")]
        public Output<int> RadiusRetries { get; private set; } = null!;

        [Output("radiusServers")]
        public Output<ImmutableArray<string>> RadiusServers { get; private set; } = null!;

        [Output("radiusTimeout")]
        public Output<int> RadiusTimeout { get; private set; } = null!;

        [Output("sharedSecret")]
        public Output<string> SharedSecret { get; private set; } = null!;

        [Output("useSameUsername")]
        public Output<bool?> UseSameUsername { get; private set; } = null!;


        /// <summary>
        /// Create a RadiusSettings resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RadiusSettings(string name, RadiusSettingsArgs args, CustomResourceOptions? options = null)
            : base("aws:directoryservice/radiusSettings:RadiusSettings", name, args ?? new RadiusSettingsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RadiusSettings(string name, Input<string> id, RadiusSettingsState? state = null, CustomResourceOptions? options = null)
            : base("aws:directoryservice/radiusSettings:RadiusSettings", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "sharedSecret",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RadiusSettings resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RadiusSettings Get(string name, Input<string> id, RadiusSettingsState? state = null, CustomResourceOptions? options = null)
        {
            return new RadiusSettings(name, id, state, options);
        }
    }

    public sealed class RadiusSettingsArgs : global::Pulumi.ResourceArgs
    {
        [Input("authenticationProtocol", required: true)]
        public Input<string> AuthenticationProtocol { get; set; } = null!;

        [Input("directoryId", required: true)]
        public Input<string> DirectoryId { get; set; } = null!;

        [Input("displayLabel", required: true)]
        public Input<string> DisplayLabel { get; set; } = null!;

        [Input("radiusPort", required: true)]
        public Input<int> RadiusPort { get; set; } = null!;

        [Input("radiusRetries", required: true)]
        public Input<int> RadiusRetries { get; set; } = null!;

        [Input("radiusServers", required: true)]
        private InputList<string>? _radiusServers;
        public InputList<string> RadiusServers
        {
            get => _radiusServers ?? (_radiusServers = new InputList<string>());
            set => _radiusServers = value;
        }

        [Input("radiusTimeout", required: true)]
        public Input<int> RadiusTimeout { get; set; } = null!;

        [Input("sharedSecret", required: true)]
        private Input<string>? _sharedSecret;
        public Input<string>? SharedSecret
        {
            get => _sharedSecret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _sharedSecret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("useSameUsername")]
        public Input<bool>? UseSameUsername { get; set; }

        public RadiusSettingsArgs()
        {
        }
        public static new RadiusSettingsArgs Empty => new RadiusSettingsArgs();
    }

    public sealed class RadiusSettingsState : global::Pulumi.ResourceArgs
    {
        [Input("authenticationProtocol")]
        public Input<string>? AuthenticationProtocol { get; set; }

        [Input("directoryId")]
        public Input<string>? DirectoryId { get; set; }

        [Input("displayLabel")]
        public Input<string>? DisplayLabel { get; set; }

        [Input("radiusPort")]
        public Input<int>? RadiusPort { get; set; }

        [Input("radiusRetries")]
        public Input<int>? RadiusRetries { get; set; }

        [Input("radiusServers")]
        private InputList<string>? _radiusServers;
        public InputList<string> RadiusServers
        {
            get => _radiusServers ?? (_radiusServers = new InputList<string>());
            set => _radiusServers = value;
        }

        [Input("radiusTimeout")]
        public Input<int>? RadiusTimeout { get; set; }

        [Input("sharedSecret")]
        private Input<string>? _sharedSecret;
        public Input<string>? SharedSecret
        {
            get => _sharedSecret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _sharedSecret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("useSameUsername")]
        public Input<bool>? UseSameUsername { get; set; }

        public RadiusSettingsState()
        {
        }
        public static new RadiusSettingsState Empty => new RadiusSettingsState();
    }
}
