// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Pipes.Inputs
{

    public sealed class PipeTargetParametersArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The parameters for using an AWS Batch job as a target. Detailed below.
        /// </summary>
        [Input("batchJobParameters")]
        public Input<Inputs.PipeTargetParametersBatchJobParametersArgs>? BatchJobParameters { get; set; }

        /// <summary>
        /// The parameters for using an CloudWatch Logs log stream as a target. Detailed below.
        /// </summary>
        [Input("cloudwatchLogsParameters")]
        public Input<Inputs.PipeTargetParametersCloudwatchLogsParametersArgs>? CloudwatchLogsParameters { get; set; }

        /// <summary>
        /// The parameters for using an Amazon ECS task as a target. Detailed below.
        /// </summary>
        [Input("ecsTaskParameters")]
        public Input<Inputs.PipeTargetParametersEcsTaskParametersArgs>? EcsTaskParameters { get; set; }

        /// <summary>
        /// The parameters for using an EventBridge event bus as a target. Detailed below.
        /// </summary>
        [Input("eventbridgeEventBusParameters")]
        public Input<Inputs.PipeTargetParametersEventbridgeEventBusParametersArgs>? EventbridgeEventBusParameters { get; set; }

        /// <summary>
        /// These are custom parameter to be used when the target is an API Gateway REST APIs or EventBridge ApiDestinations. Detailed below.
        /// </summary>
        [Input("httpParameters")]
        public Input<Inputs.PipeTargetParametersHttpParametersArgs>? HttpParameters { get; set; }

        /// <summary>
        /// Valid JSON text passed to the target. In this case, nothing from the event itself is passed to the target. Maximum length of 8192 characters.
        /// </summary>
        [Input("inputTemplate")]
        public Input<string>? InputTemplate { get; set; }

        /// <summary>
        /// The parameters for using a Kinesis stream as a source. Detailed below.
        /// </summary>
        [Input("kinesisStreamParameters")]
        public Input<Inputs.PipeTargetParametersKinesisStreamParametersArgs>? KinesisStreamParameters { get; set; }

        /// <summary>
        /// The parameters for using a Lambda function as a target. Detailed below.
        /// </summary>
        [Input("lambdaFunctionParameters")]
        public Input<Inputs.PipeTargetParametersLambdaFunctionParametersArgs>? LambdaFunctionParameters { get; set; }

        /// <summary>
        /// These are custom parameters to be used when the target is a Amazon Redshift cluster to invoke the Amazon Redshift Data API BatchExecuteStatement. Detailed below.
        /// </summary>
        [Input("redshiftDataParameters")]
        public Input<Inputs.PipeTargetParametersRedshiftDataParametersArgs>? RedshiftDataParameters { get; set; }

        /// <summary>
        /// The parameters for using a SageMaker pipeline as a target. Detailed below.
        /// </summary>
        [Input("sagemakerPipelineParameters")]
        public Input<Inputs.PipeTargetParametersSagemakerPipelineParametersArgs>? SagemakerPipelineParameters { get; set; }

        /// <summary>
        /// The parameters for using a Amazon SQS stream as a target. Detailed below.
        /// </summary>
        [Input("sqsQueueParameters")]
        public Input<Inputs.PipeTargetParametersSqsQueueParametersArgs>? SqsQueueParameters { get; set; }

        /// <summary>
        /// The parameters for using a Step Functions state machine as a target. Detailed below.
        /// </summary>
        [Input("stepFunctionStateMachineParameters")]
        public Input<Inputs.PipeTargetParametersStepFunctionStateMachineParametersArgs>? StepFunctionStateMachineParameters { get; set; }

        public PipeTargetParametersArgs()
        {
        }
        public static new PipeTargetParametersArgs Empty => new PipeTargetParametersArgs();
    }
}
