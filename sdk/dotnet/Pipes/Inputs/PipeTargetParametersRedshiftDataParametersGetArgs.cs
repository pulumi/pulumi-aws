// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Pipes.Inputs
{

    public sealed class PipeTargetParametersRedshiftDataParametersGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the database. Required when authenticating using temporary credentials.
        /// </summary>
        [Input("database", required: true)]
        public Input<string> Database { get; set; } = null!;

        /// <summary>
        /// The database user name. Required when authenticating using temporary credentials.
        /// </summary>
        [Input("dbUser")]
        public Input<string>? DbUser { get; set; }

        /// <summary>
        /// The name or ARN of the secret that enables access to the database. Required when authenticating using Secrets Manager.
        /// </summary>
        [Input("secretManagerArn")]
        public Input<string>? SecretManagerArn { get; set; }

        [Input("sqls", required: true)]
        private InputList<string>? _sqls;

        /// <summary>
        /// List of SQL statements text to run, each of maximum length of 100,000.
        /// </summary>
        public InputList<string> Sqls
        {
            get => _sqls ?? (_sqls = new InputList<string>());
            set => _sqls = value;
        }

        /// <summary>
        /// The name of the SQL statement. You can name the SQL statement when you create it to identify the query.
        /// </summary>
        [Input("statementName")]
        public Input<string>? StatementName { get; set; }

        /// <summary>
        /// Indicates whether to send an event back to EventBridge after the SQL statement runs.
        /// </summary>
        [Input("withEvent")]
        public Input<bool>? WithEvent { get; set; }

        public PipeTargetParametersRedshiftDataParametersGetArgs()
        {
        }
        public static new PipeTargetParametersRedshiftDataParametersGetArgs Empty => new PipeTargetParametersRedshiftDataParametersGetArgs();
    }
}
