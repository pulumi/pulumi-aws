// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Pipes.Inputs
{

    public sealed class PipeTargetParametersEcsTaskParametersArgs : global::Pulumi.ResourceArgs
    {
        [Input("capacityProviderStrategies")]
        private InputList<Inputs.PipeTargetParametersEcsTaskParametersCapacityProviderStrategyArgs>? _capacityProviderStrategies;
        public InputList<Inputs.PipeTargetParametersEcsTaskParametersCapacityProviderStrategyArgs> CapacityProviderStrategies
        {
            get => _capacityProviderStrategies ?? (_capacityProviderStrategies = new InputList<Inputs.PipeTargetParametersEcsTaskParametersCapacityProviderStrategyArgs>());
            set => _capacityProviderStrategies = value;
        }

        [Input("enableEcsManagedTags")]
        public Input<bool>? EnableEcsManagedTags { get; set; }

        [Input("enableExecuteCommand")]
        public Input<bool>? EnableExecuteCommand { get; set; }

        [Input("group")]
        public Input<string>? Group { get; set; }

        [Input("launchType")]
        public Input<string>? LaunchType { get; set; }

        [Input("networkConfiguration")]
        public Input<Inputs.PipeTargetParametersEcsTaskParametersNetworkConfigurationArgs>? NetworkConfiguration { get; set; }

        [Input("overrides")]
        public Input<Inputs.PipeTargetParametersEcsTaskParametersOverridesArgs>? Overrides { get; set; }

        [Input("placementConstraints")]
        private InputList<Inputs.PipeTargetParametersEcsTaskParametersPlacementConstraintArgs>? _placementConstraints;
        public InputList<Inputs.PipeTargetParametersEcsTaskParametersPlacementConstraintArgs> PlacementConstraints
        {
            get => _placementConstraints ?? (_placementConstraints = new InputList<Inputs.PipeTargetParametersEcsTaskParametersPlacementConstraintArgs>());
            set => _placementConstraints = value;
        }

        [Input("placementStrategies")]
        private InputList<Inputs.PipeTargetParametersEcsTaskParametersPlacementStrategyArgs>? _placementStrategies;
        public InputList<Inputs.PipeTargetParametersEcsTaskParametersPlacementStrategyArgs> PlacementStrategies
        {
            get => _placementStrategies ?? (_placementStrategies = new InputList<Inputs.PipeTargetParametersEcsTaskParametersPlacementStrategyArgs>());
            set => _placementStrategies = value;
        }

        [Input("platformVersion")]
        public Input<string>? PlatformVersion { get; set; }

        [Input("propagateTags")]
        public Input<string>? PropagateTags { get; set; }

        [Input("referenceId")]
        public Input<string>? ReferenceId { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("taskCount")]
        public Input<int>? TaskCount { get; set; }

        [Input("taskDefinitionArn", required: true)]
        public Input<string> TaskDefinitionArn { get; set; } = null!;

        public PipeTargetParametersEcsTaskParametersArgs()
        {
        }
        public static new PipeTargetParametersEcsTaskParametersArgs Empty => new PipeTargetParametersEcsTaskParametersArgs();
    }
}
