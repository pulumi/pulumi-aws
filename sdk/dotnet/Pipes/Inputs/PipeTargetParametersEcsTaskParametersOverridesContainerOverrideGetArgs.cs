// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Pipes.Inputs
{

    public sealed class PipeTargetParametersEcsTaskParametersOverridesContainerOverrideGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("commands")]
        private InputList<string>? _commands;

        /// <summary>
        /// List of commands to send to the container that overrides the default command from the Docker image or the task definition.
        /// </summary>
        public InputList<string> Commands
        {
            get => _commands ?? (_commands = new InputList<string>());
            set => _commands = value;
        }

        /// <summary>
        /// The cpu override for the task.
        /// </summary>
        [Input("cpu")]
        public Input<int>? Cpu { get; set; }

        [Input("environmentFiles")]
        private InputList<Inputs.PipeTargetParametersEcsTaskParametersOverridesContainerOverrideEnvironmentFileGetArgs>? _environmentFiles;

        /// <summary>
        /// A list of files containing the environment variables to pass to a container, instead of the value from the container definition. Detailed below.
        /// </summary>
        public InputList<Inputs.PipeTargetParametersEcsTaskParametersOverridesContainerOverrideEnvironmentFileGetArgs> EnvironmentFiles
        {
            get => _environmentFiles ?? (_environmentFiles = new InputList<Inputs.PipeTargetParametersEcsTaskParametersOverridesContainerOverrideEnvironmentFileGetArgs>());
            set => _environmentFiles = value;
        }

        [Input("environments")]
        private InputList<Inputs.PipeTargetParametersEcsTaskParametersOverridesContainerOverrideEnvironmentGetArgs>? _environments;

        /// <summary>
        /// The environment variables to send to the container. You can add new environment variables, which are added to the container at launch, or you can override the existing environment variables from the Docker image or the task definition. Environment variables cannot start with " AWS Batch ". This naming convention is reserved for variables that AWS Batch sets. Detailed below.
        /// </summary>
        public InputList<Inputs.PipeTargetParametersEcsTaskParametersOverridesContainerOverrideEnvironmentGetArgs> Environments
        {
            get => _environments ?? (_environments = new InputList<Inputs.PipeTargetParametersEcsTaskParametersOverridesContainerOverrideEnvironmentGetArgs>());
            set => _environments = value;
        }

        /// <summary>
        /// The memory override for the task.
        /// </summary>
        [Input("memory")]
        public Input<int>? Memory { get; set; }

        /// <summary>
        /// The soft limit (in MiB) of memory to reserve for the container, instead of the default value from the task definition. You must also specify a container name.
        /// </summary>
        [Input("memoryReservation")]
        public Input<int>? MemoryReservation { get; set; }

        /// <summary>
        /// Name of the pipe. If omitted, the provider will assign a random, unique name. Conflicts with `name_prefix`.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("resourceRequirements")]
        private InputList<Inputs.PipeTargetParametersEcsTaskParametersOverridesContainerOverrideResourceRequirementGetArgs>? _resourceRequirements;

        /// <summary>
        /// The type and amount of resources to assign to a container. This overrides the settings in the job definition. The supported resources include GPU, MEMORY, and VCPU. Detailed below.
        /// </summary>
        public InputList<Inputs.PipeTargetParametersEcsTaskParametersOverridesContainerOverrideResourceRequirementGetArgs> ResourceRequirements
        {
            get => _resourceRequirements ?? (_resourceRequirements = new InputList<Inputs.PipeTargetParametersEcsTaskParametersOverridesContainerOverrideResourceRequirementGetArgs>());
            set => _resourceRequirements = value;
        }

        public PipeTargetParametersEcsTaskParametersOverridesContainerOverrideGetArgs()
        {
        }
        public static new PipeTargetParametersEcsTaskParametersOverridesContainerOverrideGetArgs Empty => new PipeTargetParametersEcsTaskParametersOverridesContainerOverrideGetArgs();
    }
}
