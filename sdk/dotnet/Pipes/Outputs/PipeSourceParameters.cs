// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Pipes.Outputs
{

    [OutputType]
    public sealed class PipeSourceParameters
    {
        /// <summary>
        /// The parameters for using an Active MQ broker as a source. Detailed below.
        /// </summary>
        public readonly Outputs.PipeSourceParametersActivemqBrokerParameters? ActivemqBrokerParameters;
        /// <summary>
        /// The parameters for using a DynamoDB stream as a source.  Detailed below.
        /// </summary>
        public readonly Outputs.PipeSourceParametersDynamodbStreamParameters? DynamodbStreamParameters;
        /// <summary>
        /// The collection of event patterns used to [filter events](https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-pipes-event-filtering.html). Detailed below.
        /// </summary>
        public readonly Outputs.PipeSourceParametersFilterCriteria? FilterCriteria;
        /// <summary>
        /// The parameters for using a Kinesis stream as a source. Detailed below.
        /// </summary>
        public readonly Outputs.PipeSourceParametersKinesisStreamParameters? KinesisStreamParameters;
        /// <summary>
        /// The parameters for using an MSK stream as a source. Detailed below.
        /// </summary>
        public readonly Outputs.PipeSourceParametersManagedStreamingKafkaParameters? ManagedStreamingKafkaParameters;
        /// <summary>
        /// The parameters for using a Rabbit MQ broker as a source. Detailed below.
        /// </summary>
        public readonly Outputs.PipeSourceParametersRabbitmqBrokerParameters? RabbitmqBrokerParameters;
        /// <summary>
        /// The parameters for using a self-managed Apache Kafka stream as a source. Detailed below.
        /// </summary>
        public readonly Outputs.PipeSourceParametersSelfManagedKafkaParameters? SelfManagedKafkaParameters;
        /// <summary>
        /// The parameters for using a Amazon SQS stream as a source. Detailed below.
        /// </summary>
        public readonly Outputs.PipeSourceParametersSqsQueueParameters? SqsQueueParameters;

        [OutputConstructor]
        private PipeSourceParameters(
            Outputs.PipeSourceParametersActivemqBrokerParameters? activemqBrokerParameters,

            Outputs.PipeSourceParametersDynamodbStreamParameters? dynamodbStreamParameters,

            Outputs.PipeSourceParametersFilterCriteria? filterCriteria,

            Outputs.PipeSourceParametersKinesisStreamParameters? kinesisStreamParameters,

            Outputs.PipeSourceParametersManagedStreamingKafkaParameters? managedStreamingKafkaParameters,

            Outputs.PipeSourceParametersRabbitmqBrokerParameters? rabbitmqBrokerParameters,

            Outputs.PipeSourceParametersSelfManagedKafkaParameters? selfManagedKafkaParameters,

            Outputs.PipeSourceParametersSqsQueueParameters? sqsQueueParameters)
        {
            ActivemqBrokerParameters = activemqBrokerParameters;
            DynamodbStreamParameters = dynamodbStreamParameters;
            FilterCriteria = filterCriteria;
            KinesisStreamParameters = kinesisStreamParameters;
            ManagedStreamingKafkaParameters = managedStreamingKafkaParameters;
            RabbitmqBrokerParameters = rabbitmqBrokerParameters;
            SelfManagedKafkaParameters = selfManagedKafkaParameters;
            SqsQueueParameters = sqsQueueParameters;
        }
    }
}
