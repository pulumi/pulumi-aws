// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.AppStream
{
    [AwsResourceType("aws:appstream/directoryConfig:DirectoryConfig")]
    public partial class DirectoryConfig : global::Pulumi.CustomResource
    {
        [Output("createdTime")]
        public Output<string> CreatedTime { get; private set; } = null!;

        [Output("directoryName")]
        public Output<string> DirectoryName { get; private set; } = null!;

        [Output("organizationalUnitDistinguishedNames")]
        public Output<ImmutableArray<string>> OrganizationalUnitDistinguishedNames { get; private set; } = null!;

        [Output("serviceAccountCredentials")]
        public Output<Outputs.DirectoryConfigServiceAccountCredentials> ServiceAccountCredentials { get; private set; } = null!;


        /// <summary>
        /// Create a DirectoryConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DirectoryConfig(string name, DirectoryConfigArgs args, CustomResourceOptions? options = null)
            : base("aws:appstream/directoryConfig:DirectoryConfig", name, args ?? new DirectoryConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DirectoryConfig(string name, Input<string> id, DirectoryConfigState? state = null, CustomResourceOptions? options = null)
            : base("aws:appstream/directoryConfig:DirectoryConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DirectoryConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DirectoryConfig Get(string name, Input<string> id, DirectoryConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new DirectoryConfig(name, id, state, options);
        }
    }

    public sealed class DirectoryConfigArgs : global::Pulumi.ResourceArgs
    {
        [Input("directoryName", required: true)]
        public Input<string> DirectoryName { get; set; } = null!;

        [Input("organizationalUnitDistinguishedNames", required: true)]
        private InputList<string>? _organizationalUnitDistinguishedNames;
        public InputList<string> OrganizationalUnitDistinguishedNames
        {
            get => _organizationalUnitDistinguishedNames ?? (_organizationalUnitDistinguishedNames = new InputList<string>());
            set => _organizationalUnitDistinguishedNames = value;
        }

        [Input("serviceAccountCredentials", required: true)]
        public Input<Inputs.DirectoryConfigServiceAccountCredentialsArgs> ServiceAccountCredentials { get; set; } = null!;

        public DirectoryConfigArgs()
        {
        }
        public static new DirectoryConfigArgs Empty => new DirectoryConfigArgs();
    }

    public sealed class DirectoryConfigState : global::Pulumi.ResourceArgs
    {
        [Input("createdTime")]
        public Input<string>? CreatedTime { get; set; }

        [Input("directoryName")]
        public Input<string>? DirectoryName { get; set; }

        [Input("organizationalUnitDistinguishedNames")]
        private InputList<string>? _organizationalUnitDistinguishedNames;
        public InputList<string> OrganizationalUnitDistinguishedNames
        {
            get => _organizationalUnitDistinguishedNames ?? (_organizationalUnitDistinguishedNames = new InputList<string>());
            set => _organizationalUnitDistinguishedNames = value;
        }

        [Input("serviceAccountCredentials")]
        public Input<Inputs.DirectoryConfigServiceAccountCredentialsGetArgs>? ServiceAccountCredentials { get; set; }

        public DirectoryConfigState()
        {
        }
        public static new DirectoryConfigState Empty => new DirectoryConfigState();
    }
}
