// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.AppStream
{
    /// <summary>
    /// Manages an AppStream User Stack association.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testStack = new Aws.AppStream.Stack("testStack");
    /// 
    ///     var testUser = new Aws.AppStream.User("testUser", new()
    ///     {
    ///         AuthenticationType = "USERPOOL",
    ///         UserName = "EMAIL",
    ///     });
    /// 
    ///     var testUserStackAssociation = new Aws.AppStream.UserStackAssociation("testUserStackAssociation", new()
    ///     {
    ///         AuthenticationType = testUser.AuthenticationType,
    ///         StackName = testStack.Name,
    ///         UserName = testUser.UserName,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// AppStream User Stack Association can be imported by using the `user_name`, `authentication_type`, and `stack_name`, separated by a slash (`/`), e.g.,
    /// 
    /// ```sh
    ///  $ pulumi import aws:appstream/userStackAssociation:UserStackAssociation example userName/auhtenticationType/stackName
    /// ```
    /// </summary>
    [AwsResourceType("aws:appstream/userStackAssociation:UserStackAssociation")]
    public partial class UserStackAssociation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Authentication type for the user.
        /// </summary>
        [Output("authenticationType")]
        public Output<string> AuthenticationType { get; private set; } = null!;

        /// <summary>
        /// Whether a welcome email is sent to a user after the user is created in the user pool.
        /// </summary>
        [Output("sendEmailNotification")]
        public Output<bool?> SendEmailNotification { get; private set; } = null!;

        /// <summary>
        /// Name of the stack that is associated with the user.
        /// </summary>
        [Output("stackName")]
        public Output<string> StackName { get; private set; } = null!;

        /// <summary>
        /// Email address of the user who is associated with the stack.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Output("userName")]
        public Output<string> UserName { get; private set; } = null!;


        /// <summary>
        /// Create a UserStackAssociation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public UserStackAssociation(string name, UserStackAssociationArgs args, CustomResourceOptions? options = null)
            : base("aws:appstream/userStackAssociation:UserStackAssociation", name, args ?? new UserStackAssociationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private UserStackAssociation(string name, Input<string> id, UserStackAssociationState? state = null, CustomResourceOptions? options = null)
            : base("aws:appstream/userStackAssociation:UserStackAssociation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing UserStackAssociation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static UserStackAssociation Get(string name, Input<string> id, UserStackAssociationState? state = null, CustomResourceOptions? options = null)
        {
            return new UserStackAssociation(name, id, state, options);
        }
    }

    public sealed class UserStackAssociationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Authentication type for the user.
        /// </summary>
        [Input("authenticationType", required: true)]
        public Input<string> AuthenticationType { get; set; } = null!;

        /// <summary>
        /// Whether a welcome email is sent to a user after the user is created in the user pool.
        /// </summary>
        [Input("sendEmailNotification")]
        public Input<bool>? SendEmailNotification { get; set; }

        /// <summary>
        /// Name of the stack that is associated with the user.
        /// </summary>
        [Input("stackName", required: true)]
        public Input<string> StackName { get; set; } = null!;

        /// <summary>
        /// Email address of the user who is associated with the stack.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("userName", required: true)]
        public Input<string> UserName { get; set; } = null!;

        public UserStackAssociationArgs()
        {
        }
        public static new UserStackAssociationArgs Empty => new UserStackAssociationArgs();
    }

    public sealed class UserStackAssociationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Authentication type for the user.
        /// </summary>
        [Input("authenticationType")]
        public Input<string>? AuthenticationType { get; set; }

        /// <summary>
        /// Whether a welcome email is sent to a user after the user is created in the user pool.
        /// </summary>
        [Input("sendEmailNotification")]
        public Input<bool>? SendEmailNotification { get; set; }

        /// <summary>
        /// Name of the stack that is associated with the user.
        /// </summary>
        [Input("stackName")]
        public Input<string>? StackName { get; set; }

        /// <summary>
        /// Email address of the user who is associated with the stack.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("userName")]
        public Input<string>? UserName { get; set; }

        public UserStackAssociationState()
        {
        }
        public static new UserStackAssociationState Empty => new UserStackAssociationState();
    }
}
