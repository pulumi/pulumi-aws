// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.MemoryDb
{
    public static class GetSnapshot
    {
        /// <summary>
        /// Provides information about a MemoryDB Snapshot.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.MemoryDb.GetSnapshot.Invoke(new()
        ///     {
        ///         Name = "my-snapshot",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetSnapshotResult> InvokeAsync(GetSnapshotArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSnapshotResult>("aws:memorydb/getSnapshot:getSnapshot", args ?? new GetSnapshotArgs(), options.WithDefaults());

        /// <summary>
        /// Provides information about a MemoryDB Snapshot.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.MemoryDb.GetSnapshot.Invoke(new()
        ///     {
        ///         Name = "my-snapshot",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetSnapshotResult> Invoke(GetSnapshotInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSnapshotResult>("aws:memorydb/getSnapshot:getSnapshot", args ?? new GetSnapshotInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSnapshotArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the snapshot.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("tags")]
        private Dictionary<string, string>? _tags;

        /// <summary>
        /// Map of tags assigned to the snapshot.
        /// </summary>
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetSnapshotArgs()
        {
        }
        public static new GetSnapshotArgs Empty => new GetSnapshotArgs();
    }

    public sealed class GetSnapshotInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the snapshot.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Map of tags assigned to the snapshot.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetSnapshotInvokeArgs()
        {
        }
        public static new GetSnapshotInvokeArgs Empty => new GetSnapshotInvokeArgs();
    }


    [OutputType]
    public sealed class GetSnapshotResult
    {
        /// <summary>
        /// ARN of the snapshot.
        /// </summary>
        public readonly string Arn;
        /// <summary>
        /// The configuration of the cluster from which the snapshot was taken.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSnapshotClusterConfigurationResult> ClusterConfigurations;
        /// <summary>
        /// Name of the MemoryDB cluster that this snapshot was taken from.
        /// </summary>
        public readonly string ClusterName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// ARN of the KMS key used to encrypt the snapshot at rest.
        /// </summary>
        public readonly string KmsKeyArn;
        /// <summary>
        /// Name of the cluster.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Whether the snapshot is from an automatic backup (`automated`) or was created manually (`manual`).
        /// </summary>
        public readonly string Source;
        /// <summary>
        /// Map of tags assigned to the snapshot.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;

        [OutputConstructor]
        private GetSnapshotResult(
            string arn,

            ImmutableArray<Outputs.GetSnapshotClusterConfigurationResult> clusterConfigurations,

            string clusterName,

            string id,

            string kmsKeyArn,

            string name,

            string source,

            ImmutableDictionary<string, string> tags)
        {
            Arn = arn;
            ClusterConfigurations = clusterConfigurations;
            ClusterName = clusterName;
            Id = id;
            KmsKeyArn = kmsKeyArn;
            Name = name;
            Source = source;
            Tags = tags;
        }
    }
}
