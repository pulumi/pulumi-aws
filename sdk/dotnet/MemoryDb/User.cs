// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.MemoryDb
{
    /// <summary>
    /// Provides a MemoryDB User.
    /// 
    /// More information about users and ACL-s can be found in the [MemoryDB User Guide](https://docs.aws.amazon.com/memorydb/latest/devguide/clusters.acls.html).
    /// 
    /// &gt; **Note:** All arguments including the username and passwords will be stored in the raw state as plain-text.
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// using Random = Pulumi.Random;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleRandomPassword = new Random.RandomPassword("exampleRandomPassword", new()
    ///     {
    ///         Length = 16,
    ///     });
    /// 
    ///     var exampleUser = new Aws.MemoryDb.User("exampleUser", new()
    ///     {
    ///         UserName = "my-user",
    ///         AccessString = "on ~* &amp;* +@all",
    ///         AuthenticationMode = new Aws.MemoryDb.Inputs.UserAuthenticationModeArgs
    ///         {
    ///             Type = "password",
    ///             Passwords = new[]
    ///             {
    ///                 exampleRandomPassword.Result,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import a user using the `user_name`. For example:
    /// 
    /// ```sh
    ///  $ pulumi import aws:memorydb/user:User example my-user
    /// ```
    ///  The `passwords` are not available for imported resources, as this information cannot be read back from the MemoryDB API.
    /// </summary>
    [AwsResourceType("aws:memorydb/user:User")]
    public partial class User : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The access permissions string used for this user.
        /// </summary>
        [Output("accessString")]
        public Output<string> AccessString { get; private set; } = null!;

        /// <summary>
        /// The ARN of the user.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// Denotes the user's authentication properties. Detailed below.
        /// </summary>
        [Output("authenticationMode")]
        public Output<Outputs.UserAuthenticationMode> AuthenticationMode { get; private set; } = null!;

        /// <summary>
        /// The minimum engine version supported for the user.
        /// </summary>
        [Output("minimumEngineVersion")]
        public Output<string> MinimumEngineVersion { get; private set; } = null!;

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        /// <summary>
        /// Name of the MemoryDB user. Up to 40 characters.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Output("userName")]
        public Output<string> UserName { get; private set; } = null!;


        /// <summary>
        /// Create a User resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public User(string name, UserArgs args, CustomResourceOptions? options = null)
            : base("aws:memorydb/user:User", name, args ?? new UserArgs(), MakeResourceOptions(options, ""))
        {
        }

        private User(string name, Input<string> id, UserState? state = null, CustomResourceOptions? options = null)
            : base("aws:memorydb/user:User", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing User resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static User Get(string name, Input<string> id, UserState? state = null, CustomResourceOptions? options = null)
        {
            return new User(name, id, state, options);
        }
    }

    public sealed class UserArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The access permissions string used for this user.
        /// </summary>
        [Input("accessString", required: true)]
        public Input<string> AccessString { get; set; } = null!;

        /// <summary>
        /// Denotes the user's authentication properties. Detailed below.
        /// </summary>
        [Input("authenticationMode", required: true)]
        public Input<Inputs.UserAuthenticationModeArgs> AuthenticationMode { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Name of the MemoryDB user. Up to 40 characters.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("userName", required: true)]
        public Input<string> UserName { get; set; } = null!;

        public UserArgs()
        {
        }
        public static new UserArgs Empty => new UserArgs();
    }

    public sealed class UserState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The access permissions string used for this user.
        /// </summary>
        [Input("accessString")]
        public Input<string>? AccessString { get; set; }

        /// <summary>
        /// The ARN of the user.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// Denotes the user's authentication properties. Detailed below.
        /// </summary>
        [Input("authenticationMode")]
        public Input<Inputs.UserAuthenticationModeGetArgs>? AuthenticationMode { get; set; }

        /// <summary>
        /// The minimum engine version supported for the user.
        /// </summary>
        [Input("minimumEngineVersion")]
        public Input<string>? MinimumEngineVersion { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        /// <summary>
        /// Name of the MemoryDB user. Up to 40 characters.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("userName")]
        public Input<string>? UserName { get; set; }

        public UserState()
        {
        }
        public static new UserState Empty => new UserState();
    }
}
