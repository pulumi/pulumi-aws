// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.MemoryDb.Inputs
{

    public sealed class SnapshotClusterConfigurationGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description for the cluster.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Version number of the Redis engine used by the cluster.
        /// </summary>
        [Input("engineVersion")]
        public Input<string>? EngineVersion { get; set; }

        /// <summary>
        /// The weekly time range during which maintenance on the cluster is performed.
        /// </summary>
        [Input("maintenanceWindow")]
        public Input<string>? MaintenanceWindow { get; set; }

        /// <summary>
        /// Name of the snapshot. If omitted, the provider will assign a random, unique name. Conflicts with `name_prefix`.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Compute and memory capacity of the nodes in the cluster.
        /// </summary>
        [Input("nodeType")]
        public Input<string>? NodeType { get; set; }

        /// <summary>
        /// Number of shards in the cluster.
        /// </summary>
        [Input("numShards")]
        public Input<int>? NumShards { get; set; }

        /// <summary>
        /// Name of the parameter group associated with the cluster.
        /// </summary>
        [Input("parameterGroupName")]
        public Input<string>? ParameterGroupName { get; set; }

        /// <summary>
        /// Port number on which the cluster accepts connections.
        /// </summary>
        [Input("port")]
        public Input<int>? Port { get; set; }

        /// <summary>
        /// Number of days for which MemoryDB retains automatic snapshots before deleting them.
        /// </summary>
        [Input("snapshotRetentionLimit")]
        public Input<int>? SnapshotRetentionLimit { get; set; }

        /// <summary>
        /// The daily time range (in UTC) during which MemoryDB begins taking a daily snapshot of the shard.
        /// </summary>
        [Input("snapshotWindow")]
        public Input<string>? SnapshotWindow { get; set; }

        /// <summary>
        /// Name of the subnet group used by the cluster.
        /// </summary>
        [Input("subnetGroupName")]
        public Input<string>? SubnetGroupName { get; set; }

        /// <summary>
        /// ARN of the SNS topic to which cluster notifications are sent.
        /// </summary>
        [Input("topicArn")]
        public Input<string>? TopicArn { get; set; }

        /// <summary>
        /// The VPC in which the cluster exists.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public SnapshotClusterConfigurationGetArgs()
        {
        }
        public static new SnapshotClusterConfigurationGetArgs Empty => new SnapshotClusterConfigurationGetArgs();
    }
}
