// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Billing
{
    public static class GetViews
    {
        /// <summary>
        /// Provides details about an AWS Billing Views.
        /// 
        /// ## Example Usage
        /// 
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Billing.GetViews.Invoke(new()
        ///     {
        ///         BillingViewTypes = new[]
        ///         {
        ///             "PRIMARY",
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["primaryViewArnByTypes"] = example.Apply(getViewsResult =&gt; getViewsResult.BillingViews[0]?.Arn),
        ///     };
        /// });
        /// ```
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Billing.GetViews.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["viewArns"] = .Select(view =&gt; 
        ///         {
        ///             return view.Arn;
        ///         }).ToList(),
        ///         ["primaryViewArnByName"] = .Where(view =&gt; view.Name == "Primary View").Select(view =&gt; 
        ///         {
        ///             return view.Arn;
        ///         }).ToList()[0],
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetViewsResult> InvokeAsync(GetViewsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetViewsResult>("aws:billing/getViews:getViews", args ?? new GetViewsArgs(), options.WithDefaults());

        /// <summary>
        /// Provides details about an AWS Billing Views.
        /// 
        /// ## Example Usage
        /// 
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Billing.GetViews.Invoke(new()
        ///     {
        ///         BillingViewTypes = new[]
        ///         {
        ///             "PRIMARY",
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["primaryViewArnByTypes"] = example.Apply(getViewsResult =&gt; getViewsResult.BillingViews[0]?.Arn),
        ///     };
        /// });
        /// ```
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Billing.GetViews.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["viewArns"] = .Select(view =&gt; 
        ///         {
        ///             return view.Arn;
        ///         }).ToList(),
        ///         ["primaryViewArnByName"] = .Where(view =&gt; view.Name == "Primary View").Select(view =&gt; 
        ///         {
        ///             return view.Arn;
        ///         }).ToList()[0],
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetViewsResult> Invoke(GetViewsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetViewsResult>("aws:billing/getViews:getViews", args ?? new GetViewsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Provides details about an AWS Billing Views.
        /// 
        /// ## Example Usage
        /// 
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Billing.GetViews.Invoke(new()
        ///     {
        ///         BillingViewTypes = new[]
        ///         {
        ///             "PRIMARY",
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["primaryViewArnByTypes"] = example.Apply(getViewsResult =&gt; getViewsResult.BillingViews[0]?.Arn),
        ///     };
        /// });
        /// ```
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Billing.GetViews.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["viewArns"] = .Select(view =&gt; 
        ///         {
        ///             return view.Arn;
        ///         }).ToList(),
        ///         ["primaryViewArnByName"] = .Where(view =&gt; view.Name == "Primary View").Select(view =&gt; 
        ///         {
        ///             return view.Arn;
        ///         }).ToList()[0],
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetViewsResult> Invoke(GetViewsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetViewsResult>("aws:billing/getViews:getViews", args ?? new GetViewsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetViewsArgs : global::Pulumi.InvokeArgs
    {
        [Input("billingViewTypes")]
        private List<string>? _billingViewTypes;

        /// <summary>
        /// List of billing view types to retrieve. Valid values are `PRIMARY`, `BILLING_GROUP`, `CUSTOM`.
        /// </summary>
        public List<string> BillingViewTypes
        {
            get => _billingViewTypes ?? (_billingViewTypes = new List<string>());
            set => _billingViewTypes = value;
        }

        public GetViewsArgs()
        {
        }
        public static new GetViewsArgs Empty => new GetViewsArgs();
    }

    public sealed class GetViewsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("billingViewTypes")]
        private InputList<string>? _billingViewTypes;

        /// <summary>
        /// List of billing view types to retrieve. Valid values are `PRIMARY`, `BILLING_GROUP`, `CUSTOM`.
        /// </summary>
        public InputList<string> BillingViewTypes
        {
            get => _billingViewTypes ?? (_billingViewTypes = new InputList<string>());
            set => _billingViewTypes = value;
        }

        public GetViewsInvokeArgs()
        {
        }
        public static new GetViewsInvokeArgs Empty => new GetViewsInvokeArgs();
    }


    [OutputType]
    public sealed class GetViewsResult
    {
        public readonly ImmutableArray<string> BillingViewTypes;
        /// <summary>
        /// List of billing view objects with the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetViewsBillingViewResult> BillingViews;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetViewsResult(
            ImmutableArray<string> billingViewTypes,

            ImmutableArray<Outputs.GetViewsBillingViewResult> billingViews,

            string id)
        {
            BillingViewTypes = billingViewTypes;
            BillingViews = billingViews;
            Id = id;
        }
    }
}
