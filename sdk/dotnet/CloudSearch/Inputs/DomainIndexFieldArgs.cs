// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CloudSearch.Inputs
{

    public sealed class DomainIndexFieldArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The analysis scheme you want to use for a `text` field. The analysis scheme specifies the language-specific text processing options that are used during indexing.
        /// </summary>
        [Input("analysisScheme")]
        public Input<string>? AnalysisScheme { get; set; }

        /// <summary>
        /// The default value for the field. This value is used when no value is specified for the field in the document data.
        /// </summary>
        [Input("defaultValue")]
        public Input<string>? DefaultValue { get; set; }

        /// <summary>
        /// You can get facet information by enabling this.
        /// </summary>
        [Input("facet")]
        public Input<bool>? Facet { get; set; }

        /// <summary>
        /// You can highlight information.
        /// </summary>
        [Input("highlight")]
        public Input<bool>? Highlight { get; set; }

        /// <summary>
        /// A unique name for the field. Field names must begin with a letter and be at least 3 and no more than 64 characters long. The allowed characters are: `a`-`z` (lower-case letters), `0`-`9`, and `_` (underscore). The name `score` is reserved and cannot be used as a field name.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// You can enable returning the value of all searchable fields.
        /// </summary>
        [Input("return")]
        public Input<bool>? Return { get; set; }

        /// <summary>
        /// You can set whether this index should be searchable or not.
        /// </summary>
        [Input("search")]
        public Input<bool>? Search { get; set; }

        /// <summary>
        /// You can enable the property to be sortable.
        /// </summary>
        [Input("sort")]
        public Input<bool>? Sort { get; set; }

        /// <summary>
        /// The field type. Valid values: `date`, `date-array`, `double`, `double-array`, `int`, `int-array`, `literal`, `literal-array`, `text`, `text-array`.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public DomainIndexFieldArgs()
        {
        }
    }
}
