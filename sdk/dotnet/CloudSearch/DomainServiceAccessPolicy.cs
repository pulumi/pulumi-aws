// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CloudSearch
{
    /// <summary>
    /// Provides an CloudSearch domain service access policy resource.
    /// 
    /// The provider waits for the domain service access policy to become `Active` when applying a configuration.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleDomain = new Aws.CloudSearch.Domain("exampleDomain");
    /// 
    ///     var examplePolicyDocument = Aws.Iam.GetPolicyDocument.Invoke(new()
    ///     {
    ///         Statements = new[]
    ///         {
    ///             new Aws.Iam.Inputs.GetPolicyDocumentStatementInputArgs
    ///             {
    ///                 Sid = "search_only",
    ///                 Effect = "Allow",
    ///                 Principals = new[]
    ///                 {
    ///                     new Aws.Iam.Inputs.GetPolicyDocumentStatementPrincipalInputArgs
    ///                     {
    ///                         Type = "*",
    ///                         Identifiers = new[]
    ///                         {
    ///                             "*",
    ///                         },
    ///                     },
    ///                 },
    ///                 Actions = new[]
    ///                 {
    ///                     "cloudsearch:search",
    ///                     "cloudsearch:document",
    ///                 },
    ///                 Conditions = new[]
    ///                 {
    ///                     new Aws.Iam.Inputs.GetPolicyDocumentStatementConditionInputArgs
    ///                     {
    ///                         Test = "IpAddress",
    ///                         Variable = "aws:SourceIp",
    ///                         Values = new[]
    ///                         {
    ///                             "192.0.2.0/32",
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    ///     var exampleDomainServiceAccessPolicy = new Aws.CloudSearch.DomainServiceAccessPolicy("exampleDomainServiceAccessPolicy", new()
    ///     {
    ///         DomainName = exampleDomain.Id,
    ///         AccessPolicy = examplePolicyDocument.Apply(getPolicyDocumentResult =&gt; getPolicyDocumentResult.Json),
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// CloudSearch domain service access policies can be imported using the domain name, e.g.,
    /// 
    /// ```sh
    ///  $ pulumi import aws:cloudsearch/domainServiceAccessPolicy:DomainServiceAccessPolicy example example-domain
    /// ```
    /// </summary>
    [AwsResourceType("aws:cloudsearch/domainServiceAccessPolicy:DomainServiceAccessPolicy")]
    public partial class DomainServiceAccessPolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The access rules you want to configure. These rules replace any existing rules. See the [AWS documentation](https://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-access.html) for details.
        /// </summary>
        [Output("accessPolicy")]
        public Output<string> AccessPolicy { get; private set; } = null!;

        /// <summary>
        /// The CloudSearch domain name the policy applies to.
        /// </summary>
        [Output("domainName")]
        public Output<string> DomainName { get; private set; } = null!;


        /// <summary>
        /// Create a DomainServiceAccessPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DomainServiceAccessPolicy(string name, DomainServiceAccessPolicyArgs args, CustomResourceOptions? options = null)
            : base("aws:cloudsearch/domainServiceAccessPolicy:DomainServiceAccessPolicy", name, args ?? new DomainServiceAccessPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DomainServiceAccessPolicy(string name, Input<string> id, DomainServiceAccessPolicyState? state = null, CustomResourceOptions? options = null)
            : base("aws:cloudsearch/domainServiceAccessPolicy:DomainServiceAccessPolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DomainServiceAccessPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DomainServiceAccessPolicy Get(string name, Input<string> id, DomainServiceAccessPolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new DomainServiceAccessPolicy(name, id, state, options);
        }
    }

    public sealed class DomainServiceAccessPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The access rules you want to configure. These rules replace any existing rules. See the [AWS documentation](https://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-access.html) for details.
        /// </summary>
        [Input("accessPolicy", required: true)]
        public Input<string> AccessPolicy { get; set; } = null!;

        /// <summary>
        /// The CloudSearch domain name the policy applies to.
        /// </summary>
        [Input("domainName", required: true)]
        public Input<string> DomainName { get; set; } = null!;

        public DomainServiceAccessPolicyArgs()
        {
        }
        public static new DomainServiceAccessPolicyArgs Empty => new DomainServiceAccessPolicyArgs();
    }

    public sealed class DomainServiceAccessPolicyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The access rules you want to configure. These rules replace any existing rules. See the [AWS documentation](https://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-access.html) for details.
        /// </summary>
        [Input("accessPolicy")]
        public Input<string>? AccessPolicy { get; set; }

        /// <summary>
        /// The CloudSearch domain name the policy applies to.
        /// </summary>
        [Input("domainName")]
        public Input<string>? DomainName { get; set; }

        public DomainServiceAccessPolicyState()
        {
        }
        public static new DomainServiceAccessPolicyState Empty => new DomainServiceAccessPolicyState();
    }
}
