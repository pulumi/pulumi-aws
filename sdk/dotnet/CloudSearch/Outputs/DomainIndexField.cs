// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CloudSearch.Outputs
{

    [OutputType]
    public sealed class DomainIndexField
    {
        /// <summary>
        /// The analysis scheme you want to use for a `text` field. The analysis scheme specifies the language-specific text processing options that are used during indexing.
        /// </summary>
        public readonly string? AnalysisScheme;
        /// <summary>
        /// The default value for the field. This value is used when no value is specified for the field in the document data.
        /// </summary>
        public readonly string? DefaultValue;
        /// <summary>
        /// You can get facet information by enabling this.
        /// </summary>
        public readonly bool? Facet;
        /// <summary>
        /// You can highlight information.
        /// </summary>
        public readonly bool? Highlight;
        /// <summary>
        /// A unique name for the field. Field names must begin with a letter and be at least 3 and no more than 64 characters long. The allowed characters are: `a`-`z` (lower-case letters), `0`-`9`, and `_` (underscore). The name `score` is reserved and cannot be used as a field name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// You can enable returning the value of all searchable fields.
        /// </summary>
        public readonly bool? Return;
        /// <summary>
        /// You can set whether this index should be searchable or not.
        /// </summary>
        public readonly bool? Search;
        /// <summary>
        /// You can enable the property to be sortable.
        /// </summary>
        public readonly bool? Sort;
        /// <summary>
        /// A comma-separated list of source fields to map to the field. Specifying a source field copies data from one field to another, enabling you to use the same source data in different ways by configuring different options for the fields.
        /// </summary>
        public readonly string? SourceFields;
        /// <summary>
        /// The field type. Valid values: `date`, `date-array`, `double`, `double-array`, `int`, `int-array`, `literal`, `literal-array`, `text`, `text-array`.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private DomainIndexField(
            string? analysisScheme,

            string? defaultValue,

            bool? facet,

            bool? highlight,

            string name,

            bool? @return,

            bool? search,

            bool? sort,

            string? sourceFields,

            string type)
        {
            AnalysisScheme = analysisScheme;
            DefaultValue = defaultValue;
            Facet = facet;
            Highlight = highlight;
            Name = name;
            Return = @return;
            Search = search;
            Sort = sort;
            SourceFields = sourceFields;
            Type = type;
        }
    }
}
