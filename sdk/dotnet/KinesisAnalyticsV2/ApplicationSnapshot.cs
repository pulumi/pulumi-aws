// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.KinesisAnalyticsV2
{
    /// <summary>
    /// Manages a Kinesis Analytics v2 Application Snapshot.
    /// Snapshots are the AWS implementation of [Flink Savepoints](https://ci.apache.org/projects/flink/flink-docs-release-1.11/ops/state/savepoints.html).
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.KinesisAnalyticsV2.ApplicationSnapshot("example", new()
    ///     {
    ///         ApplicationName = aws_kinesisanalyticsv2_application.Example.Name,
    ///         SnapshotName = "example-snapshot",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// terraform import {
    /// 
    ///  to = aws_kinesisanalyticsv2_application_snapshot.example
    /// 
    ///  id = "example-application/example-snapshot" } Using `pulumi import`, import `aws_kinesisanalyticsv2_application` using `application_name` together with `snapshot_name`. For exampleconsole % pulumi import aws_kinesisanalyticsv2_application_snapshot.example example-application/example-snapshot
    /// </summary>
    [AwsResourceType("aws:kinesisanalyticsv2/applicationSnapshot:ApplicationSnapshot")]
    public partial class ApplicationSnapshot : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of an existing  Kinesis Analytics v2 Application. Note that the application must be running for a snapshot to be created.
        /// </summary>
        [Output("applicationName")]
        public Output<string> ApplicationName { get; private set; } = null!;

        /// <summary>
        /// The current application version ID when the snapshot was created.
        /// </summary>
        [Output("applicationVersionId")]
        public Output<int> ApplicationVersionId { get; private set; } = null!;

        /// <summary>
        /// The timestamp of the application snapshot.
        /// </summary>
        [Output("snapshotCreationTimestamp")]
        public Output<string> SnapshotCreationTimestamp { get; private set; } = null!;

        /// <summary>
        /// The name of the application snapshot.
        /// </summary>
        [Output("snapshotName")]
        public Output<string> SnapshotName { get; private set; } = null!;


        /// <summary>
        /// Create a ApplicationSnapshot resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ApplicationSnapshot(string name, ApplicationSnapshotArgs args, CustomResourceOptions? options = null)
            : base("aws:kinesisanalyticsv2/applicationSnapshot:ApplicationSnapshot", name, args ?? new ApplicationSnapshotArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ApplicationSnapshot(string name, Input<string> id, ApplicationSnapshotState? state = null, CustomResourceOptions? options = null)
            : base("aws:kinesisanalyticsv2/applicationSnapshot:ApplicationSnapshot", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ApplicationSnapshot resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ApplicationSnapshot Get(string name, Input<string> id, ApplicationSnapshotState? state = null, CustomResourceOptions? options = null)
        {
            return new ApplicationSnapshot(name, id, state, options);
        }
    }

    public sealed class ApplicationSnapshotArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of an existing  Kinesis Analytics v2 Application. Note that the application must be running for a snapshot to be created.
        /// </summary>
        [Input("applicationName", required: true)]
        public Input<string> ApplicationName { get; set; } = null!;

        /// <summary>
        /// The name of the application snapshot.
        /// </summary>
        [Input("snapshotName", required: true)]
        public Input<string> SnapshotName { get; set; } = null!;

        public ApplicationSnapshotArgs()
        {
        }
        public static new ApplicationSnapshotArgs Empty => new ApplicationSnapshotArgs();
    }

    public sealed class ApplicationSnapshotState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of an existing  Kinesis Analytics v2 Application. Note that the application must be running for a snapshot to be created.
        /// </summary>
        [Input("applicationName")]
        public Input<string>? ApplicationName { get; set; }

        /// <summary>
        /// The current application version ID when the snapshot was created.
        /// </summary>
        [Input("applicationVersionId")]
        public Input<int>? ApplicationVersionId { get; set; }

        /// <summary>
        /// The timestamp of the application snapshot.
        /// </summary>
        [Input("snapshotCreationTimestamp")]
        public Input<string>? SnapshotCreationTimestamp { get; set; }

        /// <summary>
        /// The name of the application snapshot.
        /// </summary>
        [Input("snapshotName")]
        public Input<string>? SnapshotName { get; set; }

        public ApplicationSnapshotState()
        {
        }
        public static new ApplicationSnapshotState Empty => new ApplicationSnapshotState();
    }
}
