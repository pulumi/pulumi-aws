// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.KinesisAnalyticsV2
{
    /// <summary>
    /// Manages a Kinesis Analytics v2 Application.
    /// This resource can be used to manage both Kinesis Data Analytics for SQL applications and Kinesis Data Analytics for Apache Flink applications.
    /// 
    /// &gt; **Note:** Kinesis Data Analytics for SQL applications created using this resource cannot currently be viewed in the AWS Console. To manage Kinesis Data Analytics for SQL applications that can also be viewed in the AWS Console, use the `aws.kinesis.AnalyticsApplication` resource.
    /// 
    /// ## Example Usage
    /// ### Apache Flink Application
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleBucketV2 = new Aws.S3.BucketV2("exampleBucketV2");
    /// 
    ///     var exampleBucketObjectv2 = new Aws.S3.BucketObjectv2("exampleBucketObjectv2", new()
    ///     {
    ///         Bucket = exampleBucketV2.Id,
    ///         Key = "example-flink-application",
    ///         Source = new FileAsset("flink-app.jar"),
    ///     });
    /// 
    ///     var exampleApplication = new Aws.KinesisAnalyticsV2.Application("exampleApplication", new()
    ///     {
    ///         RuntimeEnvironment = "FLINK-1_8",
    ///         ServiceExecutionRole = aws_iam_role.Example.Arn,
    ///         ApplicationConfiguration = new Aws.KinesisAnalyticsV2.Inputs.ApplicationApplicationConfigurationArgs
    ///         {
    ///             ApplicationCodeConfiguration = new Aws.KinesisAnalyticsV2.Inputs.ApplicationApplicationConfigurationApplicationCodeConfigurationArgs
    ///             {
    ///                 CodeContent = new Aws.KinesisAnalyticsV2.Inputs.ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentArgs
    ///                 {
    ///                     S3ContentLocation = new Aws.KinesisAnalyticsV2.Inputs.ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationArgs
    ///                     {
    ///                         BucketArn = exampleBucketV2.Arn,
    ///                         FileKey = exampleBucketObjectv2.Key,
    ///                     },
    ///                 },
    ///                 CodeContentType = "ZIPFILE",
    ///             },
    ///             EnvironmentProperties = new Aws.KinesisAnalyticsV2.Inputs.ApplicationApplicationConfigurationEnvironmentPropertiesArgs
    ///             {
    ///                 PropertyGroups = new[]
    ///                 {
    ///                     new Aws.KinesisAnalyticsV2.Inputs.ApplicationApplicationConfigurationEnvironmentPropertiesPropertyGroupArgs
    ///                     {
    ///                         PropertyGroupId = "PROPERTY-GROUP-1",
    ///                         PropertyMap = 
    ///                         {
    ///                             { "Key1", "Value1" },
    ///                         },
    ///                     },
    ///                     new Aws.KinesisAnalyticsV2.Inputs.ApplicationApplicationConfigurationEnvironmentPropertiesPropertyGroupArgs
    ///                     {
    ///                         PropertyGroupId = "PROPERTY-GROUP-2",
    ///                         PropertyMap = 
    ///                         {
    ///                             { "KeyA", "ValueA" },
    ///                             { "KeyB", "ValueB" },
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///             FlinkApplicationConfiguration = new Aws.KinesisAnalyticsV2.Inputs.ApplicationApplicationConfigurationFlinkApplicationConfigurationArgs
    ///             {
    ///                 CheckpointConfiguration = new Aws.KinesisAnalyticsV2.Inputs.ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationArgs
    ///                 {
    ///                     ConfigurationType = "DEFAULT",
    ///                 },
    ///                 MonitoringConfiguration = new Aws.KinesisAnalyticsV2.Inputs.ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationArgs
    ///                 {
    ///                     ConfigurationType = "CUSTOM",
    ///                     LogLevel = "DEBUG",
    ///                     MetricsLevel = "TASK",
    ///                 },
    ///                 ParallelismConfiguration = new Aws.KinesisAnalyticsV2.Inputs.ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationArgs
    ///                 {
    ///                     AutoScalingEnabled = true,
    ///                     ConfigurationType = "CUSTOM",
    ///                     Parallelism = 10,
    ///                     ParallelismPerKpu = 4,
    ///                 },
    ///             },
    ///         },
    ///         Tags = 
    ///         {
    ///             { "Environment", "test" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### SQL Application
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleLogGroup = new Aws.CloudWatch.LogGroup("exampleLogGroup");
    /// 
    ///     var exampleLogStream = new Aws.CloudWatch.LogStream("exampleLogStream", new()
    ///     {
    ///         LogGroupName = exampleLogGroup.Name,
    ///     });
    /// 
    ///     var exampleApplication = new Aws.KinesisAnalyticsV2.Application("exampleApplication", new()
    ///     {
    ///         RuntimeEnvironment = "SQL-1_0",
    ///         ServiceExecutionRole = aws_iam_role.Example.Arn,
    ///         ApplicationConfiguration = new Aws.KinesisAnalyticsV2.Inputs.ApplicationApplicationConfigurationArgs
    ///         {
    ///             ApplicationCodeConfiguration = new Aws.KinesisAnalyticsV2.Inputs.ApplicationApplicationConfigurationApplicationCodeConfigurationArgs
    ///             {
    ///                 CodeContent = new Aws.KinesisAnalyticsV2.Inputs.ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentArgs
    ///                 {
    ///                     TextContent = @"SELECT 1;
    /// ",
    ///                 },
    ///                 CodeContentType = "PLAINTEXT",
    ///             },
    ///             SqlApplicationConfiguration = new Aws.KinesisAnalyticsV2.Inputs.ApplicationApplicationConfigurationSqlApplicationConfigurationArgs
    ///             {
    ///                 Input = new Aws.KinesisAnalyticsV2.Inputs.ApplicationApplicationConfigurationSqlApplicationConfigurationInputArgs
    ///                 {
    ///                     NamePrefix = "PREFIX_1",
    ///                     InputParallelism = new Aws.KinesisAnalyticsV2.Inputs.ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputParallelismArgs
    ///                     {
    ///                         Count = 3,
    ///                     },
    ///                     InputSchema = new Aws.KinesisAnalyticsV2.Inputs.ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaArgs
    ///                     {
    ///                         RecordColumns = new[]
    ///                         {
    ///                             new Aws.KinesisAnalyticsV2.Inputs.ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordColumnArgs
    ///                             {
    ///                                 Name = "COLUMN_1",
    ///                                 SqlType = "VARCHAR(8)",
    ///                                 Mapping = "MAPPING-1",
    ///                             },
    ///                             new Aws.KinesisAnalyticsV2.Inputs.ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordColumnArgs
    ///                             {
    ///                                 Name = "COLUMN_2",
    ///                                 SqlType = "DOUBLE",
    ///                             },
    ///                         },
    ///                         RecordEncoding = "UTF-8",
    ///                         RecordFormat = new Aws.KinesisAnalyticsV2.Inputs.ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatArgs
    ///                         {
    ///                             RecordFormatType = "CSV",
    ///                             MappingParameters = new Aws.KinesisAnalyticsV2.Inputs.ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersArgs
    ///                             {
    ///                                 CsvMappingParameters = new Aws.KinesisAnalyticsV2.Inputs.ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParametersArgs
    ///                                 {
    ///                                     RecordColumnDelimiter = ",",
    ///                                     RecordRowDelimiter = @"
    /// ",
    ///                                 },
    ///                             },
    ///                         },
    ///                     },
    ///                     KinesisStreamsInput = new Aws.KinesisAnalyticsV2.Inputs.ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputArgs
    ///                     {
    ///                         ResourceArn = aws_kinesis_stream.Example.Arn,
    ///                     },
    ///                 },
    ///                 Outputs = new[]
    ///                 {
    ///                     new Aws.KinesisAnalyticsV2.Inputs.ApplicationApplicationConfigurationSqlApplicationConfigurationOutputArgs
    ///                     {
    ///                         Name = "OUTPUT_1",
    ///                         DestinationSchema = new Aws.KinesisAnalyticsV2.Inputs.ApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaArgs
    ///                         {
    ///                             RecordFormatType = "JSON",
    ///                         },
    ///                         LambdaOutput = new Aws.KinesisAnalyticsV2.Inputs.ApplicationApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutputArgs
    ///                         {
    ///                             ResourceArn = aws_lambda_function.Example.Arn,
    ///                         },
    ///                     },
    ///                     new Aws.KinesisAnalyticsV2.Inputs.ApplicationApplicationConfigurationSqlApplicationConfigurationOutputArgs
    ///                     {
    ///                         Name = "OUTPUT_2",
    ///                         DestinationSchema = new Aws.KinesisAnalyticsV2.Inputs.ApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaArgs
    ///                         {
    ///                             RecordFormatType = "CSV",
    ///                         },
    ///                         KinesisFirehoseOutput = new Aws.KinesisAnalyticsV2.Inputs.ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputArgs
    ///                         {
    ///                             ResourceArn = aws_kinesis_firehose_delivery_stream.Example.Arn,
    ///                         },
    ///                     },
    ///                 },
    ///                 ReferenceDataSource = new Aws.KinesisAnalyticsV2.Inputs.ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceArgs
    ///                 {
    ///                     TableName = "TABLE-1",
    ///                     ReferenceSchema = new Aws.KinesisAnalyticsV2.Inputs.ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaArgs
    ///                     {
    ///                         RecordColumns = new[]
    ///                         {
    ///                             new Aws.KinesisAnalyticsV2.Inputs.ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumnArgs
    ///                             {
    ///                                 Name = "COLUMN_1",
    ///                                 SqlType = "INTEGER",
    ///                             },
    ///                         },
    ///                         RecordFormat = new Aws.KinesisAnalyticsV2.Inputs.ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatArgs
    ///                         {
    ///                             RecordFormatType = "JSON",
    ///                             MappingParameters = new Aws.KinesisAnalyticsV2.Inputs.ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersArgs
    ///                             {
    ///                                 JsonMappingParameters = new Aws.KinesisAnalyticsV2.Inputs.ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersJsonMappingParametersArgs
    ///                                 {
    ///                                     RecordRowPath = "$",
    ///                                 },
    ///                             },
    ///                         },
    ///                     },
    ///                     S3ReferenceDataSource = new Aws.KinesisAnalyticsV2.Inputs.ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceArgs
    ///                     {
    ///                         BucketArn = aws_s3_bucket.Example.Arn,
    ///                         FileKey = "KEY-1",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         CloudwatchLoggingOptions = new Aws.KinesisAnalyticsV2.Inputs.ApplicationCloudwatchLoggingOptionsArgs
    ///         {
    ///             LogStreamArn = exampleLogStream.Arn,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### VPC Configuration
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleBucketV2 = new Aws.S3.BucketV2("exampleBucketV2");
    /// 
    ///     var exampleBucketObjectv2 = new Aws.S3.BucketObjectv2("exampleBucketObjectv2", new()
    ///     {
    ///         Bucket = exampleBucketV2.Id,
    ///         Key = "example-flink-application",
    ///         Source = new FileAsset("flink-app.jar"),
    ///     });
    /// 
    ///     var exampleApplication = new Aws.KinesisAnalyticsV2.Application("exampleApplication", new()
    ///     {
    ///         RuntimeEnvironment = "FLINK-1_8",
    ///         ServiceExecutionRole = aws_iam_role.Example.Arn,
    ///         ApplicationConfiguration = new Aws.KinesisAnalyticsV2.Inputs.ApplicationApplicationConfigurationArgs
    ///         {
    ///             ApplicationCodeConfiguration = new Aws.KinesisAnalyticsV2.Inputs.ApplicationApplicationConfigurationApplicationCodeConfigurationArgs
    ///             {
    ///                 CodeContent = new Aws.KinesisAnalyticsV2.Inputs.ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentArgs
    ///                 {
    ///                     S3ContentLocation = new Aws.KinesisAnalyticsV2.Inputs.ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationArgs
    ///                     {
    ///                         BucketArn = exampleBucketV2.Arn,
    ///                         FileKey = exampleBucketObjectv2.Key,
    ///                     },
    ///                 },
    ///                 CodeContentType = "ZIPFILE",
    ///             },
    ///             VpcConfiguration = new Aws.KinesisAnalyticsV2.Inputs.ApplicationApplicationConfigurationVpcConfigurationArgs
    ///             {
    ///                 SecurityGroupIds = new[]
    ///                 {
    ///                     aws_security_group.Example[0].Id,
    ///                     aws_security_group.Example[1].Id,
    ///                 },
    ///                 SubnetIds = new[]
    ///                 {
    ///                     aws_subnet.Example.Id,
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// `aws_kinesisanalyticsv2_application` can be imported by using the application ARN, e.g.,
    /// 
    /// ```sh
    ///  $ pulumi import aws:kinesisanalyticsv2/application:Application example arn:aws:kinesisanalytics:us-west-2:123456789012:application/example-sql-application
    /// ```
    /// </summary>
    [AwsResourceType("aws:kinesisanalyticsv2/application:Application")]
    public partial class Application : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The application's configuration
        /// </summary>
        [Output("applicationConfiguration")]
        public Output<Outputs.ApplicationApplicationConfiguration> ApplicationConfiguration { get; private set; } = null!;

        /// <summary>
        /// The ARN of the application.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// A CloudWatch log stream to monitor application configuration errors.
        /// </summary>
        [Output("cloudwatchLoggingOptions")]
        public Output<Outputs.ApplicationCloudwatchLoggingOptions?> CloudwatchLoggingOptions { get; private set; } = null!;

        /// <summary>
        /// The current timestamp when the application was created.
        /// </summary>
        [Output("createTimestamp")]
        public Output<string> CreateTimestamp { get; private set; } = null!;

        /// <summary>
        /// A summary description of the application.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Whether to force stop an unresponsive Flink-based application.
        /// </summary>
        [Output("forceStop")]
        public Output<bool?> ForceStop { get; private set; } = null!;

        /// <summary>
        /// The current timestamp when the application was last updated.
        /// </summary>
        [Output("lastUpdateTimestamp")]
        public Output<string> LastUpdateTimestamp { get; private set; } = null!;

        /// <summary>
        /// The name of the application.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The runtime environment for the application. Valid values: `SQL-1_0`, `FLINK-1_6`, `FLINK-1_8`, `FLINK-1_11`, `FLINK-1_13`, `FLINK-1_15`.
        /// </summary>
        [Output("runtimeEnvironment")]
        public Output<string> RuntimeEnvironment { get; private set; } = null!;

        /// <summary>
        /// The ARN of the IAM role used by the application to access Kinesis data streams, Kinesis Data Firehose delivery streams, Amazon S3 objects, and other external resources.
        /// </summary>
        [Output("serviceExecutionRole")]
        public Output<string> ServiceExecutionRole { get; private set; } = null!;

        /// <summary>
        /// Whether to start or stop the application.
        /// </summary>
        [Output("startApplication")]
        public Output<bool?> StartApplication { get; private set; } = null!;

        /// <summary>
        /// The status of the application.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// A map of tags to assign to the application. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        /// <summary>
        /// The current application version. Kinesis Data Analytics updates the `version_id` each time the application is updated.
        /// </summary>
        [Output("versionId")]
        public Output<int> VersionId { get; private set; } = null!;


        /// <summary>
        /// Create a Application resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Application(string name, ApplicationArgs args, CustomResourceOptions? options = null)
            : base("aws:kinesisanalyticsv2/application:Application", name, args ?? new ApplicationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Application(string name, Input<string> id, ApplicationState? state = null, CustomResourceOptions? options = null)
            : base("aws:kinesisanalyticsv2/application:Application", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Application resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Application Get(string name, Input<string> id, ApplicationState? state = null, CustomResourceOptions? options = null)
        {
            return new Application(name, id, state, options);
        }
    }

    public sealed class ApplicationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The application's configuration
        /// </summary>
        [Input("applicationConfiguration")]
        public Input<Inputs.ApplicationApplicationConfigurationArgs>? ApplicationConfiguration { get; set; }

        /// <summary>
        /// A CloudWatch log stream to monitor application configuration errors.
        /// </summary>
        [Input("cloudwatchLoggingOptions")]
        public Input<Inputs.ApplicationCloudwatchLoggingOptionsArgs>? CloudwatchLoggingOptions { get; set; }

        /// <summary>
        /// A summary description of the application.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Whether to force stop an unresponsive Flink-based application.
        /// </summary>
        [Input("forceStop")]
        public Input<bool>? ForceStop { get; set; }

        /// <summary>
        /// The name of the application.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The runtime environment for the application. Valid values: `SQL-1_0`, `FLINK-1_6`, `FLINK-1_8`, `FLINK-1_11`, `FLINK-1_13`, `FLINK-1_15`.
        /// </summary>
        [Input("runtimeEnvironment", required: true)]
        public Input<string> RuntimeEnvironment { get; set; } = null!;

        /// <summary>
        /// The ARN of the IAM role used by the application to access Kinesis data streams, Kinesis Data Firehose delivery streams, Amazon S3 objects, and other external resources.
        /// </summary>
        [Input("serviceExecutionRole", required: true)]
        public Input<string> ServiceExecutionRole { get; set; } = null!;

        /// <summary>
        /// Whether to start or stop the application.
        /// </summary>
        [Input("startApplication")]
        public Input<bool>? StartApplication { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the application. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public ApplicationArgs()
        {
        }
        public static new ApplicationArgs Empty => new ApplicationArgs();
    }

    public sealed class ApplicationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The application's configuration
        /// </summary>
        [Input("applicationConfiguration")]
        public Input<Inputs.ApplicationApplicationConfigurationGetArgs>? ApplicationConfiguration { get; set; }

        /// <summary>
        /// The ARN of the application.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// A CloudWatch log stream to monitor application configuration errors.
        /// </summary>
        [Input("cloudwatchLoggingOptions")]
        public Input<Inputs.ApplicationCloudwatchLoggingOptionsGetArgs>? CloudwatchLoggingOptions { get; set; }

        /// <summary>
        /// The current timestamp when the application was created.
        /// </summary>
        [Input("createTimestamp")]
        public Input<string>? CreateTimestamp { get; set; }

        /// <summary>
        /// A summary description of the application.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Whether to force stop an unresponsive Flink-based application.
        /// </summary>
        [Input("forceStop")]
        public Input<bool>? ForceStop { get; set; }

        /// <summary>
        /// The current timestamp when the application was last updated.
        /// </summary>
        [Input("lastUpdateTimestamp")]
        public Input<string>? LastUpdateTimestamp { get; set; }

        /// <summary>
        /// The name of the application.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The runtime environment for the application. Valid values: `SQL-1_0`, `FLINK-1_6`, `FLINK-1_8`, `FLINK-1_11`, `FLINK-1_13`, `FLINK-1_15`.
        /// </summary>
        [Input("runtimeEnvironment")]
        public Input<string>? RuntimeEnvironment { get; set; }

        /// <summary>
        /// The ARN of the IAM role used by the application to access Kinesis data streams, Kinesis Data Firehose delivery streams, Amazon S3 objects, and other external resources.
        /// </summary>
        [Input("serviceExecutionRole")]
        public Input<string>? ServiceExecutionRole { get; set; }

        /// <summary>
        /// Whether to start or stop the application.
        /// </summary>
        [Input("startApplication")]
        public Input<bool>? StartApplication { get; set; }

        /// <summary>
        /// The status of the application.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the application. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        /// <summary>
        /// The current application version. Kinesis Data Analytics updates the `version_id` each time the application is updated.
        /// </summary>
        [Input("versionId")]
        public Input<int>? VersionId { get; set; }

        public ApplicationState()
        {
        }
        public static new ApplicationState Empty => new ApplicationState();
    }
}
