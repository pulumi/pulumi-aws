// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.ElasticLoadBalancingV2
{
    [Obsolete(@"aws.elasticloadbalancingv2.getTargetGroup has been deprecated in favor of aws.lb.getTargetGroup")]
    public static class GetTargetGroup
    {
        /// <summary>
        /// &gt; **Note:** `aws.alb.TargetGroup` is known as `aws.lb.TargetGroup`. The functionality is identical.
        /// 
        /// Provides information about a Load Balancer Target Group.
        /// 
        /// This data source can prove useful when a module accepts an LB Target Group as an
        /// input variable and needs to know its attributes. It can also be used to get the ARN of
        /// an LB Target Group for use in other resources, given LB Target Group name.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const config = new pulumi.Config();
        /// const lbTgArn = config.get("lbTgArn") || "";
        /// const lbTgName = config.get("lbTgName") || "";
        /// const test = aws.lb.getTargetGroup({
        ///     arn: lbTgArn,
        ///     name: lbTgName,
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// config = pulumi.Config()
        /// lb_tg_arn = config.get("lbTgArn")
        /// if lb_tg_arn is None:
        ///     lb_tg_arn = ""
        /// lb_tg_name = config.get("lbTgName")
        /// if lb_tg_name is None:
        ///     lb_tg_name = ""
        /// test = aws.lb.get_target_group(arn=lb_tg_arn,
        ///     name=lb_tg_name)
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var lbTgArn = config.Get("lbTgArn") ?? "";
        ///     var lbTgName = config.Get("lbTgName") ?? "";
        ///     var test = Aws.LB.GetTargetGroup.Invoke(new()
        ///     {
        ///         Arn = lbTgArn,
        ///         Name = lbTgName,
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/lb"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		cfg := config.New(ctx, "")
        /// 		lbTgArn := ""
        /// 		if param := cfg.Get("lbTgArn"); param != "" {
        /// 			lbTgArn = param
        /// 		}
        /// 		lbTgName := ""
        /// 		if param := cfg.Get("lbTgName"); param != "" {
        /// 			lbTgName = param
        /// 		}
        /// 		_, err := lb.LookupTargetGroup(ctx, &amp;lb.LookupTargetGroupArgs{
        /// 			Arn:  pulumi.StringRef(lbTgArn),
        /// 			Name: pulumi.StringRef(lbTgName),
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.lb.LbFunctions;
        /// import com.pulumi.aws.lb.inputs.GetTargetGroupArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var config = ctx.config();
        ///         final var lbTgArn = config.get("lbTgArn").orElse("");
        ///         final var lbTgName = config.get("lbTgName").orElse("");
        ///         final var test = LbFunctions.getTargetGroup(GetTargetGroupArgs.builder()
        ///             .arn(lbTgArn)
        ///             .name(lbTgName)
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// configuration:
        ///   lbTgArn:
        ///     type: string
        ///     default:
        ///   lbTgName:
        ///     type: string
        ///     default:
        /// variables:
        ///   test:
        ///     fn::invoke:
        ///       Function: aws:lb:getTargetGroup
        ///       Arguments:
        ///         arn: ${lbTgArn}
        ///         name: ${lbTgName}
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetTargetGroupResult> InvokeAsync(GetTargetGroupArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTargetGroupResult>("aws:elasticloadbalancingv2/getTargetGroup:getTargetGroup", args ?? new GetTargetGroupArgs(), options.WithDefaults());

        /// <summary>
        /// &gt; **Note:** `aws.alb.TargetGroup` is known as `aws.lb.TargetGroup`. The functionality is identical.
        /// 
        /// Provides information about a Load Balancer Target Group.
        /// 
        /// This data source can prove useful when a module accepts an LB Target Group as an
        /// input variable and needs to know its attributes. It can also be used to get the ARN of
        /// an LB Target Group for use in other resources, given LB Target Group name.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const config = new pulumi.Config();
        /// const lbTgArn = config.get("lbTgArn") || "";
        /// const lbTgName = config.get("lbTgName") || "";
        /// const test = aws.lb.getTargetGroup({
        ///     arn: lbTgArn,
        ///     name: lbTgName,
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// config = pulumi.Config()
        /// lb_tg_arn = config.get("lbTgArn")
        /// if lb_tg_arn is None:
        ///     lb_tg_arn = ""
        /// lb_tg_name = config.get("lbTgName")
        /// if lb_tg_name is None:
        ///     lb_tg_name = ""
        /// test = aws.lb.get_target_group(arn=lb_tg_arn,
        ///     name=lb_tg_name)
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var lbTgArn = config.Get("lbTgArn") ?? "";
        ///     var lbTgName = config.Get("lbTgName") ?? "";
        ///     var test = Aws.LB.GetTargetGroup.Invoke(new()
        ///     {
        ///         Arn = lbTgArn,
        ///         Name = lbTgName,
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/lb"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		cfg := config.New(ctx, "")
        /// 		lbTgArn := ""
        /// 		if param := cfg.Get("lbTgArn"); param != "" {
        /// 			lbTgArn = param
        /// 		}
        /// 		lbTgName := ""
        /// 		if param := cfg.Get("lbTgName"); param != "" {
        /// 			lbTgName = param
        /// 		}
        /// 		_, err := lb.LookupTargetGroup(ctx, &amp;lb.LookupTargetGroupArgs{
        /// 			Arn:  pulumi.StringRef(lbTgArn),
        /// 			Name: pulumi.StringRef(lbTgName),
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.lb.LbFunctions;
        /// import com.pulumi.aws.lb.inputs.GetTargetGroupArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var config = ctx.config();
        ///         final var lbTgArn = config.get("lbTgArn").orElse("");
        ///         final var lbTgName = config.get("lbTgName").orElse("");
        ///         final var test = LbFunctions.getTargetGroup(GetTargetGroupArgs.builder()
        ///             .arn(lbTgArn)
        ///             .name(lbTgName)
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// configuration:
        ///   lbTgArn:
        ///     type: string
        ///     default:
        ///   lbTgName:
        ///     type: string
        ///     default:
        /// variables:
        ///   test:
        ///     fn::invoke:
        ///       Function: aws:lb:getTargetGroup
        ///       Arguments:
        ///         arn: ${lbTgArn}
        ///         name: ${lbTgName}
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetTargetGroupResult> Invoke(GetTargetGroupInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTargetGroupResult>("aws:elasticloadbalancingv2/getTargetGroup:getTargetGroup", args ?? new GetTargetGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTargetGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Full ARN of the target group.
        /// </summary>
        [Input("arn")]
        public string? Arn { get; set; }

        /// <summary>
        /// Unique name of the target group.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        [Input("tags")]
        private Dictionary<string, string>? _tags;

        /// <summary>
        /// Mapping of tags, each pair of which must exactly match a pair on the desired target group.
        /// 
        /// &gt; **NOTE:** When both `arn` and `name` are specified, `arn` takes precedence. `tags` has the lowest precedence.
        /// </summary>
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetTargetGroupArgs()
        {
        }
        public static new GetTargetGroupArgs Empty => new GetTargetGroupArgs();
    }

    public sealed class GetTargetGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Full ARN of the target group.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// Unique name of the target group.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Mapping of tags, each pair of which must exactly match a pair on the desired target group.
        /// 
        /// &gt; **NOTE:** When both `arn` and `name` are specified, `arn` takes precedence. `tags` has the lowest precedence.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetTargetGroupInvokeArgs()
        {
        }
        public static new GetTargetGroupInvokeArgs Empty => new GetTargetGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetTargetGroupResult
    {
        public readonly string Arn;
        public readonly string ArnSuffix;
        public readonly bool ConnectionTermination;
        public readonly int DeregistrationDelay;
        public readonly Outputs.GetTargetGroupHealthCheckResult HealthCheck;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool LambdaMultiValueHeadersEnabled;
        public readonly string LoadBalancingAlgorithmType;
        public readonly string LoadBalancingCrossZoneEnabled;
        public readonly string Name;
        public readonly int Port;
        public readonly string PreserveClientIp;
        public readonly string Protocol;
        public readonly string ProtocolVersion;
        public readonly bool ProxyProtocolV2;
        public readonly int SlowStart;
        public readonly Outputs.GetTargetGroupStickinessResult Stickiness;
        public readonly ImmutableDictionary<string, string> Tags;
        public readonly string TargetType;
        public readonly string VpcId;

        [OutputConstructor]
        private GetTargetGroupResult(
            string arn,

            string arnSuffix,

            bool connectionTermination,

            int deregistrationDelay,

            Outputs.GetTargetGroupHealthCheckResult healthCheck,

            string id,

            bool lambdaMultiValueHeadersEnabled,

            string loadBalancingAlgorithmType,

            string loadBalancingCrossZoneEnabled,

            string name,

            int port,

            string preserveClientIp,

            string protocol,

            string protocolVersion,

            bool proxyProtocolV2,

            int slowStart,

            Outputs.GetTargetGroupStickinessResult stickiness,

            ImmutableDictionary<string, string> tags,

            string targetType,

            string vpcId)
        {
            Arn = arn;
            ArnSuffix = arnSuffix;
            ConnectionTermination = connectionTermination;
            DeregistrationDelay = deregistrationDelay;
            HealthCheck = healthCheck;
            Id = id;
            LambdaMultiValueHeadersEnabled = lambdaMultiValueHeadersEnabled;
            LoadBalancingAlgorithmType = loadBalancingAlgorithmType;
            LoadBalancingCrossZoneEnabled = loadBalancingCrossZoneEnabled;
            Name = name;
            Port = port;
            PreserveClientIp = preserveClientIp;
            Protocol = protocol;
            ProtocolVersion = protocolVersion;
            ProxyProtocolV2 = proxyProtocolV2;
            SlowStart = slowStart;
            Stickiness = stickiness;
            Tags = tags;
            TargetType = targetType;
            VpcId = vpcId;
        }
    }
}
