// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Backup
{
    /// <summary>
    /// Provides an AWS Backup Global Settings resource.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var test = new Aws.Backup.GlobalSettings("test", new()
    ///     {
    ///         GlobalSettingsList = 
    ///         {
    ///             { "isCrossAccountBackupEnabled", "true" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Backup Global Settings can be imported using the `id`, e.g.,
    /// 
    /// ```sh
    ///  $ pulumi import aws:backup/globalSettings:GlobalSettings example 123456789012
    /// ```
    /// </summary>
    [AwsResourceType("aws:backup/globalSettings:GlobalSettings")]
    public partial class GlobalSettings : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A list of resources along with the opt-in preferences for the account.
        /// </summary>
        [Output("globalSettings")]
        public Output<ImmutableDictionary<string, string>> GlobalSettingsList { get; private set; } = null!;


        /// <summary>
        /// Create a GlobalSettings resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GlobalSettings(string name, GlobalSettingsArgs args, CustomResourceOptions? options = null)
            : base("aws:backup/globalSettings:GlobalSettings", name, args ?? new GlobalSettingsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GlobalSettings(string name, Input<string> id, GlobalSettingsState? state = null, CustomResourceOptions? options = null)
            : base("aws:backup/globalSettings:GlobalSettings", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GlobalSettings resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GlobalSettings Get(string name, Input<string> id, GlobalSettingsState? state = null, CustomResourceOptions? options = null)
        {
            return new GlobalSettings(name, id, state, options);
        }
    }

    public sealed class GlobalSettingsArgs : global::Pulumi.ResourceArgs
    {
        [Input("globalSettings", required: true)]
        private InputMap<string>? _globalSettings;

        /// <summary>
        /// A list of resources along with the opt-in preferences for the account.
        /// </summary>
        public InputMap<string> GlobalSettingsList
        {
            get => _globalSettings ?? (_globalSettings = new InputMap<string>());
            set => _globalSettings = value;
        }

        public GlobalSettingsArgs()
        {
        }
        public static new GlobalSettingsArgs Empty => new GlobalSettingsArgs();
    }

    public sealed class GlobalSettingsState : global::Pulumi.ResourceArgs
    {
        [Input("globalSettings")]
        private InputMap<string>? _globalSettings;

        /// <summary>
        /// A list of resources along with the opt-in preferences for the account.
        /// </summary>
        public InputMap<string> GlobalSettingsList
        {
            get => _globalSettings ?? (_globalSettings = new InputMap<string>());
            set => _globalSettings = value;
        }

        public GlobalSettingsState()
        {
        }
        public static new GlobalSettingsState Empty => new GlobalSettingsState();
    }
}
