// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Backup
{
    /// <summary>
    /// Provides an AWS Backup Region Settings resource.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var test = new Aws.Backup.RegionSettings("test", new()
    ///     {
    ///         ResourceTypeManagementPreference = 
    ///         {
    ///             { "DynamoDB", true },
    ///             { "EFS", true },
    ///         },
    ///         ResourceTypeOptInPreference = 
    ///         {
    ///             { "Aurora", true },
    ///             { "DocumentDB", true },
    ///             { "DynamoDB", true },
    ///             { "EBS", true },
    ///             { "EC2", true },
    ///             { "EFS", true },
    ///             { "FSx", true },
    ///             { "Neptune", true },
    ///             { "RDS", true },
    ///             { "Storage Gateway", true },
    ///             { "VirtualMachine", true },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// terraform import {
    /// 
    ///  to = aws_backup_region_settings.test
    /// 
    ///  id = "us-west-2" } Using `pulumi import`, import Backup Region Settings using the `region`. For exampleconsole % pulumi import aws_backup_region_settings.test us-west-2
    /// </summary>
    [AwsResourceType("aws:backup/regionSettings:RegionSettings")]
    public partial class RegionSettings : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A map of services along with the management preferences for the Region. For more information, see the [AWS Documentation](https://docs.aws.amazon.com/aws-backup/latest/devguide/API_UpdateRegionSettings.html#API_UpdateRegionSettings_RequestSyntax).
        /// </summary>
        [Output("resourceTypeManagementPreference")]
        public Output<ImmutableDictionary<string, bool>> ResourceTypeManagementPreference { get; private set; } = null!;

        /// <summary>
        /// A map of services along with the opt-in preferences for the Region.
        /// </summary>
        [Output("resourceTypeOptInPreference")]
        public Output<ImmutableDictionary<string, bool>> ResourceTypeOptInPreference { get; private set; } = null!;


        /// <summary>
        /// Create a RegionSettings resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RegionSettings(string name, RegionSettingsArgs args, CustomResourceOptions? options = null)
            : base("aws:backup/regionSettings:RegionSettings", name, args ?? new RegionSettingsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RegionSettings(string name, Input<string> id, RegionSettingsState? state = null, CustomResourceOptions? options = null)
            : base("aws:backup/regionSettings:RegionSettings", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RegionSettings resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RegionSettings Get(string name, Input<string> id, RegionSettingsState? state = null, CustomResourceOptions? options = null)
        {
            return new RegionSettings(name, id, state, options);
        }
    }

    public sealed class RegionSettingsArgs : global::Pulumi.ResourceArgs
    {
        [Input("resourceTypeManagementPreference")]
        private InputMap<bool>? _resourceTypeManagementPreference;

        /// <summary>
        /// A map of services along with the management preferences for the Region. For more information, see the [AWS Documentation](https://docs.aws.amazon.com/aws-backup/latest/devguide/API_UpdateRegionSettings.html#API_UpdateRegionSettings_RequestSyntax).
        /// </summary>
        public InputMap<bool> ResourceTypeManagementPreference
        {
            get => _resourceTypeManagementPreference ?? (_resourceTypeManagementPreference = new InputMap<bool>());
            set => _resourceTypeManagementPreference = value;
        }

        [Input("resourceTypeOptInPreference", required: true)]
        private InputMap<bool>? _resourceTypeOptInPreference;

        /// <summary>
        /// A map of services along with the opt-in preferences for the Region.
        /// </summary>
        public InputMap<bool> ResourceTypeOptInPreference
        {
            get => _resourceTypeOptInPreference ?? (_resourceTypeOptInPreference = new InputMap<bool>());
            set => _resourceTypeOptInPreference = value;
        }

        public RegionSettingsArgs()
        {
        }
        public static new RegionSettingsArgs Empty => new RegionSettingsArgs();
    }

    public sealed class RegionSettingsState : global::Pulumi.ResourceArgs
    {
        [Input("resourceTypeManagementPreference")]
        private InputMap<bool>? _resourceTypeManagementPreference;

        /// <summary>
        /// A map of services along with the management preferences for the Region. For more information, see the [AWS Documentation](https://docs.aws.amazon.com/aws-backup/latest/devguide/API_UpdateRegionSettings.html#API_UpdateRegionSettings_RequestSyntax).
        /// </summary>
        public InputMap<bool> ResourceTypeManagementPreference
        {
            get => _resourceTypeManagementPreference ?? (_resourceTypeManagementPreference = new InputMap<bool>());
            set => _resourceTypeManagementPreference = value;
        }

        [Input("resourceTypeOptInPreference")]
        private InputMap<bool>? _resourceTypeOptInPreference;

        /// <summary>
        /// A map of services along with the opt-in preferences for the Region.
        /// </summary>
        public InputMap<bool> ResourceTypeOptInPreference
        {
            get => _resourceTypeOptInPreference ?? (_resourceTypeOptInPreference = new InputMap<bool>());
            set => _resourceTypeOptInPreference = value;
        }

        public RegionSettingsState()
        {
        }
        public static new RegionSettingsState Empty => new RegionSettingsState();
    }
}
