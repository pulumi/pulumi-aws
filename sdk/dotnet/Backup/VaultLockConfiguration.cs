// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Backup
{
    /// <summary>
    /// Provides an AWS Backup vault lock configuration resource.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var test = new Aws.Backup.VaultLockConfiguration("test", new()
    ///     {
    ///         BackupVaultName = "example_backup_vault",
    ///         ChangeableForDays = 3,
    ///         MaxRetentionDays = 1200,
    ///         MinRetentionDays = 7,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Backup vault lock configuration can be imported using the `name`, e.g.,
    /// 
    /// ```sh
    ///  $ pulumi import aws:backup/vaultLockConfiguration:VaultLockConfiguration test TestVault
    /// ```
    /// </summary>
    [AwsResourceType("aws:backup/vaultLockConfiguration:VaultLockConfiguration")]
    public partial class VaultLockConfiguration : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ARN of the vault.
        /// </summary>
        [Output("backupVaultArn")]
        public Output<string> BackupVaultArn { get; private set; } = null!;

        /// <summary>
        /// Name of the backup vault to add a lock configuration for.
        /// </summary>
        [Output("backupVaultName")]
        public Output<string> BackupVaultName { get; private set; } = null!;

        /// <summary>
        /// The number of days before the lock date. If omitted creates a vault lock in `governance` mode, otherwise it will create a vault lock in `compliance` mode.
        /// </summary>
        [Output("changeableForDays")]
        public Output<int?> ChangeableForDays { get; private set; } = null!;

        /// <summary>
        /// The maximum retention period that the vault retains its recovery points.
        /// </summary>
        [Output("maxRetentionDays")]
        public Output<int?> MaxRetentionDays { get; private set; } = null!;

        /// <summary>
        /// The minimum retention period that the vault retains its recovery points.
        /// </summary>
        [Output("minRetentionDays")]
        public Output<int?> MinRetentionDays { get; private set; } = null!;


        /// <summary>
        /// Create a VaultLockConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VaultLockConfiguration(string name, VaultLockConfigurationArgs args, CustomResourceOptions? options = null)
            : base("aws:backup/vaultLockConfiguration:VaultLockConfiguration", name, args ?? new VaultLockConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VaultLockConfiguration(string name, Input<string> id, VaultLockConfigurationState? state = null, CustomResourceOptions? options = null)
            : base("aws:backup/vaultLockConfiguration:VaultLockConfiguration", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VaultLockConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VaultLockConfiguration Get(string name, Input<string> id, VaultLockConfigurationState? state = null, CustomResourceOptions? options = null)
        {
            return new VaultLockConfiguration(name, id, state, options);
        }
    }

    public sealed class VaultLockConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the backup vault to add a lock configuration for.
        /// </summary>
        [Input("backupVaultName", required: true)]
        public Input<string> BackupVaultName { get; set; } = null!;

        /// <summary>
        /// The number of days before the lock date. If omitted creates a vault lock in `governance` mode, otherwise it will create a vault lock in `compliance` mode.
        /// </summary>
        [Input("changeableForDays")]
        public Input<int>? ChangeableForDays { get; set; }

        /// <summary>
        /// The maximum retention period that the vault retains its recovery points.
        /// </summary>
        [Input("maxRetentionDays")]
        public Input<int>? MaxRetentionDays { get; set; }

        /// <summary>
        /// The minimum retention period that the vault retains its recovery points.
        /// </summary>
        [Input("minRetentionDays")]
        public Input<int>? MinRetentionDays { get; set; }

        public VaultLockConfigurationArgs()
        {
        }
        public static new VaultLockConfigurationArgs Empty => new VaultLockConfigurationArgs();
    }

    public sealed class VaultLockConfigurationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ARN of the vault.
        /// </summary>
        [Input("backupVaultArn")]
        public Input<string>? BackupVaultArn { get; set; }

        /// <summary>
        /// Name of the backup vault to add a lock configuration for.
        /// </summary>
        [Input("backupVaultName")]
        public Input<string>? BackupVaultName { get; set; }

        /// <summary>
        /// The number of days before the lock date. If omitted creates a vault lock in `governance` mode, otherwise it will create a vault lock in `compliance` mode.
        /// </summary>
        [Input("changeableForDays")]
        public Input<int>? ChangeableForDays { get; set; }

        /// <summary>
        /// The maximum retention period that the vault retains its recovery points.
        /// </summary>
        [Input("maxRetentionDays")]
        public Input<int>? MaxRetentionDays { get; set; }

        /// <summary>
        /// The minimum retention period that the vault retains its recovery points.
        /// </summary>
        [Input("minRetentionDays")]
        public Input<int>? MinRetentionDays { get; set; }

        public VaultLockConfigurationState()
        {
        }
        public static new VaultLockConfigurationState Empty => new VaultLockConfigurationState();
    }
}
