// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Backup.Inputs
{

    public sealed class FrameworkControlScopeGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("complianceResourceIds")]
        private InputList<string>? _complianceResourceIds;

        /// <summary>
        /// The ID of the only AWS resource that you want your control scope to contain. Minimum number of 1 item. Maximum number of 100 items.
        /// </summary>
        public InputList<string> ComplianceResourceIds
        {
            get => _complianceResourceIds ?? (_complianceResourceIds = new InputList<string>());
            set => _complianceResourceIds = value;
        }

        [Input("complianceResourceTypes")]
        private InputList<string>? _complianceResourceTypes;

        /// <summary>
        /// Describes whether the control scope includes one or more types of resources, such as EFS or RDS.
        /// </summary>
        public InputList<string> ComplianceResourceTypes
        {
            get => _complianceResourceTypes ?? (_complianceResourceTypes = new InputList<string>());
            set => _complianceResourceTypes = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// The tag key-value pair applied to those AWS resources that you want to trigger an evaluation for a rule. A maximum of one key-value pair can be provided.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public FrameworkControlScopeGetArgs()
        {
        }
        public static new FrameworkControlScopeGetArgs Empty => new FrameworkControlScopeGetArgs();
    }
}
