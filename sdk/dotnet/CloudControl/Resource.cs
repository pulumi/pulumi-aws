// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CloudControl
{
    [AwsResourceType("aws:cloudcontrol/resource:Resource")]
    public partial class Resource : global::Pulumi.CustomResource
    {
        [Output("desiredState")]
        public Output<string> DesiredState { get; private set; } = null!;

        [Output("properties")]
        public Output<string> Properties { get; private set; } = null!;

        [Output("roleArn")]
        public Output<string?> RoleArn { get; private set; } = null!;

        [Output("schema")]
        public Output<string> Schema { get; private set; } = null!;

        [Output("typeName")]
        public Output<string> TypeName { get; private set; } = null!;

        [Output("typeVersionId")]
        public Output<string?> TypeVersionId { get; private set; } = null!;


        /// <summary>
        /// Create a Resource resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Resource(string name, ResourceArgs args, CustomResourceOptions? options = null)
            : base("aws:cloudcontrol/resource:Resource", name, args ?? new ResourceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Resource(string name, Input<string> id, ResourceState? state = null, CustomResourceOptions? options = null)
            : base("aws:cloudcontrol/resource:Resource", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "schema",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Resource resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Resource Get(string name, Input<string> id, ResourceState? state = null, CustomResourceOptions? options = null)
        {
            return new Resource(name, id, state, options);
        }
    }

    public sealed class ResourceArgs : global::Pulumi.ResourceArgs
    {
        [Input("desiredState", required: true)]
        public Input<string> DesiredState { get; set; } = null!;

        [Input("roleArn")]
        public Input<string>? RoleArn { get; set; }

        [Input("schema")]
        private Input<string>? _schema;
        public Input<string>? Schema
        {
            get => _schema;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _schema = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("typeName", required: true)]
        public Input<string> TypeName { get; set; } = null!;

        [Input("typeVersionId")]
        public Input<string>? TypeVersionId { get; set; }

        public ResourceArgs()
        {
        }
        public static new ResourceArgs Empty => new ResourceArgs();
    }

    public sealed class ResourceState : global::Pulumi.ResourceArgs
    {
        [Input("desiredState")]
        public Input<string>? DesiredState { get; set; }

        [Input("properties")]
        public Input<string>? Properties { get; set; }

        [Input("roleArn")]
        public Input<string>? RoleArn { get; set; }

        [Input("schema")]
        private Input<string>? _schema;
        public Input<string>? Schema
        {
            get => _schema;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _schema = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("typeName")]
        public Input<string>? TypeName { get; set; }

        [Input("typeVersionId")]
        public Input<string>? TypeVersionId { get; set; }

        public ResourceState()
        {
        }
        public static new ResourceState Empty => new ResourceState();
    }
}
