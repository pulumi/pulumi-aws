// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Lex.Inputs
{

    public sealed class IntentSlotArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// A description of the bot.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the intent slot that you want to create. The name is case sensitive.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Directs Lex the order in which to elicit this slot value from the user.
        /// For example, if the intent has two slots with priorities 1 and 2, AWS Lex first elicits a value for
        /// the slot with priority 1. If multiple slots share the same priority, the order in which Lex elicits
        /// values is arbitrary.
        /// </summary>
        [Input("priority")]
        public Input<int>? Priority { get; set; }

        /// <summary>
        /// The response card. Amazon Lex will substitute session attributes and
        /// slot values into the response card. For more information, see
        /// [Example: Using a Response Card](https://docs.aws.amazon.com/lex/latest/dg/ex-resp-card.html).
        /// </summary>
        [Input("responseCard")]
        public Input<string>? ResponseCard { get; set; }

        [Input("sampleUtterances")]
        private InputList<string>? _sampleUtterances;

        /// <summary>
        /// If you know a specific pattern with which users might respond to
        /// an Amazon Lex request for a slot value, you can provide those utterances to improve accuracy. This
        /// is optional. In most cases, Amazon Lex is capable of understanding user utterances.
        /// </summary>
        public InputList<string> SampleUtterances
        {
            get => _sampleUtterances ?? (_sampleUtterances = new InputList<string>());
            set => _sampleUtterances = value;
        }

        /// <summary>
        /// Specifies whether the slot is required or optional.
        /// </summary>
        [Input("slotConstraint", required: true)]
        public Input<string> SlotConstraint { get; set; } = null!;

        /// <summary>
        /// The type of the slot, either a custom slot type that you defined or one of
        /// the built-in slot types.
        /// </summary>
        [Input("slotType", required: true)]
        public Input<string> SlotType { get; set; } = null!;

        /// <summary>
        /// The version of the slot type.
        /// </summary>
        [Input("slotTypeVersion")]
        public Input<string>? SlotTypeVersion { get; set; }

        /// <summary>
        /// The prompt that Amazon Lex uses to elicit the slot value
        /// from the user. Attributes are documented under prompt.
        /// </summary>
        [Input("valueElicitationPrompt")]
        public Input<Inputs.IntentSlotValueElicitationPromptArgs>? ValueElicitationPrompt { get; set; }

        public IntentSlotArgs()
        {
        }
    }
}
