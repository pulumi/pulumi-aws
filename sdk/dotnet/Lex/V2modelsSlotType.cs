// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Lex
{
    /// <summary>
    /// Resource for managing an AWS Lex V2 Models Slot Type.
    /// 
    /// ## Example Usage
    /// 
    /// ### Basic Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var test = new Aws.Iam.RolePolicyAttachment("test", new()
    ///     {
    ///         Role = testAwsIamRole.Name,
    ///         PolicyArn = $"arn:{current.Partition}:iam::aws:policy/AmazonLexFullAccess",
    ///     });
    /// 
    ///     var testV2modelsBot = new Aws.Lex.V2modelsBot("test", new()
    ///     {
    ///         Name = "testbot",
    ///         IdleSessionTtlInSeconds = 60,
    ///         RoleArn = testAwsIamRole.Arn,
    ///         DataPrivacies = new[]
    ///         {
    ///             new Aws.Lex.Inputs.V2modelsBotDataPrivacyArgs
    ///             {
    ///                 ChildDirected = true,
    ///             },
    ///         },
    ///     });
    /// 
    ///     var testV2modelsBotLocale = new Aws.Lex.V2modelsBotLocale("test", new()
    ///     {
    ///         LocaleId = "en_US",
    ///         BotId = testV2modelsBot.Id,
    ///         BotVersion = "DRAFT",
    ///         NLuIntentConfidenceThreshold = 0.7,
    ///     });
    /// 
    ///     var testV2modelsBotVersion = new Aws.Lex.V2modelsBotVersion("test", new()
    ///     {
    ///         BotId = testV2modelsBot.Id,
    ///         LocaleSpecification = testV2modelsBotLocale.LocaleId.Apply(localeId =&gt; 
    ///         {
    ///             { localeId, 
    ///             {
    ///                 { "sourceBotVersion", "DRAFT" },
    ///             } },
    ///         }),
    ///     });
    /// 
    ///     var testV2modelsSlotType = new Aws.Lex.V2modelsSlotType("test", new()
    ///     {
    ///         BotId = testV2modelsBot.Id,
    ///         BotVersion = testV2modelsBotLocale.BotVersion,
    ///         Name = "test",
    ///         LocaleId = testV2modelsBotLocale.LocaleId,
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import Lex V2 Models Slot Type using the `example_id_arg`. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:lex/v2modelsSlotType:V2modelsSlotType example bot-1234,DRAFT,en_US,slot_type-id-12345678
    /// ```
    /// </summary>
    [AwsResourceType("aws:lex/v2modelsSlotType:V2modelsSlotType")]
    public partial class V2modelsSlotType : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Identifier of the bot associated with this slot type.
        /// </summary>
        [Output("botId")]
        public Output<string> BotId { get; private set; } = null!;

        /// <summary>
        /// Version of the bot associated with this slot type.
        /// </summary>
        [Output("botVersion")]
        public Output<string> BotVersion { get; private set; } = null!;

        /// <summary>
        /// Specifications for a composite slot type. See `composite_slot_type_setting` argument reference below.
        /// </summary>
        [Output("compositeSlotTypeSetting")]
        public Output<Outputs.V2modelsSlotTypeCompositeSlotTypeSetting?> CompositeSlotTypeSetting { get; private set; } = null!;

        /// <summary>
        /// Description of the slot type.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Type of external information used to create the slot type. See `external_source_setting` argument reference below.
        /// </summary>
        [Output("externalSourceSetting")]
        public Output<Outputs.V2modelsSlotTypeExternalSourceSetting?> ExternalSourceSetting { get; private set; } = null!;

        /// <summary>
        /// Identifier of the language and locale where this slot type is used. All of the bots, slot types, and slots used by the intent must have the same locale.
        /// </summary>
        [Output("localeId")]
        public Output<string> LocaleId { get; private set; } = null!;

        /// <summary>
        /// Name of the slot type
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Built-in slot type used as a parent of this slot type. When you define a parent slot type, the new slot type has the configuration of the parent slot type. Only AMAZON.AlphaNumeric is supported.
        /// </summary>
        [Output("parentSlotTypeSignature")]
        public Output<string?> ParentSlotTypeSignature { get; private set; } = null!;

        /// <summary>
        /// Unique identifier assigned to a slot type. This refers to either a built-in slot type or the unique slotTypeId of a custom slot type.
        /// </summary>
        [Output("slotTypeId")]
        public Output<string> SlotTypeId { get; private set; } = null!;

        /// <summary>
        /// List of SlotTypeValue objects that defines the values that the slot type can take. Each value can have a list of synonyms, additional values that help train the machine learning model about the values that it resolves for a slot. See `slot_type_values` argument reference below.
        /// </summary>
        [Output("slotTypeValues")]
        public Output<Outputs.V2modelsSlotTypeSlotTypeValues?> SlotTypeValues { get; private set; } = null!;

        [Output("timeouts")]
        public Output<Outputs.V2modelsSlotTypeTimeouts?> Timeouts { get; private set; } = null!;

        /// <summary>
        /// Determines the strategy that Amazon Lex uses to select a value from the list of possible values. The field can be set to one of the following values: `ORIGINAL_VALUE` returns the value entered by the user, if the user value is similar to the slot value. `TOP_RESOLUTION` if there is a resolution list for the slot, return the first value in the resolution list. If there is no resolution list, return null. If you don't specify the valueSelectionSetting parameter, the default is ORIGINAL_VALUE. See `value_selection_setting` argument reference below.
        /// </summary>
        [Output("valueSelectionSetting")]
        public Output<Outputs.V2modelsSlotTypeValueSelectionSetting?> ValueSelectionSetting { get; private set; } = null!;


        /// <summary>
        /// Create a V2modelsSlotType resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public V2modelsSlotType(string name, V2modelsSlotTypeArgs args, CustomResourceOptions? options = null)
            : base("aws:lex/v2modelsSlotType:V2modelsSlotType", name, args ?? new V2modelsSlotTypeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private V2modelsSlotType(string name, Input<string> id, V2modelsSlotTypeState? state = null, CustomResourceOptions? options = null)
            : base("aws:lex/v2modelsSlotType:V2modelsSlotType", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing V2modelsSlotType resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static V2modelsSlotType Get(string name, Input<string> id, V2modelsSlotTypeState? state = null, CustomResourceOptions? options = null)
        {
            return new V2modelsSlotType(name, id, state, options);
        }
    }

    public sealed class V2modelsSlotTypeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Identifier of the bot associated with this slot type.
        /// </summary>
        [Input("botId", required: true)]
        public Input<string> BotId { get; set; } = null!;

        /// <summary>
        /// Version of the bot associated with this slot type.
        /// </summary>
        [Input("botVersion", required: true)]
        public Input<string> BotVersion { get; set; } = null!;

        /// <summary>
        /// Specifications for a composite slot type. See `composite_slot_type_setting` argument reference below.
        /// </summary>
        [Input("compositeSlotTypeSetting")]
        public Input<Inputs.V2modelsSlotTypeCompositeSlotTypeSettingArgs>? CompositeSlotTypeSetting { get; set; }

        /// <summary>
        /// Description of the slot type.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Type of external information used to create the slot type. See `external_source_setting` argument reference below.
        /// </summary>
        [Input("externalSourceSetting")]
        public Input<Inputs.V2modelsSlotTypeExternalSourceSettingArgs>? ExternalSourceSetting { get; set; }

        /// <summary>
        /// Identifier of the language and locale where this slot type is used. All of the bots, slot types, and slots used by the intent must have the same locale.
        /// </summary>
        [Input("localeId", required: true)]
        public Input<string> LocaleId { get; set; } = null!;

        /// <summary>
        /// Name of the slot type
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Built-in slot type used as a parent of this slot type. When you define a parent slot type, the new slot type has the configuration of the parent slot type. Only AMAZON.AlphaNumeric is supported.
        /// </summary>
        [Input("parentSlotTypeSignature")]
        public Input<string>? ParentSlotTypeSignature { get; set; }

        /// <summary>
        /// List of SlotTypeValue objects that defines the values that the slot type can take. Each value can have a list of synonyms, additional values that help train the machine learning model about the values that it resolves for a slot. See `slot_type_values` argument reference below.
        /// </summary>
        [Input("slotTypeValues")]
        public Input<Inputs.V2modelsSlotTypeSlotTypeValuesArgs>? SlotTypeValues { get; set; }

        [Input("timeouts")]
        public Input<Inputs.V2modelsSlotTypeTimeoutsArgs>? Timeouts { get; set; }

        /// <summary>
        /// Determines the strategy that Amazon Lex uses to select a value from the list of possible values. The field can be set to one of the following values: `ORIGINAL_VALUE` returns the value entered by the user, if the user value is similar to the slot value. `TOP_RESOLUTION` if there is a resolution list for the slot, return the first value in the resolution list. If there is no resolution list, return null. If you don't specify the valueSelectionSetting parameter, the default is ORIGINAL_VALUE. See `value_selection_setting` argument reference below.
        /// </summary>
        [Input("valueSelectionSetting")]
        public Input<Inputs.V2modelsSlotTypeValueSelectionSettingArgs>? ValueSelectionSetting { get; set; }

        public V2modelsSlotTypeArgs()
        {
        }
        public static new V2modelsSlotTypeArgs Empty => new V2modelsSlotTypeArgs();
    }

    public sealed class V2modelsSlotTypeState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Identifier of the bot associated with this slot type.
        /// </summary>
        [Input("botId")]
        public Input<string>? BotId { get; set; }

        /// <summary>
        /// Version of the bot associated with this slot type.
        /// </summary>
        [Input("botVersion")]
        public Input<string>? BotVersion { get; set; }

        /// <summary>
        /// Specifications for a composite slot type. See `composite_slot_type_setting` argument reference below.
        /// </summary>
        [Input("compositeSlotTypeSetting")]
        public Input<Inputs.V2modelsSlotTypeCompositeSlotTypeSettingGetArgs>? CompositeSlotTypeSetting { get; set; }

        /// <summary>
        /// Description of the slot type.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Type of external information used to create the slot type. See `external_source_setting` argument reference below.
        /// </summary>
        [Input("externalSourceSetting")]
        public Input<Inputs.V2modelsSlotTypeExternalSourceSettingGetArgs>? ExternalSourceSetting { get; set; }

        /// <summary>
        /// Identifier of the language and locale where this slot type is used. All of the bots, slot types, and slots used by the intent must have the same locale.
        /// </summary>
        [Input("localeId")]
        public Input<string>? LocaleId { get; set; }

        /// <summary>
        /// Name of the slot type
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Built-in slot type used as a parent of this slot type. When you define a parent slot type, the new slot type has the configuration of the parent slot type. Only AMAZON.AlphaNumeric is supported.
        /// </summary>
        [Input("parentSlotTypeSignature")]
        public Input<string>? ParentSlotTypeSignature { get; set; }

        /// <summary>
        /// Unique identifier assigned to a slot type. This refers to either a built-in slot type or the unique slotTypeId of a custom slot type.
        /// </summary>
        [Input("slotTypeId")]
        public Input<string>? SlotTypeId { get; set; }

        /// <summary>
        /// List of SlotTypeValue objects that defines the values that the slot type can take. Each value can have a list of synonyms, additional values that help train the machine learning model about the values that it resolves for a slot. See `slot_type_values` argument reference below.
        /// </summary>
        [Input("slotTypeValues")]
        public Input<Inputs.V2modelsSlotTypeSlotTypeValuesGetArgs>? SlotTypeValues { get; set; }

        [Input("timeouts")]
        public Input<Inputs.V2modelsSlotTypeTimeoutsGetArgs>? Timeouts { get; set; }

        /// <summary>
        /// Determines the strategy that Amazon Lex uses to select a value from the list of possible values. The field can be set to one of the following values: `ORIGINAL_VALUE` returns the value entered by the user, if the user value is similar to the slot value. `TOP_RESOLUTION` if there is a resolution list for the slot, return the first value in the resolution list. If there is no resolution list, return null. If you don't specify the valueSelectionSetting parameter, the default is ORIGINAL_VALUE. See `value_selection_setting` argument reference below.
        /// </summary>
        [Input("valueSelectionSetting")]
        public Input<Inputs.V2modelsSlotTypeValueSelectionSettingGetArgs>? ValueSelectionSetting { get; set; }

        public V2modelsSlotTypeState()
        {
        }
        public static new V2modelsSlotTypeState Empty => new V2modelsSlotTypeState();
    }
}
