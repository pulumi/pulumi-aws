// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Lex.Outputs
{

    [OutputType]
    public sealed class V2modelsIntentFulfillmentCodeHookFulfillmentUpdatesSpecification
    {
        /// <summary>
        /// Whether fulfillment updates are sent to the user. When this field is true, updates are sent. If the active field is set to true, the `start_response`, `update_response`, and `timeout_in_seconds` fields are required.
        /// </summary>
        public readonly bool Active;
        /// <summary>
        /// Configuration block for the message sent to users when the fulfillment Lambda functions starts running.
        /// </summary>
        public readonly Outputs.V2modelsIntentFulfillmentCodeHookFulfillmentUpdatesSpecificationStartResponse? StartResponse;
        /// <summary>
        /// Length of time that the fulfillment Lambda function should run before it times out.
        /// </summary>
        public readonly int? TimeoutInSeconds;
        /// <summary>
        /// Configuration block for messages sent periodically to the user while the fulfillment Lambda function is running.
        /// </summary>
        public readonly Outputs.V2modelsIntentFulfillmentCodeHookFulfillmentUpdatesSpecificationUpdateResponse? UpdateResponse;

        [OutputConstructor]
        private V2modelsIntentFulfillmentCodeHookFulfillmentUpdatesSpecification(
            bool active,

            Outputs.V2modelsIntentFulfillmentCodeHookFulfillmentUpdatesSpecificationStartResponse? startResponse,

            int? timeoutInSeconds,

            Outputs.V2modelsIntentFulfillmentCodeHookFulfillmentUpdatesSpecificationUpdateResponse? updateResponse)
        {
            Active = active;
            StartResponse = startResponse;
            TimeoutInSeconds = timeoutInSeconds;
            UpdateResponse = updateResponse;
        }
    }
}
