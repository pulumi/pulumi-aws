// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Lex
{
    [AwsResourceType("aws:lex/bot:Bot")]
    public partial class Bot : global::Pulumi.CustomResource
    {
        [Output("abortStatement")]
        public Output<Outputs.BotAbortStatement> AbortStatement { get; private set; } = null!;

        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("checksum")]
        public Output<string> Checksum { get; private set; } = null!;

        [Output("childDirected")]
        public Output<bool> ChildDirected { get; private set; } = null!;

        [Output("clarificationPrompt")]
        public Output<Outputs.BotClarificationPrompt?> ClarificationPrompt { get; private set; } = null!;

        [Output("createVersion")]
        public Output<bool?> CreateVersion { get; private set; } = null!;

        [Output("createdDate")]
        public Output<string> CreatedDate { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("detectSentiment")]
        public Output<bool?> DetectSentiment { get; private set; } = null!;

        [Output("enableModelImprovements")]
        public Output<bool?> EnableModelImprovements { get; private set; } = null!;

        [Output("failureReason")]
        public Output<string> FailureReason { get; private set; } = null!;

        [Output("idleSessionTtlInSeconds")]
        public Output<int?> IdleSessionTtlInSeconds { get; private set; } = null!;

        [Output("intents")]
        public Output<ImmutableArray<Outputs.BotIntent>> Intents { get; private set; } = null!;

        [Output("lastUpdatedDate")]
        public Output<string> LastUpdatedDate { get; private set; } = null!;

        [Output("locale")]
        public Output<string?> Locale { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("nluIntentConfidenceThreshold")]
        public Output<double?> NluIntentConfidenceThreshold { get; private set; } = null!;

        [Output("processBehavior")]
        public Output<string?> ProcessBehavior { get; private set; } = null!;

        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        [Output("version")]
        public Output<string> Version { get; private set; } = null!;

        [Output("voiceId")]
        public Output<string> VoiceId { get; private set; } = null!;


        /// <summary>
        /// Create a Bot resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Bot(string name, BotArgs args, CustomResourceOptions? options = null)
            : base("aws:lex/bot:Bot", name, args ?? new BotArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Bot(string name, Input<string> id, BotState? state = null, CustomResourceOptions? options = null)
            : base("aws:lex/bot:Bot", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Bot resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Bot Get(string name, Input<string> id, BotState? state = null, CustomResourceOptions? options = null)
        {
            return new Bot(name, id, state, options);
        }
    }

    public sealed class BotArgs : global::Pulumi.ResourceArgs
    {
        [Input("abortStatement", required: true)]
        public Input<Inputs.BotAbortStatementArgs> AbortStatement { get; set; } = null!;

        [Input("childDirected", required: true)]
        public Input<bool> ChildDirected { get; set; } = null!;

        [Input("clarificationPrompt")]
        public Input<Inputs.BotClarificationPromptArgs>? ClarificationPrompt { get; set; }

        [Input("createVersion")]
        public Input<bool>? CreateVersion { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("detectSentiment")]
        public Input<bool>? DetectSentiment { get; set; }

        [Input("enableModelImprovements")]
        public Input<bool>? EnableModelImprovements { get; set; }

        [Input("idleSessionTtlInSeconds")]
        public Input<int>? IdleSessionTtlInSeconds { get; set; }

        [Input("intents", required: true)]
        private InputList<Inputs.BotIntentArgs>? _intents;
        public InputList<Inputs.BotIntentArgs> Intents
        {
            get => _intents ?? (_intents = new InputList<Inputs.BotIntentArgs>());
            set => _intents = value;
        }

        [Input("locale")]
        public Input<string>? Locale { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("nluIntentConfidenceThreshold")]
        public Input<double>? NluIntentConfidenceThreshold { get; set; }

        [Input("processBehavior")]
        public Input<string>? ProcessBehavior { get; set; }

        [Input("voiceId")]
        public Input<string>? VoiceId { get; set; }

        public BotArgs()
        {
        }
        public static new BotArgs Empty => new BotArgs();
    }

    public sealed class BotState : global::Pulumi.ResourceArgs
    {
        [Input("abortStatement")]
        public Input<Inputs.BotAbortStatementGetArgs>? AbortStatement { get; set; }

        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("checksum")]
        public Input<string>? Checksum { get; set; }

        [Input("childDirected")]
        public Input<bool>? ChildDirected { get; set; }

        [Input("clarificationPrompt")]
        public Input<Inputs.BotClarificationPromptGetArgs>? ClarificationPrompt { get; set; }

        [Input("createVersion")]
        public Input<bool>? CreateVersion { get; set; }

        [Input("createdDate")]
        public Input<string>? CreatedDate { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("detectSentiment")]
        public Input<bool>? DetectSentiment { get; set; }

        [Input("enableModelImprovements")]
        public Input<bool>? EnableModelImprovements { get; set; }

        [Input("failureReason")]
        public Input<string>? FailureReason { get; set; }

        [Input("idleSessionTtlInSeconds")]
        public Input<int>? IdleSessionTtlInSeconds { get; set; }

        [Input("intents")]
        private InputList<Inputs.BotIntentGetArgs>? _intents;
        public InputList<Inputs.BotIntentGetArgs> Intents
        {
            get => _intents ?? (_intents = new InputList<Inputs.BotIntentGetArgs>());
            set => _intents = value;
        }

        [Input("lastUpdatedDate")]
        public Input<string>? LastUpdatedDate { get; set; }

        [Input("locale")]
        public Input<string>? Locale { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("nluIntentConfidenceThreshold")]
        public Input<double>? NluIntentConfidenceThreshold { get; set; }

        [Input("processBehavior")]
        public Input<string>? ProcessBehavior { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("version")]
        public Input<string>? Version { get; set; }

        [Input("voiceId")]
        public Input<string>? VoiceId { get; set; }

        public BotState()
        {
        }
        public static new BotState Empty => new BotState();
    }
}
