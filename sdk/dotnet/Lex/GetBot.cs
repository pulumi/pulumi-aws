// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Lex
{
    public static class GetBot
    {
        /// <summary>
        /// Provides details about a specific Amazon Lex Bot.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var orderFlowersBot = Output.Create(Aws.Lex.GetBot.InvokeAsync(new Aws.Lex.GetBotArgs
        ///         {
        ///             Name = "OrderFlowers",
        ///             Version = "$LATEST",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetBotResult> InvokeAsync(GetBotArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetBotResult>("aws:lex/getBot:getBot", args ?? new GetBotArgs(), options.WithVersion());
    }


    public sealed class GetBotArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the bot. The name is case sensitive.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The version or alias of the bot.
        /// </summary>
        [Input("version")]
        public string? Version { get; set; }

        public GetBotArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetBotResult
    {
        /// <summary>
        /// The ARN of the bot.
        /// </summary>
        public readonly string Arn;
        /// <summary>
        /// Checksum of the bot used to identify a specific revision of the bot's `$LATEST` version.
        /// </summary>
        public readonly string Checksum;
        /// <summary>
        /// Specifies if this Amazon Lex Bot is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA.
        /// </summary>
        public readonly bool ChildDirected;
        /// <summary>
        /// The date that the bot was created.
        /// </summary>
        public readonly string CreatedDate;
        /// <summary>
        /// A description of the bot.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// When set to true user utterances are sent to Amazon Comprehend for sentiment analysis.
        /// </summary>
        public readonly bool DetectSentiment;
        /// <summary>
        /// Set to true if natural language understanding improvements are enabled.
        /// </summary>
        public readonly bool EnableModelImprovements;
        /// <summary>
        /// If the `status` is `FAILED`, the reason why the bot failed to build.
        /// </summary>
        public readonly string FailureReason;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The maximum time in seconds that Amazon Lex retains the data gathered in a conversation.
        /// </summary>
        public readonly int IdleSessionTtlInSeconds;
        /// <summary>
        /// The date that the bot was updated.
        /// </summary>
        public readonly string LastUpdatedDate;
        /// <summary>
        /// Specifies the target locale for the bot. Any intent used in the bot must be compatible with the locale of the bot.
        /// </summary>
        public readonly string Locale;
        /// <summary>
        /// The name of the bot, case sensitive.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The threshold where Amazon Lex will insert the AMAZON.FallbackIntent, AMAZON.KendraSearchIntent, or both when returning alternative intents in a PostContent or PostText response. AMAZON.FallbackIntent and AMAZON.KendraSearchIntent are only inserted if they are configured for the bot.
        /// </summary>
        public readonly double NluIntentConfidenceThreshold;
        /// <summary>
        /// The status of the bot.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The version of the bot. For a new bot, the version is always `$LATEST`.
        /// </summary>
        public readonly string? Version;
        /// <summary>
        /// The Amazon Polly voice ID that the Amazon Lex Bot uses for voice interactions with the user.
        /// </summary>
        public readonly string VoiceId;

        [OutputConstructor]
        private GetBotResult(
            string arn,

            string checksum,

            bool childDirected,

            string createdDate,

            string description,

            bool detectSentiment,

            bool enableModelImprovements,

            string failureReason,

            string id,

            int idleSessionTtlInSeconds,

            string lastUpdatedDate,

            string locale,

            string name,

            double nluIntentConfidenceThreshold,

            string status,

            string? version,

            string voiceId)
        {
            Arn = arn;
            Checksum = checksum;
            ChildDirected = childDirected;
            CreatedDate = createdDate;
            Description = description;
            DetectSentiment = detectSentiment;
            EnableModelImprovements = enableModelImprovements;
            FailureReason = failureReason;
            Id = id;
            IdleSessionTtlInSeconds = idleSessionTtlInSeconds;
            LastUpdatedDate = lastUpdatedDate;
            Locale = locale;
            Name = name;
            NluIntentConfidenceThreshold = nluIntentConfidenceThreshold;
            Status = status;
            Version = version;
            VoiceId = voiceId;
        }
    }
}
