// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Lex
{
    /// <summary>
    /// Provides an Amazon Lex Bot Alias resource. For more information see
    /// [Amazon Lex: How It Works](https://docs.aws.amazon.com/lex/latest/dg/how-it-works.html)
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var orderFlowersProd = new Aws.Lex.BotAlias("orderFlowersProd", new Aws.Lex.BotAliasArgs
    ///         {
    ///             BotName = "OrderFlowers",
    ///             BotVersion = "1",
    ///             Description = "Production Version of the OrderFlowers Bot.",
    ///             Name = "OrderFlowersProd",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// Bot aliases can be imported using an ID with the format `bot_name:bot_alias_name`.
    /// 
    /// ```sh
    ///  $ pulumi import aws:lex/botAlias:BotAlias order_flowers_prod OrderFlowers:OrderFlowersProd
    /// ```
    /// </summary>
    public partial class BotAlias : Pulumi.CustomResource
    {
        /// <summary>
        /// The ARN of the bot alias.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// The name of the bot.
        /// </summary>
        [Output("botName")]
        public Output<string> BotName { get; private set; } = null!;

        /// <summary>
        /// The name of the bot.
        /// </summary>
        [Output("botVersion")]
        public Output<string> BotVersion { get; private set; } = null!;

        /// <summary>
        /// Checksum of the bot alias.
        /// </summary>
        [Output("checksum")]
        public Output<string> Checksum { get; private set; } = null!;

        /// <summary>
        /// The settings that determine how Amazon Lex uses conversation logs for the alias. Attributes are documented under conversation_logs.
        /// </summary>
        [Output("conversationLogs")]
        public Output<Outputs.BotAliasConversationLogs?> ConversationLogs { get; private set; } = null!;

        /// <summary>
        /// The date that the bot alias was created.
        /// </summary>
        [Output("createdDate")]
        public Output<string> CreatedDate { get; private set; } = null!;

        /// <summary>
        /// A description of the alias. Must be less than or equal to 200 characters in length.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The date that the bot alias was updated. When you create a resource, the creation date and the last updated date are the same.
        /// </summary>
        [Output("lastUpdatedDate")]
        public Output<string> LastUpdatedDate { get; private set; } = null!;

        /// <summary>
        /// The name of the alias. The name is not case sensitive. Must be less than or equal to 100 characters in length.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a BotAlias resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BotAlias(string name, BotAliasArgs args, CustomResourceOptions? options = null)
            : base("aws:lex/botAlias:BotAlias", name, args ?? new BotAliasArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BotAlias(string name, Input<string> id, BotAliasState? state = null, CustomResourceOptions? options = null)
            : base("aws:lex/botAlias:BotAlias", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BotAlias resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BotAlias Get(string name, Input<string> id, BotAliasState? state = null, CustomResourceOptions? options = null)
        {
            return new BotAlias(name, id, state, options);
        }
    }

    public sealed class BotAliasArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the bot.
        /// </summary>
        [Input("botName", required: true)]
        public Input<string> BotName { get; set; } = null!;

        /// <summary>
        /// The name of the bot.
        /// </summary>
        [Input("botVersion", required: true)]
        public Input<string> BotVersion { get; set; } = null!;

        /// <summary>
        /// The settings that determine how Amazon Lex uses conversation logs for the alias. Attributes are documented under conversation_logs.
        /// </summary>
        [Input("conversationLogs")]
        public Input<Inputs.BotAliasConversationLogsArgs>? ConversationLogs { get; set; }

        /// <summary>
        /// A description of the alias. Must be less than or equal to 200 characters in length.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the alias. The name is not case sensitive. Must be less than or equal to 100 characters in length.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public BotAliasArgs()
        {
        }
    }

    public sealed class BotAliasState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ARN of the bot alias.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// The name of the bot.
        /// </summary>
        [Input("botName")]
        public Input<string>? BotName { get; set; }

        /// <summary>
        /// The name of the bot.
        /// </summary>
        [Input("botVersion")]
        public Input<string>? BotVersion { get; set; }

        /// <summary>
        /// Checksum of the bot alias.
        /// </summary>
        [Input("checksum")]
        public Input<string>? Checksum { get; set; }

        /// <summary>
        /// The settings that determine how Amazon Lex uses conversation logs for the alias. Attributes are documented under conversation_logs.
        /// </summary>
        [Input("conversationLogs")]
        public Input<Inputs.BotAliasConversationLogsGetArgs>? ConversationLogs { get; set; }

        /// <summary>
        /// The date that the bot alias was created.
        /// </summary>
        [Input("createdDate")]
        public Input<string>? CreatedDate { get; set; }

        /// <summary>
        /// A description of the alias. Must be less than or equal to 200 characters in length.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The date that the bot alias was updated. When you create a resource, the creation date and the last updated date are the same.
        /// </summary>
        [Input("lastUpdatedDate")]
        public Input<string>? LastUpdatedDate { get; set; }

        /// <summary>
        /// The name of the alias. The name is not case sensitive. Must be less than or equal to 100 characters in length.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public BotAliasState()
        {
        }
    }
}
