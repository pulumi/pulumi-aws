// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Lex
{
    /// <summary>
    /// Resource for managing an AWS Lex V2 Models Slot.
    /// 
    /// ## Example Usage
    /// 
    /// ### Basic Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Lex.V2modelsSlot("example", new()
    ///     {
    ///         BotId = exampleAwsLexv2modelsBot.Id,
    ///         BotVersion = exampleAwsLexv2modelsBotVersion.BotVersion,
    ///         IntentId = exampleAwsLexv2modelsIntent.Id,
    ///         LocaleId = exampleAwsLexv2modelsBotLocale.LocaleId,
    ///         Name = "example",
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import Lex V2 Models Slot using the `id`. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:lex/v2modelsSlot:V2modelsSlot example bot-1234,1,intent-5678,en-US,slot-9012
    /// ```
    /// </summary>
    [AwsResourceType("aws:lex/v2modelsSlot:V2modelsSlot")]
    public partial class V2modelsSlot : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Identifier of the bot associated with the slot.
        /// </summary>
        [Output("botId")]
        public Output<string> BotId { get; private set; } = null!;

        /// <summary>
        /// Version of the bot associated with the slot.
        /// </summary>
        [Output("botVersion")]
        public Output<string> BotVersion { get; private set; } = null!;

        /// <summary>
        /// Description of the slot.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Identifier of the intent that contains the slot.
        /// </summary>
        [Output("intentId")]
        public Output<string> IntentId { get; private set; } = null!;

        /// <summary>
        /// Identifier of the language and locale that the slot will be used in.
        /// </summary>
        [Output("localeId")]
        public Output<string> LocaleId { get; private set; } = null!;

        /// <summary>
        /// Whether the slot returns multiple values in one response. See the `multiple_values_setting` argument reference below.
        /// </summary>
        [Output("multipleValuesSettings")]
        public Output<ImmutableArray<Outputs.V2modelsSlotMultipleValuesSetting>> MultipleValuesSettings { get; private set; } = null!;

        /// <summary>
        /// Name of the slot.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Determines how slot values are used in Amazon CloudWatch logs. See the `obfuscation_setting` argument reference below.
        /// </summary>
        [Output("obfuscationSettings")]
        public Output<ImmutableArray<Outputs.V2modelsSlotObfuscationSetting>> ObfuscationSettings { get; private set; } = null!;

        /// <summary>
        /// Unique identifier associated with the slot.
        /// </summary>
        [Output("slotId")]
        public Output<string> SlotId { get; private set; } = null!;

        /// <summary>
        /// Unique identifier for the slot type associated with this slot.
        /// </summary>
        [Output("slotTypeId")]
        public Output<string?> SlotTypeId { get; private set; } = null!;

        [Output("timeouts")]
        public Output<Outputs.V2modelsSlotTimeouts?> Timeouts { get; private set; } = null!;

        /// <summary>
        /// Prompts that Amazon Lex sends to the user to elicit a response that provides the value for the slot.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Output("valueElicitationSetting")]
        public Output<Outputs.V2modelsSlotValueElicitationSetting?> ValueElicitationSetting { get; private set; } = null!;


        /// <summary>
        /// Create a V2modelsSlot resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public V2modelsSlot(string name, V2modelsSlotArgs args, CustomResourceOptions? options = null)
            : base("aws:lex/v2modelsSlot:V2modelsSlot", name, args ?? new V2modelsSlotArgs(), MakeResourceOptions(options, ""))
        {
        }

        private V2modelsSlot(string name, Input<string> id, V2modelsSlotState? state = null, CustomResourceOptions? options = null)
            : base("aws:lex/v2modelsSlot:V2modelsSlot", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing V2modelsSlot resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static V2modelsSlot Get(string name, Input<string> id, V2modelsSlotState? state = null, CustomResourceOptions? options = null)
        {
            return new V2modelsSlot(name, id, state, options);
        }
    }

    public sealed class V2modelsSlotArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Identifier of the bot associated with the slot.
        /// </summary>
        [Input("botId", required: true)]
        public Input<string> BotId { get; set; } = null!;

        /// <summary>
        /// Version of the bot associated with the slot.
        /// </summary>
        [Input("botVersion", required: true)]
        public Input<string> BotVersion { get; set; } = null!;

        /// <summary>
        /// Description of the slot.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Identifier of the intent that contains the slot.
        /// </summary>
        [Input("intentId", required: true)]
        public Input<string> IntentId { get; set; } = null!;

        /// <summary>
        /// Identifier of the language and locale that the slot will be used in.
        /// </summary>
        [Input("localeId", required: true)]
        public Input<string> LocaleId { get; set; } = null!;

        [Input("multipleValuesSettings")]
        private InputList<Inputs.V2modelsSlotMultipleValuesSettingArgs>? _multipleValuesSettings;

        /// <summary>
        /// Whether the slot returns multiple values in one response. See the `multiple_values_setting` argument reference below.
        /// </summary>
        public InputList<Inputs.V2modelsSlotMultipleValuesSettingArgs> MultipleValuesSettings
        {
            get => _multipleValuesSettings ?? (_multipleValuesSettings = new InputList<Inputs.V2modelsSlotMultipleValuesSettingArgs>());
            set => _multipleValuesSettings = value;
        }

        /// <summary>
        /// Name of the slot.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("obfuscationSettings")]
        private InputList<Inputs.V2modelsSlotObfuscationSettingArgs>? _obfuscationSettings;

        /// <summary>
        /// Determines how slot values are used in Amazon CloudWatch logs. See the `obfuscation_setting` argument reference below.
        /// </summary>
        public InputList<Inputs.V2modelsSlotObfuscationSettingArgs> ObfuscationSettings
        {
            get => _obfuscationSettings ?? (_obfuscationSettings = new InputList<Inputs.V2modelsSlotObfuscationSettingArgs>());
            set => _obfuscationSettings = value;
        }

        /// <summary>
        /// Unique identifier for the slot type associated with this slot.
        /// </summary>
        [Input("slotTypeId")]
        public Input<string>? SlotTypeId { get; set; }

        [Input("timeouts")]
        public Input<Inputs.V2modelsSlotTimeoutsArgs>? Timeouts { get; set; }

        /// <summary>
        /// Prompts that Amazon Lex sends to the user to elicit a response that provides the value for the slot.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("valueElicitationSetting")]
        public Input<Inputs.V2modelsSlotValueElicitationSettingArgs>? ValueElicitationSetting { get; set; }

        public V2modelsSlotArgs()
        {
        }
        public static new V2modelsSlotArgs Empty => new V2modelsSlotArgs();
    }

    public sealed class V2modelsSlotState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Identifier of the bot associated with the slot.
        /// </summary>
        [Input("botId")]
        public Input<string>? BotId { get; set; }

        /// <summary>
        /// Version of the bot associated with the slot.
        /// </summary>
        [Input("botVersion")]
        public Input<string>? BotVersion { get; set; }

        /// <summary>
        /// Description of the slot.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Identifier of the intent that contains the slot.
        /// </summary>
        [Input("intentId")]
        public Input<string>? IntentId { get; set; }

        /// <summary>
        /// Identifier of the language and locale that the slot will be used in.
        /// </summary>
        [Input("localeId")]
        public Input<string>? LocaleId { get; set; }

        [Input("multipleValuesSettings")]
        private InputList<Inputs.V2modelsSlotMultipleValuesSettingGetArgs>? _multipleValuesSettings;

        /// <summary>
        /// Whether the slot returns multiple values in one response. See the `multiple_values_setting` argument reference below.
        /// </summary>
        public InputList<Inputs.V2modelsSlotMultipleValuesSettingGetArgs> MultipleValuesSettings
        {
            get => _multipleValuesSettings ?? (_multipleValuesSettings = new InputList<Inputs.V2modelsSlotMultipleValuesSettingGetArgs>());
            set => _multipleValuesSettings = value;
        }

        /// <summary>
        /// Name of the slot.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("obfuscationSettings")]
        private InputList<Inputs.V2modelsSlotObfuscationSettingGetArgs>? _obfuscationSettings;

        /// <summary>
        /// Determines how slot values are used in Amazon CloudWatch logs. See the `obfuscation_setting` argument reference below.
        /// </summary>
        public InputList<Inputs.V2modelsSlotObfuscationSettingGetArgs> ObfuscationSettings
        {
            get => _obfuscationSettings ?? (_obfuscationSettings = new InputList<Inputs.V2modelsSlotObfuscationSettingGetArgs>());
            set => _obfuscationSettings = value;
        }

        /// <summary>
        /// Unique identifier associated with the slot.
        /// </summary>
        [Input("slotId")]
        public Input<string>? SlotId { get; set; }

        /// <summary>
        /// Unique identifier for the slot type associated with this slot.
        /// </summary>
        [Input("slotTypeId")]
        public Input<string>? SlotTypeId { get; set; }

        [Input("timeouts")]
        public Input<Inputs.V2modelsSlotTimeoutsGetArgs>? Timeouts { get; set; }

        /// <summary>
        /// Prompts that Amazon Lex sends to the user to elicit a response that provides the value for the slot.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("valueElicitationSetting")]
        public Input<Inputs.V2modelsSlotValueElicitationSettingGetArgs>? ValueElicitationSetting { get; set; }

        public V2modelsSlotState()
        {
        }
        public static new V2modelsSlotState Empty => new V2modelsSlotState();
    }
}
