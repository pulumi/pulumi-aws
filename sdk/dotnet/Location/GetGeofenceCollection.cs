// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Location
{
    public static class GetGeofenceCollection
    {
        /// <summary>
        /// Retrieve information about a Location Service Geofence Collection.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Location.GetGeofenceCollection.Invoke(new()
        ///     {
        ///         CollectionName = "example",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetGeofenceCollectionResult> InvokeAsync(GetGeofenceCollectionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGeofenceCollectionResult>("aws:location/getGeofenceCollection:getGeofenceCollection", args ?? new GetGeofenceCollectionArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieve information about a Location Service Geofence Collection.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Location.GetGeofenceCollection.Invoke(new()
        ///     {
        ///         CollectionName = "example",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetGeofenceCollectionResult> Invoke(GetGeofenceCollectionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGeofenceCollectionResult>("aws:location/getGeofenceCollection:getGeofenceCollection", args ?? new GetGeofenceCollectionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGeofenceCollectionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the geofence collection.
        /// </summary>
        [Input("collectionName", required: true)]
        public string CollectionName { get; set; } = null!;

        /// <summary>
        /// Key identifier for an AWS KMS customer managed key assigned to the Amazon Location resource.
        /// </summary>
        [Input("kmsKeyId")]
        public string? KmsKeyId { get; set; }

        [Input("tags")]
        private Dictionary<string, string>? _tags;

        /// <summary>
        /// Key-value map of resource tags for the geofence collection.
        /// </summary>
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetGeofenceCollectionArgs()
        {
        }
        public static new GetGeofenceCollectionArgs Empty => new GetGeofenceCollectionArgs();
    }

    public sealed class GetGeofenceCollectionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the geofence collection.
        /// </summary>
        [Input("collectionName", required: true)]
        public Input<string> CollectionName { get; set; } = null!;

        /// <summary>
        /// Key identifier for an AWS KMS customer managed key assigned to the Amazon Location resource.
        /// </summary>
        [Input("kmsKeyId")]
        public Input<string>? KmsKeyId { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value map of resource tags for the geofence collection.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetGeofenceCollectionInvokeArgs()
        {
        }
        public static new GetGeofenceCollectionInvokeArgs Empty => new GetGeofenceCollectionInvokeArgs();
    }


    [OutputType]
    public sealed class GetGeofenceCollectionResult
    {
        /// <summary>
        /// ARN for the geofence collection resource. Used when you need to specify a resource across all AWS.
        /// </summary>
        public readonly string CollectionArn;
        public readonly string CollectionName;
        /// <summary>
        /// Timestamp for when the geofence collection resource was created in ISO 8601 format.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// Optional description of the geofence collection resource.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Key identifier for an AWS KMS customer managed key assigned to the Amazon Location resource.
        /// </summary>
        public readonly string KmsKeyId;
        /// <summary>
        /// Key-value map of resource tags for the geofence collection.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// Timestamp for when the geofence collection resource was last updated in ISO 8601 format.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetGeofenceCollectionResult(
            string collectionArn,

            string collectionName,

            string createTime,

            string description,

            string id,

            string kmsKeyId,

            ImmutableDictionary<string, string> tags,

            string updateTime)
        {
            CollectionArn = collectionArn;
            CollectionName = collectionName;
            CreateTime = createTime;
            Description = description;
            Id = id;
            KmsKeyId = kmsKeyId;
            Tags = tags;
            UpdateTime = updateTime;
        }
    }
}
