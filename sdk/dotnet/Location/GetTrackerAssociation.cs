// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Location
{
    public static class GetTrackerAssociation
    {
        /// <summary>
        /// Retrieve information about a Location Service Tracker Association.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Location.GetTrackerAssociation.Invoke(new()
        ///     {
        ///         ConsumerArn = "arn:aws:geo:region:account-id:geofence-collection/ExampleGeofenceCollectionConsumer",
        ///         TrackerName = "example",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetTrackerAssociationResult> InvokeAsync(GetTrackerAssociationArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetTrackerAssociationResult>("aws:location/getTrackerAssociation:getTrackerAssociation", args ?? new GetTrackerAssociationArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieve information about a Location Service Tracker Association.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Location.GetTrackerAssociation.Invoke(new()
        ///     {
        ///         ConsumerArn = "arn:aws:geo:region:account-id:geofence-collection/ExampleGeofenceCollectionConsumer",
        ///         TrackerName = "example",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetTrackerAssociationResult> Invoke(GetTrackerAssociationInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetTrackerAssociationResult>("aws:location/getTrackerAssociation:getTrackerAssociation", args ?? new GetTrackerAssociationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTrackerAssociationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ARN of the geofence collection associated to tracker resource.
        /// </summary>
        [Input("consumerArn", required: true)]
        public string ConsumerArn { get; set; } = null!;

        /// <summary>
        /// Name of the tracker resource associated with a geofence collection.
        /// </summary>
        [Input("trackerName", required: true)]
        public string TrackerName { get; set; } = null!;

        public GetTrackerAssociationArgs()
        {
        }
        public static new GetTrackerAssociationArgs Empty => new GetTrackerAssociationArgs();
    }

    public sealed class GetTrackerAssociationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ARN of the geofence collection associated to tracker resource.
        /// </summary>
        [Input("consumerArn", required: true)]
        public Input<string> ConsumerArn { get; set; } = null!;

        /// <summary>
        /// Name of the tracker resource associated with a geofence collection.
        /// </summary>
        [Input("trackerName", required: true)]
        public Input<string> TrackerName { get; set; } = null!;

        public GetTrackerAssociationInvokeArgs()
        {
        }
        public static new GetTrackerAssociationInvokeArgs Empty => new GetTrackerAssociationInvokeArgs();
    }


    [OutputType]
    public sealed class GetTrackerAssociationResult
    {
        public readonly string ConsumerArn;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string TrackerName;

        [OutputConstructor]
        private GetTrackerAssociationResult(
            string consumerArn,

            string id,

            string trackerName)
        {
            ConsumerArn = consumerArn;
            Id = id;
            TrackerName = trackerName;
        }
    }
}
