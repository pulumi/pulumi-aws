// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Workspaces
{
    /// <summary>
    /// Resource for managing an AWS WorkSpaces Web User Access Logging Settings resource. Once associated with a web portal, user access logging settings control how user access events are logged to Amazon Kinesis.
    /// 
    /// ## Example Usage
    /// 
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Kinesis.Stream("example", new()
    ///     {
    ///         Name = "amazon-workspaces-web-example-stream",
    ///         ShardCount = 1,
    ///     });
    /// 
    ///     var exampleUserAccessLoggingSettings = new Aws.WorkSpacesWeb.UserAccessLoggingSettings("example", new()
    ///     {
    ///         KinesisStreamArn = example.Arn,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ### With Tags
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Kinesis.Stream("example", new()
    ///     {
    ///         Name = "example-stream",
    ///         ShardCount = 1,
    ///     });
    /// 
    ///     var exampleUserAccessLoggingSettings = new Aws.WorkSpacesWeb.UserAccessLoggingSettings("example", new()
    ///     {
    ///         KinesisStreamArn = example.Arn,
    ///         Tags = 
    ///         {
    ///             { "Name", "example-user-access-logging-settings" },
    ///             { "Environment", "Production" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import WorkSpaces Web User Access Logging Settings using the `user_access_logging_settings_arn`. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:workspaces/webUserAccessLoggingSettings:WebUserAccessLoggingSettings example arn:aws:workspaces-web:us-west-2:123456789012:userAccessLoggingSettings/abcdef12345
    /// ```
    /// </summary>
    [Obsolete(@"aws.workspaces/webuseraccessloggingsettings.WebUserAccessLoggingSettings has been deprecated in favor of aws.workspacesweb/useraccessloggingsettings.UserAccessLoggingSettings")]
    [AwsResourceType("aws:workspaces/webUserAccessLoggingSettings:WebUserAccessLoggingSettings")]
    public partial class WebUserAccessLoggingSettings : global::Pulumi.CustomResource
    {
        /// <summary>
        /// List of web portal ARNs that this user access logging settings resource is associated with.
        /// </summary>
        [Output("associatedPortalArns")]
        public Output<ImmutableArray<string>> AssociatedPortalArns { get; private set; } = null!;

        /// <summary>
        /// ARN of the Kinesis stream.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Output("kinesisStreamArn")]
        public Output<string> KinesisStreamArn { get; private set; } = null!;

        /// <summary>
        /// Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        /// <summary>
        /// ARN of the user access logging settings resource.
        /// </summary>
        [Output("userAccessLoggingSettingsArn")]
        public Output<string> UserAccessLoggingSettingsArn { get; private set; } = null!;


        /// <summary>
        /// Create a WebUserAccessLoggingSettings resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WebUserAccessLoggingSettings(string name, WebUserAccessLoggingSettingsArgs args, CustomResourceOptions? options = null)
            : base("aws:workspaces/webUserAccessLoggingSettings:WebUserAccessLoggingSettings", name, args ?? new WebUserAccessLoggingSettingsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WebUserAccessLoggingSettings(string name, Input<string> id, WebUserAccessLoggingSettingsState? state = null, CustomResourceOptions? options = null)
            : base("aws:workspaces/webUserAccessLoggingSettings:WebUserAccessLoggingSettings", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WebUserAccessLoggingSettings resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WebUserAccessLoggingSettings Get(string name, Input<string> id, WebUserAccessLoggingSettingsState? state = null, CustomResourceOptions? options = null)
        {
            return new WebUserAccessLoggingSettings(name, id, state, options);
        }
    }

    public sealed class WebUserAccessLoggingSettingsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ARN of the Kinesis stream.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("kinesisStreamArn", required: true)]
        public Input<string> KinesisStreamArn { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public WebUserAccessLoggingSettingsArgs()
        {
        }
        public static new WebUserAccessLoggingSettingsArgs Empty => new WebUserAccessLoggingSettingsArgs();
    }

    public sealed class WebUserAccessLoggingSettingsState : global::Pulumi.ResourceArgs
    {
        [Input("associatedPortalArns")]
        private InputList<string>? _associatedPortalArns;

        /// <summary>
        /// List of web portal ARNs that this user access logging settings resource is associated with.
        /// </summary>
        public InputList<string> AssociatedPortalArns
        {
            get => _associatedPortalArns ?? (_associatedPortalArns = new InputList<string>());
            set => _associatedPortalArns = value;
        }

        /// <summary>
        /// ARN of the Kinesis stream.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("kinesisStreamArn")]
        public Input<string>? KinesisStreamArn { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Obsolete(@"Please use `tags` instead.")]
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        /// <summary>
        /// ARN of the user access logging settings resource.
        /// </summary>
        [Input("userAccessLoggingSettingsArn")]
        public Input<string>? UserAccessLoggingSettingsArn { get; set; }

        public WebUserAccessLoggingSettingsState()
        {
        }
        public static new WebUserAccessLoggingSettingsState Empty => new WebUserAccessLoggingSettingsState();
    }
}
