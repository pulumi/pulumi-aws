// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Workspaces
{
    public static class GetDirectory
    {
        /// <summary>
        /// Retrieve information about an AWS WorkSpaces directory.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const example = aws.workspaces.getDirectory({
        ///     directoryId: "d-9067783251",
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// example = aws.workspaces.get_directory(directory_id="d-9067783251")
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Workspaces.GetDirectory.Invoke(new()
        ///     {
        ///         DirectoryId = "d-9067783251",
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/workspaces"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := workspaces.LookupDirectory(ctx, &amp;workspaces.LookupDirectoryArgs{
        /// 			DirectoryId: "d-9067783251",
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.workspaces.WorkspacesFunctions;
        /// import com.pulumi.aws.workspaces.inputs.GetDirectoryArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var example = WorkspacesFunctions.getDirectory(GetDirectoryArgs.builder()
        ///             .directoryId("d-9067783251")
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   example:
        ///     fn::invoke:
        ///       Function: aws:workspaces:getDirectory
        ///       Arguments:
        ///         directoryId: d-9067783251
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetDirectoryResult> InvokeAsync(GetDirectoryArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDirectoryResult>("aws:workspaces/getDirectory:getDirectory", args ?? new GetDirectoryArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieve information about an AWS WorkSpaces directory.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const example = aws.workspaces.getDirectory({
        ///     directoryId: "d-9067783251",
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// example = aws.workspaces.get_directory(directory_id="d-9067783251")
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Workspaces.GetDirectory.Invoke(new()
        ///     {
        ///         DirectoryId = "d-9067783251",
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/workspaces"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := workspaces.LookupDirectory(ctx, &amp;workspaces.LookupDirectoryArgs{
        /// 			DirectoryId: "d-9067783251",
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.workspaces.WorkspacesFunctions;
        /// import com.pulumi.aws.workspaces.inputs.GetDirectoryArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var example = WorkspacesFunctions.getDirectory(GetDirectoryArgs.builder()
        ///             .directoryId("d-9067783251")
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   example:
        ///     fn::invoke:
        ///       Function: aws:workspaces:getDirectory
        ///       Arguments:
        ///         directoryId: d-9067783251
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetDirectoryResult> Invoke(GetDirectoryInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDirectoryResult>("aws:workspaces/getDirectory:getDirectory", args ?? new GetDirectoryInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDirectoryArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Directory identifier for registration in WorkSpaces service.
        /// </summary>
        [Input("directoryId", required: true)]
        public string DirectoryId { get; set; } = null!;

        [Input("tags")]
        private Dictionary<string, string>? _tags;

        /// <summary>
        /// A map of tags assigned to the WorkSpaces directory.
        /// </summary>
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetDirectoryArgs()
        {
        }
        public static new GetDirectoryArgs Empty => new GetDirectoryArgs();
    }

    public sealed class GetDirectoryInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Directory identifier for registration in WorkSpaces service.
        /// </summary>
        [Input("directoryId", required: true)]
        public Input<string> DirectoryId { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags assigned to the WorkSpaces directory.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetDirectoryInvokeArgs()
        {
        }
        public static new GetDirectoryInvokeArgs Empty => new GetDirectoryInvokeArgs();
    }


    [OutputType]
    public sealed class GetDirectoryResult
    {
        /// <summary>
        /// Directory alias.
        /// </summary>
        public readonly string Alias;
        /// <summary>
        /// User name for the service account.
        /// </summary>
        public readonly string CustomerUserName;
        public readonly string DirectoryId;
        /// <summary>
        /// Name of the directory.
        /// </summary>
        public readonly string DirectoryName;
        /// <summary>
        /// Directory type.
        /// </summary>
        public readonly string DirectoryType;
        /// <summary>
        /// IP addresses of the DNS servers for the directory.
        /// </summary>
        public readonly ImmutableArray<string> DnsIpAddresses;
        /// <summary>
        /// Identifier of the IAM role. This is the role that allows Amazon WorkSpaces to make calls to other services, such as Amazon EC2, on your behalf.
        /// </summary>
        public readonly string IamRoleId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Identifiers of the IP access control groups associated with the directory.
        /// </summary>
        public readonly ImmutableArray<string> IpGroupIds;
        /// <summary>
        /// Registration code for the directory. This is the code that users enter in their Amazon WorkSpaces client application to connect to the directory.
        /// </summary>
        public readonly string RegistrationCode;
        /// <summary>
        /// The permissions to enable or disable self-service capabilities.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDirectorySelfServicePermissionResult> SelfServicePermissions;
        /// <summary>
        /// Identifiers of the subnets where the directory resides.
        /// </summary>
        public readonly ImmutableArray<string> SubnetIds;
        /// <summary>
        /// A map of tags assigned to the WorkSpaces directory.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// (Optional) Specifies which devices and operating systems users can use to access their WorkSpaces. Defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDirectoryWorkspaceAccessPropertyResult> WorkspaceAccessProperties;
        /// <summary>
        /// The default properties that are used for creating WorkSpaces. Defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDirectoryWorkspaceCreationPropertyResult> WorkspaceCreationProperties;
        /// <summary>
        /// The identifier of the security group that is assigned to new WorkSpaces. Defined below.
        /// </summary>
        public readonly string WorkspaceSecurityGroupId;

        [OutputConstructor]
        private GetDirectoryResult(
            string alias,

            string customerUserName,

            string directoryId,

            string directoryName,

            string directoryType,

            ImmutableArray<string> dnsIpAddresses,

            string iamRoleId,

            string id,

            ImmutableArray<string> ipGroupIds,

            string registrationCode,

            ImmutableArray<Outputs.GetDirectorySelfServicePermissionResult> selfServicePermissions,

            ImmutableArray<string> subnetIds,

            ImmutableDictionary<string, string>? tags,

            ImmutableArray<Outputs.GetDirectoryWorkspaceAccessPropertyResult> workspaceAccessProperties,

            ImmutableArray<Outputs.GetDirectoryWorkspaceCreationPropertyResult> workspaceCreationProperties,

            string workspaceSecurityGroupId)
        {
            Alias = alias;
            CustomerUserName = customerUserName;
            DirectoryId = directoryId;
            DirectoryName = directoryName;
            DirectoryType = directoryType;
            DnsIpAddresses = dnsIpAddresses;
            IamRoleId = iamRoleId;
            Id = id;
            IpGroupIds = ipGroupIds;
            RegistrationCode = registrationCode;
            SelfServicePermissions = selfServicePermissions;
            SubnetIds = subnetIds;
            Tags = tags;
            WorkspaceAccessProperties = workspaceAccessProperties;
            WorkspaceCreationProperties = workspaceCreationProperties;
            WorkspaceSecurityGroupId = workspaceSecurityGroupId;
        }
    }
}
