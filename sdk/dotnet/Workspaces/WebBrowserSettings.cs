// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Workspaces
{
    /// <summary>
    /// Resource for managing an AWS WorkSpaces Web Browser Settings resource.
    /// 
    /// ## Example Usage
    /// 
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using System.Text.Json;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Workspaces.WebBrowserSettings("example", new()
    ///     {
    ///         BrowserPolicy = JsonSerializer.Serialize(new Dictionary&lt;string, object?&gt;
    ///         {
    ///             ["AdditionalSettings"] = new Dictionary&lt;string, object?&gt;
    ///             {
    ///                 ["DownloadsSettings"] = new Dictionary&lt;string, object?&gt;
    ///                 {
    ///                     ["Behavior"] = "DISABLE",
    ///                 },
    ///             },
    ///         }),
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ### With All Arguments
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using System.Text.Json;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Kms.Key("example", new()
    ///     {
    ///         Description = "KMS key for WorkSpaces Web Browser Settings",
    ///         DeletionWindowInDays = 7,
    ///     });
    /// 
    ///     var exampleWebBrowserSettings = new Aws.Workspaces.WebBrowserSettings("example", new()
    ///     {
    ///         BrowserPolicy = JsonSerializer.Serialize(new Dictionary&lt;string, object?&gt;
    ///         {
    ///             ["chromePolicies"] = new Dictionary&lt;string, object?&gt;
    ///             {
    ///                 ["DefaultDownloadDirectory"] = new Dictionary&lt;string, object?&gt;
    ///                 {
    ///                     ["value"] = "/home/as2-streaming-user/MyFiles/TemporaryFiles1",
    ///                 },
    ///             },
    ///         }),
    ///         CustomerManagedKey = example.Arn,
    ///         AdditionalEncryptionContext = 
    ///         {
    ///             { "Environment", "Production" },
    ///         },
    ///         Tags = 
    ///         {
    ///             { "Name", "example-browser-settings" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import WorkSpaces Web Browser Settings using the `browser_settings_arn`. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:workspaces/webBrowserSettings:WebBrowserSettings example arn:aws:workspacesweb:us-west-2:123456789012:browsersettings/abcdef12345
    /// ```
    /// </summary>
    [AwsResourceType("aws:workspaces/webBrowserSettings:WebBrowserSettings")]
    public partial class WebBrowserSettings : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Additional encryption context for the browser settings.
        /// </summary>
        [Output("additionalEncryptionContext")]
        public Output<ImmutableDictionary<string, string>?> AdditionalEncryptionContext { get; private set; } = null!;

        /// <summary>
        /// List of web portal ARNs to associate with the browser settings.
        /// </summary>
        [Output("associatedPortalArns")]
        public Output<ImmutableArray<string>> AssociatedPortalArns { get; private set; } = null!;

        /// <summary>
        /// Browser policy for the browser settings. This is a JSON string that defines the browser settings policy.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Output("browserPolicy")]
        public Output<string> BrowserPolicy { get; private set; } = null!;

        /// <summary>
        /// ARN of the browser settings resource.
        /// </summary>
        [Output("browserSettingsArn")]
        public Output<string> BrowserSettingsArn { get; private set; } = null!;

        /// <summary>
        /// ARN of the customer managed KMS key.
        /// </summary>
        [Output("customerManagedKey")]
        public Output<string?> CustomerManagedKey { get; private set; } = null!;

        /// <summary>
        /// Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;


        /// <summary>
        /// Create a WebBrowserSettings resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WebBrowserSettings(string name, WebBrowserSettingsArgs args, CustomResourceOptions? options = null)
            : base("aws:workspaces/webBrowserSettings:WebBrowserSettings", name, args ?? new WebBrowserSettingsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WebBrowserSettings(string name, Input<string> id, WebBrowserSettingsState? state = null, CustomResourceOptions? options = null)
            : base("aws:workspaces/webBrowserSettings:WebBrowserSettings", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WebBrowserSettings resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WebBrowserSettings Get(string name, Input<string> id, WebBrowserSettingsState? state = null, CustomResourceOptions? options = null)
        {
            return new WebBrowserSettings(name, id, state, options);
        }
    }

    public sealed class WebBrowserSettingsArgs : global::Pulumi.ResourceArgs
    {
        [Input("additionalEncryptionContext")]
        private InputMap<string>? _additionalEncryptionContext;

        /// <summary>
        /// Additional encryption context for the browser settings.
        /// </summary>
        public InputMap<string> AdditionalEncryptionContext
        {
            get => _additionalEncryptionContext ?? (_additionalEncryptionContext = new InputMap<string>());
            set => _additionalEncryptionContext = value;
        }

        /// <summary>
        /// Browser policy for the browser settings. This is a JSON string that defines the browser settings policy.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("browserPolicy", required: true)]
        public Input<string> BrowserPolicy { get; set; } = null!;

        /// <summary>
        /// ARN of the customer managed KMS key.
        /// </summary>
        [Input("customerManagedKey")]
        public Input<string>? CustomerManagedKey { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public WebBrowserSettingsArgs()
        {
        }
        public static new WebBrowserSettingsArgs Empty => new WebBrowserSettingsArgs();
    }

    public sealed class WebBrowserSettingsState : global::Pulumi.ResourceArgs
    {
        [Input("additionalEncryptionContext")]
        private InputMap<string>? _additionalEncryptionContext;

        /// <summary>
        /// Additional encryption context for the browser settings.
        /// </summary>
        public InputMap<string> AdditionalEncryptionContext
        {
            get => _additionalEncryptionContext ?? (_additionalEncryptionContext = new InputMap<string>());
            set => _additionalEncryptionContext = value;
        }

        [Input("associatedPortalArns")]
        private InputList<string>? _associatedPortalArns;

        /// <summary>
        /// List of web portal ARNs to associate with the browser settings.
        /// </summary>
        public InputList<string> AssociatedPortalArns
        {
            get => _associatedPortalArns ?? (_associatedPortalArns = new InputList<string>());
            set => _associatedPortalArns = value;
        }

        /// <summary>
        /// Browser policy for the browser settings. This is a JSON string that defines the browser settings policy.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("browserPolicy")]
        public Input<string>? BrowserPolicy { get; set; }

        /// <summary>
        /// ARN of the browser settings resource.
        /// </summary>
        [Input("browserSettingsArn")]
        public Input<string>? BrowserSettingsArn { get; set; }

        /// <summary>
        /// ARN of the customer managed KMS key.
        /// </summary>
        [Input("customerManagedKey")]
        public Input<string>? CustomerManagedKey { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Obsolete(@"Please use `tags` instead.")]
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        public WebBrowserSettingsState()
        {
        }
        public static new WebBrowserSettingsState Empty => new WebBrowserSettingsState();
    }
}
