// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Workspaces
{
    public static class GetBundle
    {
        public static Task<GetBundleResult> InvokeAsync(GetBundleArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBundleResult>("aws:workspaces/getBundle:getBundle", args ?? new GetBundleArgs(), options.WithDefaults());

        public static Output<GetBundleResult> Invoke(GetBundleInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBundleResult>("aws:workspaces/getBundle:getBundle", args ?? new GetBundleInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBundleArgs : global::Pulumi.InvokeArgs
    {
        [Input("bundleId")]
        public string? BundleId { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        [Input("owner")]
        public string? Owner { get; set; }

        public GetBundleArgs()
        {
        }
        public static new GetBundleArgs Empty => new GetBundleArgs();
    }

    public sealed class GetBundleInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("bundleId")]
        public Input<string>? BundleId { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("owner")]
        public Input<string>? Owner { get; set; }

        public GetBundleInvokeArgs()
        {
        }
        public static new GetBundleInvokeArgs Empty => new GetBundleInvokeArgs();
    }


    [OutputType]
    public sealed class GetBundleResult
    {
        public readonly string? BundleId;
        public readonly ImmutableArray<Outputs.GetBundleComputeTypeResult> ComputeTypes;
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? Name;
        public readonly string? Owner;
        public readonly ImmutableArray<Outputs.GetBundleRootStorageResult> RootStorages;
        public readonly ImmutableArray<Outputs.GetBundleUserStorageResult> UserStorages;

        [OutputConstructor]
        private GetBundleResult(
            string? bundleId,

            ImmutableArray<Outputs.GetBundleComputeTypeResult> computeTypes,

            string description,

            string id,

            string? name,

            string? owner,

            ImmutableArray<Outputs.GetBundleRootStorageResult> rootStorages,

            ImmutableArray<Outputs.GetBundleUserStorageResult> userStorages)
        {
            BundleId = bundleId;
            ComputeTypes = computeTypes;
            Description = description;
            Id = id;
            Name = name;
            Owner = owner;
            RootStorages = rootStorages;
            UserStorages = userStorages;
        }
    }
}
