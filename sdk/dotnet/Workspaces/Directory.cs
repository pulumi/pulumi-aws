// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Workspaces
{
    /// <summary>
    /// Provides a directory registration in AWS WorkSpaces Service
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/workspaces_directory.html.markdown.
    /// </summary>
    public partial class Directory : Pulumi.CustomResource
    {
        /// <summary>
        /// The directory identifier for registration in WorkSpaces service.
        /// </summary>
        [Output("directoryId")]
        public Output<string> DirectoryId { get; private set; } = null!;

        /// <summary>
        /// The permissions to enable or disable self-service capabilities.
        /// </summary>
        [Output("selfServicePermissions")]
        public Output<Outputs.DirectorySelfServicePermissions> SelfServicePermissions { get; private set; } = null!;

        /// <summary>
        /// The identifiers of the subnets where the directory resides.
        /// </summary>
        [Output("subnetIds")]
        public Output<ImmutableArray<string>> SubnetIds { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags assigned to the WorkSpaces directory.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, object>?> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a Directory resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Directory(string name, DirectoryArgs args, CustomResourceOptions? options = null)
            : base("aws:workspaces/directory:Directory", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private Directory(string name, Input<string> id, DirectoryState? state = null, CustomResourceOptions? options = null)
            : base("aws:workspaces/directory:Directory", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Directory resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Directory Get(string name, Input<string> id, DirectoryState? state = null, CustomResourceOptions? options = null)
        {
            return new Directory(name, id, state, options);
        }
    }

    public sealed class DirectoryArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The directory identifier for registration in WorkSpaces service.
        /// </summary>
        [Input("directoryId", required: true)]
        public Input<string> DirectoryId { get; set; } = null!;

        /// <summary>
        /// The permissions to enable or disable self-service capabilities.
        /// </summary>
        [Input("selfServicePermissions")]
        public Input<Inputs.DirectorySelfServicePermissionsArgs>? SelfServicePermissions { get; set; }

        [Input("subnetIds")]
        private InputList<string>? _subnetIds;

        /// <summary>
        /// The identifiers of the subnets where the directory resides.
        /// </summary>
        public InputList<string> SubnetIds
        {
            get => _subnetIds ?? (_subnetIds = new InputList<string>());
            set => _subnetIds = value;
        }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// A mapping of tags assigned to the WorkSpaces directory.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        public DirectoryArgs()
        {
        }
    }

    public sealed class DirectoryState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The directory identifier for registration in WorkSpaces service.
        /// </summary>
        [Input("directoryId")]
        public Input<string>? DirectoryId { get; set; }

        /// <summary>
        /// The permissions to enable or disable self-service capabilities.
        /// </summary>
        [Input("selfServicePermissions")]
        public Input<Inputs.DirectorySelfServicePermissionsGetArgs>? SelfServicePermissions { get; set; }

        [Input("subnetIds")]
        private InputList<string>? _subnetIds;

        /// <summary>
        /// The identifiers of the subnets where the directory resides.
        /// </summary>
        public InputList<string> SubnetIds
        {
            get => _subnetIds ?? (_subnetIds = new InputList<string>());
            set => _subnetIds = value;
        }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// A mapping of tags assigned to the WorkSpaces directory.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        public DirectoryState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class DirectorySelfServicePermissionsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether WorkSpaces directory users can change the compute type (bundle) for their workspace. Default `false`.
        /// </summary>
        [Input("changeComputeType")]
        public Input<bool>? ChangeComputeType { get; set; }

        /// <summary>
        /// Whether WorkSpaces directory users can increase the volume size of the drives on their workspace. Default `false`.
        /// </summary>
        [Input("increaseVolumeSize")]
        public Input<bool>? IncreaseVolumeSize { get; set; }

        /// <summary>
        /// Whether WorkSpaces directory users can rebuild the operating system of a workspace to its original state. Default `false`.
        /// </summary>
        [Input("rebuildWorkspace")]
        public Input<bool>? RebuildWorkspace { get; set; }

        /// <summary>
        /// Whether WorkSpaces directory users can restart their workspace. Default `true`.
        /// </summary>
        [Input("restartWorkspace")]
        public Input<bool>? RestartWorkspace { get; set; }

        /// <summary>
        /// Whether WorkSpaces directory users can switch the running mode of their workspace. Default `false`.
        /// </summary>
        [Input("switchRunningMode")]
        public Input<bool>? SwitchRunningMode { get; set; }

        public DirectorySelfServicePermissionsArgs()
        {
        }
    }

    public sealed class DirectorySelfServicePermissionsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether WorkSpaces directory users can change the compute type (bundle) for their workspace. Default `false`.
        /// </summary>
        [Input("changeComputeType")]
        public Input<bool>? ChangeComputeType { get; set; }

        /// <summary>
        /// Whether WorkSpaces directory users can increase the volume size of the drives on their workspace. Default `false`.
        /// </summary>
        [Input("increaseVolumeSize")]
        public Input<bool>? IncreaseVolumeSize { get; set; }

        /// <summary>
        /// Whether WorkSpaces directory users can rebuild the operating system of a workspace to its original state. Default `false`.
        /// </summary>
        [Input("rebuildWorkspace")]
        public Input<bool>? RebuildWorkspace { get; set; }

        /// <summary>
        /// Whether WorkSpaces directory users can restart their workspace. Default `true`.
        /// </summary>
        [Input("restartWorkspace")]
        public Input<bool>? RestartWorkspace { get; set; }

        /// <summary>
        /// Whether WorkSpaces directory users can switch the running mode of their workspace. Default `false`.
        /// </summary>
        [Input("switchRunningMode")]
        public Input<bool>? SwitchRunningMode { get; set; }

        public DirectorySelfServicePermissionsGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class DirectorySelfServicePermissions
    {
        /// <summary>
        /// Whether WorkSpaces directory users can change the compute type (bundle) for their workspace. Default `false`.
        /// </summary>
        public readonly bool? ChangeComputeType;
        /// <summary>
        /// Whether WorkSpaces directory users can increase the volume size of the drives on their workspace. Default `false`.
        /// </summary>
        public readonly bool? IncreaseVolumeSize;
        /// <summary>
        /// Whether WorkSpaces directory users can rebuild the operating system of a workspace to its original state. Default `false`.
        /// </summary>
        public readonly bool? RebuildWorkspace;
        /// <summary>
        /// Whether WorkSpaces directory users can restart their workspace. Default `true`.
        /// </summary>
        public readonly bool? RestartWorkspace;
        /// <summary>
        /// Whether WorkSpaces directory users can switch the running mode of their workspace. Default `false`.
        /// </summary>
        public readonly bool? SwitchRunningMode;

        [OutputConstructor]
        private DirectorySelfServicePermissions(
            bool? changeComputeType,
            bool? increaseVolumeSize,
            bool? rebuildWorkspace,
            bool? restartWorkspace,
            bool? switchRunningMode)
        {
            ChangeComputeType = changeComputeType;
            IncreaseVolumeSize = increaseVolumeSize;
            RebuildWorkspace = rebuildWorkspace;
            RestartWorkspace = restartWorkspace;
            SwitchRunningMode = switchRunningMode;
        }
    }
    }
}
