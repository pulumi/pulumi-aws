// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Workspaces
{
    [AwsResourceType("aws:workspaces/directory:Directory")]
    public partial class Directory : global::Pulumi.CustomResource
    {
        [Output("alias")]
        public Output<string> Alias { get; private set; } = null!;

        [Output("customerUserName")]
        public Output<string> CustomerUserName { get; private set; } = null!;

        [Output("directoryId")]
        public Output<string> DirectoryId { get; private set; } = null!;

        [Output("directoryName")]
        public Output<string> DirectoryName { get; private set; } = null!;

        [Output("directoryType")]
        public Output<string> DirectoryType { get; private set; } = null!;

        [Output("dnsIpAddresses")]
        public Output<ImmutableArray<string>> DnsIpAddresses { get; private set; } = null!;

        [Output("iamRoleId")]
        public Output<string> IamRoleId { get; private set; } = null!;

        [Output("ipGroupIds")]
        public Output<ImmutableArray<string>> IpGroupIds { get; private set; } = null!;

        [Output("registrationCode")]
        public Output<string> RegistrationCode { get; private set; } = null!;

        [Output("selfServicePermissions")]
        public Output<Outputs.DirectorySelfServicePermissions> SelfServicePermissions { get; private set; } = null!;

        [Output("subnetIds")]
        public Output<ImmutableArray<string>> SubnetIds { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("workspaceAccessProperties")]
        public Output<Outputs.DirectoryWorkspaceAccessProperties> WorkspaceAccessProperties { get; private set; } = null!;

        [Output("workspaceCreationProperties")]
        public Output<Outputs.DirectoryWorkspaceCreationProperties> WorkspaceCreationProperties { get; private set; } = null!;

        [Output("workspaceSecurityGroupId")]
        public Output<string> WorkspaceSecurityGroupId { get; private set; } = null!;


        /// <summary>
        /// Create a Directory resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Directory(string name, DirectoryArgs args, CustomResourceOptions? options = null)
            : base("aws:workspaces/directory:Directory", name, args ?? new DirectoryArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Directory(string name, Input<string> id, DirectoryState? state = null, CustomResourceOptions? options = null)
            : base("aws:workspaces/directory:Directory", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Directory resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Directory Get(string name, Input<string> id, DirectoryState? state = null, CustomResourceOptions? options = null)
        {
            return new Directory(name, id, state, options);
        }
    }

    public sealed class DirectoryArgs : global::Pulumi.ResourceArgs
    {
        [Input("directoryId", required: true)]
        public Input<string> DirectoryId { get; set; } = null!;

        [Input("ipGroupIds")]
        private InputList<string>? _ipGroupIds;
        public InputList<string> IpGroupIds
        {
            get => _ipGroupIds ?? (_ipGroupIds = new InputList<string>());
            set => _ipGroupIds = value;
        }

        [Input("selfServicePermissions")]
        public Input<Inputs.DirectorySelfServicePermissionsArgs>? SelfServicePermissions { get; set; }

        [Input("subnetIds")]
        private InputList<string>? _subnetIds;
        public InputList<string> SubnetIds
        {
            get => _subnetIds ?? (_subnetIds = new InputList<string>());
            set => _subnetIds = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("workspaceAccessProperties")]
        public Input<Inputs.DirectoryWorkspaceAccessPropertiesArgs>? WorkspaceAccessProperties { get; set; }

        [Input("workspaceCreationProperties")]
        public Input<Inputs.DirectoryWorkspaceCreationPropertiesArgs>? WorkspaceCreationProperties { get; set; }

        public DirectoryArgs()
        {
        }
        public static new DirectoryArgs Empty => new DirectoryArgs();
    }

    public sealed class DirectoryState : global::Pulumi.ResourceArgs
    {
        [Input("alias")]
        public Input<string>? Alias { get; set; }

        [Input("customerUserName")]
        public Input<string>? CustomerUserName { get; set; }

        [Input("directoryId")]
        public Input<string>? DirectoryId { get; set; }

        [Input("directoryName")]
        public Input<string>? DirectoryName { get; set; }

        [Input("directoryType")]
        public Input<string>? DirectoryType { get; set; }

        [Input("dnsIpAddresses")]
        private InputList<string>? _dnsIpAddresses;
        public InputList<string> DnsIpAddresses
        {
            get => _dnsIpAddresses ?? (_dnsIpAddresses = new InputList<string>());
            set => _dnsIpAddresses = value;
        }

        [Input("iamRoleId")]
        public Input<string>? IamRoleId { get; set; }

        [Input("ipGroupIds")]
        private InputList<string>? _ipGroupIds;
        public InputList<string> IpGroupIds
        {
            get => _ipGroupIds ?? (_ipGroupIds = new InputList<string>());
            set => _ipGroupIds = value;
        }

        [Input("registrationCode")]
        public Input<string>? RegistrationCode { get; set; }

        [Input("selfServicePermissions")]
        public Input<Inputs.DirectorySelfServicePermissionsGetArgs>? SelfServicePermissions { get; set; }

        [Input("subnetIds")]
        private InputList<string>? _subnetIds;
        public InputList<string> SubnetIds
        {
            get => _subnetIds ?? (_subnetIds = new InputList<string>());
            set => _subnetIds = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("workspaceAccessProperties")]
        public Input<Inputs.DirectoryWorkspaceAccessPropertiesGetArgs>? WorkspaceAccessProperties { get; set; }

        [Input("workspaceCreationProperties")]
        public Input<Inputs.DirectoryWorkspaceCreationPropertiesGetArgs>? WorkspaceCreationProperties { get; set; }

        [Input("workspaceSecurityGroupId")]
        public Input<string>? WorkspaceSecurityGroupId { get; set; }

        public DirectoryState()
        {
        }
        public static new DirectoryState Empty => new DirectoryState();
    }
}
