// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.PaymentCryptography
{
    /// <summary>
    /// Resource for managing an AWS Payment Cryptography Control Plane Key.
    /// 
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import Payment Cryptography Control Plane Key using the `arn:aws:payment-cryptography:us-east-1:123456789012:key/qtbojf64yshyvyzf`. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:paymentcryptography/key:Key example arn:aws:payment-cryptography:us-east-1:123456789012:key/qtbojf64yshyvyzf
    /// ```
    /// </summary>
    [AwsResourceType("aws:paymentcryptography/key:Key")]
    public partial class Key : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ARN of the key.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("deletionWindowInDays")]
        public Output<int> DeletionWindowInDays { get; private set; } = null!;

        /// <summary>
        /// Whether to enable the key.
        /// </summary>
        [Output("enabled")]
        public Output<bool> Enabled { get; private set; } = null!;

        /// <summary>
        /// Whether the key is exportable from the service.
        /// </summary>
        [Output("exportable")]
        public Output<bool> Exportable { get; private set; } = null!;

        /// <summary>
        /// Role of the key, the algorithm it supports, and the cryptographic operations allowed with the key.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Output("keyAttributes")]
        public Output<Outputs.KeyKeyAttributes?> KeyAttributes { get; private set; } = null!;

        /// <summary>
        /// Key check value (KCV) is used to check if all parties holding a given key have the same key or to detect that a key has changed.
        /// </summary>
        [Output("keyCheckValue")]
        public Output<string> KeyCheckValue { get; private set; } = null!;

        /// <summary>
        /// Algorithm that AWS Payment Cryptography uses to calculate the key check value (KCV).
        /// </summary>
        [Output("keyCheckValueAlgorithm")]
        public Output<string> KeyCheckValueAlgorithm { get; private set; } = null!;

        /// <summary>
        /// Source of the key material.
        /// </summary>
        [Output("keyOrigin")]
        public Output<string> KeyOrigin { get; private set; } = null!;

        /// <summary>
        /// State of key that is being created or deleted.
        /// </summary>
        [Output("keyState")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Map of tags assigned to the WorkSpaces Connection Alias. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("timeouts")]
        public Output<Outputs.KeyTimeouts?> Timeouts { get; private set; } = null!;


        /// <summary>
        /// Create a Key resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Key(string name, KeyArgs args, CustomResourceOptions? options = null)
            : base("aws:paymentcryptography/key:Key", name, args ?? new KeyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Key(string name, Input<string> id, KeyState? state = null, CustomResourceOptions? options = null)
            : base("aws:paymentcryptography/key:Key", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Key resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Key Get(string name, Input<string> id, KeyState? state = null, CustomResourceOptions? options = null)
        {
            return new Key(name, id, state, options);
        }
    }

    public sealed class KeyArgs : global::Pulumi.ResourceArgs
    {
        [Input("deletionWindowInDays")]
        public Input<int>? DeletionWindowInDays { get; set; }

        /// <summary>
        /// Whether to enable the key.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Whether the key is exportable from the service.
        /// </summary>
        [Input("exportable", required: true)]
        public Input<bool> Exportable { get; set; } = null!;

        /// <summary>
        /// Role of the key, the algorithm it supports, and the cryptographic operations allowed with the key.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("keyAttributes")]
        public Input<Inputs.KeyKeyAttributesArgs>? KeyAttributes { get; set; }

        /// <summary>
        /// Algorithm that AWS Payment Cryptography uses to calculate the key check value (KCV).
        /// </summary>
        [Input("keyCheckValueAlgorithm")]
        public Input<string>? KeyCheckValueAlgorithm { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Map of tags assigned to the WorkSpaces Connection Alias. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("timeouts")]
        public Input<Inputs.KeyTimeoutsArgs>? Timeouts { get; set; }

        public KeyArgs()
        {
        }
        public static new KeyArgs Empty => new KeyArgs();
    }

    public sealed class KeyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ARN of the key.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("deletionWindowInDays")]
        public Input<int>? DeletionWindowInDays { get; set; }

        /// <summary>
        /// Whether to enable the key.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Whether the key is exportable from the service.
        /// </summary>
        [Input("exportable")]
        public Input<bool>? Exportable { get; set; }

        /// <summary>
        /// Role of the key, the algorithm it supports, and the cryptographic operations allowed with the key.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("keyAttributes")]
        public Input<Inputs.KeyKeyAttributesGetArgs>? KeyAttributes { get; set; }

        /// <summary>
        /// Key check value (KCV) is used to check if all parties holding a given key have the same key or to detect that a key has changed.
        /// </summary>
        [Input("keyCheckValue")]
        public Input<string>? KeyCheckValue { get; set; }

        /// <summary>
        /// Algorithm that AWS Payment Cryptography uses to calculate the key check value (KCV).
        /// </summary>
        [Input("keyCheckValueAlgorithm")]
        public Input<string>? KeyCheckValueAlgorithm { get; set; }

        /// <summary>
        /// Source of the key material.
        /// </summary>
        [Input("keyOrigin")]
        public Input<string>? KeyOrigin { get; set; }

        /// <summary>
        /// State of key that is being created or deleted.
        /// </summary>
        [Input("keyState")]
        public Input<string>? State { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Map of tags assigned to the WorkSpaces Connection Alias. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Obsolete(@"Please use `tags` instead.")]
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("timeouts")]
        public Input<Inputs.KeyTimeoutsGetArgs>? Timeouts { get; set; }

        public KeyState()
        {
        }
        public static new KeyState Empty => new KeyState();
    }
}
