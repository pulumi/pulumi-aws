// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CodePipeline
{
    [AwsResourceType("aws:codepipeline/customActionType:CustomActionType")]
    public partial class CustomActionType : global::Pulumi.CustomResource
    {
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("category")]
        public Output<string> Category { get; private set; } = null!;

        [Output("configurationProperties")]
        public Output<ImmutableArray<Outputs.CustomActionTypeConfigurationProperty>> ConfigurationProperties { get; private set; } = null!;

        [Output("inputArtifactDetails")]
        public Output<Outputs.CustomActionTypeInputArtifactDetails> InputArtifactDetails { get; private set; } = null!;

        [Output("outputArtifactDetails")]
        public Output<Outputs.CustomActionTypeOutputArtifactDetails> OutputArtifactDetails { get; private set; } = null!;

        [Output("owner")]
        public Output<string> Owner { get; private set; } = null!;

        [Output("providerName")]
        public Output<string> ProviderName { get; private set; } = null!;

        [Output("settings")]
        public Output<Outputs.CustomActionTypeSettings?> Settings { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("version")]
        public Output<string> Version { get; private set; } = null!;


        /// <summary>
        /// Create a CustomActionType resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CustomActionType(string name, CustomActionTypeArgs args, CustomResourceOptions? options = null)
            : base("aws:codepipeline/customActionType:CustomActionType", name, args ?? new CustomActionTypeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CustomActionType(string name, Input<string> id, CustomActionTypeState? state = null, CustomResourceOptions? options = null)
            : base("aws:codepipeline/customActionType:CustomActionType", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CustomActionType resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CustomActionType Get(string name, Input<string> id, CustomActionTypeState? state = null, CustomResourceOptions? options = null)
        {
            return new CustomActionType(name, id, state, options);
        }
    }

    public sealed class CustomActionTypeArgs : global::Pulumi.ResourceArgs
    {
        [Input("category", required: true)]
        public Input<string> Category { get; set; } = null!;

        [Input("configurationProperties")]
        private InputList<Inputs.CustomActionTypeConfigurationPropertyArgs>? _configurationProperties;
        public InputList<Inputs.CustomActionTypeConfigurationPropertyArgs> ConfigurationProperties
        {
            get => _configurationProperties ?? (_configurationProperties = new InputList<Inputs.CustomActionTypeConfigurationPropertyArgs>());
            set => _configurationProperties = value;
        }

        [Input("inputArtifactDetails", required: true)]
        public Input<Inputs.CustomActionTypeInputArtifactDetailsArgs> InputArtifactDetails { get; set; } = null!;

        [Input("outputArtifactDetails", required: true)]
        public Input<Inputs.CustomActionTypeOutputArtifactDetailsArgs> OutputArtifactDetails { get; set; } = null!;

        [Input("providerName", required: true)]
        public Input<string> ProviderName { get; set; } = null!;

        [Input("settings")]
        public Input<Inputs.CustomActionTypeSettingsArgs>? Settings { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("version", required: true)]
        public Input<string> Version { get; set; } = null!;

        public CustomActionTypeArgs()
        {
        }
        public static new CustomActionTypeArgs Empty => new CustomActionTypeArgs();
    }

    public sealed class CustomActionTypeState : global::Pulumi.ResourceArgs
    {
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("category")]
        public Input<string>? Category { get; set; }

        [Input("configurationProperties")]
        private InputList<Inputs.CustomActionTypeConfigurationPropertyGetArgs>? _configurationProperties;
        public InputList<Inputs.CustomActionTypeConfigurationPropertyGetArgs> ConfigurationProperties
        {
            get => _configurationProperties ?? (_configurationProperties = new InputList<Inputs.CustomActionTypeConfigurationPropertyGetArgs>());
            set => _configurationProperties = value;
        }

        [Input("inputArtifactDetails")]
        public Input<Inputs.CustomActionTypeInputArtifactDetailsGetArgs>? InputArtifactDetails { get; set; }

        [Input("outputArtifactDetails")]
        public Input<Inputs.CustomActionTypeOutputArtifactDetailsGetArgs>? OutputArtifactDetails { get; set; }

        [Input("owner")]
        public Input<string>? Owner { get; set; }

        [Input("providerName")]
        public Input<string>? ProviderName { get; set; }

        [Input("settings")]
        public Input<Inputs.CustomActionTypeSettingsGetArgs>? Settings { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("version")]
        public Input<string>? Version { get; set; }

        public CustomActionTypeState()
        {
        }
        public static new CustomActionTypeState Empty => new CustomActionTypeState();
    }
}
