// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CodePipeline.Inputs
{

    public sealed class PipelineStageOnSuccessConditionRuleArgs : global::Pulumi.ResourceArgs
    {
        [Input("commands")]
        private InputList<string>? _commands;

        /// <summary>
        /// The shell commands to run with your commands rule in CodePipeline. All commands are supported except multi-line formats.
        /// </summary>
        public InputList<string> Commands
        {
            get => _commands ?? (_commands = new InputList<string>());
            set => _commands = value;
        }

        [Input("configuration")]
        private InputMap<string>? _configuration;

        /// <summary>
        /// The action configuration fields for the rule. Configurations options for rule types and providers can be found in the [Rule structure reference](https://docs.aws.amazon.com/codepipeline/latest/userguide/rule-reference.html).
        /// </summary>
        public InputMap<string> Configuration
        {
            get => _configuration ?? (_configuration = new InputMap<string>());
            set => _configuration = value;
        }

        [Input("inputArtifacts")]
        private InputList<string>? _inputArtifacts;

        /// <summary>
        /// The list of the input artifacts fields for the rule, such as specifying an input file for the rule.
        /// </summary>
        public InputList<string> InputArtifacts
        {
            get => _inputArtifacts ?? (_inputArtifacts = new InputList<string>());
            set => _inputArtifacts = value;
        }

        /// <summary>
        /// The name of the rule that is created for the condition, such as `VariableCheck`.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The Region for the condition associated with the rule.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The pipeline role ARN associated with the rule.
        /// </summary>
        [Input("roleArn")]
        public Input<string>? RoleArn { get; set; }

        /// <summary>
        /// The ID for the rule type, which is made up of the combined values for `category`, `owner`, `provider`, and `version`. Defined as an `rule_type_id` block below.
        /// </summary>
        [Input("ruleTypeId", required: true)]
        public Input<Inputs.PipelineStageOnSuccessConditionRuleRuleTypeIdArgs> RuleTypeId { get; set; } = null!;

        /// <summary>
        /// The action timeout for the rule.
        /// </summary>
        [Input("timeoutInMinutes")]
        public Input<int>? TimeoutInMinutes { get; set; }

        public PipelineStageOnSuccessConditionRuleArgs()
        {
        }
        public static new PipelineStageOnSuccessConditionRuleArgs Empty => new PipelineStageOnSuccessConditionRuleArgs();
    }
}
