// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CodePipeline.Outputs
{

    [OutputType]
    public sealed class PipelineStage
    {
        /// <summary>
        /// The action(s) to include in the stage. Defined as an `action` block below
        /// </summary>
        public readonly ImmutableArray<Outputs.PipelineStageAction> Actions;
        /// <summary>
        /// The method to use when a stage allows entry. For example, configuring this field for conditions will allow entry to the stage when the conditions are met.
        /// </summary>
        public readonly Outputs.PipelineStageBeforeEntry? BeforeEntry;
        /// <summary>
        /// The name of the stage.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The method to use when a stage has not completed successfully. For example, configuring this field for rollback will roll back a failed stage automatically to the last successful pipeline execution in the stage.
        /// </summary>
        public readonly Outputs.PipelineStageOnFailure? OnFailure;
        /// <summary>
        /// The method to use when a stage has succeeded. For example, configuring this field for conditions will allow the stage to succeed when the conditions are met.
        /// </summary>
        public readonly Outputs.PipelineStageOnSuccess? OnSuccess;

        [OutputConstructor]
        private PipelineStage(
            ImmutableArray<Outputs.PipelineStageAction> actions,

            Outputs.PipelineStageBeforeEntry? beforeEntry,

            string name,

            Outputs.PipelineStageOnFailure? onFailure,

            Outputs.PipelineStageOnSuccess? onSuccess)
        {
            Actions = actions;
            BeforeEntry = beforeEntry;
            Name = name;
            OnFailure = onFailure;
            OnSuccess = onSuccess;
        }
    }
}
