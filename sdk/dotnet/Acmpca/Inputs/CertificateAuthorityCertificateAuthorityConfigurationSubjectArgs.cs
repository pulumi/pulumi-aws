// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Acmpca.Inputs
{

    public sealed class CertificateAuthorityCertificateAuthorityConfigurationSubjectArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Fully qualified domain name (FQDN) associated with the certificate subject.
        /// </summary>
        [Input("commonName")]
        public Input<string>? CommonName { get; set; }

        /// <summary>
        /// Two digit code that specifies the country in which the certificate subject located.
        /// </summary>
        [Input("country")]
        public Input<string>? Country { get; set; }

        /// <summary>
        /// Disambiguating information for the certificate subject.
        /// </summary>
        [Input("distinguishedNameQualifier")]
        public Input<string>? DistinguishedNameQualifier { get; set; }

        /// <summary>
        /// Typically a qualifier appended to the name of an individual. Examples include Jr. for junior, Sr. for senior, and III for third.
        /// </summary>
        [Input("generationQualifier")]
        public Input<string>? GenerationQualifier { get; set; }

        /// <summary>
        /// First name.
        /// </summary>
        [Input("givenName")]
        public Input<string>? GivenName { get; set; }

        /// <summary>
        /// Concatenation that typically contains the first letter of the `given_name`, the first letter of the middle name if one exists, and the first letter of the `surname`.
        /// </summary>
        [Input("initials")]
        public Input<string>? Initials { get; set; }

        /// <summary>
        /// The locality (such as a city or town) in which the certificate subject is located.
        /// </summary>
        [Input("locality")]
        public Input<string>? Locality { get; set; }

        /// <summary>
        /// Legal name of the organization with which the certificate subject is affiliated.
        /// </summary>
        [Input("organization")]
        public Input<string>? Organization { get; set; }

        /// <summary>
        /// A subdivision or unit of the organization (such as sales or finance) with which the certificate subject is affiliated.
        /// </summary>
        [Input("organizationalUnit")]
        public Input<string>? OrganizationalUnit { get; set; }

        /// <summary>
        /// Typically a shortened version of a longer `given_name`. For example, Jonathan is often shortened to John. Elizabeth is often shortened to Beth, Liz, or Eliza.
        /// </summary>
        [Input("pseudonym")]
        public Input<string>? Pseudonym { get; set; }

        /// <summary>
        /// State in which the subject of the certificate is located.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// Family name. In the US and the UK for example, the surname of an individual is ordered last. In Asian cultures the surname is typically ordered first.
        /// </summary>
        [Input("surname")]
        public Input<string>? Surname { get; set; }

        /// <summary>
        /// A title such as Mr. or Ms. which is pre-pended to the name to refer formally to the certificate subject.
        /// </summary>
        [Input("title")]
        public Input<string>? Title { get; set; }

        public CertificateAuthorityCertificateAuthorityConfigurationSubjectArgs()
        {
        }
    }
}
