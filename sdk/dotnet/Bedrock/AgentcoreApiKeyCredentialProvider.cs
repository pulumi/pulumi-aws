// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Bedrock
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Bedrock.AgentcoreApiKeyCredentialProvider("example", new()
    ///     {
    ///         Name = "example-api-key-provider",
    ///         ApiKey = "your-api-key-here",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ### Write-Only API Key (Recommended for Production)
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Bedrock.AgentcoreApiKeyCredentialProvider("example", new()
    ///     {
    ///         Name = "example-api-key-provider",
    ///         ApiKeyWo = "your-api-key-here",
    ///         ApiKeyWoVersion = 1,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import Bedrock AgentCore API Key Credential Provider using the provider name. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:bedrock/agentcoreApiKeyCredentialProvider:AgentcoreApiKeyCredentialProvider example example-api-key-provider
    /// ```
    /// </summary>
    [AwsResourceType("aws:bedrock/agentcoreApiKeyCredentialProvider:AgentcoreApiKeyCredentialProvider")]
    public partial class AgentcoreApiKeyCredentialProvider : global::Pulumi.CustomResource
    {
        /// <summary>
        /// API key value. Cannot be used with `ApiKeyWo`. This value will be visible in pulumi preview outputs and logs.
        /// 
        /// **Write-Only API Key (choose one approach):**
        /// </summary>
        [Output("apiKey")]
        public Output<string?> ApiKey { get; private set; } = null!;

        /// <summary>
        /// ARN of the AWS Secrets Manager secret containing the API key.
        /// </summary>
        [Output("apiKeySecretArns")]
        public Output<ImmutableArray<Outputs.AgentcoreApiKeyCredentialProviderApiKeySecretArn>> ApiKeySecretArns { get; private set; } = null!;

        /// <summary>
        /// **NOTE:** This field is write-only and its value will not be updated in state as part of read operations.
        /// Write-only API key value. Cannot be used with `ApiKey`. Must be used together with `ApiKeyWoVersion`.
        /// </summary>
        [Output("apiKeyWo")]
        public Output<string?> ApiKeyWo { get; private set; } = null!;

        /// <summary>
        /// Used together with `ApiKeyWo` to trigger an update. Increment this value when an update to `ApiKeyWo` is required.
        /// </summary>
        [Output("apiKeyWoVersion")]
        public Output<int?> ApiKeyWoVersion { get; private set; } = null!;

        /// <summary>
        /// ARN of the API Key credential provider.
        /// </summary>
        [Output("credentialProviderArn")]
        public Output<string> CredentialProviderArn { get; private set; } = null!;

        /// <summary>
        /// Name of the API Key credential provider. Forces replacement when changed.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// 
        /// **Standard API Key (choose one approach):**
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;


        /// <summary>
        /// Create a AgentcoreApiKeyCredentialProvider resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AgentcoreApiKeyCredentialProvider(string name, AgentcoreApiKeyCredentialProviderArgs? args = null, CustomResourceOptions? options = null)
            : base("aws:bedrock/agentcoreApiKeyCredentialProvider:AgentcoreApiKeyCredentialProvider", name, args ?? new AgentcoreApiKeyCredentialProviderArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AgentcoreApiKeyCredentialProvider(string name, Input<string> id, AgentcoreApiKeyCredentialProviderState? state = null, CustomResourceOptions? options = null)
            : base("aws:bedrock/agentcoreApiKeyCredentialProvider:AgentcoreApiKeyCredentialProvider", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "apiKey",
                    "apiKeyWo",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AgentcoreApiKeyCredentialProvider resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AgentcoreApiKeyCredentialProvider Get(string name, Input<string> id, AgentcoreApiKeyCredentialProviderState? state = null, CustomResourceOptions? options = null)
        {
            return new AgentcoreApiKeyCredentialProvider(name, id, state, options);
        }
    }

    public sealed class AgentcoreApiKeyCredentialProviderArgs : global::Pulumi.ResourceArgs
    {
        [Input("apiKey")]
        private Input<string>? _apiKey;

        /// <summary>
        /// API key value. Cannot be used with `ApiKeyWo`. This value will be visible in pulumi preview outputs and logs.
        /// 
        /// **Write-Only API Key (choose one approach):**
        /// </summary>
        public Input<string>? ApiKey
        {
            get => _apiKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _apiKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("apiKeyWo")]
        private Input<string>? _apiKeyWo;

        /// <summary>
        /// **NOTE:** This field is write-only and its value will not be updated in state as part of read operations.
        /// Write-only API key value. Cannot be used with `ApiKey`. Must be used together with `ApiKeyWoVersion`.
        /// </summary>
        public Input<string>? ApiKeyWo
        {
            get => _apiKeyWo;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _apiKeyWo = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Used together with `ApiKeyWo` to trigger an update. Increment this value when an update to `ApiKeyWo` is required.
        /// </summary>
        [Input("apiKeyWoVersion")]
        public Input<int>? ApiKeyWoVersion { get; set; }

        /// <summary>
        /// Name of the API Key credential provider. Forces replacement when changed.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// 
        /// **Standard API Key (choose one approach):**
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public AgentcoreApiKeyCredentialProviderArgs()
        {
        }
        public static new AgentcoreApiKeyCredentialProviderArgs Empty => new AgentcoreApiKeyCredentialProviderArgs();
    }

    public sealed class AgentcoreApiKeyCredentialProviderState : global::Pulumi.ResourceArgs
    {
        [Input("apiKey")]
        private Input<string>? _apiKey;

        /// <summary>
        /// API key value. Cannot be used with `ApiKeyWo`. This value will be visible in pulumi preview outputs and logs.
        /// 
        /// **Write-Only API Key (choose one approach):**
        /// </summary>
        public Input<string>? ApiKey
        {
            get => _apiKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _apiKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("apiKeySecretArns")]
        private InputList<Inputs.AgentcoreApiKeyCredentialProviderApiKeySecretArnGetArgs>? _apiKeySecretArns;

        /// <summary>
        /// ARN of the AWS Secrets Manager secret containing the API key.
        /// </summary>
        public InputList<Inputs.AgentcoreApiKeyCredentialProviderApiKeySecretArnGetArgs> ApiKeySecretArns
        {
            get => _apiKeySecretArns ?? (_apiKeySecretArns = new InputList<Inputs.AgentcoreApiKeyCredentialProviderApiKeySecretArnGetArgs>());
            set => _apiKeySecretArns = value;
        }

        [Input("apiKeyWo")]
        private Input<string>? _apiKeyWo;

        /// <summary>
        /// **NOTE:** This field is write-only and its value will not be updated in state as part of read operations.
        /// Write-only API key value. Cannot be used with `ApiKey`. Must be used together with `ApiKeyWoVersion`.
        /// </summary>
        public Input<string>? ApiKeyWo
        {
            get => _apiKeyWo;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _apiKeyWo = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Used together with `ApiKeyWo` to trigger an update. Increment this value when an update to `ApiKeyWo` is required.
        /// </summary>
        [Input("apiKeyWoVersion")]
        public Input<int>? ApiKeyWoVersion { get; set; }

        /// <summary>
        /// ARN of the API Key credential provider.
        /// </summary>
        [Input("credentialProviderArn")]
        public Input<string>? CredentialProviderArn { get; set; }

        /// <summary>
        /// Name of the API Key credential provider. Forces replacement when changed.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// 
        /// **Standard API Key (choose one approach):**
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public AgentcoreApiKeyCredentialProviderState()
        {
        }
        public static new AgentcoreApiKeyCredentialProviderState Empty => new AgentcoreApiKeyCredentialProviderState();
    }
}
