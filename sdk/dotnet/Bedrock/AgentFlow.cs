// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Bedrock
{
    /// <summary>
    /// Resource for managing an AWS Bedrock Agents Flow.
    /// 
    /// ## Example Usage
    /// 
    /// The default definition:
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Bedrock.AgentFlow("example", new()
    ///     {
    ///         Name = "example",
    ///         ExecutionRoleArn = exampleAwsIamRole.Arn,
    ///         Definition = new Aws.Bedrock.Inputs.AgentFlowDefinitionArgs
    ///         {
    ///             Connections = new[]
    ///             {
    ///                 new Aws.Bedrock.Inputs.AgentFlowDefinitionConnectionArgs
    ///                 {
    ///                     Name = "FlowInputNodeFlowInputNode0ToPrompt_1PromptsNode0",
    ///                     Source = "FlowInputNode",
    ///                     Target = "Prompt_1",
    ///                     Type = "Data",
    ///                     Configuration = new Aws.Bedrock.Inputs.AgentFlowDefinitionConnectionConfigurationArgs
    ///                     {
    ///                         Data = new Aws.Bedrock.Inputs.AgentFlowDefinitionConnectionConfigurationDataArgs
    ///                         {
    ///                             SourceOutput = "document",
    ///                             TargetInput = "topic",
    ///                         },
    ///                     },
    ///                 },
    ///                 new Aws.Bedrock.Inputs.AgentFlowDefinitionConnectionArgs
    ///                 {
    ///                     Name = "Prompt_1PromptsNode0ToFlowOutputNodeFlowOutputNode0",
    ///                     Source = "Prompt_1",
    ///                     Target = "FlowOutputNode",
    ///                     Type = "Data",
    ///                     Configuration = new Aws.Bedrock.Inputs.AgentFlowDefinitionConnectionConfigurationArgs
    ///                     {
    ///                         Data = new Aws.Bedrock.Inputs.AgentFlowDefinitionConnectionConfigurationDataArgs
    ///                         {
    ///                             SourceOutput = "modelCompletion",
    ///                             TargetInput = "document",
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///             Nodes = new[]
    ///             {
    ///                 new Aws.Bedrock.Inputs.AgentFlowDefinitionNodeArgs
    ///                 {
    ///                     Name = "FlowInputNode",
    ///                     Type = "Input",
    ///                     Configuration = new Aws.Bedrock.Inputs.AgentFlowDefinitionNodeConfigurationArgs
    ///                     {
    ///                         Input = null,
    ///                     },
    ///                     Outputs = new[]
    ///                     {
    ///                         new Aws.Bedrock.Inputs.AgentFlowDefinitionNodeOutputArgs
    ///                         {
    ///                             Name = "document",
    ///                             Type = "String",
    ///                         },
    ///                     },
    ///                 },
    ///                 new Aws.Bedrock.Inputs.AgentFlowDefinitionNodeArgs
    ///                 {
    ///                     Name = "Prompt_1",
    ///                     Type = "Prompt",
    ///                     Configuration = new Aws.Bedrock.Inputs.AgentFlowDefinitionNodeConfigurationArgs
    ///                     {
    ///                         Prompt = new Aws.Bedrock.Inputs.AgentFlowDefinitionNodeConfigurationPromptArgs
    ///                         {
    ///                             SourceConfiguration = new Aws.Bedrock.Inputs.AgentFlowDefinitionNodeConfigurationPromptSourceConfigurationArgs
    ///                             {
    ///                                 Inline = new Aws.Bedrock.Inputs.AgentFlowDefinitionNodeConfigurationPromptSourceConfigurationInlineArgs
    ///                                 {
    ///                                     ModelId = "amazon.titan-text-express-v1",
    ///                                     TemplateType = "TEXT",
    ///                                     InferenceConfiguration = new Aws.Bedrock.Inputs.AgentFlowDefinitionNodeConfigurationPromptSourceConfigurationInlineInferenceConfigurationArgs
    ///                                     {
    ///                                         Text = new Aws.Bedrock.Inputs.AgentFlowDefinitionNodeConfigurationPromptSourceConfigurationInlineInferenceConfigurationTextArgs
    ///                                         {
    ///                                             MaxTokens = 2048,
    ///                                             StopSequences = new[]
    ///                                             {
    ///                                                 "User:",
    ///                                             },
    ///                                             Temperature = 0,
    ///                                             TopP = 0.8999999761581421,
    ///                                         },
    ///                                     },
    ///                                     TemplateConfiguration = new Aws.Bedrock.Inputs.AgentFlowDefinitionNodeConfigurationPromptSourceConfigurationInlineTemplateConfigurationArgs
    ///                                     {
    ///                                         Text = new Aws.Bedrock.Inputs.AgentFlowDefinitionNodeConfigurationPromptSourceConfigurationInlineTemplateConfigurationTextArgs
    ///                                         {
    ///                                             Text = "Write a paragraph about {{topic}}.",
    ///                                             InputVariables = new[]
    ///                                             {
    ///                                                 new Aws.Bedrock.Inputs.AgentFlowDefinitionNodeConfigurationPromptSourceConfigurationInlineTemplateConfigurationTextInputVariableArgs
    ///                                                 {
    ///                                                     Name = "topic",
    ///                                                 },
    ///                                             },
    ///                                         },
    ///                                     },
    ///                                 },
    ///                             },
    ///                         },
    ///                     },
    ///                     Inputs = new[]
    ///                     {
    ///                         new Aws.Bedrock.Inputs.AgentFlowDefinitionNodeInputArgs
    ///                         {
    ///                             Expression = "$.data",
    ///                             Name = "topic",
    ///                             Type = "String",
    ///                         },
    ///                     },
    ///                     Outputs = new[]
    ///                     {
    ///                         new Aws.Bedrock.Inputs.AgentFlowDefinitionNodeOutputArgs
    ///                         {
    ///                             Name = "modelCompletion",
    ///                             Type = "String",
    ///                         },
    ///                     },
    ///                 },
    ///                 new Aws.Bedrock.Inputs.AgentFlowDefinitionNodeArgs
    ///                 {
    ///                     Name = "FlowOutputNode",
    ///                     Type = "Output",
    ///                     Configuration = new Aws.Bedrock.Inputs.AgentFlowDefinitionNodeConfigurationArgs
    ///                     {
    ///                         Output = null,
    ///                     },
    ///                     Inputs = new[]
    ///                     {
    ///                         new Aws.Bedrock.Inputs.AgentFlowDefinitionNodeInputArgs
    ///                         {
    ///                             Expression = "$.data",
    ///                             Name = "document",
    ///                             Type = "String",
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import Bedrock Agents Flow using the `id`. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:bedrock/agentFlow:AgentFlow example ABCDEFGHIJ
    /// ```
    /// </summary>
    [AwsResourceType("aws:bedrock/agentFlow:AgentFlow")]
    public partial class AgentFlow : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the flow.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// The time at which the flow was created.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the KMS key to encrypt the flow.
        /// </summary>
        [Output("customerEncryptionKeyArn")]
        public Output<string?> CustomerEncryptionKeyArn { get; private set; } = null!;

        /// <summary>
        /// A definition of the nodes and connections between nodes in the flow. See Definition for more information.
        /// </summary>
        [Output("definition")]
        public Output<Outputs.AgentFlowDefinition?> Definition { get; private set; } = null!;

        /// <summary>
        /// A description for the flow.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the service role with permissions to create and manage a flow. For more information, see [Create a service role for flows in Amazon Bedrock](https://docs.aws.amazon.com/bedrock/latest/userguide/flows-permissions.html) in the Amazon Bedrock User Guide.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Output("executionRoleArn")]
        public Output<string> ExecutionRoleArn { get; private set; } = null!;

        /// <summary>
        /// A name for the flow.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// The status of the flow.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Key-value map of resource tags. If configured with a provider `DefaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `DefaultTags` configuration block.
        /// </summary>
        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("timeouts")]
        public Output<Outputs.AgentFlowTimeouts?> Timeouts { get; private set; } = null!;

        /// <summary>
        /// The time at which the flow was last updated.
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;

        /// <summary>
        /// The version of the flow.
        /// </summary>
        [Output("version")]
        public Output<string> Version { get; private set; } = null!;


        /// <summary>
        /// Create a AgentFlow resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AgentFlow(string name, AgentFlowArgs args, CustomResourceOptions? options = null)
            : base("aws:bedrock/agentFlow:AgentFlow", name, args ?? new AgentFlowArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AgentFlow(string name, Input<string> id, AgentFlowState? state = null, CustomResourceOptions? options = null)
            : base("aws:bedrock/agentFlow:AgentFlow", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AgentFlow resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AgentFlow Get(string name, Input<string> id, AgentFlowState? state = null, CustomResourceOptions? options = null)
        {
            return new AgentFlow(name, id, state, options);
        }
    }

    public sealed class AgentFlowArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the KMS key to encrypt the flow.
        /// </summary>
        [Input("customerEncryptionKeyArn")]
        public Input<string>? CustomerEncryptionKeyArn { get; set; }

        /// <summary>
        /// A definition of the nodes and connections between nodes in the flow. See Definition for more information.
        /// </summary>
        [Input("definition")]
        public Input<Inputs.AgentFlowDefinitionArgs>? Definition { get; set; }

        /// <summary>
        /// A description for the flow.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the service role with permissions to create and manage a flow. For more information, see [Create a service role for flows in Amazon Bedrock](https://docs.aws.amazon.com/bedrock/latest/userguide/flows-permissions.html) in the Amazon Bedrock User Guide.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("executionRoleArn", required: true)]
        public Input<string> ExecutionRoleArn { get; set; } = null!;

        /// <summary>
        /// A name for the flow.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value map of resource tags. If configured with a provider `DefaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("timeouts")]
        public Input<Inputs.AgentFlowTimeoutsArgs>? Timeouts { get; set; }

        public AgentFlowArgs()
        {
        }
        public static new AgentFlowArgs Empty => new AgentFlowArgs();
    }

    public sealed class AgentFlowState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the flow.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// The time at which the flow was created.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the KMS key to encrypt the flow.
        /// </summary>
        [Input("customerEncryptionKeyArn")]
        public Input<string>? CustomerEncryptionKeyArn { get; set; }

        /// <summary>
        /// A definition of the nodes and connections between nodes in the flow. See Definition for more information.
        /// </summary>
        [Input("definition")]
        public Input<Inputs.AgentFlowDefinitionGetArgs>? Definition { get; set; }

        /// <summary>
        /// A description for the flow.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the service role with permissions to create and manage a flow. For more information, see [Create a service role for flows in Amazon Bedrock](https://docs.aws.amazon.com/bedrock/latest/userguide/flows-permissions.html) in the Amazon Bedrock User Guide.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("executionRoleArn")]
        public Input<string>? ExecutionRoleArn { get; set; }

        /// <summary>
        /// A name for the flow.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The status of the flow.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value map of resource tags. If configured with a provider `DefaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `DefaultTags` configuration block.
        /// </summary>
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("timeouts")]
        public Input<Inputs.AgentFlowTimeoutsGetArgs>? Timeouts { get; set; }

        /// <summary>
        /// The time at which the flow was last updated.
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        /// <summary>
        /// The version of the flow.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public AgentFlowState()
        {
        }
        public static new AgentFlowState Empty => new AgentFlowState();
    }
}
