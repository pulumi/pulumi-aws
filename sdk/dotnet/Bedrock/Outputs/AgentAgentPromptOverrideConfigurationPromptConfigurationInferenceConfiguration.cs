// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Bedrock.Outputs
{

    [OutputType]
    public sealed class AgentAgentPromptOverrideConfigurationPromptConfigurationInferenceConfiguration
    {
        /// <summary>
        /// Maximum number of tokens to allow in the generated response.
        /// </summary>
        public readonly int MaxLength;
        /// <summary>
        /// List of stop sequences. A stop sequence is a sequence of characters that causes the model to stop generating the response.
        /// </summary>
        public readonly ImmutableArray<string> StopSequences;
        /// <summary>
        /// Likelihood of the model selecting higher-probability options while generating a response. A lower value makes the model more likely to choose higher-probability options, while a higher value makes the model more likely to choose lower-probability options.
        /// </summary>
        public readonly double Temperature;
        /// <summary>
        /// Number of top most-likely candidates, between 0 and 500, from which the model chooses the next token in the sequence.
        /// </summary>
        public readonly int TopK;
        /// <summary>
        /// Top percentage of the probability distribution of next tokens, between 0 and 1 (denoting 0% and 100%), from which the model chooses the next token in the sequence.
        /// </summary>
        public readonly double TopP;

        [OutputConstructor]
        private AgentAgentPromptOverrideConfigurationPromptConfigurationInferenceConfiguration(
            int maxLength,

            ImmutableArray<string> stopSequences,

            double temperature,

            int topK,

            double topP)
        {
            MaxLength = maxLength;
            StopSequences = stopSequences;
            Temperature = temperature;
            TopK = topK;
            TopP = topP;
        }
    }
}
