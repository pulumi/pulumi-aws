// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Bedrock.Outputs
{

    [OutputType]
    public sealed class AgentDataSourceVectorIngestionConfiguration
    {
        /// <summary>
        /// Details about how to chunk the documents in the data source. A chunk refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried. See `chunking_configuration` block for details.
        /// </summary>
        public readonly Outputs.AgentDataSourceVectorIngestionConfigurationChunkingConfiguration? ChunkingConfiguration;
        /// <summary>
        /// Configuration for custom transformation of data source documents.
        /// </summary>
        public readonly Outputs.AgentDataSourceVectorIngestionConfigurationCustomTransformationConfiguration? CustomTransformationConfiguration;
        /// <summary>
        /// Configuration for custom parsing of data source documents. See `parsing_configuration` block for details.
        /// </summary>
        public readonly Outputs.AgentDataSourceVectorIngestionConfigurationParsingConfiguration? ParsingConfiguration;

        [OutputConstructor]
        private AgentDataSourceVectorIngestionConfiguration(
            Outputs.AgentDataSourceVectorIngestionConfigurationChunkingConfiguration? chunkingConfiguration,

            Outputs.AgentDataSourceVectorIngestionConfigurationCustomTransformationConfiguration? customTransformationConfiguration,

            Outputs.AgentDataSourceVectorIngestionConfigurationParsingConfiguration? parsingConfiguration)
        {
            ChunkingConfiguration = chunkingConfiguration;
            CustomTransformationConfiguration = customTransformationConfiguration;
            ParsingConfiguration = parsingConfiguration;
        }
    }
}
