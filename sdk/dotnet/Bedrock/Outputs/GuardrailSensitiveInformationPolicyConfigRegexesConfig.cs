// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Bedrock.Outputs
{

    [OutputType]
    public sealed class GuardrailSensitiveInformationPolicyConfigRegexesConfig
    {
        /// <summary>
        /// Options for sensitive information action. Valid values: `BLOCK`, `ANONYMIZE`, `NONE`.
        /// </summary>
        public readonly string Action;
        /// <summary>
        /// The regex description.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Action to take when harmful content is detected in the input. Valid values: `BLOCK`, `ANONYMIZE`, `NONE`.
        /// </summary>
        public readonly string? InputAction;
        /// <summary>
        /// Whether to enable guardrail evaluation on the input. When disabled, you aren't charged for the evaluation.
        /// </summary>
        public readonly bool? InputEnabled;
        /// <summary>
        /// The regex name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Action to take when harmful content is detected in the output. Valid values: `BLOCK`, `ANONYMIZE`, `NONE`.
        /// </summary>
        public readonly string? OutputAction;
        /// <summary>
        /// Whether to enable guardrail evaluation on the output. When disabled, you aren't charged for the evaluation.
        /// </summary>
        public readonly bool? OutputEnabled;
        /// <summary>
        /// The regex pattern.
        /// </summary>
        public readonly string Pattern;

        [OutputConstructor]
        private GuardrailSensitiveInformationPolicyConfigRegexesConfig(
            string action,

            string? description,

            string? inputAction,

            bool? inputEnabled,

            string name,

            string? outputAction,

            bool? outputEnabled,

            string pattern)
        {
            Action = action;
            Description = description;
            InputAction = inputAction;
            InputEnabled = inputEnabled;
            Name = name;
            OutputAction = outputAction;
            OutputEnabled = outputEnabled;
            Pattern = pattern;
        }
    }
}
