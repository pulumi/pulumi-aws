// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Bedrock.Outputs
{

    [OutputType]
    public sealed class GetInferenceProfilesInferenceProfileSummaryResult
    {
        /// <summary>
        /// The time at which the inference profile was created.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// The description of the inference profile.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the inference profile.
        /// </summary>
        public readonly string InferenceProfileArn;
        /// <summary>
        /// The unique identifier of the inference profile.
        /// </summary>
        public readonly string InferenceProfileId;
        /// <summary>
        /// The name of the inference profile.
        /// </summary>
        public readonly string InferenceProfileName;
        /// <summary>
        /// A list of information about each model in the inference profile. See `models`.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInferenceProfilesInferenceProfileSummaryModelResult> Models;
        /// <summary>
        /// The status of the inference profile. `ACTIVE` means that the inference profile is available to use.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The type of the inference profile. `SYSTEM_DEFINED` means that the inference profile is defined by Amazon Bedrock.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// The time at which the inference profile was last updated.
        /// </summary>
        public readonly string UpdatedAt;

        [OutputConstructor]
        private GetInferenceProfilesInferenceProfileSummaryResult(
            string createdAt,

            string description,

            string inferenceProfileArn,

            string inferenceProfileId,

            string inferenceProfileName,

            ImmutableArray<Outputs.GetInferenceProfilesInferenceProfileSummaryModelResult> models,

            string status,

            string type,

            string updatedAt)
        {
            CreatedAt = createdAt;
            Description = description;
            InferenceProfileArn = inferenceProfileArn;
            InferenceProfileId = inferenceProfileId;
            InferenceProfileName = inferenceProfileName;
            Models = models;
            Status = status;
            Type = type;
            UpdatedAt = updatedAt;
        }
    }
}
