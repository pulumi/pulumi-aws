// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Bedrock
{
    public static class GetInferenceProfiles
    {
        /// <summary>
        /// Data source for managing AWS Bedrock AWS Bedrock Inference Profiles.
        /// 
        /// ## Example Usage
        /// 
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.Bedrock.GetInferenceProfiles.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetInferenceProfilesResult> InvokeAsync(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInferenceProfilesResult>("aws:bedrock/getInferenceProfiles:getInferenceProfiles", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// Data source for managing AWS Bedrock AWS Bedrock Inference Profiles.
        /// 
        /// ## Example Usage
        /// 
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.Bedrock.GetInferenceProfiles.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetInferenceProfilesResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInferenceProfilesResult>("aws:bedrock/getInferenceProfiles:getInferenceProfiles", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// Data source for managing AWS Bedrock AWS Bedrock Inference Profiles.
        /// 
        /// ## Example Usage
        /// 
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.Bedrock.GetInferenceProfiles.Invoke();
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetInferenceProfilesResult> Invoke(InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetInferenceProfilesResult>("aws:bedrock/getInferenceProfiles:getInferenceProfiles", InvokeArgs.Empty, options.WithDefaults());
    }


    [OutputType]
    public sealed class GetInferenceProfilesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// List of inference profile summary objects. See `inference_profile_summaries`.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInferenceProfilesInferenceProfileSummaryResult> InferenceProfileSummaries;

        [OutputConstructor]
        private GetInferenceProfilesResult(
            string id,

            ImmutableArray<Outputs.GetInferenceProfilesInferenceProfileSummaryResult> inferenceProfileSummaries)
        {
            Id = id;
            InferenceProfileSummaries = inferenceProfileSummaries;
        }
    }
}
