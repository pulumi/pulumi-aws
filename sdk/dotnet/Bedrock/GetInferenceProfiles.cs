// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Bedrock
{
    public static class GetInferenceProfiles
    {
        /// <summary>
        /// Data source for managing AWS Bedrock Inference Profiles.
        /// 
        /// ## Example Usage
        /// 
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.Bedrock.GetInferenceProfiles.Invoke();
        /// 
        /// });
        /// ```
        /// 
        /// ### Filter by Type
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.Bedrock.GetInferenceProfiles.Invoke(new()
        ///     {
        ///         Type = "APPLICATION",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetInferenceProfilesResult> InvokeAsync(GetInferenceProfilesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInferenceProfilesResult>("aws:bedrock/getInferenceProfiles:getInferenceProfiles", args ?? new GetInferenceProfilesArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for managing AWS Bedrock Inference Profiles.
        /// 
        /// ## Example Usage
        /// 
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.Bedrock.GetInferenceProfiles.Invoke();
        /// 
        /// });
        /// ```
        /// 
        /// ### Filter by Type
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.Bedrock.GetInferenceProfiles.Invoke(new()
        ///     {
        ///         Type = "APPLICATION",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetInferenceProfilesResult> Invoke(GetInferenceProfilesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInferenceProfilesResult>("aws:bedrock/getInferenceProfiles:getInferenceProfiles", args ?? new GetInferenceProfilesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for managing AWS Bedrock Inference Profiles.
        /// 
        /// ## Example Usage
        /// 
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.Bedrock.GetInferenceProfiles.Invoke();
        /// 
        /// });
        /// ```
        /// 
        /// ### Filter by Type
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.Bedrock.GetInferenceProfiles.Invoke(new()
        ///     {
        ///         Type = "APPLICATION",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetInferenceProfilesResult> Invoke(GetInferenceProfilesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetInferenceProfilesResult>("aws:bedrock/getInferenceProfiles:getInferenceProfiles", args ?? new GetInferenceProfilesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInferenceProfilesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public string? Region { get; set; }

        /// <summary>
        /// Filters for inference profiles that match the type you specify. Valid values are: `SYSTEM_DEFINED`, `APPLICATION`.
        /// </summary>
        [Input("type")]
        public string? Type { get; set; }

        public GetInferenceProfilesArgs()
        {
        }
        public static new GetInferenceProfilesArgs Empty => new GetInferenceProfilesArgs();
    }

    public sealed class GetInferenceProfilesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Filters for inference profiles that match the type you specify. Valid values are: `SYSTEM_DEFINED`, `APPLICATION`.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public GetInferenceProfilesInvokeArgs()
        {
        }
        public static new GetInferenceProfilesInvokeArgs Empty => new GetInferenceProfilesInvokeArgs();
    }


    [OutputType]
    public sealed class GetInferenceProfilesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// List of inference profile summary objects. See `inferenceProfileSummaries`.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInferenceProfilesInferenceProfileSummaryResult> InferenceProfileSummaries;
        public readonly string Region;
        /// <summary>
        /// Type of the inference profile. `SYSTEM_DEFINED` means that the inference profile is defined by Amazon Bedrock. `APPLICATION` means the inference profile was created by a user.
        /// </summary>
        public readonly string? Type;

        [OutputConstructor]
        private GetInferenceProfilesResult(
            string id,

            ImmutableArray<Outputs.GetInferenceProfilesInferenceProfileSummaryResult> inferenceProfileSummaries,

            string region,

            string? type)
        {
            Id = id;
            InferenceProfileSummaries = inferenceProfileSummaries;
            Region = region;
            Type = type;
        }
    }
}
