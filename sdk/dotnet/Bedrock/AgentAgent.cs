// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Bedrock
{
    /// <summary>
    /// Resource for managing an AWS Agents for Amazon Bedrock Agent.
    /// 
    /// ## Example Usage
    /// 
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var current = Aws.GetCallerIdentity.Invoke();
    /// 
    ///     var currentGetPartition = Aws.GetPartition.Invoke();
    /// 
    ///     var currentGetRegion = Aws.GetRegion.Invoke();
    /// 
    ///     var exampleAgentTrust = Aws.Iam.GetPolicyDocument.Invoke(new()
    ///     {
    ///         Statements = new[]
    ///         {
    ///             new Aws.Iam.Inputs.GetPolicyDocumentStatementInputArgs
    ///             {
    ///                 Actions = new[]
    ///                 {
    ///                     "sts:AssumeRole",
    ///                 },
    ///                 Principals = new[]
    ///                 {
    ///                     new Aws.Iam.Inputs.GetPolicyDocumentStatementPrincipalInputArgs
    ///                     {
    ///                         Identifiers = new[]
    ///                         {
    ///                             "bedrock.amazonaws.com",
    ///                         },
    ///                         Type = "Service",
    ///                     },
    ///                 },
    ///                 Conditions = new[]
    ///                 {
    ///                     new Aws.Iam.Inputs.GetPolicyDocumentStatementConditionInputArgs
    ///                     {
    ///                         Test = "StringEquals",
    ///                         Values = new[]
    ///                         {
    ///                             current.Apply(getCallerIdentityResult =&gt; getCallerIdentityResult.AccountId),
    ///                         },
    ///                         Variable = "aws:SourceAccount",
    ///                     },
    ///                     new Aws.Iam.Inputs.GetPolicyDocumentStatementConditionInputArgs
    ///                     {
    ///                         Test = "ArnLike",
    ///                         Values = new[]
    ///                         {
    ///                             $"arn:{currentGetPartition.Apply(getPartitionResult =&gt; getPartitionResult.Partition)}:bedrock:{currentGetRegion.Apply(getRegionResult =&gt; getRegionResult.Name)}:{current.Apply(getCallerIdentityResult =&gt; getCallerIdentityResult.AccountId)}:agent/*",
    ///                         },
    ///                         Variable = "AWS:SourceArn",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    ///     var exampleAgentPermissions = Aws.Iam.GetPolicyDocument.Invoke(new()
    ///     {
    ///         Statements = new[]
    ///         {
    ///             new Aws.Iam.Inputs.GetPolicyDocumentStatementInputArgs
    ///             {
    ///                 Actions = new[]
    ///                 {
    ///                     "bedrock:InvokeModel",
    ///                 },
    ///                 Resources = new[]
    ///                 {
    ///                     $"arn:{currentGetPartition.Apply(getPartitionResult =&gt; getPartitionResult.Partition)}:bedrock:{currentGetRegion.Apply(getRegionResult =&gt; getRegionResult.Name)}::foundation-model/anthropic.claude-v2",
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    ///     var example = new Aws.Iam.Role("example", new()
    ///     {
    ///         AssumeRolePolicy = exampleAgentTrust.Apply(getPolicyDocumentResult =&gt; getPolicyDocumentResult.Json),
    ///         NamePrefix = "AmazonBedrockExecutionRoleForAgents_",
    ///     });
    /// 
    ///     var exampleRolePolicy = new Aws.Iam.RolePolicy("example", new()
    ///     {
    ///         Policy = exampleAgentPermissions.Apply(getPolicyDocumentResult =&gt; getPolicyDocumentResult.Json),
    ///         Role = example.Id,
    ///     });
    /// 
    ///     var exampleAgentAgent = new Aws.Bedrock.AgentAgent("example", new()
    ///     {
    ///         AgentName = "my-agent-name",
    ///         AgentResourceRoleArn = example.Arn,
    ///         IdleSessionTtlInSeconds = 500,
    ///         FoundationModel = "anthropic.claude-v2",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import Agents for Amazon Bedrock Agent using the agent ID. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:bedrock/agentAgent:AgentAgent example GGRRAED6JP
    /// ```
    /// </summary>
    [AwsResourceType("aws:bedrock/agentAgent:AgentAgent")]
    public partial class AgentAgent : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ARN of the agent.
        /// </summary>
        [Output("agentArn")]
        public Output<string> AgentArn { get; private set; } = null!;

        /// <summary>
        /// Unique identifier of the agent.
        /// </summary>
        [Output("agentId")]
        public Output<string> AgentId { get; private set; } = null!;

        /// <summary>
        /// Name of the agent.
        /// </summary>
        [Output("agentName")]
        public Output<string> AgentName { get; private set; } = null!;

        /// <summary>
        /// ARN of the IAM role with permissions to invoke API operations on the agent.
        /// </summary>
        [Output("agentResourceRoleArn")]
        public Output<string> AgentResourceRoleArn { get; private set; } = null!;

        /// <summary>
        /// Version of the agent.
        /// </summary>
        [Output("agentVersion")]
        public Output<string> AgentVersion { get; private set; } = null!;

        /// <summary>
        /// ARN of the AWS KMS key that encrypts the agent.
        /// </summary>
        [Output("customerEncryptionKeyArn")]
        public Output<string?> CustomerEncryptionKeyArn { get; private set; } = null!;

        /// <summary>
        /// Description of the agent.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Foundation model used for orchestration by the agent.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Output("foundationModel")]
        public Output<string> FoundationModel { get; private set; } = null!;

        /// <summary>
        /// Number of seconds for which Amazon Bedrock keeps information about a user's conversation with the agent. A user interaction remains active for the amount of time specified. If no conversation occurs during this time, the session expires and Amazon Bedrock deletes any data provided before the timeout.
        /// </summary>
        [Output("idleSessionTtlInSeconds")]
        public Output<int> IdleSessionTtlInSeconds { get; private set; } = null!;

        /// <summary>
        /// Instructions that tell the agent what it should do and how it should interact with users.
        /// </summary>
        [Output("instruction")]
        public Output<string> Instruction { get; private set; } = null!;

        /// <summary>
        /// Whether to prepare the agent after creation or modification. Defaults to `true`.
        /// </summary>
        [Output("prepareAgent")]
        public Output<bool> PrepareAgent { get; private set; } = null!;

        /// <summary>
        /// Configurations to override prompt templates in different parts of an agent sequence. For more information, see [Advanced prompts](https://docs.aws.amazon.com/bedrock/latest/userguide/advanced-prompts.html). See `prompt_override_configuration` Block for details.
        /// </summary>
        [Output("promptOverrideConfigurations")]
        public Output<ImmutableArray<Outputs.AgentAgentPromptOverrideConfiguration>> PromptOverrideConfigurations { get; private set; } = null!;

        /// <summary>
        /// Whether the in-use check is skipped when deleting the agent.
        /// </summary>
        [Output("skipResourceInUseCheck")]
        public Output<bool> SkipResourceInUseCheck { get; private set; } = null!;

        /// <summary>
        /// Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("timeouts")]
        public Output<Outputs.AgentAgentTimeouts?> Timeouts { get; private set; } = null!;


        /// <summary>
        /// Create a AgentAgent resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AgentAgent(string name, AgentAgentArgs args, CustomResourceOptions? options = null)
            : base("aws:bedrock/agentAgent:AgentAgent", name, args ?? new AgentAgentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AgentAgent(string name, Input<string> id, AgentAgentState? state = null, CustomResourceOptions? options = null)
            : base("aws:bedrock/agentAgent:AgentAgent", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AgentAgent resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AgentAgent Get(string name, Input<string> id, AgentAgentState? state = null, CustomResourceOptions? options = null)
        {
            return new AgentAgent(name, id, state, options);
        }
    }

    public sealed class AgentAgentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the agent.
        /// </summary>
        [Input("agentName", required: true)]
        public Input<string> AgentName { get; set; } = null!;

        /// <summary>
        /// ARN of the IAM role with permissions to invoke API operations on the agent.
        /// </summary>
        [Input("agentResourceRoleArn", required: true)]
        public Input<string> AgentResourceRoleArn { get; set; } = null!;

        /// <summary>
        /// ARN of the AWS KMS key that encrypts the agent.
        /// </summary>
        [Input("customerEncryptionKeyArn")]
        public Input<string>? CustomerEncryptionKeyArn { get; set; }

        /// <summary>
        /// Description of the agent.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Foundation model used for orchestration by the agent.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("foundationModel", required: true)]
        public Input<string> FoundationModel { get; set; } = null!;

        /// <summary>
        /// Number of seconds for which Amazon Bedrock keeps information about a user's conversation with the agent. A user interaction remains active for the amount of time specified. If no conversation occurs during this time, the session expires and Amazon Bedrock deletes any data provided before the timeout.
        /// </summary>
        [Input("idleSessionTtlInSeconds")]
        public Input<int>? IdleSessionTtlInSeconds { get; set; }

        /// <summary>
        /// Instructions that tell the agent what it should do and how it should interact with users.
        /// </summary>
        [Input("instruction")]
        public Input<string>? Instruction { get; set; }

        /// <summary>
        /// Whether to prepare the agent after creation or modification. Defaults to `true`.
        /// </summary>
        [Input("prepareAgent")]
        public Input<bool>? PrepareAgent { get; set; }

        [Input("promptOverrideConfigurations")]
        private InputList<Inputs.AgentAgentPromptOverrideConfigurationArgs>? _promptOverrideConfigurations;

        /// <summary>
        /// Configurations to override prompt templates in different parts of an agent sequence. For more information, see [Advanced prompts](https://docs.aws.amazon.com/bedrock/latest/userguide/advanced-prompts.html). See `prompt_override_configuration` Block for details.
        /// </summary>
        public InputList<Inputs.AgentAgentPromptOverrideConfigurationArgs> PromptOverrideConfigurations
        {
            get => _promptOverrideConfigurations ?? (_promptOverrideConfigurations = new InputList<Inputs.AgentAgentPromptOverrideConfigurationArgs>());
            set => _promptOverrideConfigurations = value;
        }

        /// <summary>
        /// Whether the in-use check is skipped when deleting the agent.
        /// </summary>
        [Input("skipResourceInUseCheck")]
        public Input<bool>? SkipResourceInUseCheck { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("timeouts")]
        public Input<Inputs.AgentAgentTimeoutsArgs>? Timeouts { get; set; }

        public AgentAgentArgs()
        {
        }
        public static new AgentAgentArgs Empty => new AgentAgentArgs();
    }

    public sealed class AgentAgentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ARN of the agent.
        /// </summary>
        [Input("agentArn")]
        public Input<string>? AgentArn { get; set; }

        /// <summary>
        /// Unique identifier of the agent.
        /// </summary>
        [Input("agentId")]
        public Input<string>? AgentId { get; set; }

        /// <summary>
        /// Name of the agent.
        /// </summary>
        [Input("agentName")]
        public Input<string>? AgentName { get; set; }

        /// <summary>
        /// ARN of the IAM role with permissions to invoke API operations on the agent.
        /// </summary>
        [Input("agentResourceRoleArn")]
        public Input<string>? AgentResourceRoleArn { get; set; }

        /// <summary>
        /// Version of the agent.
        /// </summary>
        [Input("agentVersion")]
        public Input<string>? AgentVersion { get; set; }

        /// <summary>
        /// ARN of the AWS KMS key that encrypts the agent.
        /// </summary>
        [Input("customerEncryptionKeyArn")]
        public Input<string>? CustomerEncryptionKeyArn { get; set; }

        /// <summary>
        /// Description of the agent.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Foundation model used for orchestration by the agent.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("foundationModel")]
        public Input<string>? FoundationModel { get; set; }

        /// <summary>
        /// Number of seconds for which Amazon Bedrock keeps information about a user's conversation with the agent. A user interaction remains active for the amount of time specified. If no conversation occurs during this time, the session expires and Amazon Bedrock deletes any data provided before the timeout.
        /// </summary>
        [Input("idleSessionTtlInSeconds")]
        public Input<int>? IdleSessionTtlInSeconds { get; set; }

        /// <summary>
        /// Instructions that tell the agent what it should do and how it should interact with users.
        /// </summary>
        [Input("instruction")]
        public Input<string>? Instruction { get; set; }

        /// <summary>
        /// Whether to prepare the agent after creation or modification. Defaults to `true`.
        /// </summary>
        [Input("prepareAgent")]
        public Input<bool>? PrepareAgent { get; set; }

        [Input("promptOverrideConfigurations")]
        private InputList<Inputs.AgentAgentPromptOverrideConfigurationGetArgs>? _promptOverrideConfigurations;

        /// <summary>
        /// Configurations to override prompt templates in different parts of an agent sequence. For more information, see [Advanced prompts](https://docs.aws.amazon.com/bedrock/latest/userguide/advanced-prompts.html). See `prompt_override_configuration` Block for details.
        /// </summary>
        public InputList<Inputs.AgentAgentPromptOverrideConfigurationGetArgs> PromptOverrideConfigurations
        {
            get => _promptOverrideConfigurations ?? (_promptOverrideConfigurations = new InputList<Inputs.AgentAgentPromptOverrideConfigurationGetArgs>());
            set => _promptOverrideConfigurations = value;
        }

        /// <summary>
        /// Whether the in-use check is skipped when deleting the agent.
        /// </summary>
        [Input("skipResourceInUseCheck")]
        public Input<bool>? SkipResourceInUseCheck { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Obsolete(@"Please use `tags` instead.")]
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("timeouts")]
        public Input<Inputs.AgentAgentTimeoutsGetArgs>? Timeouts { get; set; }

        public AgentAgentState()
        {
        }
        public static new AgentAgentState Empty => new AgentAgentState();
    }
}
