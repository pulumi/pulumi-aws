// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Bedrock
{
    /// <summary>
    /// Manages an AWS Bedrock AgentCore Browser. Browser provides AI agents with web browsing capabilities, allowing them to navigate websites, extract information, and interact with web content in a controlled environment.
    /// 
    /// ## Example Usage
    /// 
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Bedrock.AgentcoreBrowser("example", new()
    ///     {
    ///         Name = "example-browser",
    ///         Description = "Browser for web data extraction",
    ///         NetworkConfiguration = new Aws.Bedrock.Inputs.AgentcoreBrowserNetworkConfigurationArgs
    ///         {
    ///             NetworkMode = "PUBLIC",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ### Browser with Execution Role and Recording
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var assumeRole = Aws.Iam.GetPolicyDocument.Invoke(new()
    ///     {
    ///         Statements = new[]
    ///         {
    ///             new Aws.Iam.Inputs.GetPolicyDocumentStatementInputArgs
    ///             {
    ///                 Effect = "Allow",
    ///                 Actions = new[]
    ///                 {
    ///                     "sts:AssumeRole",
    ///                 },
    ///                 Principals = new[]
    ///                 {
    ///                     new Aws.Iam.Inputs.GetPolicyDocumentStatementPrincipalInputArgs
    ///                     {
    ///                         Type = "Service",
    ///                         Identifiers = new[]
    ///                         {
    ///                             "bedrock-agentcore.amazonaws.com",
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    ///     var example = new Aws.Iam.Role("example", new()
    ///     {
    ///         Name = "bedrock-agentcore-browser-role",
    ///         AssumeRolePolicy = assumeRole.Apply(getPolicyDocumentResult =&gt; getPolicyDocumentResult.Json),
    ///     });
    /// 
    ///     var recording = new Aws.S3.Bucket("recording", new()
    ///     {
    ///         BucketName = "browser-recording-bucket",
    ///     });
    /// 
    ///     var exampleAgentcoreBrowser = new Aws.Bedrock.AgentcoreBrowser("example", new()
    ///     {
    ///         Name = "example-browser",
    ///         Description = "Browser with recording enabled",
    ///         ExecutionRoleArn = example.Arn,
    ///         NetworkConfiguration = new Aws.Bedrock.Inputs.AgentcoreBrowserNetworkConfigurationArgs
    ///         {
    ///             NetworkMode = "PUBLIC",
    ///         },
    ///         Recording = new Aws.Bedrock.Inputs.AgentcoreBrowserRecordingArgs
    ///         {
    ///             Enabled = true,
    ///             S3Location = new Aws.Bedrock.Inputs.AgentcoreBrowserRecordingS3LocationArgs
    ///             {
    ///                 Bucket = recording.BucketName,
    ///                 Prefix = "browser-sessions/",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import Bedrock AgentCore Browser using the browser ID. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:bedrock/agentcoreBrowser:AgentcoreBrowser example BROWSER1234567890
    /// ```
    /// </summary>
    [AwsResourceType("aws:bedrock/agentcoreBrowser:AgentcoreBrowser")]
    public partial class AgentcoreBrowser : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ARN of the Browser.
        /// </summary>
        [Output("browserArn")]
        public Output<string> BrowserArn { get; private set; } = null!;

        /// <summary>
        /// Unique identifier of the Browser.
        /// </summary>
        [Output("browserId")]
        public Output<string> BrowserId { get; private set; } = null!;

        /// <summary>
        /// Description of the browser.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// ARN of the IAM role that the browser assumes for execution.
        /// </summary>
        [Output("executionRoleArn")]
        public Output<string?> ExecutionRoleArn { get; private set; } = null!;

        /// <summary>
        /// Name of the browser.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Network configuration for the browser. See `NetworkConfiguration` below.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Output("networkConfiguration")]
        public Output<Outputs.AgentcoreBrowserNetworkConfiguration?> NetworkConfiguration { get; private set; } = null!;

        /// <summary>
        /// Recording configuration for browser sessions. See `Recording` below.
        /// </summary>
        [Output("recording")]
        public Output<Outputs.AgentcoreBrowserRecording?> Recording { get; private set; } = null!;

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// Key-value map of resource tags. If configured with a provider `DefaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `DefaultTags` configuration block.
        /// </summary>
        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("timeouts")]
        public Output<Outputs.AgentcoreBrowserTimeouts?> Timeouts { get; private set; } = null!;


        /// <summary>
        /// Create a AgentcoreBrowser resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AgentcoreBrowser(string name, AgentcoreBrowserArgs? args = null, CustomResourceOptions? options = null)
            : base("aws:bedrock/agentcoreBrowser:AgentcoreBrowser", name, args ?? new AgentcoreBrowserArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AgentcoreBrowser(string name, Input<string> id, AgentcoreBrowserState? state = null, CustomResourceOptions? options = null)
            : base("aws:bedrock/agentcoreBrowser:AgentcoreBrowser", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AgentcoreBrowser resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AgentcoreBrowser Get(string name, Input<string> id, AgentcoreBrowserState? state = null, CustomResourceOptions? options = null)
        {
            return new AgentcoreBrowser(name, id, state, options);
        }
    }

    public sealed class AgentcoreBrowserArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description of the browser.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// ARN of the IAM role that the browser assumes for execution.
        /// </summary>
        [Input("executionRoleArn")]
        public Input<string>? ExecutionRoleArn { get; set; }

        /// <summary>
        /// Name of the browser.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Network configuration for the browser. See `NetworkConfiguration` below.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("networkConfiguration")]
        public Input<Inputs.AgentcoreBrowserNetworkConfigurationArgs>? NetworkConfiguration { get; set; }

        /// <summary>
        /// Recording configuration for browser sessions. See `Recording` below.
        /// </summary>
        [Input("recording")]
        public Input<Inputs.AgentcoreBrowserRecordingArgs>? Recording { get; set; }

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value map of resource tags. If configured with a provider `DefaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("timeouts")]
        public Input<Inputs.AgentcoreBrowserTimeoutsArgs>? Timeouts { get; set; }

        public AgentcoreBrowserArgs()
        {
        }
        public static new AgentcoreBrowserArgs Empty => new AgentcoreBrowserArgs();
    }

    public sealed class AgentcoreBrowserState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ARN of the Browser.
        /// </summary>
        [Input("browserArn")]
        public Input<string>? BrowserArn { get; set; }

        /// <summary>
        /// Unique identifier of the Browser.
        /// </summary>
        [Input("browserId")]
        public Input<string>? BrowserId { get; set; }

        /// <summary>
        /// Description of the browser.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// ARN of the IAM role that the browser assumes for execution.
        /// </summary>
        [Input("executionRoleArn")]
        public Input<string>? ExecutionRoleArn { get; set; }

        /// <summary>
        /// Name of the browser.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Network configuration for the browser. See `NetworkConfiguration` below.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("networkConfiguration")]
        public Input<Inputs.AgentcoreBrowserNetworkConfigurationGetArgs>? NetworkConfiguration { get; set; }

        /// <summary>
        /// Recording configuration for browser sessions. See `Recording` below.
        /// </summary>
        [Input("recording")]
        public Input<Inputs.AgentcoreBrowserRecordingGetArgs>? Recording { get; set; }

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value map of resource tags. If configured with a provider `DefaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `DefaultTags` configuration block.
        /// </summary>
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("timeouts")]
        public Input<Inputs.AgentcoreBrowserTimeoutsGetArgs>? Timeouts { get; set; }

        public AgentcoreBrowserState()
        {
        }
        public static new AgentcoreBrowserState Empty => new AgentcoreBrowserState();
    }
}
