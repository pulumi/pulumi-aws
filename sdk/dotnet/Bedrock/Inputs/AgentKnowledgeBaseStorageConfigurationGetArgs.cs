// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Bedrock.Inputs
{

    public sealed class AgentKnowledgeBaseStorageConfigurationGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The storage configuration of the knowledge base in Amazon OpenSearch Service. See `opensearch_serverless_configuration` block for details.
        /// </summary>
        [Input("opensearchServerlessConfiguration")]
        public Input<Inputs.AgentKnowledgeBaseStorageConfigurationOpensearchServerlessConfigurationGetArgs>? OpensearchServerlessConfiguration { get; set; }

        /// <summary>
        /// The storage configuration of the knowledge base in Pinecone. See `pinecone_configuration` block for details.
        /// </summary>
        [Input("pineconeConfiguration")]
        public Input<Inputs.AgentKnowledgeBaseStorageConfigurationPineconeConfigurationGetArgs>? PineconeConfiguration { get; set; }

        /// <summary>
        /// Details about the storage configuration of the knowledge base in Amazon RDS. For more information, see [Create a vector index in Amazon RDS](https://docs.aws.amazon.com/bedrock/latest/userguide/knowledge-base-setup.html). See `rds_configuration` block for details.
        /// </summary>
        [Input("rdsConfiguration")]
        public Input<Inputs.AgentKnowledgeBaseStorageConfigurationRdsConfigurationGetArgs>? RdsConfiguration { get; set; }

        /// <summary>
        /// The storage configuration of the knowledge base in Redis Enterprise Cloud. See `redis_enterprise_cloud_configuration` block for details.
        /// </summary>
        [Input("redisEnterpriseCloudConfiguration")]
        public Input<Inputs.AgentKnowledgeBaseStorageConfigurationRedisEnterpriseCloudConfigurationGetArgs>? RedisEnterpriseCloudConfiguration { get; set; }

        /// <summary>
        /// Vector store service in which the knowledge base is stored. Valid Values: `OPENSEARCH_SERVERLESS`, `PINECONE`, `REDIS_ENTERPRISE_CLOUD`, `RDS`.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public AgentKnowledgeBaseStorageConfigurationGetArgs()
        {
        }
        public static new AgentKnowledgeBaseStorageConfigurationGetArgs Empty => new AgentKnowledgeBaseStorageConfigurationGetArgs();
    }
}
