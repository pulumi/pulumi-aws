// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Bedrock.Inputs
{

    public sealed class AgentcoreOauth2CredentialProviderOauth2ProviderConfigCustomOauth2ProviderConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Used together with write-only credentials to trigger an update. Increment this value when an update to `ClientIdWo` or `ClientSecretWo` is required.
        /// 
        /// **OAuth Discovery Configuration:**
        /// </summary>
        [Input("clientCredentialsWoVersion")]
        public Input<int>? ClientCredentialsWoVersion { get; set; }

        [Input("clientId")]
        private Input<string>? _clientId;

        /// <summary>
        /// OAuth2 client ID. Cannot be used with `ClientIdWo`. Must be used together with `ClientSecret`.
        /// </summary>
        public Input<string>? ClientId
        {
            get => _clientId;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _clientId = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("clientIdWo")]
        private Input<string>? _clientIdWo;

        /// <summary>
        /// **NOTE:** This field is write-only and its value will not be updated in state as part of read operations.
        /// Write-only OAuth2 client ID. Cannot be used with `ClientId`. Must be used together with `ClientSecretWo` and `ClientCredentialsWoVersion`.
        /// </summary>
        public Input<string>? ClientIdWo
        {
            get => _clientIdWo;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _clientIdWo = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("clientSecret")]
        private Input<string>? _clientSecret;

        /// <summary>
        /// OAuth2 client secret. Cannot be used with `ClientSecretWo`. Must be used together with `ClientId`.
        /// 
        /// **Write-Only Credentials (choose one pair):**
        /// </summary>
        public Input<string>? ClientSecret
        {
            get => _clientSecret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _clientSecret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("clientSecretWo")]
        private Input<string>? _clientSecretWo;

        /// <summary>
        /// **NOTE:** This field is write-only and its value will not be updated in state as part of read operations.
        /// Write-only OAuth2 client secret. Cannot be used with `ClientSecret`. Must be used together with `ClientIdWo` and `ClientCredentialsWoVersion`.
        /// </summary>
        public Input<string>? ClientSecretWo
        {
            get => _clientSecretWo;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _clientSecretWo = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// OAuth discovery configuration. See `OauthDiscovery` below.
        /// </summary>
        [Input("oauthDiscovery")]
        public Input<Inputs.AgentcoreOauth2CredentialProviderOauth2ProviderConfigCustomOauth2ProviderConfigOauthDiscoveryArgs>? OauthDiscovery { get; set; }

        public AgentcoreOauth2CredentialProviderOauth2ProviderConfigCustomOauth2ProviderConfigArgs()
        {
        }
        public static new AgentcoreOauth2CredentialProviderOauth2ProviderConfigCustomOauth2ProviderConfigArgs Empty => new AgentcoreOauth2CredentialProviderOauth2ProviderConfigCustomOauth2ProviderConfigArgs();
    }
}
