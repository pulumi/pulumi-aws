// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Bedrock
{
    /// <summary>
    /// Resource for managing an AWS Agents for Amazon Bedrock Knowledge Base.
    /// 
    /// ## Example Usage
    /// 
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Bedrock.AgentKnowledgeBase("example", new()
    ///     {
    ///         Name = "example",
    ///         RoleArn = exampleAwsIamRole.Arn,
    ///         KnowledgeBaseConfiguration = new Aws.Bedrock.Inputs.AgentKnowledgeBaseKnowledgeBaseConfigurationArgs
    ///         {
    ///             VectorKnowledgeBaseConfiguration = new Aws.Bedrock.Inputs.AgentKnowledgeBaseKnowledgeBaseConfigurationVectorKnowledgeBaseConfigurationArgs
    ///             {
    ///                 EmbeddingModelArn = "arn:aws:bedrock:us-west-2::foundation-model/amazon.titan-embed-text-v2:0",
    ///             },
    ///             Type = "VECTOR",
    ///         },
    ///         StorageConfiguration = new Aws.Bedrock.Inputs.AgentKnowledgeBaseStorageConfigurationArgs
    ///         {
    ///             Type = "OPENSEARCH_SERVERLESS",
    ///             OpensearchServerlessConfiguration = new Aws.Bedrock.Inputs.AgentKnowledgeBaseStorageConfigurationOpensearchServerlessConfigurationArgs
    ///             {
    ///                 CollectionArn = "arn:aws:aoss:us-west-2:123456789012:collection/142bezjddq707i5stcrf",
    ///                 VectorIndexName = "bedrock-knowledge-base-default-index",
    ///                 FieldMapping = new Aws.Bedrock.Inputs.AgentKnowledgeBaseStorageConfigurationOpensearchServerlessConfigurationFieldMappingArgs
    ///                 {
    ///                     VectorField = "bedrock-knowledge-base-default-vector",
    ///                     TextField = "AMAZON_BEDROCK_TEXT_CHUNK",
    ///                     MetadataField = "AMAZON_BEDROCK_METADATA",
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ### With Supplemental Data Storage Configuration
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Bedrock.AgentKnowledgeBase("example", new()
    ///     {
    ///         Name = "example",
    ///         RoleArn = exampleAwsIamRole.Arn,
    ///         KnowledgeBaseConfiguration = new Aws.Bedrock.Inputs.AgentKnowledgeBaseKnowledgeBaseConfigurationArgs
    ///         {
    ///             VectorKnowledgeBaseConfiguration = new Aws.Bedrock.Inputs.AgentKnowledgeBaseKnowledgeBaseConfigurationVectorKnowledgeBaseConfigurationArgs
    ///             {
    ///                 EmbeddingModelArn = "arn:aws:bedrock:us-west-2::foundation-model/amazon.titan-embed-text-v2:0",
    ///                 EmbeddingModelConfiguration = new Aws.Bedrock.Inputs.AgentKnowledgeBaseKnowledgeBaseConfigurationVectorKnowledgeBaseConfigurationEmbeddingModelConfigurationArgs
    ///                 {
    ///                     BedrockEmbeddingModelConfiguration = new Aws.Bedrock.Inputs.AgentKnowledgeBaseKnowledgeBaseConfigurationVectorKnowledgeBaseConfigurationEmbeddingModelConfigurationBedrockEmbeddingModelConfigurationArgs
    ///                     {
    ///                         Dimensions = 1024,
    ///                         EmbeddingDataType = "FLOAT32",
    ///                     },
    ///                 },
    ///                 SupplementalDataStorageConfiguration = new Aws.Bedrock.Inputs.AgentKnowledgeBaseKnowledgeBaseConfigurationVectorKnowledgeBaseConfigurationSupplementalDataStorageConfigurationArgs
    ///                 {
    ///                     StorageLocations = new[]
    ///                     {
    ///                         new Aws.Bedrock.Inputs.AgentKnowledgeBaseKnowledgeBaseConfigurationVectorKnowledgeBaseConfigurationSupplementalDataStorageConfigurationStorageLocationArgs
    ///                         {
    ///                             Type = "S3",
    ///                             S3Location = new Aws.Bedrock.Inputs.AgentKnowledgeBaseKnowledgeBaseConfigurationVectorKnowledgeBaseConfigurationSupplementalDataStorageConfigurationStorageLocationS3LocationArgs
    ///                             {
    ///                                 Uri = "s3://my-bucket/chunk-processor/",
    ///                             },
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///             Type = "VECTOR",
    ///         },
    ///         StorageConfiguration = new Aws.Bedrock.Inputs.AgentKnowledgeBaseStorageConfigurationArgs
    ///         {
    ///             Type = "OPENSEARCH_SERVERLESS",
    ///             OpensearchServerlessConfiguration = new Aws.Bedrock.Inputs.AgentKnowledgeBaseStorageConfigurationOpensearchServerlessConfigurationArgs
    ///             {
    ///                 CollectionArn = "arn:aws:aoss:us-west-2:123456789012:collection/142bezjddq707i5stcrf",
    ///                 VectorIndexName = "bedrock-knowledge-base-default-index",
    ///                 FieldMapping = new Aws.Bedrock.Inputs.AgentKnowledgeBaseStorageConfigurationOpensearchServerlessConfigurationFieldMappingArgs
    ///                 {
    ///                     VectorField = "bedrock-knowledge-base-default-vector",
    ///                     TextField = "AMAZON_BEDROCK_TEXT_CHUNK",
    ///                     MetadataField = "AMAZON_BEDROCK_METADATA",
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import Agents for Amazon Bedrock Knowledge Base using the knowledge base ID. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:bedrock/agentKnowledgeBase:AgentKnowledgeBase example EMDPPAYPZI
    /// ```
    /// </summary>
    [AwsResourceType("aws:bedrock/agentKnowledgeBase:AgentKnowledgeBase")]
    public partial class AgentKnowledgeBase : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ARN of the knowledge base.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// Time at which the knowledge base was created.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// Description of the knowledge base.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("failureReasons")]
        public Output<ImmutableArray<string>> FailureReasons { get; private set; } = null!;

        /// <summary>
        /// Details about the embeddings configuration of the knowledge base. See `knowledge_base_configuration` block for details.
        /// </summary>
        [Output("knowledgeBaseConfiguration")]
        public Output<Outputs.AgentKnowledgeBaseKnowledgeBaseConfiguration?> KnowledgeBaseConfiguration { get; private set; } = null!;

        /// <summary>
        /// Name of the knowledge base.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// ARN of the IAM role with permissions to invoke API operations on the knowledge base.
        /// </summary>
        [Output("roleArn")]
        public Output<string> RoleArn { get; private set; } = null!;

        /// <summary>
        /// Details about the storage configuration of the knowledge base. See `storage_configuration` block for details.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Output("storageConfiguration")]
        public Output<Outputs.AgentKnowledgeBaseStorageConfiguration?> StorageConfiguration { get; private set; } = null!;

        /// <summary>
        /// Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("timeouts")]
        public Output<Outputs.AgentKnowledgeBaseTimeouts?> Timeouts { get; private set; } = null!;

        /// <summary>
        /// Time at which the knowledge base was last updated.
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;


        /// <summary>
        /// Create a AgentKnowledgeBase resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AgentKnowledgeBase(string name, AgentKnowledgeBaseArgs args, CustomResourceOptions? options = null)
            : base("aws:bedrock/agentKnowledgeBase:AgentKnowledgeBase", name, args ?? new AgentKnowledgeBaseArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AgentKnowledgeBase(string name, Input<string> id, AgentKnowledgeBaseState? state = null, CustomResourceOptions? options = null)
            : base("aws:bedrock/agentKnowledgeBase:AgentKnowledgeBase", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AgentKnowledgeBase resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AgentKnowledgeBase Get(string name, Input<string> id, AgentKnowledgeBaseState? state = null, CustomResourceOptions? options = null)
        {
            return new AgentKnowledgeBase(name, id, state, options);
        }
    }

    public sealed class AgentKnowledgeBaseArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description of the knowledge base.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Details about the embeddings configuration of the knowledge base. See `knowledge_base_configuration` block for details.
        /// </summary>
        [Input("knowledgeBaseConfiguration")]
        public Input<Inputs.AgentKnowledgeBaseKnowledgeBaseConfigurationArgs>? KnowledgeBaseConfiguration { get; set; }

        /// <summary>
        /// Name of the knowledge base.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// ARN of the IAM role with permissions to invoke API operations on the knowledge base.
        /// </summary>
        [Input("roleArn", required: true)]
        public Input<string> RoleArn { get; set; } = null!;

        /// <summary>
        /// Details about the storage configuration of the knowledge base. See `storage_configuration` block for details.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("storageConfiguration")]
        public Input<Inputs.AgentKnowledgeBaseStorageConfigurationArgs>? StorageConfiguration { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("timeouts")]
        public Input<Inputs.AgentKnowledgeBaseTimeoutsArgs>? Timeouts { get; set; }

        public AgentKnowledgeBaseArgs()
        {
        }
        public static new AgentKnowledgeBaseArgs Empty => new AgentKnowledgeBaseArgs();
    }

    public sealed class AgentKnowledgeBaseState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ARN of the knowledge base.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// Time at which the knowledge base was created.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// Description of the knowledge base.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("failureReasons")]
        private InputList<string>? _failureReasons;
        public InputList<string> FailureReasons
        {
            get => _failureReasons ?? (_failureReasons = new InputList<string>());
            set => _failureReasons = value;
        }

        /// <summary>
        /// Details about the embeddings configuration of the knowledge base. See `knowledge_base_configuration` block for details.
        /// </summary>
        [Input("knowledgeBaseConfiguration")]
        public Input<Inputs.AgentKnowledgeBaseKnowledgeBaseConfigurationGetArgs>? KnowledgeBaseConfiguration { get; set; }

        /// <summary>
        /// Name of the knowledge base.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// ARN of the IAM role with permissions to invoke API operations on the knowledge base.
        /// </summary>
        [Input("roleArn")]
        public Input<string>? RoleArn { get; set; }

        /// <summary>
        /// Details about the storage configuration of the knowledge base. See `storage_configuration` block for details.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("storageConfiguration")]
        public Input<Inputs.AgentKnowledgeBaseStorageConfigurationGetArgs>? StorageConfiguration { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Obsolete(@"Please use `tags` instead.")]
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("timeouts")]
        public Input<Inputs.AgentKnowledgeBaseTimeoutsGetArgs>? Timeouts { get; set; }

        /// <summary>
        /// Time at which the knowledge base was last updated.
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        public AgentKnowledgeBaseState()
        {
        }
        public static new AgentKnowledgeBaseState Empty => new AgentKnowledgeBaseState();
    }
}
