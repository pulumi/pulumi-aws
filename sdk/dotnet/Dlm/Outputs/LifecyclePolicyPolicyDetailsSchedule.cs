// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Dlm.Outputs
{

    [OutputType]
    public sealed class LifecyclePolicyPolicyDetailsSchedule
    {
        /// <summary>
        /// Whether to copy all user-defined tags from the source snapshot to the cross-region snapshot copy.
        /// </summary>
        public readonly bool? CopyTags;
        /// <summary>
        /// See the `create_rule` block. Max of 1 per schedule.
        /// </summary>
        public readonly Outputs.LifecyclePolicyPolicyDetailsScheduleCreateRule CreateRule;
        /// <summary>
        /// See the `cross_region_copy_rule` block. Max of 3 per schedule.
        /// </summary>
        public readonly ImmutableArray<Outputs.LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRule> CrossRegionCopyRules;
        /// <summary>
        /// A name for the schedule.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The retention rule that indicates how long snapshot copies are to be retained in the destination Region. See the `retain_rule` block. Max of 1 per schedule.
        /// </summary>
        public readonly Outputs.LifecyclePolicyPolicyDetailsScheduleRetainRule RetainRule;
        /// <summary>
        /// A map of tag keys and their values. DLM lifecycle policies will already tag the snapshot with the tags on the volume. This configuration adds extra tags on top of these.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? TagsToAdd;

        [OutputConstructor]
        private LifecyclePolicyPolicyDetailsSchedule(
            bool? copyTags,

            Outputs.LifecyclePolicyPolicyDetailsScheduleCreateRule createRule,

            ImmutableArray<Outputs.LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRule> crossRegionCopyRules,

            string name,

            Outputs.LifecyclePolicyPolicyDetailsScheduleRetainRule retainRule,

            ImmutableDictionary<string, string>? tagsToAdd)
        {
            CopyTags = copyTags;
            CreateRule = createRule;
            CrossRegionCopyRules = crossRegionCopyRules;
            Name = name;
            RetainRule = retainRule;
            TagsToAdd = tagsToAdd;
        }
    }
}
