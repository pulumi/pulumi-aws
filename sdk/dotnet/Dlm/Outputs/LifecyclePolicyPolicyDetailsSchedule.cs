// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Dlm.Outputs
{

    [OutputType]
    public sealed class LifecyclePolicyPolicyDetailsSchedule
    {
        /// <summary>
        /// Copy all user-defined tags on a source volume to snapshots of the volume created by this policy.
        /// </summary>
        public readonly bool? CopyTags;
        /// <summary>
        /// See the `create_rule` block. Max of 1 per schedule.
        /// </summary>
        public readonly Outputs.LifecyclePolicyPolicyDetailsScheduleCreateRule CreateRule;
        /// <summary>
        /// See the `cross_region_copy_rule` block. Max of 3 per schedule.
        /// </summary>
        public readonly ImmutableArray<Outputs.LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRule> CrossRegionCopyRules;
        /// <summary>
        /// See the `deprecate_rule` block. Max of 1 per schedule.
        /// </summary>
        public readonly Outputs.LifecyclePolicyPolicyDetailsScheduleDeprecateRule? DeprecateRule;
        /// <summary>
        /// See the `fast_restore_rule` block. Max of 1 per schedule.
        /// </summary>
        public readonly Outputs.LifecyclePolicyPolicyDetailsScheduleFastRestoreRule? FastRestoreRule;
        /// <summary>
        /// A descriptive name for the action.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Specifies the retention rule for cross-Region snapshot copies. See the `retain_rule` block. Max of 1 per action.
        /// </summary>
        public readonly Outputs.LifecyclePolicyPolicyDetailsScheduleRetainRule RetainRule;
        /// <summary>
        /// See the `share_rule` block. Max of 1 per schedule.
        /// </summary>
        public readonly Outputs.LifecyclePolicyPolicyDetailsScheduleShareRule? ShareRule;
        /// <summary>
        /// A map of tag keys and their values. DLM lifecycle policies will already tag the snapshot with the tags on the volume. This configuration adds extra tags on top of these.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? TagsToAdd;
        /// <summary>
        /// A map of tag keys and variable values, where the values are determined when the policy is executed. Only `$(instance-id)` or `$(timestamp)` are valid values. Can only be used when `resource_types` is `INSTANCE`.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? VariableTags;

        [OutputConstructor]
        private LifecyclePolicyPolicyDetailsSchedule(
            bool? copyTags,

            Outputs.LifecyclePolicyPolicyDetailsScheduleCreateRule createRule,

            ImmutableArray<Outputs.LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRule> crossRegionCopyRules,

            Outputs.LifecyclePolicyPolicyDetailsScheduleDeprecateRule? deprecateRule,

            Outputs.LifecyclePolicyPolicyDetailsScheduleFastRestoreRule? fastRestoreRule,

            string name,

            Outputs.LifecyclePolicyPolicyDetailsScheduleRetainRule retainRule,

            Outputs.LifecyclePolicyPolicyDetailsScheduleShareRule? shareRule,

            ImmutableDictionary<string, string>? tagsToAdd,

            ImmutableDictionary<string, string>? variableTags)
        {
            CopyTags = copyTags;
            CreateRule = createRule;
            CrossRegionCopyRules = crossRegionCopyRules;
            DeprecateRule = deprecateRule;
            FastRestoreRule = fastRestoreRule;
            Name = name;
            RetainRule = retainRule;
            ShareRule = shareRule;
            TagsToAdd = tagsToAdd;
            VariableTags = variableTags;
        }
    }
}
