// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Dlm
{
    /// <summary>
    /// Provides a [Data Lifecycle Manager (DLM) lifecycle policy](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshot-lifecycle.html) for managing snapshots.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var dlmLifecycleRole = new Aws.Iam.Role("dlmLifecycleRole", new Aws.Iam.RoleArgs
    ///         {
    ///             AssumeRolePolicy = @"{
    ///   ""Version"": ""2012-10-17"",
    ///   ""Statement"": [
    ///     {
    ///       ""Action"": ""sts:AssumeRole"",
    ///       ""Principal"": {
    ///         ""Service"": ""dlm.amazonaws.com""
    ///       },
    ///       ""Effect"": ""Allow"",
    ///       ""Sid"": """"
    ///     }
    ///   ]
    /// }
    /// ",
    ///         });
    ///         var dlmLifecycle = new Aws.Iam.RolePolicy("dlmLifecycle", new Aws.Iam.RolePolicyArgs
    ///         {
    ///             Role = dlmLifecycleRole.Id,
    ///             Policy = @"{
    ///    ""Version"": ""2012-10-17"",
    ///    ""Statement"": [
    ///       {
    ///          ""Effect"": ""Allow"",
    ///          ""Action"": [
    ///             ""ec2:CreateSnapshot"",
    ///             ""ec2:DeleteSnapshot"",
    ///             ""ec2:DescribeVolumes"",
    ///             ""ec2:DescribeSnapshots""
    ///          ],
    ///          ""Resource"": ""*""
    ///       },
    ///       {
    ///          ""Effect"": ""Allow"",
    ///          ""Action"": [
    ///             ""ec2:CreateTags""
    ///          ],
    ///          ""Resource"": ""arn:aws:ec2:*::snapshot/*""
    ///       }
    ///    ]
    /// }
    /// ",
    ///         });
    ///         var example = new Aws.Dlm.LifecyclePolicy("example", new Aws.Dlm.LifecyclePolicyArgs
    ///         {
    ///             Description = "example DLM lifecycle policy",
    ///             ExecutionRoleArn = dlmLifecycleRole.Arn,
    ///             State = "ENABLED",
    ///             PolicyDetails = new Aws.Dlm.Inputs.LifecyclePolicyPolicyDetailsArgs
    ///             {
    ///                 ResourceTypes = 
    ///                 {
    ///                     "VOLUME",
    ///                 },
    ///                 Schedules = 
    ///                 {
    ///                     new Aws.Dlm.Inputs.LifecyclePolicyPolicyDetailsScheduleArgs
    ///                     {
    ///                         Name = "2 weeks of daily snapshots",
    ///                         CreateRule = new Aws.Dlm.Inputs.LifecyclePolicyPolicyDetailsScheduleCreateRuleArgs
    ///                         {
    ///                             Interval = 24,
    ///                             IntervalUnit = "HOURS",
    ///                             Times = 
    ///                             {
    ///                                 "23:45",
    ///                             },
    ///                         },
    ///                         RetainRule = new Aws.Dlm.Inputs.LifecyclePolicyPolicyDetailsScheduleRetainRuleArgs
    ///                         {
    ///                             Count = 14,
    ///                         },
    ///                         TagsToAdd = 
    ///                         {
    ///                             { "SnapshotCreator", "DLM" },
    ///                         },
    ///                         CopyTags = false,
    ///                     },
    ///                 },
    ///                 TargetTags = 
    ///                 {
    ///                     { "Snapshot", "true" },
    ///                 },
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// DLM lifecyle policies can be imported by their policy ID
    /// 
    /// ```sh
    ///  $ pulumi import aws:dlm/lifecyclePolicy:LifecyclePolicy example policy-abcdef12345678901
    /// ```
    /// </summary>
    public partial class LifecyclePolicy : Pulumi.CustomResource
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the DLM Lifecycle Policy.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// A description for the DLM lifecycle policy.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// The ARN of an IAM role that is able to be assumed by the DLM service.
        /// </summary>
        [Output("executionRoleArn")]
        public Output<string> ExecutionRoleArn { get; private set; } = null!;

        /// <summary>
        /// See the `policy_details` configuration block. Max of 1.
        /// </summary>
        [Output("policyDetails")]
        public Output<Outputs.LifecyclePolicyPolicyDetails> PolicyDetails { get; private set; } = null!;

        /// <summary>
        /// Whether the lifecycle policy should be enabled or disabled. `ENABLED` or `DISABLED` are valid values. Defaults to `ENABLED`.
        /// </summary>
        [Output("state")]
        public Output<string?> State { get; private set; } = null!;

        /// <summary>
        /// Key-value map of resource tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a LifecyclePolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LifecyclePolicy(string name, LifecyclePolicyArgs args, CustomResourceOptions? options = null)
            : base("aws:dlm/lifecyclePolicy:LifecyclePolicy", name, args ?? new LifecyclePolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LifecyclePolicy(string name, Input<string> id, LifecyclePolicyState? state = null, CustomResourceOptions? options = null)
            : base("aws:dlm/lifecyclePolicy:LifecyclePolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LifecyclePolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LifecyclePolicy Get(string name, Input<string> id, LifecyclePolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new LifecyclePolicy(name, id, state, options);
        }
    }

    public sealed class LifecyclePolicyArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// A description for the DLM lifecycle policy.
        /// </summary>
        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        /// <summary>
        /// The ARN of an IAM role that is able to be assumed by the DLM service.
        /// </summary>
        [Input("executionRoleArn", required: true)]
        public Input<string> ExecutionRoleArn { get; set; } = null!;

        /// <summary>
        /// See the `policy_details` configuration block. Max of 1.
        /// </summary>
        [Input("policyDetails", required: true)]
        public Input<Inputs.LifecyclePolicyPolicyDetailsArgs> PolicyDetails { get; set; } = null!;

        /// <summary>
        /// Whether the lifecycle policy should be enabled or disabled. `ENABLED` or `DISABLED` are valid values. Defaults to `ENABLED`.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value map of resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public LifecyclePolicyArgs()
        {
        }
    }

    public sealed class LifecyclePolicyState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the DLM Lifecycle Policy.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// A description for the DLM lifecycle policy.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The ARN of an IAM role that is able to be assumed by the DLM service.
        /// </summary>
        [Input("executionRoleArn")]
        public Input<string>? ExecutionRoleArn { get; set; }

        /// <summary>
        /// See the `policy_details` configuration block. Max of 1.
        /// </summary>
        [Input("policyDetails")]
        public Input<Inputs.LifecyclePolicyPolicyDetailsGetArgs>? PolicyDetails { get; set; }

        /// <summary>
        /// Whether the lifecycle policy should be enabled or disabled. `ENABLED` or `DISABLED` are valid values. Defaults to `ENABLED`.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value map of resource tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public LifecyclePolicyState()
        {
        }
    }
}
