// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Msk.Outputs
{

    [OutputType]
    public sealed class ReplicatorReplicationInfoList
    {
        /// <summary>
        /// Confguration relating to consumer group replication.
        /// </summary>
        public readonly ImmutableArray<Outputs.ReplicatorReplicationInfoListConsumerGroupReplication> ConsumerGroupReplications;
        public readonly string? SourceKafkaClusterAlias;
        /// <summary>
        /// The ARN of the source Kafka cluster.
        /// </summary>
        public readonly string SourceKafkaClusterArn;
        /// <summary>
        /// The type of compression to use writing records to target Kafka cluster.
        /// </summary>
        public readonly string TargetCompressionType;
        public readonly string? TargetKafkaClusterAlias;
        /// <summary>
        /// The ARN of the target Kafka cluster.
        /// </summary>
        public readonly string TargetKafkaClusterArn;
        /// <summary>
        /// Configuration relating to topic replication.
        /// </summary>
        public readonly ImmutableArray<Outputs.ReplicatorReplicationInfoListTopicReplication> TopicReplications;

        [OutputConstructor]
        private ReplicatorReplicationInfoList(
            ImmutableArray<Outputs.ReplicatorReplicationInfoListConsumerGroupReplication> consumerGroupReplications,

            string? sourceKafkaClusterAlias,

            string sourceKafkaClusterArn,

            string targetCompressionType,

            string? targetKafkaClusterAlias,

            string targetKafkaClusterArn,

            ImmutableArray<Outputs.ReplicatorReplicationInfoListTopicReplication> topicReplications)
        {
            ConsumerGroupReplications = consumerGroupReplications;
            SourceKafkaClusterAlias = sourceKafkaClusterAlias;
            SourceKafkaClusterArn = sourceKafkaClusterArn;
            TargetCompressionType = targetCompressionType;
            TargetKafkaClusterAlias = targetKafkaClusterAlias;
            TargetKafkaClusterArn = targetKafkaClusterArn;
            TopicReplications = topicReplications;
        }
    }
}
