// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Msk
{
    public static class GetKafkaVersion
    {
        /// <summary>
        /// Get information on a Amazon MSK Kafka Version
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var preferred = Aws.Msk.GetKafkaVersion.Invoke(new()
        ///     {
        ///         PreferredVersions = new[]
        ///         {
        ///             "2.4.1.1",
        ///             "2.4.1",
        ///             "2.2.1",
        ///         },
        ///     });
        /// 
        ///     var example = Aws.Msk.GetKafkaVersion.Invoke(new()
        ///     {
        ///         Version = "2.8.0",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetKafkaVersionResult> InvokeAsync(GetKafkaVersionArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetKafkaVersionResult>("aws:msk/getKafkaVersion:getKafkaVersion", args ?? new GetKafkaVersionArgs(), options.WithDefaults());

        /// <summary>
        /// Get information on a Amazon MSK Kafka Version
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var preferred = Aws.Msk.GetKafkaVersion.Invoke(new()
        ///     {
        ///         PreferredVersions = new[]
        ///         {
        ///             "2.4.1.1",
        ///             "2.4.1",
        ///             "2.2.1",
        ///         },
        ///     });
        /// 
        ///     var example = Aws.Msk.GetKafkaVersion.Invoke(new()
        ///     {
        ///         Version = "2.8.0",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetKafkaVersionResult> Invoke(GetKafkaVersionInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetKafkaVersionResult>("aws:msk/getKafkaVersion:getKafkaVersion", args ?? new GetKafkaVersionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetKafkaVersionArgs : global::Pulumi.InvokeArgs
    {
        [Input("preferredVersions")]
        private List<string>? _preferredVersions;

        /// <summary>
        /// Ordered list of preferred Kafka versions. The first match in this list will be returned. Either `preferred_versions` or `version` must be set.
        /// </summary>
        public List<string> PreferredVersions
        {
            get => _preferredVersions ?? (_preferredVersions = new List<string>());
            set => _preferredVersions = value;
        }

        /// <summary>
        /// Version of MSK Kafka. For example 2.4.1.1 or "2.2.1" etc. Either `preferred_versions` or `version` must be set.
        /// </summary>
        [Input("version")]
        public string? Version { get; set; }

        public GetKafkaVersionArgs()
        {
        }
        public static new GetKafkaVersionArgs Empty => new GetKafkaVersionArgs();
    }

    public sealed class GetKafkaVersionInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("preferredVersions")]
        private InputList<string>? _preferredVersions;

        /// <summary>
        /// Ordered list of preferred Kafka versions. The first match in this list will be returned. Either `preferred_versions` or `version` must be set.
        /// </summary>
        public InputList<string> PreferredVersions
        {
            get => _preferredVersions ?? (_preferredVersions = new InputList<string>());
            set => _preferredVersions = value;
        }

        /// <summary>
        /// Version of MSK Kafka. For example 2.4.1.1 or "2.2.1" etc. Either `preferred_versions` or `version` must be set.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public GetKafkaVersionInvokeArgs()
        {
        }
        public static new GetKafkaVersionInvokeArgs Empty => new GetKafkaVersionInvokeArgs();
    }


    [OutputType]
    public sealed class GetKafkaVersionResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> PreferredVersions;
        /// <summary>
        /// Status of the MSK Kafka version eg. `ACTIVE` or `DEPRECATED`.
        /// </summary>
        public readonly string Status;
        public readonly string Version;

        [OutputConstructor]
        private GetKafkaVersionResult(
            string id,

            ImmutableArray<string> preferredVersions,

            string status,

            string version)
        {
            Id = id;
            PreferredVersions = preferredVersions;
            Status = status;
            Version = version;
        }
    }
}
