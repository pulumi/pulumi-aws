// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Msk
{
    /// <summary>
    /// Resource for managing an AWS Managed Streaming for Kafka Cluster Policy.
    /// 
    /// ## Example Usage
    /// 
    /// ### Basic Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using System.Text.Json;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var current = Aws.GetCallerIdentity.Invoke();
    /// 
    ///     var currentGetPartition = Aws.GetPartition.Invoke();
    /// 
    ///     var example = new Aws.Msk.ClusterPolicy("example", new()
    ///     {
    ///         ClusterArn = exampleAwsMskCluster.Arn,
    ///         Policy = JsonSerializer.Serialize(new Dictionary&lt;string, object?&gt;
    ///         {
    ///             ["version"] = "2012-10-17",
    ///             ["statement"] = new[]
    ///             {
    ///                 new Dictionary&lt;string, object?&gt;
    ///                 {
    ///                     ["sid"] = "ExampleMskClusterPolicy",
    ///                     ["effect"] = "Allow",
    ///                     ["principal"] = new Dictionary&lt;string, object?&gt;
    ///                     {
    ///                         ["AWS"] = Output.Tuple(currentGetPartition, current).Apply(values =&gt;
    ///                         {
    ///                             var currentGetPartition = values.Item1;
    ///                             var current = values.Item2;
    ///                             return $"arn:{currentGetPartition.Apply(getPartitionResult =&gt; getPartitionResult.Partition)}:iam::{current.Apply(getCallerIdentityResult =&gt; getCallerIdentityResult.AccountId)}:root";
    ///                         }),
    ///                     },
    ///                     ["action"] = new[]
    ///                     {
    ///                         "kafka:Describe*",
    ///                         "kafka:Get*",
    ///                         "kafka:CreateVpcConnection",
    ///                         "kafka:GetBootstrapBrokers",
    ///                     },
    ///                     ["resource"] = exampleAwsMskCluster.Arn,
    ///                 },
    ///             },
    ///         }),
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import Managed Streaming for Kafka Cluster Policy using the `cluster_arn`. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:msk/clusterPolicy:ClusterPolicy example arn:aws:kafka:us-west-2:123456789012:cluster/example/279c0212-d057-4dba-9aa9-1c4e5a25bfc7-3
    /// ```
    /// </summary>
    [AwsResourceType("aws:msk/clusterPolicy:ClusterPolicy")]
    public partial class ClusterPolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) that uniquely identifies the cluster.
        /// </summary>
        [Output("clusterArn")]
        public Output<string> ClusterArn { get; private set; } = null!;

        [Output("currentVersion")]
        public Output<string> CurrentVersion { get; private set; } = null!;

        /// <summary>
        /// Resource policy for cluster.
        /// </summary>
        [Output("policy")]
        public Output<string> Policy { get; private set; } = null!;


        /// <summary>
        /// Create a ClusterPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ClusterPolicy(string name, ClusterPolicyArgs args, CustomResourceOptions? options = null)
            : base("aws:msk/clusterPolicy:ClusterPolicy", name, args ?? new ClusterPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ClusterPolicy(string name, Input<string> id, ClusterPolicyState? state = null, CustomResourceOptions? options = null)
            : base("aws:msk/clusterPolicy:ClusterPolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ClusterPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ClusterPolicy Get(string name, Input<string> id, ClusterPolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new ClusterPolicy(name, id, state, options);
        }
    }

    public sealed class ClusterPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) that uniquely identifies the cluster.
        /// </summary>
        [Input("clusterArn", required: true)]
        public Input<string> ClusterArn { get; set; } = null!;

        /// <summary>
        /// Resource policy for cluster.
        /// </summary>
        [Input("policy", required: true)]
        public Input<string> Policy { get; set; } = null!;

        public ClusterPolicyArgs()
        {
        }
        public static new ClusterPolicyArgs Empty => new ClusterPolicyArgs();
    }

    public sealed class ClusterPolicyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) that uniquely identifies the cluster.
        /// </summary>
        [Input("clusterArn")]
        public Input<string>? ClusterArn { get; set; }

        [Input("currentVersion")]
        public Input<string>? CurrentVersion { get; set; }

        /// <summary>
        /// Resource policy for cluster.
        /// </summary>
        [Input("policy")]
        public Input<string>? Policy { get; set; }

        public ClusterPolicyState()
        {
        }
        public static new ClusterPolicyState Empty => new ClusterPolicyState();
    }
}
