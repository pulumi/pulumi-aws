// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.OpsWorks
{
    [AwsResourceType("aws:opsworks/stack:Stack")]
    public partial class Stack : global::Pulumi.CustomResource
    {
        [Output("agentVersion")]
        public Output<string> AgentVersion { get; private set; } = null!;

        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("berkshelfVersion")]
        public Output<string?> BerkshelfVersion { get; private set; } = null!;

        [Output("color")]
        public Output<string?> Color { get; private set; } = null!;

        [Output("configurationManagerName")]
        public Output<string?> ConfigurationManagerName { get; private set; } = null!;

        [Output("configurationManagerVersion")]
        public Output<string?> ConfigurationManagerVersion { get; private set; } = null!;

        [Output("customCookbooksSources")]
        public Output<ImmutableArray<Outputs.StackCustomCookbooksSource>> CustomCookbooksSources { get; private set; } = null!;

        [Output("customJson")]
        public Output<string?> CustomJson { get; private set; } = null!;

        [Output("defaultAvailabilityZone")]
        public Output<string> DefaultAvailabilityZone { get; private set; } = null!;

        [Output("defaultInstanceProfileArn")]
        public Output<string> DefaultInstanceProfileArn { get; private set; } = null!;

        [Output("defaultOs")]
        public Output<string?> DefaultOs { get; private set; } = null!;

        [Output("defaultRootDeviceType")]
        public Output<string?> DefaultRootDeviceType { get; private set; } = null!;

        [Output("defaultSshKeyName")]
        public Output<string?> DefaultSshKeyName { get; private set; } = null!;

        [Output("defaultSubnetId")]
        public Output<string> DefaultSubnetId { get; private set; } = null!;

        [Output("hostnameTheme")]
        public Output<string?> HostnameTheme { get; private set; } = null!;

        [Output("manageBerkshelf")]
        public Output<bool?> ManageBerkshelf { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        [Output("serviceRoleArn")]
        public Output<string> ServiceRoleArn { get; private set; } = null!;

        [Output("stackEndpoint")]
        public Output<string> StackEndpoint { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("useCustomCookbooks")]
        public Output<bool?> UseCustomCookbooks { get; private set; } = null!;

        [Output("useOpsworksSecurityGroups")]
        public Output<bool?> UseOpsworksSecurityGroups { get; private set; } = null!;

        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;


        /// <summary>
        /// Create a Stack resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Stack(string name, StackArgs args, CustomResourceOptions? options = null)
            : base("aws:opsworks/stack:Stack", name, args ?? new StackArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Stack(string name, Input<string> id, StackState? state = null, CustomResourceOptions? options = null)
            : base("aws:opsworks/stack:Stack", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Stack resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Stack Get(string name, Input<string> id, StackState? state = null, CustomResourceOptions? options = null)
        {
            return new Stack(name, id, state, options);
        }
    }

    public sealed class StackArgs : global::Pulumi.ResourceArgs
    {
        [Input("agentVersion")]
        public Input<string>? AgentVersion { get; set; }

        [Input("berkshelfVersion")]
        public Input<string>? BerkshelfVersion { get; set; }

        [Input("color")]
        public Input<string>? Color { get; set; }

        [Input("configurationManagerName")]
        public Input<string>? ConfigurationManagerName { get; set; }

        [Input("configurationManagerVersion")]
        public Input<string>? ConfigurationManagerVersion { get; set; }

        [Input("customCookbooksSources")]
        private InputList<Inputs.StackCustomCookbooksSourceArgs>? _customCookbooksSources;
        public InputList<Inputs.StackCustomCookbooksSourceArgs> CustomCookbooksSources
        {
            get => _customCookbooksSources ?? (_customCookbooksSources = new InputList<Inputs.StackCustomCookbooksSourceArgs>());
            set => _customCookbooksSources = value;
        }

        [Input("customJson")]
        public Input<string>? CustomJson { get; set; }

        [Input("defaultAvailabilityZone")]
        public Input<string>? DefaultAvailabilityZone { get; set; }

        [Input("defaultInstanceProfileArn", required: true)]
        public Input<string> DefaultInstanceProfileArn { get; set; } = null!;

        [Input("defaultOs")]
        public Input<string>? DefaultOs { get; set; }

        [Input("defaultRootDeviceType")]
        public Input<string>? DefaultRootDeviceType { get; set; }

        [Input("defaultSshKeyName")]
        public Input<string>? DefaultSshKeyName { get; set; }

        [Input("defaultSubnetId")]
        public Input<string>? DefaultSubnetId { get; set; }

        [Input("hostnameTheme")]
        public Input<string>? HostnameTheme { get; set; }

        [Input("manageBerkshelf")]
        public Input<bool>? ManageBerkshelf { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("region", required: true)]
        public Input<string> Region { get; set; } = null!;

        [Input("serviceRoleArn", required: true)]
        public Input<string> ServiceRoleArn { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("useCustomCookbooks")]
        public Input<bool>? UseCustomCookbooks { get; set; }

        [Input("useOpsworksSecurityGroups")]
        public Input<bool>? UseOpsworksSecurityGroups { get; set; }

        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public StackArgs()
        {
        }
        public static new StackArgs Empty => new StackArgs();
    }

    public sealed class StackState : global::Pulumi.ResourceArgs
    {
        [Input("agentVersion")]
        public Input<string>? AgentVersion { get; set; }

        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("berkshelfVersion")]
        public Input<string>? BerkshelfVersion { get; set; }

        [Input("color")]
        public Input<string>? Color { get; set; }

        [Input("configurationManagerName")]
        public Input<string>? ConfigurationManagerName { get; set; }

        [Input("configurationManagerVersion")]
        public Input<string>? ConfigurationManagerVersion { get; set; }

        [Input("customCookbooksSources")]
        private InputList<Inputs.StackCustomCookbooksSourceGetArgs>? _customCookbooksSources;
        public InputList<Inputs.StackCustomCookbooksSourceGetArgs> CustomCookbooksSources
        {
            get => _customCookbooksSources ?? (_customCookbooksSources = new InputList<Inputs.StackCustomCookbooksSourceGetArgs>());
            set => _customCookbooksSources = value;
        }

        [Input("customJson")]
        public Input<string>? CustomJson { get; set; }

        [Input("defaultAvailabilityZone")]
        public Input<string>? DefaultAvailabilityZone { get; set; }

        [Input("defaultInstanceProfileArn")]
        public Input<string>? DefaultInstanceProfileArn { get; set; }

        [Input("defaultOs")]
        public Input<string>? DefaultOs { get; set; }

        [Input("defaultRootDeviceType")]
        public Input<string>? DefaultRootDeviceType { get; set; }

        [Input("defaultSshKeyName")]
        public Input<string>? DefaultSshKeyName { get; set; }

        [Input("defaultSubnetId")]
        public Input<string>? DefaultSubnetId { get; set; }

        [Input("hostnameTheme")]
        public Input<string>? HostnameTheme { get; set; }

        [Input("manageBerkshelf")]
        public Input<bool>? ManageBerkshelf { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("serviceRoleArn")]
        public Input<string>? ServiceRoleArn { get; set; }

        [Input("stackEndpoint")]
        public Input<string>? StackEndpoint { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("useCustomCookbooks")]
        public Input<bool>? UseCustomCookbooks { get; set; }

        [Input("useOpsworksSecurityGroups")]
        public Input<bool>? UseOpsworksSecurityGroups { get; set; }

        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public StackState()
        {
        }
        public static new StackState Empty => new StackState();
    }
}
