// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.OpsWorks
{
    /// <summary>
    /// Provides an OpsWorks User Profile resource.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var myProfile = new Aws.OpsWorks.UserProfile("myProfile", new Aws.OpsWorks.UserProfileArgs
    ///         {
    ///             SshUsername = "my_user",
    ///             UserArn = aws_iam_user.User.Arn,
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// </summary>
    public partial class UserProfile : Pulumi.CustomResource
    {
        /// <summary>
        /// Whether users can specify their own SSH public key through the My Settings page
        /// </summary>
        [Output("allowSelfManagement")]
        public Output<bool?> AllowSelfManagement { get; private set; } = null!;

        /// <summary>
        /// The users public key
        /// </summary>
        [Output("sshPublicKey")]
        public Output<string?> SshPublicKey { get; private set; } = null!;

        /// <summary>
        /// The ssh username, with witch this user wants to log in
        /// </summary>
        [Output("sshUsername")]
        public Output<string> SshUsername { get; private set; } = null!;

        /// <summary>
        /// The user's IAM ARN
        /// </summary>
        [Output("userArn")]
        public Output<string> UserArn { get; private set; } = null!;


        /// <summary>
        /// Create a UserProfile resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public UserProfile(string name, UserProfileArgs args, CustomResourceOptions? options = null)
            : base("aws:opsworks/userProfile:UserProfile", name, args ?? new UserProfileArgs(), MakeResourceOptions(options, ""))
        {
        }

        private UserProfile(string name, Input<string> id, UserProfileState? state = null, CustomResourceOptions? options = null)
            : base("aws:opsworks/userProfile:UserProfile", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing UserProfile resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static UserProfile Get(string name, Input<string> id, UserProfileState? state = null, CustomResourceOptions? options = null)
        {
            return new UserProfile(name, id, state, options);
        }
    }

    public sealed class UserProfileArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether users can specify their own SSH public key through the My Settings page
        /// </summary>
        [Input("allowSelfManagement")]
        public Input<bool>? AllowSelfManagement { get; set; }

        /// <summary>
        /// The users public key
        /// </summary>
        [Input("sshPublicKey")]
        public Input<string>? SshPublicKey { get; set; }

        /// <summary>
        /// The ssh username, with witch this user wants to log in
        /// </summary>
        [Input("sshUsername", required: true)]
        public Input<string> SshUsername { get; set; } = null!;

        /// <summary>
        /// The user's IAM ARN
        /// </summary>
        [Input("userArn", required: true)]
        public Input<string> UserArn { get; set; } = null!;

        public UserProfileArgs()
        {
        }
    }

    public sealed class UserProfileState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether users can specify their own SSH public key through the My Settings page
        /// </summary>
        [Input("allowSelfManagement")]
        public Input<bool>? AllowSelfManagement { get; set; }

        /// <summary>
        /// The users public key
        /// </summary>
        [Input("sshPublicKey")]
        public Input<string>? SshPublicKey { get; set; }

        /// <summary>
        /// The ssh username, with witch this user wants to log in
        /// </summary>
        [Input("sshUsername")]
        public Input<string>? SshUsername { get; set; }

        /// <summary>
        /// The user's IAM ARN
        /// </summary>
        [Input("userArn")]
        public Input<string>? UserArn { get; set; }

        public UserProfileState()
        {
        }
    }
}
