// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.OpsWorks
{
    [AwsResourceType("aws:opsworks/instance:Instance")]
    public partial class Instance : global::Pulumi.CustomResource
    {
        [Output("agentVersion")]
        public Output<string?> AgentVersion { get; private set; } = null!;

        [Output("amiId")]
        public Output<string> AmiId { get; private set; } = null!;

        [Output("architecture")]
        public Output<string?> Architecture { get; private set; } = null!;

        [Output("autoScalingType")]
        public Output<string?> AutoScalingType { get; private set; } = null!;

        [Output("availabilityZone")]
        public Output<string> AvailabilityZone { get; private set; } = null!;

        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        [Output("deleteEbs")]
        public Output<bool?> DeleteEbs { get; private set; } = null!;

        [Output("deleteEip")]
        public Output<bool?> DeleteEip { get; private set; } = null!;

        [Output("ebsBlockDevices")]
        public Output<ImmutableArray<Outputs.InstanceEbsBlockDevice>> EbsBlockDevices { get; private set; } = null!;

        [Output("ebsOptimized")]
        public Output<bool?> EbsOptimized { get; private set; } = null!;

        [Output("ec2InstanceId")]
        public Output<string> Ec2InstanceId { get; private set; } = null!;

        [Output("ecsClusterArn")]
        public Output<string> EcsClusterArn { get; private set; } = null!;

        [Output("elasticIp")]
        public Output<string> ElasticIp { get; private set; } = null!;

        [Output("ephemeralBlockDevices")]
        public Output<ImmutableArray<Outputs.InstanceEphemeralBlockDevice>> EphemeralBlockDevices { get; private set; } = null!;

        [Output("hostname")]
        public Output<string> Hostname { get; private set; } = null!;

        [Output("infrastructureClass")]
        public Output<string> InfrastructureClass { get; private set; } = null!;

        [Output("installUpdatesOnBoot")]
        public Output<bool?> InstallUpdatesOnBoot { get; private set; } = null!;

        [Output("instanceProfileArn")]
        public Output<string> InstanceProfileArn { get; private set; } = null!;

        [Output("instanceType")]
        public Output<string?> InstanceType { get; private set; } = null!;

        [Output("lastServiceErrorId")]
        public Output<string> LastServiceErrorId { get; private set; } = null!;

        [Output("layerIds")]
        public Output<ImmutableArray<string>> LayerIds { get; private set; } = null!;

        [Output("os")]
        public Output<string> Os { get; private set; } = null!;

        [Output("platform")]
        public Output<string> Platform { get; private set; } = null!;

        [Output("privateDns")]
        public Output<string> PrivateDns { get; private set; } = null!;

        [Output("privateIp")]
        public Output<string> PrivateIp { get; private set; } = null!;

        [Output("publicDns")]
        public Output<string> PublicDns { get; private set; } = null!;

        [Output("publicIp")]
        public Output<string> PublicIp { get; private set; } = null!;

        [Output("registeredBy")]
        public Output<string> RegisteredBy { get; private set; } = null!;

        [Output("reportedAgentVersion")]
        public Output<string> ReportedAgentVersion { get; private set; } = null!;

        [Output("reportedOsFamily")]
        public Output<string> ReportedOsFamily { get; private set; } = null!;

        [Output("reportedOsName")]
        public Output<string> ReportedOsName { get; private set; } = null!;

        [Output("reportedOsVersion")]
        public Output<string> ReportedOsVersion { get; private set; } = null!;

        [Output("rootBlockDevices")]
        public Output<ImmutableArray<Outputs.InstanceRootBlockDevice>> RootBlockDevices { get; private set; } = null!;

        [Output("rootDeviceType")]
        public Output<string> RootDeviceType { get; private set; } = null!;

        [Output("rootDeviceVolumeId")]
        public Output<string> RootDeviceVolumeId { get; private set; } = null!;

        [Output("securityGroupIds")]
        public Output<ImmutableArray<string>> SecurityGroupIds { get; private set; } = null!;

        [Output("sshHostDsaKeyFingerprint")]
        public Output<string> SshHostDsaKeyFingerprint { get; private set; } = null!;

        [Output("sshHostRsaKeyFingerprint")]
        public Output<string> SshHostRsaKeyFingerprint { get; private set; } = null!;

        [Output("sshKeyName")]
        public Output<string> SshKeyName { get; private set; } = null!;

        [Output("stackId")]
        public Output<string> StackId { get; private set; } = null!;

        [Output("state")]
        public Output<string?> State { get; private set; } = null!;

        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        [Output("subnetId")]
        public Output<string> SubnetId { get; private set; } = null!;

        [Output("tenancy")]
        public Output<string> Tenancy { get; private set; } = null!;

        [Output("virtualizationType")]
        public Output<string> VirtualizationType { get; private set; } = null!;


        /// <summary>
        /// Create a Instance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Instance(string name, InstanceArgs args, CustomResourceOptions? options = null)
            : base("aws:opsworks/instance:Instance", name, args ?? new InstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Instance(string name, Input<string> id, InstanceState? state = null, CustomResourceOptions? options = null)
            : base("aws:opsworks/instance:Instance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Instance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Instance Get(string name, Input<string> id, InstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new Instance(name, id, state, options);
        }
    }

    public sealed class InstanceArgs : global::Pulumi.ResourceArgs
    {
        [Input("agentVersion")]
        public Input<string>? AgentVersion { get; set; }

        [Input("amiId")]
        public Input<string>? AmiId { get; set; }

        [Input("architecture")]
        public Input<string>? Architecture { get; set; }

        [Input("autoScalingType")]
        public Input<string>? AutoScalingType { get; set; }

        [Input("availabilityZone")]
        public Input<string>? AvailabilityZone { get; set; }

        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        [Input("deleteEbs")]
        public Input<bool>? DeleteEbs { get; set; }

        [Input("deleteEip")]
        public Input<bool>? DeleteEip { get; set; }

        [Input("ebsBlockDevices")]
        private InputList<Inputs.InstanceEbsBlockDeviceArgs>? _ebsBlockDevices;
        public InputList<Inputs.InstanceEbsBlockDeviceArgs> EbsBlockDevices
        {
            get => _ebsBlockDevices ?? (_ebsBlockDevices = new InputList<Inputs.InstanceEbsBlockDeviceArgs>());
            set => _ebsBlockDevices = value;
        }

        [Input("ebsOptimized")]
        public Input<bool>? EbsOptimized { get; set; }

        [Input("ecsClusterArn")]
        public Input<string>? EcsClusterArn { get; set; }

        [Input("elasticIp")]
        public Input<string>? ElasticIp { get; set; }

        [Input("ephemeralBlockDevices")]
        private InputList<Inputs.InstanceEphemeralBlockDeviceArgs>? _ephemeralBlockDevices;
        public InputList<Inputs.InstanceEphemeralBlockDeviceArgs> EphemeralBlockDevices
        {
            get => _ephemeralBlockDevices ?? (_ephemeralBlockDevices = new InputList<Inputs.InstanceEphemeralBlockDeviceArgs>());
            set => _ephemeralBlockDevices = value;
        }

        [Input("hostname")]
        public Input<string>? Hostname { get; set; }

        [Input("infrastructureClass")]
        public Input<string>? InfrastructureClass { get; set; }

        [Input("installUpdatesOnBoot")]
        public Input<bool>? InstallUpdatesOnBoot { get; set; }

        [Input("instanceProfileArn")]
        public Input<string>? InstanceProfileArn { get; set; }

        [Input("instanceType")]
        public Input<string>? InstanceType { get; set; }

        [Input("layerIds", required: true)]
        private InputList<string>? _layerIds;
        public InputList<string> LayerIds
        {
            get => _layerIds ?? (_layerIds = new InputList<string>());
            set => _layerIds = value;
        }

        [Input("os")]
        public Input<string>? Os { get; set; }

        [Input("rootBlockDevices")]
        private InputList<Inputs.InstanceRootBlockDeviceArgs>? _rootBlockDevices;
        public InputList<Inputs.InstanceRootBlockDeviceArgs> RootBlockDevices
        {
            get => _rootBlockDevices ?? (_rootBlockDevices = new InputList<Inputs.InstanceRootBlockDeviceArgs>());
            set => _rootBlockDevices = value;
        }

        [Input("rootDeviceType")]
        public Input<string>? RootDeviceType { get; set; }

        [Input("securityGroupIds")]
        private InputList<string>? _securityGroupIds;
        public InputList<string> SecurityGroupIds
        {
            get => _securityGroupIds ?? (_securityGroupIds = new InputList<string>());
            set => _securityGroupIds = value;
        }

        [Input("sshKeyName")]
        public Input<string>? SshKeyName { get; set; }

        [Input("stackId", required: true)]
        public Input<string> StackId { get; set; } = null!;

        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        [Input("tenancy")]
        public Input<string>? Tenancy { get; set; }

        [Input("virtualizationType")]
        public Input<string>? VirtualizationType { get; set; }

        public InstanceArgs()
        {
        }
        public static new InstanceArgs Empty => new InstanceArgs();
    }

    public sealed class InstanceState : global::Pulumi.ResourceArgs
    {
        [Input("agentVersion")]
        public Input<string>? AgentVersion { get; set; }

        [Input("amiId")]
        public Input<string>? AmiId { get; set; }

        [Input("architecture")]
        public Input<string>? Architecture { get; set; }

        [Input("autoScalingType")]
        public Input<string>? AutoScalingType { get; set; }

        [Input("availabilityZone")]
        public Input<string>? AvailabilityZone { get; set; }

        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        [Input("deleteEbs")]
        public Input<bool>? DeleteEbs { get; set; }

        [Input("deleteEip")]
        public Input<bool>? DeleteEip { get; set; }

        [Input("ebsBlockDevices")]
        private InputList<Inputs.InstanceEbsBlockDeviceGetArgs>? _ebsBlockDevices;
        public InputList<Inputs.InstanceEbsBlockDeviceGetArgs> EbsBlockDevices
        {
            get => _ebsBlockDevices ?? (_ebsBlockDevices = new InputList<Inputs.InstanceEbsBlockDeviceGetArgs>());
            set => _ebsBlockDevices = value;
        }

        [Input("ebsOptimized")]
        public Input<bool>? EbsOptimized { get; set; }

        [Input("ec2InstanceId")]
        public Input<string>? Ec2InstanceId { get; set; }

        [Input("ecsClusterArn")]
        public Input<string>? EcsClusterArn { get; set; }

        [Input("elasticIp")]
        public Input<string>? ElasticIp { get; set; }

        [Input("ephemeralBlockDevices")]
        private InputList<Inputs.InstanceEphemeralBlockDeviceGetArgs>? _ephemeralBlockDevices;
        public InputList<Inputs.InstanceEphemeralBlockDeviceGetArgs> EphemeralBlockDevices
        {
            get => _ephemeralBlockDevices ?? (_ephemeralBlockDevices = new InputList<Inputs.InstanceEphemeralBlockDeviceGetArgs>());
            set => _ephemeralBlockDevices = value;
        }

        [Input("hostname")]
        public Input<string>? Hostname { get; set; }

        [Input("infrastructureClass")]
        public Input<string>? InfrastructureClass { get; set; }

        [Input("installUpdatesOnBoot")]
        public Input<bool>? InstallUpdatesOnBoot { get; set; }

        [Input("instanceProfileArn")]
        public Input<string>? InstanceProfileArn { get; set; }

        [Input("instanceType")]
        public Input<string>? InstanceType { get; set; }

        [Input("lastServiceErrorId")]
        public Input<string>? LastServiceErrorId { get; set; }

        [Input("layerIds")]
        private InputList<string>? _layerIds;
        public InputList<string> LayerIds
        {
            get => _layerIds ?? (_layerIds = new InputList<string>());
            set => _layerIds = value;
        }

        [Input("os")]
        public Input<string>? Os { get; set; }

        [Input("platform")]
        public Input<string>? Platform { get; set; }

        [Input("privateDns")]
        public Input<string>? PrivateDns { get; set; }

        [Input("privateIp")]
        public Input<string>? PrivateIp { get; set; }

        [Input("publicDns")]
        public Input<string>? PublicDns { get; set; }

        [Input("publicIp")]
        public Input<string>? PublicIp { get; set; }

        [Input("registeredBy")]
        public Input<string>? RegisteredBy { get; set; }

        [Input("reportedAgentVersion")]
        public Input<string>? ReportedAgentVersion { get; set; }

        [Input("reportedOsFamily")]
        public Input<string>? ReportedOsFamily { get; set; }

        [Input("reportedOsName")]
        public Input<string>? ReportedOsName { get; set; }

        [Input("reportedOsVersion")]
        public Input<string>? ReportedOsVersion { get; set; }

        [Input("rootBlockDevices")]
        private InputList<Inputs.InstanceRootBlockDeviceGetArgs>? _rootBlockDevices;
        public InputList<Inputs.InstanceRootBlockDeviceGetArgs> RootBlockDevices
        {
            get => _rootBlockDevices ?? (_rootBlockDevices = new InputList<Inputs.InstanceRootBlockDeviceGetArgs>());
            set => _rootBlockDevices = value;
        }

        [Input("rootDeviceType")]
        public Input<string>? RootDeviceType { get; set; }

        [Input("rootDeviceVolumeId")]
        public Input<string>? RootDeviceVolumeId { get; set; }

        [Input("securityGroupIds")]
        private InputList<string>? _securityGroupIds;
        public InputList<string> SecurityGroupIds
        {
            get => _securityGroupIds ?? (_securityGroupIds = new InputList<string>());
            set => _securityGroupIds = value;
        }

        [Input("sshHostDsaKeyFingerprint")]
        public Input<string>? SshHostDsaKeyFingerprint { get; set; }

        [Input("sshHostRsaKeyFingerprint")]
        public Input<string>? SshHostRsaKeyFingerprint { get; set; }

        [Input("sshKeyName")]
        public Input<string>? SshKeyName { get; set; }

        [Input("stackId")]
        public Input<string>? StackId { get; set; }

        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        [Input("tenancy")]
        public Input<string>? Tenancy { get; set; }

        [Input("virtualizationType")]
        public Input<string>? VirtualizationType { get; set; }

        public InstanceState()
        {
        }
        public static new InstanceState Empty => new InstanceState();
    }
}
