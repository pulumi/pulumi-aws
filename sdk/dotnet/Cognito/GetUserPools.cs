// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Cognito
{
    public static class GetUserPools
    {
        public static Task<GetUserPoolsResult> InvokeAsync(GetUserPoolsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetUserPoolsResult>("aws:cognito/getUserPools:getUserPools", args ?? new GetUserPoolsArgs(), options.WithDefaults());

        public static Output<GetUserPoolsResult> Invoke(GetUserPoolsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetUserPoolsResult>("aws:cognito/getUserPools:getUserPools", args ?? new GetUserPoolsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetUserPoolsArgs : global::Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetUserPoolsArgs()
        {
        }
        public static new GetUserPoolsArgs Empty => new GetUserPoolsArgs();
    }

    public sealed class GetUserPoolsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetUserPoolsInvokeArgs()
        {
        }
        public static new GetUserPoolsInvokeArgs Empty => new GetUserPoolsInvokeArgs();
    }


    [OutputType]
    public sealed class GetUserPoolsResult
    {
        public readonly ImmutableArray<string> Arns;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string Name;

        [OutputConstructor]
        private GetUserPoolsResult(
            ImmutableArray<string> arns,

            string id,

            ImmutableArray<string> ids,

            string name)
        {
            Arns = arns;
            Id = id;
            Ids = ids;
            Name = name;
        }
    }
}
