// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Cognito
{
    public static class GetUserPoolClient
    {
        /// <summary>
        /// Provides a Cognito User Pool Client resource.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var client = Output.Create(Aws.Cognito.GetUserPoolClient.InvokeAsync(new Aws.Cognito.GetUserPoolClientArgs
        ///         {
        ///             ClientId = "38fjsnc484p94kpqsnet7mpld0",
        ///             UserPoolId = "us-west-2_aaaaaaaaa",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetUserPoolClientResult> InvokeAsync(GetUserPoolClientArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetUserPoolClientResult>("aws:cognito/getUserPoolClient:getUserPoolClient", args ?? new GetUserPoolClientArgs(), options.WithDefaults());

        /// <summary>
        /// Provides a Cognito User Pool Client resource.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var client = Output.Create(Aws.Cognito.GetUserPoolClient.InvokeAsync(new Aws.Cognito.GetUserPoolClientArgs
        ///         {
        ///             ClientId = "38fjsnc484p94kpqsnet7mpld0",
        ///             UserPoolId = "us-west-2_aaaaaaaaa",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetUserPoolClientResult> Invoke(GetUserPoolClientInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetUserPoolClientResult>("aws:cognito/getUserPoolClient:getUserPoolClient", args ?? new GetUserPoolClientInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetUserPoolClientArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Client Id of the user pool.
        /// </summary>
        [Input("clientId", required: true)]
        public string ClientId { get; set; } = null!;

        /// <summary>
        /// User pool the client belongs to.
        /// </summary>
        [Input("userPoolId", required: true)]
        public string UserPoolId { get; set; } = null!;

        public GetUserPoolClientArgs()
        {
        }
    }

    public sealed class GetUserPoolClientInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Client Id of the user pool.
        /// </summary>
        [Input("clientId", required: true)]
        public Input<string> ClientId { get; set; } = null!;

        /// <summary>
        /// User pool the client belongs to.
        /// </summary>
        [Input("userPoolId", required: true)]
        public Input<string> UserPoolId { get; set; } = null!;

        public GetUserPoolClientInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetUserPoolClientResult
    {
        /// <summary>
        /// (Optional) Time limit, between 5 minutes and 1 day, after which the access token is no longer valid and cannot be used. This value will be overridden if you have entered a value in `token_validity_units`.
        /// </summary>
        public readonly int AccessTokenValidity;
        /// <summary>
        /// (Optional) List of allowed OAuth flows (code, implicit, client_credentials).
        /// </summary>
        public readonly ImmutableArray<string> AllowedOauthFlows;
        /// <summary>
        /// (Optional) Whether the client is allowed to follow the OAuth protocol when interacting with Cognito user pools.
        /// </summary>
        public readonly bool AllowedOauthFlowsUserPoolClient;
        /// <summary>
        /// (Optional) List of allowed OAuth scopes (phone, email, openid, profile, and aws.cognito.signin.user.admin).
        /// </summary>
        public readonly ImmutableArray<string> AllowedOauthScopes;
        /// <summary>
        /// (Optional) Configuration block for Amazon Pinpoint analytics for collecting metrics for this user pool. Detailed below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetUserPoolClientAnalyticsConfigurationResult> AnalyticsConfigurations;
        /// <summary>
        /// (Optional) List of allowed callback URLs for the identity providers.
        /// </summary>
        public readonly ImmutableArray<string> CallbackUrls;
        public readonly string ClientId;
        public readonly string ClientSecret;
        /// <summary>
        /// (Optional) Default redirect URI. Must be in the list of callback URLs.
        /// </summary>
        public readonly string DefaultRedirectUri;
        /// <summary>
        /// (Optional) Enables or disables token revocation.
        /// </summary>
        public readonly bool EnableTokenRevocation;
        /// <summary>
        /// (Optional) List of authentication flows (ADMIN_NO_SRP_AUTH, CUSTOM_AUTH_FLOW_ONLY, USER_PASSWORD_AUTH, ALLOW_ADMIN_USER_PASSWORD_AUTH, ALLOW_CUSTOM_AUTH, ALLOW_USER_PASSWORD_AUTH, ALLOW_USER_SRP_AUTH, ALLOW_REFRESH_TOKEN_AUTH).
        /// </summary>
        public readonly ImmutableArray<string> ExplicitAuthFlows;
        /// <summary>
        /// (Optional) Should an application secret be generated.
        /// </summary>
        public readonly bool GenerateSecret;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// (Optional) Time limit, between 5 minutes and 1 day, after which the ID token is no longer valid and cannot be used. This value will be overridden if you have entered a value in `token_validity_units`.
        /// </summary>
        public readonly int IdTokenValidity;
        /// <summary>
        /// (Optional) List of allowed logout URLs for the identity providers.
        /// </summary>
        public readonly ImmutableArray<string> LogoutUrls;
        public readonly string Name;
        /// <summary>
        /// (Optional) Choose which errors and responses are returned by Cognito APIs during authentication, account confirmation, and password recovery when the user does not exist in the user pool. When set to `ENABLED` and the user does not exist, authentication returns an error indicating either the username or password was incorrect, and account confirmation and password recovery return a response indicating a code was sent to a simulated destination. When set to `LEGACY`, those APIs will return a `UserNotFoundException` exception if the user does not exist in the user pool.
        /// </summary>
        public readonly string PreventUserExistenceErrors;
        /// <summary>
        /// (Optional) List of user pool attributes the application client can read from.
        /// </summary>
        public readonly ImmutableArray<string> ReadAttributes;
        /// <summary>
        /// (Optional) Time limit in days refresh tokens are valid for.
        /// </summary>
        public readonly int RefreshTokenValidity;
        /// <summary>
        /// (Optional) List of provider names for the identity providers that are supported on this client. Uses the `provider_name` attribute of `aws.cognito.IdentityProvider` resource(s), or the equivalent string(s).
        /// </summary>
        public readonly ImmutableArray<string> SupportedIdentityProviders;
        /// <summary>
        /// (Optional) Configuration block for units in which the validity times are represented in. Detailed below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetUserPoolClientTokenValidityUnitResult> TokenValidityUnits;
        public readonly string UserPoolId;
        /// <summary>
        /// (Optional) List of user pool attributes the application client can write to.
        /// </summary>
        public readonly ImmutableArray<string> WriteAttributes;

        [OutputConstructor]
        private GetUserPoolClientResult(
            int accessTokenValidity,

            ImmutableArray<string> allowedOauthFlows,

            bool allowedOauthFlowsUserPoolClient,

            ImmutableArray<string> allowedOauthScopes,

            ImmutableArray<Outputs.GetUserPoolClientAnalyticsConfigurationResult> analyticsConfigurations,

            ImmutableArray<string> callbackUrls,

            string clientId,

            string clientSecret,

            string defaultRedirectUri,

            bool enableTokenRevocation,

            ImmutableArray<string> explicitAuthFlows,

            bool generateSecret,

            string id,

            int idTokenValidity,

            ImmutableArray<string> logoutUrls,

            string name,

            string preventUserExistenceErrors,

            ImmutableArray<string> readAttributes,

            int refreshTokenValidity,

            ImmutableArray<string> supportedIdentityProviders,

            ImmutableArray<Outputs.GetUserPoolClientTokenValidityUnitResult> tokenValidityUnits,

            string userPoolId,

            ImmutableArray<string> writeAttributes)
        {
            AccessTokenValidity = accessTokenValidity;
            AllowedOauthFlows = allowedOauthFlows;
            AllowedOauthFlowsUserPoolClient = allowedOauthFlowsUserPoolClient;
            AllowedOauthScopes = allowedOauthScopes;
            AnalyticsConfigurations = analyticsConfigurations;
            CallbackUrls = callbackUrls;
            ClientId = clientId;
            ClientSecret = clientSecret;
            DefaultRedirectUri = defaultRedirectUri;
            EnableTokenRevocation = enableTokenRevocation;
            ExplicitAuthFlows = explicitAuthFlows;
            GenerateSecret = generateSecret;
            Id = id;
            IdTokenValidity = idTokenValidity;
            LogoutUrls = logoutUrls;
            Name = name;
            PreventUserExistenceErrors = preventUserExistenceErrors;
            ReadAttributes = readAttributes;
            RefreshTokenValidity = refreshTokenValidity;
            SupportedIdentityProviders = supportedIdentityProviders;
            TokenValidityUnits = tokenValidityUnits;
            UserPoolId = userPoolId;
            WriteAttributes = writeAttributes;
        }
    }
}
