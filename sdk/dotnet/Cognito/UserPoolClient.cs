// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Cognito
{
    [AwsResourceType("aws:cognito/userPoolClient:UserPoolClient")]
    public partial class UserPoolClient : global::Pulumi.CustomResource
    {
        [Output("accessTokenValidity")]
        public Output<int?> AccessTokenValidity { get; private set; } = null!;

        [Output("allowedOauthFlows")]
        public Output<ImmutableArray<string>> AllowedOauthFlows { get; private set; } = null!;

        [Output("allowedOauthFlowsUserPoolClient")]
        public Output<bool?> AllowedOauthFlowsUserPoolClient { get; private set; } = null!;

        [Output("allowedOauthScopes")]
        public Output<ImmutableArray<string>> AllowedOauthScopes { get; private set; } = null!;

        [Output("analyticsConfiguration")]
        public Output<Outputs.UserPoolClientAnalyticsConfiguration?> AnalyticsConfiguration { get; private set; } = null!;

        [Output("authSessionValidity")]
        public Output<int?> AuthSessionValidity { get; private set; } = null!;

        [Output("callbackUrls")]
        public Output<ImmutableArray<string>> CallbackUrls { get; private set; } = null!;

        [Output("clientSecret")]
        public Output<string> ClientSecret { get; private set; } = null!;

        [Output("defaultRedirectUri")]
        public Output<string?> DefaultRedirectUri { get; private set; } = null!;

        [Output("enablePropagateAdditionalUserContextData")]
        public Output<bool?> EnablePropagateAdditionalUserContextData { get; private set; } = null!;

        [Output("enableTokenRevocation")]
        public Output<bool> EnableTokenRevocation { get; private set; } = null!;

        [Output("explicitAuthFlows")]
        public Output<ImmutableArray<string>> ExplicitAuthFlows { get; private set; } = null!;

        [Output("generateSecret")]
        public Output<bool?> GenerateSecret { get; private set; } = null!;

        [Output("idTokenValidity")]
        public Output<int?> IdTokenValidity { get; private set; } = null!;

        [Output("logoutUrls")]
        public Output<ImmutableArray<string>> LogoutUrls { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("preventUserExistenceErrors")]
        public Output<string> PreventUserExistenceErrors { get; private set; } = null!;

        [Output("readAttributes")]
        public Output<ImmutableArray<string>> ReadAttributes { get; private set; } = null!;

        [Output("refreshTokenValidity")]
        public Output<int?> RefreshTokenValidity { get; private set; } = null!;

        [Output("supportedIdentityProviders")]
        public Output<ImmutableArray<string>> SupportedIdentityProviders { get; private set; } = null!;

        [Output("tokenValidityUnits")]
        public Output<Outputs.UserPoolClientTokenValidityUnits?> TokenValidityUnits { get; private set; } = null!;

        [Output("userPoolId")]
        public Output<string> UserPoolId { get; private set; } = null!;

        [Output("writeAttributes")]
        public Output<ImmutableArray<string>> WriteAttributes { get; private set; } = null!;


        /// <summary>
        /// Create a UserPoolClient resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public UserPoolClient(string name, UserPoolClientArgs args, CustomResourceOptions? options = null)
            : base("aws:cognito/userPoolClient:UserPoolClient", name, args ?? new UserPoolClientArgs(), MakeResourceOptions(options, ""))
        {
        }

        private UserPoolClient(string name, Input<string> id, UserPoolClientState? state = null, CustomResourceOptions? options = null)
            : base("aws:cognito/userPoolClient:UserPoolClient", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "clientSecret",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing UserPoolClient resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static UserPoolClient Get(string name, Input<string> id, UserPoolClientState? state = null, CustomResourceOptions? options = null)
        {
            return new UserPoolClient(name, id, state, options);
        }
    }

    public sealed class UserPoolClientArgs : global::Pulumi.ResourceArgs
    {
        [Input("accessTokenValidity")]
        public Input<int>? AccessTokenValidity { get; set; }

        [Input("allowedOauthFlows")]
        private InputList<string>? _allowedOauthFlows;
        public InputList<string> AllowedOauthFlows
        {
            get => _allowedOauthFlows ?? (_allowedOauthFlows = new InputList<string>());
            set => _allowedOauthFlows = value;
        }

        [Input("allowedOauthFlowsUserPoolClient")]
        public Input<bool>? AllowedOauthFlowsUserPoolClient { get; set; }

        [Input("allowedOauthScopes")]
        private InputList<string>? _allowedOauthScopes;
        public InputList<string> AllowedOauthScopes
        {
            get => _allowedOauthScopes ?? (_allowedOauthScopes = new InputList<string>());
            set => _allowedOauthScopes = value;
        }

        [Input("analyticsConfiguration")]
        public Input<Inputs.UserPoolClientAnalyticsConfigurationArgs>? AnalyticsConfiguration { get; set; }

        [Input("authSessionValidity")]
        public Input<int>? AuthSessionValidity { get; set; }

        [Input("callbackUrls")]
        private InputList<string>? _callbackUrls;
        public InputList<string> CallbackUrls
        {
            get => _callbackUrls ?? (_callbackUrls = new InputList<string>());
            set => _callbackUrls = value;
        }

        [Input("defaultRedirectUri")]
        public Input<string>? DefaultRedirectUri { get; set; }

        [Input("enablePropagateAdditionalUserContextData")]
        public Input<bool>? EnablePropagateAdditionalUserContextData { get; set; }

        [Input("enableTokenRevocation")]
        public Input<bool>? EnableTokenRevocation { get; set; }

        [Input("explicitAuthFlows")]
        private InputList<string>? _explicitAuthFlows;
        public InputList<string> ExplicitAuthFlows
        {
            get => _explicitAuthFlows ?? (_explicitAuthFlows = new InputList<string>());
            set => _explicitAuthFlows = value;
        }

        [Input("generateSecret")]
        public Input<bool>? GenerateSecret { get; set; }

        [Input("idTokenValidity")]
        public Input<int>? IdTokenValidity { get; set; }

        [Input("logoutUrls")]
        private InputList<string>? _logoutUrls;
        public InputList<string> LogoutUrls
        {
            get => _logoutUrls ?? (_logoutUrls = new InputList<string>());
            set => _logoutUrls = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("preventUserExistenceErrors")]
        public Input<string>? PreventUserExistenceErrors { get; set; }

        [Input("readAttributes")]
        private InputList<string>? _readAttributes;
        public InputList<string> ReadAttributes
        {
            get => _readAttributes ?? (_readAttributes = new InputList<string>());
            set => _readAttributes = value;
        }

        [Input("refreshTokenValidity")]
        public Input<int>? RefreshTokenValidity { get; set; }

        [Input("supportedIdentityProviders")]
        private InputList<string>? _supportedIdentityProviders;
        public InputList<string> SupportedIdentityProviders
        {
            get => _supportedIdentityProviders ?? (_supportedIdentityProviders = new InputList<string>());
            set => _supportedIdentityProviders = value;
        }

        [Input("tokenValidityUnits")]
        public Input<Inputs.UserPoolClientTokenValidityUnitsArgs>? TokenValidityUnits { get; set; }

        [Input("userPoolId", required: true)]
        public Input<string> UserPoolId { get; set; } = null!;

        [Input("writeAttributes")]
        private InputList<string>? _writeAttributes;
        public InputList<string> WriteAttributes
        {
            get => _writeAttributes ?? (_writeAttributes = new InputList<string>());
            set => _writeAttributes = value;
        }

        public UserPoolClientArgs()
        {
        }
        public static new UserPoolClientArgs Empty => new UserPoolClientArgs();
    }

    public sealed class UserPoolClientState : global::Pulumi.ResourceArgs
    {
        [Input("accessTokenValidity")]
        public Input<int>? AccessTokenValidity { get; set; }

        [Input("allowedOauthFlows")]
        private InputList<string>? _allowedOauthFlows;
        public InputList<string> AllowedOauthFlows
        {
            get => _allowedOauthFlows ?? (_allowedOauthFlows = new InputList<string>());
            set => _allowedOauthFlows = value;
        }

        [Input("allowedOauthFlowsUserPoolClient")]
        public Input<bool>? AllowedOauthFlowsUserPoolClient { get; set; }

        [Input("allowedOauthScopes")]
        private InputList<string>? _allowedOauthScopes;
        public InputList<string> AllowedOauthScopes
        {
            get => _allowedOauthScopes ?? (_allowedOauthScopes = new InputList<string>());
            set => _allowedOauthScopes = value;
        }

        [Input("analyticsConfiguration")]
        public Input<Inputs.UserPoolClientAnalyticsConfigurationGetArgs>? AnalyticsConfiguration { get; set; }

        [Input("authSessionValidity")]
        public Input<int>? AuthSessionValidity { get; set; }

        [Input("callbackUrls")]
        private InputList<string>? _callbackUrls;
        public InputList<string> CallbackUrls
        {
            get => _callbackUrls ?? (_callbackUrls = new InputList<string>());
            set => _callbackUrls = value;
        }

        [Input("clientSecret")]
        private Input<string>? _clientSecret;
        public Input<string>? ClientSecret
        {
            get => _clientSecret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _clientSecret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("defaultRedirectUri")]
        public Input<string>? DefaultRedirectUri { get; set; }

        [Input("enablePropagateAdditionalUserContextData")]
        public Input<bool>? EnablePropagateAdditionalUserContextData { get; set; }

        [Input("enableTokenRevocation")]
        public Input<bool>? EnableTokenRevocation { get; set; }

        [Input("explicitAuthFlows")]
        private InputList<string>? _explicitAuthFlows;
        public InputList<string> ExplicitAuthFlows
        {
            get => _explicitAuthFlows ?? (_explicitAuthFlows = new InputList<string>());
            set => _explicitAuthFlows = value;
        }

        [Input("generateSecret")]
        public Input<bool>? GenerateSecret { get; set; }

        [Input("idTokenValidity")]
        public Input<int>? IdTokenValidity { get; set; }

        [Input("logoutUrls")]
        private InputList<string>? _logoutUrls;
        public InputList<string> LogoutUrls
        {
            get => _logoutUrls ?? (_logoutUrls = new InputList<string>());
            set => _logoutUrls = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("preventUserExistenceErrors")]
        public Input<string>? PreventUserExistenceErrors { get; set; }

        [Input("readAttributes")]
        private InputList<string>? _readAttributes;
        public InputList<string> ReadAttributes
        {
            get => _readAttributes ?? (_readAttributes = new InputList<string>());
            set => _readAttributes = value;
        }

        [Input("refreshTokenValidity")]
        public Input<int>? RefreshTokenValidity { get; set; }

        [Input("supportedIdentityProviders")]
        private InputList<string>? _supportedIdentityProviders;
        public InputList<string> SupportedIdentityProviders
        {
            get => _supportedIdentityProviders ?? (_supportedIdentityProviders = new InputList<string>());
            set => _supportedIdentityProviders = value;
        }

        [Input("tokenValidityUnits")]
        public Input<Inputs.UserPoolClientTokenValidityUnitsGetArgs>? TokenValidityUnits { get; set; }

        [Input("userPoolId")]
        public Input<string>? UserPoolId { get; set; }

        [Input("writeAttributes")]
        private InputList<string>? _writeAttributes;
        public InputList<string> WriteAttributes
        {
            get => _writeAttributes ?? (_writeAttributes = new InputList<string>());
            set => _writeAttributes = value;
        }

        public UserPoolClientState()
        {
        }
        public static new UserPoolClientState Empty => new UserPoolClientState();
    }
}
