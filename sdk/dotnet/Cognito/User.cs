// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Cognito
{
    [AwsResourceType("aws:cognito/user:User")]
    public partial class User : global::Pulumi.CustomResource
    {
        [Output("attributes")]
        public Output<ImmutableDictionary<string, string>?> Attributes { get; private set; } = null!;

        [Output("clientMetadata")]
        public Output<ImmutableDictionary<string, string>?> ClientMetadata { get; private set; } = null!;

        [Output("creationDate")]
        public Output<string> CreationDate { get; private set; } = null!;

        [Output("desiredDeliveryMediums")]
        public Output<ImmutableArray<string>> DesiredDeliveryMediums { get; private set; } = null!;

        [Output("enabled")]
        public Output<bool?> Enabled { get; private set; } = null!;

        [Output("forceAliasCreation")]
        public Output<bool?> ForceAliasCreation { get; private set; } = null!;

        [Output("lastModifiedDate")]
        public Output<string> LastModifiedDate { get; private set; } = null!;

        [Output("messageAction")]
        public Output<string?> MessageAction { get; private set; } = null!;

        [Output("mfaSettingLists")]
        public Output<ImmutableArray<string>> MfaSettingLists { get; private set; } = null!;

        [Output("password")]
        public Output<string?> Password { get; private set; } = null!;

        [Output("preferredMfaSetting")]
        public Output<string> PreferredMfaSetting { get; private set; } = null!;

        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        [Output("sub")]
        public Output<string> Sub { get; private set; } = null!;

        [Output("temporaryPassword")]
        public Output<string?> TemporaryPassword { get; private set; } = null!;

        [Output("userPoolId")]
        public Output<string> UserPoolId { get; private set; } = null!;

        [Output("username")]
        public Output<string> Username { get; private set; } = null!;

        [Output("validationData")]
        public Output<ImmutableDictionary<string, string>?> ValidationData { get; private set; } = null!;


        /// <summary>
        /// Create a User resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public User(string name, UserArgs args, CustomResourceOptions? options = null)
            : base("aws:cognito/user:User", name, args ?? new UserArgs(), MakeResourceOptions(options, ""))
        {
        }

        private User(string name, Input<string> id, UserState? state = null, CustomResourceOptions? options = null)
            : base("aws:cognito/user:User", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "password",
                    "temporaryPassword",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing User resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static User Get(string name, Input<string> id, UserState? state = null, CustomResourceOptions? options = null)
        {
            return new User(name, id, state, options);
        }
    }

    public sealed class UserArgs : global::Pulumi.ResourceArgs
    {
        [Input("attributes")]
        private InputMap<string>? _attributes;
        public InputMap<string> Attributes
        {
            get => _attributes ?? (_attributes = new InputMap<string>());
            set => _attributes = value;
        }

        [Input("clientMetadata")]
        private InputMap<string>? _clientMetadata;
        public InputMap<string> ClientMetadata
        {
            get => _clientMetadata ?? (_clientMetadata = new InputMap<string>());
            set => _clientMetadata = value;
        }

        [Input("desiredDeliveryMediums")]
        private InputList<string>? _desiredDeliveryMediums;
        public InputList<string> DesiredDeliveryMediums
        {
            get => _desiredDeliveryMediums ?? (_desiredDeliveryMediums = new InputList<string>());
            set => _desiredDeliveryMediums = value;
        }

        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("forceAliasCreation")]
        public Input<bool>? ForceAliasCreation { get; set; }

        [Input("messageAction")]
        public Input<string>? MessageAction { get; set; }

        [Input("password")]
        private Input<string>? _password;
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("temporaryPassword")]
        private Input<string>? _temporaryPassword;
        public Input<string>? TemporaryPassword
        {
            get => _temporaryPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _temporaryPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("userPoolId", required: true)]
        public Input<string> UserPoolId { get; set; } = null!;

        [Input("username", required: true)]
        public Input<string> Username { get; set; } = null!;

        [Input("validationData")]
        private InputMap<string>? _validationData;
        public InputMap<string> ValidationData
        {
            get => _validationData ?? (_validationData = new InputMap<string>());
            set => _validationData = value;
        }

        public UserArgs()
        {
        }
        public static new UserArgs Empty => new UserArgs();
    }

    public sealed class UserState : global::Pulumi.ResourceArgs
    {
        [Input("attributes")]
        private InputMap<string>? _attributes;
        public InputMap<string> Attributes
        {
            get => _attributes ?? (_attributes = new InputMap<string>());
            set => _attributes = value;
        }

        [Input("clientMetadata")]
        private InputMap<string>? _clientMetadata;
        public InputMap<string> ClientMetadata
        {
            get => _clientMetadata ?? (_clientMetadata = new InputMap<string>());
            set => _clientMetadata = value;
        }

        [Input("creationDate")]
        public Input<string>? CreationDate { get; set; }

        [Input("desiredDeliveryMediums")]
        private InputList<string>? _desiredDeliveryMediums;
        public InputList<string> DesiredDeliveryMediums
        {
            get => _desiredDeliveryMediums ?? (_desiredDeliveryMediums = new InputList<string>());
            set => _desiredDeliveryMediums = value;
        }

        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("forceAliasCreation")]
        public Input<bool>? ForceAliasCreation { get; set; }

        [Input("lastModifiedDate")]
        public Input<string>? LastModifiedDate { get; set; }

        [Input("messageAction")]
        public Input<string>? MessageAction { get; set; }

        [Input("mfaSettingLists")]
        private InputList<string>? _mfaSettingLists;
        public InputList<string> MfaSettingLists
        {
            get => _mfaSettingLists ?? (_mfaSettingLists = new InputList<string>());
            set => _mfaSettingLists = value;
        }

        [Input("password")]
        private Input<string>? _password;
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("preferredMfaSetting")]
        public Input<string>? PreferredMfaSetting { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("sub")]
        public Input<string>? Sub { get; set; }

        [Input("temporaryPassword")]
        private Input<string>? _temporaryPassword;
        public Input<string>? TemporaryPassword
        {
            get => _temporaryPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _temporaryPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("userPoolId")]
        public Input<string>? UserPoolId { get; set; }

        [Input("username")]
        public Input<string>? Username { get; set; }

        [Input("validationData")]
        private InputMap<string>? _validationData;
        public InputMap<string> ValidationData
        {
            get => _validationData ?? (_validationData = new InputMap<string>());
            set => _validationData = value;
        }

        public UserState()
        {
        }
        public static new UserState Empty => new UserState();
    }
}
