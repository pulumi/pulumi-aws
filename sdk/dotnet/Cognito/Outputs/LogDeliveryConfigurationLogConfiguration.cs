// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Cognito.Outputs
{

    [OutputType]
    public sealed class LogDeliveryConfigurationLogConfiguration
    {
        /// <summary>
        /// Configuration for CloudWatch Logs delivery. See CloudWatch Logs Configuration below.
        /// </summary>
        public readonly Outputs.LogDeliveryConfigurationLogConfigurationCloudWatchLogsConfiguration? CloudWatchLogsConfiguration;
        /// <summary>
        /// The event source to configure logging for. Valid values are `userNotification` and `userAuthEvents`.
        /// </summary>
        public readonly string EventSource;
        /// <summary>
        /// Configuration for Kinesis Data Firehose delivery. See Firehose Configuration below.
        /// </summary>
        public readonly Outputs.LogDeliveryConfigurationLogConfigurationFirehoseConfiguration? FirehoseConfiguration;
        /// <summary>
        /// The log level to set for the event source. Valid values are `ERROR` and `INFO`.
        /// </summary>
        public readonly string LogLevel;
        /// <summary>
        /// Configuration for S3 delivery. See S3 Configuration below.
        /// 
        /// &gt; **Note:** At least one destination configuration (`cloudWatchLogsConfiguration`, `firehoseConfiguration`, or `s3Configuration`) must be specified for each log configuration.
        /// </summary>
        public readonly Outputs.LogDeliveryConfigurationLogConfigurationS3Configuration? S3Configuration;

        [OutputConstructor]
        private LogDeliveryConfigurationLogConfiguration(
            Outputs.LogDeliveryConfigurationLogConfigurationCloudWatchLogsConfiguration? cloudWatchLogsConfiguration,

            string eventSource,

            Outputs.LogDeliveryConfigurationLogConfigurationFirehoseConfiguration? firehoseConfiguration,

            string logLevel,

            Outputs.LogDeliveryConfigurationLogConfigurationS3Configuration? s3Configuration)
        {
            CloudWatchLogsConfiguration = cloudWatchLogsConfiguration;
            EventSource = eventSource;
            FirehoseConfiguration = firehoseConfiguration;
            LogLevel = logLevel;
            S3Configuration = s3Configuration;
        }
    }
}
