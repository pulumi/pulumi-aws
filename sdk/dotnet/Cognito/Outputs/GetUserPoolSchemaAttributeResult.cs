// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Cognito.Outputs
{

    [OutputType]
    public sealed class GetUserPoolSchemaAttributeResult
    {
        /// <summary>
        /// - Data type of the attribute (e.g., string, number).
        /// </summary>
        public readonly string AttributeDataType;
        /// <summary>
        /// - Whether the attribute is for developer use only.
        /// </summary>
        public readonly bool DeveloperOnlyAttribute;
        /// <summary>
        /// - Whether the attribute can be changed after user creation.
        /// </summary>
        public readonly bool Mutable;
        /// <summary>
        /// - Name of the attribute.
        /// </summary>
        public readonly string Name;
        public readonly ImmutableArray<Outputs.GetUserPoolSchemaAttributeNumberAttributeConstraintResult> NumberAttributeConstraints;
        /// <summary>
        /// - Whether the attribute is required during user registration.
        /// * number_attribute_constraints - Constraints for numeric attributes.
        /// * string_attribute_constraints - Constraints for string attributes.
        /// </summary>
        public readonly bool Required;
        public readonly ImmutableArray<Outputs.GetUserPoolSchemaAttributeStringAttributeConstraintResult> StringAttributeConstraints;

        [OutputConstructor]
        private GetUserPoolSchemaAttributeResult(
            string attributeDataType,

            bool developerOnlyAttribute,

            bool mutable,

            string name,

            ImmutableArray<Outputs.GetUserPoolSchemaAttributeNumberAttributeConstraintResult> numberAttributeConstraints,

            bool required,

            ImmutableArray<Outputs.GetUserPoolSchemaAttributeStringAttributeConstraintResult> stringAttributeConstraints)
        {
            AttributeDataType = attributeDataType;
            DeveloperOnlyAttribute = developerOnlyAttribute;
            Mutable = mutable;
            Name = name;
            NumberAttributeConstraints = numberAttributeConstraints;
            Required = required;
            StringAttributeConstraints = stringAttributeConstraints;
        }
    }
}
