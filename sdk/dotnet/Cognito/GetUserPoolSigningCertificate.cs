// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Cognito
{
    public static class GetUserPoolSigningCertificate
    {
        /// <summary>
        /// Use this data source to get the signing certificate for a Cognito IdP user pool.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const sc = aws.cognito.getUserPoolSigningCertificate({
        ///     userPoolId: aws_cognito_user_pool.my_pool.id,
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// sc = aws.cognito.get_user_pool_signing_certificate(user_pool_id=%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var sc = Aws.Cognito.GetUserPoolSigningCertificate.Invoke(new()
        ///     {
        ///         UserPoolId = aws_cognito_user_pool.My_pool.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/cognito"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := cognito.GetUserPoolSigningCertificate(ctx, &amp;cognito.GetUserPoolSigningCertificateArgs{
        /// 			UserPoolId: aws_cognito_user_pool.My_pool.Id,
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.cognito.CognitoFunctions;
        /// import com.pulumi.aws.cognito.inputs.GetUserPoolSigningCertificateArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var sc = CognitoFunctions.getUserPoolSigningCertificate(GetUserPoolSigningCertificateArgs.builder()
        ///             .userPoolId(aws_cognito_user_pool.my_pool().id())
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   sc:
        ///     fn::invoke:
        ///       Function: aws:cognito:getUserPoolSigningCertificate
        ///       Arguments:
        ///         userPoolId: ${aws_cognito_user_pool.my_pool.id}
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetUserPoolSigningCertificateResult> InvokeAsync(GetUserPoolSigningCertificateArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetUserPoolSigningCertificateResult>("aws:cognito/getUserPoolSigningCertificate:getUserPoolSigningCertificate", args ?? new GetUserPoolSigningCertificateArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get the signing certificate for a Cognito IdP user pool.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const sc = aws.cognito.getUserPoolSigningCertificate({
        ///     userPoolId: aws_cognito_user_pool.my_pool.id,
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// sc = aws.cognito.get_user_pool_signing_certificate(user_pool_id=%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var sc = Aws.Cognito.GetUserPoolSigningCertificate.Invoke(new()
        ///     {
        ///         UserPoolId = aws_cognito_user_pool.My_pool.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/cognito"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := cognito.GetUserPoolSigningCertificate(ctx, &amp;cognito.GetUserPoolSigningCertificateArgs{
        /// 			UserPoolId: aws_cognito_user_pool.My_pool.Id,
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.cognito.CognitoFunctions;
        /// import com.pulumi.aws.cognito.inputs.GetUserPoolSigningCertificateArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var sc = CognitoFunctions.getUserPoolSigningCertificate(GetUserPoolSigningCertificateArgs.builder()
        ///             .userPoolId(aws_cognito_user_pool.my_pool().id())
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   sc:
        ///     fn::invoke:
        ///       Function: aws:cognito:getUserPoolSigningCertificate
        ///       Arguments:
        ///         userPoolId: ${aws_cognito_user_pool.my_pool.id}
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetUserPoolSigningCertificateResult> Invoke(GetUserPoolSigningCertificateInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetUserPoolSigningCertificateResult>("aws:cognito/getUserPoolSigningCertificate:getUserPoolSigningCertificate", args ?? new GetUserPoolSigningCertificateInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetUserPoolSigningCertificateArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Cognito user pool ID.
        /// </summary>
        [Input("userPoolId", required: true)]
        public string UserPoolId { get; set; } = null!;

        public GetUserPoolSigningCertificateArgs()
        {
        }
        public static new GetUserPoolSigningCertificateArgs Empty => new GetUserPoolSigningCertificateArgs();
    }

    public sealed class GetUserPoolSigningCertificateInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Cognito user pool ID.
        /// </summary>
        [Input("userPoolId", required: true)]
        public Input<string> UserPoolId { get; set; } = null!;

        public GetUserPoolSigningCertificateInvokeArgs()
        {
        }
        public static new GetUserPoolSigningCertificateInvokeArgs Empty => new GetUserPoolSigningCertificateInvokeArgs();
    }


    [OutputType]
    public sealed class GetUserPoolSigningCertificateResult
    {
        /// <summary>
        /// Certificate string
        /// </summary>
        public readonly string Certificate;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string UserPoolId;

        [OutputConstructor]
        private GetUserPoolSigningCertificateResult(
            string certificate,

            string id,

            string userPoolId)
        {
            Certificate = certificate;
            Id = id;
            UserPoolId = userPoolId;
        }
    }
}
