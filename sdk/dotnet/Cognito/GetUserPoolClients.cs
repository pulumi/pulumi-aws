// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Cognito
{
    public static class GetUserPoolClients
    {
        /// <summary>
        /// Use this data source to get a list of Cognito user pools clients for a Cognito IdP user pool.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var main = Output.Create(Aws.Cognito.GetUserPoolClients.InvokeAsync(new Aws.Cognito.GetUserPoolClientsArgs
        ///         {
        ///             UserPoolId = aws_cognito_user_pool.Main.Id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetUserPoolClientsResult> InvokeAsync(GetUserPoolClientsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetUserPoolClientsResult>("aws:cognito/getUserPoolClients:getUserPoolClients", args ?? new GetUserPoolClientsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get a list of Cognito user pools clients for a Cognito IdP user pool.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var main = Output.Create(Aws.Cognito.GetUserPoolClients.InvokeAsync(new Aws.Cognito.GetUserPoolClientsArgs
        ///         {
        ///             UserPoolId = aws_cognito_user_pool.Main.Id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetUserPoolClientsResult> Invoke(GetUserPoolClientsInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetUserPoolClientsResult>("aws:cognito/getUserPoolClients:getUserPoolClients", args ?? new GetUserPoolClientsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetUserPoolClientsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Cognito user pool ID.
        /// </summary>
        [Input("userPoolId", required: true)]
        public string UserPoolId { get; set; } = null!;

        public GetUserPoolClientsArgs()
        {
        }
    }

    public sealed class GetUserPoolClientsInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Cognito user pool ID.
        /// </summary>
        [Input("userPoolId", required: true)]
        public Input<string> UserPoolId { get; set; } = null!;

        public GetUserPoolClientsInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetUserPoolClientsResult
    {
        /// <summary>
        /// List of Cognito user pool client IDs.
        /// </summary>
        public readonly ImmutableArray<string> ClientIds;
        /// <summary>
        /// List of Cognito user pool client names.
        /// </summary>
        public readonly ImmutableArray<string> ClientNames;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string UserPoolId;

        [OutputConstructor]
        private GetUserPoolClientsResult(
            ImmutableArray<string> clientIds,

            ImmutableArray<string> clientNames,

            string id,

            string userPoolId)
        {
            ClientIds = clientIds;
            ClientNames = clientNames;
            Id = id;
            UserPoolId = userPoolId;
        }
    }
}
