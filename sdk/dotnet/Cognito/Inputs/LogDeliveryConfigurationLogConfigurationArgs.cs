// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Cognito.Inputs
{

    public sealed class LogDeliveryConfigurationLogConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Configuration for CloudWatch Logs delivery. See CloudWatch Logs Configuration below.
        /// </summary>
        [Input("cloudWatchLogsConfiguration")]
        public Input<Inputs.LogDeliveryConfigurationLogConfigurationCloudWatchLogsConfigurationArgs>? CloudWatchLogsConfiguration { get; set; }

        /// <summary>
        /// The event source to configure logging for. Valid values are `userNotification` and `userAuthEvents`.
        /// </summary>
        [Input("eventSource", required: true)]
        public Input<string> EventSource { get; set; } = null!;

        /// <summary>
        /// Configuration for Kinesis Data Firehose delivery. See Firehose Configuration below.
        /// </summary>
        [Input("firehoseConfiguration")]
        public Input<Inputs.LogDeliveryConfigurationLogConfigurationFirehoseConfigurationArgs>? FirehoseConfiguration { get; set; }

        /// <summary>
        /// The log level to set for the event source. Valid values are `ERROR` and `INFO`.
        /// </summary>
        [Input("logLevel", required: true)]
        public Input<string> LogLevel { get; set; } = null!;

        /// <summary>
        /// Configuration for S3 delivery. See S3 Configuration below.
        /// 
        /// &gt; **Note:** At least one destination configuration (`cloud_watch_logs_configuration`, `firehose_configuration`, or `s3_configuration`) must be specified for each log configuration.
        /// </summary>
        [Input("s3Configuration")]
        public Input<Inputs.LogDeliveryConfigurationLogConfigurationS3ConfigurationArgs>? S3Configuration { get; set; }

        public LogDeliveryConfigurationLogConfigurationArgs()
        {
        }
        public static new LogDeliveryConfigurationLogConfigurationArgs Empty => new LogDeliveryConfigurationLogConfigurationArgs();
    }
}
