// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Cognito
{
    /// <summary>
    /// Provides a Cognito Risk Configuration resource.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Cognito.RiskConfiguration("example", new()
    ///     {
    ///         UserPoolId = aws_cognito_user_pool.Example.Id,
    ///         RiskExceptionConfiguration = new Aws.Cognito.Inputs.RiskConfigurationRiskExceptionConfigurationArgs
    ///         {
    ///             BlockedIpRangeLists = new[]
    ///             {
    ///                 "10.10.10.10/32",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Cognito Risk Configurations can be imported using the `id`, e.g.,
    /// 
    /// ```sh
    ///  $ pulumi import aws:cognito/riskConfiguration:RiskConfiguration main example
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import aws:cognito/riskConfiguration:RiskConfiguration main example:example
    /// ```
    /// </summary>
    [AwsResourceType("aws:cognito/riskConfiguration:RiskConfiguration")]
    public partial class RiskConfiguration : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The account takeover risk configuration. See details below.
        /// </summary>
        [Output("accountTakeoverRiskConfiguration")]
        public Output<Outputs.RiskConfigurationAccountTakeoverRiskConfiguration?> AccountTakeoverRiskConfiguration { get; private set; } = null!;

        /// <summary>
        /// The app client ID. When the client ID is not provided, the same risk configuration is applied to all the clients in the User Pool.
        /// </summary>
        [Output("clientId")]
        public Output<string?> ClientId { get; private set; } = null!;

        /// <summary>
        /// The compromised credentials risk configuration. See details below.
        /// </summary>
        [Output("compromisedCredentialsRiskConfiguration")]
        public Output<Outputs.RiskConfigurationCompromisedCredentialsRiskConfiguration?> CompromisedCredentialsRiskConfiguration { get; private set; } = null!;

        /// <summary>
        /// The configuration to override the risk decision. See details below.
        /// </summary>
        [Output("riskExceptionConfiguration")]
        public Output<Outputs.RiskConfigurationRiskExceptionConfiguration?> RiskExceptionConfiguration { get; private set; } = null!;

        /// <summary>
        /// The user pool ID.
        /// </summary>
        [Output("userPoolId")]
        public Output<string> UserPoolId { get; private set; } = null!;


        /// <summary>
        /// Create a RiskConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RiskConfiguration(string name, RiskConfigurationArgs args, CustomResourceOptions? options = null)
            : base("aws:cognito/riskConfiguration:RiskConfiguration", name, args ?? new RiskConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RiskConfiguration(string name, Input<string> id, RiskConfigurationState? state = null, CustomResourceOptions? options = null)
            : base("aws:cognito/riskConfiguration:RiskConfiguration", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RiskConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RiskConfiguration Get(string name, Input<string> id, RiskConfigurationState? state = null, CustomResourceOptions? options = null)
        {
            return new RiskConfiguration(name, id, state, options);
        }
    }

    public sealed class RiskConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The account takeover risk configuration. See details below.
        /// </summary>
        [Input("accountTakeoverRiskConfiguration")]
        public Input<Inputs.RiskConfigurationAccountTakeoverRiskConfigurationArgs>? AccountTakeoverRiskConfiguration { get; set; }

        /// <summary>
        /// The app client ID. When the client ID is not provided, the same risk configuration is applied to all the clients in the User Pool.
        /// </summary>
        [Input("clientId")]
        public Input<string>? ClientId { get; set; }

        /// <summary>
        /// The compromised credentials risk configuration. See details below.
        /// </summary>
        [Input("compromisedCredentialsRiskConfiguration")]
        public Input<Inputs.RiskConfigurationCompromisedCredentialsRiskConfigurationArgs>? CompromisedCredentialsRiskConfiguration { get; set; }

        /// <summary>
        /// The configuration to override the risk decision. See details below.
        /// </summary>
        [Input("riskExceptionConfiguration")]
        public Input<Inputs.RiskConfigurationRiskExceptionConfigurationArgs>? RiskExceptionConfiguration { get; set; }

        /// <summary>
        /// The user pool ID.
        /// </summary>
        [Input("userPoolId", required: true)]
        public Input<string> UserPoolId { get; set; } = null!;

        public RiskConfigurationArgs()
        {
        }
        public static new RiskConfigurationArgs Empty => new RiskConfigurationArgs();
    }

    public sealed class RiskConfigurationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The account takeover risk configuration. See details below.
        /// </summary>
        [Input("accountTakeoverRiskConfiguration")]
        public Input<Inputs.RiskConfigurationAccountTakeoverRiskConfigurationGetArgs>? AccountTakeoverRiskConfiguration { get; set; }

        /// <summary>
        /// The app client ID. When the client ID is not provided, the same risk configuration is applied to all the clients in the User Pool.
        /// </summary>
        [Input("clientId")]
        public Input<string>? ClientId { get; set; }

        /// <summary>
        /// The compromised credentials risk configuration. See details below.
        /// </summary>
        [Input("compromisedCredentialsRiskConfiguration")]
        public Input<Inputs.RiskConfigurationCompromisedCredentialsRiskConfigurationGetArgs>? CompromisedCredentialsRiskConfiguration { get; set; }

        /// <summary>
        /// The configuration to override the risk decision. See details below.
        /// </summary>
        [Input("riskExceptionConfiguration")]
        public Input<Inputs.RiskConfigurationRiskExceptionConfigurationGetArgs>? RiskExceptionConfiguration { get; set; }

        /// <summary>
        /// The user pool ID.
        /// </summary>
        [Input("userPoolId")]
        public Input<string>? UserPoolId { get; set; }

        public RiskConfigurationState()
        {
        }
        public static new RiskConfigurationState Empty => new RiskConfigurationState();
    }
}
