// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Cognito
{
    /// <summary>
    /// Use the `aws.cognito.UserPoolClient` resource to manage a Cognito User Pool Client.
    /// 
    /// **This resource is advanced** and has special caveats to consider before use. Please read this document completely before using the resource.
    /// 
    /// Use the `aws.cognito.ManagedUserPoolClient` resource to manage a Cognito User Pool Client that is automatically created by an AWS service. For instance, when [configuring an OpenSearch Domain to use Cognito authentication](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cognito-auth.html), the OpenSearch service creates the User Pool Client during setup and removes it when it is no longer required. As a result, the `aws.cognito.ManagedUserPoolClient` resource does not create or delete this resource, but instead assumes management of it.
    /// 
    /// Use the `aws.cognito.UserPoolClient` resource to manage Cognito User Pool Clients for normal use cases.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleUserPool = new Aws.Cognito.UserPool("exampleUserPool");
    /// 
    ///     var exampleIdentityPool = new Aws.Cognito.IdentityPool("exampleIdentityPool", new()
    ///     {
    ///         IdentityPoolName = "example",
    ///     });
    /// 
    ///     var current = Aws.GetPartition.Invoke();
    /// 
    ///     var examplePolicyDocument = Aws.Iam.GetPolicyDocument.Invoke(new()
    ///     {
    ///         Statements = new[]
    ///         {
    ///             new Aws.Iam.Inputs.GetPolicyDocumentStatementInputArgs
    ///             {
    ///                 Sid = "",
    ///                 Actions = new[]
    ///                 {
    ///                     "sts:AssumeRole",
    ///                 },
    ///                 Effect = "Allow",
    ///                 Principals = new[]
    ///                 {
    ///                     new Aws.Iam.Inputs.GetPolicyDocumentStatementPrincipalInputArgs
    ///                     {
    ///                         Type = "Service",
    ///                         Identifiers = new[]
    ///                         {
    ///                             $"es.{current.Apply(getPartitionResult =&gt; getPartitionResult.DnsSuffix)}",
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    ///     var exampleRole = new Aws.Iam.Role("exampleRole", new()
    ///     {
    ///         Path = "/service-role/",
    ///         AssumeRolePolicy = examplePolicyDocument.Apply(getPolicyDocumentResult =&gt; getPolicyDocumentResult.Json),
    ///     });
    /// 
    ///     var exampleRolePolicyAttachment = new Aws.Iam.RolePolicyAttachment("exampleRolePolicyAttachment", new()
    ///     {
    ///         Role = exampleRole.Name,
    ///         PolicyArn = $"arn:{current.Apply(getPartitionResult =&gt; getPartitionResult.Partition)}:iam::aws:policy/AmazonESCognitoAccess",
    ///     });
    /// 
    ///     var exampleDomain = new Aws.OpenSearch.Domain("exampleDomain", new()
    ///     {
    ///         CognitoOptions = new Aws.OpenSearch.Inputs.DomainCognitoOptionsArgs
    ///         {
    ///             Enabled = true,
    ///             UserPoolId = exampleUserPool.Id,
    ///             IdentityPoolId = exampleIdentityPool.Id,
    ///             RoleArn = exampleRole.Arn,
    ///         },
    ///         EbsOptions = new Aws.OpenSearch.Inputs.DomainEbsOptionsArgs
    ///         {
    ///             EbsEnabled = true,
    ///             VolumeSize = 10,
    ///         },
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn = new[]
    ///         {
    ///             aws_cognito_user_pool_domain.Example,
    ///             exampleRolePolicyAttachment,
    ///         },
    ///     });
    /// 
    ///     var exampleManagedUserPoolClient = new Aws.Cognito.ManagedUserPoolClient("exampleManagedUserPoolClient", new()
    ///     {
    ///         NamePrefix = "AmazonOpenSearchService-example",
    ///         UserPoolId = exampleUserPool.Id,
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn = new[]
    ///         {
    ///             exampleDomain,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import Cognito User Pool Clients using the `id` of the Cognito User Pool and the `id` of the Cognito User Pool Client. For example:
    /// 
    /// ```sh
    ///  $ pulumi import aws:cognito/managedUserPoolClient:ManagedUserPoolClient client us-west-2_abc123/3ho4ek12345678909nh3fmhpko
    /// ```
    /// </summary>
    [AwsResourceType("aws:cognito/managedUserPoolClient:ManagedUserPoolClient")]
    public partial class ManagedUserPoolClient : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Time limit, between 5 minutes and 1 day, after which the access token is no longer valid and cannot be used. By default, the unit is hours. The unit can be overridden by a value in `token_validity_units.access_token`.
        /// </summary>
        [Output("accessTokenValidity")]
        public Output<int> AccessTokenValidity { get; private set; } = null!;

        /// <summary>
        /// List of allowed OAuth flows, including code, implicit, and client_credentials.
        /// </summary>
        [Output("allowedOauthFlows")]
        public Output<ImmutableArray<string>> AllowedOauthFlows { get; private set; } = null!;

        /// <summary>
        /// Whether the client is allowed to use the OAuth protocol when interacting with Cognito user pools.
        /// </summary>
        [Output("allowedOauthFlowsUserPoolClient")]
        public Output<bool> AllowedOauthFlowsUserPoolClient { get; private set; } = null!;

        /// <summary>
        /// List of allowed OAuth scopes, including phone, email, openid, profile, and aws.cognito.signin.user.admin.
        /// </summary>
        [Output("allowedOauthScopes")]
        public Output<ImmutableArray<string>> AllowedOauthScopes { get; private set; } = null!;

        /// <summary>
        /// Configuration block for Amazon Pinpoint analytics that collects metrics for this user pool. See details below.
        /// </summary>
        [Output("analyticsConfiguration")]
        public Output<Outputs.ManagedUserPoolClientAnalyticsConfiguration?> AnalyticsConfiguration { get; private set; } = null!;

        /// <summary>
        /// Duration, in minutes, of the session token created by Amazon Cognito for each API request in an authentication flow. The session token must be responded to by the native user of the user pool before it expires. Valid values for `auth_session_validity` are between `3` and `15`, with a default value of `3`.
        /// </summary>
        [Output("authSessionValidity")]
        public Output<int> AuthSessionValidity { get; private set; } = null!;

        /// <summary>
        /// List of allowed callback URLs for the identity providers.
        /// </summary>
        [Output("callbackUrls")]
        public Output<ImmutableArray<string>> CallbackUrls { get; private set; } = null!;

        /// <summary>
        /// Client secret of the user pool client.
        /// </summary>
        [Output("clientSecret")]
        public Output<string> ClientSecret { get; private set; } = null!;

        /// <summary>
        /// Default redirect URI and must be included in the list of callback URLs.
        /// </summary>
        [Output("defaultRedirectUri")]
        public Output<string> DefaultRedirectUri { get; private set; } = null!;

        /// <summary>
        /// Enables the propagation of additional user context data.
        /// </summary>
        [Output("enablePropagateAdditionalUserContextData")]
        public Output<bool> EnablePropagateAdditionalUserContextData { get; private set; } = null!;

        /// <summary>
        /// Enables or disables token revocation.
        /// </summary>
        [Output("enableTokenRevocation")]
        public Output<bool> EnableTokenRevocation { get; private set; } = null!;

        /// <summary>
        /// List of authentication flows. The available options include ADMIN_NO_SRP_AUTH, CUSTOM_AUTH_FLOW_ONLY, USER_PASSWORD_AUTH, ALLOW_ADMIN_USER_PASSWORD_AUTH, ALLOW_CUSTOM_AUTH, ALLOW_USER_PASSWORD_AUTH, ALLOW_USER_SRP_AUTH, and ALLOW_REFRESH_TOKEN_AUTH.
        /// </summary>
        [Output("explicitAuthFlows")]
        public Output<ImmutableArray<string>> ExplicitAuthFlows { get; private set; } = null!;

        /// <summary>
        /// Time limit, between 5 minutes and 1 day, after which the ID token is no longer valid and cannot be used. By default, the unit is hours. The unit can be overridden by a value in `token_validity_units.id_token`.
        /// </summary>
        [Output("idTokenValidity")]
        public Output<int> IdTokenValidity { get; private set; } = null!;

        /// <summary>
        /// List of allowed logout URLs for the identity providers.
        /// </summary>
        [Output("logoutUrls")]
        public Output<ImmutableArray<string>> LogoutUrls { get; private set; } = null!;

        /// <summary>
        /// Name of the user pool client.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Regular expression that matches the name of the desired User Pool Client. It must only match one User Pool Client.
        /// </summary>
        [Output("namePattern")]
        public Output<string?> NamePattern { get; private set; } = null!;

        /// <summary>
        /// String that matches the beginning of the name of the desired User Pool Client. It must match only one User Pool Client.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Output("namePrefix")]
        public Output<string?> NamePrefix { get; private set; } = null!;

        /// <summary>
        /// Setting determines the errors and responses returned by Cognito APIs when a user does not exist in the user pool during authentication, account confirmation, and password recovery.
        /// </summary>
        [Output("preventUserExistenceErrors")]
        public Output<string> PreventUserExistenceErrors { get; private set; } = null!;

        /// <summary>
        /// List of user pool attributes that the application client can read from.
        /// </summary>
        [Output("readAttributes")]
        public Output<ImmutableArray<string>> ReadAttributes { get; private set; } = null!;

        /// <summary>
        /// Time limit, between 60 minutes and 10 years, after which the refresh token is no longer valid and cannot be used. By default, the unit is days. The unit can be overridden by a value in `token_validity_units.refresh_token`.
        /// </summary>
        [Output("refreshTokenValidity")]
        public Output<int> RefreshTokenValidity { get; private set; } = null!;

        /// <summary>
        /// List of provider names for the identity providers that are supported on this client. It uses the `provider_name` attribute of the `aws.cognito.IdentityProvider` resource(s), or the equivalent string(s).
        /// </summary>
        [Output("supportedIdentityProviders")]
        public Output<ImmutableArray<string>> SupportedIdentityProviders { get; private set; } = null!;

        /// <summary>
        /// Configuration block for representing the validity times in units. See details below. Detailed below.
        /// </summary>
        [Output("tokenValidityUnits")]
        public Output<Outputs.ManagedUserPoolClientTokenValidityUnits?> TokenValidityUnits { get; private set; } = null!;

        /// <summary>
        /// User pool that the client belongs to.
        /// </summary>
        [Output("userPoolId")]
        public Output<string> UserPoolId { get; private set; } = null!;

        /// <summary>
        /// List of user pool attributes that the application client can write to.
        /// </summary>
        [Output("writeAttributes")]
        public Output<ImmutableArray<string>> WriteAttributes { get; private set; } = null!;


        /// <summary>
        /// Create a ManagedUserPoolClient resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ManagedUserPoolClient(string name, ManagedUserPoolClientArgs args, CustomResourceOptions? options = null)
            : base("aws:cognito/managedUserPoolClient:ManagedUserPoolClient", name, args ?? new ManagedUserPoolClientArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ManagedUserPoolClient(string name, Input<string> id, ManagedUserPoolClientState? state = null, CustomResourceOptions? options = null)
            : base("aws:cognito/managedUserPoolClient:ManagedUserPoolClient", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "clientSecret",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ManagedUserPoolClient resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ManagedUserPoolClient Get(string name, Input<string> id, ManagedUserPoolClientState? state = null, CustomResourceOptions? options = null)
        {
            return new ManagedUserPoolClient(name, id, state, options);
        }
    }

    public sealed class ManagedUserPoolClientArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Time limit, between 5 minutes and 1 day, after which the access token is no longer valid and cannot be used. By default, the unit is hours. The unit can be overridden by a value in `token_validity_units.access_token`.
        /// </summary>
        [Input("accessTokenValidity")]
        public Input<int>? AccessTokenValidity { get; set; }

        [Input("allowedOauthFlows")]
        private InputList<string>? _allowedOauthFlows;

        /// <summary>
        /// List of allowed OAuth flows, including code, implicit, and client_credentials.
        /// </summary>
        public InputList<string> AllowedOauthFlows
        {
            get => _allowedOauthFlows ?? (_allowedOauthFlows = new InputList<string>());
            set => _allowedOauthFlows = value;
        }

        /// <summary>
        /// Whether the client is allowed to use the OAuth protocol when interacting with Cognito user pools.
        /// </summary>
        [Input("allowedOauthFlowsUserPoolClient")]
        public Input<bool>? AllowedOauthFlowsUserPoolClient { get; set; }

        [Input("allowedOauthScopes")]
        private InputList<string>? _allowedOauthScopes;

        /// <summary>
        /// List of allowed OAuth scopes, including phone, email, openid, profile, and aws.cognito.signin.user.admin.
        /// </summary>
        public InputList<string> AllowedOauthScopes
        {
            get => _allowedOauthScopes ?? (_allowedOauthScopes = new InputList<string>());
            set => _allowedOauthScopes = value;
        }

        /// <summary>
        /// Configuration block for Amazon Pinpoint analytics that collects metrics for this user pool. See details below.
        /// </summary>
        [Input("analyticsConfiguration")]
        public Input<Inputs.ManagedUserPoolClientAnalyticsConfigurationArgs>? AnalyticsConfiguration { get; set; }

        /// <summary>
        /// Duration, in minutes, of the session token created by Amazon Cognito for each API request in an authentication flow. The session token must be responded to by the native user of the user pool before it expires. Valid values for `auth_session_validity` are between `3` and `15`, with a default value of `3`.
        /// </summary>
        [Input("authSessionValidity")]
        public Input<int>? AuthSessionValidity { get; set; }

        [Input("callbackUrls")]
        private InputList<string>? _callbackUrls;

        /// <summary>
        /// List of allowed callback URLs for the identity providers.
        /// </summary>
        public InputList<string> CallbackUrls
        {
            get => _callbackUrls ?? (_callbackUrls = new InputList<string>());
            set => _callbackUrls = value;
        }

        /// <summary>
        /// Default redirect URI and must be included in the list of callback URLs.
        /// </summary>
        [Input("defaultRedirectUri")]
        public Input<string>? DefaultRedirectUri { get; set; }

        /// <summary>
        /// Enables the propagation of additional user context data.
        /// </summary>
        [Input("enablePropagateAdditionalUserContextData")]
        public Input<bool>? EnablePropagateAdditionalUserContextData { get; set; }

        /// <summary>
        /// Enables or disables token revocation.
        /// </summary>
        [Input("enableTokenRevocation")]
        public Input<bool>? EnableTokenRevocation { get; set; }

        [Input("explicitAuthFlows")]
        private InputList<string>? _explicitAuthFlows;

        /// <summary>
        /// List of authentication flows. The available options include ADMIN_NO_SRP_AUTH, CUSTOM_AUTH_FLOW_ONLY, USER_PASSWORD_AUTH, ALLOW_ADMIN_USER_PASSWORD_AUTH, ALLOW_CUSTOM_AUTH, ALLOW_USER_PASSWORD_AUTH, ALLOW_USER_SRP_AUTH, and ALLOW_REFRESH_TOKEN_AUTH.
        /// </summary>
        public InputList<string> ExplicitAuthFlows
        {
            get => _explicitAuthFlows ?? (_explicitAuthFlows = new InputList<string>());
            set => _explicitAuthFlows = value;
        }

        /// <summary>
        /// Time limit, between 5 minutes and 1 day, after which the ID token is no longer valid and cannot be used. By default, the unit is hours. The unit can be overridden by a value in `token_validity_units.id_token`.
        /// </summary>
        [Input("idTokenValidity")]
        public Input<int>? IdTokenValidity { get; set; }

        [Input("logoutUrls")]
        private InputList<string>? _logoutUrls;

        /// <summary>
        /// List of allowed logout URLs for the identity providers.
        /// </summary>
        public InputList<string> LogoutUrls
        {
            get => _logoutUrls ?? (_logoutUrls = new InputList<string>());
            set => _logoutUrls = value;
        }

        /// <summary>
        /// Regular expression that matches the name of the desired User Pool Client. It must only match one User Pool Client.
        /// </summary>
        [Input("namePattern")]
        public Input<string>? NamePattern { get; set; }

        /// <summary>
        /// String that matches the beginning of the name of the desired User Pool Client. It must match only one User Pool Client.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("namePrefix")]
        public Input<string>? NamePrefix { get; set; }

        /// <summary>
        /// Setting determines the errors and responses returned by Cognito APIs when a user does not exist in the user pool during authentication, account confirmation, and password recovery.
        /// </summary>
        [Input("preventUserExistenceErrors")]
        public Input<string>? PreventUserExistenceErrors { get; set; }

        [Input("readAttributes")]
        private InputList<string>? _readAttributes;

        /// <summary>
        /// List of user pool attributes that the application client can read from.
        /// </summary>
        public InputList<string> ReadAttributes
        {
            get => _readAttributes ?? (_readAttributes = new InputList<string>());
            set => _readAttributes = value;
        }

        /// <summary>
        /// Time limit, between 60 minutes and 10 years, after which the refresh token is no longer valid and cannot be used. By default, the unit is days. The unit can be overridden by a value in `token_validity_units.refresh_token`.
        /// </summary>
        [Input("refreshTokenValidity")]
        public Input<int>? RefreshTokenValidity { get; set; }

        [Input("supportedIdentityProviders")]
        private InputList<string>? _supportedIdentityProviders;

        /// <summary>
        /// List of provider names for the identity providers that are supported on this client. It uses the `provider_name` attribute of the `aws.cognito.IdentityProvider` resource(s), or the equivalent string(s).
        /// </summary>
        public InputList<string> SupportedIdentityProviders
        {
            get => _supportedIdentityProviders ?? (_supportedIdentityProviders = new InputList<string>());
            set => _supportedIdentityProviders = value;
        }

        /// <summary>
        /// Configuration block for representing the validity times in units. See details below. Detailed below.
        /// </summary>
        [Input("tokenValidityUnits")]
        public Input<Inputs.ManagedUserPoolClientTokenValidityUnitsArgs>? TokenValidityUnits { get; set; }

        /// <summary>
        /// User pool that the client belongs to.
        /// </summary>
        [Input("userPoolId", required: true)]
        public Input<string> UserPoolId { get; set; } = null!;

        [Input("writeAttributes")]
        private InputList<string>? _writeAttributes;

        /// <summary>
        /// List of user pool attributes that the application client can write to.
        /// </summary>
        public InputList<string> WriteAttributes
        {
            get => _writeAttributes ?? (_writeAttributes = new InputList<string>());
            set => _writeAttributes = value;
        }

        public ManagedUserPoolClientArgs()
        {
        }
        public static new ManagedUserPoolClientArgs Empty => new ManagedUserPoolClientArgs();
    }

    public sealed class ManagedUserPoolClientState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Time limit, between 5 minutes and 1 day, after which the access token is no longer valid and cannot be used. By default, the unit is hours. The unit can be overridden by a value in `token_validity_units.access_token`.
        /// </summary>
        [Input("accessTokenValidity")]
        public Input<int>? AccessTokenValidity { get; set; }

        [Input("allowedOauthFlows")]
        private InputList<string>? _allowedOauthFlows;

        /// <summary>
        /// List of allowed OAuth flows, including code, implicit, and client_credentials.
        /// </summary>
        public InputList<string> AllowedOauthFlows
        {
            get => _allowedOauthFlows ?? (_allowedOauthFlows = new InputList<string>());
            set => _allowedOauthFlows = value;
        }

        /// <summary>
        /// Whether the client is allowed to use the OAuth protocol when interacting with Cognito user pools.
        /// </summary>
        [Input("allowedOauthFlowsUserPoolClient")]
        public Input<bool>? AllowedOauthFlowsUserPoolClient { get; set; }

        [Input("allowedOauthScopes")]
        private InputList<string>? _allowedOauthScopes;

        /// <summary>
        /// List of allowed OAuth scopes, including phone, email, openid, profile, and aws.cognito.signin.user.admin.
        /// </summary>
        public InputList<string> AllowedOauthScopes
        {
            get => _allowedOauthScopes ?? (_allowedOauthScopes = new InputList<string>());
            set => _allowedOauthScopes = value;
        }

        /// <summary>
        /// Configuration block for Amazon Pinpoint analytics that collects metrics for this user pool. See details below.
        /// </summary>
        [Input("analyticsConfiguration")]
        public Input<Inputs.ManagedUserPoolClientAnalyticsConfigurationGetArgs>? AnalyticsConfiguration { get; set; }

        /// <summary>
        /// Duration, in minutes, of the session token created by Amazon Cognito for each API request in an authentication flow. The session token must be responded to by the native user of the user pool before it expires. Valid values for `auth_session_validity` are between `3` and `15`, with a default value of `3`.
        /// </summary>
        [Input("authSessionValidity")]
        public Input<int>? AuthSessionValidity { get; set; }

        [Input("callbackUrls")]
        private InputList<string>? _callbackUrls;

        /// <summary>
        /// List of allowed callback URLs for the identity providers.
        /// </summary>
        public InputList<string> CallbackUrls
        {
            get => _callbackUrls ?? (_callbackUrls = new InputList<string>());
            set => _callbackUrls = value;
        }

        [Input("clientSecret")]
        private Input<string>? _clientSecret;

        /// <summary>
        /// Client secret of the user pool client.
        /// </summary>
        public Input<string>? ClientSecret
        {
            get => _clientSecret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _clientSecret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Default redirect URI and must be included in the list of callback URLs.
        /// </summary>
        [Input("defaultRedirectUri")]
        public Input<string>? DefaultRedirectUri { get; set; }

        /// <summary>
        /// Enables the propagation of additional user context data.
        /// </summary>
        [Input("enablePropagateAdditionalUserContextData")]
        public Input<bool>? EnablePropagateAdditionalUserContextData { get; set; }

        /// <summary>
        /// Enables or disables token revocation.
        /// </summary>
        [Input("enableTokenRevocation")]
        public Input<bool>? EnableTokenRevocation { get; set; }

        [Input("explicitAuthFlows")]
        private InputList<string>? _explicitAuthFlows;

        /// <summary>
        /// List of authentication flows. The available options include ADMIN_NO_SRP_AUTH, CUSTOM_AUTH_FLOW_ONLY, USER_PASSWORD_AUTH, ALLOW_ADMIN_USER_PASSWORD_AUTH, ALLOW_CUSTOM_AUTH, ALLOW_USER_PASSWORD_AUTH, ALLOW_USER_SRP_AUTH, and ALLOW_REFRESH_TOKEN_AUTH.
        /// </summary>
        public InputList<string> ExplicitAuthFlows
        {
            get => _explicitAuthFlows ?? (_explicitAuthFlows = new InputList<string>());
            set => _explicitAuthFlows = value;
        }

        /// <summary>
        /// Time limit, between 5 minutes and 1 day, after which the ID token is no longer valid and cannot be used. By default, the unit is hours. The unit can be overridden by a value in `token_validity_units.id_token`.
        /// </summary>
        [Input("idTokenValidity")]
        public Input<int>? IdTokenValidity { get; set; }

        [Input("logoutUrls")]
        private InputList<string>? _logoutUrls;

        /// <summary>
        /// List of allowed logout URLs for the identity providers.
        /// </summary>
        public InputList<string> LogoutUrls
        {
            get => _logoutUrls ?? (_logoutUrls = new InputList<string>());
            set => _logoutUrls = value;
        }

        /// <summary>
        /// Name of the user pool client.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Regular expression that matches the name of the desired User Pool Client. It must only match one User Pool Client.
        /// </summary>
        [Input("namePattern")]
        public Input<string>? NamePattern { get; set; }

        /// <summary>
        /// String that matches the beginning of the name of the desired User Pool Client. It must match only one User Pool Client.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("namePrefix")]
        public Input<string>? NamePrefix { get; set; }

        /// <summary>
        /// Setting determines the errors and responses returned by Cognito APIs when a user does not exist in the user pool during authentication, account confirmation, and password recovery.
        /// </summary>
        [Input("preventUserExistenceErrors")]
        public Input<string>? PreventUserExistenceErrors { get; set; }

        [Input("readAttributes")]
        private InputList<string>? _readAttributes;

        /// <summary>
        /// List of user pool attributes that the application client can read from.
        /// </summary>
        public InputList<string> ReadAttributes
        {
            get => _readAttributes ?? (_readAttributes = new InputList<string>());
            set => _readAttributes = value;
        }

        /// <summary>
        /// Time limit, between 60 minutes and 10 years, after which the refresh token is no longer valid and cannot be used. By default, the unit is days. The unit can be overridden by a value in `token_validity_units.refresh_token`.
        /// </summary>
        [Input("refreshTokenValidity")]
        public Input<int>? RefreshTokenValidity { get; set; }

        [Input("supportedIdentityProviders")]
        private InputList<string>? _supportedIdentityProviders;

        /// <summary>
        /// List of provider names for the identity providers that are supported on this client. It uses the `provider_name` attribute of the `aws.cognito.IdentityProvider` resource(s), or the equivalent string(s).
        /// </summary>
        public InputList<string> SupportedIdentityProviders
        {
            get => _supportedIdentityProviders ?? (_supportedIdentityProviders = new InputList<string>());
            set => _supportedIdentityProviders = value;
        }

        /// <summary>
        /// Configuration block for representing the validity times in units. See details below. Detailed below.
        /// </summary>
        [Input("tokenValidityUnits")]
        public Input<Inputs.ManagedUserPoolClientTokenValidityUnitsGetArgs>? TokenValidityUnits { get; set; }

        /// <summary>
        /// User pool that the client belongs to.
        /// </summary>
        [Input("userPoolId")]
        public Input<string>? UserPoolId { get; set; }

        [Input("writeAttributes")]
        private InputList<string>? _writeAttributes;

        /// <summary>
        /// List of user pool attributes that the application client can write to.
        /// </summary>
        public InputList<string> WriteAttributes
        {
            get => _writeAttributes ?? (_writeAttributes = new InputList<string>());
            set => _writeAttributes = value;
        }

        public ManagedUserPoolClientState()
        {
        }
        public static new ManagedUserPoolClientState Empty => new ManagedUserPoolClientState();
    }
}
