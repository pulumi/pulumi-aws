// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.BedrockFoundation
{
    public static class GetModels
    {
        /// <summary>
        /// Data source for managing AWS Bedrock Foundation Models.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.BedrockFoundation.GetModels.Invoke();
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% example %}}
        /// ### Filter by Inference Type
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.BedrockFoundation.GetModels.Invoke(new()
        ///     {
        ///         ByInferenceType = "ON_DEMAND",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetModelsResult> InvokeAsync(GetModelsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetModelsResult>("aws:bedrockfoundation/getModels:getModels", args ?? new GetModelsArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for managing AWS Bedrock Foundation Models.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.BedrockFoundation.GetModels.Invoke();
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% example %}}
        /// ### Filter by Inference Type
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.BedrockFoundation.GetModels.Invoke(new()
        ///     {
        ///         ByInferenceType = "ON_DEMAND",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetModelsResult> Invoke(GetModelsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetModelsResult>("aws:bedrockfoundation/getModels:getModels", args ?? new GetModelsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetModelsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Customization type to filter on. Valid values are `FINE_TUNING`.
        /// </summary>
        [Input("byCustomizationType")]
        public string? ByCustomizationType { get; set; }

        /// <summary>
        /// Inference type to filter on. Valid values are `ON_DEMAND` and `PROVISIONED`.
        /// </summary>
        [Input("byInferenceType")]
        public string? ByInferenceType { get; set; }

        /// <summary>
        /// Output modality to filter on. Valid values are `TEXT`, `IMAGE`, and `EMBEDDING`.
        /// </summary>
        [Input("byOutputModality")]
        public string? ByOutputModality { get; set; }

        /// <summary>
        /// Model provider to filter on.
        /// </summary>
        [Input("byProvider")]
        public string? ByProvider { get; set; }

        [Input("modelSummaries")]
        private List<Inputs.GetModelsModelSummaryArgs>? _modelSummaries;

        /// <summary>
        /// List of model summary objects. See `model_summaries`.
        /// </summary>
        public List<Inputs.GetModelsModelSummaryArgs> ModelSummaries
        {
            get => _modelSummaries ?? (_modelSummaries = new List<Inputs.GetModelsModelSummaryArgs>());
            set => _modelSummaries = value;
        }

        public GetModelsArgs()
        {
        }
        public static new GetModelsArgs Empty => new GetModelsArgs();
    }

    public sealed class GetModelsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Customization type to filter on. Valid values are `FINE_TUNING`.
        /// </summary>
        [Input("byCustomizationType")]
        public Input<string>? ByCustomizationType { get; set; }

        /// <summary>
        /// Inference type to filter on. Valid values are `ON_DEMAND` and `PROVISIONED`.
        /// </summary>
        [Input("byInferenceType")]
        public Input<string>? ByInferenceType { get; set; }

        /// <summary>
        /// Output modality to filter on. Valid values are `TEXT`, `IMAGE`, and `EMBEDDING`.
        /// </summary>
        [Input("byOutputModality")]
        public Input<string>? ByOutputModality { get; set; }

        /// <summary>
        /// Model provider to filter on.
        /// </summary>
        [Input("byProvider")]
        public Input<string>? ByProvider { get; set; }

        [Input("modelSummaries")]
        private InputList<Inputs.GetModelsModelSummaryInputArgs>? _modelSummaries;

        /// <summary>
        /// List of model summary objects. See `model_summaries`.
        /// </summary>
        public InputList<Inputs.GetModelsModelSummaryInputArgs> ModelSummaries
        {
            get => _modelSummaries ?? (_modelSummaries = new InputList<Inputs.GetModelsModelSummaryInputArgs>());
            set => _modelSummaries = value;
        }

        public GetModelsInvokeArgs()
        {
        }
        public static new GetModelsInvokeArgs Empty => new GetModelsInvokeArgs();
    }


    [OutputType]
    public sealed class GetModelsResult
    {
        public readonly string? ByCustomizationType;
        public readonly string? ByInferenceType;
        public readonly string? ByOutputModality;
        public readonly string? ByProvider;
        /// <summary>
        /// AWS region.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// List of model summary objects. See `model_summaries`.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetModelsModelSummaryResult> ModelSummaries;

        [OutputConstructor]
        private GetModelsResult(
            string? byCustomizationType,

            string? byInferenceType,

            string? byOutputModality,

            string? byProvider,

            string id,

            ImmutableArray<Outputs.GetModelsModelSummaryResult> modelSummaries)
        {
            ByCustomizationType = byCustomizationType;
            ByInferenceType = byInferenceType;
            ByOutputModality = byOutputModality;
            ByProvider = byProvider;
            Id = id;
            ModelSummaries = modelSummaries;
        }
    }
}
