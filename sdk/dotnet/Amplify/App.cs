// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Amplify
{
    [AwsResourceType("aws:amplify/app:App")]
    public partial class App : global::Pulumi.CustomResource
    {
        [Output("accessToken")]
        public Output<string?> AccessToken { get; private set; } = null!;

        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("autoBranchCreationConfig")]
        public Output<Outputs.AppAutoBranchCreationConfig> AutoBranchCreationConfig { get; private set; } = null!;

        [Output("autoBranchCreationPatterns")]
        public Output<ImmutableArray<string>> AutoBranchCreationPatterns { get; private set; } = null!;

        [Output("basicAuthCredentials")]
        public Output<string?> BasicAuthCredentials { get; private set; } = null!;

        [Output("buildSpec")]
        public Output<string> BuildSpec { get; private set; } = null!;

        [Output("customRules")]
        public Output<ImmutableArray<Outputs.AppCustomRule>> CustomRules { get; private set; } = null!;

        [Output("defaultDomain")]
        public Output<string> DefaultDomain { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("enableAutoBranchCreation")]
        public Output<bool?> EnableAutoBranchCreation { get; private set; } = null!;

        [Output("enableBasicAuth")]
        public Output<bool?> EnableBasicAuth { get; private set; } = null!;

        [Output("enableBranchAutoBuild")]
        public Output<bool?> EnableBranchAutoBuild { get; private set; } = null!;

        [Output("enableBranchAutoDeletion")]
        public Output<bool?> EnableBranchAutoDeletion { get; private set; } = null!;

        [Output("environmentVariables")]
        public Output<ImmutableDictionary<string, string>?> EnvironmentVariables { get; private set; } = null!;

        [Output("iamServiceRoleArn")]
        public Output<string?> IamServiceRoleArn { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("oauthToken")]
        public Output<string?> OauthToken { get; private set; } = null!;

        [Output("platform")]
        public Output<string?> Platform { get; private set; } = null!;

        [Output("productionBranches")]
        public Output<ImmutableArray<Outputs.AppProductionBranch>> ProductionBranches { get; private set; } = null!;

        [Output("repository")]
        public Output<string?> Repository { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;


        /// <summary>
        /// Create a App resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public App(string name, AppArgs? args = null, CustomResourceOptions? options = null)
            : base("aws:amplify/app:App", name, args ?? new AppArgs(), MakeResourceOptions(options, ""))
        {
        }

        private App(string name, Input<string> id, AppState? state = null, CustomResourceOptions? options = null)
            : base("aws:amplify/app:App", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "accessToken",
                    "basicAuthCredentials",
                    "oauthToken",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing App resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static App Get(string name, Input<string> id, AppState? state = null, CustomResourceOptions? options = null)
        {
            return new App(name, id, state, options);
        }
    }

    public sealed class AppArgs : global::Pulumi.ResourceArgs
    {
        [Input("accessToken")]
        private Input<string>? _accessToken;
        public Input<string>? AccessToken
        {
            get => _accessToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _accessToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("autoBranchCreationConfig")]
        public Input<Inputs.AppAutoBranchCreationConfigArgs>? AutoBranchCreationConfig { get; set; }

        [Input("autoBranchCreationPatterns")]
        private InputList<string>? _autoBranchCreationPatterns;
        public InputList<string> AutoBranchCreationPatterns
        {
            get => _autoBranchCreationPatterns ?? (_autoBranchCreationPatterns = new InputList<string>());
            set => _autoBranchCreationPatterns = value;
        }

        [Input("basicAuthCredentials")]
        private Input<string>? _basicAuthCredentials;
        public Input<string>? BasicAuthCredentials
        {
            get => _basicAuthCredentials;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _basicAuthCredentials = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("buildSpec")]
        public Input<string>? BuildSpec { get; set; }

        [Input("customRules")]
        private InputList<Inputs.AppCustomRuleArgs>? _customRules;
        public InputList<Inputs.AppCustomRuleArgs> CustomRules
        {
            get => _customRules ?? (_customRules = new InputList<Inputs.AppCustomRuleArgs>());
            set => _customRules = value;
        }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("enableAutoBranchCreation")]
        public Input<bool>? EnableAutoBranchCreation { get; set; }

        [Input("enableBasicAuth")]
        public Input<bool>? EnableBasicAuth { get; set; }

        [Input("enableBranchAutoBuild")]
        public Input<bool>? EnableBranchAutoBuild { get; set; }

        [Input("enableBranchAutoDeletion")]
        public Input<bool>? EnableBranchAutoDeletion { get; set; }

        [Input("environmentVariables")]
        private InputMap<string>? _environmentVariables;
        public InputMap<string> EnvironmentVariables
        {
            get => _environmentVariables ?? (_environmentVariables = new InputMap<string>());
            set => _environmentVariables = value;
        }

        [Input("iamServiceRoleArn")]
        public Input<string>? IamServiceRoleArn { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("oauthToken")]
        private Input<string>? _oauthToken;
        public Input<string>? OauthToken
        {
            get => _oauthToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _oauthToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("platform")]
        public Input<string>? Platform { get; set; }

        [Input("repository")]
        public Input<string>? Repository { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public AppArgs()
        {
        }
        public static new AppArgs Empty => new AppArgs();
    }

    public sealed class AppState : global::Pulumi.ResourceArgs
    {
        [Input("accessToken")]
        private Input<string>? _accessToken;
        public Input<string>? AccessToken
        {
            get => _accessToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _accessToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("autoBranchCreationConfig")]
        public Input<Inputs.AppAutoBranchCreationConfigGetArgs>? AutoBranchCreationConfig { get; set; }

        [Input("autoBranchCreationPatterns")]
        private InputList<string>? _autoBranchCreationPatterns;
        public InputList<string> AutoBranchCreationPatterns
        {
            get => _autoBranchCreationPatterns ?? (_autoBranchCreationPatterns = new InputList<string>());
            set => _autoBranchCreationPatterns = value;
        }

        [Input("basicAuthCredentials")]
        private Input<string>? _basicAuthCredentials;
        public Input<string>? BasicAuthCredentials
        {
            get => _basicAuthCredentials;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _basicAuthCredentials = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("buildSpec")]
        public Input<string>? BuildSpec { get; set; }

        [Input("customRules")]
        private InputList<Inputs.AppCustomRuleGetArgs>? _customRules;
        public InputList<Inputs.AppCustomRuleGetArgs> CustomRules
        {
            get => _customRules ?? (_customRules = new InputList<Inputs.AppCustomRuleGetArgs>());
            set => _customRules = value;
        }

        [Input("defaultDomain")]
        public Input<string>? DefaultDomain { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("enableAutoBranchCreation")]
        public Input<bool>? EnableAutoBranchCreation { get; set; }

        [Input("enableBasicAuth")]
        public Input<bool>? EnableBasicAuth { get; set; }

        [Input("enableBranchAutoBuild")]
        public Input<bool>? EnableBranchAutoBuild { get; set; }

        [Input("enableBranchAutoDeletion")]
        public Input<bool>? EnableBranchAutoDeletion { get; set; }

        [Input("environmentVariables")]
        private InputMap<string>? _environmentVariables;
        public InputMap<string> EnvironmentVariables
        {
            get => _environmentVariables ?? (_environmentVariables = new InputMap<string>());
            set => _environmentVariables = value;
        }

        [Input("iamServiceRoleArn")]
        public Input<string>? IamServiceRoleArn { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("oauthToken")]
        private Input<string>? _oauthToken;
        public Input<string>? OauthToken
        {
            get => _oauthToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _oauthToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("platform")]
        public Input<string>? Platform { get; set; }

        [Input("productionBranches")]
        private InputList<Inputs.AppProductionBranchGetArgs>? _productionBranches;
        public InputList<Inputs.AppProductionBranchGetArgs> ProductionBranches
        {
            get => _productionBranches ?? (_productionBranches = new InputList<Inputs.AppProductionBranchGetArgs>());
            set => _productionBranches = value;
        }

        [Input("repository")]
        public Input<string>? Repository { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        public AppState()
        {
        }
        public static new AppState Empty => new AppState();
    }
}
