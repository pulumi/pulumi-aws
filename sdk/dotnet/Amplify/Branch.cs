// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Amplify
{
    [AwsResourceType("aws:amplify/branch:Branch")]
    public partial class Branch : global::Pulumi.CustomResource
    {
        [Output("appId")]
        public Output<string> AppId { get; private set; } = null!;

        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("associatedResources")]
        public Output<ImmutableArray<string>> AssociatedResources { get; private set; } = null!;

        [Output("backendEnvironmentArn")]
        public Output<string?> BackendEnvironmentArn { get; private set; } = null!;

        [Output("basicAuthCredentials")]
        public Output<string?> BasicAuthCredentials { get; private set; } = null!;

        [Output("branchName")]
        public Output<string> BranchName { get; private set; } = null!;

        [Output("customDomains")]
        public Output<ImmutableArray<string>> CustomDomains { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("destinationBranch")]
        public Output<string> DestinationBranch { get; private set; } = null!;

        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        [Output("enableAutoBuild")]
        public Output<bool?> EnableAutoBuild { get; private set; } = null!;

        [Output("enableBasicAuth")]
        public Output<bool?> EnableBasicAuth { get; private set; } = null!;

        [Output("enableNotification")]
        public Output<bool?> EnableNotification { get; private set; } = null!;

        [Output("enablePerformanceMode")]
        public Output<bool?> EnablePerformanceMode { get; private set; } = null!;

        [Output("enablePullRequestPreview")]
        public Output<bool?> EnablePullRequestPreview { get; private set; } = null!;

        [Output("environmentVariables")]
        public Output<ImmutableDictionary<string, string>?> EnvironmentVariables { get; private set; } = null!;

        [Output("framework")]
        public Output<string?> Framework { get; private set; } = null!;

        [Output("pullRequestEnvironmentName")]
        public Output<string?> PullRequestEnvironmentName { get; private set; } = null!;

        [Output("sourceBranch")]
        public Output<string> SourceBranch { get; private set; } = null!;

        [Output("stage")]
        public Output<string?> Stage { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("ttl")]
        public Output<string?> Ttl { get; private set; } = null!;


        /// <summary>
        /// Create a Branch resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Branch(string name, BranchArgs args, CustomResourceOptions? options = null)
            : base("aws:amplify/branch:Branch", name, args ?? new BranchArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Branch(string name, Input<string> id, BranchState? state = null, CustomResourceOptions? options = null)
            : base("aws:amplify/branch:Branch", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "basicAuthCredentials",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Branch resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Branch Get(string name, Input<string> id, BranchState? state = null, CustomResourceOptions? options = null)
        {
            return new Branch(name, id, state, options);
        }
    }

    public sealed class BranchArgs : global::Pulumi.ResourceArgs
    {
        [Input("appId", required: true)]
        public Input<string> AppId { get; set; } = null!;

        [Input("backendEnvironmentArn")]
        public Input<string>? BackendEnvironmentArn { get; set; }

        [Input("basicAuthCredentials")]
        private Input<string>? _basicAuthCredentials;
        public Input<string>? BasicAuthCredentials
        {
            get => _basicAuthCredentials;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _basicAuthCredentials = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("branchName", required: true)]
        public Input<string> BranchName { get; set; } = null!;

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("enableAutoBuild")]
        public Input<bool>? EnableAutoBuild { get; set; }

        [Input("enableBasicAuth")]
        public Input<bool>? EnableBasicAuth { get; set; }

        [Input("enableNotification")]
        public Input<bool>? EnableNotification { get; set; }

        [Input("enablePerformanceMode")]
        public Input<bool>? EnablePerformanceMode { get; set; }

        [Input("enablePullRequestPreview")]
        public Input<bool>? EnablePullRequestPreview { get; set; }

        [Input("environmentVariables")]
        private InputMap<string>? _environmentVariables;
        public InputMap<string> EnvironmentVariables
        {
            get => _environmentVariables ?? (_environmentVariables = new InputMap<string>());
            set => _environmentVariables = value;
        }

        [Input("framework")]
        public Input<string>? Framework { get; set; }

        [Input("pullRequestEnvironmentName")]
        public Input<string>? PullRequestEnvironmentName { get; set; }

        [Input("stage")]
        public Input<string>? Stage { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("ttl")]
        public Input<string>? Ttl { get; set; }

        public BranchArgs()
        {
        }
        public static new BranchArgs Empty => new BranchArgs();
    }

    public sealed class BranchState : global::Pulumi.ResourceArgs
    {
        [Input("appId")]
        public Input<string>? AppId { get; set; }

        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("associatedResources")]
        private InputList<string>? _associatedResources;
        public InputList<string> AssociatedResources
        {
            get => _associatedResources ?? (_associatedResources = new InputList<string>());
            set => _associatedResources = value;
        }

        [Input("backendEnvironmentArn")]
        public Input<string>? BackendEnvironmentArn { get; set; }

        [Input("basicAuthCredentials")]
        private Input<string>? _basicAuthCredentials;
        public Input<string>? BasicAuthCredentials
        {
            get => _basicAuthCredentials;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _basicAuthCredentials = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("branchName")]
        public Input<string>? BranchName { get; set; }

        [Input("customDomains")]
        private InputList<string>? _customDomains;
        public InputList<string> CustomDomains
        {
            get => _customDomains ?? (_customDomains = new InputList<string>());
            set => _customDomains = value;
        }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("destinationBranch")]
        public Input<string>? DestinationBranch { get; set; }

        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("enableAutoBuild")]
        public Input<bool>? EnableAutoBuild { get; set; }

        [Input("enableBasicAuth")]
        public Input<bool>? EnableBasicAuth { get; set; }

        [Input("enableNotification")]
        public Input<bool>? EnableNotification { get; set; }

        [Input("enablePerformanceMode")]
        public Input<bool>? EnablePerformanceMode { get; set; }

        [Input("enablePullRequestPreview")]
        public Input<bool>? EnablePullRequestPreview { get; set; }

        [Input("environmentVariables")]
        private InputMap<string>? _environmentVariables;
        public InputMap<string> EnvironmentVariables
        {
            get => _environmentVariables ?? (_environmentVariables = new InputMap<string>());
            set => _environmentVariables = value;
        }

        [Input("framework")]
        public Input<string>? Framework { get; set; }

        [Input("pullRequestEnvironmentName")]
        public Input<string>? PullRequestEnvironmentName { get; set; }

        [Input("sourceBranch")]
        public Input<string>? SourceBranch { get; set; }

        [Input("stage")]
        public Input<string>? Stage { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("ttl")]
        public Input<string>? Ttl { get; set; }

        public BranchState()
        {
        }
        public static new BranchState Empty => new BranchState();
    }
}
