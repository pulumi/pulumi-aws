// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.DataPipeline
{
    public static class GetPipelineDefinition
    {
        /// <summary>
        /// Provides details about a specific DataPipeline Pipeline Definition.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(Aws.DataPipeline.GetPipelineDefinition.InvokeAsync(new Aws.DataPipeline.GetPipelineDefinitionArgs
        ///         {
        ///             PipelineId = "pipelineID",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetPipelineDefinitionResult> InvokeAsync(GetPipelineDefinitionArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetPipelineDefinitionResult>("aws:datapipeline/getPipelineDefinition:getPipelineDefinition", args ?? new GetPipelineDefinitionArgs(), options.WithDefaults());

        /// <summary>
        /// Provides details about a specific DataPipeline Pipeline Definition.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(Aws.DataPipeline.GetPipelineDefinition.InvokeAsync(new Aws.DataPipeline.GetPipelineDefinitionArgs
        ///         {
        ///             PipelineId = "pipelineID",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetPipelineDefinitionResult> Invoke(GetPipelineDefinitionInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetPipelineDefinitionResult>("aws:datapipeline/getPipelineDefinition:getPipelineDefinition", args ?? new GetPipelineDefinitionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPipelineDefinitionArgs : Pulumi.InvokeArgs
    {
        [Input("parameterValues")]
        private List<Inputs.GetPipelineDefinitionParameterValueArgs>? _parameterValues;

        /// <summary>
        /// Parameter values used in the pipeline definition. See below
        /// </summary>
        public List<Inputs.GetPipelineDefinitionParameterValueArgs> ParameterValues
        {
            get => _parameterValues ?? (_parameterValues = new List<Inputs.GetPipelineDefinitionParameterValueArgs>());
            set => _parameterValues = value;
        }

        /// <summary>
        /// ID of the pipeline.
        /// </summary>
        [Input("pipelineId", required: true)]
        public string PipelineId { get; set; } = null!;

        public GetPipelineDefinitionArgs()
        {
        }
    }

    public sealed class GetPipelineDefinitionInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("parameterValues")]
        private InputList<Inputs.GetPipelineDefinitionParameterValueInputArgs>? _parameterValues;

        /// <summary>
        /// Parameter values used in the pipeline definition. See below
        /// </summary>
        public InputList<Inputs.GetPipelineDefinitionParameterValueInputArgs> ParameterValues
        {
            get => _parameterValues ?? (_parameterValues = new InputList<Inputs.GetPipelineDefinitionParameterValueInputArgs>());
            set => _parameterValues = value;
        }

        /// <summary>
        /// ID of the pipeline.
        /// </summary>
        [Input("pipelineId", required: true)]
        public Input<string> PipelineId { get; set; } = null!;

        public GetPipelineDefinitionInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetPipelineDefinitionResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Parameter objects used in the pipeline definition. See below
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPipelineDefinitionParameterObjectResult> ParameterObjects;
        /// <summary>
        /// Parameter values used in the pipeline definition. See below
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPipelineDefinitionParameterValueResult> ParameterValues;
        public readonly string PipelineId;
        /// <summary>
        /// Objects defined in the pipeline. See below
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPipelineDefinitionPipelineObjectResult> PipelineObjects;

        [OutputConstructor]
        private GetPipelineDefinitionResult(
            string id,

            ImmutableArray<Outputs.GetPipelineDefinitionParameterObjectResult> parameterObjects,

            ImmutableArray<Outputs.GetPipelineDefinitionParameterValueResult> parameterValues,

            string pipelineId,

            ImmutableArray<Outputs.GetPipelineDefinitionPipelineObjectResult> pipelineObjects)
        {
            Id = id;
            ParameterObjects = parameterObjects;
            ParameterValues = parameterValues;
            PipelineId = pipelineId;
            PipelineObjects = pipelineObjects;
        }
    }
}
