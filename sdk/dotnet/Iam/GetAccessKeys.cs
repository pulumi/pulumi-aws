// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Iam
{
    public static class GetAccessKeys
    {
        /// <summary>
        /// This data source can be used to fetch information about IAM access keys of a
        /// specific IAM user.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Iam.GetAccessKeys.Invoke(new()
        ///     {
        ///         User = "an_example_user_name",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetAccessKeysResult> InvokeAsync(GetAccessKeysArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAccessKeysResult>("aws:iam/getAccessKeys:getAccessKeys", args ?? new GetAccessKeysArgs(), options.WithDefaults());

        /// <summary>
        /// This data source can be used to fetch information about IAM access keys of a
        /// specific IAM user.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Iam.GetAccessKeys.Invoke(new()
        ///     {
        ///         User = "an_example_user_name",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetAccessKeysResult> Invoke(GetAccessKeysInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAccessKeysResult>("aws:iam/getAccessKeys:getAccessKeys", args ?? new GetAccessKeysInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAccessKeysArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the IAM user associated with the access keys.
        /// </summary>
        [Input("user", required: true)]
        public string User { get; set; } = null!;

        public GetAccessKeysArgs()
        {
        }
        public static new GetAccessKeysArgs Empty => new GetAccessKeysArgs();
    }

    public sealed class GetAccessKeysInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the IAM user associated with the access keys.
        /// </summary>
        [Input("user", required: true)]
        public Input<string> User { get; set; } = null!;

        public GetAccessKeysInvokeArgs()
        {
        }
        public static new GetAccessKeysInvokeArgs Empty => new GetAccessKeysInvokeArgs();
    }


    [OutputType]
    public sealed class GetAccessKeysResult
    {
        /// <summary>
        /// List of the IAM access keys associated with the specified user. See below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAccessKeysAccessKeyResult> AccessKeys;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string User;

        [OutputConstructor]
        private GetAccessKeysResult(
            ImmutableArray<Outputs.GetAccessKeysAccessKeyResult> accessKeys,

            string id,

            string user)
        {
            AccessKeys = accessKeys;
            Id = id;
            User = user;
        }
    }
}
