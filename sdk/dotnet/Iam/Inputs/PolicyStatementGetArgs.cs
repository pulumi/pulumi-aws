// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Iam.Inputs
{

    /// <summary>
    /// The Statement element is the main element for a policy. This element is required. It can include multiple elements (see the subsequent sections in this page). The Statement element contains an array of individual statements.
    /// </summary>
    public sealed class PolicyStatementGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Include a list of actions that the policy allows or denies. Required (either Action or NotAction)
        /// </summary>
        [Input("Action")]
        public InputUnion<string, ImmutableArray<string>>? Action { get; set; }

        [Input("Condition")]
        private InputMap<object>? _Condition;

        /// <summary>
        /// Specify the circumstances under which the policy grants permission.
        /// </summary>
        public InputMap<object> Condition
        {
            get => _Condition ?? (_Condition = new InputMap<object>());
            set => _Condition = value;
        }

        /// <summary>
        /// Indicate whether the policy allows or denies access.
        /// </summary>
        [Input("Effect", required: true)]
        public Input<string> Effect { get; set; } = null!;

        /// <summary>
        /// Include a list of actions that are not covered by this policy. Required (either Action or NotAction)
        /// </summary>
        [Input("NotAction")]
        public InputUnion<string, ImmutableArray<string>>? NotAction { get; set; }

        /// <summary>
        /// Indicate the account, user, role, or federated user to which this policy does not apply.
        /// </summary>
        [Input("NotPrincipal")]
        public object? NotPrincipal { get; set; }

        /// <summary>
        /// A list of resources that are specifically excluded by this policy.
        /// </summary>
        [Input("NotResource")]
        public InputUnion<string, ImmutableArray<string>>? NotResource { get; set; }

        /// <summary>
        /// Indicate the account, user, role, or federated user to which you would like to allow or deny access. If you are creating a policy to attach to a user or role, you cannot include this element. The principal is implied as that user or role.
        /// </summary>
        [Input("Principal")]
        public object? Principal { get; set; }

        /// <summary>
        /// A list of resources to which the actions apply.
        /// </summary>
        [Input("Resource")]
        public InputUnion<string, ImmutableArray<string>>? Resource { get; set; }

        /// <summary>
        /// An optional statement ID to differentiate between your statements.
        /// </summary>
        [Input("Sid")]
        public Input<string>? Sid { get; set; }

        public PolicyStatementGetArgs()
        {
        }
        public static new PolicyStatementGetArgs Empty => new PolicyStatementGetArgs();
    }
}
