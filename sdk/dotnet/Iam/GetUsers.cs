// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Iam
{
    public static class GetUsers
    {
        public static Task<GetUsersResult> InvokeAsync(GetUsersArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetUsersResult>("aws:iam/getUsers:getUsers", args ?? new GetUsersArgs(), options.WithDefaults());

        public static Output<GetUsersResult> Invoke(GetUsersInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetUsersResult>("aws:iam/getUsers:getUsers", args ?? new GetUsersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetUsersArgs : global::Pulumi.InvokeArgs
    {
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        [Input("pathPrefix")]
        public string? PathPrefix { get; set; }

        public GetUsersArgs()
        {
        }
        public static new GetUsersArgs Empty => new GetUsersArgs();
    }

    public sealed class GetUsersInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        [Input("pathPrefix")]
        public Input<string>? PathPrefix { get; set; }

        public GetUsersInvokeArgs()
        {
        }
        public static new GetUsersInvokeArgs Empty => new GetUsersInvokeArgs();
    }


    [OutputType]
    public sealed class GetUsersResult
    {
        public readonly ImmutableArray<string> Arns;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? NameRegex;
        public readonly ImmutableArray<string> Names;
        public readonly string? PathPrefix;

        [OutputConstructor]
        private GetUsersResult(
            ImmutableArray<string> arns,

            string id,

            string? nameRegex,

            ImmutableArray<string> names,

            string? pathPrefix)
        {
            Arns = arns;
            Id = id;
            NameRegex = nameRegex;
            Names = names;
            PathPrefix = pathPrefix;
        }
    }
}
