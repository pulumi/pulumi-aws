// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi.Utilities;

namespace Pulumi.Aws.Iam
{
    public static class GetGroup
    {
        /// <summary>
        /// This data source can be used to fetch information about a specific
        /// IAM group. By using this data source, you can reference IAM group
        /// properties without having to hard code ARNs as input.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(Aws.Iam.GetGroup.InvokeAsync(new Aws.Iam.GetGroupArgs
        ///         {
        ///             GroupName = "an_example_group_name",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetGroupResult> InvokeAsync(GetGroupArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetGroupResult>("aws:iam/getGroup:getGroup", args ?? new GetGroupArgs(), options.WithVersion());

        /// <summary>
        /// This data source can be used to fetch information about a specific
        /// IAM group. By using this data source, you can reference IAM group
        /// properties without having to hard code ARNs as input.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(Aws.Iam.GetGroup.InvokeAsync(new Aws.Iam.GetGroupArgs
        ///         {
        ///             GroupName = "an_example_group_name",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetGroupResult> Invoke(GetGroupInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetGroupResult>("aws:iam/getGroup:getGroup", args ?? new GetGroupInvokeArgs(), options.WithVersion());
    }


    public sealed class GetGroupArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The friendly IAM group name to match.
        /// </summary>
        [Input("groupName", required: true)]
        public string GroupName { get; set; } = null!;

        public GetGroupArgs()
        {
        }
    }

    public sealed class GetGroupInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The friendly IAM group name to match.
        /// </summary>
        [Input("groupName", required: true)]
        public Input<string> GroupName { get; set; } = null!;

        public GetGroupInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetGroupResult
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) specifying the iam user.
        /// </summary>
        public readonly string Arn;
        /// <summary>
        /// The stable and unique string identifying the group.
        /// </summary>
        public readonly string GroupId;
        public readonly string GroupName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The path to the iam user.
        /// </summary>
        public readonly string Path;
        /// <summary>
        /// List of objects containing group member information. See supported fields below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetGroupUserResult> Users;

        [OutputConstructor]
        private GetGroupResult(
            string arn,

            string groupId,

            string groupName,

            string id,

            string path,

            ImmutableArray<Outputs.GetGroupUserResult> users)
        {
            Arn = arn;
            GroupId = groupId;
            GroupName = groupName;
            Id = id;
            Path = path;
            Users = users;
        }
    }
}
