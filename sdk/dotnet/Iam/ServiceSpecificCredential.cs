// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Iam
{
    [AwsResourceType("aws:iam/serviceSpecificCredential:ServiceSpecificCredential")]
    public partial class ServiceSpecificCredential : global::Pulumi.CustomResource
    {
        [Output("serviceName")]
        public Output<string> ServiceName { get; private set; } = null!;

        [Output("servicePassword")]
        public Output<string> ServicePassword { get; private set; } = null!;

        [Output("serviceSpecificCredentialId")]
        public Output<string> ServiceSpecificCredentialId { get; private set; } = null!;

        [Output("serviceUserName")]
        public Output<string> ServiceUserName { get; private set; } = null!;

        [Output("status")]
        public Output<string?> Status { get; private set; } = null!;

        [Output("userName")]
        public Output<string> UserName { get; private set; } = null!;


        /// <summary>
        /// Create a ServiceSpecificCredential resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServiceSpecificCredential(string name, ServiceSpecificCredentialArgs args, CustomResourceOptions? options = null)
            : base("aws:iam/serviceSpecificCredential:ServiceSpecificCredential", name, args ?? new ServiceSpecificCredentialArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ServiceSpecificCredential(string name, Input<string> id, ServiceSpecificCredentialState? state = null, CustomResourceOptions? options = null)
            : base("aws:iam/serviceSpecificCredential:ServiceSpecificCredential", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "servicePassword",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ServiceSpecificCredential resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ServiceSpecificCredential Get(string name, Input<string> id, ServiceSpecificCredentialState? state = null, CustomResourceOptions? options = null)
        {
            return new ServiceSpecificCredential(name, id, state, options);
        }
    }

    public sealed class ServiceSpecificCredentialArgs : global::Pulumi.ResourceArgs
    {
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("userName", required: true)]
        public Input<string> UserName { get; set; } = null!;

        public ServiceSpecificCredentialArgs()
        {
        }
        public static new ServiceSpecificCredentialArgs Empty => new ServiceSpecificCredentialArgs();
    }

    public sealed class ServiceSpecificCredentialState : global::Pulumi.ResourceArgs
    {
        [Input("serviceName")]
        public Input<string>? ServiceName { get; set; }

        [Input("servicePassword")]
        private Input<string>? _servicePassword;
        public Input<string>? ServicePassword
        {
            get => _servicePassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _servicePassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("serviceSpecificCredentialId")]
        public Input<string>? ServiceSpecificCredentialId { get; set; }

        [Input("serviceUserName")]
        public Input<string>? ServiceUserName { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("userName")]
        public Input<string>? UserName { get; set; }

        public ServiceSpecificCredentialState()
        {
        }
        public static new ServiceSpecificCredentialState Empty => new ServiceSpecificCredentialState();
    }
}
