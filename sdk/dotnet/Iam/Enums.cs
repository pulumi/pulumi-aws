// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.Aws.Iam
{
    [EnumType]
    public readonly struct ManagedPolicy : IEquatable<ManagedPolicy>
    {
        private readonly string _value;

        private ManagedPolicy(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static ManagedPolicy APIGatewayServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/APIGatewayServiceRolePolicy");
        public static ManagedPolicy AWSAccountActivityAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSAccountActivityAccess");
        public static ManagedPolicy AWSAccountManagementFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSAccountManagementFullAccess");
        public static ManagedPolicy AWSAccountManagementReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSAccountManagementReadOnlyAccess");
        public static ManagedPolicy AWSAccountUsageReportAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSAccountUsageReportAccess");
        public static ManagedPolicy AWSAgentlessDiscoveryService { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSAgentlessDiscoveryService");
        public static ManagedPolicy AWSAppMeshEnvoyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSAppMeshEnvoyAccess");
        public static ManagedPolicy AWSAppMeshFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSAppMeshFullAccess");
        public static ManagedPolicy AWSAppMeshPreviewEnvoyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSAppMeshPreviewEnvoyAccess");
        public static ManagedPolicy AWSAppMeshPreviewServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSAppMeshPreviewServiceRolePolicy");
        public static ManagedPolicy AWSAppMeshReadOnly { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSAppMeshReadOnly");
        public static ManagedPolicy AWSAppMeshServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSAppMeshServiceRolePolicy");
        public static ManagedPolicy AWSAppRunnerFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSAppRunnerFullAccess");
        public static ManagedPolicy AWSAppRunnerReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSAppRunnerReadOnlyAccess");
        public static ManagedPolicy AWSAppRunnerServicePolicyForECRAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSAppRunnerServicePolicyForECRAccess");
        public static ManagedPolicy AWSAppSyncAdministrator { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSAppSyncAdministrator");
        public static ManagedPolicy AWSAppSyncInvokeFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSAppSyncInvokeFullAccess");
        public static ManagedPolicy AWSAppSyncPushToCloudWatchLogs { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSAppSyncPushToCloudWatchLogs");
        public static ManagedPolicy AWSAppSyncSchemaAuthor { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSAppSyncSchemaAuthor");
        public static ManagedPolicy AWSAppSyncServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSAppSyncServiceRolePolicy");
        public static ManagedPolicy AWSApplicationAutoScalingCustomResourcePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSApplicationAutoScalingCustomResourcePolicy");
        public static ManagedPolicy AWSApplicationAutoscalingAppStreamFleetPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSApplicationAutoscalingAppStreamFleetPolicy");
        public static ManagedPolicy AWSApplicationAutoscalingCassandraTablePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSApplicationAutoscalingCassandraTablePolicy");
        public static ManagedPolicy AWSApplicationAutoscalingComprehendEndpointPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSApplicationAutoscalingComprehendEndpointPolicy");
        public static ManagedPolicy AWSApplicationAutoscalingDynamoDBTablePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSApplicationAutoscalingDynamoDBTablePolicy");
        public static ManagedPolicy AWSApplicationAutoscalingEC2SpotFleetRequestPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSApplicationAutoscalingEC2SpotFleetRequestPolicy");
        public static ManagedPolicy AWSApplicationAutoscalingECSServicePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSApplicationAutoscalingECSServicePolicy");
        public static ManagedPolicy AWSApplicationAutoscalingEMRInstanceGroupPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSApplicationAutoscalingEMRInstanceGroupPolicy");
        public static ManagedPolicy AWSApplicationAutoscalingElastiCacheRGPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSApplicationAutoscalingElastiCacheRGPolicy");
        public static ManagedPolicy AWSApplicationAutoscalingKafkaClusterPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSApplicationAutoscalingKafkaClusterPolicy");
        public static ManagedPolicy AWSApplicationAutoscalingLambdaConcurrencyPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSApplicationAutoscalingLambdaConcurrencyPolicy");
        public static ManagedPolicy AWSApplicationAutoscalingNeptuneClusterPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSApplicationAutoscalingNeptuneClusterPolicy");
        public static ManagedPolicy AWSApplicationAutoscalingRDSClusterPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSApplicationAutoscalingRDSClusterPolicy");
        public static ManagedPolicy AWSApplicationAutoscalingSageMakerEndpointPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSApplicationAutoscalingSageMakerEndpointPolicy");
        public static ManagedPolicy AWSApplicationDiscoveryAgentAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSApplicationDiscoveryAgentAccess");
        public static ManagedPolicy AWSApplicationDiscoveryAgentlessCollectorAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSApplicationDiscoveryAgentlessCollectorAccess");
        public static ManagedPolicy AWSApplicationDiscoveryServiceFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSApplicationDiscoveryServiceFullAccess");
        public static ManagedPolicy AWSApplicationMigrationAgentInstallationPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSApplicationMigrationAgentInstallationPolicy");
        public static ManagedPolicy AWSApplicationMigrationAgentPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSApplicationMigrationAgentPolicy");
        public static ManagedPolicy AWSApplicationMigrationAgentPolicy_v2 { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSApplicationMigrationAgentPolicy_v2");
        public static ManagedPolicy AWSApplicationMigrationConversionServerPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSApplicationMigrationConversionServerPolicy");
        public static ManagedPolicy AWSApplicationMigrationEC2Access { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSApplicationMigrationEC2Access");
        public static ManagedPolicy AWSApplicationMigrationFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSApplicationMigrationFullAccess");
        public static ManagedPolicy AWSApplicationMigrationMGHAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSApplicationMigrationMGHAccess");
        public static ManagedPolicy AWSApplicationMigrationReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSApplicationMigrationReadOnlyAccess");
        public static ManagedPolicy AWSApplicationMigrationReplicationServerPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSApplicationMigrationReplicationServerPolicy");
        public static ManagedPolicy AWSApplicationMigrationSSMAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSApplicationMigrationSSMAccess");
        public static ManagedPolicy AWSApplicationMigrationServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSApplicationMigrationServiceRolePolicy");
        public static ManagedPolicy AWSApplicationMigrationVCenterClientPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSApplicationMigrationVCenterClientPolicy");
        public static ManagedPolicy AWSArtifactAccountSync { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSArtifactAccountSync");
        public static ManagedPolicy AWSAuditManagerAdministratorAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSAuditManagerAdministratorAccess");
        public static ManagedPolicy AWSAuditManagerServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSAuditManagerServiceRolePolicy");
        public static ManagedPolicy AWSAutoScalingPlansEC2AutoScalingPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSAutoScalingPlansEC2AutoScalingPolicy");
        public static ManagedPolicy AWSBackupAuditAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSBackupAuditAccess");
        public static ManagedPolicy AWSBackupDataTransferAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSBackupDataTransferAccess");
        public static ManagedPolicy AWSBackupFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSBackupFullAccess");
        public static ManagedPolicy AWSBackupGatewayServiceRolePolicyForVirtualMachineMetadataSync { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSBackupGatewayServiceRolePolicyForVirtualMachineMetadataSync");
        public static ManagedPolicy AWSBackupOperatorAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSBackupOperatorAccess");
        public static ManagedPolicy AWSBackupOrganizationAdminAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSBackupOrganizationAdminAccess");
        public static ManagedPolicy AWSBackupRestoreAccessForSAPHANA { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSBackupRestoreAccessForSAPHANA");
        public static ManagedPolicy AWSBackupServiceLinkedRolePolicyForBackup { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSBackupServiceLinkedRolePolicyForBackup");
        public static ManagedPolicy AWSBackupServiceLinkedRolePolicyForBackupTest { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSBackupServiceLinkedRolePolicyForBackupTest");
        public static ManagedPolicy AWSBackupServiceRolePolicyForBackup { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSBackupServiceRolePolicyForBackup");
        public static ManagedPolicy AWSBackupServiceRolePolicyForRestores { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSBackupServiceRolePolicyForRestores");
        public static ManagedPolicy AWSBackupServiceRolePolicyForS3Backup { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSBackupServiceRolePolicyForS3Backup");
        public static ManagedPolicy AWSBackupServiceRolePolicyForS3Restore { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSBackupServiceRolePolicyForS3Restore");
        public static ManagedPolicy AWSBatchFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSBatchFullAccess");
        public static ManagedPolicy AWSBatchServiceEventTargetRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSBatchServiceEventTargetRole");
        public static ManagedPolicy AWSBatchServiceRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole");
        public static ManagedPolicy AWSBillingConductorFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSBillingConductorFullAccess");
        public static ManagedPolicy AWSBillingConductorReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSBillingConductorReadOnlyAccess");
        public static ManagedPolicy AWSBillingReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSBillingReadOnlyAccess");
        public static ManagedPolicy AWSBudgetsActionsWithAWSResourceControlAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSBudgetsActionsWithAWSResourceControlAccess");
        public static ManagedPolicy AWSBudgetsActions_RolePolicyForResourceAdministrationWithSSM { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSBudgetsActions_RolePolicyForResourceAdministrationWithSSM");
        public static ManagedPolicy AWSBudgetsReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSBudgetsReadOnlyAccess");
        public static ManagedPolicy AWSBugBustFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSBugBustFullAccess");
        public static ManagedPolicy AWSBugBustPlayerAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSBugBustPlayerAccess");
        public static ManagedPolicy AWSBugBustServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSBugBustServiceRolePolicy");
        public static ManagedPolicy AWSCertificateManagerFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCertificateManagerFullAccess");
        public static ManagedPolicy AWSCertificateManagerPrivateCAAuditor { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCertificateManagerPrivateCAAuditor");
        public static ManagedPolicy AWSCertificateManagerPrivateCAFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCertificateManagerPrivateCAFullAccess");
        public static ManagedPolicy AWSCertificateManagerPrivateCAPrivilegedUser { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCertificateManagerPrivateCAPrivilegedUser");
        public static ManagedPolicy AWSCertificateManagerPrivateCAReadOnly { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCertificateManagerPrivateCAReadOnly");
        public static ManagedPolicy AWSCertificateManagerPrivateCAUser { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCertificateManagerPrivateCAUser");
        public static ManagedPolicy AWSCertificateManagerReadOnly { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCertificateManagerReadOnly");
        public static ManagedPolicy AWSChatbotServiceLinkedRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSChatbotServiceLinkedRolePolicy");
        public static ManagedPolicy AWSCleanRoomsFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCleanRoomsFullAccess");
        public static ManagedPolicy AWSCleanRoomsFullAccessNoQuerying { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCleanRoomsFullAccessNoQuerying");
        public static ManagedPolicy AWSCleanRoomsReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCleanRoomsReadOnlyAccess");
        public static ManagedPolicy AWSCloud9Administrator { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCloud9Administrator");
        public static ManagedPolicy AWSCloud9EnvironmentMember { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCloud9EnvironmentMember");
        public static ManagedPolicy AWSCloud9SSMInstanceProfile { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCloud9SSMInstanceProfile");
        public static ManagedPolicy AWSCloud9ServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSCloud9ServiceRolePolicy");
        public static ManagedPolicy AWSCloud9User { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCloud9User");
        public static ManagedPolicy AWSCloudFormationFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCloudFormationFullAccess");
        public static ManagedPolicy AWSCloudFormationReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCloudFormationReadOnlyAccess");
        public static ManagedPolicy AWSCloudFrontLogger { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSCloudFrontLogger");
        public static ManagedPolicy AWSCloudHSMFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCloudHSMFullAccess");
        public static ManagedPolicy AWSCloudHSMReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCloudHSMReadOnlyAccess");
        public static ManagedPolicy AWSCloudHSMRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSCloudHSMRole");
        [Obsolete(@"No longer supported. Use CloudTrail_FullAccess instead.")]
        public static ManagedPolicy AWSCloudTrailFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCloudTrailFullAccess");
        [Obsolete(@"No longer supported. Use CloudTrail_ReadOnlyAccess instead.")]
        public static ManagedPolicy AWSCloudTrailReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCloudTrailReadOnlyAccess");
        [Obsolete(@"No longer supported. Use CloudWatchLambdaInsightsExecutionRolePolicy instead.")]
        public static ManagedPolicy AWSCloudWatchLambdaInsightsExecutionRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCloudWatchLambdaInsightsExecutionRolePolicy");
        public static ManagedPolicy AWSCloudMapDiscoverInstanceAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCloudMapDiscoverInstanceAccess");
        public static ManagedPolicy AWSCloudMapFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCloudMapFullAccess");
        public static ManagedPolicy AWSCloudMapReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCloudMapReadOnlyAccess");
        public static ManagedPolicy AWSCloudMapRegisterInstanceAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCloudMapRegisterInstanceAccess");
        public static ManagedPolicy AWSCloudShellFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCloudShellFullAccess");
        public static ManagedPolicy CloudTrail_FullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCloudTrail_FullAccess");
        public static ManagedPolicy CloudTrail_ReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCloudTrail_ReadOnlyAccess");
        public static ManagedPolicy AWSCloudWatchAlarms_ActionSSMIncidentsServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSCloudWatchAlarms_ActionSSMIncidentsServiceRolePolicy");
        public static ManagedPolicy AWSCodeArtifactAdminAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCodeArtifactAdminAccess");
        public static ManagedPolicy AWSCodeArtifactReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCodeArtifactReadOnlyAccess");
        public static ManagedPolicy AWSCodeBuildAdminAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCodeBuildAdminAccess");
        public static ManagedPolicy AWSCodeBuildDeveloperAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCodeBuildDeveloperAccess");
        public static ManagedPolicy AWSCodeBuildReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCodeBuildReadOnlyAccess");
        public static ManagedPolicy AWSCodeCommitFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCodeCommitFullAccess");
        public static ManagedPolicy AWSCodeCommitPowerUser { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCodeCommitPowerUser");
        public static ManagedPolicy AWSCodeCommitReadOnly { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCodeCommitReadOnly");
        public static ManagedPolicy AWSCodeDeployDeployerAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCodeDeployDeployerAccess");
        public static ManagedPolicy AWSCodeDeployFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCodeDeployFullAccess");
        public static ManagedPolicy AWSCodeDeployReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCodeDeployReadOnlyAccess");
        public static ManagedPolicy AWSCodeDeployRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole");
        public static ManagedPolicy AWSCodeDeployRoleForCloudFormation { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSCodeDeployRoleForCloudFormation");
        public static ManagedPolicy AWSCodeDeployRoleForECS { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCodeDeployRoleForECS");
        public static ManagedPolicy AWSCodeDeployRoleForECSLimited { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCodeDeployRoleForECSLimited");
        public static ManagedPolicy AWSCodeDeployRoleForLambda { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSCodeDeployRoleForLambda");
        public static ManagedPolicy AWSCodeDeployRoleForLambdaLimited { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSCodeDeployRoleForLambdaLimited");
        public static ManagedPolicy AWSCodePipelineApproverAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCodePipelineApproverAccess");
        public static ManagedPolicy AWSCodePipelineCustomActionAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCodePipelineCustomActionAccess");
        [Obsolete(@"No longer supported. Use CodePipeline_FullAccess instead.")]
        public static ManagedPolicy AWSCodePipelineFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCodePipelineFullAccess");
        [Obsolete(@"No longer supported. Use CodePipeline_ReadOnlyAccess instead.")]
        public static ManagedPolicy AWSCodePipelineReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCodePipelineReadOnlyAccess");
        public static ManagedPolicy CodePipeline_FullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCodePipeline_FullAccess");
        public static ManagedPolicy CodePipeline_ReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCodePipeline_ReadOnlyAccess");
        public static ManagedPolicy AWSCodeStarFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCodeStarFullAccess");
        public static ManagedPolicy AWSCodeStarNotificationsServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSCodeStarNotificationsServiceRolePolicy");
        public static ManagedPolicy AWSCodeStarServiceRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSCodeStarServiceRole");
        public static ManagedPolicy AWS_ConfigRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWS_ConfigRole");
        [Obsolete(@"This has been deprecated in favour of `AWS_ConfigRole`")]
        public static ManagedPolicy AWSConfigRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSConfigRole");
        public static ManagedPolicy AWSCompromisedKeyQuarantine { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCompromisedKeyQuarantine");
        public static ManagedPolicy AWSCompromisedKeyQuarantineV2 { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSCompromisedKeyQuarantineV2");
        public static ManagedPolicy AWSConfigMultiAccountSetupPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSConfigMultiAccountSetupPolicy");
        public static ManagedPolicy AWSConfigRemediationServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSConfigRemediationServiceRolePolicy");
        public static ManagedPolicy AWSConfigRoleForOrganizations { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSConfigRoleForOrganizations");
        public static ManagedPolicy AWSConfigRulesExecutionRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSConfigRulesExecutionRole");
        public static ManagedPolicy AWSConfigServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSConfigServiceRolePolicy");
        public static ManagedPolicy AWSConfigUserAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSConfigUserAccess");
        public static ManagedPolicy AWSConnector { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSConnector");
        public static ManagedPolicy AWSControlTowerServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSControlTowerServiceRolePolicy");
        public static ManagedPolicy AWSCostAndUsageReportAutomationPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSCostAndUsageReportAutomationPolicy");
        public static ManagedPolicy AWSDataExchangeFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSDataExchangeFullAccess");
        public static ManagedPolicy AWSDataExchangeProviderFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSDataExchangeProviderFullAccess");
        public static ManagedPolicy AWSDataExchangeReadOnly { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSDataExchangeReadOnly");
        public static ManagedPolicy AWSDataExchangeSubscriberFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSDataExchangeSubscriberFullAccess");
        public static ManagedPolicy AWSDataLifecycleManagerServiceRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSDataLifecycleManagerServiceRole");
        public static ManagedPolicy AWSDataLifecycleManagerServiceRoleForAMIManagement { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSDataLifecycleManagerServiceRoleForAMIManagement");
        public static ManagedPolicy AWSDataPipelineRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSDataPipelineRole");
        public static ManagedPolicy AWSDataPipeline_FullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSDataPipeline_FullAccess");
        public static ManagedPolicy AWSDataPipeline_PowerUser { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSDataPipeline_PowerUser");
        public static ManagedPolicy AWSDataSyncFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSDataSyncFullAccess");
        public static ManagedPolicy AWSDataSyncReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSDataSyncReadOnlyAccess");
        public static ManagedPolicy AWSDeepLensLambdaFunctionAccessPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSDeepLensLambdaFunctionAccessPolicy");
        public static ManagedPolicy AWSDeepLensServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSDeepLensServiceRolePolicy");
        public static ManagedPolicy AWSDeepRacerAccountAdminAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSDeepRacerAccountAdminAccess");
        public static ManagedPolicy AWSDeepRacerCloudFormationAccessPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSDeepRacerCloudFormationAccessPolicy");
        public static ManagedPolicy AWSDeepRacerDefaultMultiUserAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSDeepRacerDefaultMultiUserAccess");
        public static ManagedPolicy AWSDeepRacerFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSDeepRacerFullAccess");
        public static ManagedPolicy AWSDeepRacerRoboMakerAccessPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSDeepRacerRoboMakerAccessPolicy");
        public static ManagedPolicy AWSDeepRacerServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSDeepRacerServiceRolePolicy");
        public static ManagedPolicy AWSDenyAll { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSDenyAll");
        public static ManagedPolicy AWSDeviceFarmFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSDeviceFarmFullAccess");
        public static ManagedPolicy AWSDeviceFarmServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSDeviceFarmServiceRolePolicy");
        public static ManagedPolicy AWSDeviceFarmTestGridServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSDeviceFarmTestGridServiceRolePolicy");
        public static ManagedPolicy AWSDirectConnectFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSDirectConnectFullAccess");
        public static ManagedPolicy AWSDirectConnectReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSDirectConnectReadOnlyAccess");
        public static ManagedPolicy AWSDirectConnectServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSDirectConnectServiceRolePolicy");
        public static ManagedPolicy AWSDirectoryServiceFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSDirectoryServiceFullAccess");
        public static ManagedPolicy AWSDirectoryServiceReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSDirectoryServiceReadOnlyAccess");
        public static ManagedPolicy AWSDiscoveryContinuousExportFirehosePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSDiscoveryContinuousExportFirehosePolicy");
        public static ManagedPolicy AWSEC2CapacityReservationFleetRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSEC2CapacityReservationFleetRolePolicy");
        public static ManagedPolicy AWSEC2FleetServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSEC2FleetServiceRolePolicy");
        public static ManagedPolicy AWSEC2SpotFleetServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSEC2SpotFleetServiceRolePolicy");
        public static ManagedPolicy AWSEC2SpotServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSEC2SpotServiceRolePolicy");
        public static ManagedPolicy AWSECRPullThroughCache_ServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSECRPullThroughCache_ServiceRolePolicy");
        public static ManagedPolicy AWSElasticBeanstalkCustomPlatformforEC2Role { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSElasticBeanstalkCustomPlatformforEC2Role");
        public static ManagedPolicy AWSElasticBeanstalkEnhancedHealth { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkEnhancedHealth");
        [Obsolete(@"This policy is deprecated. Please use the AWS managed policy AdministratorAccess-AWSElasticBeanstalk instead.")]
        public static ManagedPolicy AWSElasticBeanstalkFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSElasticBeanstalkFullAccess");
        public static ManagedPolicy AWSElasticBeanstalkMaintenance { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSElasticBeanstalkMaintenance");
        public static ManagedPolicy AWSElasticBeanstalkManagedUpdatesCustomerRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSElasticBeanstalkManagedUpdatesCustomerRolePolicy");
        public static ManagedPolicy AWSElasticBeanstalkManagedUpdatesServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSElasticBeanstalkManagedUpdatesServiceRolePolicy");
        public static ManagedPolicy AWSElasticBeanstalkMulticontainerDocker { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSElasticBeanstalkMulticontainerDocker");
        [Obsolete(@"This policy is deprecated. Please use the AWS managed policy AWSElasticBeanstalkReadOnly instead.")]
        public static ManagedPolicy AWSElasticBeanstalkReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSElasticBeanstalkReadOnlyAccess");
        public static ManagedPolicy AWSElasticBeanstalkReadOnly { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSElasticBeanstalkReadOnly");
        public static ManagedPolicy AWSElasticBeanstalkRoleCWL { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkRoleCWL");
        public static ManagedPolicy AWSElasticBeanstalkRoleCore { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkRoleCore");
        public static ManagedPolicy AWSElasticBeanstalkRoleECS { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkRoleECS");
        public static ManagedPolicy AWSElasticBeanstalkRoleRDS { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkRoleRDS");
        public static ManagedPolicy AWSElasticBeanstalkRoleSNS { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkRoleSNS");
        public static ManagedPolicy AWSElasticBeanstalkRoleWorkerTier { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkRoleWorkerTier");
        public static ManagedPolicy AWSElasticBeanstalkService { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkService");
        public static ManagedPolicy AWSElasticBeanstalkServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSElasticBeanstalkServiceRolePolicy");
        public static ManagedPolicy AWSElasticBeanstalkWebTier { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSElasticBeanstalkWebTier");
        [Obsolete(@"This has been deprecated in favour of `AWSElasticBeanstalkWorkerTier`")]
        public static ManagedPolicy AWSElasticBeanstakWorkerTier { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSElasticBeanstalkWorkerTier");
        public static ManagedPolicy AWSElasticBeanstalkWorkerTier { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSElasticBeanstalkWorkerTier");
        public static ManagedPolicy AWSElasticDisasterRecoveryAgentInstallationPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSElasticDisasterRecoveryAgentInstallationPolicy");
        public static ManagedPolicy AWSElasticDisasterRecoveryAgentPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSElasticDisasterRecoveryAgentPolicy");
        public static ManagedPolicy AWSElasticDisasterRecoveryConsoleFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSElasticDisasterRecoveryConsoleFullAccess");
        public static ManagedPolicy AWSElasticDisasterRecoveryConversionServerPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSElasticDisasterRecoveryConversionServerPolicy");
        public static ManagedPolicy AWSElasticDisasterRecoveryEc2InstancePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSElasticDisasterRecoveryEc2InstancePolicy");
        public static ManagedPolicy AWSElasticDisasterRecoveryFailbackInstallationPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSElasticDisasterRecoveryFailbackInstallationPolicy");
        public static ManagedPolicy AWSElasticDisasterRecoveryFailbackPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSElasticDisasterRecoveryFailbackPolicy");
        public static ManagedPolicy AWSElasticDisasterRecoveryReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSElasticDisasterRecoveryReadOnlyAccess");
        public static ManagedPolicy AWSElasticDisasterRecoveryRecoveryInstancePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSElasticDisasterRecoveryRecoveryInstancePolicy");
        public static ManagedPolicy AWSElasticDisasterRecoveryReplicationServerPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSElasticDisasterRecoveryReplicationServerPolicy");
        public static ManagedPolicy AWSElasticDisasterRecoveryServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSElasticDisasterRecoveryServiceRolePolicy");
        public static ManagedPolicy AWSElasticDisasterRecoveryStagingAccountPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSElasticDisasterRecoveryStagingAccountPolicy");
        public static ManagedPolicy AWSElasticDisasterRecoveryStagingAccountPolicy_v2 { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSElasticDisasterRecoveryStagingAccountPolicy_v2");
        public static ManagedPolicy AWSElasticLoadBalancingClassicServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSElasticLoadBalancingClassicServiceRolePolicy");
        public static ManagedPolicy AWSElasticLoadBalancingServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSElasticLoadBalancingServiceRolePolicy");
        public static ManagedPolicy AWSElementalMediaConvertFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSElementalMediaConvertFullAccess");
        public static ManagedPolicy AWSElementalMediaConvertReadOnly { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSElementalMediaConvertReadOnly");
        public static ManagedPolicy AWSElementalMediaLiveFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSElementalMediaLiveFullAccess");
        public static ManagedPolicy AWSElementalMediaLiveReadOnly { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSElementalMediaLiveReadOnly");
        public static ManagedPolicy AWSElementalMediaPackageFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSElementalMediaPackageFullAccess");
        public static ManagedPolicy AWSElementalMediaPackageReadOnly { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSElementalMediaPackageReadOnly");
        public static ManagedPolicy AWSElementalMediaStoreFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSElementalMediaStoreFullAccess");
        public static ManagedPolicy AWSElementalMediaStoreReadOnly { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSElementalMediaStoreReadOnly");
        public static ManagedPolicy AWSElementalMediaTailorFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSElementalMediaTailorFullAccess");
        public static ManagedPolicy AWSElementalMediaTailorReadOnly { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSElementalMediaTailorReadOnly");
        public static ManagedPolicy AWSEnhancedClassicNetworkingMangementPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSEnhancedClassicNetworkingMangementPolicy");
        public static ManagedPolicy AWSFMAdminFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSFMAdminFullAccess");
        public static ManagedPolicy AWSFMAdminReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSFMAdminReadOnlyAccess");
        public static ManagedPolicy AWSFMMemberReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSFMMemberReadOnlyAccess");
        public static ManagedPolicy AWSFaultInjectionSimulatorEC2Access { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSFaultInjectionSimulatorEC2Access");
        public static ManagedPolicy AWSFaultInjectionSimulatorECSAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSFaultInjectionSimulatorECSAccess");
        public static ManagedPolicy AWSFaultInjectionSimulatorEKSAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSFaultInjectionSimulatorEKSAccess");
        public static ManagedPolicy AWSFaultInjectionSimulatorNetworkAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSFaultInjectionSimulatorNetworkAccess");
        public static ManagedPolicy AWSFaultInjectionSimulatorRDSAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSFaultInjectionSimulatorRDSAccess");
        public static ManagedPolicy AWSFaultInjectionSimulatorSSMAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSFaultInjectionSimulatorSSMAccess");
        public static ManagedPolicy AWSForWordPressPluginPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSForWordPressPluginPolicy");
        public static ManagedPolicy AWSGlobalAcceleratorSLRPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSGlobalAcceleratorSLRPolicy");
        public static ManagedPolicy AWSGlueConsoleFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSGlueConsoleFullAccess");
        public static ManagedPolicy AWSGlueConsoleSageMakerNotebookFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSGlueConsoleSageMakerNotebookFullAccess");
        public static ManagedPolicy AWSGlueDataBrewServiceRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSGlueDataBrewServiceRole");
        public static ManagedPolicy AWSGlueSchemaRegistryFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSGlueSchemaRegistryFullAccess");
        public static ManagedPolicy AWSGlueSchemaRegistryReadonlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSGlueSchemaRegistryReadonlyAccess");
        public static ManagedPolicy AWSGlueServiceNotebookRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSGlueServiceNotebookRole");
        public static ManagedPolicy AWSGlueServiceRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole");
        public static ManagedPolicy AWSGrafanaAccountAdministrator { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSGrafanaAccountAdministrator");
        public static ManagedPolicy AWSGrafanaConsoleReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSGrafanaConsoleReadOnlyAccess");
        public static ManagedPolicy AWSGrafanaWorkspacePermissionManagement { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSGrafanaWorkspacePermissionManagement");
        public static ManagedPolicy AWSGreengrassFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSGreengrassFullAccess");
        [Obsolete(@"Please use AWSGreengrassFullAccess instead")]
        public static ManagedPolicy AWSGreengrassFullccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSGreengrassFullAccess");
        public static ManagedPolicy AWSGreengrassReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSGreengrassReadOnlyAccess");
        public static ManagedPolicy AWSGreengrassResourceAccessRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSGreengrassResourceAccessRolePolicy");
        public static ManagedPolicy AWSHealthFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSHealthFullAccess");
        public static ManagedPolicy AWSHealth_EventProcessorServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSHealth_EventProcessorServiceRolePolicy");
        public static ManagedPolicy AWSIPAMServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSIPAMServiceRolePolicy");
        public static ManagedPolicy AWSIQContractServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSIQContractServiceRolePolicy");
        public static ManagedPolicy AWSIQFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSIQFullAccess");
        public static ManagedPolicy AWSIQPermissionServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSIQPermissionServiceRolePolicy");
        public static ManagedPolicy AWSIdentitySyncFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSIdentitySyncFullAccess");
        public static ManagedPolicy AWSIdentitySyncReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSIdentitySyncReadOnlyAccess");
        public static ManagedPolicy AWSImageBuilderFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSImageBuilderFullAccess");
        public static ManagedPolicy AWSImageBuilderReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSImageBuilderReadOnlyAccess");
        public static ManagedPolicy AWSImportExportFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSImportExportFullAccess");
        public static ManagedPolicy AWSImportExportReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSImportExportReadOnlyAccess");
        public static ManagedPolicy AWSIncidentManagerResolverAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSIncidentManagerResolverAccess");
        public static ManagedPolicy AWSIncidentManagerServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSIncidentManagerServiceRolePolicy");
        public static ManagedPolicy AWSIoT1ClickFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSIoT1ClickFullAccess");
        public static ManagedPolicy AWSIoT1ClickReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSIoT1ClickReadOnlyAccess");
        public static ManagedPolicy AWSIoTAnalyticsFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSIoTAnalyticsFullAccess");
        public static ManagedPolicy AWSIoTAnalyticsReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSIoTAnalyticsReadOnlyAccess");
        public static ManagedPolicy AWSIoTConfigAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSIoTConfigAccess");
        public static ManagedPolicy AWSIoTConfigReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSIoTConfigReadOnlyAccess");
        public static ManagedPolicy AWSIoTDataAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSIoTDataAccess");
        public static ManagedPolicy AWSIoTDeviceDefenderAddThingsToThingGroupMitigationAction { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSIoTDeviceDefenderAddThingsToThingGroupMitigationAction");
        public static ManagedPolicy AWSIoTDeviceDefenderAudit { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSIoTDeviceDefenderAudit");
        public static ManagedPolicy AWSIoTDeviceDefenderEnableIoTLoggingMitigationAction { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSIoTDeviceDefenderEnableIoTLoggingMitigationAction");
        public static ManagedPolicy AWSIoTDeviceDefenderPublishFindingsToSNSMitigationAction { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSIoTDeviceDefenderPublishFindingsToSNSMitigationAction");
        public static ManagedPolicy AWSIoTDeviceDefenderReplaceDefaultPolicyMitigationAction { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSIoTDeviceDefenderReplaceDefaultPolicyMitigationAction");
        public static ManagedPolicy AWSIoTDeviceDefenderUpdateCACertMitigationAction { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSIoTDeviceDefenderUpdateCACertMitigationAction");
        public static ManagedPolicy AWSIoTDeviceDefenderUpdateDeviceCertMitigationAction { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSIoTDeviceDefenderUpdateDeviceCertMitigationAction");
        public static ManagedPolicy AWSIoTDeviceTesterForFreeRTOSFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSIoTDeviceTesterForFreeRTOSFullAccess");
        public static ManagedPolicy AWSIoTDeviceTesterForGreengrassFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSIoTDeviceTesterForGreengrassFullAccess");
        public static ManagedPolicy AWSIoTEventsFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSIoTEventsFullAccess");
        public static ManagedPolicy AWSIoTEventsReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSIoTEventsReadOnlyAccess");
        public static ManagedPolicy AWSIoTFleetHubFederationAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSIoTFleetHubFederationAccess");
        public static ManagedPolicy AWSIoTFleetwiseServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSIoTFleetwiseServiceRolePolicy");
        public static ManagedPolicy AWSIoTFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSIoTFullAccess");
        public static ManagedPolicy AWSIoTLogging { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSIoTLogging");
        public static ManagedPolicy AWSIoTOTAUpdate { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSIoTOTAUpdate");
        public static ManagedPolicy AWSIoTRuleActions { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSIoTRuleActions");
        public static ManagedPolicy AWSIoTSiteWiseConsoleFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSIoTSiteWiseConsoleFullAccess");
        public static ManagedPolicy AWSIoTSiteWiseFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSIoTSiteWiseFullAccess");
        public static ManagedPolicy AWSIoTSiteWiseMonitorPortalAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSIoTSiteWiseMonitorPortalAccess");
        public static ManagedPolicy AWSIoTSiteWiseMonitorServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSIoTSiteWiseMonitorServiceRolePolicy");
        public static ManagedPolicy AWSIoTSiteWiseReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSIoTSiteWiseReadOnlyAccess");
        public static ManagedPolicy AWSIoTThingsRegistration { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSIoTThingsRegistration");
        public static ManagedPolicy AWSIoTWirelessDataAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSIoTWirelessDataAccess");
        public static ManagedPolicy AWSIoTWirelessFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSIoTWirelessFullAccess");
        public static ManagedPolicy AWSIoTWirelessFullPublishAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSIoTWirelessFullPublishAccess");
        public static ManagedPolicy AWSIoTWirelessGatewayCertManager { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSIoTWirelessGatewayCertManager");
        public static ManagedPolicy AWSIoTWirelessLogging { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSIoTWirelessLogging");
        public static ManagedPolicy AWSIoTWirelessReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSIoTWirelessReadOnlyAccess");
        public static ManagedPolicy AWSIotRoboRunnerFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSIotRoboRunnerFullAccess");
        public static ManagedPolicy AWSIotRoboRunnerReadOnly { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSIotRoboRunnerReadOnly");
        public static ManagedPolicy AWSIotRoboRunnerServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSIotRoboRunnerServiceRolePolicy");
        public static ManagedPolicy AWSKeyManagementServiceCustomKeyStoresServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSKeyManagementServiceCustomKeyStoresServiceRolePolicy");
        public static ManagedPolicy AWSKeyManagementServiceMultiRegionKeysServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSKeyManagementServiceMultiRegionKeysServiceRolePolicy");
        public static ManagedPolicy AWSKeyManagementServicePowerUser { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSKeyManagementServicePowerUser");
        public static ManagedPolicy AWSLakeFormationCrossAccountManager { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSLakeFormationCrossAccountManager");
        public static ManagedPolicy AWSLakeFormationDataAdmin { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSLakeFormationDataAdmin");
        public static ManagedPolicy AWSLambdaBasicExecutionRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole");
        public static ManagedPolicy AWSLambdaDynamoDBExecutionRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSLambdaDynamoDBExecutionRole");
        public static ManagedPolicy AWSLambdaENIManagementAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSLambdaENIManagementAccess");
        public static ManagedPolicy AWSLambdaExecute { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSLambdaExecute");
        [Obsolete(@"This has been deprecated in favour of `LambdaFullAccess`")]
        public static ManagedPolicy AWSLambdaFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSLambdaFullAccess");
        public static ManagedPolicy LambdaFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSLambda_FullAccess");
        public static ManagedPolicy AWSLambdaInvocationDynamoDB { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSLambdaInvocation-DynamoDB");
        public static ManagedPolicy AWSLambdaKinesisExecutionRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSLambdaKinesisExecutionRole");
        [Obsolete(@"This has been deprecated in favour of `LambdaReadOnlyAccess`")]
        public static ManagedPolicy AWSLambdaReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSLambdaReadOnlyAccess");
        public static ManagedPolicy LambdaReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSLambda_ReadOnlyAccess");
        public static ManagedPolicy AWSLambdaMSKExecutionRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSLambdaMSKExecutionRole");
        public static ManagedPolicy AWSLambdaReplicator { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSLambdaReplicator");
        public static ManagedPolicy AWSLambdaRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSLambdaRole");
        public static ManagedPolicy AWSLambdaSQSQueueExecutionRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSLambdaSQSQueueExecutionRole");
        public static ManagedPolicy AWSLambdaVPCAccessExecutionRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole");
        public static ManagedPolicy AWSLicenseManagerConsumptionPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSLicenseManagerConsumptionPolicy");
        public static ManagedPolicy AWSLicenseManagerLinuxSubscriptionsServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSLicenseManagerLinuxSubscriptionsServiceRolePolicy");
        public static ManagedPolicy AWSLicenseManagerMasterAccountRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSLicenseManagerMasterAccountRolePolicy");
        public static ManagedPolicy AWSLicenseManagerMemberAccountRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSLicenseManagerMemberAccountRolePolicy");
        public static ManagedPolicy AWSLicenseManagerServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSLicenseManagerServiceRolePolicy");
        public static ManagedPolicy AWSLicenseManagerUserSubscriptionsServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSLicenseManagerUserSubscriptionsServiceRolePolicy");
        public static ManagedPolicy AWSM2ServicePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSM2ServicePolicy");
        public static ManagedPolicy AWSManagedServicesDeploymentToolkitPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSManagedServicesDeploymentToolkitPolicy");
        public static ManagedPolicy AWSManagedServices_DetectiveControlsConfig_ServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSManagedServices_DetectiveControlsConfig_ServiceRolePolicy");
        public static ManagedPolicy AWSManagedServices_EventsServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSManagedServices_EventsServiceRolePolicy");
        public static ManagedPolicy AWSMarketplaceAmiIngestion { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSMarketplaceAmiIngestion");
        public static ManagedPolicy AWSMarketplaceFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSMarketplaceFullAccess");
        public static ManagedPolicy AWSMarketplaceGetEntitlements { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSMarketplaceGetEntitlements");
        public static ManagedPolicy AWSMarketplaceImageBuildFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSMarketplaceImageBuildFullAccess");
        public static ManagedPolicy AWSMarketplaceLicenseManagementServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSMarketplaceLicenseManagementServiceRolePolicy");
        public static ManagedPolicy AWSMarketplaceManageSubscriptions { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSMarketplaceManageSubscriptions");
        public static ManagedPolicy AWSMarketplaceMeteringFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSMarketplaceMeteringFullAccess");
        public static ManagedPolicy AWSMarketplaceMeteringRegisterUsage { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSMarketplaceMeteringRegisterUsage");
        public static ManagedPolicy AWSMarketplaceProcurementSystemAdminFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSMarketplaceProcurementSystemAdminFullAccess");
        public static ManagedPolicy AWSMarketplacePurchaseOrdersServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSMarketplacePurchaseOrdersServiceRolePolicy");
        public static ManagedPolicy AWSMarketplaceReadonly { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSMarketplaceRead-only");
        public static ManagedPolicy AWSMarketplaceSellerFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSMarketplaceSellerFullAccess");
        public static ManagedPolicy AWSMarketplaceSellerProductsFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSMarketplaceSellerProductsFullAccess");
        public static ManagedPolicy AWSMarketplaceSellerProductsReadOnly { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSMarketplaceSellerProductsReadOnly");
        public static ManagedPolicy AWSMediaTailorServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSMediaTailorServiceRolePolicy");
        public static ManagedPolicy AWSMigrationHubDMSAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSMigrationHubDMSAccess");
        public static ManagedPolicy AWSMigrationHubDiscoveryAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSMigrationHubDiscoveryAccess");
        public static ManagedPolicy AWSMigrationHubFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSMigrationHubFullAccess");
        public static ManagedPolicy AWSMigrationHubOrchestratorConsoleFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSMigrationHubOrchestratorConsoleFullAccess");
        public static ManagedPolicy AWSMigrationHubOrchestratorInstanceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSMigrationHubOrchestratorInstanceRolePolicy");
        public static ManagedPolicy AWSMigrationHubOrchestratorPlugin { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSMigrationHubOrchestratorPlugin");
        public static ManagedPolicy AWSMigrationHubOrchestratorServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSMigrationHubOrchestratorServiceRolePolicy");
        public static ManagedPolicy AWSMigrationHubRefactorSpacesFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSMigrationHubRefactorSpacesFullAccess");
        public static ManagedPolicy AWSMigrationHubRefactorSpacesServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSMigrationHubRefactorSpacesServiceRolePolicy");
        public static ManagedPolicy AWSMigrationHubSMSAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSMigrationHubSMSAccess");
        public static ManagedPolicy AWSMigrationHubStrategyCollector { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSMigrationHubStrategyCollector");
        public static ManagedPolicy AWSMigrationHubStrategyConsoleFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSMigrationHubStrategyConsoleFullAccess");
        public static ManagedPolicy AWSMigrationHubStrategyServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSMigrationHubStrategyServiceRolePolicy");
        public static ManagedPolicy AWSMobileHub_FullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSMobileHub_FullAccess");
        public static ManagedPolicy AWSMobileHub_ReadOnly { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSMobileHub_ReadOnly");
        [Obsolete(@"This policy is deprecated and will be removed in a future release. Please use AWSMobileHub_FullAccess or AWSMobileHub_ReadOnly instead.")]
        public static ManagedPolicy AWSMobileHub_ServiceUseOnly { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSMobileHub_ServiceUseOnly");
        public static ManagedPolicy AWSNetworkFirewallServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSNetworkFirewallServiceRolePolicy");
        public static ManagedPolicy AWSNetworkManagerCloudWANServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSNetworkManagerCloudWANServiceRolePolicy");
        public static ManagedPolicy AWSNetworkManagerFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSNetworkManagerFullAccess");
        public static ManagedPolicy AWSNetworkManagerReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSNetworkManagerReadOnlyAccess");
        public static ManagedPolicy AWSNetworkManagerServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSNetworkManagerServiceRolePolicy");
        public static ManagedPolicy AWSOpsWorksCMInstanceProfileRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSOpsWorksCMInstanceProfileRole");
        public static ManagedPolicy AWSOpsWorksCMServiceRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSOpsWorksCMServiceRole");
        public static ManagedPolicy AWSOpsWorksCloudWatchLogs { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSOpsWorksCloudWatchLogs");
        [Obsolete(@"This policy is deprecated and will be removed in a future release. Please use OpsWorks_FullAccess instead.")]
        public static ManagedPolicy AWSOpsWorksFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSOpsWorksFullAccess");
        public static ManagedPolicy AWSOpsWorksInstanceRegistration { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSOpsWorksInstanceRegistration");
        [Obsolete(@"This policy is deprecated and will be removed in a future release. Please use AWSOpsWorksRegisterCLI_EC2 or AWSOpsWorksRegisterCLI_OnPremises instead.")]
        public static ManagedPolicy AWSOpsWorksRegisterCLI { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSOpsWorksRegisterCLI");
        [Obsolete(@"This policy is deprecated and will be removed in a future release. Please use AWSOpsWorksCMServiceRole instead.")]
        public static ManagedPolicy AWSOpsWorksRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSOpsWorksRole");
        [Obsolete(@"This policy is deprecated and will be removed in a future release. Please use AWSQuickSightDescribeRDS instead.")]
        public static ManagedPolicy AWSQuickSightDescribeRD { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSQuickSightDescribeRDS");
        public static ManagedPolicy AWSOpsWorksRegisterCLI_EC2 { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSOpsWorksRegisterCLI_EC2");
        public static ManagedPolicy AWSOpsWorksRegisterCLI_OnPremises { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSOpsWorksRegisterCLI_OnPremises");
        public static ManagedPolicy OpsWorks_FullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSOpsWorks_FullAccess");
        public static ManagedPolicy AWSOrganizationsFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSOrganizationsFullAccess");
        public static ManagedPolicy AWSOrganizationsReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSOrganizationsReadOnlyAccess");
        public static ManagedPolicy AWSOrganizationsServiceTrustPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSOrganizationsServiceTrustPolicy");
        public static ManagedPolicy AWSOutpostsAuthorizeServerPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSOutpostsAuthorizeServerPolicy");
        public static ManagedPolicy AWSOutpostsServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSOutpostsServiceRolePolicy");
        public static ManagedPolicy AWSPanoramaApplianceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSPanoramaApplianceRolePolicy");
        public static ManagedPolicy AWSPanoramaApplianceServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSPanoramaApplianceServiceRolePolicy");
        public static ManagedPolicy AWSPanoramaFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSPanoramaFullAccess");
        public static ManagedPolicy AWSPanoramaGreengrassGroupRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSPanoramaGreengrassGroupRolePolicy");
        public static ManagedPolicy AWSPanoramaSageMakerRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSPanoramaSageMakerRolePolicy");
        public static ManagedPolicy AWSPanoramaServiceLinkedRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSPanoramaServiceLinkedRolePolicy");
        public static ManagedPolicy AWSPanoramaServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSPanoramaServiceRolePolicy");
        public static ManagedPolicy AWSPriceListServiceFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSPriceListServiceFullAccess");
        public static ManagedPolicy AWSPrivateCAAuditor { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSPrivateCAAuditor");
        public static ManagedPolicy AWSPrivateCAFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSPrivateCAFullAccess");
        public static ManagedPolicy AWSPrivateCAPrivilegedUser { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSPrivateCAPrivilegedUser");
        public static ManagedPolicy AWSPrivateCAReadOnly { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSPrivateCAReadOnly");
        public static ManagedPolicy AWSPrivateCAUser { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSPrivateCAUser");
        public static ManagedPolicy AWSPrivateMarketplaceAdminFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSPrivateMarketplaceAdminFullAccess");
        public static ManagedPolicy AWSPrivateMarketplaceRequests { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSPrivateMarketplaceRequests");
        public static ManagedPolicy AWSPrivateNetworksServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSPrivateNetworksServiceRolePolicy");
        public static ManagedPolicy AWSProtonCodeBuildProvisioningBasicAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSProtonCodeBuildProvisioningBasicAccess");
        public static ManagedPolicy AWSProtonCodeBuildProvisioningServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSProtonCodeBuildProvisioningServiceRolePolicy");
        public static ManagedPolicy AWSProtonDeveloperAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSProtonDeveloperAccess");
        public static ManagedPolicy AWSProtonFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSProtonFullAccess");
        public static ManagedPolicy AWSProtonReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSProtonReadOnlyAccess");
        public static ManagedPolicy AWSProtonSyncServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSProtonSyncServiceRolePolicy");
        public static ManagedPolicy AWSPurchaseOrdersServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSPurchaseOrdersServiceRolePolicy");
        public static ManagedPolicy AWSQuickSightDescribeRDS { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSQuickSightDescribeRDS");
        public static ManagedPolicy AWSQuickSightDescribeRedshift { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSQuickSightDescribeRedshift");
        public static ManagedPolicy AWSQuickSightElasticsearchPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSQuickSightElasticsearchPolicy");
        public static ManagedPolicy AWSQuickSightIoTAnalyticsAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSQuickSightIoTAnalyticsAccess");
        public static ManagedPolicy AWSQuickSightListIAM { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSQuickSightListIAM");
        public static ManagedPolicy AWSQuickSightSageMakerPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSQuickSightSageMakerPolicy");
        public static ManagedPolicy AWSQuickSightTimestreamPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSQuickSightTimestreamPolicy");
        public static ManagedPolicy AWSQuicksightAthenaAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSQuicksightAthenaAccess");
        public static ManagedPolicy AWSQuicksightOpenSearchPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSQuicksightOpenSearchPolicy");
        public static ManagedPolicy AWSReachabilityAnalyzerServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSReachabilityAnalyzerServiceRolePolicy");
        public static ManagedPolicy AWSRefactoringToolkitFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSRefactoringToolkitFullAccess");
        public static ManagedPolicy AWSRefactoringToolkitSidecarPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSRefactoringToolkitSidecarPolicy");
        public static ManagedPolicy AWSResourceAccessManagerFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSResourceAccessManagerFullAccess");
        public static ManagedPolicy AWSResourceAccessManagerReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSResourceAccessManagerReadOnlyAccess");
        public static ManagedPolicy AWSResourceAccessManagerResourceShareParticipantAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSResourceAccessManagerResourceShareParticipantAccess");
        public static ManagedPolicy AWSResourceAccessManagerServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSResourceAccessManagerServiceRolePolicy");
        public static ManagedPolicy AWSResourceExplorerFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSResourceExplorerFullAccess");
        public static ManagedPolicy AWSResourceExplorerReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSResourceExplorerReadOnlyAccess");
        public static ManagedPolicy AWSResourceExplorerServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSResourceExplorerServiceRolePolicy");
        public static ManagedPolicy AWSResourceGroupsReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSResourceGroupsReadOnlyAccess");
        public static ManagedPolicy AWSRoboMakerReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSRoboMakerReadOnlyAccess");
        public static ManagedPolicy AWSRoboMakerServicePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSRoboMakerServicePolicy");
        public static ManagedPolicy AWSRoboMakerServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSRoboMakerServiceRolePolicy");
        public static ManagedPolicy AWSRoboMaker_FullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSRoboMaker_FullAccess");
        public static ManagedPolicy AWSRolesAnywhereServicePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSRolesAnywhereServicePolicy");
        public static ManagedPolicy AWSSSMForSAPServiceLinkedRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSSSMForSAPServiceLinkedRolePolicy");
        public static ManagedPolicy AWSSSMOpsInsightsServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSSSMOpsInsightsServiceRolePolicy");
        public static ManagedPolicy AWSSSODirectoryAdministrator { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSSSODirectoryAdministrator");
        public static ManagedPolicy AWSSSODirectoryReadOnly { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSSSODirectoryReadOnly");
        public static ManagedPolicy AWSSSOMasterAccountAdministrator { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSSSOMasterAccountAdministrator");
        public static ManagedPolicy AWSSSOMemberAccountAdministrator { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSSSOMemberAccountAdministrator");
        public static ManagedPolicy AWSSSOReadOnly { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSSSOReadOnly");
        public static ManagedPolicy AWSSSOServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSSSOServiceRolePolicy");
        public static ManagedPolicy AWSSavingsPlansFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSSavingsPlansFullAccess");
        public static ManagedPolicy AWSSavingsPlansReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSSavingsPlansReadOnlyAccess");
        public static ManagedPolicy AWSSecurityHubFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSSecurityHubFullAccess");
        public static ManagedPolicy AWSSecurityHubOrganizationsAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSSecurityHubOrganizationsAccess");
        public static ManagedPolicy AWSSecurityHubReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSSecurityHubReadOnlyAccess");
        public static ManagedPolicy AWSSecurityHubServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSSecurityHubServiceRolePolicy");
        public static ManagedPolicy AWSServiceCatalogAdminFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSServiceCatalogAdminFullAccess");
        public static ManagedPolicy AWSServiceCatalogAdminReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSServiceCatalogAdminReadOnlyAccess");
        public static ManagedPolicy AWSServiceCatalogAppRegistryFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSServiceCatalogAppRegistryFullAccess");
        public static ManagedPolicy AWSServiceCatalogAppRegistryReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSServiceCatalogAppRegistryReadOnlyAccess");
        public static ManagedPolicy AWSServiceCatalogAppRegistryServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSServiceCatalogAppRegistryServiceRolePolicy");
        public static ManagedPolicy AWSServiceCatalogEndUserFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSServiceCatalogEndUserFullAccess");
        public static ManagedPolicy AWSServiceCatalogEndUserReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSServiceCatalogEndUserReadOnlyAccess");
        public static ManagedPolicy AWSServiceCatalogSyncServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSServiceCatalogSyncServiceRolePolicy");
        public static ManagedPolicy AWSServiceRoleForAmazonEKSNodegroup { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSServiceRoleForAmazonEKSNodegroup");
        public static ManagedPolicy AWSServiceRoleForCloudWatchAlarmsActionSSMServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSServiceRoleForCloudWatchAlarmsActionSSMServiceRolePolicy");
        public static ManagedPolicy AWSServiceRoleForCodeGuruProfiler { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSServiceRoleForCodeGuru-Profiler");
        public static ManagedPolicy AWSServiceRoleForEC2ScheduledInstances { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSServiceRoleForEC2ScheduledInstances");
        public static ManagedPolicy AWSServiceRoleForGroundStationDataflowEndpointGroupPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSServiceRoleForGroundStationDataflowEndpointGroupPolicy");
        public static ManagedPolicy AWSServiceRoleForImageBuilder { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSServiceRoleForImageBuilder");
        public static ManagedPolicy AWSServiceRoleForIoTSiteWise { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSServiceRoleForIoTSiteWise");
        public static ManagedPolicy AWSServiceRoleForLogDeliveryPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSServiceRoleForLogDeliveryPolicy");
        public static ManagedPolicy AWSServiceRoleForMonitronPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSServiceRoleForMonitronPolicy");
        public static ManagedPolicy AWSServiceRoleForSMS { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSServiceRoleForSMS");
        public static ManagedPolicy AWSServiceRolePolicyForBackupReports { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSServiceRolePolicyForBackupReports");
        public static ManagedPolicy AWSShieldDRTAccessPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSShieldDRTAccessPolicy");
        public static ManagedPolicy AWSShieldServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSShieldServiceRolePolicy");
        public static ManagedPolicy AWSStepFunctionsConsoleFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSStepFunctionsConsoleFullAccess");
        public static ManagedPolicy AWSStepFunctionsFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSStepFunctionsFullAccess");
        public static ManagedPolicy AWSStepFunctionsReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSStepFunctionsReadOnlyAccess");
        public static ManagedPolicy AWSStorageGatewayFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSStorageGatewayFullAccess");
        public static ManagedPolicy AWSStorageGatewayReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSStorageGatewayReadOnlyAccess");
        public static ManagedPolicy AWSStorageGatewayServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSStorageGatewayServiceRolePolicy");
        public static ManagedPolicy AWSSupportAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSSupportAccess");
        public static ManagedPolicy AWSSupportAppFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSSupportAppFullAccess");
        public static ManagedPolicy AWSSupportAppReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSSupportAppReadOnlyAccess");
        public static ManagedPolicy AWSSupportPlansFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSSupportPlansFullAccess");
        public static ManagedPolicy AWSSupportPlansReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSSupportPlansReadOnlyAccess");
        public static ManagedPolicy AWSSupportServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSSupportServiceRolePolicy");
        public static ManagedPolicy AWSSystemsManagerAccountDiscoveryServicePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSSystemsManagerAccountDiscoveryServicePolicy");
        public static ManagedPolicy AWSSystemsManagerChangeManagementServicePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSSystemsManagerChangeManagementServicePolicy");
        public static ManagedPolicy AWSSystemsManagerForSAPFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSSystemsManagerForSAPFullAccess");
        public static ManagedPolicy AWSSystemsManagerForSAPReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSSystemsManagerForSAPReadOnlyAccess");
        public static ManagedPolicy AWSSystemsManagerOpsDataSyncServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSSystemsManagerOpsDataSyncServiceRolePolicy");
        public static ManagedPolicy AWSThinkboxAWSPortalAdminPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSThinkboxAWSPortalAdminPolicy");
        public static ManagedPolicy AWSThinkboxAWSPortalGatewayPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSThinkboxAWSPortalGatewayPolicy");
        public static ManagedPolicy AWSThinkboxAWSPortalWorkerPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSThinkboxAWSPortalWorkerPolicy");
        public static ManagedPolicy AWSThinkboxAssetServerPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSThinkboxAssetServerPolicy");
        public static ManagedPolicy AWSThinkboxDeadlineResourceTrackerAccessPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSThinkboxDeadlineResourceTrackerAccessPolicy");
        public static ManagedPolicy AWSThinkboxDeadlineResourceTrackerAdminPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSThinkboxDeadlineResourceTrackerAdminPolicy");
        public static ManagedPolicy AWSThinkboxDeadlineSpotEventPluginAdminPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSThinkboxDeadlineSpotEventPluginAdminPolicy");
        public static ManagedPolicy AWSThinkboxDeadlineSpotEventPluginWorkerPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSThinkboxDeadlineSpotEventPluginWorkerPolicy");
        public static ManagedPolicy AWSTransferConsoleFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSTransferConsoleFullAccess");
        public static ManagedPolicy AWSTransferFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSTransferFullAccess");
        public static ManagedPolicy AWSTransferLoggingAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AWSTransferLoggingAccess");
        public static ManagedPolicy AWSTransferReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSTransferReadOnlyAccess");
        public static ManagedPolicy AWSTrustedAdvisorPriorityFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSTrustedAdvisorPriorityFullAccess");
        public static ManagedPolicy AWSTrustedAdvisorPriorityReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSTrustedAdvisorPriorityReadOnlyAccess");
        public static ManagedPolicy AWSTrustedAdvisorReportingServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSTrustedAdvisorReportingServiceRolePolicy");
        public static ManagedPolicy AWSTrustedAdvisorServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSTrustedAdvisorServiceRolePolicy");
        public static ManagedPolicy AWSVPCS2SVpnServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSVPCS2SVpnServiceRolePolicy");
        public static ManagedPolicy AWSVPCTransitGatewayServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSVPCTransitGatewayServiceRolePolicy");
        public static ManagedPolicy AWSVPCVerifiedAccessServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSVPCVerifiedAccessServiceRolePolicy");
        public static ManagedPolicy AWSVendorInsightsAssessorFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSVendorInsightsAssessorFullAccess");
        public static ManagedPolicy AWSVendorInsightsAssessorReadOnly { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSVendorInsightsAssessorReadOnly");
        public static ManagedPolicy AWSVendorInsightsVendorFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSVendorInsightsVendorFullAccess");
        public static ManagedPolicy AWSVendorInsightsVendorReadOnly { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSVendorInsightsVendorReadOnly");
        public static ManagedPolicy AWSVpcLatticeServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSVpcLatticeServiceRolePolicy");
        public static ManagedPolicy AWSWAFConsoleFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSWAFConsoleFullAccess");
        public static ManagedPolicy AWSWAFConsoleReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSWAFConsoleReadOnlyAccess");
        public static ManagedPolicy AWSWAFFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSWAFFullAccess");
        public static ManagedPolicy AWSWAFReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSWAFReadOnlyAccess");
        public static ManagedPolicy AWSWellArchitectedOrganizationsServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AWSWellArchitectedOrganizationsServiceRolePolicy");
        public static ManagedPolicy AWSWickrFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSWickrFullAccess");
        public static ManagedPolicy AWSXrayCrossAccountSharingConfiguration { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSXrayCrossAccountSharingConfiguration");
        public static ManagedPolicy AWSXrayFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSXrayFullAccess");
        public static ManagedPolicy AWSXrayReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSXrayReadOnlyAccess");
        public static ManagedPolicy AWSXrayWriteOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess");
        public static ManagedPolicy AWSXRayDaemonWriteAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess");
        public static ManagedPolicy AccessAnalyzerServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AccessAnalyzerServiceRolePolicy");
        public static ManagedPolicy AdministratorAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AdministratorAccess");
        public static ManagedPolicy AdministratorAccessAWSElasticBeanstalk { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AdministratorAccess-AWSElasticBeanstalk");
        public static ManagedPolicy AdministratorAccessAmplify { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AdministratorAccess-Amplify");
        public static ManagedPolicy AlexaForBusinessDeviceSetup { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AlexaForBusinessDeviceSetup");
        public static ManagedPolicy AlexaForBusinessFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AlexaForBusinessFullAccess");
        public static ManagedPolicy AlexaForBusinessGatewayExecution { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AlexaForBusinessGatewayExecution");
        public static ManagedPolicy AlexaForBusinessLifesizeDelegatedAccessPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AlexaForBusinessLifesizeDelegatedAccessPolicy");
        public static ManagedPolicy AlexaForBusinessNetworkProfileServicePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AlexaForBusinessNetworkProfileServicePolicy");
        public static ManagedPolicy AlexaForBusinessPolyDelegatedAccessPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AlexaForBusinessPolyDelegatedAccessPolicy");
        public static ManagedPolicy AlexaForBusinessReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AlexaForBusinessReadOnlyAccess");
        public static ManagedPolicy AmazonAPIGatewayAdministrator { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonAPIGatewayAdministrator");
        public static ManagedPolicy AmazonAPIGatewayInvokeFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonAPIGatewayInvokeFullAccess");
        public static ManagedPolicy AmazonAPIGatewayPushToCloudWatchLogs { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs");
        public static ManagedPolicy AmazonAppFlowFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonAppFlowFullAccess");
        public static ManagedPolicy AmazonAppFlowReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonAppFlowReadOnlyAccess");
        public static ManagedPolicy AmazonAppStreamFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonAppStreamFullAccess");
        public static ManagedPolicy AmazonAppStreamPCAAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonAppStreamPCAAccess");
        public static ManagedPolicy AmazonAppStreamReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonAppStreamReadOnlyAccess");
        public static ManagedPolicy AmazonAppStreamServiceAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonAppStreamServiceAccess");
        public static ManagedPolicy AmazonAthenaFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonAthenaFullAccess");
        public static ManagedPolicy AmazonAugmentedAIFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonAugmentedAIFullAccess");
        public static ManagedPolicy AmazonAugmentedAIHumanLoopFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonAugmentedAIHumanLoopFullAccess");
        public static ManagedPolicy AmazonAugmentedAIIntegratedAPIAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonAugmentedAIIntegratedAPIAccess");
        public static ManagedPolicy AmazonBraketFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonBraketFullAccess");
        public static ManagedPolicy AmazonBraketJobsExecutionPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonBraketJobsExecutionPolicy");
        public static ManagedPolicy AmazonBraketServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonBraketServiceRolePolicy");
        public static ManagedPolicy AmazonChimeFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonChimeFullAccess");
        public static ManagedPolicy AmazonChimeReadOnly { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonChimeReadOnly");
        public static ManagedPolicy AmazonChimeSDK { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonChimeSDK");
        public static ManagedPolicy AmazonChimeSDKMediaPipelinesServiceLinkedRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonChimeSDKMediaPipelinesServiceLinkedRolePolicy");
        public static ManagedPolicy AmazonChimeServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonChimeServiceRolePolicy");
        public static ManagedPolicy AmazonChimeTranscriptionServiceLinkedRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonChimeTranscriptionServiceLinkedRolePolicy");
        public static ManagedPolicy AmazonChimeUserManagement { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonChimeUserManagement");
        public static ManagedPolicy AmazonChimeVoiceConnectorServiceLinkedRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonChimeVoiceConnectorServiceLinkedRolePolicy");
        public static ManagedPolicy AmazonCloudDirectoryFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonCloudDirectoryFullAccess");
        public static ManagedPolicy AmazonCloudDirectoryReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonCloudDirectoryReadOnlyAccess");
        public static ManagedPolicy AmazonCloudWatchEvidentlyFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonCloudWatchEvidentlyFullAccess");
        public static ManagedPolicy AmazonCloudWatchEvidentlyReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonCloudWatchEvidentlyReadOnlyAccess");
        public static ManagedPolicy AmazonCloudWatchEvidentlyServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonCloudWatchEvidentlyServiceRolePolicy");
        public static ManagedPolicy AmazonCloudWatchRUMFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonCloudWatchRUMFullAccess");
        public static ManagedPolicy AmazonCloudWatchRUMReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonCloudWatchRUMReadOnlyAccess");
        public static ManagedPolicy AmazonCloudWatchRUMServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonCloudWatchRUMServiceRolePolicy");
        public static ManagedPolicy AmazonCodeGuruProfilerAgentAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonCodeGuruProfilerAgentAccess");
        public static ManagedPolicy AmazonCodeGuruProfilerFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonCodeGuruProfilerFullAccess");
        public static ManagedPolicy AmazonCodeGuruProfilerReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonCodeGuruProfilerReadOnlyAccess");
        public static ManagedPolicy AmazonCodeGuruReviewerFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonCodeGuruReviewerFullAccess");
        public static ManagedPolicy AmazonCodeGuruReviewerReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonCodeGuruReviewerReadOnlyAccess");
        public static ManagedPolicy AmazonCodeGuruReviewerServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonCodeGuruReviewerServiceRolePolicy");
        public static ManagedPolicy AmazonCognitoDeveloperAuthenticatedIdentities { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonCognitoDeveloperAuthenticatedIdentities");
        public static ManagedPolicy AmazonCognitoIdpEmailServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonCognitoIdpEmailServiceRolePolicy");
        public static ManagedPolicy AmazonCognitoIdpServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonCognitoIdpServiceRolePolicy");
        public static ManagedPolicy AmazonCognitoPowerUser { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonCognitoPowerUser");
        public static ManagedPolicy AmazonCognitoReadOnly { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonCognitoReadOnly");
        public static ManagedPolicy AmazonCognitoUnauthenticatedIdentities { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonCognitoUnauthenticatedIdentities");
        public static ManagedPolicy AmazonConnectCampaignsServiceLinkedRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonConnectCampaignsServiceLinkedRolePolicy");
        public static ManagedPolicy AmazonConnectReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonConnectReadOnlyAccess");
        public static ManagedPolicy AmazonConnectServiceLinkedRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonConnectServiceLinkedRolePolicy");
        public static ManagedPolicy AmazonConnectVoiceIDFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonConnectVoiceIDFullAccess");
        public static ManagedPolicy AmazonConnect_FullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonConnect_FullAccess");
        public static ManagedPolicy AmazonDMSCloudWatchLogsRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonDMSCloudWatchLogsRole");
        public static ManagedPolicy AmazonDMSRedshiftS3Role { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonDMSRedshiftS3Role");
        public static ManagedPolicy AmazonDMSVPCManagementRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonDMSVPCManagementRole");
        public static ManagedPolicy AmazonDRSVPCManagement { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonDRSVPCManagement");
        public static ManagedPolicy AmazonDetectiveFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonDetectiveFullAccess");
        public static ManagedPolicy AmazonDetectiveInvestigatorAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonDetectiveInvestigatorAccess");
        public static ManagedPolicy AmazonDetectiveMemberAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonDetectiveMemberAccess");
        public static ManagedPolicy AmazonDetectiveServiceLinkedRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonDetectiveServiceLinkedRolePolicy");
        public static ManagedPolicy AmazonDevOpsGuruConsoleFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonDevOpsGuruConsoleFullAccess");
        public static ManagedPolicy AmazonDevOpsGuruFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonDevOpsGuruFullAccess");
        public static ManagedPolicy AmazonDevOpsGuruOrganizationsAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonDevOpsGuruOrganizationsAccess");
        public static ManagedPolicy AmazonDevOpsGuruReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonDevOpsGuruReadOnlyAccess");
        public static ManagedPolicy AmazonDevOpsGuruServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonDevOpsGuruServiceRolePolicy");
        public static ManagedPolicy AmazonDocDBElasticServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonDocDB-ElasticServiceRolePolicy");
        public static ManagedPolicy AmazonDocDBConsoleFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonDocDBConsoleFullAccess");
        public static ManagedPolicy AmazonDocDBFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonDocDBFullAccess");
        public static ManagedPolicy AmazonDocDBReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonDocDBReadOnlyAccess");
        public static ManagedPolicy AmazonDynamoDBFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess");
        public static ManagedPolicy AmazonDynamoDBFullAccesswithDataPipeline { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonDynamoDBFullAccesswithDataPipeline");
        public static ManagedPolicy AmazonDynamoDBReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonDynamoDBReadOnlyAccess");
        public static ManagedPolicy AmazonEBSCSIDriverPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy");
        public static ManagedPolicy AmazonEC2ContainerRegistryFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryFullAccess");
        public static ManagedPolicy AmazonEC2ContainerRegistryPowerUser { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryPowerUser");
        public static ManagedPolicy AmazonEC2ContainerRegistryReadOnly { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly");
        public static ManagedPolicy AmazonEC2ContainerServiceAutoscaleRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceAutoscaleRole");
        public static ManagedPolicy AmazonEC2ContainerServiceEventsRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceEventsRole");
        [Obsolete(@"This policy is deprecated and will be removed in a future release. Use AmazonECS_FullAccess instead.")]
        public static ManagedPolicy AmazonEC2ContainerServiceFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonEC2ContainerServiceFullAccess");
        public static ManagedPolicy AmazonEC2ContainerServiceRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceRole");
        public static ManagedPolicy AmazonEC2ContainerServiceforEC2Role { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role");
        public static ManagedPolicy AmazonEC2FullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonEC2FullAccess");
        public static ManagedPolicy AmazonEC2ReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess");
        [Obsolete(@"This policy is deprecated and will be removed in a future release.")]
        public static ManagedPolicy AmazonEC2ReportsAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonEC2ReportsAccess");
        public static ManagedPolicy AmazonEC2RolePolicyForLaunchWizard { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonEC2RolePolicyForLaunchWizard");
        public static ManagedPolicy AmazonEC2RoleforAWSCodeDeploy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforAWSCodeDeploy");
        public static ManagedPolicy AmazonEC2RoleforAWSCodeDeployLimited { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforAWSCodeDeployLimited");
        public static ManagedPolicy AmazonEC2RoleforDataPipelineRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforDataPipelineRole");
        public static ManagedPolicy AmazonEC2RoleforSSM { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM");
        public static ManagedPolicy AmazonEC2SpotFleetAutoscaleRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonEC2SpotFleetAutoscaleRole");
        [Obsolete(@"This policy is deprecated and will be removed in a future release.")]
        public static ManagedPolicy AmazonEC2SpotFleetRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonEC2SpotFleetRole");
        public static ManagedPolicy AmazonEC2SpotFleetTaggingRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonEC2SpotFleetTaggingRole");
        public static ManagedPolicy AmazonECSFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonECS_FullAccess");
        public static ManagedPolicy AmazonECSServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonECSServiceRolePolicy");
        public static ManagedPolicy AmazonECSTaskExecutionRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy");
        public static ManagedPolicy AmazonEKSClusterPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonEKSClusterPolicy");
        public static ManagedPolicy AmazonEKSConnectorServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonEKSConnectorServiceRolePolicy");
        public static ManagedPolicy AmazonEKSFargatePodExecutionRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonEKSFargatePodExecutionRolePolicy");
        public static ManagedPolicy AmazonEKSForFargateServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonEKSForFargateServiceRolePolicy");
        public static ManagedPolicy AmazonEKSLocalOutpostClusterPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonEKSLocalOutpostClusterPolicy");
        public static ManagedPolicy AmazonEKSLocalOutpostServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonEKSLocalOutpostServiceRolePolicy");
        public static ManagedPolicy AmazonEKSServicePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonEKSServicePolicy");
        public static ManagedPolicy AmazonEKSServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonEKSServiceRolePolicy");
        public static ManagedPolicy AmazonEKSVPCResourceController { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonEKSVPCResourceController");
        public static ManagedPolicy AmazonEKSWorkerNodePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy");
        public static ManagedPolicy AmazonEKS_CNI_Policy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy");
        public static ManagedPolicy AmazonEMRCleanupPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonEMRCleanupPolicy");
        public static ManagedPolicy AmazonEMRContainersServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonEMRContainersServiceRolePolicy");
        public static ManagedPolicy AmazonEMRFullAccessPolicy_v2 { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonEMRFullAccessPolicy_v2");
        public static ManagedPolicy AmazonEMRReadOnlyAccessPolicy_v2 { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonEMRReadOnlyAccessPolicy_v2");
        public static ManagedPolicy AmazonEMRServerlessServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonEMRServerlessServiceRolePolicy");
        public static ManagedPolicy AmazonEMRServicePolicy_v2 { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonEMRServicePolicy_v2");
        public static ManagedPolicy AmazonESCognitoAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonESCognitoAccess");
        public static ManagedPolicy AmazonESFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonESFullAccess");
        public static ManagedPolicy AmazonESReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonESReadOnlyAccess");
        public static ManagedPolicy AmazonElastiCacheFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonElastiCacheFullAccess");
        public static ManagedPolicy AmazonElastiCacheReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonElastiCacheReadOnlyAccess");
        public static ManagedPolicy AmazonElasticContainerRegistryPublicFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonElasticContainerRegistryPublicFullAccess");
        public static ManagedPolicy AmazonElasticContainerRegistryPublicPowerUser { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonElasticContainerRegistryPublicPowerUser");
        public static ManagedPolicy AmazonElasticContainerRegistryPublicReadOnly { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonElasticContainerRegistryPublicReadOnly");
        public static ManagedPolicy AmazonElasticFileSystemClientFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonElasticFileSystemClientFullAccess");
        public static ManagedPolicy AmazonElasticFileSystemClientReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonElasticFileSystemClientReadOnlyAccess");
        public static ManagedPolicy AmazonElasticFileSystemClientReadWriteAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonElasticFileSystemClientReadWriteAccess");
        public static ManagedPolicy AmazonElasticFileSystemFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonElasticFileSystemFullAccess");
        public static ManagedPolicy AmazonElasticFileSystemReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonElasticFileSystemReadOnlyAccess");
        public static ManagedPolicy AmazonElasticFileSystemServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonElasticFileSystemServiceRolePolicy");
        public static ManagedPolicy AmazonElasticFileSystemsUtils { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonElasticFileSystemsUtils");
        public static ManagedPolicy AmazonElasticMapReduceEditorsRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonElasticMapReduceEditorsRole");
        public static ManagedPolicy AmazonElasticMapReduceFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonElasticMapReduceFullAccess");
        public static ManagedPolicy AmazonElasticMapReducePlacementGroupPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonElasticMapReducePlacementGroupPolicy");
        public static ManagedPolicy AmazonElasticMapReduceReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonElasticMapReduceReadOnlyAccess");
        public static ManagedPolicy AmazonElasticMapReduceRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonElasticMapReduceRole");
        public static ManagedPolicy AmazonElasticMapReduceforAutoScalingRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonElasticMapReduceforAutoScalingRole");
        public static ManagedPolicy AmazonElasticMapReduceforEC2Role { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonElasticMapReduceforEC2Role");
        [Obsolete(@"This policy is deprecated and will be removed in a future release. Use ElasticTranscoder_FullAccess instead.")]
        public static ManagedPolicy AmazonElasticTranscoderFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonElasticTranscoderFullAccess");
        [Obsolete(@"This policy is deprecated and will be removed in a future release. Use ElasticTranscoder_JobsSubmitter instead.")]
        public static ManagedPolicy AmazonElasticTranscoderJobsSubmitter { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonElasticTranscoderJobsSubmitter");
        [Obsolete(@"This policy is deprecated and will be removed in a future release. Use ElasticTranscoder_ReadOnlyAccess instead.")]
        public static ManagedPolicy AmazonElasticTranscoderReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonElasticTranscoderReadOnlyAccess");
        public static ManagedPolicy AmazonElasticTranscoderRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonElasticTranscoderRole");
        public static ManagedPolicy ElasticTranscoder_FullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonElasticTranscoder_FullAccess");
        public static ManagedPolicy ElasticTranscoder_JobsSubmitter { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonElasticTranscoder_JobsSubmitter");
        public static ManagedPolicy ElasticTranscoder_ReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonElasticTranscoder_ReadOnlyAccess");
        public static ManagedPolicy AmazonElasticsearchServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonElasticsearchServiceRolePolicy");
        public static ManagedPolicy AmazonEventBridgeApiDestinationsServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonEventBridgeApiDestinationsServiceRolePolicy");
        public static ManagedPolicy AmazonEventBridgeFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonEventBridgeFullAccess");
        public static ManagedPolicy AmazonEventBridgePipesFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonEventBridgePipesFullAccess");
        public static ManagedPolicy AmazonEventBridgePipesOperatorAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonEventBridgePipesOperatorAccess");
        public static ManagedPolicy AmazonEventBridgePipesReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonEventBridgePipesReadOnlyAccess");
        public static ManagedPolicy AmazonEventBridgeReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonEventBridgeReadOnlyAccess");
        public static ManagedPolicy AmazonEventBridgeSchedulerFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonEventBridgeSchedulerFullAccess");
        public static ManagedPolicy AmazonEventBridgeSchedulerReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonEventBridgeSchedulerReadOnlyAccess");
        public static ManagedPolicy AmazonEventBridgeSchemasFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonEventBridgeSchemasFullAccess");
        public static ManagedPolicy AmazonEventBridgeSchemasReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonEventBridgeSchemasReadOnlyAccess");
        public static ManagedPolicy AmazonEventBridgeSchemasServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonEventBridgeSchemasServiceRolePolicy");
        public static ManagedPolicy AmazonFISServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonFISServiceRolePolicy");
        public static ManagedPolicy AmazonFSxConsoleFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonFSxConsoleFullAccess");
        public static ManagedPolicy AmazonFSxConsoleReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonFSxConsoleReadOnlyAccess");
        public static ManagedPolicy AmazonFSxFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonFSxFullAccess");
        public static ManagedPolicy AmazonFSxReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonFSxReadOnlyAccess");
        public static ManagedPolicy AmazonFSxServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonFSxServiceRolePolicy");
        public static ManagedPolicy AmazonForecastFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonForecastFullAccess");
        public static ManagedPolicy AmazonFraudDetectorFullAccessPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonFraudDetectorFullAccessPolicy");
        public static ManagedPolicy AmazonFreeRTOSFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonFreeRTOSFullAccess");
        public static ManagedPolicy AmazonFreeRTOSOTAUpdate { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonFreeRTOSOTAUpdate");
        public static ManagedPolicy AmazonGlacierFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonGlacierFullAccess");
        public static ManagedPolicy AmazonGlacierReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonGlacierReadOnlyAccess");
        public static ManagedPolicy AmazonGrafanaAthenaAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonGrafanaAthenaAccess");
        public static ManagedPolicy AmazonGrafanaRedshiftAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonGrafanaRedshiftAccess");
        public static ManagedPolicy AmazonGrafanaServiceLinkedRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonGrafanaServiceLinkedRolePolicy");
        public static ManagedPolicy AmazonGuardDutyFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonGuardDutyFullAccess");
        public static ManagedPolicy AmazonGuardDutyMalwareProtectionServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonGuardDutyMalwareProtectionServiceRolePolicy");
        public static ManagedPolicy AmazonGuardDutyReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonGuardDutyReadOnlyAccess");
        public static ManagedPolicy AmazonGuardDutyServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonGuardDutyServiceRolePolicy");
        public static ManagedPolicy AmazonHealthLakeFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonHealthLakeFullAccess");
        public static ManagedPolicy AmazonHealthLakeReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonHealthLakeReadOnlyAccess");
        public static ManagedPolicy AmazonHoneycodeFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonHoneycodeFullAccess");
        public static ManagedPolicy AmazonHoneycodeReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonHoneycodeReadOnlyAccess");
        public static ManagedPolicy AmazonHoneycodeServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonHoneycodeServiceRolePolicy");
        public static ManagedPolicy AmazonHoneycodeTeamAssociationFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonHoneycodeTeamAssociationFullAccess");
        public static ManagedPolicy AmazonHoneycodeTeamAssociationReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonHoneycodeTeamAssociationReadOnlyAccess");
        public static ManagedPolicy AmazonHoneycodeWorkbookFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonHoneycodeWorkbookFullAccess");
        public static ManagedPolicy AmazonHoneycodeWorkbookReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonHoneycodeWorkbookReadOnlyAccess");
        public static ManagedPolicy AmazonInspector2FullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonInspector2FullAccess");
        public static ManagedPolicy AmazonInspector2ReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonInspector2ReadOnlyAccess");
        public static ManagedPolicy AmazonInspector2ServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonInspector2ServiceRolePolicy");
        public static ManagedPolicy AmazonInspectorFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonInspectorFullAccess");
        public static ManagedPolicy AmazonInspectorReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonInspectorReadOnlyAccess");
        public static ManagedPolicy AmazonInspectorServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonInspectorServiceRolePolicy");
        public static ManagedPolicy AmazonKendraFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonKendraFullAccess");
        public static ManagedPolicy AmazonKendraReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonKendraReadOnlyAccess");
        public static ManagedPolicy AmazonKeyspacesFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonKeyspacesFullAccess");
        public static ManagedPolicy AmazonKeyspacesReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonKeyspacesReadOnlyAccess");
        public static ManagedPolicy AmazonKinesisAnalyticsFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonKinesisAnalyticsFullAccess");
        public static ManagedPolicy AmazonKinesisAnalyticsReadOnly { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonKinesisAnalyticsReadOnly");
        public static ManagedPolicy AmazonKinesisFirehoseFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonKinesisFirehoseFullAccess");
        public static ManagedPolicy AmazonKinesisFirehoseReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonKinesisFirehoseReadOnlyAccess");
        public static ManagedPolicy AmazonKinesisFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonKinesisFullAccess");
        public static ManagedPolicy AmazonKinesisReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonKinesisReadOnlyAccess");
        public static ManagedPolicy AmazonKinesisVideoStreamsFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonKinesisVideoStreamsFullAccess");
        public static ManagedPolicy AmazonKinesisVideoStreamsReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonKinesisVideoStreamsReadOnlyAccess");
        public static ManagedPolicy AmazonLaunchWizard_Fullaccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonLaunchWizard_Fullaccess");
        public static ManagedPolicy AmazonLexChannelsAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonLexChannelsAccess");
        public static ManagedPolicy AmazonLexFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonLexFullAccess");
        public static ManagedPolicy AmazonLexReadOnly { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonLexReadOnly");
        public static ManagedPolicy AmazonLexRunBotsOnly { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonLexRunBotsOnly");
        public static ManagedPolicy AmazonLexV2BotPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonLexV2BotPolicy");
        public static ManagedPolicy AmazonLookoutEquipmentFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonLookoutEquipmentFullAccess");
        public static ManagedPolicy AmazonLookoutEquipmentReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonLookoutEquipmentReadOnlyAccess");
        public static ManagedPolicy AmazonLookoutMetricsFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonLookoutMetricsFullAccess");
        public static ManagedPolicy AmazonLookoutMetricsReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonLookoutMetricsReadOnlyAccess");
        public static ManagedPolicy AmazonLookoutVisionConsoleFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonLookoutVisionConsoleFullAccess");
        public static ManagedPolicy AmazonLookoutVisionConsoleReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonLookoutVisionConsoleReadOnlyAccess");
        public static ManagedPolicy AmazonLookoutVisionFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonLookoutVisionFullAccess");
        public static ManagedPolicy AmazonLookoutVisionReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonLookoutVisionReadOnlyAccess");
        public static ManagedPolicy AmazonMCSFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonMCSFullAccess");
        public static ManagedPolicy AmazonMCSReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonMCSReadOnlyAccess");
        public static ManagedPolicy AmazonMQApiFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonMQApiFullAccess");
        public static ManagedPolicy AmazonMQApiReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonMQApiReadOnlyAccess");
        public static ManagedPolicy AmazonMQFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonMQFullAccess");
        public static ManagedPolicy AmazonMQReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonMQReadOnlyAccess");
        public static ManagedPolicy AmazonMQServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonMQServiceRolePolicy");
        public static ManagedPolicy AmazonMSKConnectReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonMSKConnectReadOnlyAccess");
        public static ManagedPolicy AmazonMSKFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonMSKFullAccess");
        public static ManagedPolicy AmazonMSKReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonMSKReadOnlyAccess");
        public static ManagedPolicy AmazonMWAAServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonMWAAServiceRolePolicy");
        public static ManagedPolicy AmazonMachineLearningBatchPredictionsAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonMachineLearningBatchPredictionsAccess");
        public static ManagedPolicy AmazonMachineLearningCreateOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonMachineLearningCreateOnlyAccess");
        public static ManagedPolicy AmazonMachineLearningFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonMachineLearningFullAccess");
        public static ManagedPolicy AmazonMachineLearningManageRealTimeEndpointOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonMachineLearningManageRealTimeEndpointOnlyAccess");
        public static ManagedPolicy AmazonMachineLearningReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonMachineLearningReadOnlyAccess");
        public static ManagedPolicy AmazonMachineLearningRealTimePredictionOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonMachineLearningRealTimePredictionOnlyAccess");
        [Obsolete(@"This policy is deprecated. Use AmazonMachineLearningRoleforRedshiftDataSourceV3 instead.")]
        public static ManagedPolicy AmazonMachineLearningRoleforRedshiftDataSource { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonMachineLearningRoleforRedshiftDataSource");
        public static ManagedPolicy AmazonMachineLearningRoleforRedshiftDataSourceV3 { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonMachineLearningRoleforRedshiftDataSourceV3");
        public static ManagedPolicy AmazonMacieFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonMacieFullAccess");
        public static ManagedPolicy AmazonMacieHandshakeRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonMacieHandshakeRole");
        public static ManagedPolicy AmazonMacieServiceRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonMacieServiceRole");
        public static ManagedPolicy AmazonMacieServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonMacieServiceRolePolicy");
        public static ManagedPolicy AmazonManagedBlockchainConsoleFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonManagedBlockchainConsoleFullAccess");
        public static ManagedPolicy AmazonManagedBlockchainFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonManagedBlockchainFullAccess");
        public static ManagedPolicy AmazonManagedBlockchainReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonManagedBlockchainReadOnlyAccess");
        public static ManagedPolicy AmazonManagedBlockchainServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonManagedBlockchainServiceRolePolicy");
        public static ManagedPolicy AmazonMechanicalTurkFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonMechanicalTurkFullAccess");
        public static ManagedPolicy AmazonMechanicalTurkReadOnly { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonMechanicalTurkReadOnly");
        public static ManagedPolicy AmazonMemoryDBFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonMemoryDBFullAccess");
        public static ManagedPolicy AmazonMemoryDBReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonMemoryDBReadOnlyAccess");
        public static ManagedPolicy AmazonMobileAnalyticsFinancialReportAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonMobileAnalyticsFinancialReportAccess");
        public static ManagedPolicy AmazonMobileAnalyticsFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonMobileAnalyticsFullAccess");
        public static ManagedPolicy AmazonMobileAnalyticsNonfinancialReportAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonMobileAnalyticsNon-financialReportAccess");
        public static ManagedPolicy AmazonMobileAnalyticsWriteOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonMobileAnalyticsWriteOnlyAccess");
        public static ManagedPolicy AmazonMonitronFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonMonitronFullAccess");
        public static ManagedPolicy AmazonNimbleStudioLaunchProfileWorker { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonNimbleStudio-LaunchProfileWorker");
        public static ManagedPolicy AmazonNimbleStudioStudioAdmin { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonNimbleStudio-StudioAdmin");
        public static ManagedPolicy AmazonNimbleStudioStudioUser { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonNimbleStudio-StudioUser");
        public static ManagedPolicy AmazonOmicsFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonOmicsFullAccess");
        public static ManagedPolicy AmazonOmicsReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonOmicsReadOnlyAccess");
        public static ManagedPolicy AmazonOpenSearchIngestionServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonOpenSearchIngestionServiceRolePolicy");
        public static ManagedPolicy AmazonOpenSearchServerlessServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonOpenSearchServerlessServiceRolePolicy");
        public static ManagedPolicy AmazonOpenSearchServiceCognitoAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonOpenSearchServiceCognitoAccess");
        public static ManagedPolicy AmazonOpenSearchServiceFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonOpenSearchServiceFullAccess");
        public static ManagedPolicy AmazonOpenSearchServiceReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonOpenSearchServiceReadOnlyAccess");
        public static ManagedPolicy AmazonOpenSearchServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonOpenSearchServiceRolePolicy");
        public static ManagedPolicy AmazonPersonalizeFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonPersonalizeFullAccess");
        public static ManagedPolicy AmazonPollyFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonPollyFullAccess");
        public static ManagedPolicy AmazonPollyReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonPollyReadOnlyAccess");
        public static ManagedPolicy AmazonPrometheusConsoleFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonPrometheusConsoleFullAccess");
        public static ManagedPolicy AmazonPrometheusFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonPrometheusFullAccess");
        public static ManagedPolicy AmazonPrometheusQueryAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonPrometheusQueryAccess");
        public static ManagedPolicy AmazonPrometheusRemoteWriteAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonPrometheusRemoteWriteAccess");
        public static ManagedPolicy AmazonQLDBConsoleFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonQLDBConsoleFullAccess");
        public static ManagedPolicy AmazonQLDBFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonQLDBFullAccess");
        public static ManagedPolicy AmazonQLDBReadOnly { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonQLDBReadOnly");
        public static ManagedPolicy AmazonRDSBetaServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonRDSBetaServiceRolePolicy");
        public static ManagedPolicy AmazonRDSCustomPreviewServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonRDSCustomPreviewServiceRolePolicy");
        public static ManagedPolicy AmazonRDSCustomServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonRDSCustomServiceRolePolicy");
        public static ManagedPolicy AmazonRDSDataFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonRDSDataFullAccess");
        public static ManagedPolicy AmazonRDSDirectoryServiceAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonRDSDirectoryServiceAccess");
        public static ManagedPolicy AmazonRDSEnhancedMonitoringRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole");
        public static ManagedPolicy AmazonRDSFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonRDSFullAccess");
        public static ManagedPolicy AmazonRDSPerformanceInsightsReadOnly { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonRDSPerformanceInsightsReadOnly");
        public static ManagedPolicy AmazonRDSPreviewServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonRDSPreviewServiceRolePolicy");
        public static ManagedPolicy AmazonRDSReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonRDSReadOnlyAccess");
        public static ManagedPolicy AmazonRDSServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonRDSServiceRolePolicy");
        public static ManagedPolicy AmazonRedshiftAllCommandsFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonRedshiftAllCommandsFullAccess");
        public static ManagedPolicy AmazonRedshiftDataFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonRedshiftDataFullAccess");
        public static ManagedPolicy AmazonRedshiftFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonRedshiftFullAccess");
        public static ManagedPolicy AmazonRedshiftQueryEditor { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonRedshiftQueryEditor");
        public static ManagedPolicy AmazonRedshiftQueryEditorV2FullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonRedshiftQueryEditorV2FullAccess");
        public static ManagedPolicy AmazonRedshiftQueryEditorV2NoSharing { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonRedshiftQueryEditorV2NoSharing");
        public static ManagedPolicy AmazonRedshiftQueryEditorV2ReadSharing { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonRedshiftQueryEditorV2ReadSharing");
        public static ManagedPolicy AmazonRedshiftQueryEditorV2ReadWriteSharing { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonRedshiftQueryEditorV2ReadWriteSharing");
        public static ManagedPolicy AmazonRedshiftReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonRedshiftReadOnlyAccess");
        public static ManagedPolicy AmazonRedshiftServiceLinkedRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonRedshiftServiceLinkedRolePolicy");
        public static ManagedPolicy AmazonRekognitionCustomLabelsFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonRekognitionCustomLabelsFullAccess");
        public static ManagedPolicy AmazonRekognitionFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonRekognitionFullAccess");
        public static ManagedPolicy AmazonRekognitionReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonRekognitionReadOnlyAccess");
        public static ManagedPolicy AmazonRekognitionServiceRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonRekognitionServiceRole");
        public static ManagedPolicy AmazonRoute53AutoNamingFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonRoute53AutoNamingFullAccess");
        public static ManagedPolicy AmazonRoute53AutoNamingReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonRoute53AutoNamingReadOnlyAccess");
        public static ManagedPolicy AmazonRoute53AutoNamingRegistrantAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonRoute53AutoNamingRegistrantAccess");
        public static ManagedPolicy AmazonRoute53DomainsFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonRoute53DomainsFullAccess");
        public static ManagedPolicy AmazonRoute53DomainsReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonRoute53DomainsReadOnlyAccess");
        public static ManagedPolicy AmazonRoute53FullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonRoute53FullAccess");
        public static ManagedPolicy AmazonRoute53ReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonRoute53ReadOnlyAccess");
        public static ManagedPolicy AmazonRoute53RecoveryClusterFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonRoute53RecoveryClusterFullAccess");
        public static ManagedPolicy AmazonRoute53RecoveryClusterReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonRoute53RecoveryClusterReadOnlyAccess");
        public static ManagedPolicy AmazonRoute53RecoveryControlConfigFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonRoute53RecoveryControlConfigFullAccess");
        public static ManagedPolicy AmazonRoute53RecoveryControlConfigReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonRoute53RecoveryControlConfigReadOnlyAccess");
        public static ManagedPolicy AmazonRoute53RecoveryReadinessFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonRoute53RecoveryReadinessFullAccess");
        public static ManagedPolicy AmazonRoute53RecoveryReadinessReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonRoute53RecoveryReadinessReadOnlyAccess");
        public static ManagedPolicy AmazonRoute53ResolverFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonRoute53ResolverFullAccess");
        public static ManagedPolicy AmazonRoute53ResolverReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonRoute53ResolverReadOnlyAccess");
        public static ManagedPolicy AmazonS3FullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonS3FullAccess");
        public static ManagedPolicy AmazonS3ObjectLambdaExecutionRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonS3ObjectLambdaExecutionRolePolicy");
        public static ManagedPolicy AmazonS3OutpostsFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonS3OutpostsFullAccess");
        public static ManagedPolicy AmazonS3OutpostsReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonS3OutpostsReadOnlyAccess");
        public static ManagedPolicy AmazonS3ReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess");
        public static ManagedPolicy AmazonSESFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonSESFullAccess");
        public static ManagedPolicy AmazonSESReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonSESReadOnlyAccess");
        public static ManagedPolicy AmazonSNSFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonSNSFullAccess");
        public static ManagedPolicy AmazonSNSReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonSNSReadOnlyAccess");
        public static ManagedPolicy AmazonSNSRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonSNSRole");
        public static ManagedPolicy AmazonSQSFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonSQSFullAccess");
        public static ManagedPolicy AmazonSQSReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonSQSReadOnlyAccess");
        public static ManagedPolicy AmazonSSMAutomationApproverAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonSSMAutomationApproverAccess");
        public static ManagedPolicy AmazonSSMAutomationRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonSSMAutomationRole");
        public static ManagedPolicy AmazonSSMDirectoryServiceAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonSSMDirectoryServiceAccess");
        public static ManagedPolicy AmazonSSMFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonSSMFullAccess");
        public static ManagedPolicy AmazonSSMMaintenanceWindowRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonSSMMaintenanceWindowRole");
        public static ManagedPolicy AmazonSSMManagedEC2InstanceDefaultPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonSSMManagedEC2InstanceDefaultPolicy");
        public static ManagedPolicy AmazonSSMPatchAssociation { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonSSMPatchAssociation");
        public static ManagedPolicy AmazonSSMReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess");
        public static ManagedPolicy AmazonSSMManagedInstanceCore { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore");
        public static ManagedPolicy AmazonSSMServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonSSMServiceRolePolicy");
        public static ManagedPolicy AmazonSageMakerAdminServiceCatalogProductsServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonSageMakerAdmin-ServiceCatalogProductsServiceRolePolicy");
        public static ManagedPolicy AmazonSageMakerCanvasForecastAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonSageMakerCanvasForecastAccess");
        public static ManagedPolicy AmazonSageMakerCanvasFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonSageMakerCanvasFullAccess");
        public static ManagedPolicy AmazonSageMakerCoreServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonSageMakerCoreServiceRolePolicy");
        public static ManagedPolicy AmazonSageMakerEdgeDeviceFleetPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonSageMakerEdgeDeviceFleetPolicy");
        public static ManagedPolicy AmazonSageMakerFeatureStoreAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonSageMakerFeatureStoreAccess");
        public static ManagedPolicy AmazonSageMakerFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonSageMakerFullAccess");
        public static ManagedPolicy AmazonSageMakerGeospatialExecutionRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonSageMakerGeospatialExecutionRole");
        public static ManagedPolicy AmazonSageMakerGeospatialFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonSageMakerGeospatialFullAccess");
        public static ManagedPolicy AmazonSageMakerGroundTruthExecution { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonSageMakerGroundTruthExecution");
        public static ManagedPolicy AmazonSageMakerMechanicalTurkAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonSageMakerMechanicalTurkAccess");
        public static ManagedPolicy AmazonSageMakerModelGovernanceUseAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonSageMakerModelGovernanceUseAccess");
        public static ManagedPolicy AmazonSageMakerNotebooksServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonSageMakerNotebooksServiceRolePolicy");
        public static ManagedPolicy AmazonSageMakerPipelinesIntegrations { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonSageMakerPipelinesIntegrations");
        public static ManagedPolicy AmazonSageMakerReadOnly { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonSageMakerReadOnly");
        public static ManagedPolicy AmazonSageMakerServiceCatalogProductsApiGatewayServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonSageMakerServiceCatalogProductsApiGatewayServiceRolePolicy");
        public static ManagedPolicy AmazonSageMakerServiceCatalogProductsCloudformationServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonSageMakerServiceCatalogProductsCloudformationServiceRolePolicy");
        public static ManagedPolicy AmazonSageMakerServiceCatalogProductsCodeBuildServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonSageMakerServiceCatalogProductsCodeBuildServiceRolePolicy");
        public static ManagedPolicy AmazonSageMakerServiceCatalogProductsCodePipelineServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonSageMakerServiceCatalogProductsCodePipelineServiceRolePolicy");
        public static ManagedPolicy AmazonSageMakerServiceCatalogProductsEventsServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonSageMakerServiceCatalogProductsEventsServiceRolePolicy");
        public static ManagedPolicy AmazonSageMakerServiceCatalogProductsFirehoseServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonSageMakerServiceCatalogProductsFirehoseServiceRolePolicy");
        public static ManagedPolicy AmazonSageMakerServiceCatalogProductsGlueServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonSageMakerServiceCatalogProductsGlueServiceRolePolicy");
        public static ManagedPolicy AmazonSageMakerServiceCatalogProductsLambdaServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonSageMakerServiceCatalogProductsLambdaServiceRolePolicy");
        public static ManagedPolicy AmazonSecurityLakePermissionsBoundary { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonSecurityLakePermissionsBoundary");
        public static ManagedPolicy AmazonSumerianFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonSumerianFullAccess");
        public static ManagedPolicy AmazonTextractFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonTextractFullAccess");
        public static ManagedPolicy AmazonTextractServiceRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AmazonTextractServiceRole");
        public static ManagedPolicy AmazonTimestreamConsoleFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonTimestreamConsoleFullAccess");
        public static ManagedPolicy AmazonTimestreamFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonTimestreamFullAccess");
        public static ManagedPolicy AmazonTimestreamReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonTimestreamReadOnlyAccess");
        public static ManagedPolicy AmazonTranscribeFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonTranscribeFullAccess");
        public static ManagedPolicy AmazonTranscribeReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonTranscribeReadOnlyAccess");
        public static ManagedPolicy AmazonVPCCrossAccountNetworkInterfaceOperations { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonVPCCrossAccountNetworkInterfaceOperations");
        public static ManagedPolicy AmazonVPCFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonVPCFullAccess");
        public static ManagedPolicy AmazonVPCReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonVPCReadOnlyAccess");
        public static ManagedPolicy AmazonWorkDocsFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonWorkDocsFullAccess");
        public static ManagedPolicy AmazonWorkDocsReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonWorkDocsReadOnlyAccess");
        public static ManagedPolicy AmazonWorkMailEventsServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonWorkMailEventsServiceRolePolicy");
        public static ManagedPolicy AmazonWorkMailFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonWorkMailFullAccess");
        public static ManagedPolicy AmazonWorkMailMessageFlowFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonWorkMailMessageFlowFullAccess");
        public static ManagedPolicy AmazonWorkMailMessageFlowReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonWorkMailMessageFlowReadOnlyAccess");
        public static ManagedPolicy AmazonWorkMailReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonWorkMailReadOnlyAccess");
        public static ManagedPolicy AmazonWorkSpacesAdmin { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonWorkSpacesAdmin");
        public static ManagedPolicy AmazonWorkSpacesApplicationManagerAdminAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonWorkSpacesApplicationManagerAdminAccess");
        public static ManagedPolicy AmazonWorkSpacesSelfServiceAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonWorkSpacesSelfServiceAccess");
        public static ManagedPolicy AmazonWorkSpacesServiceAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonWorkSpacesServiceAccess");
        public static ManagedPolicy AmazonWorkSpacesWebReadOnly { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonWorkSpacesWebReadOnly");
        public static ManagedPolicy AmazonWorkSpacesWebServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AmazonWorkSpacesWebServiceRolePolicy");
        public static ManagedPolicy AmazonWorkspacesPCAAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonWorkspacesPCAAccess");
        public static ManagedPolicy AmazonZocaloFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonZocaloFullAccess");
        public static ManagedPolicy AmazonZocaloReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AmazonZocaloReadOnlyAccess");
        public static ManagedPolicy AppIntegrationsServiceLinkedRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AppIntegrationsServiceLinkedRolePolicy");
        public static ManagedPolicy AppRunnerNetworkingServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AppRunnerNetworkingServiceRolePolicy");
        public static ManagedPolicy AppRunnerServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AppRunnerServiceRolePolicy");
        public static ManagedPolicy ApplicationAutoScalingForAmazonAppStreamAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/ApplicationAutoScalingForAmazonAppStreamAccess");
        public static ManagedPolicy ApplicationDiscoveryServiceContinuousExportServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/ApplicationDiscoveryServiceContinuousExportServiceRolePolicy");
        public static ManagedPolicy AutoScalingConsoleFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AutoScalingConsoleFullAccess");
        public static ManagedPolicy AutoScalingConsoleReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AutoScalingConsoleReadOnlyAccess");
        public static ManagedPolicy AutoScalingFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AutoScalingFullAccess");
        public static ManagedPolicy AutoScalingNotificationAccessRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AutoScalingNotificationAccessRole");
        public static ManagedPolicy AutoScalingReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AutoScalingReadOnlyAccess");
        public static ManagedPolicy AutoScalingServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/AutoScalingServiceRolePolicy");
        public static ManagedPolicy AwsGlueDataBrewFullAccessPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AwsGlueDataBrewFullAccessPolicy");
        public static ManagedPolicy AwsGlueSessionUserRestrictedNotebookPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AwsGlueSessionUserRestrictedNotebookPolicy");
        public static ManagedPolicy AwsGlueSessionUserRestrictedNotebookServiceRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AwsGlueSessionUserRestrictedNotebookServiceRole");
        public static ManagedPolicy AwsGlueSessionUserRestrictedPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/AwsGlueSessionUserRestrictedPolicy");
        public static ManagedPolicy AwsGlueSessionUserRestrictedServiceRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/AwsGlueSessionUserRestrictedServiceRole");
        public static ManagedPolicy BatchServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/BatchServiceRolePolicy");
        public static ManagedPolicy Billing { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/job-function/Billing");
        public static ManagedPolicy CertificateManagerServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/CertificateManagerServiceRolePolicy");
        public static ManagedPolicy ClientVPNServiceConnectionsRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/ClientVPNServiceConnectionsRolePolicy");
        public static ManagedPolicy ClientVPNServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/ClientVPNServiceRolePolicy");
        public static ManagedPolicy CloudFormationStackSetsOrgAdminServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/CloudFormationStackSetsOrgAdminServiceRolePolicy");
        public static ManagedPolicy CloudFormationStackSetsOrgMemberServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/CloudFormationStackSetsOrgMemberServiceRolePolicy");
        public static ManagedPolicy CloudFrontFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/CloudFrontFullAccess");
        public static ManagedPolicy CloudFrontReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/CloudFrontReadOnlyAccess");
        public static ManagedPolicy CloudHSMServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/CloudHSMServiceRolePolicy");
        public static ManagedPolicy CloudSearchFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/CloudSearchFullAccess");
        public static ManagedPolicy CloudSearchReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/CloudSearchReadOnlyAccess");
        public static ManagedPolicy CloudTrailServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/CloudTrailServiceRolePolicy");
        public static ManagedPolicy CloudWatchCrossAccountAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/CloudWatch-CrossAccountAccess");
        public static ManagedPolicy CloudWatchActionsEC2Access { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/CloudWatchActionsEC2Access");
        public static ManagedPolicy CloudWatchAgentAdminPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/CloudWatchAgentAdminPolicy");
        public static ManagedPolicy CloudWatchAgentServerPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy");
        public static ManagedPolicy CloudWatchApplicationInsightsFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/CloudWatchApplicationInsightsFullAccess");
        public static ManagedPolicy CloudWatchApplicationInsightsReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/CloudWatchApplicationInsightsReadOnlyAccess");
        public static ManagedPolicy CloudWatchAutomaticDashboardsAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/CloudWatchAutomaticDashboardsAccess");
        public static ManagedPolicy CloudWatchCrossAccountSharingConfiguration { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/CloudWatchCrossAccountSharingConfiguration");
        public static ManagedPolicy CloudWatchEventsBuiltInTargetExecutionAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/CloudWatchEventsBuiltInTargetExecutionAccess");
        public static ManagedPolicy CloudWatchEventsFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/CloudWatchEventsFullAccess");
        public static ManagedPolicy CloudWatchEventsInvocationAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/CloudWatchEventsInvocationAccess");
        public static ManagedPolicy CloudWatchEventsReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/CloudWatchEventsReadOnlyAccess");
        public static ManagedPolicy CloudWatchEventsServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/CloudWatchEventsServiceRolePolicy");
        public static ManagedPolicy CloudWatchFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/CloudWatchFullAccess");
        public static ManagedPolicy CloudWatchInternetMonitorServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/CloudWatchInternetMonitorServiceRolePolicy");
        public static ManagedPolicy CloudWatchLambdaInsightsExecutionRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy");
        public static ManagedPolicy CloudWatchLogsCrossAccountSharingConfiguration { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/CloudWatchLogsCrossAccountSharingConfiguration");
        public static ManagedPolicy CloudWatchLogsFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/CloudWatchLogsFullAccess");
        public static ManagedPolicy CloudWatchLogsReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/CloudWatchLogsReadOnlyAccess");
        public static ManagedPolicy CloudWatchReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/CloudWatchReadOnlyAccess");
        public static ManagedPolicy CloudWatchSyntheticsFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/CloudWatchSyntheticsFullAccess");
        public static ManagedPolicy CloudWatchSyntheticsReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/CloudWatchSyntheticsReadOnlyAccess");
        public static ManagedPolicy CloudwatchApplicationInsightsServiceLinkedRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/CloudwatchApplicationInsightsServiceLinkedRolePolicy");
        public static ManagedPolicy ComprehendDataAccessRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/ComprehendDataAccessRolePolicy");
        public static ManagedPolicy ComprehendFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/ComprehendFullAccess");
        public static ManagedPolicy ComprehendMedicalFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/ComprehendMedicalFullAccess");
        public static ManagedPolicy ComprehendReadOnly { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/ComprehendReadOnly");
        public static ManagedPolicy ComputeOptimizerReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/ComputeOptimizerReadOnlyAccess");
        public static ManagedPolicy ComputeOptimizerServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/ComputeOptimizerServiceRolePolicy");
        public static ManagedPolicy ConfigConformsServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/ConfigConformsServiceRolePolicy");
        public static ManagedPolicy DAXServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/DAXServiceRolePolicy");
        public static ManagedPolicy DataScientist { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/job-function/DataScientist");
        public static ManagedPolicy DatabaseAdministrator { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/job-function/DatabaseAdministrator");
        public static ManagedPolicy DynamoDBCloudWatchContributorInsightsServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/DynamoDBCloudWatchContributorInsightsServiceRolePolicy");
        public static ManagedPolicy DynamoDBKinesisReplicationServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/DynamoDBKinesisReplicationServiceRolePolicy");
        public static ManagedPolicy DynamoDBReplicationServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/DynamoDBReplicationServiceRolePolicy");
        public static ManagedPolicy EC2FastLaunchServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/EC2FastLaunchServiceRolePolicy");
        public static ManagedPolicy EC2FleetTimeShiftableServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/EC2FleetTimeShiftableServiceRolePolicy");
        public static ManagedPolicy EC2InstanceConnect { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/EC2InstanceConnect");
        public static ManagedPolicy EC2InstanceProfileForImageBuilder { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/EC2InstanceProfileForImageBuilder");
        public static ManagedPolicy EC2InstanceProfileForImageBuilderECRContainerBuilds { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/EC2InstanceProfileForImageBuilderECRContainerBuilds");
        public static ManagedPolicy ECRReplicationServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/ECRReplicationServiceRolePolicy");
        public static ManagedPolicy Ec2ImageBuilderCrossAccountDistributionAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/Ec2ImageBuilderCrossAccountDistributionAccess");
        public static ManagedPolicy Ec2InstanceConnectEndpoint { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/Ec2InstanceConnectEndpoint");
        public static ManagedPolicy ElastiCacheServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/ElastiCacheServiceRolePolicy");
        public static ManagedPolicy ElasticLoadBalancingFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/ElasticLoadBalancingFullAccess");
        public static ManagedPolicy ElasticLoadBalancingReadOnly { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/ElasticLoadBalancingReadOnly");
        public static ManagedPolicy ElementalActivationsDownloadSoftwareAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/ElementalActivationsDownloadSoftwareAccess");
        public static ManagedPolicy ElementalActivationsFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/ElementalActivationsFullAccess");
        public static ManagedPolicy ElementalActivationsGenerateLicenses { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/ElementalActivationsGenerateLicenses");
        public static ManagedPolicy ElementalActivationsReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/ElementalActivationsReadOnlyAccess");
        public static ManagedPolicy ElementalAppliancesSoftwareFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/ElementalAppliancesSoftwareFullAccess");
        public static ManagedPolicy ElementalAppliancesSoftwareReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/ElementalAppliancesSoftwareReadOnlyAccess");
        public static ManagedPolicy ElementalSupportCenterFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/ElementalSupportCenterFullAccess");
        public static ManagedPolicy FMSServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/FMSServiceRolePolicy");
        public static ManagedPolicy FSxDeleteServiceLinkedRoleAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/FSxDeleteServiceLinkedRoleAccess");
        public static ManagedPolicy FusionDevInternalServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/FusionDevInternalServiceRolePolicy");
        public static ManagedPolicy GameLiftGameServerGroupPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/GameLiftGameServerGroupPolicy");
        public static ManagedPolicy GlobalAcceleratorFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/GlobalAcceleratorFullAccess");
        public static ManagedPolicy GlobalAcceleratorReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/GlobalAcceleratorReadOnlyAccess");
        public static ManagedPolicy GreengrassOTAUpdateArtifactAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/GreengrassOTAUpdateArtifactAccess");
        public static ManagedPolicy GroundTruthSyntheticConsoleFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/GroundTruthSyntheticConsoleFullAccess");
        public static ManagedPolicy GroundTruthSyntheticConsoleReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/GroundTruthSyntheticConsoleReadOnlyAccess");
        public static ManagedPolicy Health_OrganizationsServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/Health_OrganizationsServiceRolePolicy");
        public static ManagedPolicy IAMAccessAdvisorReadOnly { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/IAMAccessAdvisorReadOnly");
        public static ManagedPolicy IAMAccessAnalyzerFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/IAMAccessAnalyzerFullAccess");
        public static ManagedPolicy IAMAccessAnalyzerReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/IAMAccessAnalyzerReadOnlyAccess");
        public static ManagedPolicy IAMFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/IAMFullAccess");
        public static ManagedPolicy IAMReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/IAMReadOnlyAccess");
        public static ManagedPolicy IAMSelfManageServiceSpecificCredentials { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/IAMSelfManageServiceSpecificCredentials");
        public static ManagedPolicy IAMUserChangePassword { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/IAMUserChangePassword");
        public static ManagedPolicy IAMUserSSHKeys { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/IAMUserSSHKeys");
        public static ManagedPolicy IVSRecordToS3 { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/IVSRecordToS3");
        public static ManagedPolicy KafkaConnectServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/KafkaConnectServiceRolePolicy");
        public static ManagedPolicy KafkaServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/KafkaServiceRolePolicy");
        public static ManagedPolicy LakeFormationDataAccessServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/LakeFormationDataAccessServiceRolePolicy");
        public static ManagedPolicy LexBotPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/LexBotPolicy");
        public static ManagedPolicy LexChannelPolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/LexChannelPolicy");
        public static ManagedPolicy LightsailExportAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/LightsailExportAccess");
        public static ManagedPolicy MediaPackageServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/MediaPackageServiceRolePolicy");
        public static ManagedPolicy MemoryDBServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/MemoryDBServiceRolePolicy");
        public static ManagedPolicy MigrationHubDMSAccessServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/MigrationHubDMSAccessServiceRolePolicy");
        public static ManagedPolicy MigrationHubSMSAccessServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/MigrationHubSMSAccessServiceRolePolicy");
        public static ManagedPolicy MigrationHubServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/MigrationHubServiceRolePolicy");
        public static ManagedPolicy MonitronServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/MonitronServiceRolePolicy");
        public static ManagedPolicy NeptuneConsoleFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/NeptuneConsoleFullAccess");
        public static ManagedPolicy NeptuneFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/NeptuneFullAccess");
        public static ManagedPolicy NeptuneReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/NeptuneReadOnlyAccess");
        public static ManagedPolicy NetworkAdministrator { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/job-function/NetworkAdministrator");
        public static ManagedPolicy OAMFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/OAMFullAccess");
        public static ManagedPolicy OAMReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/OAMReadOnlyAccess");
        public static ManagedPolicy PowerUserAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/PowerUserAccess");
        public static ManagedPolicy QuickSightAccessForS3StorageManagementAnalyticsReadOnly { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/QuickSightAccessForS3StorageManagementAnalyticsReadOnly");
        public static ManagedPolicy RDSCloudHsmAuthorizationRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/RDSCloudHsmAuthorizationRole");
        public static ManagedPolicy ROSAManageSubscription { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/ROSAManageSubscription");
        public static ManagedPolicy ReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/ReadOnlyAccess");
        public static ManagedPolicy ResourceGroupsServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/ResourceGroupsServiceRolePolicy");
        public static ManagedPolicy ResourceGroupsandTagEditorFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/ResourceGroupsandTagEditorFullAccess");
        public static ManagedPolicy ResourceGroupsandTagEditorReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/ResourceGroupsandTagEditorReadOnlyAccess");
        public static ManagedPolicy Route53RecoveryReadinessServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/Route53RecoveryReadinessServiceRolePolicy");
        public static ManagedPolicy Route53ResolverServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/Route53ResolverServiceRolePolicy");
        public static ManagedPolicy S3StorageLensServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/S3StorageLensServiceRolePolicy");
        public static ManagedPolicy SecretsManagerReadWrite { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/SecretsManagerReadWrite");
        public static ManagedPolicy SecurityAudit { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/SecurityAudit");
        public static ManagedPolicy SecurityLakeServiceLinkedRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/SecurityLakeServiceLinkedRole");
        public static ManagedPolicy ServerMigrationConnector { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/ServerMigrationConnector");
        [Obsolete(@"This policy is deprecated and will be removed in a future release. Use AWSServerMigration_ServiceRole instead.")]
        public static ManagedPolicy ServerMigrationServiceRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/ServerMigrationServiceRole");
        [Obsolete(@"This policy is deprecated and will be removed in a future release. Use AWSServiceCatalogAdminFullAccess instead.")]
        public static ManagedPolicy ServiceCatalogAdminFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/ServiceCatalogAdminFullAccess");
        [Obsolete(@"This policy is deprecated and will be removed in a future release. Use AWSServiceCatalogAdminReadOnlyAccess instead.")]
        public static ManagedPolicy ServiceCatalogAdminReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/ServiceCatalogAdminReadOnlyAccess");
        [Obsolete(@"This policy is deprecated and will be removed in a future release. Use AWSServiceCatalogEndUserReadOnlyAccess instead.")]
        public static ManagedPolicy ServiceCatalogEndUserAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/ServiceCatalogEndUserAccess");
        [Obsolete(@"This policy is deprecated and will be removed in a future release. Use AWSServiceCatalogEndUserFullAccess instead.")]
        public static ManagedPolicy ServiceCatalogEndUserFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/ServiceCatalogEndUserFullAccess");
        public static ManagedPolicy ServerMigrationServiceConsoleFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/ServerMigrationServiceConsoleFullAccess");
        public static ManagedPolicy ServerMigrationServiceLaunchRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/ServerMigrationServiceLaunchRole");
        public static ManagedPolicy ServerMigrationServiceRoleForInstanceValidation { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/ServerMigrationServiceRoleForInstanceValidation");
        public static ManagedPolicy AWSServerMigration_ServiceRole { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/ServerMigration_ServiceRole");
        public static ManagedPolicy ServiceQuotasFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/ServiceQuotasFullAccess");
        public static ManagedPolicy ServiceQuotasReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/ServiceQuotasReadOnlyAccess");
        public static ManagedPolicy ServiceQuotasServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/ServiceQuotasServiceRolePolicy");
        public static ManagedPolicy SimpleWorkflowFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/SimpleWorkflowFullAccess");
        public static ManagedPolicy SupportUser { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/job-function/SupportUser");
        public static ManagedPolicy SystemAdministrator { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/job-function/SystemAdministrator");
        public static ManagedPolicy TranslateFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/TranslateFullAccess");
        public static ManagedPolicy TranslateReadOnly { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/TranslateReadOnly");
        public static ManagedPolicy VMImportExportRoleForAWSConnector { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/service-role/VMImportExportRoleForAWSConnector");
        public static ManagedPolicy ViewOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/job-function/ViewOnlyAccess");
        public static ManagedPolicy WAFLoggingServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/WAFLoggingServiceRolePolicy");
        public static ManagedPolicy WAFRegionalLoggingServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/WAFRegionalLoggingServiceRolePolicy");
        public static ManagedPolicy WAFV2LoggingServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/aws-service-role/WAFV2LoggingServiceRolePolicy");
        public static ManagedPolicy WellArchitectedConsoleFullAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/WellArchitectedConsoleFullAccess");
        public static ManagedPolicy WellArchitectedConsoleReadOnlyAccess { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/WellArchitectedConsoleReadOnlyAccess");
        public static ManagedPolicy WorkLinkServiceRolePolicy { get; } = new ManagedPolicy("arn:aws:iam::aws:policy/WorkLinkServiceRolePolicy");

        public static bool operator ==(ManagedPolicy left, ManagedPolicy right) => left.Equals(right);
        public static bool operator !=(ManagedPolicy left, ManagedPolicy right) => !left.Equals(right);

        public static explicit operator string(ManagedPolicy value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is ManagedPolicy other && Equals(other);
        public bool Equals(ManagedPolicy other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
