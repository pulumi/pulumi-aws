// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.AppSync
{
    [AwsResourceType("aws:appsync/function:Function")]
    public partial class Function : global::Pulumi.CustomResource
    {
        [Output("apiId")]
        public Output<string> ApiId { get; private set; } = null!;

        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("code")]
        public Output<string?> Code { get; private set; } = null!;

        [Output("dataSource")]
        public Output<string> DataSource { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("functionId")]
        public Output<string> FunctionId { get; private set; } = null!;

        [Output("functionVersion")]
        public Output<string> FunctionVersion { get; private set; } = null!;

        [Output("maxBatchSize")]
        public Output<int?> MaxBatchSize { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("requestMappingTemplate")]
        public Output<string?> RequestMappingTemplate { get; private set; } = null!;

        [Output("responseMappingTemplate")]
        public Output<string?> ResponseMappingTemplate { get; private set; } = null!;

        [Output("runtime")]
        public Output<Outputs.FunctionRuntime?> Runtime { get; private set; } = null!;

        [Output("syncConfig")]
        public Output<Outputs.FunctionSyncConfig?> SyncConfig { get; private set; } = null!;


        /// <summary>
        /// Create a Function resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Function(string name, FunctionArgs args, CustomResourceOptions? options = null)
            : base("aws:appsync/function:Function", name, args ?? new FunctionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Function(string name, Input<string> id, FunctionState? state = null, CustomResourceOptions? options = null)
            : base("aws:appsync/function:Function", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Function resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Function Get(string name, Input<string> id, FunctionState? state = null, CustomResourceOptions? options = null)
        {
            return new Function(name, id, state, options);
        }
    }

    public sealed class FunctionArgs : global::Pulumi.ResourceArgs
    {
        [Input("apiId", required: true)]
        public Input<string> ApiId { get; set; } = null!;

        [Input("code")]
        public Input<string>? Code { get; set; }

        [Input("dataSource", required: true)]
        public Input<string> DataSource { get; set; } = null!;

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("functionVersion")]
        public Input<string>? FunctionVersion { get; set; }

        [Input("maxBatchSize")]
        public Input<int>? MaxBatchSize { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("requestMappingTemplate")]
        public Input<string>? RequestMappingTemplate { get; set; }

        [Input("responseMappingTemplate")]
        public Input<string>? ResponseMappingTemplate { get; set; }

        [Input("runtime")]
        public Input<Inputs.FunctionRuntimeArgs>? Runtime { get; set; }

        [Input("syncConfig")]
        public Input<Inputs.FunctionSyncConfigArgs>? SyncConfig { get; set; }

        public FunctionArgs()
        {
        }
        public static new FunctionArgs Empty => new FunctionArgs();
    }

    public sealed class FunctionState : global::Pulumi.ResourceArgs
    {
        [Input("apiId")]
        public Input<string>? ApiId { get; set; }

        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("code")]
        public Input<string>? Code { get; set; }

        [Input("dataSource")]
        public Input<string>? DataSource { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("functionId")]
        public Input<string>? FunctionId { get; set; }

        [Input("functionVersion")]
        public Input<string>? FunctionVersion { get; set; }

        [Input("maxBatchSize")]
        public Input<int>? MaxBatchSize { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("requestMappingTemplate")]
        public Input<string>? RequestMappingTemplate { get; set; }

        [Input("responseMappingTemplate")]
        public Input<string>? ResponseMappingTemplate { get; set; }

        [Input("runtime")]
        public Input<Inputs.FunctionRuntimeGetArgs>? Runtime { get; set; }

        [Input("syncConfig")]
        public Input<Inputs.FunctionSyncConfigGetArgs>? SyncConfig { get; set; }

        public FunctionState()
        {
        }
        public static new FunctionState Empty => new FunctionState();
    }
}
