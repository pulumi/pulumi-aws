// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.AppSync.Outputs
{

    [OutputType]
    public sealed class ApiEventConfigAuthProvider
    {
        /// <summary>
        /// Type of authentication provider. Valid values: `API_KEY`, `AWS_IAM`, `AMAZON_COGNITO_USER_POOLS`, `OPENID_CONNECT`, `AWS_LAMBDA`.
        /// </summary>
        public readonly string AuthType;
        /// <summary>
        /// Configuration for Cognito user pool authentication. Required when `auth_type` is `AMAZON_COGNITO_USER_POOLS`. See Cognito Config below.
        /// </summary>
        public readonly Outputs.ApiEventConfigAuthProviderCognitoConfig? CognitoConfig;
        /// <summary>
        /// Configuration for Lambda authorization. Required when `auth_type` is `AWS_LAMBDA`. See Lambda Authorizer Config below.
        /// </summary>
        public readonly Outputs.ApiEventConfigAuthProviderLambdaAuthorizerConfig? LambdaAuthorizerConfig;
        /// <summary>
        /// Configuration for OpenID Connect. Required when `auth_type` is `OPENID_CONNECT`. See OpenID Connect Config below.
        /// </summary>
        public readonly Outputs.ApiEventConfigAuthProviderOpenidConnectConfig? OpenidConnectConfig;

        [OutputConstructor]
        private ApiEventConfigAuthProvider(
            string authType,

            Outputs.ApiEventConfigAuthProviderCognitoConfig? cognitoConfig,

            Outputs.ApiEventConfigAuthProviderLambdaAuthorizerConfig? lambdaAuthorizerConfig,

            Outputs.ApiEventConfigAuthProviderOpenidConnectConfig? openidConnectConfig)
        {
            AuthType = authType;
            CognitoConfig = cognitoConfig;
            LambdaAuthorizerConfig = lambdaAuthorizerConfig;
            OpenidConnectConfig = openidConnectConfig;
        }
    }
}
