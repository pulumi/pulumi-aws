// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.ServiceCatalog
{
    public static class GetProduct
    {
        public static Task<GetProductResult> InvokeAsync(GetProductArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetProductResult>("aws:servicecatalog/getProduct:getProduct", args ?? new GetProductArgs(), options.WithDefaults());

        public static Output<GetProductResult> Invoke(GetProductInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetProductResult>("aws:servicecatalog/getProduct:getProduct", args ?? new GetProductInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProductArgs : global::Pulumi.InvokeArgs
    {
        [Input("acceptLanguage")]
        public string? AcceptLanguage { get; set; }

        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        [Input("tags")]
        private Dictionary<string, string>? _tags;
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetProductArgs()
        {
        }
        public static new GetProductArgs Empty => new GetProductArgs();
    }

    public sealed class GetProductInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("acceptLanguage")]
        public Input<string>? AcceptLanguage { get; set; }

        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetProductInvokeArgs()
        {
        }
        public static new GetProductInvokeArgs Empty => new GetProductInvokeArgs();
    }


    [OutputType]
    public sealed class GetProductResult
    {
        public readonly string? AcceptLanguage;
        public readonly string Arn;
        public readonly string CreatedTime;
        public readonly string Description;
        public readonly string Distributor;
        public readonly bool HasDefaultPath;
        public readonly string Id;
        public readonly string Name;
        public readonly string Owner;
        public readonly string Status;
        public readonly string SupportDescription;
        public readonly string SupportEmail;
        public readonly string SupportUrl;
        public readonly ImmutableDictionary<string, string> Tags;
        public readonly string Type;

        [OutputConstructor]
        private GetProductResult(
            string? acceptLanguage,

            string arn,

            string createdTime,

            string description,

            string distributor,

            bool hasDefaultPath,

            string id,

            string name,

            string owner,

            string status,

            string supportDescription,

            string supportEmail,

            string supportUrl,

            ImmutableDictionary<string, string> tags,

            string type)
        {
            AcceptLanguage = acceptLanguage;
            Arn = arn;
            CreatedTime = createdTime;
            Description = description;
            Distributor = distributor;
            HasDefaultPath = hasDefaultPath;
            Id = id;
            Name = name;
            Owner = owner;
            Status = status;
            SupportDescription = supportDescription;
            SupportEmail = supportEmail;
            SupportUrl = supportUrl;
            Tags = tags;
            Type = type;
        }
    }
}
