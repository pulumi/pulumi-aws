// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.ServiceCatalog
{
    [AwsResourceType("aws:servicecatalog/provisionedProduct:ProvisionedProduct")]
    public partial class ProvisionedProduct : global::Pulumi.CustomResource
    {
        [Output("acceptLanguage")]
        public Output<string?> AcceptLanguage { get; private set; } = null!;

        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("cloudwatchDashboardNames")]
        public Output<ImmutableArray<string>> CloudwatchDashboardNames { get; private set; } = null!;

        [Output("createdTime")]
        public Output<string> CreatedTime { get; private set; } = null!;

        [Output("ignoreErrors")]
        public Output<bool?> IgnoreErrors { get; private set; } = null!;

        [Output("lastProvisioningRecordId")]
        public Output<string> LastProvisioningRecordId { get; private set; } = null!;

        [Output("lastRecordId")]
        public Output<string> LastRecordId { get; private set; } = null!;

        [Output("lastSuccessfulProvisioningRecordId")]
        public Output<string> LastSuccessfulProvisioningRecordId { get; private set; } = null!;

        [Output("launchRoleArn")]
        public Output<string> LaunchRoleArn { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("notificationArns")]
        public Output<ImmutableArray<string>> NotificationArns { get; private set; } = null!;

        [Output("outputs")]
        public Output<ImmutableArray<Outputs.ProvisionedProductOutput>> Outputs { get; private set; } = null!;

        [Output("pathId")]
        public Output<string> PathId { get; private set; } = null!;

        [Output("pathName")]
        public Output<string?> PathName { get; private set; } = null!;

        [Output("productId")]
        public Output<string> ProductId { get; private set; } = null!;

        [Output("productName")]
        public Output<string?> ProductName { get; private set; } = null!;

        [Output("provisioningArtifactId")]
        public Output<string> ProvisioningArtifactId { get; private set; } = null!;

        [Output("provisioningArtifactName")]
        public Output<string?> ProvisioningArtifactName { get; private set; } = null!;

        [Output("provisioningParameters")]
        public Output<ImmutableArray<Outputs.ProvisionedProductProvisioningParameter>> ProvisioningParameters { get; private set; } = null!;

        [Output("retainPhysicalResources")]
        public Output<bool?> RetainPhysicalResources { get; private set; } = null!;

        [Output("stackSetProvisioningPreferences")]
        public Output<Outputs.ProvisionedProductStackSetProvisioningPreferences?> StackSetProvisioningPreferences { get; private set; } = null!;

        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        [Output("statusMessage")]
        public Output<string> StatusMessage { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a ProvisionedProduct resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ProvisionedProduct(string name, ProvisionedProductArgs? args = null, CustomResourceOptions? options = null)
            : base("aws:servicecatalog/provisionedProduct:ProvisionedProduct", name, args ?? new ProvisionedProductArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ProvisionedProduct(string name, Input<string> id, ProvisionedProductState? state = null, CustomResourceOptions? options = null)
            : base("aws:servicecatalog/provisionedProduct:ProvisionedProduct", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ProvisionedProduct resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ProvisionedProduct Get(string name, Input<string> id, ProvisionedProductState? state = null, CustomResourceOptions? options = null)
        {
            return new ProvisionedProduct(name, id, state, options);
        }
    }

    public sealed class ProvisionedProductArgs : global::Pulumi.ResourceArgs
    {
        [Input("acceptLanguage")]
        public Input<string>? AcceptLanguage { get; set; }

        [Input("ignoreErrors")]
        public Input<bool>? IgnoreErrors { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("notificationArns")]
        private InputList<string>? _notificationArns;
        public InputList<string> NotificationArns
        {
            get => _notificationArns ?? (_notificationArns = new InputList<string>());
            set => _notificationArns = value;
        }

        [Input("pathId")]
        public Input<string>? PathId { get; set; }

        [Input("pathName")]
        public Input<string>? PathName { get; set; }

        [Input("productId")]
        public Input<string>? ProductId { get; set; }

        [Input("productName")]
        public Input<string>? ProductName { get; set; }

        [Input("provisioningArtifactId")]
        public Input<string>? ProvisioningArtifactId { get; set; }

        [Input("provisioningArtifactName")]
        public Input<string>? ProvisioningArtifactName { get; set; }

        [Input("provisioningParameters")]
        private InputList<Inputs.ProvisionedProductProvisioningParameterArgs>? _provisioningParameters;
        public InputList<Inputs.ProvisionedProductProvisioningParameterArgs> ProvisioningParameters
        {
            get => _provisioningParameters ?? (_provisioningParameters = new InputList<Inputs.ProvisionedProductProvisioningParameterArgs>());
            set => _provisioningParameters = value;
        }

        [Input("retainPhysicalResources")]
        public Input<bool>? RetainPhysicalResources { get; set; }

        [Input("stackSetProvisioningPreferences")]
        public Input<Inputs.ProvisionedProductStackSetProvisioningPreferencesArgs>? StackSetProvisioningPreferences { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public ProvisionedProductArgs()
        {
        }
        public static new ProvisionedProductArgs Empty => new ProvisionedProductArgs();
    }

    public sealed class ProvisionedProductState : global::Pulumi.ResourceArgs
    {
        [Input("acceptLanguage")]
        public Input<string>? AcceptLanguage { get; set; }

        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("cloudwatchDashboardNames")]
        private InputList<string>? _cloudwatchDashboardNames;
        public InputList<string> CloudwatchDashboardNames
        {
            get => _cloudwatchDashboardNames ?? (_cloudwatchDashboardNames = new InputList<string>());
            set => _cloudwatchDashboardNames = value;
        }

        [Input("createdTime")]
        public Input<string>? CreatedTime { get; set; }

        [Input("ignoreErrors")]
        public Input<bool>? IgnoreErrors { get; set; }

        [Input("lastProvisioningRecordId")]
        public Input<string>? LastProvisioningRecordId { get; set; }

        [Input("lastRecordId")]
        public Input<string>? LastRecordId { get; set; }

        [Input("lastSuccessfulProvisioningRecordId")]
        public Input<string>? LastSuccessfulProvisioningRecordId { get; set; }

        [Input("launchRoleArn")]
        public Input<string>? LaunchRoleArn { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("notificationArns")]
        private InputList<string>? _notificationArns;
        public InputList<string> NotificationArns
        {
            get => _notificationArns ?? (_notificationArns = new InputList<string>());
            set => _notificationArns = value;
        }

        [Input("outputs")]
        private InputList<Inputs.ProvisionedProductOutputGetArgs>? _outputs;
        public InputList<Inputs.ProvisionedProductOutputGetArgs> Outputs
        {
            get => _outputs ?? (_outputs = new InputList<Inputs.ProvisionedProductOutputGetArgs>());
            set => _outputs = value;
        }

        [Input("pathId")]
        public Input<string>? PathId { get; set; }

        [Input("pathName")]
        public Input<string>? PathName { get; set; }

        [Input("productId")]
        public Input<string>? ProductId { get; set; }

        [Input("productName")]
        public Input<string>? ProductName { get; set; }

        [Input("provisioningArtifactId")]
        public Input<string>? ProvisioningArtifactId { get; set; }

        [Input("provisioningArtifactName")]
        public Input<string>? ProvisioningArtifactName { get; set; }

        [Input("provisioningParameters")]
        private InputList<Inputs.ProvisionedProductProvisioningParameterGetArgs>? _provisioningParameters;
        public InputList<Inputs.ProvisionedProductProvisioningParameterGetArgs> ProvisioningParameters
        {
            get => _provisioningParameters ?? (_provisioningParameters = new InputList<Inputs.ProvisionedProductProvisioningParameterGetArgs>());
            set => _provisioningParameters = value;
        }

        [Input("retainPhysicalResources")]
        public Input<bool>? RetainPhysicalResources { get; set; }

        [Input("stackSetProvisioningPreferences")]
        public Input<Inputs.ProvisionedProductStackSetProvisioningPreferencesGetArgs>? StackSetProvisioningPreferences { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("statusMessage")]
        public Input<string>? StatusMessage { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("type")]
        public Input<string>? Type { get; set; }

        public ProvisionedProductState()
        {
        }
        public static new ProvisionedProductState Empty => new ProvisionedProductState();
    }
}
