// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.ServiceCatalog
{
    /// <summary>
    /// Manages a Service Catalog Tag Option.
    /// 
    /// ## Example Usage
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var example = new Aws.ServiceCatalog.TagOption("example", new Aws.ServiceCatalog.TagOptionArgs
    ///         {
    ///             Key = "nyckel",
    ///             Value = "v√§rde",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// `aws_servicecatalog_tag_option` can be imported using the tag option ID, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import aws:servicecatalog/tagOption:TagOption example tag-pjtvagohlyo3m
    /// ```
    /// </summary>
    [AwsResourceType("aws:servicecatalog/tagOption:TagOption")]
    public partial class TagOption : Pulumi.CustomResource
    {
        /// <summary>
        /// Whether tag option is active. Default is `true`.
        /// </summary>
        [Output("active")]
        public Output<bool?> Active { get; private set; } = null!;

        /// <summary>
        /// Tag option key.
        /// </summary>
        [Output("key")]
        public Output<string> Key { get; private set; } = null!;

        [Output("owner")]
        public Output<string> Owner { get; private set; } = null!;

        /// <summary>
        /// Tag option value.
        /// </summary>
        [Output("value")]
        public Output<string> Value { get; private set; } = null!;


        /// <summary>
        /// Create a TagOption resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TagOption(string name, TagOptionArgs args, CustomResourceOptions? options = null)
            : base("aws:servicecatalog/tagOption:TagOption", name, args ?? new TagOptionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TagOption(string name, Input<string> id, TagOptionState? state = null, CustomResourceOptions? options = null)
            : base("aws:servicecatalog/tagOption:TagOption", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TagOption resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TagOption Get(string name, Input<string> id, TagOptionState? state = null, CustomResourceOptions? options = null)
        {
            return new TagOption(name, id, state, options);
        }
    }

    public sealed class TagOptionArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether tag option is active. Default is `true`.
        /// </summary>
        [Input("active")]
        public Input<bool>? Active { get; set; }

        /// <summary>
        /// Tag option key.
        /// </summary>
        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        /// <summary>
        /// Tag option value.
        /// </summary>
        [Input("value", required: true)]
        public Input<string> Value { get; set; } = null!;

        public TagOptionArgs()
        {
        }
    }

    public sealed class TagOptionState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether tag option is active. Default is `true`.
        /// </summary>
        [Input("active")]
        public Input<bool>? Active { get; set; }

        /// <summary>
        /// Tag option key.
        /// </summary>
        [Input("key")]
        public Input<string>? Key { get; set; }

        [Input("owner")]
        public Input<string>? Owner { get; set; }

        /// <summary>
        /// Tag option value.
        /// </summary>
        [Input("value")]
        public Input<string>? Value { get; set; }

        public TagOptionState()
        {
        }
    }
}
