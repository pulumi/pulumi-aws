// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.ServiceCatalog
{
    /// <summary>
    /// Resource for managing an AWS Service Catalog AppRegistry Application.
    /// 
    /// &gt; An AWS Service Catalog AppRegistry Application is displayed in the AWS Console under "MyApplications".
    /// 
    /// ## Example Usage
    /// 
    /// ### Basic Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.ServiceCatalog.AppregistryApplication("example", new()
    ///     {
    ///         Name = "example-app",
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ### Connecting Resources
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.ServiceCatalog.AppregistryApplication("example", new()
    ///     {
    ///         Name = "example-app",
    ///     });
    /// 
    ///     var bucket = new Aws.S3.BucketV2("bucket", new()
    ///     {
    ///         Bucket = "example-bucket",
    ///         Tags = 
    ///         {
    ///             { "awsApplication", example.Arn },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import AWS Service Catalog AppRegistry Application using the `id`. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:servicecatalog/appregistryApplication:AppregistryApplication example application-id-12345678
    /// ```
    /// </summary>
    [AwsResourceType("aws:servicecatalog/appregistryApplication:AppregistryApplication")]
    public partial class AppregistryApplication : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ARN (Amazon Resource Name) of the application.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// Description of the application.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Name of the application. The name must be unique within an AWS region.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a AppregistryApplication resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AppregistryApplication(string name, AppregistryApplicationArgs? args = null, CustomResourceOptions? options = null)
            : base("aws:servicecatalog/appregistryApplication:AppregistryApplication", name, args ?? new AppregistryApplicationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AppregistryApplication(string name, Input<string> id, AppregistryApplicationState? state = null, CustomResourceOptions? options = null)
            : base("aws:servicecatalog/appregistryApplication:AppregistryApplication", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AppregistryApplication resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AppregistryApplication Get(string name, Input<string> id, AppregistryApplicationState? state = null, CustomResourceOptions? options = null)
        {
            return new AppregistryApplication(name, id, state, options);
        }
    }

    public sealed class AppregistryApplicationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description of the application.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Name of the application. The name must be unique within an AWS region.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public AppregistryApplicationArgs()
        {
        }
        public static new AppregistryApplicationArgs Empty => new AppregistryApplicationArgs();
    }

    public sealed class AppregistryApplicationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ARN (Amazon Resource Name) of the application.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// Description of the application.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Name of the application. The name must be unique within an AWS region.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public AppregistryApplicationState()
        {
        }
        public static new AppregistryApplicationState Empty => new AppregistryApplicationState();
    }
}
