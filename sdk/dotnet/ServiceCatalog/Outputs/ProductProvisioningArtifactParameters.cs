// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.ServiceCatalog.Outputs
{

    [OutputType]
    public sealed class ProductProvisioningArtifactParameters
    {
        /// <summary>
        /// Description of the provisioning artifact (i.e., version), including how it differs from the previous provisioning artifact.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Whether AWS Service Catalog stops validating the specified provisioning artifact template even if it is invalid.
        /// </summary>
        public readonly bool? DisableTemplateValidation;
        /// <summary>
        /// Name of the provisioning artifact (for example, `v1`, `v2beta`). No spaces are allowed.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Template source as the physical ID of the resource that contains the template. Currently only supports CloudFormation stack ARN. Specify the physical ID as `arn:[partition]:cloudformation:[region]:[account ID]:stack/[stack name]/[resource ID]`.
        /// </summary>
        public readonly string? TemplatePhysicalId;
        /// <summary>
        /// Template source as URL of the CloudFormation template in Amazon S3.
        /// </summary>
        public readonly string? TemplateUrl;
        /// <summary>
        /// Type of provisioning artifact. See [AWS Docs](https://docs.aws.amazon.com/servicecatalog/latest/dg/API_ProvisioningArtifactProperties.html) for valid list of values.
        /// </summary>
        public readonly string? Type;

        [OutputConstructor]
        private ProductProvisioningArtifactParameters(
            string? description,

            bool? disableTemplateValidation,

            string? name,

            string? templatePhysicalId,

            string? templateUrl,

            string? type)
        {
            Description = description;
            DisableTemplateValidation = disableTemplateValidation;
            Name = name;
            TemplatePhysicalId = templatePhysicalId;
            TemplateUrl = templateUrl;
            Type = type;
        }
    }
}
