// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.ServiceCatalog
{
    [AwsResourceType("aws:servicecatalog/provisioningArtifact:ProvisioningArtifact")]
    public partial class ProvisioningArtifact : global::Pulumi.CustomResource
    {
        [Output("acceptLanguage")]
        public Output<string?> AcceptLanguage { get; private set; } = null!;

        [Output("active")]
        public Output<bool?> Active { get; private set; } = null!;

        [Output("createdTime")]
        public Output<string> CreatedTime { get; private set; } = null!;

        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        [Output("disableTemplateValidation")]
        public Output<bool?> DisableTemplateValidation { get; private set; } = null!;

        [Output("guidance")]
        public Output<string?> Guidance { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("productId")]
        public Output<string> ProductId { get; private set; } = null!;

        [Output("templatePhysicalId")]
        public Output<string?> TemplatePhysicalId { get; private set; } = null!;

        [Output("templateUrl")]
        public Output<string?> TemplateUrl { get; private set; } = null!;

        [Output("type")]
        public Output<string?> Type { get; private set; } = null!;


        /// <summary>
        /// Create a ProvisioningArtifact resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ProvisioningArtifact(string name, ProvisioningArtifactArgs args, CustomResourceOptions? options = null)
            : base("aws:servicecatalog/provisioningArtifact:ProvisioningArtifact", name, args ?? new ProvisioningArtifactArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ProvisioningArtifact(string name, Input<string> id, ProvisioningArtifactState? state = null, CustomResourceOptions? options = null)
            : base("aws:servicecatalog/provisioningArtifact:ProvisioningArtifact", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ProvisioningArtifact resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ProvisioningArtifact Get(string name, Input<string> id, ProvisioningArtifactState? state = null, CustomResourceOptions? options = null)
        {
            return new ProvisioningArtifact(name, id, state, options);
        }
    }

    public sealed class ProvisioningArtifactArgs : global::Pulumi.ResourceArgs
    {
        [Input("acceptLanguage")]
        public Input<string>? AcceptLanguage { get; set; }

        [Input("active")]
        public Input<bool>? Active { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("disableTemplateValidation")]
        public Input<bool>? DisableTemplateValidation { get; set; }

        [Input("guidance")]
        public Input<string>? Guidance { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("productId", required: true)]
        public Input<string> ProductId { get; set; } = null!;

        [Input("templatePhysicalId")]
        public Input<string>? TemplatePhysicalId { get; set; }

        [Input("templateUrl")]
        public Input<string>? TemplateUrl { get; set; }

        [Input("type")]
        public Input<string>? Type { get; set; }

        public ProvisioningArtifactArgs()
        {
        }
        public static new ProvisioningArtifactArgs Empty => new ProvisioningArtifactArgs();
    }

    public sealed class ProvisioningArtifactState : global::Pulumi.ResourceArgs
    {
        [Input("acceptLanguage")]
        public Input<string>? AcceptLanguage { get; set; }

        [Input("active")]
        public Input<bool>? Active { get; set; }

        [Input("createdTime")]
        public Input<string>? CreatedTime { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("disableTemplateValidation")]
        public Input<bool>? DisableTemplateValidation { get; set; }

        [Input("guidance")]
        public Input<string>? Guidance { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("productId")]
        public Input<string>? ProductId { get; set; }

        [Input("templatePhysicalId")]
        public Input<string>? TemplatePhysicalId { get; set; }

        [Input("templateUrl")]
        public Input<string>? TemplateUrl { get; set; }

        [Input("type")]
        public Input<string>? Type { get; set; }

        public ProvisioningArtifactState()
        {
        }
        public static new ProvisioningArtifactState Empty => new ProvisioningArtifactState();
    }
}
