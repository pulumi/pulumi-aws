// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.ServiceCatalog
{
    public static class GetPortfolio
    {
        public static Task<GetPortfolioResult> InvokeAsync(GetPortfolioArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPortfolioResult>("aws:servicecatalog/getPortfolio:getPortfolio", args ?? new GetPortfolioArgs(), options.WithDefaults());

        public static Output<GetPortfolioResult> Invoke(GetPortfolioInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPortfolioResult>("aws:servicecatalog/getPortfolio:getPortfolio", args ?? new GetPortfolioInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPortfolioArgs : global::Pulumi.InvokeArgs
    {
        [Input("acceptLanguage")]
        public string? AcceptLanguage { get; set; }

        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        [Input("tags")]
        private Dictionary<string, string>? _tags;
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetPortfolioArgs()
        {
        }
        public static new GetPortfolioArgs Empty => new GetPortfolioArgs();
    }

    public sealed class GetPortfolioInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("acceptLanguage")]
        public Input<string>? AcceptLanguage { get; set; }

        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetPortfolioInvokeArgs()
        {
        }
        public static new GetPortfolioInvokeArgs Empty => new GetPortfolioInvokeArgs();
    }


    [OutputType]
    public sealed class GetPortfolioResult
    {
        public readonly string? AcceptLanguage;
        public readonly string Arn;
        public readonly string CreatedTime;
        public readonly string Description;
        public readonly string Id;
        public readonly string Name;
        public readonly string ProviderName;
        public readonly ImmutableDictionary<string, string> Tags;

        [OutputConstructor]
        private GetPortfolioResult(
            string? acceptLanguage,

            string arn,

            string createdTime,

            string description,

            string id,

            string name,

            string providerName,

            ImmutableDictionary<string, string> tags)
        {
            AcceptLanguage = acceptLanguage;
            Arn = arn;
            CreatedTime = createdTime;
            Description = description;
            Id = id;
            Name = name;
            ProviderName = providerName;
            Tags = tags;
        }
    }
}
