// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CodeBuild.Inputs
{

    public sealed class ProjectSourceGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Configuration block that contains information that defines how the build project reports the build status to the source provider. This option is only used when the source provider is `GITHUB`, `GITHUB_ENTERPRISE`, or `BITBUCKET`. `build_status_config` blocks are documented below.
        /// </summary>
        [Input("buildStatusConfig")]
        public Input<Inputs.ProjectSourceBuildStatusConfigGetArgs>? BuildStatusConfig { get; set; }

        /// <summary>
        /// Build specification to use for this build project's related builds. This must be set when `type` is `NO_SOURCE`.
        /// </summary>
        [Input("buildspec")]
        public Input<string>? Buildspec { get; set; }

        /// <summary>
        /// Truncate git history to this many commits. Use `0` for a `Full` checkout which you need to run commands like `git branch --show-current`. See [AWS CodePipeline User Guide: Tutorial: Use full clone with a GitHub pipeline source](https://docs.aws.amazon.com/codepipeline/latest/userguide/tutorials-github-gitclone.html) for details.
        /// </summary>
        [Input("gitCloneDepth")]
        public Input<int>? GitCloneDepth { get; set; }

        /// <summary>
        /// Configuration block. Detailed below.
        /// </summary>
        [Input("gitSubmodulesConfig")]
        public Input<Inputs.ProjectSourceGitSubmodulesConfigGetArgs>? GitSubmodulesConfig { get; set; }

        /// <summary>
        /// Ignore SSL warnings when connecting to source control.
        /// </summary>
        [Input("insecureSsl")]
        public Input<bool>? InsecureSsl { get; set; }

        /// <summary>
        /// Location of the source code from git or s3.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Whether to report the status of a build's start and finish to your source provider. This option is only valid when the `type` is `BITBUCKET` or `GITHUB`.
        /// </summary>
        [Input("reportBuildStatus")]
        public Input<bool>? ReportBuildStatus { get; set; }

        /// <summary>
        /// Type of repository that contains the source code to be built. Valid values: `CODECOMMIT`, `CODEPIPELINE`, `GITHUB`, `GITHUB_ENTERPRISE`, `BITBUCKET`, `S3`, `NO_SOURCE`.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public ProjectSourceGetArgs()
        {
        }
        public static new ProjectSourceGetArgs Empty => new ProjectSourceGetArgs();
    }
}
