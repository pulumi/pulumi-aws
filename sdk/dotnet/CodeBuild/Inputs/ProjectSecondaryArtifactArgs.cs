// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CodeBuild.Inputs
{

    public sealed class ProjectSecondaryArtifactArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Artifact identifier. Must be the same specified inside the AWS CodeBuild build specification.
        /// </summary>
        [Input("artifactIdentifier", required: true)]
        public Input<string> ArtifactIdentifier { get; set; } = null!;

        /// <summary>
        /// Whether to disable encrypting output artifacts. If `type` is set to `NO_ARTIFACTS`, this value is ignored. Defaults to `false`.
        /// </summary>
        [Input("encryptionDisabled")]
        public Input<bool>? EncryptionDisabled { get; set; }

        /// <summary>
        /// Location of the source code from git or s3.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Name of the project. If `type` is set to `S3`, this is the name of the output artifact object
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Namespace to use in storing build artifacts. If `type` is set to `S3`, then valid values are `BUILD_ID` or `NONE`.
        /// </summary>
        [Input("namespaceType")]
        public Input<string>? NamespaceType { get; set; }

        /// <summary>
        /// Whether a name specified in the build specification overrides the artifact name.
        /// </summary>
        [Input("overrideArtifactName")]
        public Input<bool>? OverrideArtifactName { get; set; }

        /// <summary>
        /// Type of build output artifact to create. If `type` is set to `S3`, valid values are `NONE`, `ZIP`
        /// </summary>
        [Input("packaging")]
        public Input<string>? Packaging { get; set; }

        /// <summary>
        /// If `type` is set to `S3`, this is the path to the output artifact.
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        /// <summary>
        /// Type of repository that contains the source code to be built. Valid values: `CODECOMMIT`, `CODEPIPELINE`, `GITHUB`, `GITHUB_ENTERPRISE`, `BITBUCKET`, `S3`, `NO_SOURCE`.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public ProjectSecondaryArtifactArgs()
        {
        }
    }
}
