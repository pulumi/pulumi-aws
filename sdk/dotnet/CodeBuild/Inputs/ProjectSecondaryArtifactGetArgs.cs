// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CodeBuild.Inputs
{

    public sealed class ProjectSecondaryArtifactGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The artifact identifier. Must be the same specified inside AWS CodeBuild buildspec.
        /// </summary>
        [Input("artifactIdentifier", required: true)]
        public Input<string> ArtifactIdentifier { get; set; } = null!;

        /// <summary>
        /// If set to true, output artifacts will not be encrypted. If `type` is set to `NO_ARTIFACTS` then this value will be ignored. Defaults to `false`.
        /// </summary>
        [Input("encryptionDisabled")]
        public Input<bool>? EncryptionDisabled { get; set; }

        /// <summary>
        /// Information about the build output artifact location. If `type` is set to `CODEPIPELINE` or `NO_ARTIFACTS` then this value will be ignored. If `type` is set to `S3`, this is the name of the output bucket. If `path` is not also specified, then `location` can also specify the path of the output artifact in the output bucket.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of the project. If `type` is set to `S3`, this is the name of the output artifact object
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The namespace to use in storing build artifacts. If `type` is set to `S3`, then valid values for this parameter are: `BUILD_ID` or `NONE`.
        /// </summary>
        [Input("namespaceType")]
        public Input<string>? NamespaceType { get; set; }

        /// <summary>
        /// If set to true, a name specified in the build spec file overrides the artifact name.
        /// </summary>
        [Input("overrideArtifactName")]
        public Input<bool>? OverrideArtifactName { get; set; }

        /// <summary>
        /// The type of build output artifact to create. If `type` is set to `S3`, valid values for this parameter are: `NONE` or `ZIP`
        /// </summary>
        [Input("packaging")]
        public Input<string>? Packaging { get; set; }

        /// <summary>
        /// If `type` is set to `S3`, this is the path to the output artifact
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        /// <summary>
        /// The build output artifact's type. The only valid value is `S3`.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public ProjectSecondaryArtifactGetArgs()
        {
        }
    }
}
