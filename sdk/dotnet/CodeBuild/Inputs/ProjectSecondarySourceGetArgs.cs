// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CodeBuild.Inputs
{

    public sealed class ProjectSecondarySourceGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Configuration block with the authorization settings for AWS CodeBuild to access the source code to be built. This information is for the AWS CodeBuild console's use only. Use the `aws.codebuild.SourceCredential` resource instead. Auth blocks are documented below.
        /// </summary>
        [Input("auth")]
        public Input<Inputs.ProjectSecondarySourceAuthGetArgs>? Auth { get; set; }

        /// <summary>
        /// Configuration block that contains information that defines how the build project reports the build status to the source provider. This option is only used when the source provider is `GITHUB`, `GITHUB_ENTERPRISE`, or `BITBUCKET`. `build_status_config` blocks are documented below.
        /// </summary>
        [Input("buildStatusConfig")]
        public Input<Inputs.ProjectSecondarySourceBuildStatusConfigGetArgs>? BuildStatusConfig { get; set; }

        /// <summary>
        /// The build spec declaration to use for this build project's related builds. This must be set when `type` is `NO_SOURCE`. It can either be a path to a file residing in the repository to be built or a local file path leveraging the `file()` built-in.
        /// </summary>
        [Input("buildspec")]
        public Input<string>? Buildspec { get; set; }

        /// <summary>
        /// Truncate git history to this many commits. Use `0` for a `Full` checkout which you need to run commands like `git branch --show-current`. See [AWS CodePipeline User Guide: Tutorial: Use full clone with a GitHub pipeline source](https://docs.aws.amazon.com/codepipeline/latest/userguide/tutorials-github-gitclone.html) for details.
        /// </summary>
        [Input("gitCloneDepth")]
        public Input<int>? GitCloneDepth { get; set; }

        /// <summary>
        /// Configuration block. Detailed below.
        /// </summary>
        [Input("gitSubmodulesConfig")]
        public Input<Inputs.ProjectSecondarySourceGitSubmodulesConfigGetArgs>? GitSubmodulesConfig { get; set; }

        /// <summary>
        /// Ignore SSL warnings when connecting to source control.
        /// </summary>
        [Input("insecureSsl")]
        public Input<bool>? InsecureSsl { get; set; }

        /// <summary>
        /// Location of the source code from git or s3.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Whether to report the status of a build's start and finish to your source provider. This option is only valid when your source provider is `GITHUB`, `BITBUCKET`, or `GITHUB_ENTERPRISE`.
        /// </summary>
        [Input("reportBuildStatus")]
        public Input<bool>? ReportBuildStatus { get; set; }

        /// <summary>
        /// An identifier for this project source. The identifier can only contain alphanumeric characters and underscores, and must be less than 128 characters in length.
        /// </summary>
        [Input("sourceIdentifier", required: true)]
        public Input<string> SourceIdentifier { get; set; } = null!;

        /// <summary>
        /// Authorization type to use. The only valid value is `OAUTH`. This data type is deprecated and is no longer accurate or used. Use the `aws.codebuild.SourceCredential` resource instead.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public ProjectSecondarySourceGetArgs()
        {
        }
        public static new ProjectSecondarySourceGetArgs Empty => new ProjectSecondarySourceGetArgs();
    }
}
