// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CodeBuild.Outputs
{

    [OutputType]
    public sealed class FleetComputeConfiguration
    {
        /// <summary>
        /// Amount of disk space of the instance type included in the fleet.
        /// </summary>
        public readonly int? Disk;
        /// <summary>
        /// EC2 instance type to be launched in the fleet. Specify only if `computeType` is set to `CUSTOM_INSTANCE_TYPE`. See [Supported instance families](https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-compute-types.html#environment-reserved-capacity.instance-types).
        /// </summary>
        public readonly string? InstanceType;
        /// <summary>
        /// Machine type of the instance type included in the fleet. Valid values: `GENERAL`, `NVME`. Specify only if `computeType` is set to `ATTRIBUTE_BASED_COMPUTE`.
        /// </summary>
        public readonly string? MachineType;
        /// <summary>
        /// Amount of memory of the instance type included in the fleet. Specify only if `computeType` is set to `ATTRIBUTE_BASED_COMPUTE`.
        /// </summary>
        public readonly int? Memory;
        /// <summary>
        /// Number of vCPUs of the instance type included in the fleet. Specify only if `computeType` is set to `ATTRIBUTE_BASED_COMPUTE`.
        /// </summary>
        public readonly int? Vcpu;

        [OutputConstructor]
        private FleetComputeConfiguration(
            int? disk,

            string? instanceType,

            string? machineType,

            int? memory,

            int? vcpu)
        {
            Disk = disk;
            InstanceType = instanceType;
            MachineType = machineType;
            Memory = memory;
            Vcpu = vcpu;
        }
    }
}
