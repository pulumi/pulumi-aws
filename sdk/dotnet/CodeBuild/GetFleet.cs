// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CodeBuild
{
    public static class GetFleet
    {
        /// <summary>
        /// Retrieve information about an CodeBuild Fleet.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testFleet = new Aws.CodeBuild.Fleet("test", new()
        ///     {
        ///         BaseCapacity = 2,
        ///         ComputeType = "BUILD_GENERAL1_SMALL",
        ///         EnvironmentType = "LINUX_CONTAINER",
        ///         Name = "full-example-codebuild-fleet",
        ///         OverflowBehavior = "QUEUE",
        ///         ScalingConfiguration = new Aws.CodeBuild.Inputs.FleetScalingConfigurationArgs
        ///         {
        ///             MaxCapacity = 5,
        ///             ScalingType = "TARGET_TRACKING_SCALING",
        ///             TargetTrackingScalingConfigs = new[]
        ///             {
        ///                 new Aws.CodeBuild.Inputs.FleetScalingConfigurationTargetTrackingScalingConfigArgs
        ///                 {
        ///                     MetricType = "FLEET_UTILIZATION_RATE",
        ///                     TargetValue = 97.5,
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        ///     var test = Aws.CodeBuild.GetFleet.Invoke(new()
        ///     {
        ///         Name = testFleet.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.CodeBuild.GetFleet.Invoke(new()
        ///     {
        ///         Name = "my-codebuild-fleet-name",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetFleetResult> InvokeAsync(GetFleetArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFleetResult>("aws:codebuild/getFleet:getFleet", args ?? new GetFleetArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieve information about an CodeBuild Fleet.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testFleet = new Aws.CodeBuild.Fleet("test", new()
        ///     {
        ///         BaseCapacity = 2,
        ///         ComputeType = "BUILD_GENERAL1_SMALL",
        ///         EnvironmentType = "LINUX_CONTAINER",
        ///         Name = "full-example-codebuild-fleet",
        ///         OverflowBehavior = "QUEUE",
        ///         ScalingConfiguration = new Aws.CodeBuild.Inputs.FleetScalingConfigurationArgs
        ///         {
        ///             MaxCapacity = 5,
        ///             ScalingType = "TARGET_TRACKING_SCALING",
        ///             TargetTrackingScalingConfigs = new[]
        ///             {
        ///                 new Aws.CodeBuild.Inputs.FleetScalingConfigurationTargetTrackingScalingConfigArgs
        ///                 {
        ///                     MetricType = "FLEET_UTILIZATION_RATE",
        ///                     TargetValue = 97.5,
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        ///     var test = Aws.CodeBuild.GetFleet.Invoke(new()
        ///     {
        ///         Name = testFleet.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.CodeBuild.GetFleet.Invoke(new()
        ///     {
        ///         Name = "my-codebuild-fleet-name",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetFleetResult> Invoke(GetFleetInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFleetResult>("aws:codebuild/getFleet:getFleet", args ?? new GetFleetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFleetArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Fleet name.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("tags")]
        private Dictionary<string, string>? _tags;

        /// <summary>
        /// Mapping of Key-Value tags for the resource.
        /// </summary>
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetFleetArgs()
        {
        }
        public static new GetFleetArgs Empty => new GetFleetArgs();
    }

    public sealed class GetFleetInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Fleet name.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Mapping of Key-Value tags for the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetFleetInvokeArgs()
        {
        }
        public static new GetFleetInvokeArgs Empty => new GetFleetInvokeArgs();
    }


    [OutputType]
    public sealed class GetFleetResult
    {
        /// <summary>
        /// ARN of the Fleet.
        /// </summary>
        public readonly string Arn;
        /// <summary>
        /// Number of machines allocated to the ï¬‚eet.
        /// </summary>
        public readonly int BaseCapacity;
        /// <summary>
        /// Compute resources the compute fleet uses.
        /// </summary>
        public readonly string ComputeType;
        /// <summary>
        /// Creation time of the fleet.
        /// </summary>
        public readonly string Created;
        /// <summary>
        /// Environment type of the compute fleet.
        /// </summary>
        public readonly string EnvironmentType;
        /// <summary>
        /// The service role associated with the compute fleet.
        /// </summary>
        public readonly string FleetServiceRole;
        /// <summary>
        /// ARN of the Fleet.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The Amazon Machine Image (AMI) of the compute fleet.
        /// </summary>
        public readonly string ImageId;
        /// <summary>
        /// Last modification time of the fleet.
        /// </summary>
        public readonly string LastModified;
        public readonly string Name;
        /// <summary>
        /// Overflow behavior for compute fleet.
        /// </summary>
        public readonly string OverflowBehavior;
        /// <summary>
        /// Nested attribute containing information about the scaling configuration.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFleetScalingConfigurationResult> ScalingConfigurations;
        /// <summary>
        /// Nested attribute containing information about the current status of the fleet.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFleetStatusResult> Statuses;
        /// <summary>
        /// Mapping of Key-Value tags for the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// Nested attribute containing information about the VPC configuration.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFleetVpcConfigResult> VpcConfigs;

        [OutputConstructor]
        private GetFleetResult(
            string arn,

            int baseCapacity,

            string computeType,

            string created,

            string environmentType,

            string fleetServiceRole,

            string id,

            string imageId,

            string lastModified,

            string name,

            string overflowBehavior,

            ImmutableArray<Outputs.GetFleetScalingConfigurationResult> scalingConfigurations,

            ImmutableArray<Outputs.GetFleetStatusResult> statuses,

            ImmutableDictionary<string, string> tags,

            ImmutableArray<Outputs.GetFleetVpcConfigResult> vpcConfigs)
        {
            Arn = arn;
            BaseCapacity = baseCapacity;
            ComputeType = computeType;
            Created = created;
            EnvironmentType = environmentType;
            FleetServiceRole = fleetServiceRole;
            Id = id;
            ImageId = imageId;
            LastModified = lastModified;
            Name = name;
            OverflowBehavior = overflowBehavior;
            ScalingConfigurations = scalingConfigurations;
            Statuses = statuses;
            Tags = tags;
            VpcConfigs = vpcConfigs;
        }
    }
}
