// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws
{
    [Obsolete(@"aws.getAutoscalingGroups has been deprecated in favor of aws.autoscaling.getAmiIds")]
    public static class GetAutoscalingGroups
    {
        /// <summary>
        /// The Autoscaling Groups data source allows access to the list of AWS
        /// ASGs within a specific region. This will allow you to pass a list of AutoScaling Groups to other resources.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var groups = Output.Create(Aws.AutoScaling.GetAmiIds.InvokeAsync(new Aws.AutoScaling.GetAmiIdsArgs
        ///         {
        ///             Filters = 
        ///             {
        ///                 new Aws.AutoScaling.Inputs.GetAmiIdsFilterArgs
        ///                 {
        ///                     Name = "key",
        ///                     Values = 
        ///                     {
        ///                         "Team",
        ///                     },
        ///                 },
        ///                 new Aws.AutoScaling.Inputs.GetAmiIdsFilterArgs
        ///                 {
        ///                     Name = "value",
        ///                     Values = 
        ///                     {
        ///                         "Pets",
        ///                     },
        ///                 },
        ///             },
        ///         }));
        ///         var slackNotifications = new Aws.AutoScaling.Notification("slackNotifications", new Aws.AutoScaling.NotificationArgs
        ///         {
        ///             GroupNames = groups.Apply(groups =&gt; groups.Names),
        ///             Notifications = 
        ///             {
        ///                 "autoscaling:EC2_INSTANCE_LAUNCH",
        ///                 "autoscaling:EC2_INSTANCE_TERMINATE",
        ///                 "autoscaling:EC2_INSTANCE_LAUNCH_ERROR",
        ///                 "autoscaling:EC2_INSTANCE_TERMINATE_ERROR",
        ///             },
        ///             TopicArn = "TOPIC ARN",
        ///         });
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetAutoscalingGroupsResult> InvokeAsync(GetAutoscalingGroupsArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAutoscalingGroupsResult>("aws:index/getAutoscalingGroups:getAutoscalingGroups", args ?? new GetAutoscalingGroupsArgs(), options.WithVersion());
    }


    public sealed class GetAutoscalingGroupsArgs : Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetAutoscalingGroupsFilterArgs>? _filters;

        /// <summary>
        /// A filter used to scope the list e.g. by tags. See [related docs](http://docs.aws.amazon.com/AutoScaling/latest/APIReference/API_Filter.html).
        /// </summary>
        public List<Inputs.GetAutoscalingGroupsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetAutoscalingGroupsFilterArgs>());
            set => _filters = value;
        }

        public GetAutoscalingGroupsArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetAutoscalingGroupsResult
    {
        /// <summary>
        /// A list of the Autoscaling Groups Arns in the current region.
        /// </summary>
        public readonly ImmutableArray<string> Arns;
        public readonly ImmutableArray<Outputs.GetAutoscalingGroupsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list of the Autoscaling Groups in the current region.
        /// </summary>
        public readonly ImmutableArray<string> Names;

        [OutputConstructor]
        private GetAutoscalingGroupsResult(
            ImmutableArray<string> arns,

            ImmutableArray<Outputs.GetAutoscalingGroupsFilterResult> filters,

            string id,

            ImmutableArray<string> names)
        {
            Arns = arns;
            Filters = filters;
            Id = id;
            Names = names;
        }
    }
}
