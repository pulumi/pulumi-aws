// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Grafana
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Grafana.WorkspaceServiceAccount("example", new()
    ///     {
    ///         Name = "example-admin",
    ///         GrafanaRole = "ADMIN",
    ///         WorkspaceId = exampleAwsGrafanaWorkspace.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import Managed Grafana Workspace Service Account using the `workspace_id` and `service_account_id` separated by a comma (`,`). For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:grafana/workspaceServiceAccount:WorkspaceServiceAccount example g-abc12345,1
    /// ```
    /// </summary>
    [AwsResourceType("aws:grafana/workspaceServiceAccount:WorkspaceServiceAccount")]
    public partial class WorkspaceServiceAccount : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The permission level to use for this service account. For more information about the roles and the permissions each has, see the [User roles](https://docs.aws.amazon.com/grafana/latest/userguide/Grafana-user-roles.html) documentation.
        /// </summary>
        [Output("grafanaRole")]
        public Output<string> GrafanaRole { get; private set; } = null!;

        /// <summary>
        /// A name for the service account. The name must be unique within the workspace, as it determines the ID associated with the service account.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Identifier of the service account in the given Grafana workspace
        /// </summary>
        [Output("serviceAccountId")]
        public Output<string> ServiceAccountId { get; private set; } = null!;

        /// <summary>
        /// The Grafana workspace with which the service account is associated.
        /// </summary>
        [Output("workspaceId")]
        public Output<string> WorkspaceId { get; private set; } = null!;


        /// <summary>
        /// Create a WorkspaceServiceAccount resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WorkspaceServiceAccount(string name, WorkspaceServiceAccountArgs args, CustomResourceOptions? options = null)
            : base("aws:grafana/workspaceServiceAccount:WorkspaceServiceAccount", name, args ?? new WorkspaceServiceAccountArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WorkspaceServiceAccount(string name, Input<string> id, WorkspaceServiceAccountState? state = null, CustomResourceOptions? options = null)
            : base("aws:grafana/workspaceServiceAccount:WorkspaceServiceAccount", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WorkspaceServiceAccount resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WorkspaceServiceAccount Get(string name, Input<string> id, WorkspaceServiceAccountState? state = null, CustomResourceOptions? options = null)
        {
            return new WorkspaceServiceAccount(name, id, state, options);
        }
    }

    public sealed class WorkspaceServiceAccountArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The permission level to use for this service account. For more information about the roles and the permissions each has, see the [User roles](https://docs.aws.amazon.com/grafana/latest/userguide/Grafana-user-roles.html) documentation.
        /// </summary>
        [Input("grafanaRole", required: true)]
        public Input<string> GrafanaRole { get; set; } = null!;

        /// <summary>
        /// A name for the service account. The name must be unique within the workspace, as it determines the ID associated with the service account.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The Grafana workspace with which the service account is associated.
        /// </summary>
        [Input("workspaceId", required: true)]
        public Input<string> WorkspaceId { get; set; } = null!;

        public WorkspaceServiceAccountArgs()
        {
        }
        public static new WorkspaceServiceAccountArgs Empty => new WorkspaceServiceAccountArgs();
    }

    public sealed class WorkspaceServiceAccountState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The permission level to use for this service account. For more information about the roles and the permissions each has, see the [User roles](https://docs.aws.amazon.com/grafana/latest/userguide/Grafana-user-roles.html) documentation.
        /// </summary>
        [Input("grafanaRole")]
        public Input<string>? GrafanaRole { get; set; }

        /// <summary>
        /// A name for the service account. The name must be unique within the workspace, as it determines the ID associated with the service account.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Identifier of the service account in the given Grafana workspace
        /// </summary>
        [Input("serviceAccountId")]
        public Input<string>? ServiceAccountId { get; set; }

        /// <summary>
        /// The Grafana workspace with which the service account is associated.
        /// </summary>
        [Input("workspaceId")]
        public Input<string>? WorkspaceId { get; set; }

        public WorkspaceServiceAccountState()
        {
        }
        public static new WorkspaceServiceAccountState Empty => new WorkspaceServiceAccountState();
    }
}
