// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Grafana
{
    public static class GetWorkspace
    {
        /// <summary>
        /// Provides an Amazon Managed Grafana workspace data source.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### Basic configuration
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(Aws.Grafana.GetWorkspace.InvokeAsync(new Aws.Grafana.GetWorkspaceArgs
        ///         {
        ///             WorkspaceId = "g-2054c75a02",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetWorkspaceResult> InvokeAsync(GetWorkspaceArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetWorkspaceResult>("aws:grafana/getWorkspace:getWorkspace", args ?? new GetWorkspaceArgs(), options.WithDefaults());

        /// <summary>
        /// Provides an Amazon Managed Grafana workspace data source.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### Basic configuration
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var example = Output.Create(Aws.Grafana.GetWorkspace.InvokeAsync(new Aws.Grafana.GetWorkspaceArgs
        ///         {
        ///             WorkspaceId = "g-2054c75a02",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetWorkspaceResult> Invoke(GetWorkspaceInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetWorkspaceResult>("aws:grafana/getWorkspace:getWorkspace", args ?? new GetWorkspaceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWorkspaceArgs : Pulumi.InvokeArgs
    {
        [Input("tags")]
        private Dictionary<string, string>? _tags;

        /// <summary>
        /// The tags assigned to the resource
        /// </summary>
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        /// <summary>
        /// The Grafana workspace ID.
        /// </summary>
        [Input("workspaceId", required: true)]
        public string WorkspaceId { get; set; } = null!;

        public GetWorkspaceArgs()
        {
        }
    }

    public sealed class GetWorkspaceInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// The tags assigned to the resource
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The Grafana workspace ID.
        /// </summary>
        [Input("workspaceId", required: true)]
        public Input<string> WorkspaceId { get; set; } = null!;

        public GetWorkspaceInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetWorkspaceResult
    {
        /// <summary>
        /// (Required) The type of account access for the workspace. Valid values are `CURRENT_ACCOUNT` and `ORGANIZATION`. If `ORGANIZATION` is specified, then `organizational_units` must also be present.
        /// </summary>
        public readonly string AccountAccessType;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the Grafana workspace.
        /// </summary>
        public readonly string Arn;
        /// <summary>
        /// (Required) The authentication providers for the workspace. Valid values are `AWS_SSO`, `SAML`, or both.
        /// </summary>
        public readonly ImmutableArray<string> AuthenticationProviders;
        /// <summary>
        /// The creation date of the Grafana workspace.
        /// </summary>
        public readonly string CreatedDate;
        /// <summary>
        /// The data sources for the workspace.
        /// </summary>
        public readonly ImmutableArray<string> DataSources;
        /// <summary>
        /// The workspace description.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The endpoint of the Grafana workspace.
        /// </summary>
        public readonly string Endpoint;
        /// <summary>
        /// The version of Grafana running on the workspace.
        /// </summary>
        public readonly string GrafanaVersion;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The last updated date of the Grafana workspace.
        /// </summary>
        public readonly string LastUpdatedDate;
        /// <summary>
        /// The Grafana workspace name.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The notification destinations.
        /// </summary>
        public readonly ImmutableArray<string> NotificationDestinations;
        /// <summary>
        /// The role name that the workspace uses to access resources through Amazon Organizations.
        /// </summary>
        public readonly string OrganizationRoleName;
        /// <summary>
        /// The Amazon Organizations organizational units that the workspace is authorized to use data sources from.
        /// </summary>
        public readonly ImmutableArray<string> OrganizationalUnits;
        /// <summary>
        /// The permission type of the workspace.
        /// </summary>
        public readonly string PermissionType;
        /// <summary>
        /// The IAM role ARN that the workspace assumes.
        /// </summary>
        public readonly string RoleArn;
        public readonly string SamlConfigurationStatus;
        /// <summary>
        /// The AWS CloudFormation stack set name that provisions IAM roles to be used by the workspace.
        /// </summary>
        public readonly string StackSetName;
        /// <summary>
        /// The status of the Grafana workspace.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The tags assigned to the resource
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        public readonly string WorkspaceId;

        [OutputConstructor]
        private GetWorkspaceResult(
            string accountAccessType,

            string arn,

            ImmutableArray<string> authenticationProviders,

            string createdDate,

            ImmutableArray<string> dataSources,

            string description,

            string endpoint,

            string grafanaVersion,

            string id,

            string lastUpdatedDate,

            string name,

            ImmutableArray<string> notificationDestinations,

            string organizationRoleName,

            ImmutableArray<string> organizationalUnits,

            string permissionType,

            string roleArn,

            string samlConfigurationStatus,

            string stackSetName,

            string status,

            ImmutableDictionary<string, string> tags,

            string workspaceId)
        {
            AccountAccessType = accountAccessType;
            Arn = arn;
            AuthenticationProviders = authenticationProviders;
            CreatedDate = createdDate;
            DataSources = dataSources;
            Description = description;
            Endpoint = endpoint;
            GrafanaVersion = grafanaVersion;
            Id = id;
            LastUpdatedDate = lastUpdatedDate;
            Name = name;
            NotificationDestinations = notificationDestinations;
            OrganizationRoleName = organizationRoleName;
            OrganizationalUnits = organizationalUnits;
            PermissionType = permissionType;
            RoleArn = roleArn;
            SamlConfigurationStatus = samlConfigurationStatus;
            StackSetName = stackSetName;
            Status = status;
            Tags = tags;
            WorkspaceId = workspaceId;
        }
    }
}
