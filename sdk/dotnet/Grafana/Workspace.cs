// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Grafana
{
    [AwsResourceType("aws:grafana/workspace:Workspace")]
    public partial class Workspace : global::Pulumi.CustomResource
    {
        [Output("accountAccessType")]
        public Output<string> AccountAccessType { get; private set; } = null!;

        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("authenticationProviders")]
        public Output<ImmutableArray<string>> AuthenticationProviders { get; private set; } = null!;

        [Output("dataSources")]
        public Output<ImmutableArray<string>> DataSources { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("endpoint")]
        public Output<string> Endpoint { get; private set; } = null!;

        [Output("grafanaVersion")]
        public Output<string> GrafanaVersion { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("notificationDestinations")]
        public Output<ImmutableArray<string>> NotificationDestinations { get; private set; } = null!;

        [Output("organizationRoleName")]
        public Output<string?> OrganizationRoleName { get; private set; } = null!;

        [Output("organizationalUnits")]
        public Output<ImmutableArray<string>> OrganizationalUnits { get; private set; } = null!;

        [Output("permissionType")]
        public Output<string> PermissionType { get; private set; } = null!;

        [Output("roleArn")]
        public Output<string?> RoleArn { get; private set; } = null!;

        [Output("samlConfigurationStatus")]
        public Output<string> SamlConfigurationStatus { get; private set; } = null!;

        [Output("stackSetName")]
        public Output<string?> StackSetName { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("vpcConfiguration")]
        public Output<Outputs.WorkspaceVpcConfiguration?> VpcConfiguration { get; private set; } = null!;


        /// <summary>
        /// Create a Workspace resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Workspace(string name, WorkspaceArgs args, CustomResourceOptions? options = null)
            : base("aws:grafana/workspace:Workspace", name, args ?? new WorkspaceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Workspace(string name, Input<string> id, WorkspaceState? state = null, CustomResourceOptions? options = null)
            : base("aws:grafana/workspace:Workspace", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Workspace resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Workspace Get(string name, Input<string> id, WorkspaceState? state = null, CustomResourceOptions? options = null)
        {
            return new Workspace(name, id, state, options);
        }
    }

    public sealed class WorkspaceArgs : global::Pulumi.ResourceArgs
    {
        [Input("accountAccessType", required: true)]
        public Input<string> AccountAccessType { get; set; } = null!;

        [Input("authenticationProviders", required: true)]
        private InputList<string>? _authenticationProviders;
        public InputList<string> AuthenticationProviders
        {
            get => _authenticationProviders ?? (_authenticationProviders = new InputList<string>());
            set => _authenticationProviders = value;
        }

        [Input("dataSources")]
        private InputList<string>? _dataSources;
        public InputList<string> DataSources
        {
            get => _dataSources ?? (_dataSources = new InputList<string>());
            set => _dataSources = value;
        }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("notificationDestinations")]
        private InputList<string>? _notificationDestinations;
        public InputList<string> NotificationDestinations
        {
            get => _notificationDestinations ?? (_notificationDestinations = new InputList<string>());
            set => _notificationDestinations = value;
        }

        [Input("organizationRoleName")]
        public Input<string>? OrganizationRoleName { get; set; }

        [Input("organizationalUnits")]
        private InputList<string>? _organizationalUnits;
        public InputList<string> OrganizationalUnits
        {
            get => _organizationalUnits ?? (_organizationalUnits = new InputList<string>());
            set => _organizationalUnits = value;
        }

        [Input("permissionType", required: true)]
        public Input<string> PermissionType { get; set; } = null!;

        [Input("roleArn")]
        public Input<string>? RoleArn { get; set; }

        [Input("stackSetName")]
        public Input<string>? StackSetName { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("vpcConfiguration")]
        public Input<Inputs.WorkspaceVpcConfigurationArgs>? VpcConfiguration { get; set; }

        public WorkspaceArgs()
        {
        }
        public static new WorkspaceArgs Empty => new WorkspaceArgs();
    }

    public sealed class WorkspaceState : global::Pulumi.ResourceArgs
    {
        [Input("accountAccessType")]
        public Input<string>? AccountAccessType { get; set; }

        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("authenticationProviders")]
        private InputList<string>? _authenticationProviders;
        public InputList<string> AuthenticationProviders
        {
            get => _authenticationProviders ?? (_authenticationProviders = new InputList<string>());
            set => _authenticationProviders = value;
        }

        [Input("dataSources")]
        private InputList<string>? _dataSources;
        public InputList<string> DataSources
        {
            get => _dataSources ?? (_dataSources = new InputList<string>());
            set => _dataSources = value;
        }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("endpoint")]
        public Input<string>? Endpoint { get; set; }

        [Input("grafanaVersion")]
        public Input<string>? GrafanaVersion { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("notificationDestinations")]
        private InputList<string>? _notificationDestinations;
        public InputList<string> NotificationDestinations
        {
            get => _notificationDestinations ?? (_notificationDestinations = new InputList<string>());
            set => _notificationDestinations = value;
        }

        [Input("organizationRoleName")]
        public Input<string>? OrganizationRoleName { get; set; }

        [Input("organizationalUnits")]
        private InputList<string>? _organizationalUnits;
        public InputList<string> OrganizationalUnits
        {
            get => _organizationalUnits ?? (_organizationalUnits = new InputList<string>());
            set => _organizationalUnits = value;
        }

        [Input("permissionType")]
        public Input<string>? PermissionType { get; set; }

        [Input("roleArn")]
        public Input<string>? RoleArn { get; set; }

        [Input("samlConfigurationStatus")]
        public Input<string>? SamlConfigurationStatus { get; set; }

        [Input("stackSetName")]
        public Input<string>? StackSetName { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("vpcConfiguration")]
        public Input<Inputs.WorkspaceVpcConfigurationGetArgs>? VpcConfiguration { get; set; }

        public WorkspaceState()
        {
        }
        public static new WorkspaceState Empty => new WorkspaceState();
    }
}
