// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.AppFabric
{
    /// <summary>
    /// Resource for managing an AWS AppFabric App Authorization.
    /// 
    /// ## Example Usage
    /// 
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.AppFabric.AppAuthorization("example", new()
    ///     {
    ///         App = "TERRAFORMCLOUD",
    ///         AppBundleArn = arn,
    ///         AuthType = "apiKey",
    ///         Credential = new Aws.AppFabric.Inputs.AppAuthorizationCredentialArgs
    ///         {
    ///             ApiKeyCredentials = new[]
    ///             {
    ///                 new Aws.AppFabric.Inputs.AppAuthorizationCredentialApiKeyCredentialArgs
    ///                 {
    ///                     ApiKey = "exampleapikeytoken",
    ///                 },
    ///             },
    ///         },
    ///         Tenants = new[]
    ///         {
    ///             new Aws.AppFabric.Inputs.AppAuthorizationTenantArgs
    ///             {
    ///                 TenantDisplayName = "example",
    ///                 TenantIdentifier = "example",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [AwsResourceType("aws:appfabric/appAuthorization:AppAuthorization")]
    public partial class AppAuthorization : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the application for valid values see https://docs.aws.amazon.com/appfabric/latest/api/API_CreateAppAuthorization.html.
        /// </summary>
        [Output("app")]
        public Output<string> App { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the app bundle to use for the request.
        /// </summary>
        [Output("appBundleArn")]
        public Output<string> AppBundleArn { get; private set; } = null!;

        /// <summary>
        /// ARN of the App Authorization. Do not begin the description with "An", "The", "Defines", "Indicates", or "Specifies," as these are verbose. In other words, "Indicates the amount of storage," can be rewritten as "Amount of storage," without losing any information.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// The authorization type for the app authorization valid values are oauth2 and apiKey.
        /// </summary>
        [Output("authType")]
        public Output<string> AuthType { get; private set; } = null!;

        /// <summary>
        /// The application URL for the OAuth flow.
        /// </summary>
        [Output("authUrl")]
        public Output<string> AuthUrl { get; private set; } = null!;

        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// Contains credentials for the application, such as an API key or OAuth2 client ID and secret.
        /// Specify credentials that match the authorization type for your request. For example, if the authorization type for your request is OAuth2 (oauth2), then you should provide only the OAuth2 credentials.
        /// </summary>
        [Output("credential")]
        public Output<Outputs.AppAuthorizationCredential?> Credential { get; private set; } = null!;

        /// <summary>
        /// The user persona of the app authorization.
        /// </summary>
        [Output("persona")]
        public Output<string> Persona { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        /// <summary>
        /// Contains information about an application tenant, such as the application display name and identifier.
        /// </summary>
        [Output("tenants")]
        public Output<ImmutableArray<Outputs.AppAuthorizationTenant>> Tenants { get; private set; } = null!;

        [Output("timeouts")]
        public Output<Outputs.AppAuthorizationTimeouts?> Timeouts { get; private set; } = null!;

        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;


        /// <summary>
        /// Create a AppAuthorization resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AppAuthorization(string name, AppAuthorizationArgs args, CustomResourceOptions? options = null)
            : base("aws:appfabric/appAuthorization:AppAuthorization", name, args ?? new AppAuthorizationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AppAuthorization(string name, Input<string> id, AppAuthorizationState? state = null, CustomResourceOptions? options = null)
            : base("aws:appfabric/appAuthorization:AppAuthorization", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AppAuthorization resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AppAuthorization Get(string name, Input<string> id, AppAuthorizationState? state = null, CustomResourceOptions? options = null)
        {
            return new AppAuthorization(name, id, state, options);
        }
    }

    public sealed class AppAuthorizationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the application for valid values see https://docs.aws.amazon.com/appfabric/latest/api/API_CreateAppAuthorization.html.
        /// </summary>
        [Input("app", required: true)]
        public Input<string> App { get; set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the app bundle to use for the request.
        /// </summary>
        [Input("appBundleArn", required: true)]
        public Input<string> AppBundleArn { get; set; } = null!;

        /// <summary>
        /// The authorization type for the app authorization valid values are oauth2 and apiKey.
        /// </summary>
        [Input("authType", required: true)]
        public Input<string> AuthType { get; set; } = null!;

        /// <summary>
        /// Contains credentials for the application, such as an API key or OAuth2 client ID and secret.
        /// Specify credentials that match the authorization type for your request. For example, if the authorization type for your request is OAuth2 (oauth2), then you should provide only the OAuth2 credentials.
        /// </summary>
        [Input("credential")]
        public Input<Inputs.AppAuthorizationCredentialArgs>? Credential { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tenants")]
        private InputList<Inputs.AppAuthorizationTenantArgs>? _tenants;

        /// <summary>
        /// Contains information about an application tenant, such as the application display name and identifier.
        /// </summary>
        public InputList<Inputs.AppAuthorizationTenantArgs> Tenants
        {
            get => _tenants ?? (_tenants = new InputList<Inputs.AppAuthorizationTenantArgs>());
            set => _tenants = value;
        }

        [Input("timeouts")]
        public Input<Inputs.AppAuthorizationTimeoutsArgs>? Timeouts { get; set; }

        public AppAuthorizationArgs()
        {
        }
        public static new AppAuthorizationArgs Empty => new AppAuthorizationArgs();
    }

    public sealed class AppAuthorizationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the application for valid values see https://docs.aws.amazon.com/appfabric/latest/api/API_CreateAppAuthorization.html.
        /// </summary>
        [Input("app")]
        public Input<string>? App { get; set; }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the app bundle to use for the request.
        /// </summary>
        [Input("appBundleArn")]
        public Input<string>? AppBundleArn { get; set; }

        /// <summary>
        /// ARN of the App Authorization. Do not begin the description with "An", "The", "Defines", "Indicates", or "Specifies," as these are verbose. In other words, "Indicates the amount of storage," can be rewritten as "Amount of storage," without losing any information.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// The authorization type for the app authorization valid values are oauth2 and apiKey.
        /// </summary>
        [Input("authType")]
        public Input<string>? AuthType { get; set; }

        /// <summary>
        /// The application URL for the OAuth flow.
        /// </summary>
        [Input("authUrl")]
        public Input<string>? AuthUrl { get; set; }

        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// Contains credentials for the application, such as an API key or OAuth2 client ID and secret.
        /// Specify credentials that match the authorization type for your request. For example, if the authorization type for your request is OAuth2 (oauth2), then you should provide only the OAuth2 credentials.
        /// </summary>
        [Input("credential")]
        public Input<Inputs.AppAuthorizationCredentialGetArgs>? Credential { get; set; }

        /// <summary>
        /// The user persona of the app authorization.
        /// </summary>
        [Input("persona")]
        public Input<string>? Persona { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        [Obsolete(@"Please use `tags` instead.")]
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("tenants")]
        private InputList<Inputs.AppAuthorizationTenantGetArgs>? _tenants;

        /// <summary>
        /// Contains information about an application tenant, such as the application display name and identifier.
        /// </summary>
        public InputList<Inputs.AppAuthorizationTenantGetArgs> Tenants
        {
            get => _tenants ?? (_tenants = new InputList<Inputs.AppAuthorizationTenantGetArgs>());
            set => _tenants = value;
        }

        [Input("timeouts")]
        public Input<Inputs.AppAuthorizationTimeoutsGetArgs>? Timeouts { get; set; }

        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        public AppAuthorizationState()
        {
        }
        public static new AppAuthorizationState Empty => new AppAuthorizationState();
    }
}
