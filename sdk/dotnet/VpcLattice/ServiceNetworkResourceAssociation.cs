// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.VpcLattice
{
    /// <summary>
    /// Resource for managing an AWS VPC Lattice Service Network Resource Association.
    /// 
    /// ## Example Usage
    /// 
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.VpcLattice.ServiceNetworkResourceAssociation("example", new()
    ///     {
    ///         ResourceConfigurationIdentifier = exampleAwsVpclatticeResourceConfiguration.Id,
    ///         ServiceNetworkIdentifier = exampleAwsVpclatticeServiceNetwork.Id,
    ///         Tags = 
    ///         {
    ///             { "Name", "Example" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import VPC Lattice Service Network Resource Association using the `id`. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:vpclattice/serviceNetworkResourceAssociation:ServiceNetworkResourceAssociation example snra-1234567890abcef12
    /// ```
    /// </summary>
    [AwsResourceType("aws:vpclattice/serviceNetworkResourceAssociation:ServiceNetworkResourceAssociation")]
    public partial class ServiceNetworkResourceAssociation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ARN of the Service Network Resource Association.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// DNS entry of the association in the service network.
        /// </summary>
        [Output("dnsEntries")]
        public Output<ImmutableArray<Outputs.ServiceNetworkResourceAssociationDnsEntry>> DnsEntries { get; private set; } = null!;

        /// <summary>
        /// Identifier of Resource Configuration to associate to the Service Network.
        /// </summary>
        [Output("resourceConfigurationIdentifier")]
        public Output<string> ResourceConfigurationIdentifier { get; private set; } = null!;

        /// <summary>
        /// Identifier of the Service Network to associate the Resource to.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Output("serviceNetworkIdentifier")]
        public Output<string> ServiceNetworkIdentifier { get; private set; } = null!;

        /// <summary>
        /// Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("timeouts")]
        public Output<Outputs.ServiceNetworkResourceAssociationTimeouts?> Timeouts { get; private set; } = null!;


        /// <summary>
        /// Create a ServiceNetworkResourceAssociation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServiceNetworkResourceAssociation(string name, ServiceNetworkResourceAssociationArgs args, CustomResourceOptions? options = null)
            : base("aws:vpclattice/serviceNetworkResourceAssociation:ServiceNetworkResourceAssociation", name, args ?? new ServiceNetworkResourceAssociationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ServiceNetworkResourceAssociation(string name, Input<string> id, ServiceNetworkResourceAssociationState? state = null, CustomResourceOptions? options = null)
            : base("aws:vpclattice/serviceNetworkResourceAssociation:ServiceNetworkResourceAssociation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ServiceNetworkResourceAssociation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ServiceNetworkResourceAssociation Get(string name, Input<string> id, ServiceNetworkResourceAssociationState? state = null, CustomResourceOptions? options = null)
        {
            return new ServiceNetworkResourceAssociation(name, id, state, options);
        }
    }

    public sealed class ServiceNetworkResourceAssociationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Identifier of Resource Configuration to associate to the Service Network.
        /// </summary>
        [Input("resourceConfigurationIdentifier", required: true)]
        public Input<string> ResourceConfigurationIdentifier { get; set; } = null!;

        /// <summary>
        /// Identifier of the Service Network to associate the Resource to.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("serviceNetworkIdentifier", required: true)]
        public Input<string> ServiceNetworkIdentifier { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("timeouts")]
        public Input<Inputs.ServiceNetworkResourceAssociationTimeoutsArgs>? Timeouts { get; set; }

        public ServiceNetworkResourceAssociationArgs()
        {
        }
        public static new ServiceNetworkResourceAssociationArgs Empty => new ServiceNetworkResourceAssociationArgs();
    }

    public sealed class ServiceNetworkResourceAssociationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ARN of the Service Network Resource Association.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("dnsEntries")]
        private InputList<Inputs.ServiceNetworkResourceAssociationDnsEntryGetArgs>? _dnsEntries;

        /// <summary>
        /// DNS entry of the association in the service network.
        /// </summary>
        public InputList<Inputs.ServiceNetworkResourceAssociationDnsEntryGetArgs> DnsEntries
        {
            get => _dnsEntries ?? (_dnsEntries = new InputList<Inputs.ServiceNetworkResourceAssociationDnsEntryGetArgs>());
            set => _dnsEntries = value;
        }

        /// <summary>
        /// Identifier of Resource Configuration to associate to the Service Network.
        /// </summary>
        [Input("resourceConfigurationIdentifier")]
        public Input<string>? ResourceConfigurationIdentifier { get; set; }

        /// <summary>
        /// Identifier of the Service Network to associate the Resource to.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("serviceNetworkIdentifier")]
        public Input<string>? ServiceNetworkIdentifier { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;

        /// <summary>
        /// Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Obsolete(@"Please use `tags` instead.")]
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("timeouts")]
        public Input<Inputs.ServiceNetworkResourceAssociationTimeoutsGetArgs>? Timeouts { get; set; }

        public ServiceNetworkResourceAssociationState()
        {
        }
        public static new ServiceNetworkResourceAssociationState Empty => new ServiceNetworkResourceAssociationState();
    }
}
