// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.VpcLattice
{
    public static class GetService
    {
        /// <summary>
        /// Data source for managing an AWS VPC Lattice Service.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.VpcLattice.GetService.Invoke();
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetServiceResult> InvokeAsync(GetServiceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetServiceResult>("aws:vpclattice/getService:getService", args ?? new GetServiceArgs(), options.WithDefaults());

        /// <summary>
        /// Data source for managing an AWS VPC Lattice Service.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// ### Basic Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.VpcLattice.GetService.Invoke();
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetServiceResult> Invoke(GetServiceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetServiceResult>("aws:vpclattice/getService:getService", args ?? new GetServiceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServiceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID or Amazon Resource Name (ARN) of the service network
        /// </summary>
        [Input("serviceIdentifier", required: true)]
        public string ServiceIdentifier { get; set; } = null!;

        [Input("tags")]
        private Dictionary<string, string>? _tags;

        /// <summary>
        /// List of tags associated with the service.
        /// </summary>
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetServiceArgs()
        {
        }
        public static new GetServiceArgs Empty => new GetServiceArgs();
    }

    public sealed class GetServiceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID or Amazon Resource Name (ARN) of the service network
        /// </summary>
        [Input("serviceIdentifier", required: true)]
        public Input<string> ServiceIdentifier { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// List of tags associated with the service.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetServiceInvokeArgs()
        {
        }
        public static new GetServiceInvokeArgs Empty => new GetServiceInvokeArgs();
    }


    [OutputType]
    public sealed class GetServiceResult
    {
        /// <summary>
        /// ARN of the service.
        /// </summary>
        public readonly string Arn;
        /// <summary>
        /// Type of IAM policy. Either `NONE` or `AWS_IAM`.
        /// </summary>
        public readonly string AuthType;
        /// <summary>
        /// Amazon Resource Name (ARN) of the certificate.
        /// </summary>
        public readonly string CertificateArn;
        /// <summary>
        /// Custom domain name of the service.
        /// </summary>
        public readonly string CustomDomainName;
        /// <summary>
        /// DNS name of the service.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetServiceDnsEntryResult> DnsEntries;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly string ServiceIdentifier;
        /// <summary>
        /// Status of the service.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// List of tags associated with the service.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;

        [OutputConstructor]
        private GetServiceResult(
            string arn,

            string authType,

            string certificateArn,

            string customDomainName,

            ImmutableArray<Outputs.GetServiceDnsEntryResult> dnsEntries,

            string id,

            string name,

            string serviceIdentifier,

            string status,

            ImmutableDictionary<string, string> tags)
        {
            Arn = arn;
            AuthType = authType;
            CertificateArn = certificateArn;
            CustomDomainName = customDomainName;
            DnsEntries = dnsEntries;
            Id = id;
            Name = name;
            ServiceIdentifier = serviceIdentifier;
            Status = status;
            Tags = tags;
        }
    }
}
