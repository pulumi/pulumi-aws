// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.VpcLattice
{
    /// <summary>
    /// Resource for managing an AWS VPC Lattice Listener.
    /// 
    /// ## Example Usage
    /// ### Forward action
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var test = new Aws.VpcLattice.Service("test");
    /// 
    ///     var exampleTargetGroup = new Aws.VpcLattice.TargetGroup("exampleTargetGroup", new()
    ///     {
    ///         Type = "INSTANCE",
    ///         Config = new Aws.VpcLattice.Inputs.TargetGroupConfigArgs
    ///         {
    ///             Port = 80,
    ///             Protocol = "HTTP",
    ///             VpcIdentifier = aws_vpc.Test.Id,
    ///         },
    ///     });
    /// 
    ///     var exampleListener = new Aws.VpcLattice.Listener("exampleListener", new()
    ///     {
    ///         Protocol = "HTTP",
    ///         ServiceIdentifier = aws_vpclattice_service.Example.Id,
    ///         DefaultAction = new Aws.VpcLattice.Inputs.ListenerDefaultActionArgs
    ///         {
    ///             Forwards = new[]
    ///             {
    ///                 new Aws.VpcLattice.Inputs.ListenerDefaultActionForwardArgs
    ///                 {
    ///                     TargetGroups = new[]
    ///                     {
    ///                         new Aws.VpcLattice.Inputs.ListenerDefaultActionForwardTargetGroupArgs
    ///                         {
    ///                             TargetGroupIdentifier = exampleTargetGroup.Id,
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### Forward action with weighted target groups
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var test = new Aws.VpcLattice.Service("test");
    /// 
    ///     var example1 = new Aws.VpcLattice.TargetGroup("example1", new()
    ///     {
    ///         Type = "INSTANCE",
    ///         Config = new Aws.VpcLattice.Inputs.TargetGroupConfigArgs
    ///         {
    ///             Port = 80,
    ///             Protocol = "HTTP",
    ///             VpcIdentifier = aws_vpc.Test.Id,
    ///         },
    ///     });
    /// 
    ///     var example2 = new Aws.VpcLattice.TargetGroup("example2", new()
    ///     {
    ///         Type = "INSTANCE",
    ///         Config = new Aws.VpcLattice.Inputs.TargetGroupConfigArgs
    ///         {
    ///             Port = 8080,
    ///             Protocol = "HTTP",
    ///             VpcIdentifier = aws_vpc.Test.Id,
    ///         },
    ///     });
    /// 
    ///     var example = new Aws.VpcLattice.Listener("example", new()
    ///     {
    ///         Protocol = "HTTP",
    ///         ServiceIdentifier = aws_vpclattice_service.Example.Id,
    ///         DefaultAction = new Aws.VpcLattice.Inputs.ListenerDefaultActionArgs
    ///         {
    ///             Forwards = new[]
    ///             {
    ///                 new Aws.VpcLattice.Inputs.ListenerDefaultActionForwardArgs
    ///                 {
    ///                     TargetGroups = new[]
    ///                     {
    ///                         new Aws.VpcLattice.Inputs.ListenerDefaultActionForwardTargetGroupArgs
    ///                         {
    ///                             TargetGroupIdentifier = example1.Id,
    ///                             Weight = 80,
    ///                         },
    ///                         new Aws.VpcLattice.Inputs.ListenerDefaultActionForwardTargetGroupArgs
    ///                         {
    ///                             TargetGroupIdentifier = example2.Id,
    ///                             Weight = 20,
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// terraform import {
    /// 
    ///  to = aws_vpclattice_listener.example
    /// 
    ///  id = "svc-1a2b3c4d/listener-987654321" } Using `pulumi import`, import VPC Lattice Listener using the `listener_id` of the listener and the `id` of the VPC Lattice service combined with a `/` character. For exampleconsole % pulumi import aws_vpclattice_listener.example svc-1a2b3c4d/listener-987654321
    /// </summary>
    [AwsResourceType("aws:vpclattice/listener:Listener")]
    public partial class Listener : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ARN of the listener.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// Date and time that the listener was created, specified in ISO-8601 format.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// Default action block for the default listener rule. Default action blocks are defined below.
        /// </summary>
        [Output("defaultAction")]
        public Output<Outputs.ListenerDefaultAction> DefaultAction { get; private set; } = null!;

        [Output("lastUpdatedAt")]
        public Output<string> LastUpdatedAt { get; private set; } = null!;

        /// <summary>
        /// Standalone ID of the listener, e.g. `listener-0a1b2c3d4e5f6g`.
        /// </summary>
        [Output("listenerId")]
        public Output<string> ListenerId { get; private set; } = null!;

        /// <summary>
        /// Name of the listener. A listener name must be unique within a service. Valid characters are a-z, 0-9, and hyphens (-). You can't use a hyphen as the first or last character, or immediately after another hyphen.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Listener port. You can specify a value from 1 to 65535. If `port` is not specified and `protocol` is HTTP, the value will default to 80. If `port` is not specified and `protocol` is HTTPS, the value will default to 443.
        /// </summary>
        [Output("port")]
        public Output<int> Port { get; private set; } = null!;

        /// <summary>
        /// Protocol for the listener. Supported values are `HTTP` or `HTTPS`
        /// </summary>
        [Output("protocol")]
        public Output<string> Protocol { get; private set; } = null!;

        /// <summary>
        /// Amazon Resource Name (ARN) of the VPC Lattice service. You must include either the `service_arn` or `service_identifier` arguments.
        /// </summary>
        [Output("serviceArn")]
        public Output<string> ServiceArn { get; private set; } = null!;

        /// <summary>
        /// ID of the VPC Lattice service. You must include either the `service_arn` or `service_identifier` arguments.
        /// &gt; **NOTE:** You must specify one of the following arguments: `service_arn` or `service_identifier`.
        /// </summary>
        [Output("serviceIdentifier")]
        public Output<string> ServiceIdentifier { get; private set; } = null!;

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;


        /// <summary>
        /// Create a Listener resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Listener(string name, ListenerArgs args, CustomResourceOptions? options = null)
            : base("aws:vpclattice/listener:Listener", name, args ?? new ListenerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Listener(string name, Input<string> id, ListenerState? state = null, CustomResourceOptions? options = null)
            : base("aws:vpclattice/listener:Listener", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Listener resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Listener Get(string name, Input<string> id, ListenerState? state = null, CustomResourceOptions? options = null)
        {
            return new Listener(name, id, state, options);
        }
    }

    public sealed class ListenerArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Default action block for the default listener rule. Default action blocks are defined below.
        /// </summary>
        [Input("defaultAction", required: true)]
        public Input<Inputs.ListenerDefaultActionArgs> DefaultAction { get; set; } = null!;

        /// <summary>
        /// Name of the listener. A listener name must be unique within a service. Valid characters are a-z, 0-9, and hyphens (-). You can't use a hyphen as the first or last character, or immediately after another hyphen.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Listener port. You can specify a value from 1 to 65535. If `port` is not specified and `protocol` is HTTP, the value will default to 80. If `port` is not specified and `protocol` is HTTPS, the value will default to 443.
        /// </summary>
        [Input("port")]
        public Input<int>? Port { get; set; }

        /// <summary>
        /// Protocol for the listener. Supported values are `HTTP` or `HTTPS`
        /// </summary>
        [Input("protocol", required: true)]
        public Input<string> Protocol { get; set; } = null!;

        /// <summary>
        /// Amazon Resource Name (ARN) of the VPC Lattice service. You must include either the `service_arn` or `service_identifier` arguments.
        /// </summary>
        [Input("serviceArn")]
        public Input<string>? ServiceArn { get; set; }

        /// <summary>
        /// ID of the VPC Lattice service. You must include either the `service_arn` or `service_identifier` arguments.
        /// &gt; **NOTE:** You must specify one of the following arguments: `service_arn` or `service_identifier`.
        /// </summary>
        [Input("serviceIdentifier")]
        public Input<string>? ServiceIdentifier { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public ListenerArgs()
        {
        }
        public static new ListenerArgs Empty => new ListenerArgs();
    }

    public sealed class ListenerState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ARN of the listener.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// Date and time that the listener was created, specified in ISO-8601 format.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// Default action block for the default listener rule. Default action blocks are defined below.
        /// </summary>
        [Input("defaultAction")]
        public Input<Inputs.ListenerDefaultActionGetArgs>? DefaultAction { get; set; }

        [Input("lastUpdatedAt")]
        public Input<string>? LastUpdatedAt { get; set; }

        /// <summary>
        /// Standalone ID of the listener, e.g. `listener-0a1b2c3d4e5f6g`.
        /// </summary>
        [Input("listenerId")]
        public Input<string>? ListenerId { get; set; }

        /// <summary>
        /// Name of the listener. A listener name must be unique within a service. Valid characters are a-z, 0-9, and hyphens (-). You can't use a hyphen as the first or last character, or immediately after another hyphen.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Listener port. You can specify a value from 1 to 65535. If `port` is not specified and `protocol` is HTTP, the value will default to 80. If `port` is not specified and `protocol` is HTTPS, the value will default to 443.
        /// </summary>
        [Input("port")]
        public Input<int>? Port { get; set; }

        /// <summary>
        /// Protocol for the listener. Supported values are `HTTP` or `HTTPS`
        /// </summary>
        [Input("protocol")]
        public Input<string>? Protocol { get; set; }

        /// <summary>
        /// Amazon Resource Name (ARN) of the VPC Lattice service. You must include either the `service_arn` or `service_identifier` arguments.
        /// </summary>
        [Input("serviceArn")]
        public Input<string>? ServiceArn { get; set; }

        /// <summary>
        /// ID of the VPC Lattice service. You must include either the `service_arn` or `service_identifier` arguments.
        /// &gt; **NOTE:** You must specify one of the following arguments: `service_arn` or `service_identifier`.
        /// </summary>
        [Input("serviceIdentifier")]
        public Input<string>? ServiceIdentifier { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        public ListenerState()
        {
        }
        public static new ListenerState Empty => new ListenerState();
    }
}
