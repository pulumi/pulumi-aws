// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Sns
{
    [AwsResourceType("aws:sns/platformApplication:PlatformApplication")]
    public partial class PlatformApplication : global::Pulumi.CustomResource
    {
        [Output("applePlatformBundleId")]
        public Output<string?> ApplePlatformBundleId { get; private set; } = null!;

        [Output("applePlatformTeamId")]
        public Output<string?> ApplePlatformTeamId { get; private set; } = null!;

        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("eventDeliveryFailureTopicArn")]
        public Output<string?> EventDeliveryFailureTopicArn { get; private set; } = null!;

        [Output("eventEndpointCreatedTopicArn")]
        public Output<string?> EventEndpointCreatedTopicArn { get; private set; } = null!;

        [Output("eventEndpointDeletedTopicArn")]
        public Output<string?> EventEndpointDeletedTopicArn { get; private set; } = null!;

        [Output("eventEndpointUpdatedTopicArn")]
        public Output<string?> EventEndpointUpdatedTopicArn { get; private set; } = null!;

        [Output("failureFeedbackRoleArn")]
        public Output<string?> FailureFeedbackRoleArn { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("platform")]
        public Output<string> Platform { get; private set; } = null!;

        [Output("platformCredential")]
        public Output<string> PlatformCredential { get; private set; } = null!;

        [Output("platformPrincipal")]
        public Output<string?> PlatformPrincipal { get; private set; } = null!;

        [Output("successFeedbackRoleArn")]
        public Output<string?> SuccessFeedbackRoleArn { get; private set; } = null!;

        [Output("successFeedbackSampleRate")]
        public Output<string?> SuccessFeedbackSampleRate { get; private set; } = null!;


        /// <summary>
        /// Create a PlatformApplication resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PlatformApplication(string name, PlatformApplicationArgs args, CustomResourceOptions? options = null)
            : base("aws:sns/platformApplication:PlatformApplication", name, args ?? new PlatformApplicationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PlatformApplication(string name, Input<string> id, PlatformApplicationState? state = null, CustomResourceOptions? options = null)
            : base("aws:sns/platformApplication:PlatformApplication", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "platformCredential",
                    "platformPrincipal",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PlatformApplication resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PlatformApplication Get(string name, Input<string> id, PlatformApplicationState? state = null, CustomResourceOptions? options = null)
        {
            return new PlatformApplication(name, id, state, options);
        }
    }

    public sealed class PlatformApplicationArgs : global::Pulumi.ResourceArgs
    {
        [Input("applePlatformBundleId")]
        public Input<string>? ApplePlatformBundleId { get; set; }

        [Input("applePlatformTeamId")]
        public Input<string>? ApplePlatformTeamId { get; set; }

        [Input("eventDeliveryFailureTopicArn")]
        public Input<string>? EventDeliveryFailureTopicArn { get; set; }

        [Input("eventEndpointCreatedTopicArn")]
        public Input<string>? EventEndpointCreatedTopicArn { get; set; }

        [Input("eventEndpointDeletedTopicArn")]
        public Input<string>? EventEndpointDeletedTopicArn { get; set; }

        [Input("eventEndpointUpdatedTopicArn")]
        public Input<string>? EventEndpointUpdatedTopicArn { get; set; }

        [Input("failureFeedbackRoleArn")]
        public Input<string>? FailureFeedbackRoleArn { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("platform", required: true)]
        public Input<string> Platform { get; set; } = null!;

        [Input("platformCredential", required: true)]
        private Input<string>? _platformCredential;
        public Input<string>? PlatformCredential
        {
            get => _platformCredential;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _platformCredential = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("platformPrincipal")]
        private Input<string>? _platformPrincipal;
        public Input<string>? PlatformPrincipal
        {
            get => _platformPrincipal;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _platformPrincipal = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("successFeedbackRoleArn")]
        public Input<string>? SuccessFeedbackRoleArn { get; set; }

        [Input("successFeedbackSampleRate")]
        public Input<string>? SuccessFeedbackSampleRate { get; set; }

        public PlatformApplicationArgs()
        {
        }
        public static new PlatformApplicationArgs Empty => new PlatformApplicationArgs();
    }

    public sealed class PlatformApplicationState : global::Pulumi.ResourceArgs
    {
        [Input("applePlatformBundleId")]
        public Input<string>? ApplePlatformBundleId { get; set; }

        [Input("applePlatformTeamId")]
        public Input<string>? ApplePlatformTeamId { get; set; }

        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("eventDeliveryFailureTopicArn")]
        public Input<string>? EventDeliveryFailureTopicArn { get; set; }

        [Input("eventEndpointCreatedTopicArn")]
        public Input<string>? EventEndpointCreatedTopicArn { get; set; }

        [Input("eventEndpointDeletedTopicArn")]
        public Input<string>? EventEndpointDeletedTopicArn { get; set; }

        [Input("eventEndpointUpdatedTopicArn")]
        public Input<string>? EventEndpointUpdatedTopicArn { get; set; }

        [Input("failureFeedbackRoleArn")]
        public Input<string>? FailureFeedbackRoleArn { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("platform")]
        public Input<string>? Platform { get; set; }

        [Input("platformCredential")]
        private Input<string>? _platformCredential;
        public Input<string>? PlatformCredential
        {
            get => _platformCredential;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _platformCredential = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("platformPrincipal")]
        private Input<string>? _platformPrincipal;
        public Input<string>? PlatformPrincipal
        {
            get => _platformPrincipal;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _platformPrincipal = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("successFeedbackRoleArn")]
        public Input<string>? SuccessFeedbackRoleArn { get; set; }

        [Input("successFeedbackSampleRate")]
        public Input<string>? SuccessFeedbackSampleRate { get; set; }

        public PlatformApplicationState()
        {
        }
        public static new PlatformApplicationState Empty => new PlatformApplicationState();
    }
}
