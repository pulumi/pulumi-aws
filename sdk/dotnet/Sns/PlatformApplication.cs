// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Sns
{
    /// <summary>
    /// Provides an SNS platform application resource
    /// 
    /// ## Example Usage
    /// ### Apple Push Notification Service (APNS) using certificate-based authentication
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var apnsApplication = new Aws.Sns.PlatformApplication("apnsApplication", new()
    ///     {
    ///         Platform = "APNS",
    ///         PlatformCredential = "&lt;APNS PRIVATE KEY&gt;",
    ///         PlatformPrincipal = "&lt;APNS CERTIFICATE&gt;",
    ///     });
    /// 
    /// });
    /// ```
    /// ### Apple Push Notification Service (APNS) using token-based authentication
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var apnsApplication = new Aws.Sns.PlatformApplication("apnsApplication", new()
    ///     {
    ///         ApplePlatformBundleId = "&lt;APPLE BUNDLE ID&gt;",
    ///         ApplePlatformTeamId = "&lt;APPLE TEAM ID&gt;",
    ///         Platform = "APNS",
    ///         PlatformCredential = "&lt;APNS SIGNING KEY&gt;",
    ///         PlatformPrincipal = "&lt;APNS SIGNING KEY ID&gt;",
    ///     });
    /// 
    /// });
    /// ```
    /// ### Google Cloud Messaging (GCM)
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var gcmApplication = new Aws.Sns.PlatformApplication("gcmApplication", new()
    ///     {
    ///         Platform = "GCM",
    ///         PlatformCredential = "&lt;GCM API KEY&gt;",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// SNS platform applications can be imported using the ARN, e.g.,
    /// 
    /// ```sh
    ///  $ pulumi import aws:sns/platformApplication:PlatformApplication gcm_application arn:aws:sns:us-west-2:0123456789012:app/GCM/gcm_application
    /// ```
    /// </summary>
    [AwsResourceType("aws:sns/platformApplication:PlatformApplication")]
    public partial class PlatformApplication : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The bundle identifier that's assigned to your iOS app. May only include alphanumeric characters, hyphens (-), and periods (.).
        /// </summary>
        [Output("applePlatformBundleId")]
        public Output<string?> ApplePlatformBundleId { get; private set; } = null!;

        /// <summary>
        /// The identifier that's assigned to your Apple developer account team. Must be 10 alphanumeric characters.
        /// </summary>
        [Output("applePlatformTeamId")]
        public Output<string?> ApplePlatformTeamId { get; private set; } = null!;

        /// <summary>
        /// The ARN of the SNS platform application
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// The ARN of the SNS Topic triggered when a delivery to any of the platform endpoints associated with your platform application encounters a permanent failure.
        /// </summary>
        [Output("eventDeliveryFailureTopicArn")]
        public Output<string?> EventDeliveryFailureTopicArn { get; private set; } = null!;

        /// <summary>
        /// The ARN of the SNS Topic triggered when a new platform endpoint is added to your platform application.
        /// </summary>
        [Output("eventEndpointCreatedTopicArn")]
        public Output<string?> EventEndpointCreatedTopicArn { get; private set; } = null!;

        /// <summary>
        /// The ARN of the SNS Topic triggered when an existing platform endpoint is deleted from your platform application.
        /// </summary>
        [Output("eventEndpointDeletedTopicArn")]
        public Output<string?> EventEndpointDeletedTopicArn { get; private set; } = null!;

        /// <summary>
        /// The ARN of the SNS Topic triggered when an existing platform endpoint is changed from your platform application.
        /// </summary>
        [Output("eventEndpointUpdatedTopicArn")]
        public Output<string?> EventEndpointUpdatedTopicArn { get; private set; } = null!;

        /// <summary>
        /// The IAM role ARN permitted to receive failure feedback for this application and give SNS write access to use CloudWatch logs on your behalf.
        /// </summary>
        [Output("failureFeedbackRoleArn")]
        public Output<string?> FailureFeedbackRoleArn { get; private set; } = null!;

        /// <summary>
        /// The friendly name for the SNS platform application
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The platform that the app is registered with. See [Platform](http://docs.aws.amazon.com/sns/latest/dg/mobile-push-send-register.html) for supported platforms.
        /// </summary>
        [Output("platform")]
        public Output<string> Platform { get; private set; } = null!;

        /// <summary>
        /// Application Platform credential. See [Credential](http://docs.aws.amazon.com/sns/latest/dg/mobile-push-send-register.html) for type of credential required for platform. The value of this attribute when stored into the state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources.
        /// </summary>
        [Output("platformCredential")]
        public Output<string> PlatformCredential { get; private set; } = null!;

        /// <summary>
        /// Application Platform principal. See [Principal](http://docs.aws.amazon.com/sns/latest/api/API_CreatePlatformApplication.html) for type of principal required for platform. The value of this attribute when stored into the state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources.
        /// </summary>
        [Output("platformPrincipal")]
        public Output<string?> PlatformPrincipal { get; private set; } = null!;

        /// <summary>
        /// The IAM role ARN permitted to receive success feedback for this application and give SNS write access to use CloudWatch logs on your behalf.
        /// </summary>
        [Output("successFeedbackRoleArn")]
        public Output<string?> SuccessFeedbackRoleArn { get; private set; } = null!;

        /// <summary>
        /// The sample rate percentage (0-100) of successfully delivered messages.
        /// 
        /// The following attributes are needed only when using APNS token credentials:
        /// </summary>
        [Output("successFeedbackSampleRate")]
        public Output<string?> SuccessFeedbackSampleRate { get; private set; } = null!;


        /// <summary>
        /// Create a PlatformApplication resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PlatformApplication(string name, PlatformApplicationArgs args, CustomResourceOptions? options = null)
            : base("aws:sns/platformApplication:PlatformApplication", name, args ?? new PlatformApplicationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PlatformApplication(string name, Input<string> id, PlatformApplicationState? state = null, CustomResourceOptions? options = null)
            : base("aws:sns/platformApplication:PlatformApplication", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "platformCredential",
                    "platformPrincipal",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PlatformApplication resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PlatformApplication Get(string name, Input<string> id, PlatformApplicationState? state = null, CustomResourceOptions? options = null)
        {
            return new PlatformApplication(name, id, state, options);
        }
    }

    public sealed class PlatformApplicationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The bundle identifier that's assigned to your iOS app. May only include alphanumeric characters, hyphens (-), and periods (.).
        /// </summary>
        [Input("applePlatformBundleId")]
        public Input<string>? ApplePlatformBundleId { get; set; }

        /// <summary>
        /// The identifier that's assigned to your Apple developer account team. Must be 10 alphanumeric characters.
        /// </summary>
        [Input("applePlatformTeamId")]
        public Input<string>? ApplePlatformTeamId { get; set; }

        /// <summary>
        /// The ARN of the SNS Topic triggered when a delivery to any of the platform endpoints associated with your platform application encounters a permanent failure.
        /// </summary>
        [Input("eventDeliveryFailureTopicArn")]
        public Input<string>? EventDeliveryFailureTopicArn { get; set; }

        /// <summary>
        /// The ARN of the SNS Topic triggered when a new platform endpoint is added to your platform application.
        /// </summary>
        [Input("eventEndpointCreatedTopicArn")]
        public Input<string>? EventEndpointCreatedTopicArn { get; set; }

        /// <summary>
        /// The ARN of the SNS Topic triggered when an existing platform endpoint is deleted from your platform application.
        /// </summary>
        [Input("eventEndpointDeletedTopicArn")]
        public Input<string>? EventEndpointDeletedTopicArn { get; set; }

        /// <summary>
        /// The ARN of the SNS Topic triggered when an existing platform endpoint is changed from your platform application.
        /// </summary>
        [Input("eventEndpointUpdatedTopicArn")]
        public Input<string>? EventEndpointUpdatedTopicArn { get; set; }

        /// <summary>
        /// The IAM role ARN permitted to receive failure feedback for this application and give SNS write access to use CloudWatch logs on your behalf.
        /// </summary>
        [Input("failureFeedbackRoleArn")]
        public Input<string>? FailureFeedbackRoleArn { get; set; }

        /// <summary>
        /// The friendly name for the SNS platform application
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The platform that the app is registered with. See [Platform](http://docs.aws.amazon.com/sns/latest/dg/mobile-push-send-register.html) for supported platforms.
        /// </summary>
        [Input("platform", required: true)]
        public Input<string> Platform { get; set; } = null!;

        [Input("platformCredential", required: true)]
        private Input<string>? _platformCredential;

        /// <summary>
        /// Application Platform credential. See [Credential](http://docs.aws.amazon.com/sns/latest/dg/mobile-push-send-register.html) for type of credential required for platform. The value of this attribute when stored into the state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources.
        /// </summary>
        public Input<string>? PlatformCredential
        {
            get => _platformCredential;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _platformCredential = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("platformPrincipal")]
        private Input<string>? _platformPrincipal;

        /// <summary>
        /// Application Platform principal. See [Principal](http://docs.aws.amazon.com/sns/latest/api/API_CreatePlatformApplication.html) for type of principal required for platform. The value of this attribute when stored into the state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources.
        /// </summary>
        public Input<string>? PlatformPrincipal
        {
            get => _platformPrincipal;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _platformPrincipal = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The IAM role ARN permitted to receive success feedback for this application and give SNS write access to use CloudWatch logs on your behalf.
        /// </summary>
        [Input("successFeedbackRoleArn")]
        public Input<string>? SuccessFeedbackRoleArn { get; set; }

        /// <summary>
        /// The sample rate percentage (0-100) of successfully delivered messages.
        /// 
        /// The following attributes are needed only when using APNS token credentials:
        /// </summary>
        [Input("successFeedbackSampleRate")]
        public Input<string>? SuccessFeedbackSampleRate { get; set; }

        public PlatformApplicationArgs()
        {
        }
        public static new PlatformApplicationArgs Empty => new PlatformApplicationArgs();
    }

    public sealed class PlatformApplicationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The bundle identifier that's assigned to your iOS app. May only include alphanumeric characters, hyphens (-), and periods (.).
        /// </summary>
        [Input("applePlatformBundleId")]
        public Input<string>? ApplePlatformBundleId { get; set; }

        /// <summary>
        /// The identifier that's assigned to your Apple developer account team. Must be 10 alphanumeric characters.
        /// </summary>
        [Input("applePlatformTeamId")]
        public Input<string>? ApplePlatformTeamId { get; set; }

        /// <summary>
        /// The ARN of the SNS platform application
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// The ARN of the SNS Topic triggered when a delivery to any of the platform endpoints associated with your platform application encounters a permanent failure.
        /// </summary>
        [Input("eventDeliveryFailureTopicArn")]
        public Input<string>? EventDeliveryFailureTopicArn { get; set; }

        /// <summary>
        /// The ARN of the SNS Topic triggered when a new platform endpoint is added to your platform application.
        /// </summary>
        [Input("eventEndpointCreatedTopicArn")]
        public Input<string>? EventEndpointCreatedTopicArn { get; set; }

        /// <summary>
        /// The ARN of the SNS Topic triggered when an existing platform endpoint is deleted from your platform application.
        /// </summary>
        [Input("eventEndpointDeletedTopicArn")]
        public Input<string>? EventEndpointDeletedTopicArn { get; set; }

        /// <summary>
        /// The ARN of the SNS Topic triggered when an existing platform endpoint is changed from your platform application.
        /// </summary>
        [Input("eventEndpointUpdatedTopicArn")]
        public Input<string>? EventEndpointUpdatedTopicArn { get; set; }

        /// <summary>
        /// The IAM role ARN permitted to receive failure feedback for this application and give SNS write access to use CloudWatch logs on your behalf.
        /// </summary>
        [Input("failureFeedbackRoleArn")]
        public Input<string>? FailureFeedbackRoleArn { get; set; }

        /// <summary>
        /// The friendly name for the SNS platform application
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The platform that the app is registered with. See [Platform](http://docs.aws.amazon.com/sns/latest/dg/mobile-push-send-register.html) for supported platforms.
        /// </summary>
        [Input("platform")]
        public Input<string>? Platform { get; set; }

        [Input("platformCredential")]
        private Input<string>? _platformCredential;

        /// <summary>
        /// Application Platform credential. See [Credential](http://docs.aws.amazon.com/sns/latest/dg/mobile-push-send-register.html) for type of credential required for platform. The value of this attribute when stored into the state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources.
        /// </summary>
        public Input<string>? PlatformCredential
        {
            get => _platformCredential;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _platformCredential = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("platformPrincipal")]
        private Input<string>? _platformPrincipal;

        /// <summary>
        /// Application Platform principal. See [Principal](http://docs.aws.amazon.com/sns/latest/api/API_CreatePlatformApplication.html) for type of principal required for platform. The value of this attribute when stored into the state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources.
        /// </summary>
        public Input<string>? PlatformPrincipal
        {
            get => _platformPrincipal;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _platformPrincipal = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The IAM role ARN permitted to receive success feedback for this application and give SNS write access to use CloudWatch logs on your behalf.
        /// </summary>
        [Input("successFeedbackRoleArn")]
        public Input<string>? SuccessFeedbackRoleArn { get; set; }

        /// <summary>
        /// The sample rate percentage (0-100) of successfully delivered messages.
        /// 
        /// The following attributes are needed only when using APNS token credentials:
        /// </summary>
        [Input("successFeedbackSampleRate")]
        public Input<string>? SuccessFeedbackSampleRate { get; set; }

        public PlatformApplicationState()
        {
        }
        public static new PlatformApplicationState Empty => new PlatformApplicationState();
    }
}
