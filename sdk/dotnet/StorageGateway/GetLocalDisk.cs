// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi.Utilities;

namespace Pulumi.Aws.StorageGateway
{
    public static class GetLocalDisk
    {
        /// <summary>
        /// Retrieve information about a Storage Gateway local disk. The disk identifier is useful for adding the disk as a cache or upload buffer to a gateway.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var test = Output.Create(Aws.StorageGateway.GetLocalDisk.InvokeAsync(new Aws.StorageGateway.GetLocalDiskArgs
        ///         {
        ///             DiskPath = aws_volume_attachment.Test.Device_name,
        ///             GatewayArn = aws_storagegateway_gateway.Test.Arn,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetLocalDiskResult> InvokeAsync(GetLocalDiskArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetLocalDiskResult>("aws:storagegateway/getLocalDisk:getLocalDisk", args ?? new GetLocalDiskArgs(), options.WithVersion());

        /// <summary>
        /// Retrieve information about a Storage Gateway local disk. The disk identifier is useful for adding the disk as a cache or upload buffer to a gateway.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var test = Output.Create(Aws.StorageGateway.GetLocalDisk.InvokeAsync(new Aws.StorageGateway.GetLocalDiskArgs
        ///         {
        ///             DiskPath = aws_volume_attachment.Test.Device_name,
        ///             GatewayArn = aws_storagegateway_gateway.Test.Arn,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetLocalDiskResult> Invoke(GetLocalDiskInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetLocalDiskResult>("aws:storagegateway/getLocalDisk:getLocalDisk", args ?? new GetLocalDiskInvokeArgs(), options.WithVersion());
    }


    public sealed class GetLocalDiskArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The device node of the local disk to retrieve. For example, `/dev/sdb`.
        /// </summary>
        [Input("diskNode")]
        public string? DiskNode { get; set; }

        /// <summary>
        /// The device path of the local disk to retrieve. For example, `/dev/xvdb` or `/dev/nvme1n1`.
        /// </summary>
        [Input("diskPath")]
        public string? DiskPath { get; set; }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the gateway.
        /// </summary>
        [Input("gatewayArn", required: true)]
        public string GatewayArn { get; set; } = null!;

        public GetLocalDiskArgs()
        {
        }
    }

    public sealed class GetLocalDiskInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The device node of the local disk to retrieve. For example, `/dev/sdb`.
        /// </summary>
        [Input("diskNode")]
        public Input<string>? DiskNode { get; set; }

        /// <summary>
        /// The device path of the local disk to retrieve. For example, `/dev/xvdb` or `/dev/nvme1n1`.
        /// </summary>
        [Input("diskPath")]
        public Input<string>? DiskPath { get; set; }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the gateway.
        /// </summary>
        [Input("gatewayArn", required: true)]
        public Input<string> GatewayArn { get; set; } = null!;

        public GetLocalDiskInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetLocalDiskResult
    {
        /// <summary>
        /// The disk identifier. e.g. `pci-0000:03:00.0-scsi-0:0:0:0`
        /// </summary>
        public readonly string DiskId;
        public readonly string DiskNode;
        public readonly string DiskPath;
        public readonly string GatewayArn;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetLocalDiskResult(
            string diskId,

            string diskNode,

            string diskPath,

            string gatewayArn,

            string id)
        {
            DiskId = diskId;
            DiskNode = diskNode;
            DiskPath = diskPath;
            GatewayArn = gatewayArn;
            Id = id;
        }
    }
}
