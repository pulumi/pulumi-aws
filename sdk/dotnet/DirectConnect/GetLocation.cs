// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.DirectConnect
{
    public static class GetLocation
    {
        /// <summary>
        /// Retrieve information about a specific AWS Direct Connect location in the current AWS Region.
        /// These are the locations that can be specified when configuring `aws.directconnect.Connection` or `aws.directconnect.LinkAggregationGroup` resources.
        /// 
        /// &gt; **Note:** This data source is different from the `aws.directconnect.getLocations` data source which retrieves information about all the AWS Direct Connect locations in the current AWS Region.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const example = aws.directconnect.getLocation({
        ///     locationCode: "CS32A-24FL",
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// example = aws.directconnect.get_location(location_code="CS32A-24FL")
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.DirectConnect.GetLocation.Invoke(new()
        ///     {
        ///         LocationCode = "CS32A-24FL",
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/directconnect"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := directconnect.GetLocation(ctx, &amp;directconnect.GetLocationArgs{
        /// 			LocationCode: "CS32A-24FL",
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.directconnect.DirectconnectFunctions;
        /// import com.pulumi.aws.directconnect.inputs.GetLocationArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var example = DirectconnectFunctions.getLocation(GetLocationArgs.builder()
        ///             .locationCode("CS32A-24FL")
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   example:
        ///     fn::invoke:
        ///       Function: aws:directconnect:getLocation
        ///       Arguments:
        ///         locationCode: CS32A-24FL
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetLocationResult> InvokeAsync(GetLocationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLocationResult>("aws:directconnect/getLocation:getLocation", args ?? new GetLocationArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieve information about a specific AWS Direct Connect location in the current AWS Region.
        /// These are the locations that can be specified when configuring `aws.directconnect.Connection` or `aws.directconnect.LinkAggregationGroup` resources.
        /// 
        /// &gt; **Note:** This data source is different from the `aws.directconnect.getLocations` data source which retrieves information about all the AWS Direct Connect locations in the current AWS Region.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const example = aws.directconnect.getLocation({
        ///     locationCode: "CS32A-24FL",
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// example = aws.directconnect.get_location(location_code="CS32A-24FL")
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.DirectConnect.GetLocation.Invoke(new()
        ///     {
        ///         LocationCode = "CS32A-24FL",
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/directconnect"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := directconnect.GetLocation(ctx, &amp;directconnect.GetLocationArgs{
        /// 			LocationCode: "CS32A-24FL",
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.directconnect.DirectconnectFunctions;
        /// import com.pulumi.aws.directconnect.inputs.GetLocationArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var example = DirectconnectFunctions.getLocation(GetLocationArgs.builder()
        ///             .locationCode("CS32A-24FL")
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   example:
        ///     fn::invoke:
        ///       Function: aws:directconnect:getLocation
        ///       Arguments:
        ///         locationCode: CS32A-24FL
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetLocationResult> Invoke(GetLocationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLocationResult>("aws:directconnect/getLocation:getLocation", args ?? new GetLocationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLocationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Code for the location to retrieve.
        /// </summary>
        [Input("locationCode", required: true)]
        public string LocationCode { get; set; } = null!;

        public GetLocationArgs()
        {
        }
        public static new GetLocationArgs Empty => new GetLocationArgs();
    }

    public sealed class GetLocationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Code for the location to retrieve.
        /// </summary>
        [Input("locationCode", required: true)]
        public Input<string> LocationCode { get; set; } = null!;

        public GetLocationInvokeArgs()
        {
        }
        public static new GetLocationInvokeArgs Empty => new GetLocationInvokeArgs();
    }


    [OutputType]
    public sealed class GetLocationResult
    {
        /// <summary>
        /// The available MAC Security (MACsec) port speeds for the location.
        /// </summary>
        public readonly ImmutableArray<string> AvailableMacsecPortSpeeds;
        /// <summary>
        /// The available port speeds for the location.
        /// </summary>
        public readonly ImmutableArray<string> AvailablePortSpeeds;
        /// <summary>
        /// Names of the service providers for the location.
        /// </summary>
        public readonly ImmutableArray<string> AvailableProviders;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string LocationCode;
        /// <summary>
        /// Name of the location. This includes the name of the colocation partner and the physical site of the building.
        /// </summary>
        public readonly string LocationName;

        [OutputConstructor]
        private GetLocationResult(
            ImmutableArray<string> availableMacsecPortSpeeds,

            ImmutableArray<string> availablePortSpeeds,

            ImmutableArray<string> availableProviders,

            string id,

            string locationCode,

            string locationName)
        {
            AvailableMacsecPortSpeeds = availableMacsecPortSpeeds;
            AvailablePortSpeeds = availablePortSpeeds;
            AvailableProviders = availableProviders;
            Id = id;
            LocationCode = locationCode;
            LocationName = locationName;
        }
    }
}
