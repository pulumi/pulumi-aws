// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.DirectConnect
{
    [AwsResourceType("aws:directconnect/hostedConnection:HostedConnection")]
    public partial class HostedConnection : global::Pulumi.CustomResource
    {
        [Output("awsDevice")]
        public Output<string> AwsDevice { get; private set; } = null!;

        [Output("bandwidth")]
        public Output<string> Bandwidth { get; private set; } = null!;

        [Output("connectionId")]
        public Output<string> ConnectionId { get; private set; } = null!;

        [Output("hasLogicalRedundancy")]
        public Output<string> HasLogicalRedundancy { get; private set; } = null!;

        [Output("jumboFrameCapable")]
        public Output<bool> JumboFrameCapable { get; private set; } = null!;

        [Output("lagId")]
        public Output<string> LagId { get; private set; } = null!;

        [Output("loaIssueTime")]
        public Output<string> LoaIssueTime { get; private set; } = null!;

        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("ownerAccountId")]
        public Output<string> OwnerAccountId { get; private set; } = null!;

        [Output("partnerName")]
        public Output<string> PartnerName { get; private set; } = null!;

        [Output("providerName")]
        public Output<string> ProviderName { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        [Output("vlan")]
        public Output<int> Vlan { get; private set; } = null!;


        /// <summary>
        /// Create a HostedConnection resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public HostedConnection(string name, HostedConnectionArgs args, CustomResourceOptions? options = null)
            : base("aws:directconnect/hostedConnection:HostedConnection", name, args ?? new HostedConnectionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private HostedConnection(string name, Input<string> id, HostedConnectionState? state = null, CustomResourceOptions? options = null)
            : base("aws:directconnect/hostedConnection:HostedConnection", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing HostedConnection resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static HostedConnection Get(string name, Input<string> id, HostedConnectionState? state = null, CustomResourceOptions? options = null)
        {
            return new HostedConnection(name, id, state, options);
        }
    }

    public sealed class HostedConnectionArgs : global::Pulumi.ResourceArgs
    {
        [Input("bandwidth", required: true)]
        public Input<string> Bandwidth { get; set; } = null!;

        [Input("connectionId", required: true)]
        public Input<string> ConnectionId { get; set; } = null!;

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("ownerAccountId", required: true)]
        public Input<string> OwnerAccountId { get; set; } = null!;

        [Input("vlan", required: true)]
        public Input<int> Vlan { get; set; } = null!;

        public HostedConnectionArgs()
        {
        }
        public static new HostedConnectionArgs Empty => new HostedConnectionArgs();
    }

    public sealed class HostedConnectionState : global::Pulumi.ResourceArgs
    {
        [Input("awsDevice")]
        public Input<string>? AwsDevice { get; set; }

        [Input("bandwidth")]
        public Input<string>? Bandwidth { get; set; }

        [Input("connectionId")]
        public Input<string>? ConnectionId { get; set; }

        [Input("hasLogicalRedundancy")]
        public Input<string>? HasLogicalRedundancy { get; set; }

        [Input("jumboFrameCapable")]
        public Input<bool>? JumboFrameCapable { get; set; }

        [Input("lagId")]
        public Input<string>? LagId { get; set; }

        [Input("loaIssueTime")]
        public Input<string>? LoaIssueTime { get; set; }

        [Input("location")]
        public Input<string>? Location { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("ownerAccountId")]
        public Input<string>? OwnerAccountId { get; set; }

        [Input("partnerName")]
        public Input<string>? PartnerName { get; set; }

        [Input("providerName")]
        public Input<string>? ProviderName { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("vlan")]
        public Input<int>? Vlan { get; set; }

        public HostedConnectionState()
        {
        }
        public static new HostedConnectionState Empty => new HostedConnectionState();
    }
}
