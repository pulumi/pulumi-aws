// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.DirectConnect
{
    [AwsResourceType("aws:directconnect/transitVirtualInterface:TransitVirtualInterface")]
    public partial class TransitVirtualInterface : global::Pulumi.CustomResource
    {
        [Output("addressFamily")]
        public Output<string> AddressFamily { get; private set; } = null!;

        [Output("amazonAddress")]
        public Output<string> AmazonAddress { get; private set; } = null!;

        [Output("amazonSideAsn")]
        public Output<string> AmazonSideAsn { get; private set; } = null!;

        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("awsDevice")]
        public Output<string> AwsDevice { get; private set; } = null!;

        [Output("bgpAsn")]
        public Output<int> BgpAsn { get; private set; } = null!;

        [Output("bgpAuthKey")]
        public Output<string> BgpAuthKey { get; private set; } = null!;

        [Output("connectionId")]
        public Output<string> ConnectionId { get; private set; } = null!;

        [Output("customerAddress")]
        public Output<string> CustomerAddress { get; private set; } = null!;

        [Output("dxGatewayId")]
        public Output<string> DxGatewayId { get; private set; } = null!;

        [Output("jumboFrameCapable")]
        public Output<bool> JumboFrameCapable { get; private set; } = null!;

        [Output("mtu")]
        public Output<int?> Mtu { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("sitelinkEnabled")]
        public Output<bool?> SitelinkEnabled { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("vlan")]
        public Output<int> Vlan { get; private set; } = null!;


        /// <summary>
        /// Create a TransitVirtualInterface resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TransitVirtualInterface(string name, TransitVirtualInterfaceArgs args, CustomResourceOptions? options = null)
            : base("aws:directconnect/transitVirtualInterface:TransitVirtualInterface", name, args ?? new TransitVirtualInterfaceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TransitVirtualInterface(string name, Input<string> id, TransitVirtualInterfaceState? state = null, CustomResourceOptions? options = null)
            : base("aws:directconnect/transitVirtualInterface:TransitVirtualInterface", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TransitVirtualInterface resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TransitVirtualInterface Get(string name, Input<string> id, TransitVirtualInterfaceState? state = null, CustomResourceOptions? options = null)
        {
            return new TransitVirtualInterface(name, id, state, options);
        }
    }

    public sealed class TransitVirtualInterfaceArgs : global::Pulumi.ResourceArgs
    {
        [Input("addressFamily", required: true)]
        public Input<string> AddressFamily { get; set; } = null!;

        [Input("amazonAddress")]
        public Input<string>? AmazonAddress { get; set; }

        [Input("bgpAsn", required: true)]
        public Input<int> BgpAsn { get; set; } = null!;

        [Input("bgpAuthKey")]
        public Input<string>? BgpAuthKey { get; set; }

        [Input("connectionId", required: true)]
        public Input<string> ConnectionId { get; set; } = null!;

        [Input("customerAddress")]
        public Input<string>? CustomerAddress { get; set; }

        [Input("dxGatewayId", required: true)]
        public Input<string> DxGatewayId { get; set; } = null!;

        [Input("mtu")]
        public Input<int>? Mtu { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("sitelinkEnabled")]
        public Input<bool>? SitelinkEnabled { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("vlan", required: true)]
        public Input<int> Vlan { get; set; } = null!;

        public TransitVirtualInterfaceArgs()
        {
        }
        public static new TransitVirtualInterfaceArgs Empty => new TransitVirtualInterfaceArgs();
    }

    public sealed class TransitVirtualInterfaceState : global::Pulumi.ResourceArgs
    {
        [Input("addressFamily")]
        public Input<string>? AddressFamily { get; set; }

        [Input("amazonAddress")]
        public Input<string>? AmazonAddress { get; set; }

        [Input("amazonSideAsn")]
        public Input<string>? AmazonSideAsn { get; set; }

        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("awsDevice")]
        public Input<string>? AwsDevice { get; set; }

        [Input("bgpAsn")]
        public Input<int>? BgpAsn { get; set; }

        [Input("bgpAuthKey")]
        public Input<string>? BgpAuthKey { get; set; }

        [Input("connectionId")]
        public Input<string>? ConnectionId { get; set; }

        [Input("customerAddress")]
        public Input<string>? CustomerAddress { get; set; }

        [Input("dxGatewayId")]
        public Input<string>? DxGatewayId { get; set; }

        [Input("jumboFrameCapable")]
        public Input<bool>? JumboFrameCapable { get; set; }

        [Input("mtu")]
        public Input<int>? Mtu { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("sitelinkEnabled")]
        public Input<bool>? SitelinkEnabled { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("vlan")]
        public Input<int>? Vlan { get; set; }

        public TransitVirtualInterfaceState()
        {
        }
        public static new TransitVirtualInterfaceState Empty => new TransitVirtualInterfaceState();
    }
}
