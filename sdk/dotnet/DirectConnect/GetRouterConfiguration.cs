// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.DirectConnect
{
    public static class GetRouterConfiguration
    {
        public static Task<GetRouterConfigurationResult> InvokeAsync(GetRouterConfigurationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRouterConfigurationResult>("aws:directconnect/getRouterConfiguration:getRouterConfiguration", args ?? new GetRouterConfigurationArgs(), options.WithDefaults());

        public static Output<GetRouterConfigurationResult> Invoke(GetRouterConfigurationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRouterConfigurationResult>("aws:directconnect/getRouterConfiguration:getRouterConfiguration", args ?? new GetRouterConfigurationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRouterConfigurationArgs : global::Pulumi.InvokeArgs
    {
        [Input("routerTypeIdentifier", required: true)]
        public string RouterTypeIdentifier { get; set; } = null!;

        [Input("virtualInterfaceId", required: true)]
        public string VirtualInterfaceId { get; set; } = null!;

        public GetRouterConfigurationArgs()
        {
        }
        public static new GetRouterConfigurationArgs Empty => new GetRouterConfigurationArgs();
    }

    public sealed class GetRouterConfigurationInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("routerTypeIdentifier", required: true)]
        public Input<string> RouterTypeIdentifier { get; set; } = null!;

        [Input("virtualInterfaceId", required: true)]
        public Input<string> VirtualInterfaceId { get; set; } = null!;

        public GetRouterConfigurationInvokeArgs()
        {
        }
        public static new GetRouterConfigurationInvokeArgs Empty => new GetRouterConfigurationInvokeArgs();
    }


    [OutputType]
    public sealed class GetRouterConfigurationResult
    {
        public readonly string CustomerRouterConfig;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string RouterTypeIdentifier;
        public readonly ImmutableArray<Outputs.GetRouterConfigurationRouterResult> Routers;
        public readonly string VirtualInterfaceId;
        public readonly string VirtualInterfaceName;

        [OutputConstructor]
        private GetRouterConfigurationResult(
            string customerRouterConfig,

            string id,

            string routerTypeIdentifier,

            ImmutableArray<Outputs.GetRouterConfigurationRouterResult> routers,

            string virtualInterfaceId,

            string virtualInterfaceName)
        {
            CustomerRouterConfig = customerRouterConfig;
            Id = id;
            RouterTypeIdentifier = routerTypeIdentifier;
            Routers = routers;
            VirtualInterfaceId = virtualInterfaceId;
            VirtualInterfaceName = virtualInterfaceName;
        }
    }
}
