// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Organizations
{
    [AwsResourceType("aws:organizations/organization:Organization")]
    public partial class Organization : global::Pulumi.CustomResource
    {
        [Output("accounts")]
        public Output<ImmutableArray<Outputs.OrganizationAccount>> Accounts { get; private set; } = null!;

        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("awsServiceAccessPrincipals")]
        public Output<ImmutableArray<string>> AwsServiceAccessPrincipals { get; private set; } = null!;

        [Output("enabledPolicyTypes")]
        public Output<ImmutableArray<string>> EnabledPolicyTypes { get; private set; } = null!;

        [Output("featureSet")]
        public Output<string?> FeatureSet { get; private set; } = null!;

        [Output("masterAccountArn")]
        public Output<string> MasterAccountArn { get; private set; } = null!;

        [Output("masterAccountEmail")]
        public Output<string> MasterAccountEmail { get; private set; } = null!;

        [Output("masterAccountId")]
        public Output<string> MasterAccountId { get; private set; } = null!;

        [Output("nonMasterAccounts")]
        public Output<ImmutableArray<Outputs.OrganizationNonMasterAccount>> NonMasterAccounts { get; private set; } = null!;

        [Output("roots")]
        public Output<ImmutableArray<Outputs.OrganizationRoot>> Roots { get; private set; } = null!;


        /// <summary>
        /// Create a Organization resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Organization(string name, OrganizationArgs? args = null, CustomResourceOptions? options = null)
            : base("aws:organizations/organization:Organization", name, args ?? new OrganizationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Organization(string name, Input<string> id, OrganizationState? state = null, CustomResourceOptions? options = null)
            : base("aws:organizations/organization:Organization", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Organization resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Organization Get(string name, Input<string> id, OrganizationState? state = null, CustomResourceOptions? options = null)
        {
            return new Organization(name, id, state, options);
        }
    }

    public sealed class OrganizationArgs : global::Pulumi.ResourceArgs
    {
        [Input("awsServiceAccessPrincipals")]
        private InputList<string>? _awsServiceAccessPrincipals;
        public InputList<string> AwsServiceAccessPrincipals
        {
            get => _awsServiceAccessPrincipals ?? (_awsServiceAccessPrincipals = new InputList<string>());
            set => _awsServiceAccessPrincipals = value;
        }

        [Input("enabledPolicyTypes")]
        private InputList<string>? _enabledPolicyTypes;
        public InputList<string> EnabledPolicyTypes
        {
            get => _enabledPolicyTypes ?? (_enabledPolicyTypes = new InputList<string>());
            set => _enabledPolicyTypes = value;
        }

        [Input("featureSet")]
        public Input<string>? FeatureSet { get; set; }

        public OrganizationArgs()
        {
        }
        public static new OrganizationArgs Empty => new OrganizationArgs();
    }

    public sealed class OrganizationState : global::Pulumi.ResourceArgs
    {
        [Input("accounts")]
        private InputList<Inputs.OrganizationAccountGetArgs>? _accounts;
        public InputList<Inputs.OrganizationAccountGetArgs> Accounts
        {
            get => _accounts ?? (_accounts = new InputList<Inputs.OrganizationAccountGetArgs>());
            set => _accounts = value;
        }

        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("awsServiceAccessPrincipals")]
        private InputList<string>? _awsServiceAccessPrincipals;
        public InputList<string> AwsServiceAccessPrincipals
        {
            get => _awsServiceAccessPrincipals ?? (_awsServiceAccessPrincipals = new InputList<string>());
            set => _awsServiceAccessPrincipals = value;
        }

        [Input("enabledPolicyTypes")]
        private InputList<string>? _enabledPolicyTypes;
        public InputList<string> EnabledPolicyTypes
        {
            get => _enabledPolicyTypes ?? (_enabledPolicyTypes = new InputList<string>());
            set => _enabledPolicyTypes = value;
        }

        [Input("featureSet")]
        public Input<string>? FeatureSet { get; set; }

        [Input("masterAccountArn")]
        public Input<string>? MasterAccountArn { get; set; }

        [Input("masterAccountEmail")]
        public Input<string>? MasterAccountEmail { get; set; }

        [Input("masterAccountId")]
        public Input<string>? MasterAccountId { get; set; }

        [Input("nonMasterAccounts")]
        private InputList<Inputs.OrganizationNonMasterAccountGetArgs>? _nonMasterAccounts;
        public InputList<Inputs.OrganizationNonMasterAccountGetArgs> NonMasterAccounts
        {
            get => _nonMasterAccounts ?? (_nonMasterAccounts = new InputList<Inputs.OrganizationNonMasterAccountGetArgs>());
            set => _nonMasterAccounts = value;
        }

        [Input("roots")]
        private InputList<Inputs.OrganizationRootGetArgs>? _roots;
        public InputList<Inputs.OrganizationRootGetArgs> Roots
        {
            get => _roots ?? (_roots = new InputList<Inputs.OrganizationRootGetArgs>());
            set => _roots = value;
        }

        public OrganizationState()
        {
        }
        public static new OrganizationState Empty => new OrganizationState();
    }
}
