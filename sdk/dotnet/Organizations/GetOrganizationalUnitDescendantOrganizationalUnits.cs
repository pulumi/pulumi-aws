// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Organizations
{
    public static class GetOrganizationalUnitDescendantOrganizationalUnits
    {
        /// <summary>
        /// Get all direct child organizational units under a parent organizational unit. This provides all children.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var org = Aws.Organizations.GetOrganization.Invoke();
        /// 
        ///     var ous = Aws.Organizations.GetOrganizationalUnitDescendantOrganizationalUnits.Invoke(new()
        ///     {
        ///         ParentId = org.Apply(getOrganizationResult =&gt; getOrganizationResult.Roots[0]?.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetOrganizationalUnitDescendantOrganizationalUnitsResult> InvokeAsync(GetOrganizationalUnitDescendantOrganizationalUnitsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOrganizationalUnitDescendantOrganizationalUnitsResult>("aws:organizations/getOrganizationalUnitDescendantOrganizationalUnits:getOrganizationalUnitDescendantOrganizationalUnits", args ?? new GetOrganizationalUnitDescendantOrganizationalUnitsArgs(), options.WithDefaults());

        /// <summary>
        /// Get all direct child organizational units under a parent organizational unit. This provides all children.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var org = Aws.Organizations.GetOrganization.Invoke();
        /// 
        ///     var ous = Aws.Organizations.GetOrganizationalUnitDescendantOrganizationalUnits.Invoke(new()
        ///     {
        ///         ParentId = org.Apply(getOrganizationResult =&gt; getOrganizationResult.Roots[0]?.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOrganizationalUnitDescendantOrganizationalUnitsResult> Invoke(GetOrganizationalUnitDescendantOrganizationalUnitsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOrganizationalUnitDescendantOrganizationalUnitsResult>("aws:organizations/getOrganizationalUnitDescendantOrganizationalUnits:getOrganizationalUnitDescendantOrganizationalUnits", args ?? new GetOrganizationalUnitDescendantOrganizationalUnitsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get all direct child organizational units under a parent organizational unit. This provides all children.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var org = Aws.Organizations.GetOrganization.Invoke();
        /// 
        ///     var ous = Aws.Organizations.GetOrganizationalUnitDescendantOrganizationalUnits.Invoke(new()
        ///     {
        ///         ParentId = org.Apply(getOrganizationResult =&gt; getOrganizationResult.Roots[0]?.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetOrganizationalUnitDescendantOrganizationalUnitsResult> Invoke(GetOrganizationalUnitDescendantOrganizationalUnitsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetOrganizationalUnitDescendantOrganizationalUnitsResult>("aws:organizations/getOrganizationalUnitDescendantOrganizationalUnits:getOrganizationalUnitDescendantOrganizationalUnits", args ?? new GetOrganizationalUnitDescendantOrganizationalUnitsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOrganizationalUnitDescendantOrganizationalUnitsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Parent ID of the organizational unit.
        /// </summary>
        [Input("parentId", required: true)]
        public string ParentId { get; set; } = null!;

        public GetOrganizationalUnitDescendantOrganizationalUnitsArgs()
        {
        }
        public static new GetOrganizationalUnitDescendantOrganizationalUnitsArgs Empty => new GetOrganizationalUnitDescendantOrganizationalUnitsArgs();
    }

    public sealed class GetOrganizationalUnitDescendantOrganizationalUnitsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Parent ID of the organizational unit.
        /// </summary>
        [Input("parentId", required: true)]
        public Input<string> ParentId { get; set; } = null!;

        public GetOrganizationalUnitDescendantOrganizationalUnitsInvokeArgs()
        {
        }
        public static new GetOrganizationalUnitDescendantOrganizationalUnitsInvokeArgs Empty => new GetOrganizationalUnitDescendantOrganizationalUnitsInvokeArgs();
    }


    [OutputType]
    public sealed class GetOrganizationalUnitDescendantOrganizationalUnitsResult
    {
        /// <summary>
        /// List of child organizational units, which have the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetOrganizationalUnitDescendantOrganizationalUnitsChildrenResult> Childrens;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string ParentId;

        [OutputConstructor]
        private GetOrganizationalUnitDescendantOrganizationalUnitsResult(
            ImmutableArray<Outputs.GetOrganizationalUnitDescendantOrganizationalUnitsChildrenResult> childrens,

            string id,

            string parentId)
        {
            Childrens = childrens;
            Id = id;
            ParentId = parentId;
        }
    }
}
