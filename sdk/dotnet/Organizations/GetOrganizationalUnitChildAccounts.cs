// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Organizations
{
    public static class GetOrganizationalUnitChildAccounts
    {
        /// <summary>
        /// Get all direct child accounts under a parent organizational unit. This only provides immediate children, not all children.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var org = Aws.Organizations.GetOrganization.Invoke();
        /// 
        ///     var accounts = Aws.Organizations.GetOrganizationalUnitChildAccounts.Invoke(new()
        ///     {
        ///         ParentId = org.Apply(getOrganizationResult =&gt; getOrganizationResult.Roots[0]?.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetOrganizationalUnitChildAccountsResult> InvokeAsync(GetOrganizationalUnitChildAccountsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOrganizationalUnitChildAccountsResult>("aws:organizations/getOrganizationalUnitChildAccounts:getOrganizationalUnitChildAccounts", args ?? new GetOrganizationalUnitChildAccountsArgs(), options.WithDefaults());

        /// <summary>
        /// Get all direct child accounts under a parent organizational unit. This only provides immediate children, not all children.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var org = Aws.Organizations.GetOrganization.Invoke();
        /// 
        ///     var accounts = Aws.Organizations.GetOrganizationalUnitChildAccounts.Invoke(new()
        ///     {
        ///         ParentId = org.Apply(getOrganizationResult =&gt; getOrganizationResult.Roots[0]?.Id),
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetOrganizationalUnitChildAccountsResult> Invoke(GetOrganizationalUnitChildAccountsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOrganizationalUnitChildAccountsResult>("aws:organizations/getOrganizationalUnitChildAccounts:getOrganizationalUnitChildAccounts", args ?? new GetOrganizationalUnitChildAccountsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOrganizationalUnitChildAccountsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The parent ID of the accounts.
        /// </summary>
        [Input("parentId", required: true)]
        public string ParentId { get; set; } = null!;

        public GetOrganizationalUnitChildAccountsArgs()
        {
        }
        public static new GetOrganizationalUnitChildAccountsArgs Empty => new GetOrganizationalUnitChildAccountsArgs();
    }

    public sealed class GetOrganizationalUnitChildAccountsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The parent ID of the accounts.
        /// </summary>
        [Input("parentId", required: true)]
        public Input<string> ParentId { get; set; } = null!;

        public GetOrganizationalUnitChildAccountsInvokeArgs()
        {
        }
        public static new GetOrganizationalUnitChildAccountsInvokeArgs Empty => new GetOrganizationalUnitChildAccountsInvokeArgs();
    }


    [OutputType]
    public sealed class GetOrganizationalUnitChildAccountsResult
    {
        /// <summary>
        /// List of child accounts, which have the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetOrganizationalUnitChildAccountsAccountResult> Accounts;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string ParentId;

        [OutputConstructor]
        private GetOrganizationalUnitChildAccountsResult(
            ImmutableArray<Outputs.GetOrganizationalUnitChildAccountsAccountResult> accounts,

            string id,

            string parentId)
        {
            Accounts = accounts;
            Id = id;
            ParentId = parentId;
        }
    }
}
