// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Organizations
{
    public static class GetOrganizationalUnits
    {
        /// <summary>
        /// Get all direct child organizational units under a parent organizational unit. This only provides immediate children, not all children.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var org = Output.Create(Aws.Organizations.GetOrganization.InvokeAsync());
        ///         var ou = org.Apply(org =&gt; Output.Create(Aws.Organizations.GetOrganizationalUnits.InvokeAsync(new Aws.Organizations.GetOrganizationalUnitsArgs
        ///         {
        ///             ParentId = org.Roots?[0]?.Id,
        ///         })));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetOrganizationalUnitsResult> InvokeAsync(GetOrganizationalUnitsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetOrganizationalUnitsResult>("aws:organizations/getOrganizationalUnits:getOrganizationalUnits", args ?? new GetOrganizationalUnitsArgs(), options.WithVersion());
    }


    public sealed class GetOrganizationalUnitsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The parent ID of the organizational unit.
        /// </summary>
        [Input("parentId", required: true)]
        public string ParentId { get; set; } = null!;

        public GetOrganizationalUnitsArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetOrganizationalUnitsResult
    {
        /// <summary>
        /// List of child organizational units, which have the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetOrganizationalUnitsChildrenResult> Childrens;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string ParentId;

        [OutputConstructor]
        private GetOrganizationalUnitsResult(
            ImmutableArray<Outputs.GetOrganizationalUnitsChildrenResult> childrens,

            string id,

            string parentId)
        {
            Childrens = childrens;
            Id = id;
            ParentId = parentId;
        }
    }
}
