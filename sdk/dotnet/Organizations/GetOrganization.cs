// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Organizations
{
    public static class GetOrganization
    {
        public static Task<GetOrganizationResult> InvokeAsync(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOrganizationResult>("aws:organizations/getOrganization:getOrganization", InvokeArgs.Empty, options.WithDefaults());
    }


    [OutputType]
    public sealed class GetOrganizationResult
    {
        public readonly ImmutableArray<Outputs.GetOrganizationAccountResult> Accounts;
        public readonly string Arn;
        public readonly ImmutableArray<string> AwsServiceAccessPrincipals;
        public readonly ImmutableArray<string> EnabledPolicyTypes;
        public readonly string FeatureSet;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string MasterAccountArn;
        public readonly string MasterAccountEmail;
        public readonly string MasterAccountId;
        public readonly ImmutableArray<Outputs.GetOrganizationNonMasterAccountResult> NonMasterAccounts;
        public readonly ImmutableArray<Outputs.GetOrganizationRootResult> Roots;

        [OutputConstructor]
        private GetOrganizationResult(
            ImmutableArray<Outputs.GetOrganizationAccountResult> accounts,

            string arn,

            ImmutableArray<string> awsServiceAccessPrincipals,

            ImmutableArray<string> enabledPolicyTypes,

            string featureSet,

            string id,

            string masterAccountArn,

            string masterAccountEmail,

            string masterAccountId,

            ImmutableArray<Outputs.GetOrganizationNonMasterAccountResult> nonMasterAccounts,

            ImmutableArray<Outputs.GetOrganizationRootResult> roots)
        {
            Accounts = accounts;
            Arn = arn;
            AwsServiceAccessPrincipals = awsServiceAccessPrincipals;
            EnabledPolicyTypes = enabledPolicyTypes;
            FeatureSet = featureSet;
            Id = id;
            MasterAccountArn = masterAccountArn;
            MasterAccountEmail = masterAccountEmail;
            MasterAccountId = masterAccountId;
            NonMasterAccounts = nonMasterAccounts;
            Roots = roots;
        }
    }
}
