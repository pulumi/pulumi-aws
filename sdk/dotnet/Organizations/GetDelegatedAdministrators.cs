// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Organizations
{
    public static class GetDelegatedAdministrators
    {
        /// <summary>
        /// Get a list of AWS accounts that are designated as delegated administrators in this organization
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const example = aws.organizations.getDelegatedAdministrators({
        ///     servicePrincipal: "SERVICE PRINCIPAL",
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// example = aws.organizations.get_delegated_administrators(service_principal="SERVICE PRINCIPAL")
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Organizations.GetDelegatedAdministrators.Invoke(new()
        ///     {
        ///         ServicePrincipal = "SERVICE PRINCIPAL",
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/organizations"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := organizations.GetDelegatedAdministrators(ctx, &amp;organizations.GetDelegatedAdministratorsArgs{
        /// 			ServicePrincipal: pulumi.StringRef("SERVICE PRINCIPAL"),
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.organizations.OrganizationsFunctions;
        /// import com.pulumi.aws.organizations.inputs.GetDelegatedAdministratorsArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var example = OrganizationsFunctions.getDelegatedAdministrators(GetDelegatedAdministratorsArgs.builder()
        ///             .servicePrincipal("SERVICE PRINCIPAL")
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   example:
        ///     fn::invoke:
        ///       Function: aws:organizations:getDelegatedAdministrators
        ///       Arguments:
        ///         servicePrincipal: SERVICE PRINCIPAL
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetDelegatedAdministratorsResult> InvokeAsync(GetDelegatedAdministratorsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDelegatedAdministratorsResult>("aws:organizations/getDelegatedAdministrators:getDelegatedAdministrators", args ?? new GetDelegatedAdministratorsArgs(), options.WithDefaults());

        /// <summary>
        /// Get a list of AWS accounts that are designated as delegated administrators in this organization
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const example = aws.organizations.getDelegatedAdministrators({
        ///     servicePrincipal: "SERVICE PRINCIPAL",
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// example = aws.organizations.get_delegated_administrators(service_principal="SERVICE PRINCIPAL")
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Organizations.GetDelegatedAdministrators.Invoke(new()
        ///     {
        ///         ServicePrincipal = "SERVICE PRINCIPAL",
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/organizations"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := organizations.GetDelegatedAdministrators(ctx, &amp;organizations.GetDelegatedAdministratorsArgs{
        /// 			ServicePrincipal: pulumi.StringRef("SERVICE PRINCIPAL"),
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.organizations.OrganizationsFunctions;
        /// import com.pulumi.aws.organizations.inputs.GetDelegatedAdministratorsArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var example = OrganizationsFunctions.getDelegatedAdministrators(GetDelegatedAdministratorsArgs.builder()
        ///             .servicePrincipal("SERVICE PRINCIPAL")
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   example:
        ///     fn::invoke:
        ///       Function: aws:organizations:getDelegatedAdministrators
        ///       Arguments:
        ///         servicePrincipal: SERVICE PRINCIPAL
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetDelegatedAdministratorsResult> Invoke(GetDelegatedAdministratorsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDelegatedAdministratorsResult>("aws:organizations/getDelegatedAdministrators:getDelegatedAdministrators", args ?? new GetDelegatedAdministratorsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDelegatedAdministratorsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specifies a service principal name. If specified, then the operation lists the delegated administrators only for the specified service. If you don't specify a service principal, the operation lists all delegated administrators for all services in your organization.
        /// </summary>
        [Input("servicePrincipal")]
        public string? ServicePrincipal { get; set; }

        public GetDelegatedAdministratorsArgs()
        {
        }
        public static new GetDelegatedAdministratorsArgs Empty => new GetDelegatedAdministratorsArgs();
    }

    public sealed class GetDelegatedAdministratorsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specifies a service principal name. If specified, then the operation lists the delegated administrators only for the specified service. If you don't specify a service principal, the operation lists all delegated administrators for all services in your organization.
        /// </summary>
        [Input("servicePrincipal")]
        public Input<string>? ServicePrincipal { get; set; }

        public GetDelegatedAdministratorsInvokeArgs()
        {
        }
        public static new GetDelegatedAdministratorsInvokeArgs Empty => new GetDelegatedAdministratorsInvokeArgs();
    }


    [OutputType]
    public sealed class GetDelegatedAdministratorsResult
    {
        /// <summary>
        /// The list of delegated administrators in your organization, which have the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDelegatedAdministratorsDelegatedAdministratorResult> DelegatedAdministrators;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? ServicePrincipal;

        [OutputConstructor]
        private GetDelegatedAdministratorsResult(
            ImmutableArray<Outputs.GetDelegatedAdministratorsDelegatedAdministratorResult> delegatedAdministrators,

            string id,

            string? servicePrincipal)
        {
            DelegatedAdministrators = delegatedAdministrators;
            Id = id;
            ServicePrincipal = servicePrincipal;
        }
    }
}
