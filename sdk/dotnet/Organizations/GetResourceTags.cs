// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi.Utilities;

namespace Pulumi.Aws.Organizations
{
    public static class GetResourceTags
    {
        /// <summary>
        /// Get tags attached to the specified AWS Organizations resource.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var account = Output.Create(Aws.Organizations.GetResourceTags.InvokeAsync(new Aws.Organizations.GetResourceTagsArgs
        ///         {
        ///             ResourceId = "123456123846",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetResourceTagsResult> InvokeAsync(GetResourceTagsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetResourceTagsResult>("aws:organizations/getResourceTags:getResourceTags", args ?? new GetResourceTagsArgs(), options.WithVersion());

        /// <summary>
        /// Get tags attached to the specified AWS Organizations resource.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var account = Output.Create(Aws.Organizations.GetResourceTags.InvokeAsync(new Aws.Organizations.GetResourceTagsArgs
        ///         {
        ///             ResourceId = "123456123846",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetResourceTagsResult> Invoke(GetResourceTagsInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetResourceTagsResult>("aws:organizations/getResourceTags:getResourceTags", args ?? new GetResourceTagsInvokeArgs(), options.WithVersion());
    }


    public sealed class GetResourceTagsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the resource with the tags to list. See details below.
        /// </summary>
        [Input("resourceId", required: true)]
        public string ResourceId { get; set; } = null!;

        [Input("tags")]
        private Dictionary<string, string>? _tags;

        /// <summary>
        /// Map of key=value pairs for each tag set on the resource.
        /// </summary>
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetResourceTagsArgs()
        {
        }
    }

    public sealed class GetResourceTagsInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the resource with the tags to list. See details below.
        /// </summary>
        [Input("resourceId", required: true)]
        public Input<string> ResourceId { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Map of key=value pairs for each tag set on the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetResourceTagsInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetResourceTagsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string ResourceId;
        /// <summary>
        /// Map of key=value pairs for each tag set on the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;

        [OutputConstructor]
        private GetResourceTagsResult(
            string id,

            string resourceId,

            ImmutableDictionary<string, string> tags)
        {
            Id = id;
            ResourceId = resourceId;
            Tags = tags;
        }
    }
}
