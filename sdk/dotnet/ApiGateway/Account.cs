// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.ApiGateway
{
    /// <summary>
    /// Provides a settings of an API Gateway Account. Settings is applied region-wide per `provider` block.
    /// 
    /// &gt; **Note:** As there is no API method for deleting account settings or resetting it to defaults, destroying this resource will keep your account settings intact
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var cloudwatchRole = new Aws.Iam.Role("cloudwatchRole", new Aws.Iam.RoleArgs
    ///         {
    ///             AssumeRolePolicy = @"{
    ///   ""Version"": ""2012-10-17"",
    ///   ""Statement"": [
    ///     {
    ///       ""Sid"": """",
    ///       ""Effect"": ""Allow"",
    ///       ""Principal"": {
    ///         ""Service"": ""apigateway.amazonaws.com""
    ///       },
    ///       ""Action"": ""sts:AssumeRole""
    ///     }
    ///   ]
    /// }
    /// ",
    ///         });
    ///         var demo = new Aws.ApiGateway.Account("demo", new Aws.ApiGateway.AccountArgs
    ///         {
    ///             CloudwatchRoleArn = cloudwatchRole.Arn,
    ///         });
    ///         var cloudwatchRolePolicy = new Aws.Iam.RolePolicy("cloudwatchRolePolicy", new Aws.Iam.RolePolicyArgs
    ///         {
    ///             Role = cloudwatchRole.Id,
    ///             Policy = @"{
    ///     ""Version"": ""2012-10-17"",
    ///     ""Statement"": [
    ///         {
    ///             ""Effect"": ""Allow"",
    ///             ""Action"": [
    ///                 ""logs:CreateLogGroup"",
    ///                 ""logs:CreateLogStream"",
    ///                 ""logs:DescribeLogGroups"",
    ///                 ""logs:DescribeLogStreams"",
    ///                 ""logs:PutLogEvents"",
    ///                 ""logs:GetLogEvents"",
    ///                 ""logs:FilterLogEvents""
    ///             ],
    ///             ""Resource"": ""*""
    ///         }
    ///     ]
    /// }
    /// ",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// API Gateway Accounts can be imported using the word `api-gateway-account`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import aws:apigateway/account:Account demo api-gateway-account
    /// ```
    /// </summary>
    public partial class Account : Pulumi.CustomResource
    {
        /// <summary>
        /// The ARN of an IAM role for CloudWatch (to allow logging &amp; monitoring). See more [in AWS Docs](https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-stage-settings.html#how-to-stage-settings-console). Logging &amp; monitoring can be enabled/disabled and otherwise tuned on the API Gateway Stage level.
        /// </summary>
        [Output("cloudwatchRoleArn")]
        public Output<string?> CloudwatchRoleArn { get; private set; } = null!;

        /// <summary>
        /// Account-Level throttle settings. See exported fields below.
        /// </summary>
        [Output("throttleSettings")]
        public Output<Outputs.AccountThrottleSettings> ThrottleSettings { get; private set; } = null!;


        /// <summary>
        /// Create a Account resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Account(string name, AccountArgs? args = null, CustomResourceOptions? options = null)
            : base("aws:apigateway/account:Account", name, args ?? new AccountArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Account(string name, Input<string> id, AccountState? state = null, CustomResourceOptions? options = null)
            : base("aws:apigateway/account:Account", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Account resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Account Get(string name, Input<string> id, AccountState? state = null, CustomResourceOptions? options = null)
        {
            return new Account(name, id, state, options);
        }
    }

    public sealed class AccountArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ARN of an IAM role for CloudWatch (to allow logging &amp; monitoring). See more [in AWS Docs](https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-stage-settings.html#how-to-stage-settings-console). Logging &amp; monitoring can be enabled/disabled and otherwise tuned on the API Gateway Stage level.
        /// </summary>
        [Input("cloudwatchRoleArn")]
        public Input<string>? CloudwatchRoleArn { get; set; }

        public AccountArgs()
        {
        }
    }

    public sealed class AccountState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ARN of an IAM role for CloudWatch (to allow logging &amp; monitoring). See more [in AWS Docs](https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-stage-settings.html#how-to-stage-settings-console). Logging &amp; monitoring can be enabled/disabled and otherwise tuned on the API Gateway Stage level.
        /// </summary>
        [Input("cloudwatchRoleArn")]
        public Input<string>? CloudwatchRoleArn { get; set; }

        /// <summary>
        /// Account-Level throttle settings. See exported fields below.
        /// </summary>
        [Input("throttleSettings")]
        public Input<Inputs.AccountThrottleSettingsGetArgs>? ThrottleSettings { get; set; }

        public AccountState()
        {
        }
    }
}
