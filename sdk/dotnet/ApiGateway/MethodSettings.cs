// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.ApiGateway
{
    /// <summary>
    /// Manages API Gateway Stage Method Settings. For example, CloudWatch logging and metrics.
    /// 
    /// &gt; **NOTE:** We recommend using this resource in conjunction with the `aws.apigateway.Stage` resource instead of a stage managed by the `aws.apigateway.Deployment` resource optional `stage_name` argument. Stages managed by the `aws.apigateway.Deployment` resource are recreated on redeployment and this resource will require a second apply to recreate the method settings.
    /// 
    /// ## Example Usage
    /// 
    /// ### End-to-end
    /// 
    /// ### Basic Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using System.Text.Json;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// using Std = Pulumi.Std;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.ApiGateway.RestApi("example", new()
    ///     {
    ///         Body = JsonSerializer.Serialize(new Dictionary&lt;string, object?&gt;
    ///         {
    ///             ["openapi"] = "3.0.1",
    ///             ["info"] = new Dictionary&lt;string, object?&gt;
    ///             {
    ///                 ["title"] = "example",
    ///                 ["version"] = "1.0",
    ///             },
    ///             ["paths"] = new Dictionary&lt;string, object?&gt;
    ///             {
    ///                 ["/path1"] = new Dictionary&lt;string, object?&gt;
    ///                 {
    ///                     ["get"] = new Dictionary&lt;string, object?&gt;
    ///                     {
    ///                         ["x-amazon-apigateway-integration"] = new Dictionary&lt;string, object?&gt;
    ///                         {
    ///                             ["httpMethod"] = "GET",
    ///                             ["payloadFormatVersion"] = "1.0",
    ///                             ["type"] = "HTTP_PROXY",
    ///                             ["uri"] = "https://ip-ranges.amazonaws.com/ip-ranges.json",
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///         }),
    ///         Name = "example",
    ///     });
    /// 
    ///     var exampleDeployment = new Aws.ApiGateway.Deployment("example", new()
    ///     {
    ///         RestApi = example.Id,
    ///         Triggers = 
    ///         {
    ///             { "redeployment", Std.Sha1.Invoke(new()
    ///             {
    ///                 Input = Output.JsonSerialize(Output.Create(example.Body)),
    ///             }).Apply(invoke =&gt; invoke.Result) },
    ///         },
    ///     });
    /// 
    ///     var exampleStage = new Aws.ApiGateway.Stage("example", new()
    ///     {
    ///         Deployment = exampleDeployment.Id,
    ///         RestApi = example.Id,
    ///         StageName = "example",
    ///     });
    /// 
    ///     var all = new Aws.ApiGateway.MethodSettings("all", new()
    ///     {
    ///         RestApi = example.Id,
    ///         StageName = exampleStage.StageName,
    ///         MethodPath = "*/*",
    ///         Settings = new Aws.ApiGateway.Inputs.MethodSettingsSettingsArgs
    ///         {
    ///             MetricsEnabled = true,
    ///             LoggingLevel = "ERROR",
    ///         },
    ///     });
    /// 
    ///     var pathSpecific = new Aws.ApiGateway.MethodSettings("path_specific", new()
    ///     {
    ///         RestApi = example.Id,
    ///         StageName = exampleStage.StageName,
    ///         MethodPath = "path1/GET",
    ///         Settings = new Aws.ApiGateway.Inputs.MethodSettingsSettingsArgs
    ///         {
    ///             MetricsEnabled = true,
    ///             LoggingLevel = "INFO",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ### CloudWatch Logging and Tracing
    /// 
    /// The AWS Console API Gateway Editor displays multiple options for CloudWatch Logs that don't directly map to the options in the AWS API and Pulumi. These examples show the `settings` blocks that are equivalent to the options the AWS Console gives for CloudWatch Logs.
    /// 
    /// ### Off
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var pathSpecific = new Aws.ApiGateway.MethodSettings("path_specific", new()
    ///     {
    ///         RestApi = example.Id,
    ///         StageName = exampleAwsApiGatewayStage.StageName,
    ///         MethodPath = "path1/GET",
    ///         Settings = new Aws.ApiGateway.Inputs.MethodSettingsSettingsArgs
    ///         {
    ///             LoggingLevel = "OFF",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ### Errors Only
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var pathSpecific = new Aws.ApiGateway.MethodSettings("path_specific", new()
    ///     {
    ///         RestApi = example.Id,
    ///         StageName = exampleAwsApiGatewayStage.StageName,
    ///         MethodPath = "path1/GET",
    ///         Settings = new Aws.ApiGateway.Inputs.MethodSettingsSettingsArgs
    ///         {
    ///             LoggingLevel = "ERROR",
    ///             MetricsEnabled = true,
    ///             DataTraceEnabled = false,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ### Errors and Info Logs
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var pathSpecific = new Aws.ApiGateway.MethodSettings("path_specific", new()
    ///     {
    ///         RestApi = example.Id,
    ///         StageName = exampleAwsApiGatewayStage.StageName,
    ///         MethodPath = "path1/GET",
    ///         Settings = new Aws.ApiGateway.Inputs.MethodSettingsSettingsArgs
    ///         {
    ///             LoggingLevel = "INFO",
    ///             MetricsEnabled = true,
    ///             DataTraceEnabled = false,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ### Full Request and Response Logs
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var pathSpecific = new Aws.ApiGateway.MethodSettings("path_specific", new()
    ///     {
    ///         RestApi = example.Id,
    ///         StageName = exampleAwsApiGatewayStage.StageName,
    ///         MethodPath = "path1/GET",
    ///         Settings = new Aws.ApiGateway.Inputs.MethodSettingsSettingsArgs
    ///         {
    ///             LoggingLevel = "INFO",
    ///             MetricsEnabled = true,
    ///             DataTraceEnabled = true,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import `aws_api_gateway_method_settings` using `REST-API-ID/STAGE-NAME/METHOD-PATH`. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:apigateway/methodSettings:MethodSettings example 12345abcde/example/test/GET
    /// ```
    /// </summary>
    [AwsResourceType("aws:apigateway/methodSettings:MethodSettings")]
    public partial class MethodSettings : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Method path defined as `{resource_path}/{http_method}` for an individual method override, or `*/*` for overriding all methods in the stage. Ensure to trim any leading forward slashes in the path (e.g., `trimprefix(aws_api_gateway_resource.example.path, "/")`).
        /// </summary>
        [Output("methodPath")]
        public Output<string> MethodPath { get; private set; } = null!;

        /// <summary>
        /// ID of the REST API
        /// </summary>
        [Output("restApi")]
        public Output<string> RestApi { get; private set; } = null!;

        /// <summary>
        /// Settings block, see below.
        /// </summary>
        [Output("settings")]
        public Output<Outputs.MethodSettingsSettings> Settings { get; private set; } = null!;

        /// <summary>
        /// Name of the stage
        /// </summary>
        [Output("stageName")]
        public Output<string> StageName { get; private set; } = null!;


        /// <summary>
        /// Create a MethodSettings resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MethodSettings(string name, MethodSettingsArgs args, CustomResourceOptions? options = null)
            : base("aws:apigateway/methodSettings:MethodSettings", name, args ?? new MethodSettingsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MethodSettings(string name, Input<string> id, MethodSettingsState? state = null, CustomResourceOptions? options = null)
            : base("aws:apigateway/methodSettings:MethodSettings", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MethodSettings resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MethodSettings Get(string name, Input<string> id, MethodSettingsState? state = null, CustomResourceOptions? options = null)
        {
            return new MethodSettings(name, id, state, options);
        }
    }

    public sealed class MethodSettingsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Method path defined as `{resource_path}/{http_method}` for an individual method override, or `*/*` for overriding all methods in the stage. Ensure to trim any leading forward slashes in the path (e.g., `trimprefix(aws_api_gateway_resource.example.path, "/")`).
        /// </summary>
        [Input("methodPath", required: true)]
        public Input<string> MethodPath { get; set; } = null!;

        /// <summary>
        /// ID of the REST API
        /// </summary>
        [Input("restApi", required: true)]
        public Input<string> RestApi { get; set; } = null!;

        /// <summary>
        /// Settings block, see below.
        /// </summary>
        [Input("settings", required: true)]
        public Input<Inputs.MethodSettingsSettingsArgs> Settings { get; set; } = null!;

        /// <summary>
        /// Name of the stage
        /// </summary>
        [Input("stageName", required: true)]
        public Input<string> StageName { get; set; } = null!;

        public MethodSettingsArgs()
        {
        }
        public static new MethodSettingsArgs Empty => new MethodSettingsArgs();
    }

    public sealed class MethodSettingsState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Method path defined as `{resource_path}/{http_method}` for an individual method override, or `*/*` for overriding all methods in the stage. Ensure to trim any leading forward slashes in the path (e.g., `trimprefix(aws_api_gateway_resource.example.path, "/")`).
        /// </summary>
        [Input("methodPath")]
        public Input<string>? MethodPath { get; set; }

        /// <summary>
        /// ID of the REST API
        /// </summary>
        [Input("restApi")]
        public Input<string>? RestApi { get; set; }

        /// <summary>
        /// Settings block, see below.
        /// </summary>
        [Input("settings")]
        public Input<Inputs.MethodSettingsSettingsGetArgs>? Settings { get; set; }

        /// <summary>
        /// Name of the stage
        /// </summary>
        [Input("stageName")]
        public Input<string>? StageName { get; set; }

        public MethodSettingsState()
        {
        }
        public static new MethodSettingsState Empty => new MethodSettingsState();
    }
}
