// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.ApiGateway
{
    public static class GetRestApi
    {
        public static Task<GetRestApiResult> InvokeAsync(GetRestApiArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRestApiResult>("aws:apigateway/getRestApi:getRestApi", args ?? new GetRestApiArgs(), options.WithDefaults());

        public static Output<GetRestApiResult> Invoke(GetRestApiInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRestApiResult>("aws:apigateway/getRestApi:getRestApi", args ?? new GetRestApiInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRestApiArgs : global::Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("tags")]
        private Dictionary<string, string>? _tags;
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetRestApiArgs()
        {
        }
        public static new GetRestApiArgs Empty => new GetRestApiArgs();
    }

    public sealed class GetRestApiInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetRestApiInvokeArgs()
        {
        }
        public static new GetRestApiInvokeArgs Empty => new GetRestApiInvokeArgs();
    }


    [OutputType]
    public sealed class GetRestApiResult
    {
        public readonly string ApiKeySource;
        public readonly string Arn;
        public readonly ImmutableArray<string> BinaryMediaTypes;
        public readonly string Description;
        public readonly ImmutableArray<Outputs.GetRestApiEndpointConfigurationResult> EndpointConfigurations;
        public readonly string ExecutionArn;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly int MinimumCompressionSize;
        public readonly string Name;
        public readonly string Policy;
        public readonly string RootResourceId;
        public readonly ImmutableDictionary<string, string> Tags;

        [OutputConstructor]
        private GetRestApiResult(
            string apiKeySource,

            string arn,

            ImmutableArray<string> binaryMediaTypes,

            string description,

            ImmutableArray<Outputs.GetRestApiEndpointConfigurationResult> endpointConfigurations,

            string executionArn,

            string id,

            int minimumCompressionSize,

            string name,

            string policy,

            string rootResourceId,

            ImmutableDictionary<string, string> tags)
        {
            ApiKeySource = apiKeySource;
            Arn = arn;
            BinaryMediaTypes = binaryMediaTypes;
            Description = description;
            EndpointConfigurations = endpointConfigurations;
            ExecutionArn = executionArn;
            Id = id;
            MinimumCompressionSize = minimumCompressionSize;
            Name = name;
            Policy = policy;
            RootResourceId = rootResourceId;
            Tags = tags;
        }
    }
}
