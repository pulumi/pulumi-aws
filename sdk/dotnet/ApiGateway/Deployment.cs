// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.ApiGateway
{
    /// <summary>
    /// Manages an API Gateway REST Deployment. A deployment is a snapshot of the REST API configuration. The deployment can then be published to callable endpoints via the `aws.apigateway.Stage` resource and optionally managed further with the `aws.apigateway.BasePathMapping` resource, `aws.apigateway.DomainName` resource, and `aws_api_method_settings` resource. For more information, see the [API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-deploy-api.html).
    /// 
    /// To properly capture all REST API configuration in a deployment, this resource must have dependencies on all prior resources that manage resources/paths, methods, integrations, etc.
    /// 
    /// * For REST APIs that are configured via OpenAPI specification (`aws.apigateway.RestApi` resource `body` argument), no special dependency setup is needed beyond referencing the  `id` attribute of that resource unless additional resources have further customized the REST API.
    /// * When the REST API configuration involves other resources (`aws.apigateway.Integration` resource), the dependency setup can be done with implicit resource references in the `triggers` argument or explicit resource references using the [resource `dependsOn` custom option](https://www.pulumi.com/docs/intro/concepts/resources/#dependson). The `triggers` argument should be preferred over `depends_on`, since `depends_on` can only capture dependency ordering and will not cause the resource to recreate (redeploy the REST API) with upstream configuration changes.
    /// 
    /// !&gt; **WARNING:** It is recommended to use the `aws.apigateway.Stage` resource instead of managing an API Gateway Stage via the `stage_name` argument of this resource. When this resource is recreated (REST API redeployment) with the `stage_name` configured, the stage is deleted and recreated. This will cause a temporary service interruption, increase provide plan differences, and can require a second apply to recreate any downstream stage configuration such as associated `aws_api_method_settings` resources.
    /// 
    /// ## Example Usage
    /// ### OpenAPI Specification
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using System.Security.Cryptography;
    /// using System.Text;
    /// using System.Text.Json;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// 	
    /// string ComputeSHA1(string input) 
    /// {
    ///     var hash = SHA1.Create().ComputeHash(Encoding.UTF8.GetBytes(input));
    ///     return BitConverter.ToString(hash).Replace("-","").ToLowerInvariant();
    /// }
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleRestApi = new Aws.ApiGateway.RestApi("exampleRestApi", new()
    ///     {
    ///         Body = JsonSerializer.Serialize(new Dictionary&lt;string, object?&gt;
    ///         {
    ///             ["openapi"] = "3.0.1",
    ///             ["info"] = new Dictionary&lt;string, object?&gt;
    ///             {
    ///                 ["title"] = "example",
    ///                 ["version"] = "1.0",
    ///             },
    ///             ["paths"] = new Dictionary&lt;string, object?&gt;
    ///             {
    ///                 ["/path1"] = new Dictionary&lt;string, object?&gt;
    ///                 {
    ///                     ["get"] = new Dictionary&lt;string, object?&gt;
    ///                     {
    ///                         ["x-amazon-apigateway-integration"] = new Dictionary&lt;string, object?&gt;
    ///                         {
    ///                             ["httpMethod"] = "GET",
    ///                             ["payloadFormatVersion"] = "1.0",
    ///                             ["type"] = "HTTP_PROXY",
    ///                             ["uri"] = "https://ip-ranges.amazonaws.com/ip-ranges.json",
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///         }),
    ///     });
    /// 
    ///     var exampleDeployment = new Aws.ApiGateway.Deployment("exampleDeployment", new()
    ///     {
    ///         RestApi = exampleRestApi.Id,
    ///         Triggers = 
    ///         {
    ///             { "redeployment", exampleRestApi.Body.Apply(body =&gt; JsonSerializer.Serialize(body)).Apply(toJSON =&gt; ComputeSHA1(toJSON)) },
    ///         },
    ///     });
    /// 
    ///     var exampleStage = new Aws.ApiGateway.Stage("exampleStage", new()
    ///     {
    ///         Deployment = exampleDeployment.Id,
    ///         RestApi = exampleRestApi.Id,
    ///         StageName = "example",
    ///     });
    /// 
    /// });
    /// ```
    /// ### Resources
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using System.Security.Cryptography;
    /// using System.Text;
    /// using System.Text.Json;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// 	
    /// string ComputeSHA1(string input) 
    /// {
    ///     var hash = SHA1.Create().ComputeHash(Encoding.UTF8.GetBytes(input));
    ///     return BitConverter.ToString(hash).Replace("-","").ToLowerInvariant();
    /// }
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleRestApi = new Aws.ApiGateway.RestApi("exampleRestApi");
    /// 
    ///     var exampleResource = new Aws.ApiGateway.Resource("exampleResource", new()
    ///     {
    ///         ParentId = exampleRestApi.RootResourceId,
    ///         PathPart = "example",
    ///         RestApi = exampleRestApi.Id,
    ///     });
    /// 
    ///     var exampleMethod = new Aws.ApiGateway.Method("exampleMethod", new()
    ///     {
    ///         Authorization = "NONE",
    ///         HttpMethod = "GET",
    ///         ResourceId = exampleResource.Id,
    ///         RestApi = exampleRestApi.Id,
    ///     });
    /// 
    ///     var exampleIntegration = new Aws.ApiGateway.Integration("exampleIntegration", new()
    ///     {
    ///         HttpMethod = exampleMethod.HttpMethod,
    ///         ResourceId = exampleResource.Id,
    ///         RestApi = exampleRestApi.Id,
    ///         Type = "MOCK",
    ///     });
    /// 
    ///     var exampleDeployment = new Aws.ApiGateway.Deployment("exampleDeployment", new()
    ///     {
    ///         RestApi = exampleRestApi.Id,
    ///         Triggers = 
    ///         {
    ///             { "redeployment", Output.Tuple(exampleResource.Id, exampleMethod.Id, exampleIntegration.Id).Apply(values =&gt;
    ///             {
    ///                 var exampleResourceId = values.Item1;
    ///                 var exampleMethodId = values.Item2;
    ///                 var exampleIntegrationId = values.Item3;
    ///                 return JsonSerializer.Serialize(new[]
    ///                 {
    ///                     exampleResourceId,
    ///                     exampleMethodId,
    ///                     exampleIntegrationId,
    ///                 });
    ///             }).Apply(toJSON =&gt; ComputeSHA1(toJSON)) },
    ///         },
    ///     });
    /// 
    ///     var exampleStage = new Aws.ApiGateway.Stage("exampleStage", new()
    ///     {
    ///         Deployment = exampleDeployment.Id,
    ///         RestApi = exampleRestApi.Id,
    ///         StageName = "example",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import `aws_api_gateway_deployment` using `REST-API-ID/DEPLOYMENT-ID`. For example:
    /// 
    /// ```sh
    ///  $ pulumi import aws:apigateway/deployment:Deployment example aabbccddee/1122334
    /// ```
    ///  The `stage_name`, `stage_description`, and `variables` arguments cannot be imported. Use the `aws_api_gateway_stage` resource to import and manage stages.
    /// 
    /// The `triggers` argument cannot be imported.
    /// </summary>
    [AwsResourceType("aws:apigateway/deployment:Deployment")]
    public partial class Deployment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Creation date of the deployment
        /// </summary>
        [Output("createdDate")]
        public Output<string> CreatedDate { get; private set; } = null!;

        /// <summary>
        /// Description of the deployment
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Execution ARN to be used in `lambda_permission`'s `source_arn`
        /// when allowing API Gateway to invoke a Lambda function,
        /// e.g., `arn:aws:execute-api:eu-west-2:123456789012:z4675bid1j/prod`
        /// </summary>
        [Output("executionArn")]
        public Output<string> ExecutionArn { get; private set; } = null!;

        /// <summary>
        /// URL to invoke the API pointing to the stage,
        /// e.g., `https://z4675bid1j.execute-api.eu-west-2.amazonaws.com/prod`
        /// </summary>
        [Output("invokeUrl")]
        public Output<string> InvokeUrl { get; private set; } = null!;

        /// <summary>
        /// REST API identifier.
        /// </summary>
        [Output("restApi")]
        public Output<string> RestApi { get; private set; } = null!;

        /// <summary>
        /// Description to set on the stage managed by the `stage_name` argument.
        /// </summary>
        [Output("stageDescription")]
        public Output<string?> StageDescription { get; private set; } = null!;

        /// <summary>
        /// Name of the stage to create with this deployment. If the specified stage already exists, it will be updated to point to the new deployment. We recommend using the `aws.apigateway.Stage` resource instead to manage stages.
        /// </summary>
        [Output("stageName")]
        public Output<string?> StageName { get; private set; } = null!;

        /// <summary>
        /// Map of arbitrary keys and values that, when changed, will trigger a redeployment.
        /// </summary>
        [Output("triggers")]
        public Output<ImmutableDictionary<string, string>?> Triggers { get; private set; } = null!;

        /// <summary>
        /// Map to set on the stage managed by the `stage_name` argument.
        /// </summary>
        [Output("variables")]
        public Output<ImmutableDictionary<string, string>?> Variables { get; private set; } = null!;


        /// <summary>
        /// Create a Deployment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Deployment(string name, DeploymentArgs args, CustomResourceOptions? options = null)
            : base("aws:apigateway/deployment:Deployment", name, args ?? new DeploymentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Deployment(string name, Input<string> id, DeploymentState? state = null, CustomResourceOptions? options = null)
            : base("aws:apigateway/deployment:Deployment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Deployment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Deployment Get(string name, Input<string> id, DeploymentState? state = null, CustomResourceOptions? options = null)
        {
            return new Deployment(name, id, state, options);
        }
    }

    public sealed class DeploymentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description of the deployment
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// REST API identifier.
        /// </summary>
        [Input("restApi", required: true)]
        public Input<string> RestApi { get; set; } = null!;

        /// <summary>
        /// Description to set on the stage managed by the `stage_name` argument.
        /// </summary>
        [Input("stageDescription")]
        public Input<string>? StageDescription { get; set; }

        /// <summary>
        /// Name of the stage to create with this deployment. If the specified stage already exists, it will be updated to point to the new deployment. We recommend using the `aws.apigateway.Stage` resource instead to manage stages.
        /// </summary>
        [Input("stageName")]
        public Input<string>? StageName { get; set; }

        [Input("triggers")]
        private InputMap<string>? _triggers;

        /// <summary>
        /// Map of arbitrary keys and values that, when changed, will trigger a redeployment.
        /// </summary>
        public InputMap<string> Triggers
        {
            get => _triggers ?? (_triggers = new InputMap<string>());
            set => _triggers = value;
        }

        [Input("variables")]
        private InputMap<string>? _variables;

        /// <summary>
        /// Map to set on the stage managed by the `stage_name` argument.
        /// </summary>
        public InputMap<string> Variables
        {
            get => _variables ?? (_variables = new InputMap<string>());
            set => _variables = value;
        }

        public DeploymentArgs()
        {
        }
        public static new DeploymentArgs Empty => new DeploymentArgs();
    }

    public sealed class DeploymentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Creation date of the deployment
        /// </summary>
        [Input("createdDate")]
        public Input<string>? CreatedDate { get; set; }

        /// <summary>
        /// Description of the deployment
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Execution ARN to be used in `lambda_permission`'s `source_arn`
        /// when allowing API Gateway to invoke a Lambda function,
        /// e.g., `arn:aws:execute-api:eu-west-2:123456789012:z4675bid1j/prod`
        /// </summary>
        [Input("executionArn")]
        public Input<string>? ExecutionArn { get; set; }

        /// <summary>
        /// URL to invoke the API pointing to the stage,
        /// e.g., `https://z4675bid1j.execute-api.eu-west-2.amazonaws.com/prod`
        /// </summary>
        [Input("invokeUrl")]
        public Input<string>? InvokeUrl { get; set; }

        /// <summary>
        /// REST API identifier.
        /// </summary>
        [Input("restApi")]
        public Input<string>? RestApi { get; set; }

        /// <summary>
        /// Description to set on the stage managed by the `stage_name` argument.
        /// </summary>
        [Input("stageDescription")]
        public Input<string>? StageDescription { get; set; }

        /// <summary>
        /// Name of the stage to create with this deployment. If the specified stage already exists, it will be updated to point to the new deployment. We recommend using the `aws.apigateway.Stage` resource instead to manage stages.
        /// </summary>
        [Input("stageName")]
        public Input<string>? StageName { get; set; }

        [Input("triggers")]
        private InputMap<string>? _triggers;

        /// <summary>
        /// Map of arbitrary keys and values that, when changed, will trigger a redeployment.
        /// </summary>
        public InputMap<string> Triggers
        {
            get => _triggers ?? (_triggers = new InputMap<string>());
            set => _triggers = value;
        }

        [Input("variables")]
        private InputMap<string>? _variables;

        /// <summary>
        /// Map to set on the stage managed by the `stage_name` argument.
        /// </summary>
        public InputMap<string> Variables
        {
            get => _variables ?? (_variables = new InputMap<string>());
            set => _variables = value;
        }

        public DeploymentState()
        {
        }
        public static new DeploymentState Empty => new DeploymentState();
    }
}
