// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ram
{
    /// <summary>
    /// Manages a Resource Access Manager (RAM) Resource Association.
    /// 
    /// &gt; *NOTE:* Certain AWS resources (e.g. EC2 Subnets) can only be shared in an AWS account that is a member of an AWS Organizations organization with organization-wide Resource Access Manager functionality enabled. See the [Resource Access Manager User Guide](https://docs.aws.amazon.com/ram/latest/userguide/what-is.html) and AWS service specific documentation for additional information.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var example = new Aws.Ram.ResourceAssociation("example", new Aws.Ram.ResourceAssociationArgs
    ///         {
    ///             ResourceArn = aws_subnet.Example.Arn,
    ///             ResourceShareArn = aws_ram_resource_share.Example.Arn,
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// RAM Resource Associations can be imported using their Resource Share ARN and Resource ARN separated by a comma, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import aws:ram/resourceAssociation:ResourceAssociation example arn:aws:ram:eu-west-1:123456789012:resource-share/73da1ab9-b94a-4ba3-8eb4-45917f7f4b12,arn:aws:ec2:eu-west-1:123456789012:subnet/subnet-12345678
    /// ```
    /// </summary>
    public partial class ResourceAssociation : Pulumi.CustomResource
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the resource to associate with the RAM Resource Share.
        /// </summary>
        [Output("resourceArn")]
        public Output<string> ResourceArn { get; private set; } = null!;

        /// <summary>
        /// Amazon Resource Name (ARN) of the RAM Resource Share.
        /// </summary>
        [Output("resourceShareArn")]
        public Output<string> ResourceShareArn { get; private set; } = null!;


        /// <summary>
        /// Create a ResourceAssociation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ResourceAssociation(string name, ResourceAssociationArgs args, CustomResourceOptions? options = null)
            : base("aws:ram/resourceAssociation:ResourceAssociation", name, args ?? new ResourceAssociationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ResourceAssociation(string name, Input<string> id, ResourceAssociationState? state = null, CustomResourceOptions? options = null)
            : base("aws:ram/resourceAssociation:ResourceAssociation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ResourceAssociation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ResourceAssociation Get(string name, Input<string> id, ResourceAssociationState? state = null, CustomResourceOptions? options = null)
        {
            return new ResourceAssociation(name, id, state, options);
        }
    }

    public sealed class ResourceAssociationArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the resource to associate with the RAM Resource Share.
        /// </summary>
        [Input("resourceArn", required: true)]
        public Input<string> ResourceArn { get; set; } = null!;

        /// <summary>
        /// Amazon Resource Name (ARN) of the RAM Resource Share.
        /// </summary>
        [Input("resourceShareArn", required: true)]
        public Input<string> ResourceShareArn { get; set; } = null!;

        public ResourceAssociationArgs()
        {
        }
    }

    public sealed class ResourceAssociationState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the resource to associate with the RAM Resource Share.
        /// </summary>
        [Input("resourceArn")]
        public Input<string>? ResourceArn { get; set; }

        /// <summary>
        /// Amazon Resource Name (ARN) of the RAM Resource Share.
        /// </summary>
        [Input("resourceShareArn")]
        public Input<string>? ResourceShareArn { get; set; }

        public ResourceAssociationState()
        {
        }
    }
}
