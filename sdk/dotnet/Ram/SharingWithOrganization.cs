// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ram
{
    /// <summary>
    /// Manages Resource Access Manager (RAM) Resource Sharing with AWS Organizations. If you enable sharing with your organization, you can share resources without using invitations. Refer to the [AWS RAM user guide](https://docs.aws.amazon.com/ram/latest/userguide/getting-started-sharing.html#getting-started-sharing-orgs) for more details.
    /// 
    /// &gt; **NOTE:** Use this resource to manage resource sharing within your organization, **not** the `aws.organizations.Organization` resource with `ram.amazonaws.com` configured in `aws_service_access_principals`.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Ram.SharingWithOrganization("example");
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// In TODO v1.5.0 and later, use an `import` block to import the resource using the current AWS account ID. For exampleterraform import {
    /// 
    ///  to = aws_ram_sharing_with_organization.example
    /// 
    ///  id = "123456789012" } Using `TODO import`, import the resource using the current AWS account ID. For exampleconsole % TODO import aws_ram_sharing_with_organization.example 123456789012
    /// </summary>
    [AwsResourceType("aws:ram/sharingWithOrganization:SharingWithOrganization")]
    public partial class SharingWithOrganization : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Create a SharingWithOrganization resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SharingWithOrganization(string name, SharingWithOrganizationArgs? args = null, CustomResourceOptions? options = null)
            : base("aws:ram/sharingWithOrganization:SharingWithOrganization", name, args ?? new SharingWithOrganizationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SharingWithOrganization(string name, Input<string> id, SharingWithOrganizationState? state = null, CustomResourceOptions? options = null)
            : base("aws:ram/sharingWithOrganization:SharingWithOrganization", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SharingWithOrganization resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SharingWithOrganization Get(string name, Input<string> id, SharingWithOrganizationState? state = null, CustomResourceOptions? options = null)
        {
            return new SharingWithOrganization(name, id, state, options);
        }
    }

    public sealed class SharingWithOrganizationArgs : global::Pulumi.ResourceArgs
    {
        public SharingWithOrganizationArgs()
        {
        }
        public static new SharingWithOrganizationArgs Empty => new SharingWithOrganizationArgs();
    }

    public sealed class SharingWithOrganizationState : global::Pulumi.ResourceArgs
    {
        public SharingWithOrganizationState()
        {
        }
        public static new SharingWithOrganizationState Empty => new SharingWithOrganizationState();
    }
}
