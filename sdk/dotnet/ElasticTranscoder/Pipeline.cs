// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.ElasticTranscoder
{
    [AwsResourceType("aws:elastictranscoder/pipeline:Pipeline")]
    public partial class Pipeline : global::Pulumi.CustomResource
    {
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("awsKmsKeyArn")]
        public Output<string?> AwsKmsKeyArn { get; private set; } = null!;

        [Output("contentConfig")]
        public Output<Outputs.PipelineContentConfig> ContentConfig { get; private set; } = null!;

        [Output("contentConfigPermissions")]
        public Output<ImmutableArray<Outputs.PipelineContentConfigPermission>> ContentConfigPermissions { get; private set; } = null!;

        [Output("inputBucket")]
        public Output<string> InputBucket { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("notifications")]
        public Output<Outputs.PipelineNotifications?> Notifications { get; private set; } = null!;

        [Output("outputBucket")]
        public Output<string> OutputBucket { get; private set; } = null!;

        [Output("role")]
        public Output<string> Role { get; private set; } = null!;

        [Output("thumbnailConfig")]
        public Output<Outputs.PipelineThumbnailConfig> ThumbnailConfig { get; private set; } = null!;

        [Output("thumbnailConfigPermissions")]
        public Output<ImmutableArray<Outputs.PipelineThumbnailConfigPermission>> ThumbnailConfigPermissions { get; private set; } = null!;


        /// <summary>
        /// Create a Pipeline resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Pipeline(string name, PipelineArgs args, CustomResourceOptions? options = null)
            : base("aws:elastictranscoder/pipeline:Pipeline", name, args ?? new PipelineArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Pipeline(string name, Input<string> id, PipelineState? state = null, CustomResourceOptions? options = null)
            : base("aws:elastictranscoder/pipeline:Pipeline", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Pipeline resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Pipeline Get(string name, Input<string> id, PipelineState? state = null, CustomResourceOptions? options = null)
        {
            return new Pipeline(name, id, state, options);
        }
    }

    public sealed class PipelineArgs : global::Pulumi.ResourceArgs
    {
        [Input("awsKmsKeyArn")]
        public Input<string>? AwsKmsKeyArn { get; set; }

        [Input("contentConfig")]
        public Input<Inputs.PipelineContentConfigArgs>? ContentConfig { get; set; }

        [Input("contentConfigPermissions")]
        private InputList<Inputs.PipelineContentConfigPermissionArgs>? _contentConfigPermissions;
        public InputList<Inputs.PipelineContentConfigPermissionArgs> ContentConfigPermissions
        {
            get => _contentConfigPermissions ?? (_contentConfigPermissions = new InputList<Inputs.PipelineContentConfigPermissionArgs>());
            set => _contentConfigPermissions = value;
        }

        [Input("inputBucket", required: true)]
        public Input<string> InputBucket { get; set; } = null!;

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("notifications")]
        public Input<Inputs.PipelineNotificationsArgs>? Notifications { get; set; }

        [Input("outputBucket")]
        public Input<string>? OutputBucket { get; set; }

        [Input("role", required: true)]
        public Input<string> Role { get; set; } = null!;

        [Input("thumbnailConfig")]
        public Input<Inputs.PipelineThumbnailConfigArgs>? ThumbnailConfig { get; set; }

        [Input("thumbnailConfigPermissions")]
        private InputList<Inputs.PipelineThumbnailConfigPermissionArgs>? _thumbnailConfigPermissions;
        public InputList<Inputs.PipelineThumbnailConfigPermissionArgs> ThumbnailConfigPermissions
        {
            get => _thumbnailConfigPermissions ?? (_thumbnailConfigPermissions = new InputList<Inputs.PipelineThumbnailConfigPermissionArgs>());
            set => _thumbnailConfigPermissions = value;
        }

        public PipelineArgs()
        {
        }
        public static new PipelineArgs Empty => new PipelineArgs();
    }

    public sealed class PipelineState : global::Pulumi.ResourceArgs
    {
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("awsKmsKeyArn")]
        public Input<string>? AwsKmsKeyArn { get; set; }

        [Input("contentConfig")]
        public Input<Inputs.PipelineContentConfigGetArgs>? ContentConfig { get; set; }

        [Input("contentConfigPermissions")]
        private InputList<Inputs.PipelineContentConfigPermissionGetArgs>? _contentConfigPermissions;
        public InputList<Inputs.PipelineContentConfigPermissionGetArgs> ContentConfigPermissions
        {
            get => _contentConfigPermissions ?? (_contentConfigPermissions = new InputList<Inputs.PipelineContentConfigPermissionGetArgs>());
            set => _contentConfigPermissions = value;
        }

        [Input("inputBucket")]
        public Input<string>? InputBucket { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("notifications")]
        public Input<Inputs.PipelineNotificationsGetArgs>? Notifications { get; set; }

        [Input("outputBucket")]
        public Input<string>? OutputBucket { get; set; }

        [Input("role")]
        public Input<string>? Role { get; set; }

        [Input("thumbnailConfig")]
        public Input<Inputs.PipelineThumbnailConfigGetArgs>? ThumbnailConfig { get; set; }

        [Input("thumbnailConfigPermissions")]
        private InputList<Inputs.PipelineThumbnailConfigPermissionGetArgs>? _thumbnailConfigPermissions;
        public InputList<Inputs.PipelineThumbnailConfigPermissionGetArgs> ThumbnailConfigPermissions
        {
            get => _thumbnailConfigPermissions ?? (_thumbnailConfigPermissions = new InputList<Inputs.PipelineThumbnailConfigPermissionGetArgs>());
            set => _thumbnailConfigPermissions = value;
        }

        public PipelineState()
        {
        }
        public static new PipelineState Empty => new PipelineState();
    }
}
