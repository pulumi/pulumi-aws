// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Synthetics.Inputs
{

    public sealed class CanaryRunConfigGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether this canary is to use active AWS X-Ray tracing when it runs. You can enable active tracing only for canaries that use version syn-nodejs-2.0 or later for their canary runtime.
        /// </summary>
        [Input("activeTracing")]
        public Input<bool>? ActiveTracing { get; set; }

        [Input("environmentVariables")]
        private InputMap<string>? _environmentVariables;

        /// <summary>
        /// Map of environment variables that are accessible from the canary during execution. Please see [AWS Docs](https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html#configuration-envvars-runtime) for variables reserved for Lambda.
        /// </summary>
        public InputMap<string> EnvironmentVariables
        {
            get => _environmentVariables ?? (_environmentVariables = new InputMap<string>());
            set => _environmentVariables = value;
        }

        /// <summary>
        /// Maximum amount of memory available to the canary while it is running, in MB. The value you specify must be a multiple of 64.
        /// </summary>
        [Input("memoryInMb")]
        public Input<int>? MemoryInMb { get; set; }

        /// <summary>
        /// Number of seconds the canary is allowed to run before it must stop. If you omit this field, the frequency of the canary is used, up to a maximum of 840 (14 minutes).
        /// </summary>
        [Input("timeoutInSeconds")]
        public Input<int>? TimeoutInSeconds { get; set; }

        public CanaryRunConfigGetArgs()
        {
        }
        public static new CanaryRunConfigGetArgs Empty => new CanaryRunConfigGetArgs();
    }
}
