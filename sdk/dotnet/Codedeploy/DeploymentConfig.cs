// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CodeDeploy
{
    /// <summary>
    /// Provides a CodeDeploy deployment config for an application
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/codedeploy_deployment_config.html.markdown.
    /// </summary>
    public partial class DeploymentConfig : Pulumi.CustomResource
    {
        /// <summary>
        /// The compute platform can be `Server`, `Lambda`, or `ECS`. Default is `Server`.
        /// </summary>
        [Output("computePlatform")]
        public Output<string?> ComputePlatform { get; private set; } = null!;

        /// <summary>
        /// The AWS Assigned deployment config id
        /// </summary>
        [Output("deploymentConfigId")]
        public Output<string> DeploymentConfigId { get; private set; } = null!;

        /// <summary>
        /// The name of the deployment config.
        /// </summary>
        [Output("deploymentConfigName")]
        public Output<string> DeploymentConfigName { get; private set; } = null!;

        /// <summary>
        /// A minimum_healthy_hosts block. Required for `Server` compute platform. Minimum Healthy Hosts are documented below.
        /// </summary>
        [Output("minimumHealthyHosts")]
        public Output<Outputs.DeploymentConfigMinimumHealthyHosts?> MinimumHealthyHosts { get; private set; } = null!;

        /// <summary>
        /// A traffic_routing_config block. Traffic Routing Config is documented below.
        /// </summary>
        [Output("trafficRoutingConfig")]
        public Output<Outputs.DeploymentConfigTrafficRoutingConfig?> TrafficRoutingConfig { get; private set; } = null!;


        /// <summary>
        /// Create a DeploymentConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DeploymentConfig(string name, DeploymentConfigArgs args, CustomResourceOptions? options = null)
            : base("aws:codedeploy/deploymentConfig:DeploymentConfig", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private DeploymentConfig(string name, Input<string> id, DeploymentConfigState? state = null, CustomResourceOptions? options = null)
            : base("aws:codedeploy/deploymentConfig:DeploymentConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DeploymentConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DeploymentConfig Get(string name, Input<string> id, DeploymentConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new DeploymentConfig(name, id, state, options);
        }
    }

    public sealed class DeploymentConfigArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The compute platform can be `Server`, `Lambda`, or `ECS`. Default is `Server`.
        /// </summary>
        [Input("computePlatform")]
        public Input<string>? ComputePlatform { get; set; }

        /// <summary>
        /// The name of the deployment config.
        /// </summary>
        [Input("deploymentConfigName", required: true)]
        public Input<string> DeploymentConfigName { get; set; } = null!;

        /// <summary>
        /// A minimum_healthy_hosts block. Required for `Server` compute platform. Minimum Healthy Hosts are documented below.
        /// </summary>
        [Input("minimumHealthyHosts")]
        public Input<Inputs.DeploymentConfigMinimumHealthyHostsArgs>? MinimumHealthyHosts { get; set; }

        /// <summary>
        /// A traffic_routing_config block. Traffic Routing Config is documented below.
        /// </summary>
        [Input("trafficRoutingConfig")]
        public Input<Inputs.DeploymentConfigTrafficRoutingConfigArgs>? TrafficRoutingConfig { get; set; }

        public DeploymentConfigArgs()
        {
        }
    }

    public sealed class DeploymentConfigState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The compute platform can be `Server`, `Lambda`, or `ECS`. Default is `Server`.
        /// </summary>
        [Input("computePlatform")]
        public Input<string>? ComputePlatform { get; set; }

        /// <summary>
        /// The AWS Assigned deployment config id
        /// </summary>
        [Input("deploymentConfigId")]
        public Input<string>? DeploymentConfigId { get; set; }

        /// <summary>
        /// The name of the deployment config.
        /// </summary>
        [Input("deploymentConfigName")]
        public Input<string>? DeploymentConfigName { get; set; }

        /// <summary>
        /// A minimum_healthy_hosts block. Required for `Server` compute platform. Minimum Healthy Hosts are documented below.
        /// </summary>
        [Input("minimumHealthyHosts")]
        public Input<Inputs.DeploymentConfigMinimumHealthyHostsGetArgs>? MinimumHealthyHosts { get; set; }

        /// <summary>
        /// A traffic_routing_config block. Traffic Routing Config is documented below.
        /// </summary>
        [Input("trafficRoutingConfig")]
        public Input<Inputs.DeploymentConfigTrafficRoutingConfigGetArgs>? TrafficRoutingConfig { get; set; }

        public DeploymentConfigState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class DeploymentConfigMinimumHealthyHostsArgs : Pulumi.ResourceArgs
    {
        [Input("type")]
        public Input<string>? Type { get; set; }

        [Input("value")]
        public Input<int>? Value { get; set; }

        public DeploymentConfigMinimumHealthyHostsArgs()
        {
        }
    }

    public sealed class DeploymentConfigMinimumHealthyHostsGetArgs : Pulumi.ResourceArgs
    {
        [Input("type")]
        public Input<string>? Type { get; set; }

        [Input("value")]
        public Input<int>? Value { get; set; }

        public DeploymentConfigMinimumHealthyHostsGetArgs()
        {
        }
    }

    public sealed class DeploymentConfigTrafficRoutingConfigArgs : Pulumi.ResourceArgs
    {
        [Input("timeBasedCanary")]
        public Input<DeploymentConfigTrafficRoutingConfigTimeBasedCanaryArgs>? TimeBasedCanary { get; set; }

        [Input("timeBasedLinear")]
        public Input<DeploymentConfigTrafficRoutingConfigTimeBasedLinearArgs>? TimeBasedLinear { get; set; }

        [Input("type")]
        public Input<string>? Type { get; set; }

        public DeploymentConfigTrafficRoutingConfigArgs()
        {
        }
    }

    public sealed class DeploymentConfigTrafficRoutingConfigGetArgs : Pulumi.ResourceArgs
    {
        [Input("timeBasedCanary")]
        public Input<DeploymentConfigTrafficRoutingConfigTimeBasedCanaryGetArgs>? TimeBasedCanary { get; set; }

        [Input("timeBasedLinear")]
        public Input<DeploymentConfigTrafficRoutingConfigTimeBasedLinearGetArgs>? TimeBasedLinear { get; set; }

        [Input("type")]
        public Input<string>? Type { get; set; }

        public DeploymentConfigTrafficRoutingConfigGetArgs()
        {
        }
    }

    public sealed class DeploymentConfigTrafficRoutingConfigTimeBasedCanaryArgs : Pulumi.ResourceArgs
    {
        [Input("interval")]
        public Input<int>? Interval { get; set; }

        [Input("percentage")]
        public Input<int>? Percentage { get; set; }

        public DeploymentConfigTrafficRoutingConfigTimeBasedCanaryArgs()
        {
        }
    }

    public sealed class DeploymentConfigTrafficRoutingConfigTimeBasedCanaryGetArgs : Pulumi.ResourceArgs
    {
        [Input("interval")]
        public Input<int>? Interval { get; set; }

        [Input("percentage")]
        public Input<int>? Percentage { get; set; }

        public DeploymentConfigTrafficRoutingConfigTimeBasedCanaryGetArgs()
        {
        }
    }

    public sealed class DeploymentConfigTrafficRoutingConfigTimeBasedLinearArgs : Pulumi.ResourceArgs
    {
        [Input("interval")]
        public Input<int>? Interval { get; set; }

        [Input("percentage")]
        public Input<int>? Percentage { get; set; }

        public DeploymentConfigTrafficRoutingConfigTimeBasedLinearArgs()
        {
        }
    }

    public sealed class DeploymentConfigTrafficRoutingConfigTimeBasedLinearGetArgs : Pulumi.ResourceArgs
    {
        [Input("interval")]
        public Input<int>? Interval { get; set; }

        [Input("percentage")]
        public Input<int>? Percentage { get; set; }

        public DeploymentConfigTrafficRoutingConfigTimeBasedLinearGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class DeploymentConfigMinimumHealthyHosts
    {
        public readonly string? Type;
        public readonly int? Value;

        [OutputConstructor]
        private DeploymentConfigMinimumHealthyHosts(
            string? type,
            int? value)
        {
            Type = type;
            Value = value;
        }
    }

    [OutputType]
    public sealed class DeploymentConfigTrafficRoutingConfig
    {
        public readonly DeploymentConfigTrafficRoutingConfigTimeBasedCanary? TimeBasedCanary;
        public readonly DeploymentConfigTrafficRoutingConfigTimeBasedLinear? TimeBasedLinear;
        public readonly string? Type;

        [OutputConstructor]
        private DeploymentConfigTrafficRoutingConfig(
            DeploymentConfigTrafficRoutingConfigTimeBasedCanary? timeBasedCanary,
            DeploymentConfigTrafficRoutingConfigTimeBasedLinear? timeBasedLinear,
            string? type)
        {
            TimeBasedCanary = timeBasedCanary;
            TimeBasedLinear = timeBasedLinear;
            Type = type;
        }
    }

    [OutputType]
    public sealed class DeploymentConfigTrafficRoutingConfigTimeBasedCanary
    {
        public readonly int? Interval;
        public readonly int? Percentage;

        [OutputConstructor]
        private DeploymentConfigTrafficRoutingConfigTimeBasedCanary(
            int? interval,
            int? percentage)
        {
            Interval = interval;
            Percentage = percentage;
        }
    }

    [OutputType]
    public sealed class DeploymentConfigTrafficRoutingConfigTimeBasedLinear
    {
        public readonly int? Interval;
        public readonly int? Percentage;

        [OutputConstructor]
        private DeploymentConfigTrafficRoutingConfigTimeBasedLinear(
            int? interval,
            int? percentage)
        {
            Interval = interval;
            Percentage = percentage;
        }
    }
    }
}
