// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.WafV2.Outputs
{

    [OutputType]
    public sealed class WebAclRuleStatementRuleGroupReferenceStatementRuleActionOverrideActionToUse
    {
        public readonly Outputs.WebAclRuleStatementRuleGroupReferenceStatementRuleActionOverrideActionToUseAllow? Allow;
        public readonly Outputs.WebAclRuleStatementRuleGroupReferenceStatementRuleActionOverrideActionToUseBlock? Block;
        /// <summary>
        /// Instructs AWS WAF to run a Captcha check against the web request. See `captcha` below for details.
        /// </summary>
        public readonly Outputs.WebAclRuleStatementRuleGroupReferenceStatementRuleActionOverrideActionToUseCaptcha? Captcha;
        /// <summary>
        /// Instructs AWS WAF to run a check against the request to verify that the request is coming from a legitimate client session. See `challenge` below for details.
        /// </summary>
        public readonly Outputs.WebAclRuleStatementRuleGroupReferenceStatementRuleActionOverrideActionToUseChallenge? Challenge;
        public readonly Outputs.WebAclRuleStatementRuleGroupReferenceStatementRuleActionOverrideActionToUseCount? Count;

        [OutputConstructor]
        private WebAclRuleStatementRuleGroupReferenceStatementRuleActionOverrideActionToUse(
            Outputs.WebAclRuleStatementRuleGroupReferenceStatementRuleActionOverrideActionToUseAllow? allow,

            Outputs.WebAclRuleStatementRuleGroupReferenceStatementRuleActionOverrideActionToUseBlock? block,

            Outputs.WebAclRuleStatementRuleGroupReferenceStatementRuleActionOverrideActionToUseCaptcha? captcha,

            Outputs.WebAclRuleStatementRuleGroupReferenceStatementRuleActionOverrideActionToUseChallenge? challenge,

            Outputs.WebAclRuleStatementRuleGroupReferenceStatementRuleActionOverrideActionToUseCount? count)
        {
            Allow = allow;
            Block = block;
            Captcha = captcha;
            Challenge = challenge;
            Count = count;
        }
    }
}
