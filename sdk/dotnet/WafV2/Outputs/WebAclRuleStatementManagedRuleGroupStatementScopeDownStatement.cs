// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.WafV2.Outputs
{

    [OutputType]
    public sealed class WebAclRuleStatementManagedRuleGroupStatementScopeDownStatement
    {
        /// <summary>
        /// Logical rule statement used to combine other rule statements with AND logic. See `AndStatement` below for details.
        /// </summary>
        public readonly Outputs.WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementAndStatement? AndStatement;
        /// <summary>
        /// Rule statement that inspects web traffic based on the Autonomous System Number (ASN) associated with the request's IP address. See `AsnMatchStatement` below for details.
        /// </summary>
        public readonly Outputs.WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementAsnMatchStatement? AsnMatchStatement;
        /// <summary>
        /// Rule statement that defines a string match search for AWS WAF to apply to web requests. See `ByteMatchStatement` below for details.
        /// </summary>
        public readonly Outputs.WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatement? ByteMatchStatement;
        /// <summary>
        /// Rule statement used to identify web requests based on country of origin. See `GeoMatchStatement` below for details.
        /// </summary>
        public readonly Outputs.WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatement? GeoMatchStatement;
        /// <summary>
        /// Rule statement used to detect web requests coming from particular IP addresses or address ranges. See `IpSetReferenceStatement` below for details.
        /// </summary>
        public readonly Outputs.WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatement? IpSetReferenceStatement;
        /// <summary>
        /// Rule statement that defines a string match search against labels that have been added to the web request by rules that have already run in the web ACL. See `LabelMatchStatement` below for details.
        /// </summary>
        public readonly Outputs.WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementLabelMatchStatement? LabelMatchStatement;
        /// <summary>
        /// Logical rule statement used to negate the results of another rule statement. See `NotStatement` below for details.
        /// </summary>
        public readonly Outputs.WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementNotStatement? NotStatement;
        /// <summary>
        /// Logical rule statement used to combine other rule statements with OR logic. See `OrStatement` below for details.
        /// </summary>
        public readonly Outputs.WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOrStatement? OrStatement;
        /// <summary>
        /// Rule statement used to search web request components for a match against a single regular expression. See `RegexMatchStatement` below for details.
        /// </summary>
        public readonly Outputs.WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatement? RegexMatchStatement;
        /// <summary>
        /// Rule statement used to search web request components for matches with regular expressions. See `RegexPatternSetReferenceStatement` below for details.
        /// </summary>
        public readonly Outputs.WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatement? RegexPatternSetReferenceStatement;
        /// <summary>
        /// Rule statement that compares a number of bytes against the size of a request component, using a comparison operator, such as greater than (&gt;) or less than (&lt;). See `SizeConstraintStatement` below for more details.
        /// </summary>
        public readonly Outputs.WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatement? SizeConstraintStatement;
        /// <summary>
        /// An SQL injection match condition identifies the part of web requests, such as the URI or the query string, that you want AWS WAF to inspect. See `SqliMatchStatement` below for details.
        /// </summary>
        public readonly Outputs.WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatement? SqliMatchStatement;
        /// <summary>
        /// Rule statement that defines a cross-site scripting (XSS) match search for AWS WAF to apply to web requests. See `XssMatchStatement` below for details.
        /// </summary>
        public readonly Outputs.WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatement? XssMatchStatement;

        [OutputConstructor]
        private WebAclRuleStatementManagedRuleGroupStatementScopeDownStatement(
            Outputs.WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementAndStatement? andStatement,

            Outputs.WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementAsnMatchStatement? asnMatchStatement,

            Outputs.WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementByteMatchStatement? byteMatchStatement,

            Outputs.WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatement? geoMatchStatement,

            Outputs.WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementIpSetReferenceStatement? ipSetReferenceStatement,

            Outputs.WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementLabelMatchStatement? labelMatchStatement,

            Outputs.WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementNotStatement? notStatement,

            Outputs.WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementOrStatement? orStatement,

            Outputs.WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexMatchStatement? regexMatchStatement,

            Outputs.WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementRegexPatternSetReferenceStatement? regexPatternSetReferenceStatement,

            Outputs.WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSizeConstraintStatement? sizeConstraintStatement,

            Outputs.WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementSqliMatchStatement? sqliMatchStatement,

            Outputs.WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementXssMatchStatement? xssMatchStatement)
        {
            AndStatement = andStatement;
            AsnMatchStatement = asnMatchStatement;
            ByteMatchStatement = byteMatchStatement;
            GeoMatchStatement = geoMatchStatement;
            IpSetReferenceStatement = ipSetReferenceStatement;
            LabelMatchStatement = labelMatchStatement;
            NotStatement = notStatement;
            OrStatement = orStatement;
            RegexMatchStatement = regexMatchStatement;
            RegexPatternSetReferenceStatement = regexPatternSetReferenceStatement;
            SizeConstraintStatement = sizeConstraintStatement;
            SqliMatchStatement = sqliMatchStatement;
            XssMatchStatement = xssMatchStatement;
        }
    }
}
