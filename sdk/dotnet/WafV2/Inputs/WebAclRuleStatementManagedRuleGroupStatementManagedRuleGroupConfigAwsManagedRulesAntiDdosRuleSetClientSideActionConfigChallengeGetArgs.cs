// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.WafV2.Inputs
{

    public sealed class WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAntiDdosRuleSetClientSideActionConfigChallengeGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("exemptUriRegularExpressions")]
        private InputList<Inputs.WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAntiDdosRuleSetClientSideActionConfigChallengeExemptUriRegularExpressionGetArgs>? _exemptUriRegularExpressions;

        /// <summary>
        /// Block for the list of the regular expressions to match against the web request URI, used to identify requests that can't handle a silent browser challenge.
        /// </summary>
        public InputList<Inputs.WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAntiDdosRuleSetClientSideActionConfigChallengeExemptUriRegularExpressionGetArgs> ExemptUriRegularExpressions
        {
            get => _exemptUriRegularExpressions ?? (_exemptUriRegularExpressions = new InputList<Inputs.WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAntiDdosRuleSetClientSideActionConfigChallengeExemptUriRegularExpressionGetArgs>());
            set => _exemptUriRegularExpressions = value;
        }

        /// <summary>
        /// Sensitivity that the rule group rule ChallengeDDoSRequests uses when matching against the DDoS suspicion labeling on a request. Valid values are `LOW`, `MEDIUM` and `HIGH` (Default).
        /// </summary>
        [Input("sensitivity")]
        public Input<string>? Sensitivity { get; set; }

        /// <summary>
        /// Configuration whether to use the `AWSManagedRulesAntiDDoSRuleSet` rules `ChallengeAllDuringEvent` and `ChallengeDDoSRequests` in the rule group evaluation. Valid values are `ENABLED` and `DISABLED`.
        /// </summary>
        [Input("usageOfAction", required: true)]
        public Input<string> UsageOfAction { get; set; } = null!;

        public WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAntiDdosRuleSetClientSideActionConfigChallengeGetArgs()
        {
        }
        public static new WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAntiDdosRuleSetClientSideActionConfigChallengeGetArgs Empty => new WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAntiDdosRuleSetClientSideActionConfigChallengeGetArgs();
    }
}
