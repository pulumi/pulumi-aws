// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.WafV2
{
    /// <summary>
    /// Creates a WAFv2 Web ACL resource.
    /// 
    /// ## Example Usage
    /// 
    /// This resource is based on `aws.wafv2.RuleGroup`, check the documentation of the `aws.wafv2.RuleGroup` resource to see examples of the various available statements.
    /// ### Managed Rule
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var example = new Aws.WafV2.WebAcl("example", new Aws.WafV2.WebAclArgs
    ///         {
    ///             DefaultAction = new Aws.WafV2.Inputs.WebAclDefaultActionArgs
    ///             {
    ///                 Allow = ,
    ///             },
    ///             Description = "Example of a managed rule.",
    ///             Rules = 
    ///             {
    ///                 new Aws.WafV2.Inputs.WebAclRuleArgs
    ///                 {
    ///                     Name = "rule-1",
    ///                     OverrideAction = new Aws.WafV2.Inputs.WebAclRuleOverrideActionArgs
    ///                     {
    ///                         Count = ,
    ///                     },
    ///                     Priority = 1,
    ///                     Statement = new Aws.WafV2.Inputs.WebAclRuleStatementArgs
    ///                     {
    ///                         ManagedRuleGroupStatement = new Aws.WafV2.Inputs.WebAclRuleStatementManagedRuleGroupStatementArgs
    ///                         {
    ///                             ExcludedRule = 
    ///                             {
    ///                                 
    ///                                 {
    ///                                     { "name", "SizeRestrictions_QUERYSTRING" },
    ///                                 },
    ///                                 
    ///                                 {
    ///                                     { "name", "NoUserAgent_HEADER" },
    ///                                 },
    ///                             },
    ///                             Name = "AWSManagedRulesCommonRuleSet",
    ///                             VendorName = "AWS",
    ///                         },
    ///                     },
    ///                     VisibilityConfig = new Aws.WafV2.Inputs.WebAclRuleVisibilityConfigArgs
    ///                     {
    ///                         CloudwatchMetricsEnabled = false,
    ///                         MetricName = "friendly-rule-metric-name",
    ///                         SampledRequestsEnabled = false,
    ///                     },
    ///                 },
    ///             },
    ///             Scope = "REGIONAL",
    ///             Tags = 
    ///             {
    ///                 { "Tag1", "Value1" },
    ///                 { "Tag2", "Value2" },
    ///             },
    ///             VisibilityConfig = new Aws.WafV2.Inputs.WebAclVisibilityConfigArgs
    ///             {
    ///                 CloudwatchMetricsEnabled = false,
    ///                 MetricName = "friendly-metric-name",
    ///                 SampledRequestsEnabled = false,
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// ### Rate Based
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var example = new Aws.WafV2.WebAcl("example", new Aws.WafV2.WebAclArgs
    ///         {
    ///             DefaultAction = new Aws.WafV2.Inputs.WebAclDefaultActionArgs
    ///             {
    ///                 Block = ,
    ///             },
    ///             Description = "Example of a rate based statement.",
    ///             Rules = 
    ///             {
    ///                 new Aws.WafV2.Inputs.WebAclRuleArgs
    ///                 {
    ///                     Action = new Aws.WafV2.Inputs.WebAclRuleActionArgs
    ///                     {
    ///                         Count = ,
    ///                     },
    ///                     Name = "rule-1",
    ///                     Priority = 1,
    ///                     Statement = new Aws.WafV2.Inputs.WebAclRuleStatementArgs
    ///                     {
    ///                         RateBasedStatement = new Aws.WafV2.Inputs.WebAclRuleStatementRateBasedStatementArgs
    ///                         {
    ///                             AggregateKeyType = "IP",
    ///                             Limit = 10000,
    ///                             ScopeDownStatement = new Aws.WafV2.Inputs.WebAclRuleStatementRateBasedStatementScopeDownStatementArgs
    ///                             {
    ///                                 GeoMatchStatement = new Aws.WafV2.Inputs.WebAclRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementArgs
    ///                                 {
    ///                                     CountryCodes = 
    ///                                     {
    ///                                         "US",
    ///                                         "NL",
    ///                                     },
    ///                                 },
    ///                             },
    ///                         },
    ///                     },
    ///                     VisibilityConfig = new Aws.WafV2.Inputs.WebAclRuleVisibilityConfigArgs
    ///                     {
    ///                         CloudwatchMetricsEnabled = false,
    ///                         MetricName = "friendly-rule-metric-name",
    ///                         SampledRequestsEnabled = false,
    ///                     },
    ///                 },
    ///             },
    ///             Scope = "REGIONAL",
    ///             Tags = 
    ///             {
    ///                 { "Tag1", "Value1" },
    ///                 { "Tag2", "Value2" },
    ///             },
    ///             VisibilityConfig = new Aws.WafV2.Inputs.WebAclVisibilityConfigArgs
    ///             {
    ///                 CloudwatchMetricsEnabled = false,
    ///                 MetricName = "friendly-metric-name",
    ///                 SampledRequestsEnabled = false,
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// ### Rule Group Reference
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var example = new Aws.WafV2.RuleGroup("example", new Aws.WafV2.RuleGroupArgs
    ///         {
    ///             Capacity = 10,
    ///             Scope = "REGIONAL",
    ///             Rules = 
    ///             {
    ///                 new Aws.WafV2.Inputs.RuleGroupRuleArgs
    ///                 {
    ///                     Name = "rule-1",
    ///                     Priority = 1,
    ///                     Action = new Aws.WafV2.Inputs.RuleGroupRuleActionArgs
    ///                     {
    ///                         Count = ,
    ///                     },
    ///                     Statement = new Aws.WafV2.Inputs.RuleGroupRuleStatementArgs
    ///                     {
    ///                         GeoMatchStatement = new Aws.WafV2.Inputs.RuleGroupRuleStatementGeoMatchStatementArgs
    ///                         {
    ///                             CountryCodes = 
    ///                             {
    ///                                 "NL",
    ///                             },
    ///                         },
    ///                     },
    ///                     VisibilityConfig = new Aws.WafV2.Inputs.RuleGroupRuleVisibilityConfigArgs
    ///                     {
    ///                         CloudwatchMetricsEnabled = false,
    ///                         MetricName = "friendly-rule-metric-name",
    ///                         SampledRequestsEnabled = false,
    ///                     },
    ///                 },
    ///                 new Aws.WafV2.Inputs.RuleGroupRuleArgs
    ///                 {
    ///                     Name = "rule-to-exclude-a",
    ///                     Priority = 10,
    ///                     Action = new Aws.WafV2.Inputs.RuleGroupRuleActionArgs
    ///                     {
    ///                         Allow = ,
    ///                     },
    ///                     Statement = new Aws.WafV2.Inputs.RuleGroupRuleStatementArgs
    ///                     {
    ///                         GeoMatchStatement = new Aws.WafV2.Inputs.RuleGroupRuleStatementGeoMatchStatementArgs
    ///                         {
    ///                             CountryCodes = 
    ///                             {
    ///                                 "US",
    ///                             },
    ///                         },
    ///                     },
    ///                     VisibilityConfig = new Aws.WafV2.Inputs.RuleGroupRuleVisibilityConfigArgs
    ///                     {
    ///                         CloudwatchMetricsEnabled = false,
    ///                         MetricName = "friendly-rule-metric-name",
    ///                         SampledRequestsEnabled = false,
    ///                     },
    ///                 },
    ///                 new Aws.WafV2.Inputs.RuleGroupRuleArgs
    ///                 {
    ///                     Name = "rule-to-exclude-b",
    ///                     Priority = 15,
    ///                     Action = new Aws.WafV2.Inputs.RuleGroupRuleActionArgs
    ///                     {
    ///                         Allow = ,
    ///                     },
    ///                     Statement = new Aws.WafV2.Inputs.RuleGroupRuleStatementArgs
    ///                     {
    ///                         GeoMatchStatement = new Aws.WafV2.Inputs.RuleGroupRuleStatementGeoMatchStatementArgs
    ///                         {
    ///                             CountryCodes = 
    ///                             {
    ///                                 "GB",
    ///                             },
    ///                         },
    ///                     },
    ///                     VisibilityConfig = new Aws.WafV2.Inputs.RuleGroupRuleVisibilityConfigArgs
    ///                     {
    ///                         CloudwatchMetricsEnabled = false,
    ///                         MetricName = "friendly-rule-metric-name",
    ///                         SampledRequestsEnabled = false,
    ///                     },
    ///                 },
    ///             },
    ///             VisibilityConfig = new Aws.WafV2.Inputs.RuleGroupVisibilityConfigArgs
    ///             {
    ///                 CloudwatchMetricsEnabled = false,
    ///                 MetricName = "friendly-metric-name",
    ///                 SampledRequestsEnabled = false,
    ///             },
    ///         });
    ///         var test = new Aws.WafV2.WebAcl("test", new Aws.WafV2.WebAclArgs
    ///         {
    ///             Scope = "REGIONAL",
    ///             DefaultAction = new Aws.WafV2.Inputs.WebAclDefaultActionArgs
    ///             {
    ///                 Block = ,
    ///             },
    ///             Rules = 
    ///             {
    ///                 new Aws.WafV2.Inputs.WebAclRuleArgs
    ///                 {
    ///                     Name = "rule-1",
    ///                     Priority = 1,
    ///                     OverrideAction = new Aws.WafV2.Inputs.WebAclRuleOverrideActionArgs
    ///                     {
    ///                         Count = ,
    ///                     },
    ///                     Statement = new Aws.WafV2.Inputs.WebAclRuleStatementArgs
    ///                     {
    ///                         RuleGroupReferenceStatement = new Aws.WafV2.Inputs.WebAclRuleStatementRuleGroupReferenceStatementArgs
    ///                         {
    ///                             Arn = example.Arn,
    ///                             ExcludedRules = 
    ///                             {
    ///                                 new Aws.WafV2.Inputs.WebAclRuleStatementRuleGroupReferenceStatementExcludedRuleArgs
    ///                                 {
    ///                                     Name = "rule-to-exclude-b",
    ///                                 },
    ///                                 new Aws.WafV2.Inputs.WebAclRuleStatementRuleGroupReferenceStatementExcludedRuleArgs
    ///                                 {
    ///                                     Name = "rule-to-exclude-a",
    ///                                 },
    ///                             },
    ///                         },
    ///                     },
    ///                     VisibilityConfig = new Aws.WafV2.Inputs.WebAclRuleVisibilityConfigArgs
    ///                     {
    ///                         CloudwatchMetricsEnabled = false,
    ///                         MetricName = "friendly-rule-metric-name",
    ///                         SampledRequestsEnabled = false,
    ///                     },
    ///                 },
    ///             },
    ///             Tags = 
    ///             {
    ///                 { "Tag1", "Value1" },
    ///                 { "Tag2", "Value2" },
    ///             },
    ///             VisibilityConfig = new Aws.WafV2.Inputs.WebAclVisibilityConfigArgs
    ///             {
    ///                 CloudwatchMetricsEnabled = false,
    ///                 MetricName = "friendly-metric-name",
    ///                 SampledRequestsEnabled = false,
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// WAFv2 Web ACLs can be imported using `ID/Name/Scope` e.g.
    /// 
    /// ```sh
    ///  $ pulumi import aws:wafv2/webAcl:WebAcl example a1b2c3d4-d5f6-7777-8888-9999aaaabbbbcccc/example/REGIONAL
    /// ```
    /// </summary>
    public partial class WebAcl : Pulumi.CustomResource
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the IP Set that this statement references.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// The web ACL capacity units (WCUs) currently being used by this web ACL.
        /// </summary>
        [Output("capacity")]
        public Output<int> Capacity { get; private set; } = null!;

        /// <summary>
        /// The action to perform if none of the `rules` contained in the WebACL match. See Default Action below for details.
        /// </summary>
        [Output("defaultAction")]
        public Output<Outputs.WebAclDefaultAction> DefaultAction { get; private set; } = null!;

        /// <summary>
        /// A friendly description of the WebACL.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("lockToken")]
        public Output<string> LockToken { get; private set; } = null!;

        /// <summary>
        /// A friendly name of the WebACL.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The rule blocks used to identify the web requests that you want to `allow`, `block`, or `count`. See Rules below for details.
        /// </summary>
        [Output("rules")]
        public Output<ImmutableArray<Outputs.WebAclRule>> Rules { get; private set; } = null!;

        /// <summary>
        /// Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are `CLOUDFRONT` or `REGIONAL`. To work with CloudFront, you must also specify the region `us-east-1` (N. Virginia) on the AWS provider.
        /// </summary>
        [Output("scope")]
        public Output<string> Scope { get; private set; } = null!;

        /// <summary>
        /// An array of key:value pairs to associate with the resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Defines and enables Amazon CloudWatch metrics and web request sample collection. See Visibility Configuration below for details.
        /// </summary>
        [Output("visibilityConfig")]
        public Output<Outputs.WebAclVisibilityConfig> VisibilityConfig { get; private set; } = null!;


        /// <summary>
        /// Create a WebAcl resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WebAcl(string name, WebAclArgs args, CustomResourceOptions? options = null)
            : base("aws:wafv2/webAcl:WebAcl", name, args ?? new WebAclArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WebAcl(string name, Input<string> id, WebAclState? state = null, CustomResourceOptions? options = null)
            : base("aws:wafv2/webAcl:WebAcl", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WebAcl resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WebAcl Get(string name, Input<string> id, WebAclState? state = null, CustomResourceOptions? options = null)
        {
            return new WebAcl(name, id, state, options);
        }
    }

    public sealed class WebAclArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The action to perform if none of the `rules` contained in the WebACL match. See Default Action below for details.
        /// </summary>
        [Input("defaultAction", required: true)]
        public Input<Inputs.WebAclDefaultActionArgs> DefaultAction { get; set; } = null!;

        /// <summary>
        /// A friendly description of the WebACL.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// A friendly name of the WebACL.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("rules")]
        private InputList<Inputs.WebAclRuleArgs>? _rules;

        /// <summary>
        /// The rule blocks used to identify the web requests that you want to `allow`, `block`, or `count`. See Rules below for details.
        /// </summary>
        public InputList<Inputs.WebAclRuleArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.WebAclRuleArgs>());
            set => _rules = value;
        }

        /// <summary>
        /// Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are `CLOUDFRONT` or `REGIONAL`. To work with CloudFront, you must also specify the region `us-east-1` (N. Virginia) on the AWS provider.
        /// </summary>
        [Input("scope", required: true)]
        public Input<string> Scope { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// An array of key:value pairs to associate with the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Defines and enables Amazon CloudWatch metrics and web request sample collection. See Visibility Configuration below for details.
        /// </summary>
        [Input("visibilityConfig", required: true)]
        public Input<Inputs.WebAclVisibilityConfigArgs> VisibilityConfig { get; set; } = null!;

        public WebAclArgs()
        {
        }
    }

    public sealed class WebAclState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the IP Set that this statement references.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// The web ACL capacity units (WCUs) currently being used by this web ACL.
        /// </summary>
        [Input("capacity")]
        public Input<int>? Capacity { get; set; }

        /// <summary>
        /// The action to perform if none of the `rules` contained in the WebACL match. See Default Action below for details.
        /// </summary>
        [Input("defaultAction")]
        public Input<Inputs.WebAclDefaultActionGetArgs>? DefaultAction { get; set; }

        /// <summary>
        /// A friendly description of the WebACL.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("lockToken")]
        public Input<string>? LockToken { get; set; }

        /// <summary>
        /// A friendly name of the WebACL.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("rules")]
        private InputList<Inputs.WebAclRuleGetArgs>? _rules;

        /// <summary>
        /// The rule blocks used to identify the web requests that you want to `allow`, `block`, or `count`. See Rules below for details.
        /// </summary>
        public InputList<Inputs.WebAclRuleGetArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.WebAclRuleGetArgs>());
            set => _rules = value;
        }

        /// <summary>
        /// Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are `CLOUDFRONT` or `REGIONAL`. To work with CloudFront, you must also specify the region `us-east-1` (N. Virginia) on the AWS provider.
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// An array of key:value pairs to associate with the resource.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Defines and enables Amazon CloudWatch metrics and web request sample collection. See Visibility Configuration below for details.
        /// </summary>
        [Input("visibilityConfig")]
        public Input<Inputs.WebAclVisibilityConfigGetArgs>? VisibilityConfig { get; set; }

        public WebAclState()
        {
        }
    }
}
