// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.WafV2
{
    /// <summary>
    /// Creates a WAFv2 Web ACL Association.
    /// 
    /// &gt; **NOTE on associating a WAFv2 Web ACL with a Cloudfront distribution:** Do not use this resource to associate a WAFv2 Web ACL with a Cloudfront Distribution. The [AWS API call backing this resource](https://docs.aws.amazon.com/waf/latest/APIReference/API_AssociateWebACL.html) notes that you should use the `web_acl_id` property on the `cloudfront_distribution` instead.
    /// 
    /// [1]: https://docs.aws.amazon.com/waf/latest/APIReference/API_AssociateWebACL.html
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Security.Cryptography;
    /// using System.Text;
    /// using System.Text.Json;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// 	private static string ComputeSHA1(string input) {
    /// 		return BitConverter.ToString(
    /// 			SHA1.Create().ComputeHash(Encoding.UTF8.GetBytes(input))
    /// 		).Replace("-","").ToLowerInvariant());
    /// 	}
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var exampleRestApi = new Aws.ApiGateway.RestApi("exampleRestApi", new()
    ///     {
    ///         Body = JsonSerializer.Serialize(new Dictionary&lt;string, object?&gt;
    ///         {
    ///             ["openapi"] = "3.0.1",
    ///             ["info"] = new Dictionary&lt;string, object?&gt;
    ///             {
    ///                 ["title"] = "example",
    ///                 ["version"] = "1.0",
    ///             },
    ///             ["paths"] = new Dictionary&lt;string, object?&gt;
    ///             {
    ///                 ["/path1"] = new Dictionary&lt;string, object?&gt;
    ///                 {
    ///                     ["get"] = new Dictionary&lt;string, object?&gt;
    ///                     {
    ///                         ["x-amazon-apigateway-integration"] = new Dictionary&lt;string, object?&gt;
    ///                         {
    ///                             ["httpMethod"] = "GET",
    ///                             ["payloadFormatVersion"] = "1.0",
    ///                             ["type"] = "HTTP_PROXY",
    ///                             ["uri"] = "https://ip-ranges.amazonaws.com/ip-ranges.json",
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///         }),
    ///     });
    /// 
    ///     var exampleDeployment = new Aws.ApiGateway.Deployment("exampleDeployment", new()
    ///     {
    ///         RestApi = exampleRestApi.Id,
    ///         Triggers = 
    ///         {
    ///             { "redeployment", exampleRestApi.Body.Apply(body =&gt; JsonSerializer.Serialize(body)).Apply(toJSON =&gt; ComputeSHA1(toJSON)) },
    ///         },
    ///     });
    /// 
    ///     var exampleStage = new Aws.ApiGateway.Stage("exampleStage", new()
    ///     {
    ///         Deployment = exampleDeployment.Id,
    ///         RestApi = exampleRestApi.Id,
    ///         StageName = "example",
    ///     });
    /// 
    ///     var exampleWebAcl = new Aws.WafV2.WebAcl("exampleWebAcl", new()
    ///     {
    ///         Scope = "REGIONAL",
    ///         DefaultAction = new Aws.WafV2.Inputs.WebAclDefaultActionArgs
    ///         {
    ///             Allow = null,
    ///         },
    ///         VisibilityConfig = new Aws.WafV2.Inputs.WebAclVisibilityConfigArgs
    ///         {
    ///             CloudwatchMetricsEnabled = false,
    ///             MetricName = "friendly-metric-name",
    ///             SampledRequestsEnabled = false,
    ///         },
    ///     });
    /// 
    ///     var exampleWebAclAssociation = new Aws.WafV2.WebAclAssociation("exampleWebAclAssociation", new()
    ///     {
    ///         ResourceArn = exampleStage.Arn,
    ///         WebAclArn = exampleWebAcl.Arn,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// WAFv2 Web ACL Association can be imported using `WEB_ACL_ARN,RESOURCE_ARN` e.g.,
    /// 
    /// ```sh
    ///  $ pulumi import aws:wafv2/webAclAssociation:WebAclAssociation example arn:aws:wafv2:...7ce849ea,arn:aws:apigateway:...ages/name
    /// ```
    /// </summary>
    [AwsResourceType("aws:wafv2/webAclAssociation:WebAclAssociation")]
    public partial class WebAclAssociation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the resource to associate with the web ACL. This must be an ARN of an Application Load Balancer, an Amazon API Gateway stage, or an Amazon Cognito User Pool.
        /// </summary>
        [Output("resourceArn")]
        public Output<string> ResourceArn { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the Web ACL that you want to associate with the resource.
        /// </summary>
        [Output("webAclArn")]
        public Output<string> WebAclArn { get; private set; } = null!;


        /// <summary>
        /// Create a WebAclAssociation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WebAclAssociation(string name, WebAclAssociationArgs args, CustomResourceOptions? options = null)
            : base("aws:wafv2/webAclAssociation:WebAclAssociation", name, args ?? new WebAclAssociationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WebAclAssociation(string name, Input<string> id, WebAclAssociationState? state = null, CustomResourceOptions? options = null)
            : base("aws:wafv2/webAclAssociation:WebAclAssociation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WebAclAssociation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WebAclAssociation Get(string name, Input<string> id, WebAclAssociationState? state = null, CustomResourceOptions? options = null)
        {
            return new WebAclAssociation(name, id, state, options);
        }
    }

    public sealed class WebAclAssociationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the resource to associate with the web ACL. This must be an ARN of an Application Load Balancer, an Amazon API Gateway stage, or an Amazon Cognito User Pool.
        /// </summary>
        [Input("resourceArn", required: true)]
        public Input<string> ResourceArn { get; set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the Web ACL that you want to associate with the resource.
        /// </summary>
        [Input("webAclArn", required: true)]
        public Input<string> WebAclArn { get; set; } = null!;

        public WebAclAssociationArgs()
        {
        }
        public static new WebAclAssociationArgs Empty => new WebAclAssociationArgs();
    }

    public sealed class WebAclAssociationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the resource to associate with the web ACL. This must be an ARN of an Application Load Balancer, an Amazon API Gateway stage, or an Amazon Cognito User Pool.
        /// </summary>
        [Input("resourceArn")]
        public Input<string>? ResourceArn { get; set; }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the Web ACL that you want to associate with the resource.
        /// </summary>
        [Input("webAclArn")]
        public Input<string>? WebAclArn { get; set; }

        public WebAclAssociationState()
        {
        }
        public static new WebAclAssociationState Empty => new WebAclAssociationState();
    }
}
