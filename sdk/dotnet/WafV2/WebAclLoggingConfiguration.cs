// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.WafV2
{
    /// <summary>
    /// Creates a WAFv2 Web ACL Logging Configuration resource.
    /// 
    /// &gt; **Note:** To start logging from a WAFv2 Web ACL, an Amazon Kinesis Data Firehose (e.g. [`aws.kinesis.FirehoseDeliveryStream` resource](https://www.terraform.io/docs/providers/aws/r/kinesis_firehose_delivery_stream.html) must also be created with a PUT source (not a stream) and in the region that you are operating.
    /// If you are capturing logs for Amazon CloudFront, always create the firehose in US East (N. Virginia).
    /// Be sure to give the data firehose a name that starts with the prefix `aws-waf-logs-`.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var example = new Aws.WafV2.WebAclLoggingConfiguration("example", new Aws.WafV2.WebAclLoggingConfigurationArgs
    ///         {
    ///             LogDestinationConfigs = 
    ///             {
    ///                 aws_kinesis_firehose_delivery_stream.Example.Arn,
    ///             },
    ///             ResourceArn = aws_wafv2_web_acl.Example.Arn,
    ///             RedactedFields = 
    ///             {
    ///                 new Aws.WafV2.Inputs.WebAclLoggingConfigurationRedactedFieldArgs
    ///                 {
    ///                     SingleHeader = new Aws.WafV2.Inputs.WebAclLoggingConfigurationRedactedFieldSingleHeaderArgs
    ///                     {
    ///                         Name = "user-agent",
    ///                     },
    ///                 },
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// WAFv2 Web ACL Logging Configurations can be imported using the WAFv2 Web ACL ARN e.g.
    /// 
    /// ```sh
    ///  $ pulumi import aws:wafv2/webAclLoggingConfiguration:WebAclLoggingConfiguration example arn:aws:wafv2:us-west-2:123456789012:regional/webacl/test-logs/a1b2c3d4-5678-90ab-cdef
    /// ```
    /// </summary>
    public partial class WebAclLoggingConfiguration : Pulumi.CustomResource
    {
        /// <summary>
        /// The Amazon Kinesis Data Firehose Amazon Resource Name (ARNs) that you want to associate with the web ACL. Currently, only 1 ARN is supported.
        /// </summary>
        [Output("logDestinationConfigs")]
        public Output<ImmutableArray<string>> LogDestinationConfigs { get; private set; } = null!;

        /// <summary>
        /// The parts of the request that you want to keep out of the logs. Up to 100 `redacted_fields` blocks are supported.
        /// </summary>
        [Output("redactedFields")]
        public Output<ImmutableArray<Outputs.WebAclLoggingConfigurationRedactedField>> RedactedFields { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the web ACL that you want to associate with `log_destination_configs`.
        /// </summary>
        [Output("resourceArn")]
        public Output<string> ResourceArn { get; private set; } = null!;


        /// <summary>
        /// Create a WebAclLoggingConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WebAclLoggingConfiguration(string name, WebAclLoggingConfigurationArgs args, CustomResourceOptions? options = null)
            : base("aws:wafv2/webAclLoggingConfiguration:WebAclLoggingConfiguration", name, args ?? new WebAclLoggingConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WebAclLoggingConfiguration(string name, Input<string> id, WebAclLoggingConfigurationState? state = null, CustomResourceOptions? options = null)
            : base("aws:wafv2/webAclLoggingConfiguration:WebAclLoggingConfiguration", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WebAclLoggingConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WebAclLoggingConfiguration Get(string name, Input<string> id, WebAclLoggingConfigurationState? state = null, CustomResourceOptions? options = null)
        {
            return new WebAclLoggingConfiguration(name, id, state, options);
        }
    }

    public sealed class WebAclLoggingConfigurationArgs : Pulumi.ResourceArgs
    {
        [Input("logDestinationConfigs", required: true)]
        private InputList<string>? _logDestinationConfigs;

        /// <summary>
        /// The Amazon Kinesis Data Firehose Amazon Resource Name (ARNs) that you want to associate with the web ACL. Currently, only 1 ARN is supported.
        /// </summary>
        public InputList<string> LogDestinationConfigs
        {
            get => _logDestinationConfigs ?? (_logDestinationConfigs = new InputList<string>());
            set => _logDestinationConfigs = value;
        }

        [Input("redactedFields")]
        private InputList<Inputs.WebAclLoggingConfigurationRedactedFieldArgs>? _redactedFields;

        /// <summary>
        /// The parts of the request that you want to keep out of the logs. Up to 100 `redacted_fields` blocks are supported.
        /// </summary>
        public InputList<Inputs.WebAclLoggingConfigurationRedactedFieldArgs> RedactedFields
        {
            get => _redactedFields ?? (_redactedFields = new InputList<Inputs.WebAclLoggingConfigurationRedactedFieldArgs>());
            set => _redactedFields = value;
        }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the web ACL that you want to associate with `log_destination_configs`.
        /// </summary>
        [Input("resourceArn", required: true)]
        public Input<string> ResourceArn { get; set; } = null!;

        public WebAclLoggingConfigurationArgs()
        {
        }
    }

    public sealed class WebAclLoggingConfigurationState : Pulumi.ResourceArgs
    {
        [Input("logDestinationConfigs")]
        private InputList<string>? _logDestinationConfigs;

        /// <summary>
        /// The Amazon Kinesis Data Firehose Amazon Resource Name (ARNs) that you want to associate with the web ACL. Currently, only 1 ARN is supported.
        /// </summary>
        public InputList<string> LogDestinationConfigs
        {
            get => _logDestinationConfigs ?? (_logDestinationConfigs = new InputList<string>());
            set => _logDestinationConfigs = value;
        }

        [Input("redactedFields")]
        private InputList<Inputs.WebAclLoggingConfigurationRedactedFieldGetArgs>? _redactedFields;

        /// <summary>
        /// The parts of the request that you want to keep out of the logs. Up to 100 `redacted_fields` blocks are supported.
        /// </summary>
        public InputList<Inputs.WebAclLoggingConfigurationRedactedFieldGetArgs> RedactedFields
        {
            get => _redactedFields ?? (_redactedFields = new InputList<Inputs.WebAclLoggingConfigurationRedactedFieldGetArgs>());
            set => _redactedFields = value;
        }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the web ACL that you want to associate with `log_destination_configs`.
        /// </summary>
        [Input("resourceArn")]
        public Input<string>? ResourceArn { get; set; }

        public WebAclLoggingConfigurationState()
        {
        }
    }
}
