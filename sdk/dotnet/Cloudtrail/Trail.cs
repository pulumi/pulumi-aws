// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CloudTrail
{
    /// <summary>
    /// Provides a CloudTrail resource.
    /// 
    /// &gt; *NOTE:* For a multi-region trail, this resource must be in the home region of the trail.
    /// 
    /// &gt; *NOTE:* For an organization trail, this resource must be in the master account of the organization.
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/cloudtrail.html.markdown.
    /// </summary>
    public partial class Trail : Pulumi.CustomResource
    {
        /// <summary>
        /// The Amazon Resource Name of the trail.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// Specifies a log group name using an Amazon Resource Name (ARN),
        /// that represents the log group to which CloudTrail logs will be delivered.
        /// </summary>
        [Output("cloudWatchLogsGroupArn")]
        public Output<string?> CloudWatchLogsGroupArn { get; private set; } = null!;

        /// <summary>
        /// Specifies the role for the CloudWatch Logs
        /// endpoint to assume to write to a user’s log group.
        /// </summary>
        [Output("cloudWatchLogsRoleArn")]
        public Output<string?> CloudWatchLogsRoleArn { get; private set; } = null!;

        /// <summary>
        /// Specifies whether log file integrity validation is enabled.
        /// Defaults to `false`.
        /// </summary>
        [Output("enableLogFileValidation")]
        public Output<bool?> EnableLogFileValidation { get; private set; } = null!;

        /// <summary>
        /// Enables logging for the trail. Defaults to `true`.
        /// Setting this to `false` will pause logging.
        /// </summary>
        [Output("enableLogging")]
        public Output<bool?> EnableLogging { get; private set; } = null!;

        /// <summary>
        /// Specifies an event selector for enabling data event logging. Fields documented below. Please note the [CloudTrail limits](https://docs.aws.amazon.com/awscloudtrail/latest/userguide/WhatIsCloudTrail-Limits.html) when configuring these.
        /// </summary>
        [Output("eventSelectors")]
        public Output<ImmutableArray<Outputs.TrailEventSelectors>> EventSelectors { get; private set; } = null!;

        /// <summary>
        /// The region in which the trail was created.
        /// </summary>
        [Output("homeRegion")]
        public Output<string> HomeRegion { get; private set; } = null!;

        /// <summary>
        /// Specifies whether the trail is publishing events
        /// from global services such as IAM to the log files. Defaults to `true`.
        /// </summary>
        [Output("includeGlobalServiceEvents")]
        public Output<bool?> IncludeGlobalServiceEvents { get; private set; } = null!;

        /// <summary>
        /// Specifies whether the trail is created in the current
        /// region or in all regions. Defaults to `false`.
        /// </summary>
        [Output("isMultiRegionTrail")]
        public Output<bool?> IsMultiRegionTrail { get; private set; } = null!;

        /// <summary>
        /// Specifies whether the trail is an AWS Organizations trail. Organization trails log events for the master account and all member accounts. Can only be created in the organization master account. Defaults to `false`.
        /// </summary>
        [Output("isOrganizationTrail")]
        public Output<bool?> IsOrganizationTrail { get; private set; } = null!;

        /// <summary>
        /// Specifies the KMS key ARN to use to encrypt the logs delivered by CloudTrail.
        /// </summary>
        [Output("kmsKeyId")]
        public Output<string?> KmsKeyId { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the trail.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the S3 bucket designated for publishing log files.
        /// </summary>
        [Output("s3BucketName")]
        public Output<string> S3BucketName { get; private set; } = null!;

        /// <summary>
        /// Specifies the S3 key prefix that follows
        /// the name of the bucket you have designated for log file delivery.
        /// </summary>
        [Output("s3KeyPrefix")]
        public Output<string?> S3KeyPrefix { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the Amazon SNS topic
        /// defined for notification of log file delivery.
        /// </summary>
        [Output("snsTopicName")]
        public Output<string?> SnsTopicName { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags to assign to the trail
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, object>?> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a Trail resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Trail(string name, TrailArgs args, CustomResourceOptions? options = null)
            : base("aws:cloudtrail/trail:Trail", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private Trail(string name, Input<string> id, TrailState? state = null, CustomResourceOptions? options = null)
            : base("aws:cloudtrail/trail:Trail", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Trail resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Trail Get(string name, Input<string> id, TrailState? state = null, CustomResourceOptions? options = null)
        {
            return new Trail(name, id, state, options);
        }
    }

    public sealed class TrailArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies a log group name using an Amazon Resource Name (ARN),
        /// that represents the log group to which CloudTrail logs will be delivered.
        /// </summary>
        [Input("cloudWatchLogsGroupArn")]
        public Input<string>? CloudWatchLogsGroupArn { get; set; }

        /// <summary>
        /// Specifies the role for the CloudWatch Logs
        /// endpoint to assume to write to a user’s log group.
        /// </summary>
        [Input("cloudWatchLogsRoleArn")]
        public Input<string>? CloudWatchLogsRoleArn { get; set; }

        /// <summary>
        /// Specifies whether log file integrity validation is enabled.
        /// Defaults to `false`.
        /// </summary>
        [Input("enableLogFileValidation")]
        public Input<bool>? EnableLogFileValidation { get; set; }

        /// <summary>
        /// Enables logging for the trail. Defaults to `true`.
        /// Setting this to `false` will pause logging.
        /// </summary>
        [Input("enableLogging")]
        public Input<bool>? EnableLogging { get; set; }

        [Input("eventSelectors")]
        private InputList<Inputs.TrailEventSelectorsArgs>? _eventSelectors;

        /// <summary>
        /// Specifies an event selector for enabling data event logging. Fields documented below. Please note the [CloudTrail limits](https://docs.aws.amazon.com/awscloudtrail/latest/userguide/WhatIsCloudTrail-Limits.html) when configuring these.
        /// </summary>
        public InputList<Inputs.TrailEventSelectorsArgs> EventSelectors
        {
            get => _eventSelectors ?? (_eventSelectors = new InputList<Inputs.TrailEventSelectorsArgs>());
            set => _eventSelectors = value;
        }

        /// <summary>
        /// Specifies whether the trail is publishing events
        /// from global services such as IAM to the log files. Defaults to `true`.
        /// </summary>
        [Input("includeGlobalServiceEvents")]
        public Input<bool>? IncludeGlobalServiceEvents { get; set; }

        /// <summary>
        /// Specifies whether the trail is created in the current
        /// region or in all regions. Defaults to `false`.
        /// </summary>
        [Input("isMultiRegionTrail")]
        public Input<bool>? IsMultiRegionTrail { get; set; }

        /// <summary>
        /// Specifies whether the trail is an AWS Organizations trail. Organization trails log events for the master account and all member accounts. Can only be created in the organization master account. Defaults to `false`.
        /// </summary>
        [Input("isOrganizationTrail")]
        public Input<bool>? IsOrganizationTrail { get; set; }

        /// <summary>
        /// Specifies the KMS key ARN to use to encrypt the logs delivered by CloudTrail.
        /// </summary>
        [Input("kmsKeyId")]
        public Input<string>? KmsKeyId { get; set; }

        /// <summary>
        /// Specifies the name of the trail.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies the name of the S3 bucket designated for publishing log files.
        /// </summary>
        [Input("s3BucketName", required: true)]
        public Input<string> S3BucketName { get; set; } = null!;

        /// <summary>
        /// Specifies the S3 key prefix that follows
        /// the name of the bucket you have designated for log file delivery.
        /// </summary>
        [Input("s3KeyPrefix")]
        public Input<string>? S3KeyPrefix { get; set; }

        /// <summary>
        /// Specifies the name of the Amazon SNS topic
        /// defined for notification of log file delivery.
        /// </summary>
        [Input("snsTopicName")]
        public Input<string>? SnsTopicName { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the trail
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        public TrailArgs()
        {
        }
    }

    public sealed class TrailState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Amazon Resource Name of the trail.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// Specifies a log group name using an Amazon Resource Name (ARN),
        /// that represents the log group to which CloudTrail logs will be delivered.
        /// </summary>
        [Input("cloudWatchLogsGroupArn")]
        public Input<string>? CloudWatchLogsGroupArn { get; set; }

        /// <summary>
        /// Specifies the role for the CloudWatch Logs
        /// endpoint to assume to write to a user’s log group.
        /// </summary>
        [Input("cloudWatchLogsRoleArn")]
        public Input<string>? CloudWatchLogsRoleArn { get; set; }

        /// <summary>
        /// Specifies whether log file integrity validation is enabled.
        /// Defaults to `false`.
        /// </summary>
        [Input("enableLogFileValidation")]
        public Input<bool>? EnableLogFileValidation { get; set; }

        /// <summary>
        /// Enables logging for the trail. Defaults to `true`.
        /// Setting this to `false` will pause logging.
        /// </summary>
        [Input("enableLogging")]
        public Input<bool>? EnableLogging { get; set; }

        [Input("eventSelectors")]
        private InputList<Inputs.TrailEventSelectorsGetArgs>? _eventSelectors;

        /// <summary>
        /// Specifies an event selector for enabling data event logging. Fields documented below. Please note the [CloudTrail limits](https://docs.aws.amazon.com/awscloudtrail/latest/userguide/WhatIsCloudTrail-Limits.html) when configuring these.
        /// </summary>
        public InputList<Inputs.TrailEventSelectorsGetArgs> EventSelectors
        {
            get => _eventSelectors ?? (_eventSelectors = new InputList<Inputs.TrailEventSelectorsGetArgs>());
            set => _eventSelectors = value;
        }

        /// <summary>
        /// The region in which the trail was created.
        /// </summary>
        [Input("homeRegion")]
        public Input<string>? HomeRegion { get; set; }

        /// <summary>
        /// Specifies whether the trail is publishing events
        /// from global services such as IAM to the log files. Defaults to `true`.
        /// </summary>
        [Input("includeGlobalServiceEvents")]
        public Input<bool>? IncludeGlobalServiceEvents { get; set; }

        /// <summary>
        /// Specifies whether the trail is created in the current
        /// region or in all regions. Defaults to `false`.
        /// </summary>
        [Input("isMultiRegionTrail")]
        public Input<bool>? IsMultiRegionTrail { get; set; }

        /// <summary>
        /// Specifies whether the trail is an AWS Organizations trail. Organization trails log events for the master account and all member accounts. Can only be created in the organization master account. Defaults to `false`.
        /// </summary>
        [Input("isOrganizationTrail")]
        public Input<bool>? IsOrganizationTrail { get; set; }

        /// <summary>
        /// Specifies the KMS key ARN to use to encrypt the logs delivered by CloudTrail.
        /// </summary>
        [Input("kmsKeyId")]
        public Input<string>? KmsKeyId { get; set; }

        /// <summary>
        /// Specifies the name of the trail.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Specifies the name of the S3 bucket designated for publishing log files.
        /// </summary>
        [Input("s3BucketName")]
        public Input<string>? S3BucketName { get; set; }

        /// <summary>
        /// Specifies the S3 key prefix that follows
        /// the name of the bucket you have designated for log file delivery.
        /// </summary>
        [Input("s3KeyPrefix")]
        public Input<string>? S3KeyPrefix { get; set; }

        /// <summary>
        /// Specifies the name of the Amazon SNS topic
        /// defined for notification of log file delivery.
        /// </summary>
        [Input("snsTopicName")]
        public Input<string>? SnsTopicName { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the trail
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        public TrailState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class TrailEventSelectorsArgs : Pulumi.ResourceArgs
    {
        [Input("dataResources")]
        private InputList<TrailEventSelectorsDataResourcesArgs>? _dataResources;

        /// <summary>
        /// Specifies logging data events. Fields documented below.
        /// </summary>
        public InputList<TrailEventSelectorsDataResourcesArgs> DataResources
        {
            get => _dataResources ?? (_dataResources = new InputList<TrailEventSelectorsDataResourcesArgs>());
            set => _dataResources = value;
        }

        /// <summary>
        /// Specify if you want your event selector to include management events for your trail.
        /// </summary>
        [Input("includeManagementEvents")]
        public Input<bool>? IncludeManagementEvents { get; set; }

        /// <summary>
        /// Specify if you want your trail to log read-only events, write-only events, or all. By default, the value is All. You can specify only the following value: "ReadOnly", "WriteOnly", "All". Defaults to `All`.
        /// </summary>
        [Input("readWriteType")]
        public Input<string>? ReadWriteType { get; set; }

        public TrailEventSelectorsArgs()
        {
        }
    }

    public sealed class TrailEventSelectorsDataResourcesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The resource type in which you want to log data events. You can specify only the following value: "AWS::S3::Object", "AWS::Lambda::Function"
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        [Input("values", required: true)]
        private InputList<string>? _values;

        /// <summary>
        /// A list of ARN for the specified S3 buckets and object prefixes..
        /// </summary>
        public InputList<string> Values
        {
            get => _values ?? (_values = new InputList<string>());
            set => _values = value;
        }

        public TrailEventSelectorsDataResourcesArgs()
        {
        }
    }

    public sealed class TrailEventSelectorsDataResourcesGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The resource type in which you want to log data events. You can specify only the following value: "AWS::S3::Object", "AWS::Lambda::Function"
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        [Input("values", required: true)]
        private InputList<string>? _values;

        /// <summary>
        /// A list of ARN for the specified S3 buckets and object prefixes..
        /// </summary>
        public InputList<string> Values
        {
            get => _values ?? (_values = new InputList<string>());
            set => _values = value;
        }

        public TrailEventSelectorsDataResourcesGetArgs()
        {
        }
    }

    public sealed class TrailEventSelectorsGetArgs : Pulumi.ResourceArgs
    {
        [Input("dataResources")]
        private InputList<TrailEventSelectorsDataResourcesGetArgs>? _dataResources;

        /// <summary>
        /// Specifies logging data events. Fields documented below.
        /// </summary>
        public InputList<TrailEventSelectorsDataResourcesGetArgs> DataResources
        {
            get => _dataResources ?? (_dataResources = new InputList<TrailEventSelectorsDataResourcesGetArgs>());
            set => _dataResources = value;
        }

        /// <summary>
        /// Specify if you want your event selector to include management events for your trail.
        /// </summary>
        [Input("includeManagementEvents")]
        public Input<bool>? IncludeManagementEvents { get; set; }

        /// <summary>
        /// Specify if you want your trail to log read-only events, write-only events, or all. By default, the value is All. You can specify only the following value: "ReadOnly", "WriteOnly", "All". Defaults to `All`.
        /// </summary>
        [Input("readWriteType")]
        public Input<string>? ReadWriteType { get; set; }

        public TrailEventSelectorsGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class TrailEventSelectors
    {
        /// <summary>
        /// Specifies logging data events. Fields documented below.
        /// </summary>
        public readonly ImmutableArray<TrailEventSelectorsDataResources> DataResources;
        /// <summary>
        /// Specify if you want your event selector to include management events for your trail.
        /// </summary>
        public readonly bool? IncludeManagementEvents;
        /// <summary>
        /// Specify if you want your trail to log read-only events, write-only events, or all. By default, the value is All. You can specify only the following value: "ReadOnly", "WriteOnly", "All". Defaults to `All`.
        /// </summary>
        public readonly string? ReadWriteType;

        [OutputConstructor]
        private TrailEventSelectors(
            ImmutableArray<TrailEventSelectorsDataResources> dataResources,
            bool? includeManagementEvents,
            string? readWriteType)
        {
            DataResources = dataResources;
            IncludeManagementEvents = includeManagementEvents;
            ReadWriteType = readWriteType;
        }
    }

    [OutputType]
    public sealed class TrailEventSelectorsDataResources
    {
        /// <summary>
        /// The resource type in which you want to log data events. You can specify only the following value: "AWS::S3::Object", "AWS::Lambda::Function"
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// A list of ARN for the specified S3 buckets and object prefixes..
        /// </summary>
        public readonly ImmutableArray<string> Values;

        [OutputConstructor]
        private TrailEventSelectorsDataResources(
            string type,
            ImmutableArray<string> values)
        {
            Type = type;
            Values = values;
        }
    }
    }
}
