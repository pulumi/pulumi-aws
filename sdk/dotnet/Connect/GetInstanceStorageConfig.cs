// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Connect
{
    public static class GetInstanceStorageConfig
    {
        public static Task<GetInstanceStorageConfigResult> InvokeAsync(GetInstanceStorageConfigArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInstanceStorageConfigResult>("aws:connect/getInstanceStorageConfig:getInstanceStorageConfig", args ?? new GetInstanceStorageConfigArgs(), options.WithDefaults());

        public static Output<GetInstanceStorageConfigResult> Invoke(GetInstanceStorageConfigInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInstanceStorageConfigResult>("aws:connect/getInstanceStorageConfig:getInstanceStorageConfig", args ?? new GetInstanceStorageConfigInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInstanceStorageConfigArgs : global::Pulumi.InvokeArgs
    {
        [Input("associationId", required: true)]
        public string AssociationId { get; set; } = null!;

        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        [Input("resourceType", required: true)]
        public string ResourceType { get; set; } = null!;

        public GetInstanceStorageConfigArgs()
        {
        }
        public static new GetInstanceStorageConfigArgs Empty => new GetInstanceStorageConfigArgs();
    }

    public sealed class GetInstanceStorageConfigInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("associationId", required: true)]
        public Input<string> AssociationId { get; set; } = null!;

        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        [Input("resourceType", required: true)]
        public Input<string> ResourceType { get; set; } = null!;

        public GetInstanceStorageConfigInvokeArgs()
        {
        }
        public static new GetInstanceStorageConfigInvokeArgs Empty => new GetInstanceStorageConfigInvokeArgs();
    }


    [OutputType]
    public sealed class GetInstanceStorageConfigResult
    {
        public readonly string AssociationId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string InstanceId;
        public readonly string ResourceType;
        public readonly ImmutableArray<Outputs.GetInstanceStorageConfigStorageConfigResult> StorageConfigs;

        [OutputConstructor]
        private GetInstanceStorageConfigResult(
            string associationId,

            string id,

            string instanceId,

            string resourceType,

            ImmutableArray<Outputs.GetInstanceStorageConfigStorageConfigResult> storageConfigs)
        {
            AssociationId = associationId;
            Id = id;
            InstanceId = instanceId;
            ResourceType = resourceType;
            StorageConfigs = storageConfigs;
        }
    }
}
