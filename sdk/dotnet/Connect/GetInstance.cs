// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Connect
{
    public static class GetInstance
    {
        /// <summary>
        /// Provides details about a specific Amazon Connect Instance.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// By instance_alias
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var foo = Output.Create(Aws.Connect.GetInstance.InvokeAsync(new Aws.Connect.GetInstanceArgs
        ///         {
        ///             InstanceAlias = "foo",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// 
        /// By instance_id
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var foo = Output.Create(Aws.Connect.GetInstance.InvokeAsync(new Aws.Connect.GetInstanceArgs
        ///         {
        ///             InstanceId = "97afc98d-101a-ba98-ab97-ae114fc115ec",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetInstanceResult> InvokeAsync(GetInstanceArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetInstanceResult>("aws:connect/getInstance:getInstance", args ?? new GetInstanceArgs(), options.WithVersion());
    }


    public sealed class GetInstanceArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Returns information on a specific connect instance by alias
        /// </summary>
        [Input("instanceAlias")]
        public string? InstanceAlias { get; set; }

        /// <summary>
        /// Returns information on a specific connect instance by id
        /// </summary>
        [Input("instanceId")]
        public string? InstanceId { get; set; }

        public GetInstanceArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetInstanceResult
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the instance.
        /// </summary>
        public readonly string Arn;
        public readonly bool AutoResolveBestVoicesEnabled;
        /// <summary>
        /// Specifies Whether contact flow logs are enabled.
        /// </summary>
        public readonly bool ContactFlowLogsEnabled;
        /// <summary>
        /// Specifies Whether contact lens is enabled.
        /// </summary>
        public readonly bool ContactLensEnabled;
        /// <summary>
        /// Specifies When the instance was created.
        /// </summary>
        public readonly string CreatedTime;
        /// <summary>
        /// Specifies Whether early media for outbound calls is enabled .
        /// </summary>
        public readonly bool EarlyMediaEnabled;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Specifies The identity management type attached to the instance.
        /// </summary>
        public readonly string IdentityManagementType;
        /// <summary>
        /// Specifies Whether inbound calls are enabled.
        /// </summary>
        public readonly bool InboundCallsEnabled;
        public readonly string InstanceAlias;
        public readonly string InstanceId;
        /// <summary>
        /// Specifies Whether outbound calls are enabled.
        /// </summary>
        public readonly bool OutboundCallsEnabled;
        /// <summary>
        /// The service role of the instance.
        /// </summary>
        public readonly string ServiceRole;
        /// <summary>
        /// Specifies The state of the instance.
        /// </summary>
        public readonly string Status;

        [OutputConstructor]
        private GetInstanceResult(
            string arn,

            bool autoResolveBestVoicesEnabled,

            bool contactFlowLogsEnabled,

            bool contactLensEnabled,

            string createdTime,

            bool earlyMediaEnabled,

            string id,

            string identityManagementType,

            bool inboundCallsEnabled,

            string instanceAlias,

            string instanceId,

            bool outboundCallsEnabled,

            string serviceRole,

            string status)
        {
            Arn = arn;
            AutoResolveBestVoicesEnabled = autoResolveBestVoicesEnabled;
            ContactFlowLogsEnabled = contactFlowLogsEnabled;
            ContactLensEnabled = contactLensEnabled;
            CreatedTime = createdTime;
            EarlyMediaEnabled = earlyMediaEnabled;
            Id = id;
            IdentityManagementType = identityManagementType;
            InboundCallsEnabled = inboundCallsEnabled;
            InstanceAlias = instanceAlias;
            InstanceId = instanceId;
            OutboundCallsEnabled = outboundCallsEnabled;
            ServiceRole = serviceRole;
            Status = status;
        }
    }
}
