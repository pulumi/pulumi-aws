// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Connect
{
    public static class GetUserHierarchyGroup
    {
        public static Task<GetUserHierarchyGroupResult> InvokeAsync(GetUserHierarchyGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetUserHierarchyGroupResult>("aws:connect/getUserHierarchyGroup:getUserHierarchyGroup", args ?? new GetUserHierarchyGroupArgs(), options.WithDefaults());

        public static Output<GetUserHierarchyGroupResult> Invoke(GetUserHierarchyGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetUserHierarchyGroupResult>("aws:connect/getUserHierarchyGroup:getUserHierarchyGroup", args ?? new GetUserHierarchyGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetUserHierarchyGroupArgs : global::Pulumi.InvokeArgs
    {
        [Input("hierarchyGroupId")]
        public string? HierarchyGroupId { get; set; }

        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        [Input("name")]
        public string? Name { get; set; }

        [Input("tags")]
        private Dictionary<string, string>? _tags;
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetUserHierarchyGroupArgs()
        {
        }
        public static new GetUserHierarchyGroupArgs Empty => new GetUserHierarchyGroupArgs();
    }

    public sealed class GetUserHierarchyGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("hierarchyGroupId")]
        public Input<string>? HierarchyGroupId { get; set; }

        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetUserHierarchyGroupInvokeArgs()
        {
        }
        public static new GetUserHierarchyGroupInvokeArgs Empty => new GetUserHierarchyGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetUserHierarchyGroupResult
    {
        public readonly string Arn;
        public readonly string HierarchyGroupId;
        public readonly ImmutableArray<Outputs.GetUserHierarchyGroupHierarchyPathResult> HierarchyPaths;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string InstanceId;
        public readonly string LevelId;
        public readonly string Name;
        public readonly ImmutableDictionary<string, string> Tags;

        [OutputConstructor]
        private GetUserHierarchyGroupResult(
            string arn,

            string hierarchyGroupId,

            ImmutableArray<Outputs.GetUserHierarchyGroupHierarchyPathResult> hierarchyPaths,

            string id,

            string instanceId,

            string levelId,

            string name,

            ImmutableDictionary<string, string> tags)
        {
            Arn = arn;
            HierarchyGroupId = hierarchyGroupId;
            HierarchyPaths = hierarchyPaths;
            Id = id;
            InstanceId = instanceId;
            LevelId = levelId;
            Name = name;
            Tags = tags;
        }
    }
}
