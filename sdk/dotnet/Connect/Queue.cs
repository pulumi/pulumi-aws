// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Connect
{
    /// <summary>
    /// Provides an Amazon Connect Queue resource. For more information see
    /// [Amazon Connect: Getting Started](https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-get-started.html)
    /// 
    /// &gt; **NOTE:** Due to The behaviour of Amazon Connect you cannot delete queues.
    /// 
    /// ## Example Usage
    /// ### Basic
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var test = new Aws.Connect.Queue("test", new Aws.Connect.QueueArgs
    ///         {
    ///             Description = "Example Description",
    ///             HoursOfOperationId = "12345678-1234-1234-1234-123456789012",
    ///             InstanceId = "aaaaaaaa-bbbb-cccc-dddd-111111111111",
    ///             Tags = 
    ///             {
    ///                 { "Name", "Example Queue" },
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// ### With Quick Connect IDs
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var test = new Aws.Connect.Queue("test", new Aws.Connect.QueueArgs
    ///         {
    ///             Description = "Example Description",
    ///             HoursOfOperationId = "12345678-1234-1234-1234-123456789012",
    ///             InstanceId = "aaaaaaaa-bbbb-cccc-dddd-111111111111",
    ///             QuickConnectIds = 
    ///             {
    ///                 "12345678-abcd-1234-abcd-123456789012",
    ///             },
    ///             Tags = 
    ///             {
    ///                 { "Name", "Example Queue with Quick Connect IDs" },
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// ### With Outbound Caller Config
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var test = new Aws.Connect.Queue("test", new Aws.Connect.QueueArgs
    ///         {
    ///             Description = "Example Description",
    ///             HoursOfOperationId = "12345678-1234-1234-1234-123456789012",
    ///             InstanceId = "aaaaaaaa-bbbb-cccc-dddd-111111111111",
    ///             OutboundCallerConfig = new Aws.Connect.Inputs.QueueOutboundCallerConfigArgs
    ///             {
    ///                 OutboundCallerIdName = "example",
    ///                 OutboundCallerIdNumberId = "12345678-abcd-1234-abcd-123456789012",
    ///                 OutboundFlowId = "87654321-defg-1234-defg-987654321234",
    ///             },
    ///             Tags = 
    ///             {
    ///                 { "Name", "Example Queue with Outbound Caller Config" },
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// Amazon Connect Queues can be imported using the `instance_id` and `queue_id` separated by a colon (`:`), e.g.,
    /// 
    /// ```sh
    ///  $ pulumi import aws:connect/queue:Queue example f1288a1f-6193-445a-b47e-af739b2:c1d4e5f6-1b3c-1b3c-1b3c-c1d4e5f6c1d4e5
    /// ```
    /// </summary>
    [AwsResourceType("aws:connect/queue:Queue")]
    public partial class Queue : Pulumi.CustomResource
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the Queue.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// Specifies the description of the Queue.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Specifies the identifier of the Hours of Operation.
        /// </summary>
        [Output("hoursOfOperationId")]
        public Output<string> HoursOfOperationId { get; private set; } = null!;

        /// <summary>
        /// Specifies the identifier of the hosting Amazon Connect Instance.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// Specifies the maximum number of contacts that can be in the queue before it is considered full. Minimum value of 0.
        /// </summary>
        [Output("maxContacts")]
        public Output<int?> MaxContacts { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the Queue.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// A block that defines the outbound caller ID name, number, and outbound whisper flow. The Outbound Caller Config block is documented below.
        /// </summary>
        [Output("outboundCallerConfig")]
        public Output<Outputs.QueueOutboundCallerConfig?> OutboundCallerConfig { get; private set; } = null!;

        /// <summary>
        /// The identifier for the Queue.
        /// </summary>
        [Output("queueId")]
        public Output<string> QueueId { get; private set; } = null!;

        /// <summary>
        /// Specifies a list of quick connects ids that determine the quick connects available to agents who are working the queue.
        /// </summary>
        [Output("quickConnectIds")]
        public Output<ImmutableArray<string>> QuickConnectIds { get; private set; } = null!;

        [Output("quickConnectIdsAssociateds")]
        public Output<ImmutableArray<string>> QuickConnectIdsAssociateds { get; private set; } = null!;

        /// <summary>
        /// Specifies the description of the Queue. Valid values are `ENABLED`, `DISABLED`.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Tags to apply to the Queue. If configured with a provider [`default_tags` configuration block](https://www.terraform.io/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://www.terraform.io/docs/providers/aws/index.html#default_tags-configuration-block).
        /// </summary>
        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;


        /// <summary>
        /// Create a Queue resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Queue(string name, QueueArgs args, CustomResourceOptions? options = null)
            : base("aws:connect/queue:Queue", name, args ?? new QueueArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Queue(string name, Input<string> id, QueueState? state = null, CustomResourceOptions? options = null)
            : base("aws:connect/queue:Queue", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Queue resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Queue Get(string name, Input<string> id, QueueState? state = null, CustomResourceOptions? options = null)
        {
            return new Queue(name, id, state, options);
        }
    }

    public sealed class QueueArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the description of the Queue.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Specifies the identifier of the Hours of Operation.
        /// </summary>
        [Input("hoursOfOperationId", required: true)]
        public Input<string> HoursOfOperationId { get; set; } = null!;

        /// <summary>
        /// Specifies the identifier of the hosting Amazon Connect Instance.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// Specifies the maximum number of contacts that can be in the queue before it is considered full. Minimum value of 0.
        /// </summary>
        [Input("maxContacts")]
        public Input<int>? MaxContacts { get; set; }

        /// <summary>
        /// Specifies the name of the Queue.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A block that defines the outbound caller ID name, number, and outbound whisper flow. The Outbound Caller Config block is documented below.
        /// </summary>
        [Input("outboundCallerConfig")]
        public Input<Inputs.QueueOutboundCallerConfigArgs>? OutboundCallerConfig { get; set; }

        [Input("quickConnectIds")]
        private InputList<string>? _quickConnectIds;

        /// <summary>
        /// Specifies a list of quick connects ids that determine the quick connects available to agents who are working the queue.
        /// </summary>
        public InputList<string> QuickConnectIds
        {
            get => _quickConnectIds ?? (_quickConnectIds = new InputList<string>());
            set => _quickConnectIds = value;
        }

        /// <summary>
        /// Specifies the description of the Queue. Valid values are `ENABLED`, `DISABLED`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Tags to apply to the Queue. If configured with a provider [`default_tags` configuration block](https://www.terraform.io/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public QueueArgs()
        {
        }
    }

    public sealed class QueueState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the Queue.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// Specifies the description of the Queue.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Specifies the identifier of the Hours of Operation.
        /// </summary>
        [Input("hoursOfOperationId")]
        public Input<string>? HoursOfOperationId { get; set; }

        /// <summary>
        /// Specifies the identifier of the hosting Amazon Connect Instance.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// Specifies the maximum number of contacts that can be in the queue before it is considered full. Minimum value of 0.
        /// </summary>
        [Input("maxContacts")]
        public Input<int>? MaxContacts { get; set; }

        /// <summary>
        /// Specifies the name of the Queue.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A block that defines the outbound caller ID name, number, and outbound whisper flow. The Outbound Caller Config block is documented below.
        /// </summary>
        [Input("outboundCallerConfig")]
        public Input<Inputs.QueueOutboundCallerConfigGetArgs>? OutboundCallerConfig { get; set; }

        /// <summary>
        /// The identifier for the Queue.
        /// </summary>
        [Input("queueId")]
        public Input<string>? QueueId { get; set; }

        [Input("quickConnectIds")]
        private InputList<string>? _quickConnectIds;

        /// <summary>
        /// Specifies a list of quick connects ids that determine the quick connects available to agents who are working the queue.
        /// </summary>
        public InputList<string> QuickConnectIds
        {
            get => _quickConnectIds ?? (_quickConnectIds = new InputList<string>());
            set => _quickConnectIds = value;
        }

        [Input("quickConnectIdsAssociateds")]
        private InputList<string>? _quickConnectIdsAssociateds;
        public InputList<string> QuickConnectIdsAssociateds
        {
            get => _quickConnectIdsAssociateds ?? (_quickConnectIdsAssociateds = new InputList<string>());
            set => _quickConnectIdsAssociateds = value;
        }

        /// <summary>
        /// Specifies the description of the Queue. Valid values are `ENABLED`, `DISABLED`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Tags to apply to the Queue. If configured with a provider [`default_tags` configuration block](https://www.terraform.io/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](https://www.terraform.io/docs/providers/aws/index.html#default_tags-configuration-block).
        /// </summary>
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        public QueueState()
        {
        }
    }
}
