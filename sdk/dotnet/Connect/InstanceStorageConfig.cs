// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Connect
{
    /// <summary>
    /// Provides an Amazon Connect Instance Storage Config resource. For more information see
    /// [Amazon Connect: Getting Started](https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-get-started.html)
    /// 
    /// ## Example Usage
    /// ### Storage Config Kinesis Firehose Config
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Connect.InstanceStorageConfig("example", new()
    ///     {
    ///         InstanceId = aws_connect_instance.Example.Id,
    ///         ResourceType = "CONTACT_TRACE_RECORDS",
    ///         StorageConfig = new Aws.Connect.Inputs.InstanceStorageConfigStorageConfigArgs
    ///         {
    ///             KinesisFirehoseConfig = new Aws.Connect.Inputs.InstanceStorageConfigStorageConfigKinesisFirehoseConfigArgs
    ///             {
    ///                 FirehoseArn = aws_kinesis_firehose_delivery_stream.Example.Arn,
    ///             },
    ///             StorageType = "KINESIS_FIREHOSE",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### Storage Config Kinesis Stream Config
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Connect.InstanceStorageConfig("example", new()
    ///     {
    ///         InstanceId = aws_connect_instance.Example.Id,
    ///         ResourceType = "CONTACT_TRACE_RECORDS",
    ///         StorageConfig = new Aws.Connect.Inputs.InstanceStorageConfigStorageConfigArgs
    ///         {
    ///             KinesisStreamConfig = new Aws.Connect.Inputs.InstanceStorageConfigStorageConfigKinesisStreamConfigArgs
    ///             {
    ///                 StreamArn = aws_kinesis_stream.Example.Arn,
    ///             },
    ///             StorageType = "KINESIS_STREAM",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### Storage Config Kinesis Video Stream Config
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Connect.InstanceStorageConfig("example", new()
    ///     {
    ///         InstanceId = aws_connect_instance.Example.Id,
    ///         ResourceType = "MEDIA_STREAMS",
    ///         StorageConfig = new Aws.Connect.Inputs.InstanceStorageConfigStorageConfigArgs
    ///         {
    ///             KinesisVideoStreamConfig = new Aws.Connect.Inputs.InstanceStorageConfigStorageConfigKinesisVideoStreamConfigArgs
    ///             {
    ///                 Prefix = "example",
    ///                 RetentionPeriodHours = 3,
    ///                 EncryptionConfig = new Aws.Connect.Inputs.InstanceStorageConfigStorageConfigKinesisVideoStreamConfigEncryptionConfigArgs
    ///                 {
    ///                     EncryptionType = "KMS",
    ///                     KeyId = aws_kms_key.Example.Arn,
    ///                 },
    ///             },
    ///             StorageType = "KINESIS_VIDEO_STREAM",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### Storage Config S3 Config
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Connect.InstanceStorageConfig("example", new()
    ///     {
    ///         InstanceId = aws_connect_instance.Example.Id,
    ///         ResourceType = "CHAT_TRANSCRIPTS",
    ///         StorageConfig = new Aws.Connect.Inputs.InstanceStorageConfigStorageConfigArgs
    ///         {
    ///             S3Config = new Aws.Connect.Inputs.InstanceStorageConfigStorageConfigS3ConfigArgs
    ///             {
    ///                 BucketName = aws_s3_bucket.Example.Id,
    ///                 BucketPrefix = "example",
    ///             },
    ///             StorageType = "S3",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### Storage Config S3 Config with Encryption Config
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Connect.InstanceStorageConfig("example", new()
    ///     {
    ///         InstanceId = aws_connect_instance.Example.Id,
    ///         ResourceType = "CHAT_TRANSCRIPTS",
    ///         StorageConfig = new Aws.Connect.Inputs.InstanceStorageConfigStorageConfigArgs
    ///         {
    ///             S3Config = new Aws.Connect.Inputs.InstanceStorageConfigStorageConfigS3ConfigArgs
    ///             {
    ///                 BucketName = aws_s3_bucket.Example.Id,
    ///                 BucketPrefix = "example",
    ///                 EncryptionConfig = new Aws.Connect.Inputs.InstanceStorageConfigStorageConfigS3ConfigEncryptionConfigArgs
    ///                 {
    ///                     EncryptionType = "KMS",
    ///                     KeyId = aws_kms_key.Example.Arn,
    ///                 },
    ///             },
    ///             StorageType = "S3",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Amazon Connect Instance Storage Configs can be imported using the `instance_id`, `association_id`, and `resource_type` separated by a colon (`:`), e.g.,
    /// 
    /// ```sh
    ///  $ pulumi import aws:connect/instanceStorageConfig:InstanceStorageConfig example f1288a1f-6193-445a-b47e-af739b2:c1d4e5f6-1b3c-1b3c-1b3c-c1d4e5f6c1d4e5:CHAT_TRANSCRIPTS
    /// ```
    /// </summary>
    [AwsResourceType("aws:connect/instanceStorageConfig:InstanceStorageConfig")]
    public partial class InstanceStorageConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID.
        /// </summary>
        [Output("associationId")]
        public Output<string> AssociationId { get; private set; } = null!;

        /// <summary>
        /// Specifies the identifier of the hosting Amazon Connect Instance.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// A valid resource type. Valid Values: `CHAT_TRANSCRIPTS` | `CALL_RECORDINGS` | `SCHEDULED_REPORTS` | `MEDIA_STREAMS` | `CONTACT_TRACE_RECORDS` | `AGENT_EVENTS` | `REAL_TIME_CONTACT_ANALYSIS_SEGMENTS`.
        /// </summary>
        [Output("resourceType")]
        public Output<string> ResourceType { get; private set; } = null!;

        /// <summary>
        /// Specifies the storage configuration options for the Connect Instance. Documented below.
        /// </summary>
        [Output("storageConfig")]
        public Output<Outputs.InstanceStorageConfigStorageConfig> StorageConfig { get; private set; } = null!;


        /// <summary>
        /// Create a InstanceStorageConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public InstanceStorageConfig(string name, InstanceStorageConfigArgs args, CustomResourceOptions? options = null)
            : base("aws:connect/instanceStorageConfig:InstanceStorageConfig", name, args ?? new InstanceStorageConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private InstanceStorageConfig(string name, Input<string> id, InstanceStorageConfigState? state = null, CustomResourceOptions? options = null)
            : base("aws:connect/instanceStorageConfig:InstanceStorageConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing InstanceStorageConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static InstanceStorageConfig Get(string name, Input<string> id, InstanceStorageConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new InstanceStorageConfig(name, id, state, options);
        }
    }

    public sealed class InstanceStorageConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the identifier of the hosting Amazon Connect Instance.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// A valid resource type. Valid Values: `CHAT_TRANSCRIPTS` | `CALL_RECORDINGS` | `SCHEDULED_REPORTS` | `MEDIA_STREAMS` | `CONTACT_TRACE_RECORDS` | `AGENT_EVENTS` | `REAL_TIME_CONTACT_ANALYSIS_SEGMENTS`.
        /// </summary>
        [Input("resourceType", required: true)]
        public Input<string> ResourceType { get; set; } = null!;

        /// <summary>
        /// Specifies the storage configuration options for the Connect Instance. Documented below.
        /// </summary>
        [Input("storageConfig", required: true)]
        public Input<Inputs.InstanceStorageConfigStorageConfigArgs> StorageConfig { get; set; } = null!;

        public InstanceStorageConfigArgs()
        {
        }
        public static new InstanceStorageConfigArgs Empty => new InstanceStorageConfigArgs();
    }

    public sealed class InstanceStorageConfigState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The existing association identifier that uniquely identifies the resource type and storage config for the given instance ID.
        /// </summary>
        [Input("associationId")]
        public Input<string>? AssociationId { get; set; }

        /// <summary>
        /// Specifies the identifier of the hosting Amazon Connect Instance.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// A valid resource type. Valid Values: `CHAT_TRANSCRIPTS` | `CALL_RECORDINGS` | `SCHEDULED_REPORTS` | `MEDIA_STREAMS` | `CONTACT_TRACE_RECORDS` | `AGENT_EVENTS` | `REAL_TIME_CONTACT_ANALYSIS_SEGMENTS`.
        /// </summary>
        [Input("resourceType")]
        public Input<string>? ResourceType { get; set; }

        /// <summary>
        /// Specifies the storage configuration options for the Connect Instance. Documented below.
        /// </summary>
        [Input("storageConfig")]
        public Input<Inputs.InstanceStorageConfigStorageConfigGetArgs>? StorageConfig { get; set; }

        public InstanceStorageConfigState()
        {
        }
        public static new InstanceStorageConfigState Empty => new InstanceStorageConfigState();
    }
}
