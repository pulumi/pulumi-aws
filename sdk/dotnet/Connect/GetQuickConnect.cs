// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Connect
{
    public static class GetQuickConnect
    {
        public static Task<GetQuickConnectResult> InvokeAsync(GetQuickConnectArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetQuickConnectResult>("aws:connect/getQuickConnect:getQuickConnect", args ?? new GetQuickConnectArgs(), options.WithDefaults());

        public static Output<GetQuickConnectResult> Invoke(GetQuickConnectInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetQuickConnectResult>("aws:connect/getQuickConnect:getQuickConnect", args ?? new GetQuickConnectInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetQuickConnectArgs : global::Pulumi.InvokeArgs
    {
        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        [Input("name")]
        public string? Name { get; set; }

        [Input("quickConnectId")]
        public string? QuickConnectId { get; set; }

        [Input("tags")]
        private Dictionary<string, string>? _tags;
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetQuickConnectArgs()
        {
        }
        public static new GetQuickConnectArgs Empty => new GetQuickConnectArgs();
    }

    public sealed class GetQuickConnectInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("quickConnectId")]
        public Input<string>? QuickConnectId { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetQuickConnectInvokeArgs()
        {
        }
        public static new GetQuickConnectInvokeArgs Empty => new GetQuickConnectInvokeArgs();
    }


    [OutputType]
    public sealed class GetQuickConnectResult
    {
        public readonly string Arn;
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string InstanceId;
        public readonly string Name;
        public readonly ImmutableArray<Outputs.GetQuickConnectQuickConnectConfigResult> QuickConnectConfigs;
        public readonly string QuickConnectId;
        public readonly ImmutableDictionary<string, string> Tags;

        [OutputConstructor]
        private GetQuickConnectResult(
            string arn,

            string description,

            string id,

            string instanceId,

            string name,

            ImmutableArray<Outputs.GetQuickConnectQuickConnectConfigResult> quickConnectConfigs,

            string quickConnectId,

            ImmutableDictionary<string, string> tags)
        {
            Arn = arn;
            Description = description;
            Id = id;
            InstanceId = instanceId;
            Name = name;
            QuickConnectConfigs = quickConnectConfigs;
            QuickConnectId = quickConnectId;
            Tags = tags;
        }
    }
}
