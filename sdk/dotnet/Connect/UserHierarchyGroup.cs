// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Connect
{
    [AwsResourceType("aws:connect/userHierarchyGroup:UserHierarchyGroup")]
    public partial class UserHierarchyGroup : global::Pulumi.CustomResource
    {
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("hierarchyGroupId")]
        public Output<string> HierarchyGroupId { get; private set; } = null!;

        [Output("hierarchyPaths")]
        public Output<ImmutableArray<Outputs.UserHierarchyGroupHierarchyPath>> HierarchyPaths { get; private set; } = null!;

        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        [Output("levelId")]
        public Output<string> LevelId { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("parentGroupId")]
        public Output<string?> ParentGroupId { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;


        /// <summary>
        /// Create a UserHierarchyGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public UserHierarchyGroup(string name, UserHierarchyGroupArgs args, CustomResourceOptions? options = null)
            : base("aws:connect/userHierarchyGroup:UserHierarchyGroup", name, args ?? new UserHierarchyGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private UserHierarchyGroup(string name, Input<string> id, UserHierarchyGroupState? state = null, CustomResourceOptions? options = null)
            : base("aws:connect/userHierarchyGroup:UserHierarchyGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing UserHierarchyGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static UserHierarchyGroup Get(string name, Input<string> id, UserHierarchyGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new UserHierarchyGroup(name, id, state, options);
        }
    }

    public sealed class UserHierarchyGroupArgs : global::Pulumi.ResourceArgs
    {
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("parentGroupId")]
        public Input<string>? ParentGroupId { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public UserHierarchyGroupArgs()
        {
        }
        public static new UserHierarchyGroupArgs Empty => new UserHierarchyGroupArgs();
    }

    public sealed class UserHierarchyGroupState : global::Pulumi.ResourceArgs
    {
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("hierarchyGroupId")]
        public Input<string>? HierarchyGroupId { get; set; }

        [Input("hierarchyPaths")]
        private InputList<Inputs.UserHierarchyGroupHierarchyPathGetArgs>? _hierarchyPaths;
        public InputList<Inputs.UserHierarchyGroupHierarchyPathGetArgs> HierarchyPaths
        {
            get => _hierarchyPaths ?? (_hierarchyPaths = new InputList<Inputs.UserHierarchyGroupHierarchyPathGetArgs>());
            set => _hierarchyPaths = value;
        }

        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        [Input("levelId")]
        public Input<string>? LevelId { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("parentGroupId")]
        public Input<string>? ParentGroupId { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        public UserHierarchyGroupState()
        {
        }
        public static new UserHierarchyGroupState Empty => new UserHierarchyGroupState();
    }
}
