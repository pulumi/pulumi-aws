// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Connect.Inputs
{

    public sealed class InstanceStorageConfigStorageConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A block that specifies the configuration of the Kinesis Firehose delivery stream. Documented below.
        /// </summary>
        [Input("kinesisFirehoseConfig")]
        public Input<Inputs.InstanceStorageConfigStorageConfigKinesisFirehoseConfigArgs>? KinesisFirehoseConfig { get; set; }

        /// <summary>
        /// A block that specifies the configuration of the Kinesis data stream. Documented below.
        /// </summary>
        [Input("kinesisStreamConfig")]
        public Input<Inputs.InstanceStorageConfigStorageConfigKinesisStreamConfigArgs>? KinesisStreamConfig { get; set; }

        /// <summary>
        /// A block that specifies the configuration of the Kinesis video stream. Documented below.
        /// </summary>
        [Input("kinesisVideoStreamConfig")]
        public Input<Inputs.InstanceStorageConfigStorageConfigKinesisVideoStreamConfigArgs>? KinesisVideoStreamConfig { get; set; }

        /// <summary>
        /// A block that specifies the configuration of S3 Bucket. Documented below.
        /// </summary>
        [Input("s3Config")]
        public Input<Inputs.InstanceStorageConfigStorageConfigS3ConfigArgs>? S3Config { get; set; }

        /// <summary>
        /// A valid storage type. Valid Values: `S3` | `KINESIS_VIDEO_STREAM` | `KINESIS_STREAM` | `KINESIS_FIREHOSE`.
        /// </summary>
        [Input("storageType", required: true)]
        public Input<string> StorageType { get; set; } = null!;

        public InstanceStorageConfigStorageConfigArgs()
        {
        }
        public static new InstanceStorageConfigStorageConfigArgs Empty => new InstanceStorageConfigStorageConfigArgs();
    }
}
