// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Connect
{
    public static class GetSecurityProfile
    {
        /// <summary>
        /// Provides details about a specific Amazon Connect Security Profile.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// By `name`
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Connect.GetSecurityProfile.Invoke(new()
        ///     {
        ///         InstanceId = "aaaaaaaa-bbbb-cccc-dddd-111111111111",
        ///         Name = "Example",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// By `security_profile_id`
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Connect.GetSecurityProfile.Invoke(new()
        ///     {
        ///         InstanceId = "aaaaaaaa-bbbb-cccc-dddd-111111111111",
        ///         SecurityProfileId = "cccccccc-bbbb-cccc-dddd-111111111111",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetSecurityProfileResult> InvokeAsync(GetSecurityProfileArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSecurityProfileResult>("aws:connect/getSecurityProfile:getSecurityProfile", args ?? new GetSecurityProfileArgs(), options.WithDefaults());

        /// <summary>
        /// Provides details about a specific Amazon Connect Security Profile.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// By `name`
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Connect.GetSecurityProfile.Invoke(new()
        ///     {
        ///         InstanceId = "aaaaaaaa-bbbb-cccc-dddd-111111111111",
        ///         Name = "Example",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// By `security_profile_id`
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Connect.GetSecurityProfile.Invoke(new()
        ///     {
        ///         InstanceId = "aaaaaaaa-bbbb-cccc-dddd-111111111111",
        ///         SecurityProfileId = "cccccccc-bbbb-cccc-dddd-111111111111",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetSecurityProfileResult> Invoke(GetSecurityProfileInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSecurityProfileResult>("aws:connect/getSecurityProfile:getSecurityProfile", args ?? new GetSecurityProfileInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSecurityProfileArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Reference to the hosting Amazon Connect Instance
        /// </summary>
        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        /// <summary>
        /// Returns information on a specific Security Profile by name
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// Returns information on a specific Security Profile by Security Profile id
        /// </summary>
        [Input("securityProfileId")]
        public string? SecurityProfileId { get; set; }

        [Input("tags")]
        private Dictionary<string, string>? _tags;

        /// <summary>
        /// Map of tags to assign to the Security Profile.
        /// </summary>
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetSecurityProfileArgs()
        {
        }
        public static new GetSecurityProfileArgs Empty => new GetSecurityProfileArgs();
    }

    public sealed class GetSecurityProfileInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Reference to the hosting Amazon Connect Instance
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// Returns information on a specific Security Profile by name
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Returns information on a specific Security Profile by Security Profile id
        /// </summary>
        [Input("securityProfileId")]
        public Input<string>? SecurityProfileId { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Map of tags to assign to the Security Profile.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetSecurityProfileInvokeArgs()
        {
        }
        public static new GetSecurityProfileInvokeArgs Empty => new GetSecurityProfileInvokeArgs();
    }


    [OutputType]
    public sealed class GetSecurityProfileResult
    {
        /// <summary>
        /// ARN of the Security Profile.
        /// </summary>
        public readonly string Arn;
        /// <summary>
        /// Description of the Security Profile.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string InstanceId;
        public readonly string Name;
        /// <summary>
        /// The organization resource identifier for the security profile.
        /// </summary>
        public readonly string OrganizationResourceId;
        /// <summary>
        /// List of permissions assigned to the security profile.
        /// </summary>
        public readonly ImmutableArray<string> Permissions;
        public readonly string SecurityProfileId;
        /// <summary>
        /// Map of tags to assign to the Security Profile.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;

        [OutputConstructor]
        private GetSecurityProfileResult(
            string arn,

            string description,

            string id,

            string instanceId,

            string name,

            string organizationResourceId,

            ImmutableArray<string> permissions,

            string securityProfileId,

            ImmutableDictionary<string, string> tags)
        {
            Arn = arn;
            Description = description;
            Id = id;
            InstanceId = instanceId;
            Name = name;
            OrganizationResourceId = organizationResourceId;
            Permissions = permissions;
            SecurityProfileId = securityProfileId;
            Tags = tags;
        }
    }
}
