// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Connect
{
    [AwsResourceType("aws:connect/instance:Instance")]
    public partial class Instance : global::Pulumi.CustomResource
    {
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("autoResolveBestVoicesEnabled")]
        public Output<bool?> AutoResolveBestVoicesEnabled { get; private set; } = null!;

        [Output("contactFlowLogsEnabled")]
        public Output<bool?> ContactFlowLogsEnabled { get; private set; } = null!;

        [Output("contactLensEnabled")]
        public Output<bool?> ContactLensEnabled { get; private set; } = null!;

        [Output("createdTime")]
        public Output<string> CreatedTime { get; private set; } = null!;

        [Output("directoryId")]
        public Output<string?> DirectoryId { get; private set; } = null!;

        [Output("earlyMediaEnabled")]
        public Output<bool?> EarlyMediaEnabled { get; private set; } = null!;

        [Output("identityManagementType")]
        public Output<string> IdentityManagementType { get; private set; } = null!;

        [Output("inboundCallsEnabled")]
        public Output<bool> InboundCallsEnabled { get; private set; } = null!;

        [Output("instanceAlias")]
        public Output<string?> InstanceAlias { get; private set; } = null!;

        [Output("multiPartyConferenceEnabled")]
        public Output<bool?> MultiPartyConferenceEnabled { get; private set; } = null!;

        [Output("outboundCallsEnabled")]
        public Output<bool> OutboundCallsEnabled { get; private set; } = null!;

        [Output("serviceRole")]
        public Output<string> ServiceRole { get; private set; } = null!;

        [Output("status")]
        public Output<string> Status { get; private set; } = null!;


        /// <summary>
        /// Create a Instance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Instance(string name, InstanceArgs args, CustomResourceOptions? options = null)
            : base("aws:connect/instance:Instance", name, args ?? new InstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Instance(string name, Input<string> id, InstanceState? state = null, CustomResourceOptions? options = null)
            : base("aws:connect/instance:Instance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Instance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Instance Get(string name, Input<string> id, InstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new Instance(name, id, state, options);
        }
    }

    public sealed class InstanceArgs : global::Pulumi.ResourceArgs
    {
        [Input("autoResolveBestVoicesEnabled")]
        public Input<bool>? AutoResolveBestVoicesEnabled { get; set; }

        [Input("contactFlowLogsEnabled")]
        public Input<bool>? ContactFlowLogsEnabled { get; set; }

        [Input("contactLensEnabled")]
        public Input<bool>? ContactLensEnabled { get; set; }

        [Input("directoryId")]
        public Input<string>? DirectoryId { get; set; }

        [Input("earlyMediaEnabled")]
        public Input<bool>? EarlyMediaEnabled { get; set; }

        [Input("identityManagementType", required: true)]
        public Input<string> IdentityManagementType { get; set; } = null!;

        [Input("inboundCallsEnabled", required: true)]
        public Input<bool> InboundCallsEnabled { get; set; } = null!;

        [Input("instanceAlias")]
        public Input<string>? InstanceAlias { get; set; }

        [Input("multiPartyConferenceEnabled")]
        public Input<bool>? MultiPartyConferenceEnabled { get; set; }

        [Input("outboundCallsEnabled", required: true)]
        public Input<bool> OutboundCallsEnabled { get; set; } = null!;

        public InstanceArgs()
        {
        }
        public static new InstanceArgs Empty => new InstanceArgs();
    }

    public sealed class InstanceState : global::Pulumi.ResourceArgs
    {
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("autoResolveBestVoicesEnabled")]
        public Input<bool>? AutoResolveBestVoicesEnabled { get; set; }

        [Input("contactFlowLogsEnabled")]
        public Input<bool>? ContactFlowLogsEnabled { get; set; }

        [Input("contactLensEnabled")]
        public Input<bool>? ContactLensEnabled { get; set; }

        [Input("createdTime")]
        public Input<string>? CreatedTime { get; set; }

        [Input("directoryId")]
        public Input<string>? DirectoryId { get; set; }

        [Input("earlyMediaEnabled")]
        public Input<bool>? EarlyMediaEnabled { get; set; }

        [Input("identityManagementType")]
        public Input<string>? IdentityManagementType { get; set; }

        [Input("inboundCallsEnabled")]
        public Input<bool>? InboundCallsEnabled { get; set; }

        [Input("instanceAlias")]
        public Input<string>? InstanceAlias { get; set; }

        [Input("multiPartyConferenceEnabled")]
        public Input<bool>? MultiPartyConferenceEnabled { get; set; }

        [Input("outboundCallsEnabled")]
        public Input<bool>? OutboundCallsEnabled { get; set; }

        [Input("serviceRole")]
        public Input<string>? ServiceRole { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        public InstanceState()
        {
        }
        public static new InstanceState Empty => new InstanceState();
    }
}
