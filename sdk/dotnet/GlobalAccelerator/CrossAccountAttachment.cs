// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.GlobalAccelerator
{
    /// <summary>
    /// Resource for managing an AWS Global Accelerator Cross Account Attachment.
    /// 
    /// ## Example Usage
    /// 
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.GlobalAccelerator.CrossAccountAttachment("example", new()
    ///     {
    ///         Name = "example-cross-account-attachment",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ### Usage with Optional Arguments
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.GlobalAccelerator.CrossAccountAttachment("example", new()
    ///     {
    ///         Name = "example-cross-account-attachment",
    ///         Principals = new[]
    ///         {
    ///             "123456789012",
    ///         },
    ///         Resources = new[]
    ///         {
    ///             new Aws.GlobalAccelerator.Inputs.CrossAccountAttachmentResourceArgs
    ///             {
    ///                 EndpointId = "arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188",
    ///                 Region = "us-west-2",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import Global Accelerator Cross Account Attachment using the `example_id_arg`. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:globalaccelerator/crossAccountAttachment:CrossAccountAttachment example arn:aws:globalaccelerator::012345678910:attachment/01234567-abcd-8910-efgh-123456789012
    /// ```
    /// </summary>
    [AwsResourceType("aws:globalaccelerator/crossAccountAttachment:CrossAccountAttachment")]
    public partial class CrossAccountAttachment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ARN of the Cross Account Attachment.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// Creation Time when the Cross Account Attachment.
        /// </summary>
        [Output("createdTime")]
        public Output<string> CreatedTime { get; private set; } = null!;

        /// <summary>
        /// Last modified time of the Cross Account Attachment.
        /// </summary>
        [Output("lastModifiedTime")]
        public Output<string> LastModifiedTime { get; private set; } = null!;

        /// <summary>
        /// Name of the Cross Account Attachment.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// List of AWS account IDs that are allowed to associate resources with the accelerator.
        /// </summary>
        [Output("principals")]
        public Output<ImmutableArray<string>> Principals { get; private set; } = null!;

        /// <summary>
        /// List of resources to be associated with the accelerator.
        /// </summary>
        [Output("resources")]
        public Output<ImmutableArray<Outputs.CrossAccountAttachmentResource>> Resources { get; private set; } = null!;

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;


        /// <summary>
        /// Create a CrossAccountAttachment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CrossAccountAttachment(string name, CrossAccountAttachmentArgs? args = null, CustomResourceOptions? options = null)
            : base("aws:globalaccelerator/crossAccountAttachment:CrossAccountAttachment", name, args ?? new CrossAccountAttachmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CrossAccountAttachment(string name, Input<string> id, CrossAccountAttachmentState? state = null, CustomResourceOptions? options = null)
            : base("aws:globalaccelerator/crossAccountAttachment:CrossAccountAttachment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CrossAccountAttachment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CrossAccountAttachment Get(string name, Input<string> id, CrossAccountAttachmentState? state = null, CustomResourceOptions? options = null)
        {
            return new CrossAccountAttachment(name, id, state, options);
        }
    }

    public sealed class CrossAccountAttachmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the Cross Account Attachment.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("principals")]
        private InputList<string>? _principals;

        /// <summary>
        /// List of AWS account IDs that are allowed to associate resources with the accelerator.
        /// </summary>
        public InputList<string> Principals
        {
            get => _principals ?? (_principals = new InputList<string>());
            set => _principals = value;
        }

        [Input("resources")]
        private InputList<Inputs.CrossAccountAttachmentResourceArgs>? _resources;

        /// <summary>
        /// List of resources to be associated with the accelerator.
        /// </summary>
        public InputList<Inputs.CrossAccountAttachmentResourceArgs> Resources
        {
            get => _resources ?? (_resources = new InputList<Inputs.CrossAccountAttachmentResourceArgs>());
            set => _resources = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public CrossAccountAttachmentArgs()
        {
        }
        public static new CrossAccountAttachmentArgs Empty => new CrossAccountAttachmentArgs();
    }

    public sealed class CrossAccountAttachmentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ARN of the Cross Account Attachment.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// Creation Time when the Cross Account Attachment.
        /// </summary>
        [Input("createdTime")]
        public Input<string>? CreatedTime { get; set; }

        /// <summary>
        /// Last modified time of the Cross Account Attachment.
        /// </summary>
        [Input("lastModifiedTime")]
        public Input<string>? LastModifiedTime { get; set; }

        /// <summary>
        /// Name of the Cross Account Attachment.
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("principals")]
        private InputList<string>? _principals;

        /// <summary>
        /// List of AWS account IDs that are allowed to associate resources with the accelerator.
        /// </summary>
        public InputList<string> Principals
        {
            get => _principals ?? (_principals = new InputList<string>());
            set => _principals = value;
        }

        [Input("resources")]
        private InputList<Inputs.CrossAccountAttachmentResourceGetArgs>? _resources;

        /// <summary>
        /// List of resources to be associated with the accelerator.
        /// </summary>
        public InputList<Inputs.CrossAccountAttachmentResourceGetArgs> Resources
        {
            get => _resources ?? (_resources = new InputList<Inputs.CrossAccountAttachmentResourceGetArgs>());
            set => _resources = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;

        /// <summary>
        /// A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
        /// </summary>
        [Obsolete(@"Please use `tags` instead.")]
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        public CrossAccountAttachmentState()
        {
        }
        public static new CrossAccountAttachmentState Empty => new CrossAccountAttachmentState();
    }
}
