// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.GlobalAccelerator
{
    public static class GetAccelerator
    {
        /// <summary>
        /// Provides information about a Global Accelerator accelerator.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const config = new pulumi.Config();
        /// const acceleratorArn = config.get("acceleratorArn") || "";
        /// const acceleratorName = config.get("acceleratorName") || "";
        /// const example = aws.globalaccelerator.getAccelerator({
        ///     arn: acceleratorArn,
        ///     name: acceleratorName,
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// config = pulumi.Config()
        /// accelerator_arn = config.get("acceleratorArn")
        /// if accelerator_arn is None:
        ///     accelerator_arn = ""
        /// accelerator_name = config.get("acceleratorName")
        /// if accelerator_name is None:
        ///     accelerator_name = ""
        /// example = aws.globalaccelerator.get_accelerator(arn=accelerator_arn,
        ///     name=accelerator_name)
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var acceleratorArn = config.Get("acceleratorArn") ?? "";
        ///     var acceleratorName = config.Get("acceleratorName") ?? "";
        ///     var example = Aws.GlobalAccelerator.GetAccelerator.Invoke(new()
        ///     {
        ///         Arn = acceleratorArn,
        ///         Name = acceleratorName,
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/globalaccelerator"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		cfg := config.New(ctx, "")
        /// 		acceleratorArn := ""
        /// 		if param := cfg.Get("acceleratorArn"); param != "" {
        /// 			acceleratorArn = param
        /// 		}
        /// 		acceleratorName := ""
        /// 		if param := cfg.Get("acceleratorName"); param != "" {
        /// 			acceleratorName = param
        /// 		}
        /// 		_, err := globalaccelerator.LookupAccelerator(ctx, &amp;globalaccelerator.LookupAcceleratorArgs{
        /// 			Arn:  pulumi.StringRef(acceleratorArn),
        /// 			Name: pulumi.StringRef(acceleratorName),
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.globalaccelerator.GlobalacceleratorFunctions;
        /// import com.pulumi.aws.globalaccelerator.inputs.GetAcceleratorArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var config = ctx.config();
        ///         final var acceleratorArn = config.get("acceleratorArn").orElse("");
        ///         final var acceleratorName = config.get("acceleratorName").orElse("");
        ///         final var example = GlobalacceleratorFunctions.getAccelerator(GetAcceleratorArgs.builder()
        ///             .arn(acceleratorArn)
        ///             .name(acceleratorName)
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// configuration:
        ///   acceleratorArn:
        ///     type: string
        ///     default:
        ///   acceleratorName:
        ///     type: string
        ///     default:
        /// variables:
        ///   example:
        ///     fn::invoke:
        ///       Function: aws:globalaccelerator:getAccelerator
        ///       Arguments:
        ///         arn: ${acceleratorArn}
        ///         name: ${acceleratorName}
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetAcceleratorResult> InvokeAsync(GetAcceleratorArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAcceleratorResult>("aws:globalaccelerator/getAccelerator:getAccelerator", args ?? new GetAcceleratorArgs(), options.WithDefaults());

        /// <summary>
        /// Provides information about a Global Accelerator accelerator.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const config = new pulumi.Config();
        /// const acceleratorArn = config.get("acceleratorArn") || "";
        /// const acceleratorName = config.get("acceleratorName") || "";
        /// const example = aws.globalaccelerator.getAccelerator({
        ///     arn: acceleratorArn,
        ///     name: acceleratorName,
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// config = pulumi.Config()
        /// accelerator_arn = config.get("acceleratorArn")
        /// if accelerator_arn is None:
        ///     accelerator_arn = ""
        /// accelerator_name = config.get("acceleratorName")
        /// if accelerator_name is None:
        ///     accelerator_name = ""
        /// example = aws.globalaccelerator.get_accelerator(arn=accelerator_arn,
        ///     name=accelerator_name)
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var config = new Config();
        ///     var acceleratorArn = config.Get("acceleratorArn") ?? "";
        ///     var acceleratorName = config.Get("acceleratorName") ?? "";
        ///     var example = Aws.GlobalAccelerator.GetAccelerator.Invoke(new()
        ///     {
        ///         Arn = acceleratorArn,
        ///         Name = acceleratorName,
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/globalaccelerator"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		cfg := config.New(ctx, "")
        /// 		acceleratorArn := ""
        /// 		if param := cfg.Get("acceleratorArn"); param != "" {
        /// 			acceleratorArn = param
        /// 		}
        /// 		acceleratorName := ""
        /// 		if param := cfg.Get("acceleratorName"); param != "" {
        /// 			acceleratorName = param
        /// 		}
        /// 		_, err := globalaccelerator.LookupAccelerator(ctx, &amp;globalaccelerator.LookupAcceleratorArgs{
        /// 			Arn:  pulumi.StringRef(acceleratorArn),
        /// 			Name: pulumi.StringRef(acceleratorName),
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.globalaccelerator.GlobalacceleratorFunctions;
        /// import com.pulumi.aws.globalaccelerator.inputs.GetAcceleratorArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var config = ctx.config();
        ///         final var acceleratorArn = config.get("acceleratorArn").orElse("");
        ///         final var acceleratorName = config.get("acceleratorName").orElse("");
        ///         final var example = GlobalacceleratorFunctions.getAccelerator(GetAcceleratorArgs.builder()
        ///             .arn(acceleratorArn)
        ///             .name(acceleratorName)
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// configuration:
        ///   acceleratorArn:
        ///     type: string
        ///     default:
        ///   acceleratorName:
        ///     type: string
        ///     default:
        /// variables:
        ///   example:
        ///     fn::invoke:
        ///       Function: aws:globalaccelerator:getAccelerator
        ///       Arguments:
        ///         arn: ${acceleratorArn}
        ///         name: ${acceleratorName}
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetAcceleratorResult> Invoke(GetAcceleratorInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAcceleratorResult>("aws:globalaccelerator/getAccelerator:getAccelerator", args ?? new GetAcceleratorInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAcceleratorArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Full ARN of the Global Accelerator.
        /// </summary>
        [Input("arn")]
        public string? Arn { get; set; }

        /// <summary>
        /// Unique name of the Global Accelerator.
        /// 
        /// &gt; **NOTE:** When both `arn` and `name` are specified, `arn` takes precedence.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        [Input("tags")]
        private Dictionary<string, string>? _tags;
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetAcceleratorArgs()
        {
        }
        public static new GetAcceleratorArgs Empty => new GetAcceleratorArgs();
    }

    public sealed class GetAcceleratorInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Full ARN of the Global Accelerator.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// Unique name of the Global Accelerator.
        /// 
        /// &gt; **NOTE:** When both `arn` and `name` are specified, `arn` takes precedence.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetAcceleratorInvokeArgs()
        {
        }
        public static new GetAcceleratorInvokeArgs Empty => new GetAcceleratorInvokeArgs();
    }


    [OutputType]
    public sealed class GetAcceleratorResult
    {
        public readonly string Arn;
        public readonly ImmutableArray<Outputs.GetAcceleratorAttributeResult> Attributes;
        public readonly string DnsName;
        public readonly bool Enabled;
        public readonly string HostedZoneId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string IpAddressType;
        public readonly ImmutableArray<Outputs.GetAcceleratorIpSetResult> IpSets;
        public readonly string Name;
        public readonly ImmutableDictionary<string, string> Tags;

        [OutputConstructor]
        private GetAcceleratorResult(
            string arn,

            ImmutableArray<Outputs.GetAcceleratorAttributeResult> attributes,

            string dnsName,

            bool enabled,

            string hostedZoneId,

            string id,

            string ipAddressType,

            ImmutableArray<Outputs.GetAcceleratorIpSetResult> ipSets,

            string name,

            ImmutableDictionary<string, string> tags)
        {
            Arn = arn;
            Attributes = attributes;
            DnsName = dnsName;
            Enabled = enabled;
            HostedZoneId = hostedZoneId;
            Id = id;
            IpAddressType = ipAddressType;
            IpSets = ipSets;
            Name = name;
            Tags = tags;
        }
    }
}
