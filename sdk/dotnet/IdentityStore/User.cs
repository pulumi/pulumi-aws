// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.IdentityStore
{
    [AwsResourceType("aws:identitystore/user:User")]
    public partial class User : global::Pulumi.CustomResource
    {
        [Output("addresses")]
        public Output<Outputs.UserAddresses?> Addresses { get; private set; } = null!;

        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        [Output("emails")]
        public Output<Outputs.UserEmails?> Emails { get; private set; } = null!;

        [Output("externalIds")]
        public Output<ImmutableArray<Outputs.UserExternalId>> ExternalIds { get; private set; } = null!;

        [Output("identityStoreId")]
        public Output<string> IdentityStoreId { get; private set; } = null!;

        [Output("locale")]
        public Output<string?> Locale { get; private set; } = null!;

        [Output("name")]
        public Output<Outputs.UserName> Name { get; private set; } = null!;

        [Output("nickname")]
        public Output<string?> Nickname { get; private set; } = null!;

        [Output("phoneNumbers")]
        public Output<Outputs.UserPhoneNumbers?> PhoneNumbers { get; private set; } = null!;

        [Output("preferredLanguage")]
        public Output<string?> PreferredLanguage { get; private set; } = null!;

        [Output("profileUrl")]
        public Output<string?> ProfileUrl { get; private set; } = null!;

        [Output("timezone")]
        public Output<string?> Timezone { get; private set; } = null!;

        [Output("title")]
        public Output<string?> Title { get; private set; } = null!;

        [Output("userId")]
        public Output<string> UserId { get; private set; } = null!;

        [Output("userName")]
        public Output<string> UserName { get; private set; } = null!;

        [Output("userType")]
        public Output<string?> UserType { get; private set; } = null!;


        /// <summary>
        /// Create a User resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public User(string name, UserArgs args, CustomResourceOptions? options = null)
            : base("aws:identitystore/user:User", name, args ?? new UserArgs(), MakeResourceOptions(options, ""))
        {
        }

        private User(string name, Input<string> id, UserState? state = null, CustomResourceOptions? options = null)
            : base("aws:identitystore/user:User", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing User resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static User Get(string name, Input<string> id, UserState? state = null, CustomResourceOptions? options = null)
        {
            return new User(name, id, state, options);
        }
    }

    public sealed class UserArgs : global::Pulumi.ResourceArgs
    {
        [Input("addresses")]
        public Input<Inputs.UserAddressesArgs>? Addresses { get; set; }

        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        [Input("emails")]
        public Input<Inputs.UserEmailsArgs>? Emails { get; set; }

        [Input("identityStoreId", required: true)]
        public Input<string> IdentityStoreId { get; set; } = null!;

        [Input("locale")]
        public Input<string>? Locale { get; set; }

        [Input("name")]
        public Input<Inputs.UserNameArgs>? Name { get; set; }

        [Input("nickname")]
        public Input<string>? Nickname { get; set; }

        [Input("phoneNumbers")]
        public Input<Inputs.UserPhoneNumbersArgs>? PhoneNumbers { get; set; }

        [Input("preferredLanguage")]
        public Input<string>? PreferredLanguage { get; set; }

        [Input("profileUrl")]
        public Input<string>? ProfileUrl { get; set; }

        [Input("timezone")]
        public Input<string>? Timezone { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("userName", required: true)]
        public Input<string> UserName { get; set; } = null!;

        [Input("userType")]
        public Input<string>? UserType { get; set; }

        public UserArgs()
        {
        }
        public static new UserArgs Empty => new UserArgs();
    }

    public sealed class UserState : global::Pulumi.ResourceArgs
    {
        [Input("addresses")]
        public Input<Inputs.UserAddressesGetArgs>? Addresses { get; set; }

        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("emails")]
        public Input<Inputs.UserEmailsGetArgs>? Emails { get; set; }

        [Input("externalIds")]
        private InputList<Inputs.UserExternalIdGetArgs>? _externalIds;
        public InputList<Inputs.UserExternalIdGetArgs> ExternalIds
        {
            get => _externalIds ?? (_externalIds = new InputList<Inputs.UserExternalIdGetArgs>());
            set => _externalIds = value;
        }

        [Input("identityStoreId")]
        public Input<string>? IdentityStoreId { get; set; }

        [Input("locale")]
        public Input<string>? Locale { get; set; }

        [Input("name")]
        public Input<Inputs.UserNameGetArgs>? Name { get; set; }

        [Input("nickname")]
        public Input<string>? Nickname { get; set; }

        [Input("phoneNumbers")]
        public Input<Inputs.UserPhoneNumbersGetArgs>? PhoneNumbers { get; set; }

        [Input("preferredLanguage")]
        public Input<string>? PreferredLanguage { get; set; }

        [Input("profileUrl")]
        public Input<string>? ProfileUrl { get; set; }

        [Input("timezone")]
        public Input<string>? Timezone { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("userId")]
        public Input<string>? UserId { get; set; }

        [Input("userName")]
        public Input<string>? UserName { get; set; }

        [Input("userType")]
        public Input<string>? UserType { get; set; }

        public UserState()
        {
        }
        public static new UserState Empty => new UserState();
    }
}
