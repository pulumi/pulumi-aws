// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.IdentityStore
{
    public static class GetGroup
    {
        public static Task<GetGroupResult> InvokeAsync(GetGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGroupResult>("aws:identitystore/getGroup:getGroup", args ?? new GetGroupArgs(), options.WithDefaults());

        public static Output<GetGroupResult> Invoke(GetGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGroupResult>("aws:identitystore/getGroup:getGroup", args ?? new GetGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGroupArgs : global::Pulumi.InvokeArgs
    {
        [Input("alternateIdentifier")]
        public Inputs.GetGroupAlternateIdentifierArgs? AlternateIdentifier { get; set; }

        [Input("filter")]
        public Inputs.GetGroupFilterArgs? Filter { get; set; }

        [Input("groupId")]
        public string? GroupId { get; set; }

        [Input("identityStoreId", required: true)]
        public string IdentityStoreId { get; set; } = null!;

        public GetGroupArgs()
        {
        }
        public static new GetGroupArgs Empty => new GetGroupArgs();
    }

    public sealed class GetGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("alternateIdentifier")]
        public Input<Inputs.GetGroupAlternateIdentifierInputArgs>? AlternateIdentifier { get; set; }

        [Input("filter")]
        public Input<Inputs.GetGroupFilterInputArgs>? Filter { get; set; }

        [Input("groupId")]
        public Input<string>? GroupId { get; set; }

        [Input("identityStoreId", required: true)]
        public Input<string> IdentityStoreId { get; set; } = null!;

        public GetGroupInvokeArgs()
        {
        }
        public static new GetGroupInvokeArgs Empty => new GetGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetGroupResult
    {
        public readonly Outputs.GetGroupAlternateIdentifierResult? AlternateIdentifier;
        public readonly string Description;
        public readonly string DisplayName;
        public readonly ImmutableArray<Outputs.GetGroupExternalIdResult> ExternalIds;
        public readonly Outputs.GetGroupFilterResult? Filter;
        public readonly string GroupId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string IdentityStoreId;

        [OutputConstructor]
        private GetGroupResult(
            Outputs.GetGroupAlternateIdentifierResult? alternateIdentifier,

            string description,

            string displayName,

            ImmutableArray<Outputs.GetGroupExternalIdResult> externalIds,

            Outputs.GetGroupFilterResult? filter,

            string groupId,

            string id,

            string identityStoreId)
        {
            AlternateIdentifier = alternateIdentifier;
            Description = description;
            DisplayName = displayName;
            ExternalIds = externalIds;
            Filter = filter;
            GroupId = groupId;
            Id = id;
            IdentityStoreId = identityStoreId;
        }
    }
}
