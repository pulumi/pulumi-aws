// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.RedShift
{
    /// <summary>
    /// Creates a Redshift authentication profile
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Text.Json;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.RedShift.AuthenticationProfile("example", new()
    ///     {
    ///         AuthenticationProfileName = "example",
    ///         AuthenticationProfileContent = JsonSerializer.Serialize(new Dictionary&lt;string, object?&gt;
    ///         {
    ///             ["AllowDBUserOverride"] = "1",
    ///             ["Client_ID"] = "ExampleClientID",
    ///             ["App_ID"] = "example",
    ///         }),
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Redshift Authentication Profiles support import by `authentication_profile_name`, e.g., console
    /// 
    /// ```sh
    ///  $ pulumi import aws:redshift/authenticationProfile:AuthenticationProfile test example
    /// ```
    /// </summary>
    [AwsResourceType("aws:redshift/authenticationProfile:AuthenticationProfile")]
    public partial class AuthenticationProfile : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The content of the authentication profile in JSON format. The maximum length of the JSON string is determined by a quota for your account.
        /// </summary>
        [Output("authenticationProfileContent")]
        public Output<string> AuthenticationProfileContent { get; private set; } = null!;

        /// <summary>
        /// The name of the authentication profile.
        /// </summary>
        [Output("authenticationProfileName")]
        public Output<string> AuthenticationProfileName { get; private set; } = null!;


        /// <summary>
        /// Create a AuthenticationProfile resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AuthenticationProfile(string name, AuthenticationProfileArgs args, CustomResourceOptions? options = null)
            : base("aws:redshift/authenticationProfile:AuthenticationProfile", name, args ?? new AuthenticationProfileArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AuthenticationProfile(string name, Input<string> id, AuthenticationProfileState? state = null, CustomResourceOptions? options = null)
            : base("aws:redshift/authenticationProfile:AuthenticationProfile", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AuthenticationProfile resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AuthenticationProfile Get(string name, Input<string> id, AuthenticationProfileState? state = null, CustomResourceOptions? options = null)
        {
            return new AuthenticationProfile(name, id, state, options);
        }
    }

    public sealed class AuthenticationProfileArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The content of the authentication profile in JSON format. The maximum length of the JSON string is determined by a quota for your account.
        /// </summary>
        [Input("authenticationProfileContent", required: true)]
        public Input<string> AuthenticationProfileContent { get; set; } = null!;

        /// <summary>
        /// The name of the authentication profile.
        /// </summary>
        [Input("authenticationProfileName", required: true)]
        public Input<string> AuthenticationProfileName { get; set; } = null!;

        public AuthenticationProfileArgs()
        {
        }
        public static new AuthenticationProfileArgs Empty => new AuthenticationProfileArgs();
    }

    public sealed class AuthenticationProfileState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The content of the authentication profile in JSON format. The maximum length of the JSON string is determined by a quota for your account.
        /// </summary>
        [Input("authenticationProfileContent")]
        public Input<string>? AuthenticationProfileContent { get; set; }

        /// <summary>
        /// The name of the authentication profile.
        /// </summary>
        [Input("authenticationProfileName")]
        public Input<string>? AuthenticationProfileName { get; set; }

        public AuthenticationProfileState()
        {
        }
        public static new AuthenticationProfileState Empty => new AuthenticationProfileState();
    }
}
