// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.RedShift
{
    public static class GetSubnetGroup
    {
        /// <summary>
        /// Provides details about a specific redshift subnet group.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.RedShift.GetSubnetGroup.Invoke(new()
        ///     {
        ///         Name = aws_redshift_subnet_group.Example.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetSubnetGroupResult> InvokeAsync(GetSubnetGroupArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSubnetGroupResult>("aws:redshift/getSubnetGroup:getSubnetGroup", args ?? new GetSubnetGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Provides details about a specific redshift subnet group.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.RedShift.GetSubnetGroup.Invoke(new()
        ///     {
        ///         Name = aws_redshift_subnet_group.Example.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetSubnetGroupResult> Invoke(GetSubnetGroupInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetSubnetGroupResult>("aws:redshift/getSubnetGroup:getSubnetGroup", args ?? new GetSubnetGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSubnetGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the cluster subnet group for which information is requested.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("tags")]
        private Dictionary<string, string>? _tags;

        /// <summary>
        /// Tags associated to the Subnet Group
        /// </summary>
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetSubnetGroupArgs()
        {
        }
        public static new GetSubnetGroupArgs Empty => new GetSubnetGroupArgs();
    }

    public sealed class GetSubnetGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the cluster subnet group for which information is requested.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Tags associated to the Subnet Group
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetSubnetGroupInvokeArgs()
        {
        }
        public static new GetSubnetGroupInvokeArgs Empty => new GetSubnetGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetSubnetGroupResult
    {
        /// <summary>
        /// ARN of the Redshift Subnet Group name.
        /// </summary>
        public readonly string Arn;
        /// <summary>
        /// Description of the Redshift Subnet group.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        /// <summary>
        /// An array of VPC subnet IDs.
        /// </summary>
        public readonly ImmutableArray<string> SubnetIds;
        /// <summary>
        /// Tags associated to the Subnet Group
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;

        [OutputConstructor]
        private GetSubnetGroupResult(
            string arn,

            string description,

            string id,

            string name,

            ImmutableArray<string> subnetIds,

            ImmutableDictionary<string, string> tags)
        {
            Arn = arn;
            Description = description;
            Id = id;
            Name = name;
            SubnetIds = subnetIds;
            Tags = tags;
        }
    }
}
