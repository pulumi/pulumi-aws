// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.RedShift
{
    public static class GetClusterCredentials
    {
        public static Task<GetClusterCredentialsResult> InvokeAsync(GetClusterCredentialsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetClusterCredentialsResult>("aws:redshift/getClusterCredentials:getClusterCredentials", args ?? new GetClusterCredentialsArgs(), options.WithDefaults());

        public static Output<GetClusterCredentialsResult> Invoke(GetClusterCredentialsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetClusterCredentialsResult>("aws:redshift/getClusterCredentials:getClusterCredentials", args ?? new GetClusterCredentialsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetClusterCredentialsArgs : global::Pulumi.InvokeArgs
    {
        [Input("autoCreate")]
        public bool? AutoCreate { get; set; }

        [Input("clusterIdentifier", required: true)]
        public string ClusterIdentifier { get; set; } = null!;

        [Input("dbGroups")]
        private List<string>? _dbGroups;
        public List<string> DbGroups
        {
            get => _dbGroups ?? (_dbGroups = new List<string>());
            set => _dbGroups = value;
        }

        [Input("dbName")]
        public string? DbName { get; set; }

        [Input("dbUser", required: true)]
        public string DbUser { get; set; } = null!;

        [Input("durationSeconds")]
        public int? DurationSeconds { get; set; }

        public GetClusterCredentialsArgs()
        {
        }
        public static new GetClusterCredentialsArgs Empty => new GetClusterCredentialsArgs();
    }

    public sealed class GetClusterCredentialsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("autoCreate")]
        public Input<bool>? AutoCreate { get; set; }

        [Input("clusterIdentifier", required: true)]
        public Input<string> ClusterIdentifier { get; set; } = null!;

        [Input("dbGroups")]
        private InputList<string>? _dbGroups;
        public InputList<string> DbGroups
        {
            get => _dbGroups ?? (_dbGroups = new InputList<string>());
            set => _dbGroups = value;
        }

        [Input("dbName")]
        public Input<string>? DbName { get; set; }

        [Input("dbUser", required: true)]
        public Input<string> DbUser { get; set; } = null!;

        [Input("durationSeconds")]
        public Input<int>? DurationSeconds { get; set; }

        public GetClusterCredentialsInvokeArgs()
        {
        }
        public static new GetClusterCredentialsInvokeArgs Empty => new GetClusterCredentialsInvokeArgs();
    }


    [OutputType]
    public sealed class GetClusterCredentialsResult
    {
        public readonly bool? AutoCreate;
        public readonly string ClusterIdentifier;
        public readonly ImmutableArray<string> DbGroups;
        public readonly string? DbName;
        public readonly string DbPassword;
        public readonly string DbUser;
        public readonly int? DurationSeconds;
        public readonly string Expiration;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetClusterCredentialsResult(
            bool? autoCreate,

            string clusterIdentifier,

            ImmutableArray<string> dbGroups,

            string? dbName,

            string dbPassword,

            string dbUser,

            int? durationSeconds,

            string expiration,

            string id)
        {
            AutoCreate = autoCreate;
            ClusterIdentifier = clusterIdentifier;
            DbGroups = dbGroups;
            DbName = dbName;
            DbPassword = dbPassword;
            DbUser = dbUser;
            DurationSeconds = durationSeconds;
            Expiration = expiration;
            Id = id;
        }
    }
}
