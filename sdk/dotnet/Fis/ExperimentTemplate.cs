// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Fis
{
    [AwsResourceType("aws:fis/experimentTemplate:ExperimentTemplate")]
    public partial class ExperimentTemplate : global::Pulumi.CustomResource
    {
        [Output("actions")]
        public Output<ImmutableArray<Outputs.ExperimentTemplateAction>> Actions { get; private set; } = null!;

        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        [Output("roleArn")]
        public Output<string> RoleArn { get; private set; } = null!;

        [Output("stopConditions")]
        public Output<ImmutableArray<Outputs.ExperimentTemplateStopCondition>> StopConditions { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("targets")]
        public Output<ImmutableArray<Outputs.ExperimentTemplateTarget>> Targets { get; private set; } = null!;


        /// <summary>
        /// Create a ExperimentTemplate resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ExperimentTemplate(string name, ExperimentTemplateArgs args, CustomResourceOptions? options = null)
            : base("aws:fis/experimentTemplate:ExperimentTemplate", name, args ?? new ExperimentTemplateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ExperimentTemplate(string name, Input<string> id, ExperimentTemplateState? state = null, CustomResourceOptions? options = null)
            : base("aws:fis/experimentTemplate:ExperimentTemplate", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ExperimentTemplate resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ExperimentTemplate Get(string name, Input<string> id, ExperimentTemplateState? state = null, CustomResourceOptions? options = null)
        {
            return new ExperimentTemplate(name, id, state, options);
        }
    }

    public sealed class ExperimentTemplateArgs : global::Pulumi.ResourceArgs
    {
        [Input("actions", required: true)]
        private InputList<Inputs.ExperimentTemplateActionArgs>? _actions;
        public InputList<Inputs.ExperimentTemplateActionArgs> Actions
        {
            get => _actions ?? (_actions = new InputList<Inputs.ExperimentTemplateActionArgs>());
            set => _actions = value;
        }

        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        [Input("roleArn", required: true)]
        public Input<string> RoleArn { get; set; } = null!;

        [Input("stopConditions", required: true)]
        private InputList<Inputs.ExperimentTemplateStopConditionArgs>? _stopConditions;
        public InputList<Inputs.ExperimentTemplateStopConditionArgs> StopConditions
        {
            get => _stopConditions ?? (_stopConditions = new InputList<Inputs.ExperimentTemplateStopConditionArgs>());
            set => _stopConditions = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("targets")]
        private InputList<Inputs.ExperimentTemplateTargetArgs>? _targets;
        public InputList<Inputs.ExperimentTemplateTargetArgs> Targets
        {
            get => _targets ?? (_targets = new InputList<Inputs.ExperimentTemplateTargetArgs>());
            set => _targets = value;
        }

        public ExperimentTemplateArgs()
        {
        }
        public static new ExperimentTemplateArgs Empty => new ExperimentTemplateArgs();
    }

    public sealed class ExperimentTemplateState : global::Pulumi.ResourceArgs
    {
        [Input("actions")]
        private InputList<Inputs.ExperimentTemplateActionGetArgs>? _actions;
        public InputList<Inputs.ExperimentTemplateActionGetArgs> Actions
        {
            get => _actions ?? (_actions = new InputList<Inputs.ExperimentTemplateActionGetArgs>());
            set => _actions = value;
        }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("roleArn")]
        public Input<string>? RoleArn { get; set; }

        [Input("stopConditions")]
        private InputList<Inputs.ExperimentTemplateStopConditionGetArgs>? _stopConditions;
        public InputList<Inputs.ExperimentTemplateStopConditionGetArgs> StopConditions
        {
            get => _stopConditions ?? (_stopConditions = new InputList<Inputs.ExperimentTemplateStopConditionGetArgs>());
            set => _stopConditions = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("targets")]
        private InputList<Inputs.ExperimentTemplateTargetGetArgs>? _targets;
        public InputList<Inputs.ExperimentTemplateTargetGetArgs> Targets
        {
            get => _targets ?? (_targets = new InputList<Inputs.ExperimentTemplateTargetGetArgs>());
            set => _targets = value;
        }

        public ExperimentTemplateState()
        {
        }
        public static new ExperimentTemplateState Empty => new ExperimentTemplateState();
    }
}
