// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.ElasticSearch
{
    /// <summary>
    /// Manages an AWS Elasticsearch Domain.
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/elasticsearch_domain.html.markdown.
    /// </summary>
    public partial class Domain : Pulumi.CustomResource
    {
        /// <summary>
        /// IAM policy document specifying the access policies for the domain
        /// </summary>
        [Output("accessPolicies")]
        public Output<string> AccessPolicies { get; private set; } = null!;

        /// <summary>
        /// Key-value string pairs to specify advanced configuration options.
        /// Note that the values for these configuration options must be strings (wrapped in quotes) or they
        /// may be wrong and cause a perpetual diff, causing this provider to want to recreate your Elasticsearch
        /// domain on every apply.
        /// </summary>
        [Output("advancedOptions")]
        public Output<ImmutableDictionary<string, object>> AdvancedOptions { get; private set; } = null!;

        /// <summary>
        /// Amazon Resource Name (ARN) of the domain.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// Cluster configuration of the domain, see below.
        /// </summary>
        [Output("clusterConfig")]
        public Output<Outputs.DomainClusterConfig> ClusterConfig { get; private set; } = null!;

        [Output("cognitoOptions")]
        public Output<Outputs.DomainCognitoOptions?> CognitoOptions { get; private set; } = null!;

        /// <summary>
        /// Domain endpoint HTTP(S) related options. See below.
        /// </summary>
        [Output("domainEndpointOptions")]
        public Output<Outputs.DomainDomainEndpointOptions> DomainEndpointOptions { get; private set; } = null!;

        /// <summary>
        /// Unique identifier for the domain.
        /// </summary>
        [Output("domainId")]
        public Output<string> DomainId { get; private set; } = null!;

        /// <summary>
        /// Name of the domain.
        /// </summary>
        [Output("domainName")]
        public Output<string> DomainName { get; private set; } = null!;

        /// <summary>
        /// EBS related options, may be required based on chosen [instance size](https://aws.amazon.com/elasticsearch-service/pricing/). See below.
        /// </summary>
        [Output("ebsOptions")]
        public Output<Outputs.DomainEbsOptions> EbsOptions { get; private set; } = null!;

        /// <summary>
        /// The version of Elasticsearch to deploy. Defaults to `1.5`
        /// </summary>
        [Output("elasticsearchVersion")]
        public Output<string?> ElasticsearchVersion { get; private set; } = null!;

        /// <summary>
        /// Encrypt at rest options. Only available for [certain instance types](http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/aes-supported-instance-types.html). See below.
        /// </summary>
        [Output("encryptAtRest")]
        public Output<Outputs.DomainEncryptAtRest> EncryptAtRest { get; private set; } = null!;

        /// <summary>
        /// Domain-specific endpoint used to submit index, search, and data upload requests.
        /// </summary>
        [Output("endpoint")]
        public Output<string> Endpoint { get; private set; } = null!;

        /// <summary>
        /// Domain-specific endpoint for kibana without https scheme.
        /// * `vpc_options.0.availability_zones` - If the domain was created inside a VPC, the names of the availability zones the configured `subnet_ids` were created inside.
        /// * `vpc_options.0.vpc_id` - If the domain was created inside a VPC, the ID of the VPC.
        /// </summary>
        [Output("kibanaEndpoint")]
        public Output<string> KibanaEndpoint { get; private set; } = null!;

        /// <summary>
        /// Options for publishing slow logs to CloudWatch Logs.
        /// </summary>
        [Output("logPublishingOptions")]
        public Output<ImmutableArray<Outputs.DomainLogPublishingOptions>> LogPublishingOptions { get; private set; } = null!;

        /// <summary>
        /// Node-to-node encryption options. See below.
        /// </summary>
        [Output("nodeToNodeEncryption")]
        public Output<Outputs.DomainNodeToNodeEncryption> NodeToNodeEncryption { get; private set; } = null!;

        /// <summary>
        /// Snapshot related options, see below.
        /// </summary>
        [Output("snapshotOptions")]
        public Output<Outputs.DomainSnapshotOptions?> SnapshotOptions { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags to assign to the resource
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, object>?> Tags { get; private set; } = null!;

        /// <summary>
        /// VPC related options, see below. Adding or removing this configuration forces a new resource ([documentation](https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html#es-vpc-limitations)).
        /// </summary>
        [Output("vpcOptions")]
        public Output<Outputs.DomainVpcOptions?> VpcOptions { get; private set; } = null!;


        /// <summary>
        /// Create a Domain resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Domain(string name, DomainArgs? args = null, CustomResourceOptions? options = null)
            : base("aws:elasticsearch/domain:Domain", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private Domain(string name, Input<string> id, DomainState? state = null, CustomResourceOptions? options = null)
            : base("aws:elasticsearch/domain:Domain", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Domain resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Domain Get(string name, Input<string> id, DomainState? state = null, CustomResourceOptions? options = null)
        {
            return new Domain(name, id, state, options);
        }
    }

    public sealed class DomainArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// IAM policy document specifying the access policies for the domain
        /// </summary>
        [Input("accessPolicies")]
        public Input<string>? AccessPolicies { get; set; }

        [Input("advancedOptions")]
        private InputMap<object>? _advancedOptions;

        /// <summary>
        /// Key-value string pairs to specify advanced configuration options.
        /// Note that the values for these configuration options must be strings (wrapped in quotes) or they
        /// may be wrong and cause a perpetual diff, causing this provider to want to recreate your Elasticsearch
        /// domain on every apply.
        /// </summary>
        public InputMap<object> AdvancedOptions
        {
            get => _advancedOptions ?? (_advancedOptions = new InputMap<object>());
            set => _advancedOptions = value;
        }

        /// <summary>
        /// Cluster configuration of the domain, see below.
        /// </summary>
        [Input("clusterConfig")]
        public Input<Inputs.DomainClusterConfigArgs>? ClusterConfig { get; set; }

        [Input("cognitoOptions")]
        public Input<Inputs.DomainCognitoOptionsArgs>? CognitoOptions { get; set; }

        /// <summary>
        /// Domain endpoint HTTP(S) related options. See below.
        /// </summary>
        [Input("domainEndpointOptions")]
        public Input<Inputs.DomainDomainEndpointOptionsArgs>? DomainEndpointOptions { get; set; }

        /// <summary>
        /// Name of the domain.
        /// </summary>
        [Input("domainName")]
        public Input<string>? DomainName { get; set; }

        /// <summary>
        /// EBS related options, may be required based on chosen [instance size](https://aws.amazon.com/elasticsearch-service/pricing/). See below.
        /// </summary>
        [Input("ebsOptions")]
        public Input<Inputs.DomainEbsOptionsArgs>? EbsOptions { get; set; }

        /// <summary>
        /// The version of Elasticsearch to deploy. Defaults to `1.5`
        /// </summary>
        [Input("elasticsearchVersion")]
        public Input<string>? ElasticsearchVersion { get; set; }

        /// <summary>
        /// Encrypt at rest options. Only available for [certain instance types](http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/aes-supported-instance-types.html). See below.
        /// </summary>
        [Input("encryptAtRest")]
        public Input<Inputs.DomainEncryptAtRestArgs>? EncryptAtRest { get; set; }

        [Input("logPublishingOptions")]
        private InputList<Inputs.DomainLogPublishingOptionsArgs>? _logPublishingOptions;

        /// <summary>
        /// Options for publishing slow logs to CloudWatch Logs.
        /// </summary>
        public InputList<Inputs.DomainLogPublishingOptionsArgs> LogPublishingOptions
        {
            get => _logPublishingOptions ?? (_logPublishingOptions = new InputList<Inputs.DomainLogPublishingOptionsArgs>());
            set => _logPublishingOptions = value;
        }

        /// <summary>
        /// Node-to-node encryption options. See below.
        /// </summary>
        [Input("nodeToNodeEncryption")]
        public Input<Inputs.DomainNodeToNodeEncryptionArgs>? NodeToNodeEncryption { get; set; }

        /// <summary>
        /// Snapshot related options, see below.
        /// </summary>
        [Input("snapshotOptions")]
        public Input<Inputs.DomainSnapshotOptionsArgs>? SnapshotOptions { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        /// <summary>
        /// VPC related options, see below. Adding or removing this configuration forces a new resource ([documentation](https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html#es-vpc-limitations)).
        /// </summary>
        [Input("vpcOptions")]
        public Input<Inputs.DomainVpcOptionsArgs>? VpcOptions { get; set; }

        public DomainArgs()
        {
        }
    }

    public sealed class DomainState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// IAM policy document specifying the access policies for the domain
        /// </summary>
        [Input("accessPolicies")]
        public Input<string>? AccessPolicies { get; set; }

        [Input("advancedOptions")]
        private InputMap<object>? _advancedOptions;

        /// <summary>
        /// Key-value string pairs to specify advanced configuration options.
        /// Note that the values for these configuration options must be strings (wrapped in quotes) or they
        /// may be wrong and cause a perpetual diff, causing this provider to want to recreate your Elasticsearch
        /// domain on every apply.
        /// </summary>
        public InputMap<object> AdvancedOptions
        {
            get => _advancedOptions ?? (_advancedOptions = new InputMap<object>());
            set => _advancedOptions = value;
        }

        /// <summary>
        /// Amazon Resource Name (ARN) of the domain.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// Cluster configuration of the domain, see below.
        /// </summary>
        [Input("clusterConfig")]
        public Input<Inputs.DomainClusterConfigGetArgs>? ClusterConfig { get; set; }

        [Input("cognitoOptions")]
        public Input<Inputs.DomainCognitoOptionsGetArgs>? CognitoOptions { get; set; }

        /// <summary>
        /// Domain endpoint HTTP(S) related options. See below.
        /// </summary>
        [Input("domainEndpointOptions")]
        public Input<Inputs.DomainDomainEndpointOptionsGetArgs>? DomainEndpointOptions { get; set; }

        /// <summary>
        /// Unique identifier for the domain.
        /// </summary>
        [Input("domainId")]
        public Input<string>? DomainId { get; set; }

        /// <summary>
        /// Name of the domain.
        /// </summary>
        [Input("domainName")]
        public Input<string>? DomainName { get; set; }

        /// <summary>
        /// EBS related options, may be required based on chosen [instance size](https://aws.amazon.com/elasticsearch-service/pricing/). See below.
        /// </summary>
        [Input("ebsOptions")]
        public Input<Inputs.DomainEbsOptionsGetArgs>? EbsOptions { get; set; }

        /// <summary>
        /// The version of Elasticsearch to deploy. Defaults to `1.5`
        /// </summary>
        [Input("elasticsearchVersion")]
        public Input<string>? ElasticsearchVersion { get; set; }

        /// <summary>
        /// Encrypt at rest options. Only available for [certain instance types](http://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/aes-supported-instance-types.html). See below.
        /// </summary>
        [Input("encryptAtRest")]
        public Input<Inputs.DomainEncryptAtRestGetArgs>? EncryptAtRest { get; set; }

        /// <summary>
        /// Domain-specific endpoint used to submit index, search, and data upload requests.
        /// </summary>
        [Input("endpoint")]
        public Input<string>? Endpoint { get; set; }

        /// <summary>
        /// Domain-specific endpoint for kibana without https scheme.
        /// * `vpc_options.0.availability_zones` - If the domain was created inside a VPC, the names of the availability zones the configured `subnet_ids` were created inside.
        /// * `vpc_options.0.vpc_id` - If the domain was created inside a VPC, the ID of the VPC.
        /// </summary>
        [Input("kibanaEndpoint")]
        public Input<string>? KibanaEndpoint { get; set; }

        [Input("logPublishingOptions")]
        private InputList<Inputs.DomainLogPublishingOptionsGetArgs>? _logPublishingOptions;

        /// <summary>
        /// Options for publishing slow logs to CloudWatch Logs.
        /// </summary>
        public InputList<Inputs.DomainLogPublishingOptionsGetArgs> LogPublishingOptions
        {
            get => _logPublishingOptions ?? (_logPublishingOptions = new InputList<Inputs.DomainLogPublishingOptionsGetArgs>());
            set => _logPublishingOptions = value;
        }

        /// <summary>
        /// Node-to-node encryption options. See below.
        /// </summary>
        [Input("nodeToNodeEncryption")]
        public Input<Inputs.DomainNodeToNodeEncryptionGetArgs>? NodeToNodeEncryption { get; set; }

        /// <summary>
        /// Snapshot related options, see below.
        /// </summary>
        [Input("snapshotOptions")]
        public Input<Inputs.DomainSnapshotOptionsGetArgs>? SnapshotOptions { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        /// <summary>
        /// VPC related options, see below. Adding or removing this configuration forces a new resource ([documentation](https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html#es-vpc-limitations)).
        /// </summary>
        [Input("vpcOptions")]
        public Input<Inputs.DomainVpcOptionsGetArgs>? VpcOptions { get; set; }

        public DomainState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class DomainClusterConfigArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Number of dedicated master nodes in the cluster
        /// </summary>
        [Input("dedicatedMasterCount")]
        public Input<int>? DedicatedMasterCount { get; set; }

        /// <summary>
        /// Indicates whether dedicated master nodes are enabled for the cluster.
        /// </summary>
        [Input("dedicatedMasterEnabled")]
        public Input<bool>? DedicatedMasterEnabled { get; set; }

        /// <summary>
        /// Instance type of the dedicated master nodes in the cluster.
        /// </summary>
        [Input("dedicatedMasterType")]
        public Input<string>? DedicatedMasterType { get; set; }

        /// <summary>
        /// Number of instances in the cluster.
        /// </summary>
        [Input("instanceCount")]
        public Input<int>? InstanceCount { get; set; }

        /// <summary>
        /// Instance type of data nodes in the cluster.
        /// </summary>
        [Input("instanceType")]
        public Input<string>? InstanceType { get; set; }

        /// <summary>
        /// Configuration block containing zone awareness settings. Documented below.
        /// </summary>
        [Input("zoneAwarenessConfig")]
        public Input<DomainClusterConfigZoneAwarenessConfigArgs>? ZoneAwarenessConfig { get; set; }

        /// <summary>
        /// Indicates whether zone awareness is enabled. To enable awareness with three Availability Zones, the `availability_zone_count` within the `zone_awareness_config` must be set to `3`.
        /// </summary>
        [Input("zoneAwarenessEnabled")]
        public Input<bool>? ZoneAwarenessEnabled { get; set; }

        public DomainClusterConfigArgs()
        {
        }
    }

    public sealed class DomainClusterConfigGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Number of dedicated master nodes in the cluster
        /// </summary>
        [Input("dedicatedMasterCount")]
        public Input<int>? DedicatedMasterCount { get; set; }

        /// <summary>
        /// Indicates whether dedicated master nodes are enabled for the cluster.
        /// </summary>
        [Input("dedicatedMasterEnabled")]
        public Input<bool>? DedicatedMasterEnabled { get; set; }

        /// <summary>
        /// Instance type of the dedicated master nodes in the cluster.
        /// </summary>
        [Input("dedicatedMasterType")]
        public Input<string>? DedicatedMasterType { get; set; }

        /// <summary>
        /// Number of instances in the cluster.
        /// </summary>
        [Input("instanceCount")]
        public Input<int>? InstanceCount { get; set; }

        /// <summary>
        /// Instance type of data nodes in the cluster.
        /// </summary>
        [Input("instanceType")]
        public Input<string>? InstanceType { get; set; }

        /// <summary>
        /// Configuration block containing zone awareness settings. Documented below.
        /// </summary>
        [Input("zoneAwarenessConfig")]
        public Input<DomainClusterConfigZoneAwarenessConfigGetArgs>? ZoneAwarenessConfig { get; set; }

        /// <summary>
        /// Indicates whether zone awareness is enabled. To enable awareness with three Availability Zones, the `availability_zone_count` within the `zone_awareness_config` must be set to `3`.
        /// </summary>
        [Input("zoneAwarenessEnabled")]
        public Input<bool>? ZoneAwarenessEnabled { get; set; }

        public DomainClusterConfigGetArgs()
        {
        }
    }

    public sealed class DomainClusterConfigZoneAwarenessConfigArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Number of Availability Zones for the domain to use with `zone_awareness_enabled`. Defaults to `2`. Valid values: `2` or `3`.
        /// </summary>
        [Input("availabilityZoneCount")]
        public Input<int>? AvailabilityZoneCount { get; set; }

        public DomainClusterConfigZoneAwarenessConfigArgs()
        {
        }
    }

    public sealed class DomainClusterConfigZoneAwarenessConfigGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Number of Availability Zones for the domain to use with `zone_awareness_enabled`. Defaults to `2`. Valid values: `2` or `3`.
        /// </summary>
        [Input("availabilityZoneCount")]
        public Input<int>? AvailabilityZoneCount { get; set; }

        public DomainClusterConfigZoneAwarenessConfigGetArgs()
        {
        }
    }

    public sealed class DomainCognitoOptionsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies whether Amazon Cognito authentication with Kibana is enabled or not
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// ID of the Cognito Identity Pool to use
        /// </summary>
        [Input("identityPoolId", required: true)]
        public Input<string> IdentityPoolId { get; set; } = null!;

        /// <summary>
        /// ARN of the IAM role that has the AmazonESCognitoAccess policy attached
        /// </summary>
        [Input("roleArn", required: true)]
        public Input<string> RoleArn { get; set; } = null!;

        /// <summary>
        /// ID of the Cognito User Pool to use
        /// </summary>
        [Input("userPoolId", required: true)]
        public Input<string> UserPoolId { get; set; } = null!;

        public DomainCognitoOptionsArgs()
        {
        }
    }

    public sealed class DomainCognitoOptionsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies whether Amazon Cognito authentication with Kibana is enabled or not
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// ID of the Cognito Identity Pool to use
        /// </summary>
        [Input("identityPoolId", required: true)]
        public Input<string> IdentityPoolId { get; set; } = null!;

        /// <summary>
        /// ARN of the IAM role that has the AmazonESCognitoAccess policy attached
        /// </summary>
        [Input("roleArn", required: true)]
        public Input<string> RoleArn { get; set; } = null!;

        /// <summary>
        /// ID of the Cognito User Pool to use
        /// </summary>
        [Input("userPoolId", required: true)]
        public Input<string> UserPoolId { get; set; } = null!;

        public DomainCognitoOptionsGetArgs()
        {
        }
    }

    public sealed class DomainDomainEndpointOptionsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether or not to require HTTPS
        /// </summary>
        [Input("enforceHttps", required: true)]
        public Input<bool> EnforceHttps { get; set; } = null!;

        [Input("tlsSecurityPolicy")]
        public Input<string>? TlsSecurityPolicy { get; set; }

        public DomainDomainEndpointOptionsArgs()
        {
        }
    }

    public sealed class DomainDomainEndpointOptionsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether or not to require HTTPS
        /// </summary>
        [Input("enforceHttps", required: true)]
        public Input<bool> EnforceHttps { get; set; } = null!;

        [Input("tlsSecurityPolicy")]
        public Input<string>? TlsSecurityPolicy { get; set; }

        public DomainDomainEndpointOptionsGetArgs()
        {
        }
    }

    public sealed class DomainEbsOptionsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether EBS volumes are attached to data nodes in the domain.
        /// </summary>
        [Input("ebsEnabled", required: true)]
        public Input<bool> EbsEnabled { get; set; } = null!;

        /// <summary>
        /// The baseline input/output (I/O) performance of EBS volumes
        /// attached to data nodes. Applicable only for the Provisioned IOPS EBS volume type.
        /// </summary>
        [Input("iops")]
        public Input<int>? Iops { get; set; }

        /// <summary>
        /// The size of EBS volumes attached to data nodes (in GB).
        /// **Required** if `ebs_enabled` is set to `true`.
        /// </summary>
        [Input("volumeSize")]
        public Input<int>? VolumeSize { get; set; }

        /// <summary>
        /// The type of EBS volumes attached to data nodes.
        /// </summary>
        [Input("volumeType")]
        public Input<string>? VolumeType { get; set; }

        public DomainEbsOptionsArgs()
        {
        }
    }

    public sealed class DomainEbsOptionsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether EBS volumes are attached to data nodes in the domain.
        /// </summary>
        [Input("ebsEnabled", required: true)]
        public Input<bool> EbsEnabled { get; set; } = null!;

        /// <summary>
        /// The baseline input/output (I/O) performance of EBS volumes
        /// attached to data nodes. Applicable only for the Provisioned IOPS EBS volume type.
        /// </summary>
        [Input("iops")]
        public Input<int>? Iops { get; set; }

        /// <summary>
        /// The size of EBS volumes attached to data nodes (in GB).
        /// **Required** if `ebs_enabled` is set to `true`.
        /// </summary>
        [Input("volumeSize")]
        public Input<int>? VolumeSize { get; set; }

        /// <summary>
        /// The type of EBS volumes attached to data nodes.
        /// </summary>
        [Input("volumeType")]
        public Input<string>? VolumeType { get; set; }

        public DomainEbsOptionsGetArgs()
        {
        }
    }

    public sealed class DomainEncryptAtRestArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies whether Amazon Cognito authentication with Kibana is enabled or not
        /// </summary>
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        /// <summary>
        /// The KMS key id to encrypt the Elasticsearch domain with. If not specified then it defaults to using the `aws/es` service KMS key.
        /// </summary>
        [Input("kmsKeyId")]
        public Input<string>? KmsKeyId { get; set; }

        public DomainEncryptAtRestArgs()
        {
        }
    }

    public sealed class DomainEncryptAtRestGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies whether Amazon Cognito authentication with Kibana is enabled or not
        /// </summary>
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        /// <summary>
        /// The KMS key id to encrypt the Elasticsearch domain with. If not specified then it defaults to using the `aws/es` service KMS key.
        /// </summary>
        [Input("kmsKeyId")]
        public Input<string>? KmsKeyId { get; set; }

        public DomainEncryptAtRestGetArgs()
        {
        }
    }

    public sealed class DomainLogPublishingOptionsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// ARN of the Cloudwatch log group to which log needs to be published.
        /// </summary>
        [Input("cloudwatchLogGroupArn", required: true)]
        public Input<string> CloudwatchLogGroupArn { get; set; } = null!;

        /// <summary>
        /// Specifies whether Amazon Cognito authentication with Kibana is enabled or not
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// A type of Elasticsearch log. Valid values: INDEX_SLOW_LOGS, SEARCH_SLOW_LOGS, ES_APPLICATION_LOGS
        /// </summary>
        [Input("logType", required: true)]
        public Input<string> LogType { get; set; } = null!;

        public DomainLogPublishingOptionsArgs()
        {
        }
    }

    public sealed class DomainLogPublishingOptionsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// ARN of the Cloudwatch log group to which log needs to be published.
        /// </summary>
        [Input("cloudwatchLogGroupArn", required: true)]
        public Input<string> CloudwatchLogGroupArn { get; set; } = null!;

        /// <summary>
        /// Specifies whether Amazon Cognito authentication with Kibana is enabled or not
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// A type of Elasticsearch log. Valid values: INDEX_SLOW_LOGS, SEARCH_SLOW_LOGS, ES_APPLICATION_LOGS
        /// </summary>
        [Input("logType", required: true)]
        public Input<string> LogType { get; set; } = null!;

        public DomainLogPublishingOptionsGetArgs()
        {
        }
    }

    public sealed class DomainNodeToNodeEncryptionArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies whether Amazon Cognito authentication with Kibana is enabled or not
        /// </summary>
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        public DomainNodeToNodeEncryptionArgs()
        {
        }
    }

    public sealed class DomainNodeToNodeEncryptionGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies whether Amazon Cognito authentication with Kibana is enabled or not
        /// </summary>
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        public DomainNodeToNodeEncryptionGetArgs()
        {
        }
    }

    public sealed class DomainSnapshotOptionsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Hour during which the service takes an automated daily
        /// snapshot of the indices in the domain.
        /// </summary>
        [Input("automatedSnapshotStartHour", required: true)]
        public Input<int> AutomatedSnapshotStartHour { get; set; } = null!;

        public DomainSnapshotOptionsArgs()
        {
        }
    }

    public sealed class DomainSnapshotOptionsGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Hour during which the service takes an automated daily
        /// snapshot of the indices in the domain.
        /// </summary>
        [Input("automatedSnapshotStartHour", required: true)]
        public Input<int> AutomatedSnapshotStartHour { get; set; } = null!;

        public DomainSnapshotOptionsGetArgs()
        {
        }
    }

    public sealed class DomainVpcOptionsArgs : Pulumi.ResourceArgs
    {
        [Input("availabilityZones")]
        private InputList<string>? _availabilityZones;
        public InputList<string> AvailabilityZones
        {
            get => _availabilityZones ?? (_availabilityZones = new InputList<string>());
            set => _availabilityZones = value;
        }

        [Input("securityGroupIds")]
        private InputList<string>? _securityGroupIds;

        /// <summary>
        /// List of VPC Security Group IDs to be applied to the Elasticsearch domain endpoints. If omitted, the default Security Group for the VPC will be used.
        /// </summary>
        public InputList<string> SecurityGroupIds
        {
            get => _securityGroupIds ?? (_securityGroupIds = new InputList<string>());
            set => _securityGroupIds = value;
        }

        [Input("subnetIds")]
        private InputList<string>? _subnetIds;

        /// <summary>
        /// List of VPC Subnet IDs for the Elasticsearch domain endpoints to be created in.
        /// </summary>
        public InputList<string> SubnetIds
        {
            get => _subnetIds ?? (_subnetIds = new InputList<string>());
            set => _subnetIds = value;
        }

        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public DomainVpcOptionsArgs()
        {
        }
    }

    public sealed class DomainVpcOptionsGetArgs : Pulumi.ResourceArgs
    {
        [Input("availabilityZones")]
        private InputList<string>? _availabilityZones;
        public InputList<string> AvailabilityZones
        {
            get => _availabilityZones ?? (_availabilityZones = new InputList<string>());
            set => _availabilityZones = value;
        }

        [Input("securityGroupIds")]
        private InputList<string>? _securityGroupIds;

        /// <summary>
        /// List of VPC Security Group IDs to be applied to the Elasticsearch domain endpoints. If omitted, the default Security Group for the VPC will be used.
        /// </summary>
        public InputList<string> SecurityGroupIds
        {
            get => _securityGroupIds ?? (_securityGroupIds = new InputList<string>());
            set => _securityGroupIds = value;
        }

        [Input("subnetIds")]
        private InputList<string>? _subnetIds;

        /// <summary>
        /// List of VPC Subnet IDs for the Elasticsearch domain endpoints to be created in.
        /// </summary>
        public InputList<string> SubnetIds
        {
            get => _subnetIds ?? (_subnetIds = new InputList<string>());
            set => _subnetIds = value;
        }

        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public DomainVpcOptionsGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class DomainClusterConfig
    {
        /// <summary>
        /// Number of dedicated master nodes in the cluster
        /// </summary>
        public readonly int? DedicatedMasterCount;
        /// <summary>
        /// Indicates whether dedicated master nodes are enabled for the cluster.
        /// </summary>
        public readonly bool? DedicatedMasterEnabled;
        /// <summary>
        /// Instance type of the dedicated master nodes in the cluster.
        /// </summary>
        public readonly string? DedicatedMasterType;
        /// <summary>
        /// Number of instances in the cluster.
        /// </summary>
        public readonly int? InstanceCount;
        /// <summary>
        /// Instance type of data nodes in the cluster.
        /// </summary>
        public readonly string? InstanceType;
        /// <summary>
        /// Configuration block containing zone awareness settings. Documented below.
        /// </summary>
        public readonly DomainClusterConfigZoneAwarenessConfig? ZoneAwarenessConfig;
        /// <summary>
        /// Indicates whether zone awareness is enabled. To enable awareness with three Availability Zones, the `availability_zone_count` within the `zone_awareness_config` must be set to `3`.
        /// </summary>
        public readonly bool? ZoneAwarenessEnabled;

        [OutputConstructor]
        private DomainClusterConfig(
            int? dedicatedMasterCount,
            bool? dedicatedMasterEnabled,
            string? dedicatedMasterType,
            int? instanceCount,
            string? instanceType,
            DomainClusterConfigZoneAwarenessConfig? zoneAwarenessConfig,
            bool? zoneAwarenessEnabled)
        {
            DedicatedMasterCount = dedicatedMasterCount;
            DedicatedMasterEnabled = dedicatedMasterEnabled;
            DedicatedMasterType = dedicatedMasterType;
            InstanceCount = instanceCount;
            InstanceType = instanceType;
            ZoneAwarenessConfig = zoneAwarenessConfig;
            ZoneAwarenessEnabled = zoneAwarenessEnabled;
        }
    }

    [OutputType]
    public sealed class DomainClusterConfigZoneAwarenessConfig
    {
        /// <summary>
        /// Number of Availability Zones for the domain to use with `zone_awareness_enabled`. Defaults to `2`. Valid values: `2` or `3`.
        /// </summary>
        public readonly int? AvailabilityZoneCount;

        [OutputConstructor]
        private DomainClusterConfigZoneAwarenessConfig(int? availabilityZoneCount)
        {
            AvailabilityZoneCount = availabilityZoneCount;
        }
    }

    [OutputType]
    public sealed class DomainCognitoOptions
    {
        /// <summary>
        /// Specifies whether Amazon Cognito authentication with Kibana is enabled or not
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// ID of the Cognito Identity Pool to use
        /// </summary>
        public readonly string IdentityPoolId;
        /// <summary>
        /// ARN of the IAM role that has the AmazonESCognitoAccess policy attached
        /// </summary>
        public readonly string RoleArn;
        /// <summary>
        /// ID of the Cognito User Pool to use
        /// </summary>
        public readonly string UserPoolId;

        [OutputConstructor]
        private DomainCognitoOptions(
            bool? enabled,
            string identityPoolId,
            string roleArn,
            string userPoolId)
        {
            Enabled = enabled;
            IdentityPoolId = identityPoolId;
            RoleArn = roleArn;
            UserPoolId = userPoolId;
        }
    }

    [OutputType]
    public sealed class DomainDomainEndpointOptions
    {
        /// <summary>
        /// Whether or not to require HTTPS
        /// </summary>
        public readonly bool EnforceHttps;
        public readonly string TlsSecurityPolicy;

        [OutputConstructor]
        private DomainDomainEndpointOptions(
            bool enforceHttps,
            string tlsSecurityPolicy)
        {
            EnforceHttps = enforceHttps;
            TlsSecurityPolicy = tlsSecurityPolicy;
        }
    }

    [OutputType]
    public sealed class DomainEbsOptions
    {
        /// <summary>
        /// Whether EBS volumes are attached to data nodes in the domain.
        /// </summary>
        public readonly bool EbsEnabled;
        /// <summary>
        /// The baseline input/output (I/O) performance of EBS volumes
        /// attached to data nodes. Applicable only for the Provisioned IOPS EBS volume type.
        /// </summary>
        public readonly int? Iops;
        /// <summary>
        /// The size of EBS volumes attached to data nodes (in GB).
        /// **Required** if `ebs_enabled` is set to `true`.
        /// </summary>
        public readonly int? VolumeSize;
        /// <summary>
        /// The type of EBS volumes attached to data nodes.
        /// </summary>
        public readonly string VolumeType;

        [OutputConstructor]
        private DomainEbsOptions(
            bool ebsEnabled,
            int? iops,
            int? volumeSize,
            string volumeType)
        {
            EbsEnabled = ebsEnabled;
            Iops = iops;
            VolumeSize = volumeSize;
            VolumeType = volumeType;
        }
    }

    [OutputType]
    public sealed class DomainEncryptAtRest
    {
        /// <summary>
        /// Specifies whether Amazon Cognito authentication with Kibana is enabled or not
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// The KMS key id to encrypt the Elasticsearch domain with. If not specified then it defaults to using the `aws/es` service KMS key.
        /// </summary>
        public readonly string KmsKeyId;

        [OutputConstructor]
        private DomainEncryptAtRest(
            bool enabled,
            string kmsKeyId)
        {
            Enabled = enabled;
            KmsKeyId = kmsKeyId;
        }
    }

    [OutputType]
    public sealed class DomainLogPublishingOptions
    {
        /// <summary>
        /// ARN of the Cloudwatch log group to which log needs to be published.
        /// </summary>
        public readonly string CloudwatchLogGroupArn;
        /// <summary>
        /// Specifies whether Amazon Cognito authentication with Kibana is enabled or not
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// A type of Elasticsearch log. Valid values: INDEX_SLOW_LOGS, SEARCH_SLOW_LOGS, ES_APPLICATION_LOGS
        /// </summary>
        public readonly string LogType;

        [OutputConstructor]
        private DomainLogPublishingOptions(
            string cloudwatchLogGroupArn,
            bool? enabled,
            string logType)
        {
            CloudwatchLogGroupArn = cloudwatchLogGroupArn;
            Enabled = enabled;
            LogType = logType;
        }
    }

    [OutputType]
    public sealed class DomainNodeToNodeEncryption
    {
        /// <summary>
        /// Specifies whether Amazon Cognito authentication with Kibana is enabled or not
        /// </summary>
        public readonly bool Enabled;

        [OutputConstructor]
        private DomainNodeToNodeEncryption(bool enabled)
        {
            Enabled = enabled;
        }
    }

    [OutputType]
    public sealed class DomainSnapshotOptions
    {
        /// <summary>
        /// Hour during which the service takes an automated daily
        /// snapshot of the indices in the domain.
        /// </summary>
        public readonly int AutomatedSnapshotStartHour;

        [OutputConstructor]
        private DomainSnapshotOptions(int automatedSnapshotStartHour)
        {
            AutomatedSnapshotStartHour = automatedSnapshotStartHour;
        }
    }

    [OutputType]
    public sealed class DomainVpcOptions
    {
        public readonly ImmutableArray<string> AvailabilityZones;
        /// <summary>
        /// List of VPC Security Group IDs to be applied to the Elasticsearch domain endpoints. If omitted, the default Security Group for the VPC will be used.
        /// </summary>
        public readonly ImmutableArray<string> SecurityGroupIds;
        /// <summary>
        /// List of VPC Subnet IDs for the Elasticsearch domain endpoints to be created in.
        /// </summary>
        public readonly ImmutableArray<string> SubnetIds;
        public readonly string VpcId;

        [OutputConstructor]
        private DomainVpcOptions(
            ImmutableArray<string> availabilityZones,
            ImmutableArray<string> securityGroupIds,
            ImmutableArray<string> subnetIds,
            string vpcId)
        {
            AvailabilityZones = availabilityZones;
            SecurityGroupIds = securityGroupIds;
            SubnetIds = subnetIds;
            VpcId = vpcId;
        }
    }
    }
}
