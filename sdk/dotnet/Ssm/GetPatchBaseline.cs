// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ssm
{
    public static class GetPatchBaseline
    {
        /// <summary>
        /// Provides an SSM Patch Baseline data source. Useful if you wish to reuse the default baselines provided.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// To retrieve a baseline provided by AWS:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var centos = Aws.Ssm.GetPatchBaseline.Invoke(new()
        ///     {
        ///         NamePrefix = "AWS-",
        ///         OperatingSystem = "CENTOS",
        ///         Owner = "AWS",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// To retrieve a baseline on your account:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var defaultCustom = Aws.Ssm.GetPatchBaseline.Invoke(new()
        ///     {
        ///         DefaultBaseline = true,
        ///         NamePrefix = "MyCustomBaseline",
        ///         OperatingSystem = "WINDOWS",
        ///         Owner = "Self",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetPatchBaselineResult> InvokeAsync(GetPatchBaselineArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPatchBaselineResult>("aws:ssm/getPatchBaseline:getPatchBaseline", args ?? new GetPatchBaselineArgs(), options.WithDefaults());

        /// <summary>
        /// Provides an SSM Patch Baseline data source. Useful if you wish to reuse the default baselines provided.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// To retrieve a baseline provided by AWS:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var centos = Aws.Ssm.GetPatchBaseline.Invoke(new()
        ///     {
        ///         NamePrefix = "AWS-",
        ///         OperatingSystem = "CENTOS",
        ///         Owner = "AWS",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// To retrieve a baseline on your account:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var defaultCustom = Aws.Ssm.GetPatchBaseline.Invoke(new()
        ///     {
        ///         DefaultBaseline = true,
        ///         NamePrefix = "MyCustomBaseline",
        ///         OperatingSystem = "WINDOWS",
        ///         Owner = "Self",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetPatchBaselineResult> Invoke(GetPatchBaselineInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPatchBaselineResult>("aws:ssm/getPatchBaseline:getPatchBaseline", args ?? new GetPatchBaselineInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPatchBaselineArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Filters the results against the baselines default_baseline field.
        /// </summary>
        [Input("defaultBaseline")]
        public bool? DefaultBaseline { get; set; }

        /// <summary>
        /// Filter results by the baseline name prefix.
        /// </summary>
        [Input("namePrefix")]
        public string? NamePrefix { get; set; }

        /// <summary>
        /// Specified OS for the baseline. Valid values: `AMAZON_LINUX`, `AMAZON_LINUX_2`, `UBUNTU`, `REDHAT_ENTERPRISE_LINUX`, `SUSE`, `CENTOS`, `ORACLE_LINUX`, `DEBIAN`, `MACOS`, `RASPBIAN` and `ROCKY_LINUX`.
        /// </summary>
        [Input("operatingSystem")]
        public string? OperatingSystem { get; set; }

        /// <summary>
        /// Owner of the baseline. Valid values: `All`, `AWS`, `Self` (the current account).
        /// </summary>
        [Input("owner", required: true)]
        public string Owner { get; set; } = null!;

        public GetPatchBaselineArgs()
        {
        }
        public static new GetPatchBaselineArgs Empty => new GetPatchBaselineArgs();
    }

    public sealed class GetPatchBaselineInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Filters the results against the baselines default_baseline field.
        /// </summary>
        [Input("defaultBaseline")]
        public Input<bool>? DefaultBaseline { get; set; }

        /// <summary>
        /// Filter results by the baseline name prefix.
        /// </summary>
        [Input("namePrefix")]
        public Input<string>? NamePrefix { get; set; }

        /// <summary>
        /// Specified OS for the baseline. Valid values: `AMAZON_LINUX`, `AMAZON_LINUX_2`, `UBUNTU`, `REDHAT_ENTERPRISE_LINUX`, `SUSE`, `CENTOS`, `ORACLE_LINUX`, `DEBIAN`, `MACOS`, `RASPBIAN` and `ROCKY_LINUX`.
        /// </summary>
        [Input("operatingSystem")]
        public Input<string>? OperatingSystem { get; set; }

        /// <summary>
        /// Owner of the baseline. Valid values: `All`, `AWS`, `Self` (the current account).
        /// </summary>
        [Input("owner", required: true)]
        public Input<string> Owner { get; set; } = null!;

        public GetPatchBaselineInvokeArgs()
        {
        }
        public static new GetPatchBaselineInvokeArgs Empty => new GetPatchBaselineInvokeArgs();
    }


    [OutputType]
    public sealed class GetPatchBaselineResult
    {
        /// <summary>
        /// List of rules used to include patches in the baseline.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPatchBaselineApprovalRuleResult> ApprovalRules;
        /// <summary>
        /// List of explicitly approved patches for the baseline.
        /// </summary>
        public readonly ImmutableArray<string> ApprovedPatches;
        /// <summary>
        /// The compliance level for approved patches.
        /// </summary>
        public readonly string ApprovedPatchesComplianceLevel;
        /// <summary>
        /// Indicates whether the list of approved patches includes non-security updates that should be applied to the instances.
        /// </summary>
        public readonly bool ApprovedPatchesEnableNonSecurity;
        public readonly bool? DefaultBaseline;
        /// <summary>
        /// Description of the baseline.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Set of global filters used to exclude patches from the baseline.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPatchBaselineGlobalFilterResult> GlobalFilters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name specified to identify the patch source.
        /// </summary>
        public readonly string Name;
        public readonly string? NamePrefix;
        public readonly string? OperatingSystem;
        public readonly string Owner;
        /// <summary>
        /// List of rejected patches.
        /// </summary>
        public readonly ImmutableArray<string> RejectedPatches;
        /// <summary>
        /// The action specified to take on patches included in the `rejected_patches` list.
        /// </summary>
        public readonly string RejectedPatchesAction;
        /// <summary>
        /// Information about the patches to use to update the managed nodes, including target operating systems and source repositories.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPatchBaselineSourceResult> Sources;

        [OutputConstructor]
        private GetPatchBaselineResult(
            ImmutableArray<Outputs.GetPatchBaselineApprovalRuleResult> approvalRules,

            ImmutableArray<string> approvedPatches,

            string approvedPatchesComplianceLevel,

            bool approvedPatchesEnableNonSecurity,

            bool? defaultBaseline,

            string description,

            ImmutableArray<Outputs.GetPatchBaselineGlobalFilterResult> globalFilters,

            string id,

            string name,

            string? namePrefix,

            string? operatingSystem,

            string owner,

            ImmutableArray<string> rejectedPatches,

            string rejectedPatchesAction,

            ImmutableArray<Outputs.GetPatchBaselineSourceResult> sources)
        {
            ApprovalRules = approvalRules;
            ApprovedPatches = approvedPatches;
            ApprovedPatchesComplianceLevel = approvedPatchesComplianceLevel;
            ApprovedPatchesEnableNonSecurity = approvedPatchesEnableNonSecurity;
            DefaultBaseline = defaultBaseline;
            Description = description;
            GlobalFilters = globalFilters;
            Id = id;
            Name = name;
            NamePrefix = namePrefix;
            OperatingSystem = operatingSystem;
            Owner = owner;
            RejectedPatches = rejectedPatches;
            RejectedPatchesAction = rejectedPatchesAction;
            Sources = sources;
        }
    }
}
