// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ssm
{
    public static class GetParametersByPath
    {
        public static Task<GetParametersByPathResult> InvokeAsync(GetParametersByPathArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetParametersByPathResult>("aws:ssm/getParametersByPath:getParametersByPath", args ?? new GetParametersByPathArgs(), options.WithDefaults());

        public static Output<GetParametersByPathResult> Invoke(GetParametersByPathInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetParametersByPathResult>("aws:ssm/getParametersByPath:getParametersByPath", args ?? new GetParametersByPathInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetParametersByPathArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The hierarchy for the parameter. Hierarchies start with a forward slash (/). The hierarchy is the parameter name except the last part of the parameter. The last part of the parameter name can't be in the path. A parameter name hierarchy can have a maximum of 15 levels. **Note:** If the parameter name (e.g., `/my-app/my-param`) is specified, the data source will not retrieve any value as designed, unless there are other parameters that happen to use the former path in their hierarchy (e.g., `/my-app/my-param/my-actual-param`).
        /// </summary>
        [Input("path", required: true)]
        public string Path { get; set; } = null!;

        /// <summary>
        /// Whether to retrieve all parameters within the hirerachy. Defaults to `false`.
        /// </summary>
        [Input("recursive")]
        public bool? Recursive { get; set; }

        /// <summary>
        /// Whether to retrieve all parameters in the hierarchy, particularly those of `SecureString` type, with their value decrypted. Defaults to `true`.
        /// </summary>
        [Input("withDecryption")]
        public bool? WithDecryption { get; set; }

        public GetParametersByPathArgs()
        {
        }
        public static new GetParametersByPathArgs Empty => new GetParametersByPathArgs();
    }

    public sealed class GetParametersByPathInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The hierarchy for the parameter. Hierarchies start with a forward slash (/). The hierarchy is the parameter name except the last part of the parameter. The last part of the parameter name can't be in the path. A parameter name hierarchy can have a maximum of 15 levels. **Note:** If the parameter name (e.g., `/my-app/my-param`) is specified, the data source will not retrieve any value as designed, unless there are other parameters that happen to use the former path in their hierarchy (e.g., `/my-app/my-param/my-actual-param`).
        /// </summary>
        [Input("path", required: true)]
        public Input<string> Path { get; set; } = null!;

        /// <summary>
        /// Whether to retrieve all parameters within the hirerachy. Defaults to `false`.
        /// </summary>
        [Input("recursive")]
        public Input<bool>? Recursive { get; set; }

        /// <summary>
        /// Whether to retrieve all parameters in the hierarchy, particularly those of `SecureString` type, with their value decrypted. Defaults to `true`.
        /// </summary>
        [Input("withDecryption")]
        public Input<bool>? WithDecryption { get; set; }

        public GetParametersByPathInvokeArgs()
        {
        }
        public static new GetParametersByPathInvokeArgs Empty => new GetParametersByPathInvokeArgs();
    }


    [OutputType]
    public sealed class GetParametersByPathResult
    {
        /// <summary>
        /// A list that contains the Amazon Resource Names (ARNs) of the retrieved parameters.
        /// </summary>
        public readonly ImmutableArray<string> Arns;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list that contains the names of the retrieved parameters.
        /// </summary>
        public readonly ImmutableArray<string> Names;
        public readonly string Path;
        public readonly bool? Recursive;
        /// <summary>
        /// A list that contains the types (`String`, `StringList`, or `SecureString`) of retrieved parameters.
        /// </summary>
        public readonly ImmutableArray<string> Types;
        /// <summary>
        /// A list that contains the retrieved parameter values. **Note:** This value is always marked as sensitive in the pulumi preview output, regardless of whether any retrieved parameters are of `SecureString` type. Use the `nonsensitive` function to override the behavior at your own risk and discretion, if you are certain that there are no sensitive values being retrieved.
        /// </summary>
        public readonly ImmutableArray<string> Values;
        public readonly bool? WithDecryption;

        [OutputConstructor]
        private GetParametersByPathResult(
            ImmutableArray<string> arns,

            string id,

            ImmutableArray<string> names,

            string path,

            bool? recursive,

            ImmutableArray<string> types,

            ImmutableArray<string> values,

            bool? withDecryption)
        {
            Arns = arns;
            Id = id;
            Names = names;
            Path = path;
            Recursive = recursive;
            Types = types;
            Values = values;
            WithDecryption = withDecryption;
        }
    }
}
