// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ssm
{
    public static class GetContactsRotation
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ### Basic Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Ssm.GetContactsRotation.Invoke(new()
        ///     {
        ///         Arn = "arn:aws:ssm-contacts:us-east-1:012345678910:rotation/example",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Task<GetContactsRotationResult> InvokeAsync(GetContactsRotationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetContactsRotationResult>("aws:ssm/getContactsRotation:getContactsRotation", args ?? new GetContactsRotationArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ### Basic Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Ssm.GetContactsRotation.Invoke(new()
        ///     {
        ///         Arn = "arn:aws:ssm-contacts:us-east-1:012345678910:rotation/example",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// </summary>
        public static Output<GetContactsRotationResult> Invoke(GetContactsRotationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetContactsRotationResult>("aws:ssm/getContactsRotation:getContactsRotation", args ?? new GetContactsRotationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetContactsRotationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the rotation.
        /// </summary>
        [Input("arn", required: true)]
        public string Arn { get; set; } = null!;

        public GetContactsRotationArgs()
        {
        }
        public static new GetContactsRotationArgs Empty => new GetContactsRotationArgs();
    }

    public sealed class GetContactsRotationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the rotation.
        /// </summary>
        [Input("arn", required: true)]
        public Input<string> Arn { get; set; } = null!;

        public GetContactsRotationInvokeArgs()
        {
        }
        public static new GetContactsRotationInvokeArgs Empty => new GetContactsRotationInvokeArgs();
    }


    [OutputType]
    public sealed class GetContactsRotationResult
    {
        public readonly string Arn;
        /// <summary>
        /// The Amazon Resource Names (ARNs) of the contacts to add to the rotation. The order in which you list the contacts is their shift order in the rotation schedule.
        /// </summary>
        public readonly ImmutableArray<string> ContactIds;
        public readonly string Id;
        /// <summary>
        /// The name for the rotation.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Information about when an on-call rotation is in effect and how long the rotation period lasts.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetContactsRotationRecurrenceResult> Recurrences;
        /// <summary>
        /// The date and time, in RFC 3339 format, that the rotation goes into effect.
        /// </summary>
        public readonly string StartTime;
        /// <summary>
        /// A map of tags to assign to the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Tags;
        /// <summary>
        /// The time zone to base the rotationâ€™s activity on in Internet Assigned Numbers Authority (IANA) format.
        /// </summary>
        public readonly string TimeZoneId;

        [OutputConstructor]
        private GetContactsRotationResult(
            string arn,

            ImmutableArray<string> contactIds,

            string id,

            string name,

            ImmutableArray<Outputs.GetContactsRotationRecurrenceResult> recurrences,

            string startTime,

            ImmutableDictionary<string, string> tags,

            string timeZoneId)
        {
            Arn = arn;
            ContactIds = contactIds;
            Id = id;
            Name = name;
            Recurrences = recurrences;
            StartTime = startTime;
            Tags = tags;
            TimeZoneId = timeZoneId;
        }
    }
}
