// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ssm
{
    [AwsResourceType("aws:ssm/parameter:Parameter")]
    public partial class Parameter : global::Pulumi.CustomResource
    {
        [Output("allowedPattern")]
        public Output<string?> AllowedPattern { get; private set; } = null!;

        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("dataType")]
        public Output<string> DataType { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("insecureValue")]
        public Output<string> InsecureValue { get; private set; } = null!;

        [Output("keyId")]
        public Output<string> KeyId { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("overwrite")]
        public Output<bool?> Overwrite { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("tier")]
        public Output<string?> Tier { get; private set; } = null!;

        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        [Output("value")]
        public Output<string> Value { get; private set; } = null!;

        [Output("version")]
        public Output<int> Version { get; private set; } = null!;


        /// <summary>
        /// Create a Parameter resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Parameter(string name, ParameterArgs args, CustomResourceOptions? options = null)
            : base("aws:ssm/parameter:Parameter", name, args ?? new ParameterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Parameter(string name, Input<string> id, ParameterState? state = null, CustomResourceOptions? options = null)
            : base("aws:ssm/parameter:Parameter", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "value",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Parameter resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Parameter Get(string name, Input<string> id, ParameterState? state = null, CustomResourceOptions? options = null)
        {
            return new Parameter(name, id, state, options);
        }
    }

    public sealed class ParameterArgs : global::Pulumi.ResourceArgs
    {
        [Input("allowedPattern")]
        public Input<string>? AllowedPattern { get; set; }

        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("dataType")]
        public Input<string>? DataType { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("insecureValue")]
        public Input<string>? InsecureValue { get; set; }

        [Input("keyId")]
        public Input<string>? KeyId { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("overwrite")]
        public Input<bool>? Overwrite { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tier")]
        public Input<string>? Tier { get; set; }

        [Input("type", required: true)]
        public InputUnion<string, Pulumi.Aws.Ssm.ParameterType> Type { get; set; } = null!;

        [Input("value")]
        private Input<string>? _value;
        public Input<string>? Value
        {
            get => _value;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _value = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        public ParameterArgs()
        {
        }
        public static new ParameterArgs Empty => new ParameterArgs();
    }

    public sealed class ParameterState : global::Pulumi.ResourceArgs
    {
        [Input("allowedPattern")]
        public Input<string>? AllowedPattern { get; set; }

        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("dataType")]
        public Input<string>? DataType { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("insecureValue")]
        public Input<string>? InsecureValue { get; set; }

        [Input("keyId")]
        public Input<string>? KeyId { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("overwrite")]
        public Input<bool>? Overwrite { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("tier")]
        public Input<string>? Tier { get; set; }

        [Input("type")]
        public InputUnion<string, Pulumi.Aws.Ssm.ParameterType>? Type { get; set; }

        [Input("value")]
        private Input<string>? _value;
        public Input<string>? Value
        {
            get => _value;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _value = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("version")]
        public Input<int>? Version { get; set; }

        public ParameterState()
        {
        }
        public static new ParameterState Empty => new ParameterState();
    }
}
