// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ssm
{
    public static class GetDocument
    {
        /// <summary>
        /// Gets the contents of the specified Systems Manager document.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// To get the contents of the document owned by AWS.
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Aws.Ssm.GetDocument.Invoke(new()
        ///     {
        ///         Name = "AWS-GatherSoftwareInventory",
        ///         DocumentFormat = "YAML",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["content"] = foo.Apply(getDocumentResult =&gt; getDocumentResult.Content),
        ///     };
        /// });
        /// ```
        /// 
        /// To get the contents of the custom document.
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.Ssm.GetDocument.Invoke(new()
        ///     {
        ///         Name = aws_ssm_document.Test.Name,
        ///         DocumentFormat = "JSON",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetDocumentResult> InvokeAsync(GetDocumentArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDocumentResult>("aws:ssm/getDocument:getDocument", args ?? new GetDocumentArgs(), options.WithDefaults());

        /// <summary>
        /// Gets the contents of the specified Systems Manager document.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// To get the contents of the document owned by AWS.
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Aws.Ssm.GetDocument.Invoke(new()
        ///     {
        ///         Name = "AWS-GatherSoftwareInventory",
        ///         DocumentFormat = "YAML",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["content"] = foo.Apply(getDocumentResult =&gt; getDocumentResult.Content),
        ///     };
        /// });
        /// ```
        /// 
        /// To get the contents of the custom document.
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Aws.Ssm.GetDocument.Invoke(new()
        ///     {
        ///         Name = aws_ssm_document.Test.Name,
        ///         DocumentFormat = "JSON",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetDocumentResult> Invoke(GetDocumentInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDocumentResult>("aws:ssm/getDocument:getDocument", args ?? new GetDocumentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDocumentArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Returns the document in the specified format. The document format can be either `JSON`, `YAML` and `TEXT`. JSON is the default format.
        /// </summary>
        [Input("documentFormat")]
        public string? DocumentFormat { get; set; }

        /// <summary>
        /// Document version for which you want information.
        /// </summary>
        [Input("documentVersion")]
        public string? DocumentVersion { get; set; }

        /// <summary>
        /// Name of the Systems Manager document.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetDocumentArgs()
        {
        }
        public static new GetDocumentArgs Empty => new GetDocumentArgs();
    }

    public sealed class GetDocumentInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Returns the document in the specified format. The document format can be either `JSON`, `YAML` and `TEXT`. JSON is the default format.
        /// </summary>
        [Input("documentFormat")]
        public Input<string>? DocumentFormat { get; set; }

        /// <summary>
        /// Document version for which you want information.
        /// </summary>
        [Input("documentVersion")]
        public Input<string>? DocumentVersion { get; set; }

        /// <summary>
        /// Name of the Systems Manager document.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetDocumentInvokeArgs()
        {
        }
        public static new GetDocumentInvokeArgs Empty => new GetDocumentInvokeArgs();
    }


    [OutputType]
    public sealed class GetDocumentResult
    {
        /// <summary>
        /// ARN of the document. If the document is an AWS managed document, this value will be set to the name of the document instead.
        /// </summary>
        public readonly string Arn;
        /// <summary>
        /// Contents of the document.
        /// </summary>
        public readonly string Content;
        public readonly string? DocumentFormat;
        /// <summary>
        /// Type of the document.
        /// </summary>
        public readonly string DocumentType;
        public readonly string? DocumentVersion;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;

        [OutputConstructor]
        private GetDocumentResult(
            string arn,

            string content,

            string? documentFormat,

            string documentType,

            string? documentVersion,

            string id,

            string name)
        {
            Arn = arn;
            Content = content;
            DocumentFormat = documentFormat;
            DocumentType = documentType;
            DocumentVersion = documentVersion;
            Id = id;
            Name = name;
        }
    }
}
