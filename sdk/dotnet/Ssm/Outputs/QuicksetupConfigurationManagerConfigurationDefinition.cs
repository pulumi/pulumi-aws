// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ssm.Outputs
{

    [OutputType]
    public sealed class QuicksetupConfigurationManagerConfigurationDefinition
    {
        public readonly string? Id;
        public readonly string? LocalDeploymentAdministrationRoleArn;
        /// <summary>
        /// Name of the IAM role used to deploy local configurations.
        /// </summary>
        public readonly string? LocalDeploymentExecutionRoleName;
        /// <summary>
        /// Parameters for the configuration definition type. Parameters for configuration definitions vary based the configuration type. See the [AWS API documentation](https://docs.aws.amazon.com/quick-setup/latest/APIReference/API_ConfigurationDefinitionInput.html) for a complete list of parameters for each configuration type.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Parameters;
        /// <summary>
        /// Type of the Quick Setup configuration.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Version of the Quick Setup type to use.
        /// </summary>
        public readonly string? TypeVersion;

        [OutputConstructor]
        private QuicksetupConfigurationManagerConfigurationDefinition(
            string? id,

            string? localDeploymentAdministrationRoleArn,

            string? localDeploymentExecutionRoleName,

            ImmutableDictionary<string, string> parameters,

            string type,

            string? typeVersion)
        {
            Id = id;
            LocalDeploymentAdministrationRoleArn = localDeploymentAdministrationRoleArn;
            LocalDeploymentExecutionRoleName = localDeploymentExecutionRoleName;
            Parameters = parameters;
            Type = type;
            TypeVersion = typeVersion;
        }
    }
}
