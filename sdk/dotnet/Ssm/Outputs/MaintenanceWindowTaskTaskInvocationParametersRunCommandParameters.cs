// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ssm.Outputs
{

    [OutputType]
    public sealed class MaintenanceWindowTaskTaskInvocationParametersRunCommandParameters
    {
        /// <summary>
        /// Information about the command(s) to execute.
        /// </summary>
        public readonly string? Comment;
        /// <summary>
        /// The SHA-256 or SHA-1 hash created by the system when the document was created. SHA-1 hashes have been deprecated.
        /// </summary>
        public readonly string? DocumentHash;
        /// <summary>
        /// SHA-256 or SHA-1. SHA-1 hashes have been deprecated. Valid values: `Sha256` and `Sha1`
        /// </summary>
        public readonly string? DocumentHashType;
        /// <summary>
        /// Configurations for sending notifications about command status changes on a per-instance basis. Documented below.
        /// </summary>
        public readonly Outputs.MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfig? NotificationConfig;
        /// <summary>
        /// The name of the Amazon S3 bucket.
        /// </summary>
        public readonly string? OutputS3Bucket;
        /// <summary>
        /// The Amazon S3 bucket subfolder.
        /// </summary>
        public readonly string? OutputS3KeyPrefix;
        /// <summary>
        /// The parameters for the RUN_COMMAND task execution. Documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameter> Parameters;
        /// <summary>
        /// The IAM service role to assume during task execution.
        /// </summary>
        public readonly string? ServiceRoleArn;
        /// <summary>
        /// If this time is reached and the command has not already started executing, it doesn't run.
        /// </summary>
        public readonly int? TimeoutSeconds;

        [OutputConstructor]
        private MaintenanceWindowTaskTaskInvocationParametersRunCommandParameters(
            string? comment,

            string? documentHash,

            string? documentHashType,

            Outputs.MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfig? notificationConfig,

            string? outputS3Bucket,

            string? outputS3KeyPrefix,

            ImmutableArray<Outputs.MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersParameter> parameters,

            string? serviceRoleArn,

            int? timeoutSeconds)
        {
            Comment = comment;
            DocumentHash = documentHash;
            DocumentHashType = documentHashType;
            NotificationConfig = notificationConfig;
            OutputS3Bucket = outputS3Bucket;
            OutputS3KeyPrefix = outputS3KeyPrefix;
            Parameters = parameters;
            ServiceRoleArn = serviceRoleArn;
            TimeoutSeconds = timeoutSeconds;
        }
    }
}
