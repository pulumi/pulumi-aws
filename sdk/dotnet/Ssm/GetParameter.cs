// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ssm
{
    public static class GetParameter
    {
        /// <summary>
        /// Provides an SSM Parameter data source.
        /// 
        /// ## Example Usage
        /// 
        /// ### Default
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Aws.Ssm.GetParameter.Invoke(new()
        ///     {
        ///         Name = "foo",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ### With version
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Aws.Ssm.GetParameter.Invoke(new()
        ///     {
        ///         Name = "foo:3",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// &gt; **Note:** The unencrypted value of a SecureString will be stored in the raw state as plain-text.
        /// </summary>
        public static Task<GetParameterResult> InvokeAsync(GetParameterArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetParameterResult>("aws:ssm/getParameter:getParameter", args ?? new GetParameterArgs(), options.WithDefaults());

        /// <summary>
        /// Provides an SSM Parameter data source.
        /// 
        /// ## Example Usage
        /// 
        /// ### Default
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Aws.Ssm.GetParameter.Invoke(new()
        ///     {
        ///         Name = "foo",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ### With version
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Aws.Ssm.GetParameter.Invoke(new()
        ///     {
        ///         Name = "foo:3",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// &gt; **Note:** The unencrypted value of a SecureString will be stored in the raw state as plain-text.
        /// </summary>
        public static Output<GetParameterResult> Invoke(GetParameterInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetParameterResult>("aws:ssm/getParameter:getParameter", args ?? new GetParameterInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Provides an SSM Parameter data source.
        /// 
        /// ## Example Usage
        /// 
        /// ### Default
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Aws.Ssm.GetParameter.Invoke(new()
        ///     {
        ///         Name = "foo",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ### With version
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Aws.Ssm.GetParameter.Invoke(new()
        ///     {
        ///         Name = "foo:3",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// &gt; **Note:** The unencrypted value of a SecureString will be stored in the raw state as plain-text.
        /// </summary>
        public static Output<GetParameterResult> Invoke(GetParameterInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetParameterResult>("aws:ssm/getParameter:getParameter", args ?? new GetParameterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetParameterArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the parameter. To query by parameter version use `name:version` (e.g., `foo:3`).
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public string? Region { get; set; }

        /// <summary>
        /// Whether to return decrypted `SecureString` value. Defaults to `true`.
        /// </summary>
        [Input("withDecryption")]
        public bool? WithDecryption { get; set; }

        public GetParameterArgs()
        {
        }
        public static new GetParameterArgs Empty => new GetParameterArgs();
    }

    public sealed class GetParameterInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the parameter. To query by parameter version use `name:version` (e.g., `foo:3`).
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Whether to return decrypted `SecureString` value. Defaults to `true`.
        /// </summary>
        [Input("withDecryption")]
        public Input<bool>? WithDecryption { get; set; }

        public GetParameterInvokeArgs()
        {
        }
        public static new GetParameterInvokeArgs Empty => new GetParameterInvokeArgs();
    }


    [OutputType]
    public sealed class GetParameterResult
    {
        /// <summary>
        /// ARN of the parameter.
        /// </summary>
        public readonly string Arn;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Value of the parameter. **Use caution:** This value is never marked as sensitive.
        /// </summary>
        public readonly string InsecureValue;
        /// <summary>
        /// Name of the parameter.
        /// </summary>
        public readonly string Name;
        public readonly string Region;
        /// <summary>
        /// Type of the parameter. Valid types are `String`, `StringList` and `SecureString`.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Value of the parameter. This value is always marked as sensitive in the pulumi preview output, regardless of `type`.
        /// </summary>
        public readonly string Value;
        /// <summary>
        /// Version of the parameter.
        /// </summary>
        public readonly int Version;
        public readonly bool? WithDecryption;

        [OutputConstructor]
        private GetParameterResult(
            string arn,

            string id,

            string insecureValue,

            string name,

            string region,

            string type,

            string value,

            int version,

            bool? withDecryption)
        {
            Arn = arn;
            Id = id;
            InsecureValue = insecureValue;
            Name = name;
            Region = region;
            Type = type;
            Value = value;
            Version = version;
            WithDecryption = withDecryption;
        }
    }
}
