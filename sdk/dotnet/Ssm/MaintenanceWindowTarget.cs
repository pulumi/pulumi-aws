// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Ssm
{
    /// <summary>
    /// Provides an SSM Maintenance Window Target resource
    /// 
    /// ## Instance Target Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var window = new Aws.Ssm.MaintenanceWindow("window", new Aws.Ssm.MaintenanceWindowArgs
    ///         {
    ///             Schedule = "cron(0 16 ? * TUE *)",
    ///             Duration = 3,
    ///             Cutoff = 1,
    ///         });
    ///         var target1 = new Aws.Ssm.MaintenanceWindowTarget("target1", new Aws.Ssm.MaintenanceWindowTargetArgs
    ///         {
    ///             WindowId = window.Id,
    ///             Description = "This is a maintenance window target",
    ///             ResourceType = "INSTANCE",
    ///             Targets = 
    ///             {
    ///                 new Aws.Ssm.Inputs.MaintenanceWindowTargetTargetArgs
    ///                 {
    ///                     Key = "tag:Name",
    ///                     Values = 
    ///                     {
    ///                         "acceptance_test",
    ///                     },
    ///                 },
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Resource Group Target Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var window = new Aws.Ssm.MaintenanceWindow("window", new Aws.Ssm.MaintenanceWindowArgs
    ///         {
    ///             Schedule = "cron(0 16 ? * TUE *)",
    ///             Duration = 3,
    ///             Cutoff = 1,
    ///         });
    ///         var target1 = new Aws.Ssm.MaintenanceWindowTarget("target1", new Aws.Ssm.MaintenanceWindowTargetArgs
    ///         {
    ///             WindowId = window.Id,
    ///             Description = "This is a maintenance window target",
    ///             ResourceType = "RESOURCE_GROUP",
    ///             Targets = 
    ///             {
    ///                 new Aws.Ssm.Inputs.MaintenanceWindowTargetTargetArgs
    ///                 {
    ///                     Key = "resource-groups:ResourceTypeFilters",
    ///                     Values = 
    ///                     {
    ///                         "AWS::EC2::Instance",
    ///                     },
    ///                 },
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// SSM Maintenance Window targets can be imported using `WINDOW_ID/WINDOW_TARGET_ID`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import aws:ssm/maintenanceWindowTarget:MaintenanceWindowTarget example mw-0c50858d01EXAMPLE/23639a0b-ddbc-4bca-9e72-78d96EXAMPLE
    /// ```
    /// </summary>
    public partial class MaintenanceWindowTarget : Pulumi.CustomResource
    {
        /// <summary>
        /// The description of the maintenance window target.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The name of the maintenance window target.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// User-provided value that will be included in any CloudWatch events raised while running tasks for these targets in this Maintenance Window.
        /// </summary>
        [Output("ownerInformation")]
        public Output<string?> OwnerInformation { get; private set; } = null!;

        /// <summary>
        /// The type of target being registered with the Maintenance Window. Possible values are `INSTANCE` and `RESOURCE_GROUP`.
        /// </summary>
        [Output("resourceType")]
        public Output<string> ResourceType { get; private set; } = null!;

        /// <summary>
        /// The targets to register with the maintenance window. In other words, the instances to run commands on when the maintenance window runs. You can specify targets using instance IDs, resource group names, or tags that have been applied to instances. For more information about these examples formats see
        /// (https://docs.aws.amazon.com/systems-manager/latest/userguide/mw-cli-tutorial-targets-examples.html)
        /// </summary>
        [Output("targets")]
        public Output<ImmutableArray<Outputs.MaintenanceWindowTargetTarget>> Targets { get; private set; } = null!;

        /// <summary>
        /// The Id of the maintenance window to register the target with.
        /// </summary>
        [Output("windowId")]
        public Output<string> WindowId { get; private set; } = null!;


        /// <summary>
        /// Create a MaintenanceWindowTarget resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MaintenanceWindowTarget(string name, MaintenanceWindowTargetArgs args, CustomResourceOptions? options = null)
            : base("aws:ssm/maintenanceWindowTarget:MaintenanceWindowTarget", name, args ?? new MaintenanceWindowTargetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MaintenanceWindowTarget(string name, Input<string> id, MaintenanceWindowTargetState? state = null, CustomResourceOptions? options = null)
            : base("aws:ssm/maintenanceWindowTarget:MaintenanceWindowTarget", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MaintenanceWindowTarget resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MaintenanceWindowTarget Get(string name, Input<string> id, MaintenanceWindowTargetState? state = null, CustomResourceOptions? options = null)
        {
            return new MaintenanceWindowTarget(name, id, state, options);
        }
    }

    public sealed class MaintenanceWindowTargetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the maintenance window target.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the maintenance window target.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// User-provided value that will be included in any CloudWatch events raised while running tasks for these targets in this Maintenance Window.
        /// </summary>
        [Input("ownerInformation")]
        public Input<string>? OwnerInformation { get; set; }

        /// <summary>
        /// The type of target being registered with the Maintenance Window. Possible values are `INSTANCE` and `RESOURCE_GROUP`.
        /// </summary>
        [Input("resourceType", required: true)]
        public Input<string> ResourceType { get; set; } = null!;

        [Input("targets", required: true)]
        private InputList<Inputs.MaintenanceWindowTargetTargetArgs>? _targets;

        /// <summary>
        /// The targets to register with the maintenance window. In other words, the instances to run commands on when the maintenance window runs. You can specify targets using instance IDs, resource group names, or tags that have been applied to instances. For more information about these examples formats see
        /// (https://docs.aws.amazon.com/systems-manager/latest/userguide/mw-cli-tutorial-targets-examples.html)
        /// </summary>
        public InputList<Inputs.MaintenanceWindowTargetTargetArgs> Targets
        {
            get => _targets ?? (_targets = new InputList<Inputs.MaintenanceWindowTargetTargetArgs>());
            set => _targets = value;
        }

        /// <summary>
        /// The Id of the maintenance window to register the target with.
        /// </summary>
        [Input("windowId", required: true)]
        public Input<string> WindowId { get; set; } = null!;

        public MaintenanceWindowTargetArgs()
        {
        }
    }

    public sealed class MaintenanceWindowTargetState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the maintenance window target.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the maintenance window target.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// User-provided value that will be included in any CloudWatch events raised while running tasks for these targets in this Maintenance Window.
        /// </summary>
        [Input("ownerInformation")]
        public Input<string>? OwnerInformation { get; set; }

        /// <summary>
        /// The type of target being registered with the Maintenance Window. Possible values are `INSTANCE` and `RESOURCE_GROUP`.
        /// </summary>
        [Input("resourceType")]
        public Input<string>? ResourceType { get; set; }

        [Input("targets")]
        private InputList<Inputs.MaintenanceWindowTargetTargetGetArgs>? _targets;

        /// <summary>
        /// The targets to register with the maintenance window. In other words, the instances to run commands on when the maintenance window runs. You can specify targets using instance IDs, resource group names, or tags that have been applied to instances. For more information about these examples formats see
        /// (https://docs.aws.amazon.com/systems-manager/latest/userguide/mw-cli-tutorial-targets-examples.html)
        /// </summary>
        public InputList<Inputs.MaintenanceWindowTargetTargetGetArgs> Targets
        {
            get => _targets ?? (_targets = new InputList<Inputs.MaintenanceWindowTargetTargetGetArgs>());
            set => _targets = value;
        }

        /// <summary>
        /// The Id of the maintenance window to register the target with.
        /// </summary>
        [Input("windowId")]
        public Input<string>? WindowId { get; set; }

        public MaintenanceWindowTargetState()
        {
        }
    }
}
