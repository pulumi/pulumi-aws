// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.SecurityLake.Outputs
{

    [OutputType]
    public sealed class SubscriberNotificationConfigurationHttpsNotificationConfiguration
    {
        /// <summary>
        /// The API key name for the notification subscription.
        /// </summary>
        public readonly string? AuthorizationApiKeyName;
        /// <summary>
        /// The API key value for the notification subscription.
        /// </summary>
        public readonly string? AuthorizationApiKeyValue;
        /// <summary>
        /// The subscription endpoint in Security Lake.
        /// If you prefer notification with an HTTPS endpoint, populate this field.
        /// </summary>
        public readonly string Endpoint;
        /// <summary>
        /// The HTTP method used for the notification subscription.
        /// Valid values are `POST` and `PUT`.
        /// </summary>
        public readonly string? HttpMethod;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the EventBridge API destinations IAM role that you created.
        /// For more information about ARNs and how to use them in policies, see Managing data access and AWS Managed Policies in the Amazon Security Lake User Guide.
        /// </summary>
        public readonly string TargetRoleArn;

        [OutputConstructor]
        private SubscriberNotificationConfigurationHttpsNotificationConfiguration(
            string? authorizationApiKeyName,

            string? authorizationApiKeyValue,

            string endpoint,

            string? httpMethod,

            string targetRoleArn)
        {
            AuthorizationApiKeyName = authorizationApiKeyName;
            AuthorizationApiKeyValue = authorizationApiKeyValue;
            Endpoint = endpoint;
            HttpMethod = httpMethod;
            TargetRoleArn = targetRoleArn;
        }
    }
}
