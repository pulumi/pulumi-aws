// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Route53.Inputs
{

    public sealed class GetTrafficPolicyDocumentRuleArgs : global::Pulumi.InvokeArgs
    {
        [Input("geoProximityLocations")]
        private List<Inputs.GetTrafficPolicyDocumentRuleGeoProximityLocationArgs>? _geoProximityLocations;

        /// <summary>
        /// Configuration block for when you add a geoproximity rule, you configure Amazon Route 53 to route traffic to your resources based on the geographic location of your resources. Only valid for `geoproximity` type. See below
        /// </summary>
        public List<Inputs.GetTrafficPolicyDocumentRuleGeoProximityLocationArgs> GeoProximityLocations
        {
            get => _geoProximityLocations ?? (_geoProximityLocations = new List<Inputs.GetTrafficPolicyDocumentRuleGeoProximityLocationArgs>());
            set => _geoProximityLocations = value;
        }

        /// <summary>
        /// ID of a rule you want to assign.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        [Input("items")]
        private List<Inputs.GetTrafficPolicyDocumentRuleItemArgs>? _items;

        /// <summary>
        /// Configuration block for when you add a multivalue answer rule, you configure your traffic policy to route traffic approximately randomly to your healthy resources.  Only valid for `multivalue` type. See below
        /// </summary>
        public List<Inputs.GetTrafficPolicyDocumentRuleItemArgs> Items
        {
            get => _items ?? (_items = new List<Inputs.GetTrafficPolicyDocumentRuleItemArgs>());
            set => _items = value;
        }

        [Input("locations")]
        private List<Inputs.GetTrafficPolicyDocumentRuleLocationArgs>? _locations;

        /// <summary>
        /// Configuration block for when you add a geolocation rule, you configure your traffic policy to route your traffic based on the geographic location of your users.  Only valid for `geo` type. See below
        /// </summary>
        public List<Inputs.GetTrafficPolicyDocumentRuleLocationArgs> Locations
        {
            get => _locations ?? (_locations = new List<Inputs.GetTrafficPolicyDocumentRuleLocationArgs>());
            set => _locations = value;
        }

        /// <summary>
        /// Configuration block for the settings for the rule or endpoint that you want to route traffic to whenever the corresponding resources are available. Only valid for `failover` type. See below
        /// </summary>
        [Input("primary")]
        public Inputs.GetTrafficPolicyDocumentRulePrimaryArgs? Primary { get; set; }

        [Input("regions")]
        private List<Inputs.GetTrafficPolicyDocumentRuleRegionArgs>? _regions;

        /// <summary>
        /// To route traffic to an Amazon S3 bucket that is configured as a website endpoint, specify the region in which you created the bucket for `region`.
        /// </summary>
        public List<Inputs.GetTrafficPolicyDocumentRuleRegionArgs> Regions
        {
            get => _regions ?? (_regions = new List<Inputs.GetTrafficPolicyDocumentRuleRegionArgs>());
            set => _regions = value;
        }

        /// <summary>
        /// Configuration block for the rule or endpoint that you want to route traffic to whenever the primary resources are not available. Only valid for `failover` type. See below
        /// </summary>
        [Input("secondary")]
        public Inputs.GetTrafficPolicyDocumentRuleSecondaryArgs? Secondary { get; set; }

        /// <summary>
        /// Type of the rule.
        /// </summary>
        [Input("type")]
        public string? Type { get; set; }

        public GetTrafficPolicyDocumentRuleArgs()
        {
        }
        public static new GetTrafficPolicyDocumentRuleArgs Empty => new GetTrafficPolicyDocumentRuleArgs();
    }
}
