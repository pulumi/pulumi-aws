// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Route53.Inputs
{

    public sealed class RecordsExclusiveResourceRecordSetGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Alias target block.
        /// See `alias_target` below.
        /// </summary>
        [Input("aliasTarget")]
        public Input<Inputs.RecordsExclusiveResourceRecordSetAliasTargetGetArgs>? AliasTarget { get; set; }

        [Input("cidrRoutingConfig")]
        public Input<Inputs.RecordsExclusiveResourceRecordSetCidrRoutingConfigGetArgs>? CidrRoutingConfig { get; set; }

        /// <summary>
        /// Type of failover resource record.
        /// Valid values are `PRIMARY` and `SECONDARY`.
        /// See the [AWS documentation on DNS failover](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html) for additional details.
        /// </summary>
        [Input("failover")]
        public Input<string>? Failover { get; set; }

        /// <summary>
        /// Geolocation block to control how Amazon Route 53 responds to DNS queries based on the geographic origin of the query.
        /// See `geolocation` below.
        /// </summary>
        [Input("geolocation")]
        public Input<Inputs.RecordsExclusiveResourceRecordSetGeolocationGetArgs>? Geolocation { get; set; }

        /// <summary>
        /// Geoproximity location block.
        /// See `geoproximity_location` below.
        /// </summary>
        [Input("geoproximityLocation")]
        public Input<Inputs.RecordsExclusiveResourceRecordSetGeoproximityLocationGetArgs>? GeoproximityLocation { get; set; }

        /// <summary>
        /// Health check the record should be associated with.
        /// </summary>
        [Input("healthCheckId")]
        public Input<string>? HealthCheckId { get; set; }

        [Input("multiValueAnswer")]
        public Input<bool>? MultiValueAnswer { get; set; }

        /// <summary>
        /// Name of the record.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// AWS region of the resource this record set refers to.
        /// Must be a valid AWS region name.
        /// See the [AWS documentation](http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-latency) on latency based routing for additional details.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("resourceRecords")]
        private InputList<Inputs.RecordsExclusiveResourceRecordSetResourceRecordGetArgs>? _resourceRecords;

        /// <summary>
        /// Information about the resource records to act upon.
        /// See `resource_records` below.
        /// </summary>
        public InputList<Inputs.RecordsExclusiveResourceRecordSetResourceRecordGetArgs> ResourceRecords
        {
            get => _resourceRecords ?? (_resourceRecords = new InputList<Inputs.RecordsExclusiveResourceRecordSetResourceRecordGetArgs>());
            set => _resourceRecords = value;
        }

        /// <summary>
        /// An identifier that differentiates among multiple resource record sets that have the same combination of name and type.
        /// Required if using `cidr_routing_config`, `failover`, `geolocation`,`geoproximity_location`, `multivalue_answer`, `region`, or `weight`.
        /// </summary>
        [Input("setIdentifier")]
        public Input<string>? SetIdentifier { get; set; }

        [Input("trafficPolicyInstanceId")]
        public Input<string>? TrafficPolicyInstanceId { get; set; }

        /// <summary>
        /// Resource record cache time to live (TTL), in seconds.
        /// </summary>
        [Input("ttl")]
        public Input<int>? Ttl { get; set; }

        /// <summary>
        /// Record type.
        /// Valid values are `A`, `AAAA`, `CAA`, `CNAME`, `DS`, `MX`, `NAPTR`, `NS`, `PTR`, `SOA`, `SPF`, `SRV`, `TXT`, `TLSA`, `SSHFP`, `SVCB`, and `HTTPS`.
        /// 
        /// The following arguments are optional:
        /// 
        /// &gt; Exactly one of `resource_records` or `alias_target` must be specified.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// Among resource record sets that have the same combination of DNS name and type, a value that determines the proportion of DNS queries that Amazon Route 53 responds to using the current resource record set.
        /// </summary>
        [Input("weight")]
        public Input<int>? Weight { get; set; }

        public RecordsExclusiveResourceRecordSetGetArgs()
        {
        }
        public static new RecordsExclusiveResourceRecordSetGetArgs Empty => new RecordsExclusiveResourceRecordSetGetArgs();
    }
}
