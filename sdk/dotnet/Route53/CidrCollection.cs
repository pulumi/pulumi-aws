// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Route53
{
    /// <summary>
    /// Provides a Route53 CIDR collection resource.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Route53.CidrCollection("example");
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// terraform import {
    /// 
    ///  to = aws_route53_cidr_collection.example
    /// 
    ///  id = "9ac32814-3e67-0932-6048-8d779cc6f511" } Using `pulumi import`, import CIDR collections using their ID. For exampleconsole % pulumi import aws_route53_cidr_collection.example 9ac32814-3e67-0932-6048-8d779cc6f511
    /// </summary>
    [AwsResourceType("aws:route53/cidrCollection:CidrCollection")]
    public partial class CidrCollection : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the CIDR collection.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// Unique name for the CIDR collection.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The lastest version of the CIDR collection.
        /// </summary>
        [Output("version")]
        public Output<int> Version { get; private set; } = null!;


        /// <summary>
        /// Create a CidrCollection resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CidrCollection(string name, CidrCollectionArgs? args = null, CustomResourceOptions? options = null)
            : base("aws:route53/cidrCollection:CidrCollection", name, args ?? new CidrCollectionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CidrCollection(string name, Input<string> id, CidrCollectionState? state = null, CustomResourceOptions? options = null)
            : base("aws:route53/cidrCollection:CidrCollection", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CidrCollection resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CidrCollection Get(string name, Input<string> id, CidrCollectionState? state = null, CustomResourceOptions? options = null)
        {
            return new CidrCollection(name, id, state, options);
        }
    }

    public sealed class CidrCollectionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Unique name for the CIDR collection.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public CidrCollectionArgs()
        {
        }
        public static new CidrCollectionArgs Empty => new CidrCollectionArgs();
    }

    public sealed class CidrCollectionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the CIDR collection.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// Unique name for the CIDR collection.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The lastest version of the CIDR collection.
        /// </summary>
        [Input("version")]
        public Input<int>? Version { get; set; }

        public CidrCollectionState()
        {
        }
        public static new CidrCollectionState Empty => new CidrCollectionState();
    }
}
