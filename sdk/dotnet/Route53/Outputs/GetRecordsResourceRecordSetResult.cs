// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Route53.Outputs
{

    [OutputType]
    public sealed class GetRecordsResourceRecordSetResult
    {
        /// <summary>
        /// Information about the AWS resource traffic is routed to.
        /// </summary>
        public readonly Outputs.GetRecordsResourceRecordSetAliasTargetResult AliasTarget;
        /// <summary>
        /// Information about the CIDR location traffic is routed to.
        /// </summary>
        public readonly Outputs.GetRecordsResourceRecordSetCidrRoutingConfigResult CidrRoutingConfig;
        /// <summary>
        /// `PRIMARY` or `SECONDARY`.
        /// </summary>
        public readonly string Failover;
        /// <summary>
        /// Information about how Amazon Route 53 responds to DNS queries based on the geographic origin of the query.
        /// </summary>
        public readonly Outputs.GetRecordsResourceRecordSetGeolocationResult Geolocation;
        /// <summary>
        /// Information about how Amazon Route 53 responds to DNS queries based on the geographic origin of the query.
        /// </summary>
        public readonly Outputs.GetRecordsResourceRecordSetGeoproximityLocationResult GeoproximityLocation;
        /// <summary>
        /// ID of any applicable health check.
        /// </summary>
        public readonly string HealthCheckId;
        /// <summary>
        /// Traffic is routed approximately randomly to multiple resources.
        /// </summary>
        public readonly bool MultiValueAnswer;
        /// <summary>
        /// The name of the record.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The Amazon EC2 Region of the resource that this resource record set refers to.
        /// </summary>
        public readonly string Region;
        /// <summary>
        /// The resource records.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRecordsResourceRecordSetResourceRecordResult> ResourceRecords;
        /// <summary>
        /// An identifier that differentiates among multiple resource record sets that have the same combination of name and type.
        /// </summary>
        public readonly string SetIdentifier;
        /// <summary>
        /// The ID of any traffic policy instance that Route 53 created this resource record set for.
        /// </summary>
        public readonly string TrafficPolicyInstanceId;
        /// <summary>
        /// The resource record cache time to live (TTL), in seconds.
        /// </summary>
        public readonly int Ttl;
        /// <summary>
        /// The DNS record type.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Among resource record sets that have the same combination of DNS name and type, a value that determines the proportion of DNS queries that Amazon Route 53 responds to using the current resource record set.
        /// </summary>
        public readonly int Weight;

        [OutputConstructor]
        private GetRecordsResourceRecordSetResult(
            Outputs.GetRecordsResourceRecordSetAliasTargetResult aliasTarget,

            Outputs.GetRecordsResourceRecordSetCidrRoutingConfigResult cidrRoutingConfig,

            string failover,

            Outputs.GetRecordsResourceRecordSetGeolocationResult geolocation,

            Outputs.GetRecordsResourceRecordSetGeoproximityLocationResult geoproximityLocation,

            string healthCheckId,

            bool multiValueAnswer,

            string name,

            string region,

            ImmutableArray<Outputs.GetRecordsResourceRecordSetResourceRecordResult> resourceRecords,

            string setIdentifier,

            string trafficPolicyInstanceId,

            int ttl,

            string type,

            int weight)
        {
            AliasTarget = aliasTarget;
            CidrRoutingConfig = cidrRoutingConfig;
            Failover = failover;
            Geolocation = geolocation;
            GeoproximityLocation = geoproximityLocation;
            HealthCheckId = healthCheckId;
            MultiValueAnswer = multiValueAnswer;
            Name = name;
            Region = region;
            ResourceRecords = resourceRecords;
            SetIdentifier = setIdentifier;
            TrafficPolicyInstanceId = trafficPolicyInstanceId;
            Ttl = ttl;
            Type = type;
            Weight = weight;
        }
    }
}
