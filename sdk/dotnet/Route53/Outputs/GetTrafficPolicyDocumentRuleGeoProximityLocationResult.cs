// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Route53.Outputs
{

    [OutputType]
    public sealed class GetTrafficPolicyDocumentRuleGeoProximityLocationResult
    {
        /// <summary>
        /// Specify a value for `bias` if you want to route more traffic to an endpoint from nearby endpoints (positive values) or route less traffic to an endpoint (negative values).
        /// </summary>
        public readonly string? Bias;
        /// <summary>
        /// References to an endpoint.
        /// </summary>
        public readonly string? EndpointReference;
        /// <summary>
        /// Indicates whether you want Amazon Route 53 to evaluate the health of the endpoint and route traffic only to healthy endpoints.
        /// </summary>
        public readonly bool? EvaluateTargetHealth;
        /// <summary>
        /// If you want to associate a health check with the endpoint or rule.
        /// </summary>
        public readonly string? HealthCheck;
        /// <summary>
        /// Represents the location south (negative) or north (positive) of the equator. Valid values are -90 degrees to 90 degrees.
        /// </summary>
        public readonly string? Latitude;
        /// <summary>
        /// Represents the location west (negative) or east (positive) of the prime meridian. Valid values are -180 degrees to 180 degrees.
        /// </summary>
        public readonly string? Longitude;
        /// <summary>
        /// Region code for the AWS Region that you created the resource in.
        /// </summary>
        public readonly string? Region;
        /// <summary>
        /// References to a rule.
        /// </summary>
        public readonly string? RuleReference;

        [OutputConstructor]
        private GetTrafficPolicyDocumentRuleGeoProximityLocationResult(
            string? bias,

            string? endpointReference,

            bool? evaluateTargetHealth,

            string? healthCheck,

            string? latitude,

            string? longitude,

            string? region,

            string? ruleReference)
        {
            Bias = bias;
            EndpointReference = endpointReference;
            EvaluateTargetHealth = evaluateTargetHealth;
            HealthCheck = healthCheck;
            Latitude = latitude;
            Longitude = longitude;
            Region = region;
            RuleReference = ruleReference;
        }
    }
}
