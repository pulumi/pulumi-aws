// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Route53
{
    /// <summary>
    /// Resource for managing an AWS Route 53 Profiles Resource Association.
    /// 
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import Route 53 Profiles Resource Association using the `example_id_arg`. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:route53/profilesResourceAssociation:ProfilesResourceAssociation example rpa-id-12345678
    /// ```
    /// </summary>
    [AwsResourceType("aws:route53/profilesResourceAssociation:ProfilesResourceAssociation")]
    public partial class ProfilesResourceAssociation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Name of the Profile Resource Association.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("ownerId")]
        public Output<string> OwnerId { get; private set; } = null!;

        /// <summary>
        /// ID of the profile associated with the VPC.
        /// </summary>
        [Output("profileId")]
        public Output<string> ProfileId { get; private set; } = null!;

        /// <summary>
        /// Resource ID of the resource to be associated with the profile.
        /// </summary>
        [Output("resourceArn")]
        public Output<string> ResourceArn { get; private set; } = null!;

        /// <summary>
        /// Resource properties for the resource to be associated with the profile.
        /// </summary>
        [Output("resourceProperties")]
        public Output<string?> ResourceProperties { get; private set; } = null!;

        /// <summary>
        /// Type of resource associated with the profile.
        /// </summary>
        [Output("resourceType")]
        public Output<string> ResourceType { get; private set; } = null!;

        /// <summary>
        /// Status of the Profile Association. Valid values [AWS docs](https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53profiles_Profile.html)
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Status message of the Profile Resource Association.
        /// </summary>
        [Output("statusMessage")]
        public Output<string> StatusMessage { get; private set; } = null!;

        [Output("timeouts")]
        public Output<Outputs.ProfilesResourceAssociationTimeouts?> Timeouts { get; private set; } = null!;


        /// <summary>
        /// Create a ProfilesResourceAssociation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ProfilesResourceAssociation(string name, ProfilesResourceAssociationArgs args, CustomResourceOptions? options = null)
            : base("aws:route53/profilesResourceAssociation:ProfilesResourceAssociation", name, args ?? new ProfilesResourceAssociationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ProfilesResourceAssociation(string name, Input<string> id, ProfilesResourceAssociationState? state = null, CustomResourceOptions? options = null)
            : base("aws:route53/profilesResourceAssociation:ProfilesResourceAssociation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ProfilesResourceAssociation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ProfilesResourceAssociation Get(string name, Input<string> id, ProfilesResourceAssociationState? state = null, CustomResourceOptions? options = null)
        {
            return new ProfilesResourceAssociation(name, id, state, options);
        }
    }

    public sealed class ProfilesResourceAssociationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the Profile Resource Association.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// ID of the profile associated with the VPC.
        /// </summary>
        [Input("profileId", required: true)]
        public Input<string> ProfileId { get; set; } = null!;

        /// <summary>
        /// Resource ID of the resource to be associated with the profile.
        /// </summary>
        [Input("resourceArn", required: true)]
        public Input<string> ResourceArn { get; set; } = null!;

        /// <summary>
        /// Resource properties for the resource to be associated with the profile.
        /// </summary>
        [Input("resourceProperties")]
        public Input<string>? ResourceProperties { get; set; }

        [Input("timeouts")]
        public Input<Inputs.ProfilesResourceAssociationTimeoutsArgs>? Timeouts { get; set; }

        public ProfilesResourceAssociationArgs()
        {
        }
        public static new ProfilesResourceAssociationArgs Empty => new ProfilesResourceAssociationArgs();
    }

    public sealed class ProfilesResourceAssociationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the Profile Resource Association.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("ownerId")]
        public Input<string>? OwnerId { get; set; }

        /// <summary>
        /// ID of the profile associated with the VPC.
        /// </summary>
        [Input("profileId")]
        public Input<string>? ProfileId { get; set; }

        /// <summary>
        /// Resource ID of the resource to be associated with the profile.
        /// </summary>
        [Input("resourceArn")]
        public Input<string>? ResourceArn { get; set; }

        /// <summary>
        /// Resource properties for the resource to be associated with the profile.
        /// </summary>
        [Input("resourceProperties")]
        public Input<string>? ResourceProperties { get; set; }

        /// <summary>
        /// Type of resource associated with the profile.
        /// </summary>
        [Input("resourceType")]
        public Input<string>? ResourceType { get; set; }

        /// <summary>
        /// Status of the Profile Association. Valid values [AWS docs](https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53profiles_Profile.html)
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Status message of the Profile Resource Association.
        /// </summary>
        [Input("statusMessage")]
        public Input<string>? StatusMessage { get; set; }

        [Input("timeouts")]
        public Input<Inputs.ProfilesResourceAssociationTimeoutsGetArgs>? Timeouts { get; set; }

        public ProfilesResourceAssociationState()
        {
        }
        public static new ProfilesResourceAssociationState Empty => new ProfilesResourceAssociationState();
    }
}
