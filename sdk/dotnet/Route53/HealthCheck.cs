// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Route53
{
    [AwsResourceType("aws:route53/healthCheck:HealthCheck")]
    public partial class HealthCheck : global::Pulumi.CustomResource
    {
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("childHealthThreshold")]
        public Output<int?> ChildHealthThreshold { get; private set; } = null!;

        [Output("childHealthchecks")]
        public Output<ImmutableArray<string>> ChildHealthchecks { get; private set; } = null!;

        [Output("cloudwatchAlarmName")]
        public Output<string?> CloudwatchAlarmName { get; private set; } = null!;

        [Output("cloudwatchAlarmRegion")]
        public Output<string?> CloudwatchAlarmRegion { get; private set; } = null!;

        [Output("disabled")]
        public Output<bool?> Disabled { get; private set; } = null!;

        [Output("enableSni")]
        public Output<bool> EnableSni { get; private set; } = null!;

        [Output("failureThreshold")]
        public Output<int> FailureThreshold { get; private set; } = null!;

        [Output("fqdn")]
        public Output<string?> Fqdn { get; private set; } = null!;

        [Output("insufficientDataHealthStatus")]
        public Output<string?> InsufficientDataHealthStatus { get; private set; } = null!;

        [Output("invertHealthcheck")]
        public Output<bool?> InvertHealthcheck { get; private set; } = null!;

        [Output("ipAddress")]
        public Output<string?> IpAddress { get; private set; } = null!;

        [Output("measureLatency")]
        public Output<bool?> MeasureLatency { get; private set; } = null!;

        [Output("port")]
        public Output<int?> Port { get; private set; } = null!;

        [Output("referenceName")]
        public Output<string?> ReferenceName { get; private set; } = null!;

        [Output("regions")]
        public Output<ImmutableArray<string>> Regions { get; private set; } = null!;

        [Output("requestInterval")]
        public Output<int?> RequestInterval { get; private set; } = null!;

        [Output("resourcePath")]
        public Output<string?> ResourcePath { get; private set; } = null!;

        [Output("routingControlArn")]
        public Output<string?> RoutingControlArn { get; private set; } = null!;

        [Output("searchString")]
        public Output<string?> SearchString { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a HealthCheck resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public HealthCheck(string name, HealthCheckArgs args, CustomResourceOptions? options = null)
            : base("aws:route53/healthCheck:HealthCheck", name, args ?? new HealthCheckArgs(), MakeResourceOptions(options, ""))
        {
        }

        private HealthCheck(string name, Input<string> id, HealthCheckState? state = null, CustomResourceOptions? options = null)
            : base("aws:route53/healthCheck:HealthCheck", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing HealthCheck resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static HealthCheck Get(string name, Input<string> id, HealthCheckState? state = null, CustomResourceOptions? options = null)
        {
            return new HealthCheck(name, id, state, options);
        }
    }

    public sealed class HealthCheckArgs : global::Pulumi.ResourceArgs
    {
        [Input("childHealthThreshold")]
        public Input<int>? ChildHealthThreshold { get; set; }

        [Input("childHealthchecks")]
        private InputList<string>? _childHealthchecks;
        public InputList<string> ChildHealthchecks
        {
            get => _childHealthchecks ?? (_childHealthchecks = new InputList<string>());
            set => _childHealthchecks = value;
        }

        [Input("cloudwatchAlarmName")]
        public Input<string>? CloudwatchAlarmName { get; set; }

        [Input("cloudwatchAlarmRegion")]
        public Input<string>? CloudwatchAlarmRegion { get; set; }

        [Input("disabled")]
        public Input<bool>? Disabled { get; set; }

        [Input("enableSni")]
        public Input<bool>? EnableSni { get; set; }

        [Input("failureThreshold")]
        public Input<int>? FailureThreshold { get; set; }

        [Input("fqdn")]
        public Input<string>? Fqdn { get; set; }

        [Input("insufficientDataHealthStatus")]
        public Input<string>? InsufficientDataHealthStatus { get; set; }

        [Input("invertHealthcheck")]
        public Input<bool>? InvertHealthcheck { get; set; }

        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        [Input("measureLatency")]
        public Input<bool>? MeasureLatency { get; set; }

        [Input("port")]
        public Input<int>? Port { get; set; }

        [Input("referenceName")]
        public Input<string>? ReferenceName { get; set; }

        [Input("regions")]
        private InputList<string>? _regions;
        public InputList<string> Regions
        {
            get => _regions ?? (_regions = new InputList<string>());
            set => _regions = value;
        }

        [Input("requestInterval")]
        public Input<int>? RequestInterval { get; set; }

        [Input("resourcePath")]
        public Input<string>? ResourcePath { get; set; }

        [Input("routingControlArn")]
        public Input<string>? RoutingControlArn { get; set; }

        [Input("searchString")]
        public Input<string>? SearchString { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public HealthCheckArgs()
        {
        }
        public static new HealthCheckArgs Empty => new HealthCheckArgs();
    }

    public sealed class HealthCheckState : global::Pulumi.ResourceArgs
    {
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("childHealthThreshold")]
        public Input<int>? ChildHealthThreshold { get; set; }

        [Input("childHealthchecks")]
        private InputList<string>? _childHealthchecks;
        public InputList<string> ChildHealthchecks
        {
            get => _childHealthchecks ?? (_childHealthchecks = new InputList<string>());
            set => _childHealthchecks = value;
        }

        [Input("cloudwatchAlarmName")]
        public Input<string>? CloudwatchAlarmName { get; set; }

        [Input("cloudwatchAlarmRegion")]
        public Input<string>? CloudwatchAlarmRegion { get; set; }

        [Input("disabled")]
        public Input<bool>? Disabled { get; set; }

        [Input("enableSni")]
        public Input<bool>? EnableSni { get; set; }

        [Input("failureThreshold")]
        public Input<int>? FailureThreshold { get; set; }

        [Input("fqdn")]
        public Input<string>? Fqdn { get; set; }

        [Input("insufficientDataHealthStatus")]
        public Input<string>? InsufficientDataHealthStatus { get; set; }

        [Input("invertHealthcheck")]
        public Input<bool>? InvertHealthcheck { get; set; }

        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        [Input("measureLatency")]
        public Input<bool>? MeasureLatency { get; set; }

        [Input("port")]
        public Input<int>? Port { get; set; }

        [Input("referenceName")]
        public Input<string>? ReferenceName { get; set; }

        [Input("regions")]
        private InputList<string>? _regions;
        public InputList<string> Regions
        {
            get => _regions ?? (_regions = new InputList<string>());
            set => _regions = value;
        }

        [Input("requestInterval")]
        public Input<int>? RequestInterval { get; set; }

        [Input("resourcePath")]
        public Input<string>? ResourcePath { get; set; }

        [Input("routingControlArn")]
        public Input<string>? RoutingControlArn { get; set; }

        [Input("searchString")]
        public Input<string>? SearchString { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("type")]
        public Input<string>? Type { get; set; }

        public HealthCheckState()
        {
        }
        public static new HealthCheckState Empty => new HealthCheckState();
    }
}
