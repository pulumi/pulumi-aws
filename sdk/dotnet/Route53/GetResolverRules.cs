// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Route53
{
    public static class GetResolverRules
    {
        public static Task<GetResolverRulesResult> InvokeAsync(GetResolverRulesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetResolverRulesResult>("aws:route53/getResolverRules:getResolverRules", args ?? new GetResolverRulesArgs(), options.WithDefaults());

        public static Output<GetResolverRulesResult> Invoke(GetResolverRulesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetResolverRulesResult>("aws:route53/getResolverRules:getResolverRules", args ?? new GetResolverRulesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetResolverRulesArgs : global::Pulumi.InvokeArgs
    {
        [Input("nameRegex")]
        public string? NameRegex { get; set; }

        [Input("ownerId")]
        public string? OwnerId { get; set; }

        [Input("resolverEndpointId")]
        public string? ResolverEndpointId { get; set; }

        [Input("ruleType")]
        public string? RuleType { get; set; }

        [Input("shareStatus")]
        public string? ShareStatus { get; set; }

        public GetResolverRulesArgs()
        {
        }
        public static new GetResolverRulesArgs Empty => new GetResolverRulesArgs();
    }

    public sealed class GetResolverRulesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("nameRegex")]
        public Input<string>? NameRegex { get; set; }

        [Input("ownerId")]
        public Input<string>? OwnerId { get; set; }

        [Input("resolverEndpointId")]
        public Input<string>? ResolverEndpointId { get; set; }

        [Input("ruleType")]
        public Input<string>? RuleType { get; set; }

        [Input("shareStatus")]
        public Input<string>? ShareStatus { get; set; }

        public GetResolverRulesInvokeArgs()
        {
        }
        public static new GetResolverRulesInvokeArgs Empty => new GetResolverRulesInvokeArgs();
    }


    [OutputType]
    public sealed class GetResolverRulesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? NameRegex;
        public readonly string? OwnerId;
        public readonly string? ResolverEndpointId;
        public readonly ImmutableArray<string> ResolverRuleIds;
        public readonly string? RuleType;
        public readonly string? ShareStatus;

        [OutputConstructor]
        private GetResolverRulesResult(
            string id,

            string? nameRegex,

            string? ownerId,

            string? resolverEndpointId,

            ImmutableArray<string> resolverRuleIds,

            string? ruleType,

            string? shareStatus)
        {
            Id = id;
            NameRegex = nameRegex;
            OwnerId = ownerId;
            ResolverEndpointId = resolverEndpointId;
            ResolverRuleIds = resolverRuleIds;
            RuleType = ruleType;
            ShareStatus = shareStatus;
        }
    }
}
