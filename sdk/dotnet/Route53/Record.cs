// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Route53
{
    /// <summary>
    /// Provides a Route53 record resource.
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/route53_record.html.markdown.
    /// </summary>
    public partial class Record : Pulumi.CustomResource
    {
        /// <summary>
        /// An alias block. Conflicts with `ttl` &amp; `records`.
        /// Alias record documented below.
        /// </summary>
        [Output("aliases")]
        public Output<ImmutableArray<Outputs.RecordAliases>> Aliases { get; private set; } = null!;

        /// <summary>
        /// Allow creation of this record to overwrite an existing record, if any. This does not affect the ability to update the record using this provider and does not prevent other resources within this provider or manual Route 53 changes outside this provider from overwriting this record. `false` by default. This configuration is not recommended for most environments.
        /// </summary>
        [Output("allowOverwrite")]
        public Output<bool> AllowOverwrite { get; private set; } = null!;

        /// <summary>
        /// A block indicating the routing behavior when associated health check fails. Conflicts with any other routing policy. Documented below.
        /// </summary>
        [Output("failoverRoutingPolicies")]
        public Output<ImmutableArray<Outputs.RecordFailoverRoutingPolicies>> FailoverRoutingPolicies { get; private set; } = null!;

        /// <summary>
        /// [FQDN](https://en.wikipedia.org/wiki/Fully_qualified_domain_name) built using the zone domain and `name`.
        /// </summary>
        [Output("fqdn")]
        public Output<string> Fqdn { get; private set; } = null!;

        /// <summary>
        /// A block indicating a routing policy based on the geolocation of the requestor. Conflicts with any other routing policy. Documented below.
        /// </summary>
        [Output("geolocationRoutingPolicies")]
        public Output<ImmutableArray<Outputs.RecordGeolocationRoutingPolicies>> GeolocationRoutingPolicies { get; private set; } = null!;

        /// <summary>
        /// The health check the record should be associated with.
        /// </summary>
        [Output("healthCheckId")]
        public Output<string?> HealthCheckId { get; private set; } = null!;

        /// <summary>
        /// A block indicating a routing policy based on the latency between the requestor and an AWS region. Conflicts with any other routing policy. Documented below.
        /// </summary>
        [Output("latencyRoutingPolicies")]
        public Output<ImmutableArray<Outputs.RecordLatencyRoutingPolicies>> LatencyRoutingPolicies { get; private set; } = null!;

        /// <summary>
        /// Set to `true` to indicate a multivalue answer routing policy. Conflicts with any other routing policy.
        /// </summary>
        [Output("multivalueAnswerRoutingPolicy")]
        public Output<bool?> MultivalueAnswerRoutingPolicy { get; private set; } = null!;

        /// <summary>
        /// DNS domain name for a CloudFront distribution, S3 bucket, ELB, or another resource record set in this hosted zone.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// A string list of records. To specify a single record value longer than 255 characters such as a TXT record for DKIM, add `\"\"` inside the configuration string (e.g. `"first255characters\"\"morecharacters"`).
        /// </summary>
        [Output("records")]
        public Output<ImmutableArray<string>> Records { get; private set; } = null!;

        /// <summary>
        /// Unique identifier to differentiate records with routing policies from one another. Required if using `failover`, `geolocation`, `latency`, or `weighted` routing policies documented below.
        /// </summary>
        [Output("setIdentifier")]
        public Output<string?> SetIdentifier { get; private set; } = null!;

        /// <summary>
        /// The TTL of the record.
        /// </summary>
        [Output("ttl")]
        public Output<int?> Ttl { get; private set; } = null!;

        /// <summary>
        /// `PRIMARY` or `SECONDARY`. A `PRIMARY` record will be served if its healthcheck is passing, otherwise the `SECONDARY` will be served. See http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-configuring-options.html#dns-failover-failover-rrsets
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// A block indicating a weighted routing policy. Conflicts with any other routing policy. Documented below.
        /// </summary>
        [Output("weightedRoutingPolicies")]
        public Output<ImmutableArray<Outputs.RecordWeightedRoutingPolicies>> WeightedRoutingPolicies { get; private set; } = null!;

        /// <summary>
        /// Hosted zone ID for a CloudFront distribution, S3 bucket, ELB, or Route 53 hosted zone. See [`resource_elb.zone_id`](https://www.terraform.io/docs/providers/aws/r/elb.html#zone_id) for example.
        /// </summary>
        [Output("zoneId")]
        public Output<string> ZoneId { get; private set; } = null!;


        /// <summary>
        /// Create a Record resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Record(string name, RecordArgs args, CustomResourceOptions? options = null)
            : base("aws:route53/record:Record", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private Record(string name, Input<string> id, RecordState? state = null, CustomResourceOptions? options = null)
            : base("aws:route53/record:Record", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Record resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Record Get(string name, Input<string> id, RecordState? state = null, CustomResourceOptions? options = null)
        {
            return new Record(name, id, state, options);
        }
    }

    public sealed class RecordArgs : Pulumi.ResourceArgs
    {
        [Input("aliases")]
        private InputList<Inputs.RecordAliasesArgs>? _aliases;

        /// <summary>
        /// An alias block. Conflicts with `ttl` &amp; `records`.
        /// Alias record documented below.
        /// </summary>
        public InputList<Inputs.RecordAliasesArgs> Aliases
        {
            get => _aliases ?? (_aliases = new InputList<Inputs.RecordAliasesArgs>());
            set => _aliases = value;
        }

        /// <summary>
        /// Allow creation of this record to overwrite an existing record, if any. This does not affect the ability to update the record using this provider and does not prevent other resources within this provider or manual Route 53 changes outside this provider from overwriting this record. `false` by default. This configuration is not recommended for most environments.
        /// </summary>
        [Input("allowOverwrite")]
        public Input<bool>? AllowOverwrite { get; set; }

        [Input("failoverRoutingPolicies")]
        private InputList<Inputs.RecordFailoverRoutingPoliciesArgs>? _failoverRoutingPolicies;

        /// <summary>
        /// A block indicating the routing behavior when associated health check fails. Conflicts with any other routing policy. Documented below.
        /// </summary>
        public InputList<Inputs.RecordFailoverRoutingPoliciesArgs> FailoverRoutingPolicies
        {
            get => _failoverRoutingPolicies ?? (_failoverRoutingPolicies = new InputList<Inputs.RecordFailoverRoutingPoliciesArgs>());
            set => _failoverRoutingPolicies = value;
        }

        [Input("geolocationRoutingPolicies")]
        private InputList<Inputs.RecordGeolocationRoutingPoliciesArgs>? _geolocationRoutingPolicies;

        /// <summary>
        /// A block indicating a routing policy based on the geolocation of the requestor. Conflicts with any other routing policy. Documented below.
        /// </summary>
        public InputList<Inputs.RecordGeolocationRoutingPoliciesArgs> GeolocationRoutingPolicies
        {
            get => _geolocationRoutingPolicies ?? (_geolocationRoutingPolicies = new InputList<Inputs.RecordGeolocationRoutingPoliciesArgs>());
            set => _geolocationRoutingPolicies = value;
        }

        /// <summary>
        /// The health check the record should be associated with.
        /// </summary>
        [Input("healthCheckId")]
        public Input<string>? HealthCheckId { get; set; }

        [Input("latencyRoutingPolicies")]
        private InputList<Inputs.RecordLatencyRoutingPoliciesArgs>? _latencyRoutingPolicies;

        /// <summary>
        /// A block indicating a routing policy based on the latency between the requestor and an AWS region. Conflicts with any other routing policy. Documented below.
        /// </summary>
        public InputList<Inputs.RecordLatencyRoutingPoliciesArgs> LatencyRoutingPolicies
        {
            get => _latencyRoutingPolicies ?? (_latencyRoutingPolicies = new InputList<Inputs.RecordLatencyRoutingPoliciesArgs>());
            set => _latencyRoutingPolicies = value;
        }

        /// <summary>
        /// Set to `true` to indicate a multivalue answer routing policy. Conflicts with any other routing policy.
        /// </summary>
        [Input("multivalueAnswerRoutingPolicy")]
        public Input<bool>? MultivalueAnswerRoutingPolicy { get; set; }

        /// <summary>
        /// DNS domain name for a CloudFront distribution, S3 bucket, ELB, or another resource record set in this hosted zone.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("records")]
        private InputList<string>? _records;

        /// <summary>
        /// A string list of records. To specify a single record value longer than 255 characters such as a TXT record for DKIM, add `\"\"` inside the configuration string (e.g. `"first255characters\"\"morecharacters"`).
        /// </summary>
        public InputList<string> Records
        {
            get => _records ?? (_records = new InputList<string>());
            set => _records = value;
        }

        /// <summary>
        /// Unique identifier to differentiate records with routing policies from one another. Required if using `failover`, `geolocation`, `latency`, or `weighted` routing policies documented below.
        /// </summary>
        [Input("setIdentifier")]
        public Input<string>? SetIdentifier { get; set; }

        /// <summary>
        /// The TTL of the record.
        /// </summary>
        [Input("ttl")]
        public Input<int>? Ttl { get; set; }

        /// <summary>
        /// `PRIMARY` or `SECONDARY`. A `PRIMARY` record will be served if its healthcheck is passing, otherwise the `SECONDARY` will be served. See http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-configuring-options.html#dns-failover-failover-rrsets
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        [Input("weightedRoutingPolicies")]
        private InputList<Inputs.RecordWeightedRoutingPoliciesArgs>? _weightedRoutingPolicies;

        /// <summary>
        /// A block indicating a weighted routing policy. Conflicts with any other routing policy. Documented below.
        /// </summary>
        public InputList<Inputs.RecordWeightedRoutingPoliciesArgs> WeightedRoutingPolicies
        {
            get => _weightedRoutingPolicies ?? (_weightedRoutingPolicies = new InputList<Inputs.RecordWeightedRoutingPoliciesArgs>());
            set => _weightedRoutingPolicies = value;
        }

        /// <summary>
        /// Hosted zone ID for a CloudFront distribution, S3 bucket, ELB, or Route 53 hosted zone. See [`resource_elb.zone_id`](https://www.terraform.io/docs/providers/aws/r/elb.html#zone_id) for example.
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public RecordArgs()
        {
        }
    }

    public sealed class RecordState : Pulumi.ResourceArgs
    {
        [Input("aliases")]
        private InputList<Inputs.RecordAliasesGetArgs>? _aliases;

        /// <summary>
        /// An alias block. Conflicts with `ttl` &amp; `records`.
        /// Alias record documented below.
        /// </summary>
        public InputList<Inputs.RecordAliasesGetArgs> Aliases
        {
            get => _aliases ?? (_aliases = new InputList<Inputs.RecordAliasesGetArgs>());
            set => _aliases = value;
        }

        /// <summary>
        /// Allow creation of this record to overwrite an existing record, if any. This does not affect the ability to update the record using this provider and does not prevent other resources within this provider or manual Route 53 changes outside this provider from overwriting this record. `false` by default. This configuration is not recommended for most environments.
        /// </summary>
        [Input("allowOverwrite")]
        public Input<bool>? AllowOverwrite { get; set; }

        [Input("failoverRoutingPolicies")]
        private InputList<Inputs.RecordFailoverRoutingPoliciesGetArgs>? _failoverRoutingPolicies;

        /// <summary>
        /// A block indicating the routing behavior when associated health check fails. Conflicts with any other routing policy. Documented below.
        /// </summary>
        public InputList<Inputs.RecordFailoverRoutingPoliciesGetArgs> FailoverRoutingPolicies
        {
            get => _failoverRoutingPolicies ?? (_failoverRoutingPolicies = new InputList<Inputs.RecordFailoverRoutingPoliciesGetArgs>());
            set => _failoverRoutingPolicies = value;
        }

        /// <summary>
        /// [FQDN](https://en.wikipedia.org/wiki/Fully_qualified_domain_name) built using the zone domain and `name`.
        /// </summary>
        [Input("fqdn")]
        public Input<string>? Fqdn { get; set; }

        [Input("geolocationRoutingPolicies")]
        private InputList<Inputs.RecordGeolocationRoutingPoliciesGetArgs>? _geolocationRoutingPolicies;

        /// <summary>
        /// A block indicating a routing policy based on the geolocation of the requestor. Conflicts with any other routing policy. Documented below.
        /// </summary>
        public InputList<Inputs.RecordGeolocationRoutingPoliciesGetArgs> GeolocationRoutingPolicies
        {
            get => _geolocationRoutingPolicies ?? (_geolocationRoutingPolicies = new InputList<Inputs.RecordGeolocationRoutingPoliciesGetArgs>());
            set => _geolocationRoutingPolicies = value;
        }

        /// <summary>
        /// The health check the record should be associated with.
        /// </summary>
        [Input("healthCheckId")]
        public Input<string>? HealthCheckId { get; set; }

        [Input("latencyRoutingPolicies")]
        private InputList<Inputs.RecordLatencyRoutingPoliciesGetArgs>? _latencyRoutingPolicies;

        /// <summary>
        /// A block indicating a routing policy based on the latency between the requestor and an AWS region. Conflicts with any other routing policy. Documented below.
        /// </summary>
        public InputList<Inputs.RecordLatencyRoutingPoliciesGetArgs> LatencyRoutingPolicies
        {
            get => _latencyRoutingPolicies ?? (_latencyRoutingPolicies = new InputList<Inputs.RecordLatencyRoutingPoliciesGetArgs>());
            set => _latencyRoutingPolicies = value;
        }

        /// <summary>
        /// Set to `true` to indicate a multivalue answer routing policy. Conflicts with any other routing policy.
        /// </summary>
        [Input("multivalueAnswerRoutingPolicy")]
        public Input<bool>? MultivalueAnswerRoutingPolicy { get; set; }

        /// <summary>
        /// DNS domain name for a CloudFront distribution, S3 bucket, ELB, or another resource record set in this hosted zone.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("records")]
        private InputList<string>? _records;

        /// <summary>
        /// A string list of records. To specify a single record value longer than 255 characters such as a TXT record for DKIM, add `\"\"` inside the configuration string (e.g. `"first255characters\"\"morecharacters"`).
        /// </summary>
        public InputList<string> Records
        {
            get => _records ?? (_records = new InputList<string>());
            set => _records = value;
        }

        /// <summary>
        /// Unique identifier to differentiate records with routing policies from one another. Required if using `failover`, `geolocation`, `latency`, or `weighted` routing policies documented below.
        /// </summary>
        [Input("setIdentifier")]
        public Input<string>? SetIdentifier { get; set; }

        /// <summary>
        /// The TTL of the record.
        /// </summary>
        [Input("ttl")]
        public Input<int>? Ttl { get; set; }

        /// <summary>
        /// `PRIMARY` or `SECONDARY`. A `PRIMARY` record will be served if its healthcheck is passing, otherwise the `SECONDARY` will be served. See http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-configuring-options.html#dns-failover-failover-rrsets
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        [Input("weightedRoutingPolicies")]
        private InputList<Inputs.RecordWeightedRoutingPoliciesGetArgs>? _weightedRoutingPolicies;

        /// <summary>
        /// A block indicating a weighted routing policy. Conflicts with any other routing policy. Documented below.
        /// </summary>
        public InputList<Inputs.RecordWeightedRoutingPoliciesGetArgs> WeightedRoutingPolicies
        {
            get => _weightedRoutingPolicies ?? (_weightedRoutingPolicies = new InputList<Inputs.RecordWeightedRoutingPoliciesGetArgs>());
            set => _weightedRoutingPolicies = value;
        }

        /// <summary>
        /// Hosted zone ID for a CloudFront distribution, S3 bucket, ELB, or Route 53 hosted zone. See [`resource_elb.zone_id`](https://www.terraform.io/docs/providers/aws/r/elb.html#zone_id) for example.
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public RecordState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class RecordAliasesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Set to `true` if you want Route 53 to determine whether to respond to DNS queries using this resource record set by checking the health of the resource record set. Some resources have special requirements, see [related part of documentation](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/resource-record-sets-values.html#rrsets-values-alias-evaluate-target-health).
        /// </summary>
        [Input("evaluateTargetHealth", required: true)]
        public Input<bool> EvaluateTargetHealth { get; set; } = null!;

        /// <summary>
        /// DNS domain name for a CloudFront distribution, S3 bucket, ELB, or another resource record set in this hosted zone.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Hosted zone ID for a CloudFront distribution, S3 bucket, ELB, or Route 53 hosted zone. See [`resource_elb.zone_id`](https://www.terraform.io/docs/providers/aws/r/elb.html#zone_id) for example.
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public RecordAliasesArgs()
        {
        }
    }

    public sealed class RecordAliasesGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Set to `true` if you want Route 53 to determine whether to respond to DNS queries using this resource record set by checking the health of the resource record set. Some resources have special requirements, see [related part of documentation](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/resource-record-sets-values.html#rrsets-values-alias-evaluate-target-health).
        /// </summary>
        [Input("evaluateTargetHealth", required: true)]
        public Input<bool> EvaluateTargetHealth { get; set; } = null!;

        /// <summary>
        /// DNS domain name for a CloudFront distribution, S3 bucket, ELB, or another resource record set in this hosted zone.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Hosted zone ID for a CloudFront distribution, S3 bucket, ELB, or Route 53 hosted zone. See [`resource_elb.zone_id`](https://www.terraform.io/docs/providers/aws/r/elb.html#zone_id) for example.
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public RecordAliasesGetArgs()
        {
        }
    }

    public sealed class RecordFailoverRoutingPoliciesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// `PRIMARY` or `SECONDARY`. A `PRIMARY` record will be served if its healthcheck is passing, otherwise the `SECONDARY` will be served. See http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-configuring-options.html#dns-failover-failover-rrsets
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public RecordFailoverRoutingPoliciesArgs()
        {
        }
    }

    public sealed class RecordFailoverRoutingPoliciesGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// `PRIMARY` or `SECONDARY`. A `PRIMARY` record will be served if its healthcheck is passing, otherwise the `SECONDARY` will be served. See http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-configuring-options.html#dns-failover-failover-rrsets
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public RecordFailoverRoutingPoliciesGetArgs()
        {
        }
    }

    public sealed class RecordGeolocationRoutingPoliciesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// A two-letter continent code. See http://docs.aws.amazon.com/Route53/latest/APIReference/API_GetGeoLocation.html for code details. Either `continent` or `country` must be specified.
        /// </summary>
        [Input("continent")]
        public Input<string>? Continent { get; set; }

        /// <summary>
        /// A two-character country code or `*` to indicate a default resource record set.
        /// </summary>
        [Input("country")]
        public Input<string>? Country { get; set; }

        /// <summary>
        /// A subdivision code for a country.
        /// </summary>
        [Input("subdivision")]
        public Input<string>? Subdivision { get; set; }

        public RecordGeolocationRoutingPoliciesArgs()
        {
        }
    }

    public sealed class RecordGeolocationRoutingPoliciesGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// A two-letter continent code. See http://docs.aws.amazon.com/Route53/latest/APIReference/API_GetGeoLocation.html for code details. Either `continent` or `country` must be specified.
        /// </summary>
        [Input("continent")]
        public Input<string>? Continent { get; set; }

        /// <summary>
        /// A two-character country code or `*` to indicate a default resource record set.
        /// </summary>
        [Input("country")]
        public Input<string>? Country { get; set; }

        /// <summary>
        /// A subdivision code for a country.
        /// </summary>
        [Input("subdivision")]
        public Input<string>? Subdivision { get; set; }

        public RecordGeolocationRoutingPoliciesGetArgs()
        {
        }
    }

    public sealed class RecordLatencyRoutingPoliciesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// An AWS region from which to measure latency. See http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-latency
        /// </summary>
        [Input("region", required: true)]
        public Input<string> Region { get; set; } = null!;

        public RecordLatencyRoutingPoliciesArgs()
        {
        }
    }

    public sealed class RecordLatencyRoutingPoliciesGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// An AWS region from which to measure latency. See http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-latency
        /// </summary>
        [Input("region", required: true)]
        public Input<string> Region { get; set; } = null!;

        public RecordLatencyRoutingPoliciesGetArgs()
        {
        }
    }

    public sealed class RecordWeightedRoutingPoliciesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// A numeric value indicating the relative weight of the record. See http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-weighted.
        /// </summary>
        [Input("weight", required: true)]
        public Input<int> Weight { get; set; } = null!;

        public RecordWeightedRoutingPoliciesArgs()
        {
        }
    }

    public sealed class RecordWeightedRoutingPoliciesGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// A numeric value indicating the relative weight of the record. See http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-weighted.
        /// </summary>
        [Input("weight", required: true)]
        public Input<int> Weight { get; set; } = null!;

        public RecordWeightedRoutingPoliciesGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class RecordAliases
    {
        /// <summary>
        /// Set to `true` if you want Route 53 to determine whether to respond to DNS queries using this resource record set by checking the health of the resource record set. Some resources have special requirements, see [related part of documentation](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/resource-record-sets-values.html#rrsets-values-alias-evaluate-target-health).
        /// </summary>
        public readonly bool EvaluateTargetHealth;
        /// <summary>
        /// DNS domain name for a CloudFront distribution, S3 bucket, ELB, or another resource record set in this hosted zone.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Hosted zone ID for a CloudFront distribution, S3 bucket, ELB, or Route 53 hosted zone. See [`resource_elb.zone_id`](https://www.terraform.io/docs/providers/aws/r/elb.html#zone_id) for example.
        /// </summary>
        public readonly string ZoneId;

        [OutputConstructor]
        private RecordAliases(
            bool evaluateTargetHealth,
            string name,
            string zoneId)
        {
            EvaluateTargetHealth = evaluateTargetHealth;
            Name = name;
            ZoneId = zoneId;
        }
    }

    [OutputType]
    public sealed class RecordFailoverRoutingPolicies
    {
        /// <summary>
        /// `PRIMARY` or `SECONDARY`. A `PRIMARY` record will be served if its healthcheck is passing, otherwise the `SECONDARY` will be served. See http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-configuring-options.html#dns-failover-failover-rrsets
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private RecordFailoverRoutingPolicies(string type)
        {
            Type = type;
        }
    }

    [OutputType]
    public sealed class RecordGeolocationRoutingPolicies
    {
        /// <summary>
        /// A two-letter continent code. See http://docs.aws.amazon.com/Route53/latest/APIReference/API_GetGeoLocation.html for code details. Either `continent` or `country` must be specified.
        /// </summary>
        public readonly string? Continent;
        /// <summary>
        /// A two-character country code or `*` to indicate a default resource record set.
        /// </summary>
        public readonly string? Country;
        /// <summary>
        /// A subdivision code for a country.
        /// </summary>
        public readonly string? Subdivision;

        [OutputConstructor]
        private RecordGeolocationRoutingPolicies(
            string? continent,
            string? country,
            string? subdivision)
        {
            Continent = continent;
            Country = country;
            Subdivision = subdivision;
        }
    }

    [OutputType]
    public sealed class RecordLatencyRoutingPolicies
    {
        /// <summary>
        /// An AWS region from which to measure latency. See http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-latency
        /// </summary>
        public readonly string Region;

        [OutputConstructor]
        private RecordLatencyRoutingPolicies(string region)
        {
            Region = region;
        }
    }

    [OutputType]
    public sealed class RecordWeightedRoutingPolicies
    {
        /// <summary>
        /// A numeric value indicating the relative weight of the record. See http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-weighted.
        /// </summary>
        public readonly int Weight;

        [OutputConstructor]
        private RecordWeightedRoutingPolicies(int weight)
        {
            Weight = weight;
        }
    }
    }
}
