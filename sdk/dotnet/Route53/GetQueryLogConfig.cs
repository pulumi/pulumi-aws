// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Route53
{
    public static class GetQueryLogConfig
    {
        /// <summary>
        /// `aws.route53.ResolverQueryLogConfig` provides details about a specific Route53 Resolver Query Logging Configuration.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const example = aws.route53.getQueryLogConfig({
        ///     resolverQueryLogConfigId: "rqlc-1abc2345ef678g91h",
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// example = aws.route53.get_query_log_config(resolver_query_log_config_id="rqlc-1abc2345ef678g91h")
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Route53.GetQueryLogConfig.Invoke(new()
        ///     {
        ///         ResolverQueryLogConfigId = "rqlc-1abc2345ef678g91h",
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/route53"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := route53.GetQueryLogConfig(ctx, &amp;route53.GetQueryLogConfigArgs{
        /// 			ResolverQueryLogConfigId: pulumi.StringRef("rqlc-1abc2345ef678g91h"),
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.route53.Route53Functions;
        /// import com.pulumi.aws.route53.inputs.GetQueryLogConfigArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var example = Route53Functions.getQueryLogConfig(GetQueryLogConfigArgs.builder()
        ///             .resolverQueryLogConfigId("rqlc-1abc2345ef678g91h")
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   example:
        ///     fn::invoke:
        ///       Function: aws:route53:getQueryLogConfig
        ///       Arguments:
        ///         resolverQueryLogConfigId: rqlc-1abc2345ef678g91h
        /// ```
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const example = aws.route53.getQueryLogConfig({
        ///     filters: [
        ///         {
        ///             name: "Name",
        ///             values: ["shared-query-log-config"],
        ///         },
        ///         {
        ///             name: "ShareStatus",
        ///             values: ["SHARED_WITH_ME"],
        ///         },
        ///     ],
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// example = aws.route53.get_query_log_config(filters=[
        ///     aws.route53.GetQueryLogConfigFilterArgs(
        ///         name="Name",
        ///         values=["shared-query-log-config"],
        ///     ),
        ///     aws.route53.GetQueryLogConfigFilterArgs(
        ///         name="ShareStatus",
        ///         values=["SHARED_WITH_ME"],
        ///     ),
        /// ])
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Route53.GetQueryLogConfig.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Aws.Route53.Inputs.GetQueryLogConfigFilterInputArgs
        ///             {
        ///                 Name = "Name",
        ///                 Values = new[]
        ///                 {
        ///                     "shared-query-log-config",
        ///                 },
        ///             },
        ///             new Aws.Route53.Inputs.GetQueryLogConfigFilterInputArgs
        ///             {
        ///                 Name = "ShareStatus",
        ///                 Values = new[]
        ///                 {
        ///                     "SHARED_WITH_ME",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/route53"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := route53.GetQueryLogConfig(ctx, &amp;route53.GetQueryLogConfigArgs{
        /// 			Filters: []route53.GetQueryLogConfigFilter{
        /// 				{
        /// 					Name: "Name",
        /// 					Values: []string{
        /// 						"shared-query-log-config",
        /// 					},
        /// 				},
        /// 				{
        /// 					Name: "ShareStatus",
        /// 					Values: []string{
        /// 						"SHARED_WITH_ME",
        /// 					},
        /// 				},
        /// 			},
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.route53.Route53Functions;
        /// import com.pulumi.aws.route53.inputs.GetQueryLogConfigArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var example = Route53Functions.getQueryLogConfig(GetQueryLogConfigArgs.builder()
        ///             .filters(            
        ///                 GetQueryLogConfigFilterArgs.builder()
        ///                     .name("Name")
        ///                     .values("shared-query-log-config")
        ///                     .build(),
        ///                 GetQueryLogConfigFilterArgs.builder()
        ///                     .name("ShareStatus")
        ///                     .values("SHARED_WITH_ME")
        ///                     .build())
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   example:
        ///     fn::invoke:
        ///       Function: aws:route53:getQueryLogConfig
        ///       Arguments:
        ///         filters:
        ///           - name: Name
        ///             values:
        ///               - shared-query-log-config
        ///           - name: ShareStatus
        ///             values:
        ///               - SHARED_WITH_ME
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetQueryLogConfigResult> InvokeAsync(GetQueryLogConfigArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetQueryLogConfigResult>("aws:route53/getQueryLogConfig:getQueryLogConfig", args ?? new GetQueryLogConfigArgs(), options.WithDefaults());

        /// <summary>
        /// `aws.route53.ResolverQueryLogConfig` provides details about a specific Route53 Resolver Query Logging Configuration.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const example = aws.route53.getQueryLogConfig({
        ///     resolverQueryLogConfigId: "rqlc-1abc2345ef678g91h",
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// example = aws.route53.get_query_log_config(resolver_query_log_config_id="rqlc-1abc2345ef678g91h")
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Route53.GetQueryLogConfig.Invoke(new()
        ///     {
        ///         ResolverQueryLogConfigId = "rqlc-1abc2345ef678g91h",
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/route53"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := route53.GetQueryLogConfig(ctx, &amp;route53.GetQueryLogConfigArgs{
        /// 			ResolverQueryLogConfigId: pulumi.StringRef("rqlc-1abc2345ef678g91h"),
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.route53.Route53Functions;
        /// import com.pulumi.aws.route53.inputs.GetQueryLogConfigArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var example = Route53Functions.getQueryLogConfig(GetQueryLogConfigArgs.builder()
        ///             .resolverQueryLogConfigId("rqlc-1abc2345ef678g91h")
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   example:
        ///     fn::invoke:
        ///       Function: aws:route53:getQueryLogConfig
        ///       Arguments:
        ///         resolverQueryLogConfigId: rqlc-1abc2345ef678g91h
        /// ```
        /// 
        /// ```typescript
        /// import * as pulumi from "@pulumi/pulumi";
        /// import * as aws from "@pulumi/aws";
        /// 
        /// const example = aws.route53.getQueryLogConfig({
        ///     filters: [
        ///         {
        ///             name: "Name",
        ///             values: ["shared-query-log-config"],
        ///         },
        ///         {
        ///             name: "ShareStatus",
        ///             values: ["SHARED_WITH_ME"],
        ///         },
        ///     ],
        /// });
        /// ```
        /// ```python
        /// import pulumi
        /// import pulumi_aws as aws
        /// 
        /// example = aws.route53.get_query_log_config(filters=[
        ///     aws.route53.GetQueryLogConfigFilterArgs(
        ///         name="Name",
        ///         values=["shared-query-log-config"],
        ///     ),
        ///     aws.route53.GetQueryLogConfigFilterArgs(
        ///         name="ShareStatus",
        ///         values=["SHARED_WITH_ME"],
        ///     ),
        /// ])
        /// ```
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Aws = Pulumi.Aws;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Aws.Route53.GetQueryLogConfig.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Aws.Route53.Inputs.GetQueryLogConfigFilterInputArgs
        ///             {
        ///                 Name = "Name",
        ///                 Values = new[]
        ///                 {
        ///                     "shared-query-log-config",
        ///                 },
        ///             },
        ///             new Aws.Route53.Inputs.GetQueryLogConfigFilterInputArgs
        ///             {
        ///                 Name = "ShareStatus",
        ///                 Values = new[]
        ///                 {
        ///                     "SHARED_WITH_ME",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// ```go
        /// package main
        /// 
        /// import (
        /// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/route53"
        /// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
        /// )
        /// 
        /// func main() {
        /// 	pulumi.Run(func(ctx *pulumi.Context) error {
        /// 		_, err := route53.GetQueryLogConfig(ctx, &amp;route53.GetQueryLogConfigArgs{
        /// 			Filters: []route53.GetQueryLogConfigFilter{
        /// 				{
        /// 					Name: "Name",
        /// 					Values: []string{
        /// 						"shared-query-log-config",
        /// 					},
        /// 				},
        /// 				{
        /// 					Name: "ShareStatus",
        /// 					Values: []string{
        /// 						"SHARED_WITH_ME",
        /// 					},
        /// 				},
        /// 			},
        /// 		}, nil)
        /// 		if err != nil {
        /// 			return err
        /// 		}
        /// 		return nil
        /// 	})
        /// }
        /// ```
        /// ```java
        /// package generated_program;
        /// 
        /// import com.pulumi.Context;
        /// import com.pulumi.Pulumi;
        /// import com.pulumi.core.Output;
        /// import com.pulumi.aws.route53.Route53Functions;
        /// import com.pulumi.aws.route53.inputs.GetQueryLogConfigArgs;
        /// import java.util.List;
        /// import java.util.ArrayList;
        /// import java.util.Map;
        /// import java.io.File;
        /// import java.nio.file.Files;
        /// import java.nio.file.Paths;
        /// 
        /// public class App {
        ///     public static void main(String[] args) {
        ///         Pulumi.run(App::stack);
        ///     }
        /// 
        ///     public static void stack(Context ctx) {
        ///         final var example = Route53Functions.getQueryLogConfig(GetQueryLogConfigArgs.builder()
        ///             .filters(            
        ///                 GetQueryLogConfigFilterArgs.builder()
        ///                     .name("Name")
        ///                     .values("shared-query-log-config")
        ///                     .build(),
        ///                 GetQueryLogConfigFilterArgs.builder()
        ///                     .name("ShareStatus")
        ///                     .values("SHARED_WITH_ME")
        ///                     .build())
        ///             .build());
        /// 
        ///     }
        /// }
        /// ```
        /// ```yaml
        /// variables:
        ///   example:
        ///     fn::invoke:
        ///       Function: aws:route53:getQueryLogConfig
        ///       Arguments:
        ///         filters:
        ///           - name: Name
        ///             values:
        ///               - shared-query-log-config
        ///           - name: ShareStatus
        ///             values:
        ///               - SHARED_WITH_ME
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetQueryLogConfigResult> Invoke(GetQueryLogConfigInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetQueryLogConfigResult>("aws:route53/getQueryLogConfig:getQueryLogConfig", args ?? new GetQueryLogConfigInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetQueryLogConfigArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetQueryLogConfigFilterArgs>? _filters;

        /// <summary>
        /// One or more name/value pairs to use as filters. There are
        /// several valid keys, for a full reference, check out
        /// [Route53resolver Filter value in the AWS API reference][1].
        /// 
        /// In addition to all arguments above, the following attributes are exported:
        /// </summary>
        public List<Inputs.GetQueryLogConfigFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetQueryLogConfigFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The name of the query logging configuration.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// ID of the Route53 Resolver Query Logging Configuration.
        /// </summary>
        [Input("resolverQueryLogConfigId")]
        public string? ResolverQueryLogConfigId { get; set; }

        [Input("tags")]
        private Dictionary<string, string>? _tags;

        /// <summary>
        /// Map of tags to assign to the service.
        /// 
        /// [1]: https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_Filter.html
        /// </summary>
        public Dictionary<string, string> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, string>());
            set => _tags = value;
        }

        public GetQueryLogConfigArgs()
        {
        }
        public static new GetQueryLogConfigArgs Empty => new GetQueryLogConfigArgs();
    }

    public sealed class GetQueryLogConfigInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetQueryLogConfigFilterInputArgs>? _filters;

        /// <summary>
        /// One or more name/value pairs to use as filters. There are
        /// several valid keys, for a full reference, check out
        /// [Route53resolver Filter value in the AWS API reference][1].
        /// 
        /// In addition to all arguments above, the following attributes are exported:
        /// </summary>
        public InputList<Inputs.GetQueryLogConfigFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetQueryLogConfigFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// The name of the query logging configuration.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// ID of the Route53 Resolver Query Logging Configuration.
        /// </summary>
        [Input("resolverQueryLogConfigId")]
        public Input<string>? ResolverQueryLogConfigId { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Map of tags to assign to the service.
        /// 
        /// [1]: https://docs.aws.amazon.com/Route53/latest/APIReference/API_route53resolver_Filter.html
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public GetQueryLogConfigInvokeArgs()
        {
        }
        public static new GetQueryLogConfigInvokeArgs Empty => new GetQueryLogConfigInvokeArgs();
    }


    [OutputType]
    public sealed class GetQueryLogConfigResult
    {
        public readonly string Arn;
        public readonly string DestinationArn;
        public readonly ImmutableArray<Outputs.GetQueryLogConfigFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? Name;
        public readonly string OwnerId;
        public readonly string? ResolverQueryLogConfigId;
        public readonly string ShareStatus;
        public readonly ImmutableDictionary<string, string> Tags;

        [OutputConstructor]
        private GetQueryLogConfigResult(
            string arn,

            string destinationArn,

            ImmutableArray<Outputs.GetQueryLogConfigFilterResult> filters,

            string id,

            string? name,

            string ownerId,

            string? resolverQueryLogConfigId,

            string shareStatus,

            ImmutableDictionary<string, string> tags)
        {
            Arn = arn;
            DestinationArn = destinationArn;
            Filters = filters;
            Id = id;
            Name = name;
            OwnerId = ownerId;
            ResolverQueryLogConfigId = resolverQueryLogConfigId;
            ShareStatus = shareStatus;
            Tags = tags;
        }
    }
}
