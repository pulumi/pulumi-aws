// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Route53
{
    public static class GetDelegationSet
    {
        public static Task<GetDelegationSetResult> InvokeAsync(GetDelegationSetArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDelegationSetResult>("aws:route53/getDelegationSet:getDelegationSet", args ?? new GetDelegationSetArgs(), options.WithDefaults());

        public static Output<GetDelegationSetResult> Invoke(GetDelegationSetInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDelegationSetResult>("aws:route53/getDelegationSet:getDelegationSet", args ?? new GetDelegationSetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDelegationSetArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetDelegationSetArgs()
        {
        }
        public static new GetDelegationSetArgs Empty => new GetDelegationSetArgs();
    }

    public sealed class GetDelegationSetInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetDelegationSetInvokeArgs()
        {
        }
        public static new GetDelegationSetInvokeArgs Empty => new GetDelegationSetInvokeArgs();
    }


    [OutputType]
    public sealed class GetDelegationSetResult
    {
        public readonly string Arn;
        public readonly string CallerReference;
        public readonly string Id;
        public readonly ImmutableArray<string> NameServers;

        [OutputConstructor]
        private GetDelegationSetResult(
            string arn,

            string callerReference,

            string id,

            ImmutableArray<string> nameServers)
        {
            Arn = arn;
            CallerReference = callerReference;
            Id = id;
            NameServers = nameServers;
        }
    }
}
