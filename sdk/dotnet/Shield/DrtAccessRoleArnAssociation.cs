// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Shield
{
    /// <summary>
    /// Authorizes the Shield Response Team (SRT) using the specified role, to access your AWS account to assist with DDoS attack mitigation during potential attacks. For more information see [Configure AWS SRT Support](https://docs.aws.amazon.com/waf/latest/developerguide/authorize-srt.html)
    /// 
    /// ## Example Usage
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using System.Text.Json;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testRole = new Aws.Iam.Role("testRole", new()
    ///     {
    ///         AssumeRolePolicy = JsonSerializer.Serialize(new Dictionary&lt;string, object?&gt;
    ///         {
    ///             ["Version"] = "2012-10-17",
    ///             ["Statement"] = new[]
    ///             {
    ///                 new Dictionary&lt;string, object?&gt;
    ///                 {
    ///                     ["Sid"] = "",
    ///                     ["Effect"] = "Allow",
    ///                     ["Principal"] = new Dictionary&lt;string, object?&gt;
    ///                     {
    ///                         ["Service"] = "drt.shield.amazonaws.com",
    ///                     },
    ///                     ["Action"] = "sts:AssumeRole",
    ///                 },
    ///             },
    ///         }),
    ///     });
    /// 
    ///     var testRolePolicyAttachment = new Aws.Iam.RolePolicyAttachment("testRolePolicyAttachment", new()
    ///     {
    ///         Role = testRole.Name,
    ///         PolicyArn = "arn:aws:iam::aws:policy/service-role/AWSShieldDRTAccessPolicy",
    ///     });
    /// 
    ///     var testDrtAccessRoleArnAssociation = new Aws.Shield.DrtAccessRoleArnAssociation("testDrtAccessRoleArnAssociation", new()
    ///     {
    ///         RoleArn = testRole.Arn,
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [AwsResourceType("aws:shield/drtAccessRoleArnAssociation:DrtAccessRoleArnAssociation")]
    public partial class DrtAccessRoleArnAssociation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the role the SRT will use to access your AWS account. Prior to making the AssociateDRTRole request, you must attach the `AWSShieldDRTAccessPolicy` managed policy to this role.
        /// </summary>
        [Output("roleArn")]
        public Output<string> RoleArn { get; private set; } = null!;

        [Output("timeouts")]
        public Output<Outputs.DrtAccessRoleArnAssociationTimeouts?> Timeouts { get; private set; } = null!;


        /// <summary>
        /// Create a DrtAccessRoleArnAssociation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DrtAccessRoleArnAssociation(string name, DrtAccessRoleArnAssociationArgs args, CustomResourceOptions? options = null)
            : base("aws:shield/drtAccessRoleArnAssociation:DrtAccessRoleArnAssociation", name, args ?? new DrtAccessRoleArnAssociationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DrtAccessRoleArnAssociation(string name, Input<string> id, DrtAccessRoleArnAssociationState? state = null, CustomResourceOptions? options = null)
            : base("aws:shield/drtAccessRoleArnAssociation:DrtAccessRoleArnAssociation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DrtAccessRoleArnAssociation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DrtAccessRoleArnAssociation Get(string name, Input<string> id, DrtAccessRoleArnAssociationState? state = null, CustomResourceOptions? options = null)
        {
            return new DrtAccessRoleArnAssociation(name, id, state, options);
        }
    }

    public sealed class DrtAccessRoleArnAssociationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the role the SRT will use to access your AWS account. Prior to making the AssociateDRTRole request, you must attach the `AWSShieldDRTAccessPolicy` managed policy to this role.
        /// </summary>
        [Input("roleArn", required: true)]
        public Input<string> RoleArn { get; set; } = null!;

        [Input("timeouts")]
        public Input<Inputs.DrtAccessRoleArnAssociationTimeoutsArgs>? Timeouts { get; set; }

        public DrtAccessRoleArnAssociationArgs()
        {
        }
        public static new DrtAccessRoleArnAssociationArgs Empty => new DrtAccessRoleArnAssociationArgs();
    }

    public sealed class DrtAccessRoleArnAssociationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the role the SRT will use to access your AWS account. Prior to making the AssociateDRTRole request, you must attach the `AWSShieldDRTAccessPolicy` managed policy to this role.
        /// </summary>
        [Input("roleArn")]
        public Input<string>? RoleArn { get; set; }

        [Input("timeouts")]
        public Input<Inputs.DrtAccessRoleArnAssociationTimeoutsGetArgs>? Timeouts { get; set; }

        public DrtAccessRoleArnAssociationState()
        {
        }
        public static new DrtAccessRoleArnAssociationState Empty => new DrtAccessRoleArnAssociationState();
    }
}
