// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Shield
{
    /// <summary>
    /// Resource for managing a AWS Shield Proactive Engagement.
    /// Proactive engagement authorizes the Shield Response Team (SRT) to use email and phone to notify contacts about escalations to the SRT and to initiate proactive customer support.
    /// 
    /// ## Example Usage
    /// 
    /// ### Basic Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using System.Text.Json;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.Iam.Role("example", new()
    ///     {
    ///         Name = awsShieldDrtAccessRoleArn,
    ///         AssumeRolePolicy = JsonSerializer.Serialize(new Dictionary&lt;string, object?&gt;
    ///         {
    ///             ["version"] = "2012-10-17",
    ///             ["statement"] = new[]
    ///             {
    ///                 new Dictionary&lt;string, object?&gt;
    ///                 {
    ///                     ["Sid"] = "",
    ///                     ["Effect"] = "Allow",
    ///                     ["Principal"] = new Dictionary&lt;string, object?&gt;
    ///                     {
    ///                         ["Service"] = "drt.shield.amazonaws.com",
    ///                     },
    ///                     ["Action"] = "sts:AssumeRole",
    ///                 },
    ///             },
    ///         }),
    ///     });
    /// 
    ///     var exampleRolePolicyAttachment = new Aws.Iam.RolePolicyAttachment("example", new()
    ///     {
    ///         Role = example.Name,
    ///         PolicyArn = "arn:aws:iam::aws:policy/service-role/AWSShieldDRTAccessPolicy",
    ///     });
    /// 
    ///     var exampleDrtAccessRoleArnAssociation = new Aws.Shield.DrtAccessRoleArnAssociation("example", new()
    ///     {
    ///         RoleArn = example.Arn,
    ///     });
    /// 
    ///     var test = new Aws.Shield.ProtectionGroup("test", new()
    ///     {
    ///         ProtectionGroupId = "example",
    ///         Aggregation = "MAX",
    ///         Pattern = "ALL",
    ///     });
    /// 
    ///     var testProactiveEngagement = new Aws.Shield.ProactiveEngagement("test", new()
    ///     {
    ///         Enabled = true,
    ///         EmergencyContacts = new[]
    ///         {
    ///             new Aws.Shield.Inputs.ProactiveEngagementEmergencyContactArgs
    ///             {
    ///                 ContactNotes = "Notes",
    ///                 EmailAddress = "test@company.com",
    ///                 PhoneNumber = "+12358132134",
    ///             },
    ///             new Aws.Shield.Inputs.ProactiveEngagementEmergencyContactArgs
    ///             {
    ///                 ContactNotes = "Notes 2",
    ///                 EmailAddress = "test2@company.com",
    ///                 PhoneNumber = "+12358132134",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import Shield proactive engagement using the AWS account ID. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:shield/proactiveEngagement:ProactiveEngagement example 123456789012
    /// ```
    /// </summary>
    [AwsResourceType("aws:shield/proactiveEngagement:ProactiveEngagement")]
    public partial class ProactiveEngagement : global::Pulumi.CustomResource
    {
        /// <summary>
        /// One or more emergency contacts. You must provide at least one phone number in the emergency contact list. See `emergency_contacts`.
        /// </summary>
        [Output("emergencyContacts")]
        public Output<ImmutableArray<Outputs.ProactiveEngagementEmergencyContact>> EmergencyContacts { get; private set; } = null!;

        /// <summary>
        /// Boolean value indicating if Proactive Engagement should be enabled or not.
        /// </summary>
        [Output("enabled")]
        public Output<bool> Enabled { get; private set; } = null!;


        /// <summary>
        /// Create a ProactiveEngagement resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ProactiveEngagement(string name, ProactiveEngagementArgs args, CustomResourceOptions? options = null)
            : base("aws:shield/proactiveEngagement:ProactiveEngagement", name, args ?? new ProactiveEngagementArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ProactiveEngagement(string name, Input<string> id, ProactiveEngagementState? state = null, CustomResourceOptions? options = null)
            : base("aws:shield/proactiveEngagement:ProactiveEngagement", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ProactiveEngagement resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ProactiveEngagement Get(string name, Input<string> id, ProactiveEngagementState? state = null, CustomResourceOptions? options = null)
        {
            return new ProactiveEngagement(name, id, state, options);
        }
    }

    public sealed class ProactiveEngagementArgs : global::Pulumi.ResourceArgs
    {
        [Input("emergencyContacts")]
        private InputList<Inputs.ProactiveEngagementEmergencyContactArgs>? _emergencyContacts;

        /// <summary>
        /// One or more emergency contacts. You must provide at least one phone number in the emergency contact list. See `emergency_contacts`.
        /// </summary>
        public InputList<Inputs.ProactiveEngagementEmergencyContactArgs> EmergencyContacts
        {
            get => _emergencyContacts ?? (_emergencyContacts = new InputList<Inputs.ProactiveEngagementEmergencyContactArgs>());
            set => _emergencyContacts = value;
        }

        /// <summary>
        /// Boolean value indicating if Proactive Engagement should be enabled or not.
        /// </summary>
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        public ProactiveEngagementArgs()
        {
        }
        public static new ProactiveEngagementArgs Empty => new ProactiveEngagementArgs();
    }

    public sealed class ProactiveEngagementState : global::Pulumi.ResourceArgs
    {
        [Input("emergencyContacts")]
        private InputList<Inputs.ProactiveEngagementEmergencyContactGetArgs>? _emergencyContacts;

        /// <summary>
        /// One or more emergency contacts. You must provide at least one phone number in the emergency contact list. See `emergency_contacts`.
        /// </summary>
        public InputList<Inputs.ProactiveEngagementEmergencyContactGetArgs> EmergencyContacts
        {
            get => _emergencyContacts ?? (_emergencyContacts = new InputList<Inputs.ProactiveEngagementEmergencyContactGetArgs>());
            set => _emergencyContacts = value;
        }

        /// <summary>
        /// Boolean value indicating if Proactive Engagement should be enabled or not.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        public ProactiveEngagementState()
        {
        }
        public static new ProactiveEngagementState Empty => new ProactiveEngagementState();
    }
}
