// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.S3Tables
{
    /// <summary>
    /// Resource for managing an Amazon S3 Tables Table Bucket Policy.
    /// 
    /// ## Example Usage
    /// 
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = Aws.Iam.GetPolicyDocument.Invoke(new()
    ///     {
    ///         Statements = new[]
    ///         {
    ///             null,
    ///         },
    ///     });
    /// 
    ///     var exampleTableBucketPolicy = new Aws.S3Tables.TableBucketPolicy("example", new()
    ///     {
    ///         ResourcePolicy = example.Apply(getPolicyDocumentResult =&gt; getPolicyDocumentResult.Json),
    ///         TableBucketArn = exampleAwsS3tablesTableBucket.Arn,
    ///     });
    /// 
    ///     var test = new Aws.S3Tables.TableBucket("test", new()
    ///     {
    ///         Name = "example-bucket",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import S3 Tables Table Bucket Policy using the `table_bucket_arn`. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:s3tables/tableBucketPolicy:TableBucketPolicy example 'arn:aws:s3tables:us-west-2:123456789012:bucket/example-bucket;example-namespace'
    /// ```
    /// </summary>
    [AwsResourceType("aws:s3tables/tableBucketPolicy:TableBucketPolicy")]
    public partial class TableBucketPolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Amazon Web Services resource-based policy document in JSON format.
        /// </summary>
        [Output("resourcePolicy")]
        public Output<string> ResourcePolicy { get; private set; } = null!;

        /// <summary>
        /// ARN referencing the Table Bucket that owns this policy.
        /// </summary>
        [Output("tableBucketArn")]
        public Output<string> TableBucketArn { get; private set; } = null!;


        /// <summary>
        /// Create a TableBucketPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TableBucketPolicy(string name, TableBucketPolicyArgs args, CustomResourceOptions? options = null)
            : base("aws:s3tables/tableBucketPolicy:TableBucketPolicy", name, args ?? new TableBucketPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TableBucketPolicy(string name, Input<string> id, TableBucketPolicyState? state = null, CustomResourceOptions? options = null)
            : base("aws:s3tables/tableBucketPolicy:TableBucketPolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TableBucketPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TableBucketPolicy Get(string name, Input<string> id, TableBucketPolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new TableBucketPolicy(name, id, state, options);
        }
    }

    public sealed class TableBucketPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Amazon Web Services resource-based policy document in JSON format.
        /// </summary>
        [Input("resourcePolicy", required: true)]
        public Input<string> ResourcePolicy { get; set; } = null!;

        /// <summary>
        /// ARN referencing the Table Bucket that owns this policy.
        /// </summary>
        [Input("tableBucketArn", required: true)]
        public Input<string> TableBucketArn { get; set; } = null!;

        public TableBucketPolicyArgs()
        {
        }
        public static new TableBucketPolicyArgs Empty => new TableBucketPolicyArgs();
    }

    public sealed class TableBucketPolicyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Amazon Web Services resource-based policy document in JSON format.
        /// </summary>
        [Input("resourcePolicy")]
        public Input<string>? ResourcePolicy { get; set; }

        /// <summary>
        /// ARN referencing the Table Bucket that owns this policy.
        /// </summary>
        [Input("tableBucketArn")]
        public Input<string>? TableBucketArn { get; set; }

        public TableBucketPolicyState()
        {
        }
        public static new TableBucketPolicyState Empty => new TableBucketPolicyState();
    }
}
