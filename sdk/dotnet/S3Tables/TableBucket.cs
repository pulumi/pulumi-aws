// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.S3Tables
{
    /// <summary>
    /// Resource for managing an Amazon S3 Tables Table Bucket.
    /// 
    /// ## Example Usage
    /// 
    /// ### Basic Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.S3Tables.TableBucket("example", new()
    ///     {
    ///         Name = "example-bucket",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import S3 Tables Table Bucket using the `arn`. For example:
    /// 
    /// ```sh
    /// $ pulumi import aws:s3tables/tableBucket:TableBucket example arn:aws:s3tables:us-west-2:123456789012:bucket/example-bucket
    /// ```
    /// </summary>
    [AwsResourceType("aws:s3tables/tableBucket:TableBucket")]
    public partial class TableBucket : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ARN of the table bucket.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// Date and time when the bucket was created.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// A single table bucket encryption configuration object.
        /// See `encryption_configuration` below.
        /// </summary>
        [Output("encryptionConfiguration")]
        public Output<Outputs.TableBucketEncryptionConfiguration?> EncryptionConfiguration { get; private set; } = null!;

        /// <summary>
        /// A single table bucket maintenance configuration object.
        /// See `maintenance_configuration` below.
        /// </summary>
        [Output("maintenanceConfiguration")]
        public Output<Outputs.TableBucketMaintenanceConfiguration> MaintenanceConfiguration { get; private set; } = null!;

        /// <summary>
        /// Name of the table bucket.
        /// Must be between 3 and 63 characters in length.
        /// Can consist of lowercase letters, numbers, and hyphens, and must begin and end with a lowercase letter or number.
        /// A full list of bucket naming rules can be found in the [S3 Tables documentation](https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-tables-buckets-naming.html#table-buckets-naming-rules).
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Account ID of the account that owns the table bucket.
        /// </summary>
        [Output("ownerAccountId")]
        public Output<string> OwnerAccountId { get; private set; } = null!;


        /// <summary>
        /// Create a TableBucket resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TableBucket(string name, TableBucketArgs? args = null, CustomResourceOptions? options = null)
            : base("aws:s3tables/tableBucket:TableBucket", name, args ?? new TableBucketArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TableBucket(string name, Input<string> id, TableBucketState? state = null, CustomResourceOptions? options = null)
            : base("aws:s3tables/tableBucket:TableBucket", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TableBucket resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TableBucket Get(string name, Input<string> id, TableBucketState? state = null, CustomResourceOptions? options = null)
        {
            return new TableBucket(name, id, state, options);
        }
    }

    public sealed class TableBucketArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A single table bucket encryption configuration object.
        /// See `encryption_configuration` below.
        /// </summary>
        [Input("encryptionConfiguration")]
        public Input<Inputs.TableBucketEncryptionConfigurationArgs>? EncryptionConfiguration { get; set; }

        /// <summary>
        /// A single table bucket maintenance configuration object.
        /// See `maintenance_configuration` below.
        /// </summary>
        [Input("maintenanceConfiguration")]
        public Input<Inputs.TableBucketMaintenanceConfigurationArgs>? MaintenanceConfiguration { get; set; }

        /// <summary>
        /// Name of the table bucket.
        /// Must be between 3 and 63 characters in length.
        /// Can consist of lowercase letters, numbers, and hyphens, and must begin and end with a lowercase letter or number.
        /// A full list of bucket naming rules can be found in the [S3 Tables documentation](https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-tables-buckets-naming.html#table-buckets-naming-rules).
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public TableBucketArgs()
        {
        }
        public static new TableBucketArgs Empty => new TableBucketArgs();
    }

    public sealed class TableBucketState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ARN of the table bucket.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// Date and time when the bucket was created.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// A single table bucket encryption configuration object.
        /// See `encryption_configuration` below.
        /// </summary>
        [Input("encryptionConfiguration")]
        public Input<Inputs.TableBucketEncryptionConfigurationGetArgs>? EncryptionConfiguration { get; set; }

        /// <summary>
        /// A single table bucket maintenance configuration object.
        /// See `maintenance_configuration` below.
        /// </summary>
        [Input("maintenanceConfiguration")]
        public Input<Inputs.TableBucketMaintenanceConfigurationGetArgs>? MaintenanceConfiguration { get; set; }

        /// <summary>
        /// Name of the table bucket.
        /// Must be between 3 and 63 characters in length.
        /// Can consist of lowercase letters, numbers, and hyphens, and must begin and end with a lowercase letter or number.
        /// A full list of bucket naming rules can be found in the [S3 Tables documentation](https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-tables-buckets-naming.html#table-buckets-naming-rules).
        /// 
        /// The following arguments are optional:
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Account ID of the account that owns the table bucket.
        /// </summary>
        [Input("ownerAccountId")]
        public Input<string>? OwnerAccountId { get; set; }

        public TableBucketState()
        {
        }
        public static new TableBucketState Empty => new TableBucketState();
    }
}
