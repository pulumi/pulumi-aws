// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.GameLift
{
    /// <summary>
    /// Provides an GameLift Game Server Group resource.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.GameLift.GameServerGroup("example", new()
    ///     {
    ///         GameServerGroupName = "example",
    ///         InstanceDefinitions = new[]
    ///         {
    ///             new Aws.GameLift.Inputs.GameServerGroupInstanceDefinitionArgs
    ///             {
    ///                 InstanceType = "c5.large",
    ///             },
    ///             new Aws.GameLift.Inputs.GameServerGroupInstanceDefinitionArgs
    ///             {
    ///                 InstanceType = "c5a.large",
    ///             },
    ///         },
    ///         LaunchTemplate = new Aws.GameLift.Inputs.GameServerGroupLaunchTemplateArgs
    ///         {
    ///             Id = aws_launch_template.Example.Id,
    ///         },
    ///         MaxSize = 1,
    ///         MinSize = 1,
    ///         RoleArn = aws_iam_role.Example.Arn,
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn = new[]
    ///         {
    ///             aws_iam_role_policy_attachment.Example,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// Full usage:
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Aws.GameLift.GameServerGroup("example", new()
    ///     {
    ///         AutoScalingPolicy = new Aws.GameLift.Inputs.GameServerGroupAutoScalingPolicyArgs
    ///         {
    ///             EstimatedInstanceWarmup = 60,
    ///             TargetTrackingConfiguration = new Aws.GameLift.Inputs.GameServerGroupAutoScalingPolicyTargetTrackingConfigurationArgs
    ///             {
    ///                 TargetValue = 75,
    ///             },
    ///         },
    ///         BalancingStrategy = "SPOT_ONLY",
    ///         GameServerGroupName = "example",
    ///         GameServerProtectionPolicy = "FULL_PROTECTION",
    ///         InstanceDefinitions = new[]
    ///         {
    ///             new Aws.GameLift.Inputs.GameServerGroupInstanceDefinitionArgs
    ///             {
    ///                 InstanceType = "c5.large",
    ///                 WeightedCapacity = "1",
    ///             },
    ///             new Aws.GameLift.Inputs.GameServerGroupInstanceDefinitionArgs
    ///             {
    ///                 InstanceType = "c5.2xlarge",
    ///                 WeightedCapacity = "2",
    ///             },
    ///         },
    ///         LaunchTemplate = new Aws.GameLift.Inputs.GameServerGroupLaunchTemplateArgs
    ///         {
    ///             Id = aws_launch_template.Example.Id,
    ///             Version = "1",
    ///         },
    ///         MaxSize = 1,
    ///         MinSize = 1,
    ///         RoleArn = aws_iam_role.Example.Arn,
    ///         Tags = 
    ///         {
    ///             { "Name", "example" },
    ///         },
    ///         VpcSubnets = new[]
    ///         {
    ///             "subnet-12345678",
    ///             "subnet-23456789",
    ///         },
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn = new[]
    ///         {
    ///             aws_iam_role_policy_attachment.Example,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### Example IAM Role for GameLift Game Server Group
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var current = Aws.GetPartition.Invoke();
    /// 
    ///     var assumeRole = Aws.Iam.GetPolicyDocument.Invoke(new()
    ///     {
    ///         Statements = new[]
    ///         {
    ///             new Aws.Iam.Inputs.GetPolicyDocumentStatementInputArgs
    ///             {
    ///                 Effect = "Allow",
    ///                 Principals = new[]
    ///                 {
    ///                     new Aws.Iam.Inputs.GetPolicyDocumentStatementPrincipalInputArgs
    ///                     {
    ///                         Type = "Service",
    ///                         Identifiers = new[]
    ///                         {
    ///                             "autoscaling.amazonaws.com",
    ///                             "gamelift.amazonaws.com",
    ///                         },
    ///                     },
    ///                 },
    ///                 Actions = new[]
    ///                 {
    ///                     "sts:AssumeRole",
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    ///     var exampleRole = new Aws.Iam.Role("exampleRole", new()
    ///     {
    ///         AssumeRolePolicy = assumeRole.Apply(getPolicyDocumentResult =&gt; getPolicyDocumentResult.Json),
    ///     });
    /// 
    ///     var exampleRolePolicyAttachment = new Aws.Iam.RolePolicyAttachment("exampleRolePolicyAttachment", new()
    ///     {
    ///         PolicyArn = $"arn:{current.Apply(getPartitionResult =&gt; getPartitionResult.Partition)}:iam::aws:policy/GameLiftGameServerGroupPolicy",
    ///         Role = exampleRole.Name,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Using `pulumi import`, import GameLift Game Server Group using the `name`. For example:
    /// 
    /// ```sh
    ///  $ pulumi import aws:gamelift/gameServerGroup:GameServerGroup example example
    /// ```
    /// </summary>
    [AwsResourceType("aws:gamelift/gameServerGroup:GameServerGroup")]
    public partial class GameServerGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ARN of the GameLift Game Server Group.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// The ARN of the created EC2 Auto Scaling group.
        /// </summary>
        [Output("autoScalingGroupArn")]
        public Output<string> AutoScalingGroupArn { get; private set; } = null!;

        [Output("autoScalingPolicy")]
        public Output<Outputs.GameServerGroupAutoScalingPolicy?> AutoScalingPolicy { get; private set; } = null!;

        /// <summary>
        /// Indicates how GameLift FleetIQ balances the use of Spot Instances and On-Demand Instances.
        /// Valid values: `SPOT_ONLY`, `SPOT_PREFERRED`, `ON_DEMAND_ONLY`. Defaults to `SPOT_PREFERRED`.
        /// </summary>
        [Output("balancingStrategy")]
        public Output<string> BalancingStrategy { get; private set; } = null!;

        /// <summary>
        /// Name of the game server group.
        /// This value is used to generate unique ARN identifiers for the EC2 Auto Scaling group and the GameLift FleetIQ game server group.
        /// </summary>
        [Output("gameServerGroupName")]
        public Output<string> GameServerGroupName { get; private set; } = null!;

        /// <summary>
        /// Indicates whether instances in the game server group are protected from early termination.
        /// Unprotected instances that have active game servers running might be terminated during a scale-down event,
        /// causing players to be dropped from the game.
        /// Protected instances cannot be terminated while there are active game servers running except in the event
        /// of a forced game server group deletion.
        /// Valid values: `NO_PROTECTION`, `FULL_PROTECTION`. Defaults to `NO_PROTECTION`.
        /// </summary>
        [Output("gameServerProtectionPolicy")]
        public Output<string> GameServerProtectionPolicy { get; private set; } = null!;

        [Output("instanceDefinitions")]
        public Output<ImmutableArray<Outputs.GameServerGroupInstanceDefinition>> InstanceDefinitions { get; private set; } = null!;

        [Output("launchTemplate")]
        public Output<Outputs.GameServerGroupLaunchTemplate> LaunchTemplate { get; private set; } = null!;

        /// <summary>
        /// The maximum number of instances allowed in the EC2 Auto Scaling group.
        /// During automatic scaling events, GameLift FleetIQ and EC2 do not scale up the group above this maximum.
        /// </summary>
        [Output("maxSize")]
        public Output<int> MaxSize { get; private set; } = null!;

        /// <summary>
        /// The minimum number of instances allowed in the EC2 Auto Scaling group.
        /// During automatic scaling events, GameLift FleetIQ and EC2 do not scale down the group below this minimum.
        /// </summary>
        [Output("minSize")]
        public Output<int> MinSize { get; private set; } = null!;

        /// <summary>
        /// ARN for an IAM role that allows Amazon GameLift to access your EC2 Auto Scaling groups.
        /// </summary>
        [Output("roleArn")]
        public Output<string> RoleArn { get; private set; } = null!;

        /// <summary>
        /// Key-value map of resource tags
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        /// <summary>
        /// A list of VPC subnets to use with instances in the game server group.
        /// By default, all GameLift FleetIQ-supported Availability Zones are used.
        /// </summary>
        [Output("vpcSubnets")]
        public Output<ImmutableArray<string>> VpcSubnets { get; private set; } = null!;


        /// <summary>
        /// Create a GameServerGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GameServerGroup(string name, GameServerGroupArgs args, CustomResourceOptions? options = null)
            : base("aws:gamelift/gameServerGroup:GameServerGroup", name, args ?? new GameServerGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GameServerGroup(string name, Input<string> id, GameServerGroupState? state = null, CustomResourceOptions? options = null)
            : base("aws:gamelift/gameServerGroup:GameServerGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "tagsAll",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GameServerGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GameServerGroup Get(string name, Input<string> id, GameServerGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new GameServerGroup(name, id, state, options);
        }
    }

    public sealed class GameServerGroupArgs : global::Pulumi.ResourceArgs
    {
        [Input("autoScalingPolicy")]
        public Input<Inputs.GameServerGroupAutoScalingPolicyArgs>? AutoScalingPolicy { get; set; }

        /// <summary>
        /// Indicates how GameLift FleetIQ balances the use of Spot Instances and On-Demand Instances.
        /// Valid values: `SPOT_ONLY`, `SPOT_PREFERRED`, `ON_DEMAND_ONLY`. Defaults to `SPOT_PREFERRED`.
        /// </summary>
        [Input("balancingStrategy")]
        public Input<string>? BalancingStrategy { get; set; }

        /// <summary>
        /// Name of the game server group.
        /// This value is used to generate unique ARN identifiers for the EC2 Auto Scaling group and the GameLift FleetIQ game server group.
        /// </summary>
        [Input("gameServerGroupName", required: true)]
        public Input<string> GameServerGroupName { get; set; } = null!;

        /// <summary>
        /// Indicates whether instances in the game server group are protected from early termination.
        /// Unprotected instances that have active game servers running might be terminated during a scale-down event,
        /// causing players to be dropped from the game.
        /// Protected instances cannot be terminated while there are active game servers running except in the event
        /// of a forced game server group deletion.
        /// Valid values: `NO_PROTECTION`, `FULL_PROTECTION`. Defaults to `NO_PROTECTION`.
        /// </summary>
        [Input("gameServerProtectionPolicy")]
        public Input<string>? GameServerProtectionPolicy { get; set; }

        [Input("instanceDefinitions", required: true)]
        private InputList<Inputs.GameServerGroupInstanceDefinitionArgs>? _instanceDefinitions;
        public InputList<Inputs.GameServerGroupInstanceDefinitionArgs> InstanceDefinitions
        {
            get => _instanceDefinitions ?? (_instanceDefinitions = new InputList<Inputs.GameServerGroupInstanceDefinitionArgs>());
            set => _instanceDefinitions = value;
        }

        [Input("launchTemplate", required: true)]
        public Input<Inputs.GameServerGroupLaunchTemplateArgs> LaunchTemplate { get; set; } = null!;

        /// <summary>
        /// The maximum number of instances allowed in the EC2 Auto Scaling group.
        /// During automatic scaling events, GameLift FleetIQ and EC2 do not scale up the group above this maximum.
        /// </summary>
        [Input("maxSize", required: true)]
        public Input<int> MaxSize { get; set; } = null!;

        /// <summary>
        /// The minimum number of instances allowed in the EC2 Auto Scaling group.
        /// During automatic scaling events, GameLift FleetIQ and EC2 do not scale down the group below this minimum.
        /// </summary>
        [Input("minSize", required: true)]
        public Input<int> MinSize { get; set; } = null!;

        /// <summary>
        /// ARN for an IAM role that allows Amazon GameLift to access your EC2 Auto Scaling groups.
        /// </summary>
        [Input("roleArn", required: true)]
        public Input<string> RoleArn { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value map of resource tags
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("vpcSubnets")]
        private InputList<string>? _vpcSubnets;

        /// <summary>
        /// A list of VPC subnets to use with instances in the game server group.
        /// By default, all GameLift FleetIQ-supported Availability Zones are used.
        /// </summary>
        public InputList<string> VpcSubnets
        {
            get => _vpcSubnets ?? (_vpcSubnets = new InputList<string>());
            set => _vpcSubnets = value;
        }

        public GameServerGroupArgs()
        {
        }
        public static new GameServerGroupArgs Empty => new GameServerGroupArgs();
    }

    public sealed class GameServerGroupState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ARN of the GameLift Game Server Group.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// The ARN of the created EC2 Auto Scaling group.
        /// </summary>
        [Input("autoScalingGroupArn")]
        public Input<string>? AutoScalingGroupArn { get; set; }

        [Input("autoScalingPolicy")]
        public Input<Inputs.GameServerGroupAutoScalingPolicyGetArgs>? AutoScalingPolicy { get; set; }

        /// <summary>
        /// Indicates how GameLift FleetIQ balances the use of Spot Instances and On-Demand Instances.
        /// Valid values: `SPOT_ONLY`, `SPOT_PREFERRED`, `ON_DEMAND_ONLY`. Defaults to `SPOT_PREFERRED`.
        /// </summary>
        [Input("balancingStrategy")]
        public Input<string>? BalancingStrategy { get; set; }

        /// <summary>
        /// Name of the game server group.
        /// This value is used to generate unique ARN identifiers for the EC2 Auto Scaling group and the GameLift FleetIQ game server group.
        /// </summary>
        [Input("gameServerGroupName")]
        public Input<string>? GameServerGroupName { get; set; }

        /// <summary>
        /// Indicates whether instances in the game server group are protected from early termination.
        /// Unprotected instances that have active game servers running might be terminated during a scale-down event,
        /// causing players to be dropped from the game.
        /// Protected instances cannot be terminated while there are active game servers running except in the event
        /// of a forced game server group deletion.
        /// Valid values: `NO_PROTECTION`, `FULL_PROTECTION`. Defaults to `NO_PROTECTION`.
        /// </summary>
        [Input("gameServerProtectionPolicy")]
        public Input<string>? GameServerProtectionPolicy { get; set; }

        [Input("instanceDefinitions")]
        private InputList<Inputs.GameServerGroupInstanceDefinitionGetArgs>? _instanceDefinitions;
        public InputList<Inputs.GameServerGroupInstanceDefinitionGetArgs> InstanceDefinitions
        {
            get => _instanceDefinitions ?? (_instanceDefinitions = new InputList<Inputs.GameServerGroupInstanceDefinitionGetArgs>());
            set => _instanceDefinitions = value;
        }

        [Input("launchTemplate")]
        public Input<Inputs.GameServerGroupLaunchTemplateGetArgs>? LaunchTemplate { get; set; }

        /// <summary>
        /// The maximum number of instances allowed in the EC2 Auto Scaling group.
        /// During automatic scaling events, GameLift FleetIQ and EC2 do not scale up the group above this maximum.
        /// </summary>
        [Input("maxSize")]
        public Input<int>? MaxSize { get; set; }

        /// <summary>
        /// The minimum number of instances allowed in the EC2 Auto Scaling group.
        /// During automatic scaling events, GameLift FleetIQ and EC2 do not scale down the group below this minimum.
        /// </summary>
        [Input("minSize")]
        public Input<int>? MinSize { get; set; }

        /// <summary>
        /// ARN for an IAM role that allows Amazon GameLift to access your EC2 Auto Scaling groups.
        /// </summary>
        [Input("roleArn")]
        public Input<string>? RoleArn { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Key-value map of resource tags
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        [Obsolete(@"Please use `tags` instead.")]
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableDictionary.Create<string, string>());
                _tagsAll = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        [Input("vpcSubnets")]
        private InputList<string>? _vpcSubnets;

        /// <summary>
        /// A list of VPC subnets to use with instances in the game server group.
        /// By default, all GameLift FleetIQ-supported Availability Zones are used.
        /// </summary>
        public InputList<string> VpcSubnets
        {
            get => _vpcSubnets ?? (_vpcSubnets = new InputList<string>());
            set => _vpcSubnets = value;
        }

        public GameServerGroupState()
        {
        }
        public static new GameServerGroupState Empty => new GameServerGroupState();
    }
}
