// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Waf
{
    /// <summary>
    /// Provides a WAF SQL Injection Match Set Resource
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/waf_sql_injection_match_set.html.markdown.
    /// </summary>
    public partial class SqlInjectionMatchSet : Pulumi.CustomResource
    {
        /// <summary>
        /// The name or description of the SQL Injection Match Set.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The parts of web requests that you want AWS WAF to inspect for malicious SQL code and, if you want AWS WAF to inspect a header, the name of the header.
        /// </summary>
        [Output("sqlInjectionMatchTuples")]
        public Output<ImmutableArray<Outputs.SqlInjectionMatchSetSqlInjectionMatchTuples>> SqlInjectionMatchTuples { get; private set; } = null!;


        /// <summary>
        /// Create a SqlInjectionMatchSet resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SqlInjectionMatchSet(string name, SqlInjectionMatchSetArgs? args = null, CustomResourceOptions? options = null)
            : base("aws:waf/sqlInjectionMatchSet:SqlInjectionMatchSet", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private SqlInjectionMatchSet(string name, Input<string> id, SqlInjectionMatchSetState? state = null, CustomResourceOptions? options = null)
            : base("aws:waf/sqlInjectionMatchSet:SqlInjectionMatchSet", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SqlInjectionMatchSet resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SqlInjectionMatchSet Get(string name, Input<string> id, SqlInjectionMatchSetState? state = null, CustomResourceOptions? options = null)
        {
            return new SqlInjectionMatchSet(name, id, state, options);
        }
    }

    public sealed class SqlInjectionMatchSetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name or description of the SQL Injection Match Set.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("sqlInjectionMatchTuples")]
        private InputList<Inputs.SqlInjectionMatchSetSqlInjectionMatchTuplesArgs>? _sqlInjectionMatchTuples;

        /// <summary>
        /// The parts of web requests that you want AWS WAF to inspect for malicious SQL code and, if you want AWS WAF to inspect a header, the name of the header.
        /// </summary>
        public InputList<Inputs.SqlInjectionMatchSetSqlInjectionMatchTuplesArgs> SqlInjectionMatchTuples
        {
            get => _sqlInjectionMatchTuples ?? (_sqlInjectionMatchTuples = new InputList<Inputs.SqlInjectionMatchSetSqlInjectionMatchTuplesArgs>());
            set => _sqlInjectionMatchTuples = value;
        }

        public SqlInjectionMatchSetArgs()
        {
        }
    }

    public sealed class SqlInjectionMatchSetState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name or description of the SQL Injection Match Set.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("sqlInjectionMatchTuples")]
        private InputList<Inputs.SqlInjectionMatchSetSqlInjectionMatchTuplesGetArgs>? _sqlInjectionMatchTuples;

        /// <summary>
        /// The parts of web requests that you want AWS WAF to inspect for malicious SQL code and, if you want AWS WAF to inspect a header, the name of the header.
        /// </summary>
        public InputList<Inputs.SqlInjectionMatchSetSqlInjectionMatchTuplesGetArgs> SqlInjectionMatchTuples
        {
            get => _sqlInjectionMatchTuples ?? (_sqlInjectionMatchTuples = new InputList<Inputs.SqlInjectionMatchSetSqlInjectionMatchTuplesGetArgs>());
            set => _sqlInjectionMatchTuples = value;
        }

        public SqlInjectionMatchSetState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class SqlInjectionMatchSetSqlInjectionMatchTuplesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies where in a web request to look for snippets of malicious SQL code.
        /// </summary>
        [Input("fieldToMatch", required: true)]
        public Input<SqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatchArgs> FieldToMatch { get; set; } = null!;

        /// <summary>
        /// Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
        /// If you specify a transformation, AWS WAF performs the transformation on `field_to_match` before inspecting a request for a match.
        /// e.g. `CMD_LINE`, `HTML_ENTITY_DECODE` or `NONE`.
        /// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_SqlInjectionMatchTuple.html#WAF-Type-SqlInjectionMatchTuple-TextTransformation)
        /// for all supported values.
        /// </summary>
        [Input("textTransformation", required: true)]
        public Input<string> TextTransformation { get; set; } = null!;

        public SqlInjectionMatchSetSqlInjectionMatchTuplesArgs()
        {
        }
    }

    public sealed class SqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatchArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// When `type` is `HEADER`, enter the name of the header that you want to search, e.g. `User-Agent` or `Referer`.
        /// If `type` is any other value, omit this field.
        /// </summary>
        [Input("data")]
        public Input<string>? Data { get; set; }

        /// <summary>
        /// The part of the web request that you want AWS WAF to search for a specified string.
        /// e.g. `HEADER`, `METHOD` or `BODY`.
        /// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_FieldToMatch.html)
        /// for all supported values.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public SqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatchArgs()
        {
        }
    }

    public sealed class SqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatchGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// When `type` is `HEADER`, enter the name of the header that you want to search, e.g. `User-Agent` or `Referer`.
        /// If `type` is any other value, omit this field.
        /// </summary>
        [Input("data")]
        public Input<string>? Data { get; set; }

        /// <summary>
        /// The part of the web request that you want AWS WAF to search for a specified string.
        /// e.g. `HEADER`, `METHOD` or `BODY`.
        /// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_FieldToMatch.html)
        /// for all supported values.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public SqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatchGetArgs()
        {
        }
    }

    public sealed class SqlInjectionMatchSetSqlInjectionMatchTuplesGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies where in a web request to look for snippets of malicious SQL code.
        /// </summary>
        [Input("fieldToMatch", required: true)]
        public Input<SqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatchGetArgs> FieldToMatch { get; set; } = null!;

        /// <summary>
        /// Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
        /// If you specify a transformation, AWS WAF performs the transformation on `field_to_match` before inspecting a request for a match.
        /// e.g. `CMD_LINE`, `HTML_ENTITY_DECODE` or `NONE`.
        /// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_SqlInjectionMatchTuple.html#WAF-Type-SqlInjectionMatchTuple-TextTransformation)
        /// for all supported values.
        /// </summary>
        [Input("textTransformation", required: true)]
        public Input<string> TextTransformation { get; set; } = null!;

        public SqlInjectionMatchSetSqlInjectionMatchTuplesGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class SqlInjectionMatchSetSqlInjectionMatchTuples
    {
        /// <summary>
        /// Specifies where in a web request to look for snippets of malicious SQL code.
        /// </summary>
        public readonly SqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatch FieldToMatch;
        /// <summary>
        /// Text transformations used to eliminate unusual formatting that attackers use in web requests in an effort to bypass AWS WAF.
        /// If you specify a transformation, AWS WAF performs the transformation on `field_to_match` before inspecting a request for a match.
        /// e.g. `CMD_LINE`, `HTML_ENTITY_DECODE` or `NONE`.
        /// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_SqlInjectionMatchTuple.html#WAF-Type-SqlInjectionMatchTuple-TextTransformation)
        /// for all supported values.
        /// </summary>
        public readonly string TextTransformation;

        [OutputConstructor]
        private SqlInjectionMatchSetSqlInjectionMatchTuples(
            SqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatch fieldToMatch,
            string textTransformation)
        {
            FieldToMatch = fieldToMatch;
            TextTransformation = textTransformation;
        }
    }

    [OutputType]
    public sealed class SqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatch
    {
        /// <summary>
        /// When `type` is `HEADER`, enter the name of the header that you want to search, e.g. `User-Agent` or `Referer`.
        /// If `type` is any other value, omit this field.
        /// </summary>
        public readonly string? Data;
        /// <summary>
        /// The part of the web request that you want AWS WAF to search for a specified string.
        /// e.g. `HEADER`, `METHOD` or `BODY`.
        /// See [docs](http://docs.aws.amazon.com/waf/latest/APIReference/API_FieldToMatch.html)
        /// for all supported values.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private SqlInjectionMatchSetSqlInjectionMatchTuplesFieldToMatch(
            string? data,
            string type)
        {
            Data = data;
            Type = type;
        }
    }
    }
}
