// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.Waf
{
    /// <summary>
    /// Provides a WAF Web ACL Resource
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/waf_web_acl.html.markdown.
    /// </summary>
    public partial class WebAcl : Pulumi.CustomResource
    {
        /// <summary>
        /// The ARN of the WAF WebACL.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// Configuration block with action that you want AWS WAF to take when a request doesn't match the criteria in any of the rules that are associated with the web ACL. Detailed below.
        /// </summary>
        [Output("defaultAction")]
        public Output<Outputs.WebAclDefaultAction> DefaultAction { get; private set; } = null!;

        /// <summary>
        /// Configuration block to enable WAF logging. Detailed below.
        /// </summary>
        [Output("loggingConfiguration")]
        public Output<Outputs.WebAclLoggingConfiguration?> LoggingConfiguration { get; private set; } = null!;

        /// <summary>
        /// The name or description for the Amazon CloudWatch metric of this web ACL.
        /// </summary>
        [Output("metricName")]
        public Output<string> MetricName { get; private set; } = null!;

        /// <summary>
        /// The name or description of the web ACL.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Configuration blocks containing rules to associate with the web ACL and the settings for each rule. Detailed below.
        /// </summary>
        [Output("rules")]
        public Output<ImmutableArray<Outputs.WebAclRules>> Rules { get; private set; } = null!;

        /// <summary>
        /// Key-value mapping of resource tags
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, object>?> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a WebAcl resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WebAcl(string name, WebAclArgs args, CustomResourceOptions? options = null)
            : base("aws:waf/webAcl:WebAcl", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private WebAcl(string name, Input<string> id, WebAclState? state = null, CustomResourceOptions? options = null)
            : base("aws:waf/webAcl:WebAcl", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WebAcl resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WebAcl Get(string name, Input<string> id, WebAclState? state = null, CustomResourceOptions? options = null)
        {
            return new WebAcl(name, id, state, options);
        }
    }

    public sealed class WebAclArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Configuration block with action that you want AWS WAF to take when a request doesn't match the criteria in any of the rules that are associated with the web ACL. Detailed below.
        /// </summary>
        [Input("defaultAction", required: true)]
        public Input<Inputs.WebAclDefaultActionArgs> DefaultAction { get; set; } = null!;

        /// <summary>
        /// Configuration block to enable WAF logging. Detailed below.
        /// </summary>
        [Input("loggingConfiguration")]
        public Input<Inputs.WebAclLoggingConfigurationArgs>? LoggingConfiguration { get; set; }

        /// <summary>
        /// The name or description for the Amazon CloudWatch metric of this web ACL.
        /// </summary>
        [Input("metricName", required: true)]
        public Input<string> MetricName { get; set; } = null!;

        /// <summary>
        /// The name or description of the web ACL.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("rules")]
        private InputList<Inputs.WebAclRulesArgs>? _rules;

        /// <summary>
        /// Configuration blocks containing rules to associate with the web ACL and the settings for each rule. Detailed below.
        /// </summary>
        public InputList<Inputs.WebAclRulesArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.WebAclRulesArgs>());
            set => _rules = value;
        }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// Key-value mapping of resource tags
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        public WebAclArgs()
        {
        }
    }

    public sealed class WebAclState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ARN of the WAF WebACL.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// Configuration block with action that you want AWS WAF to take when a request doesn't match the criteria in any of the rules that are associated with the web ACL. Detailed below.
        /// </summary>
        [Input("defaultAction")]
        public Input<Inputs.WebAclDefaultActionGetArgs>? DefaultAction { get; set; }

        /// <summary>
        /// Configuration block to enable WAF logging. Detailed below.
        /// </summary>
        [Input("loggingConfiguration")]
        public Input<Inputs.WebAclLoggingConfigurationGetArgs>? LoggingConfiguration { get; set; }

        /// <summary>
        /// The name or description for the Amazon CloudWatch metric of this web ACL.
        /// </summary>
        [Input("metricName")]
        public Input<string>? MetricName { get; set; }

        /// <summary>
        /// The name or description of the web ACL.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("rules")]
        private InputList<Inputs.WebAclRulesGetArgs>? _rules;

        /// <summary>
        /// Configuration blocks containing rules to associate with the web ACL and the settings for each rule. Detailed below.
        /// </summary>
        public InputList<Inputs.WebAclRulesGetArgs> Rules
        {
            get => _rules ?? (_rules = new InputList<Inputs.WebAclRulesGetArgs>());
            set => _rules = value;
        }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// Key-value mapping of resource tags
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        public WebAclState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class WebAclDefaultActionArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The rule type, either `REGULAR`, as defined by [Rule](http://docs.aws.amazon.com/waf/latest/APIReference/API_Rule.html), `RATE_BASED`, as defined by [RateBasedRule](http://docs.aws.amazon.com/waf/latest/APIReference/API_RateBasedRule.html), or `GROUP`, as defined by [RuleGroup](https://docs.aws.amazon.com/waf/latest/APIReference/API_RuleGroup.html). The default is REGULAR. If you add a RATE_BASED rule, you need to set `type` as `RATE_BASED`. If you add a GROUP rule, you need to set `type` as `GROUP`.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public WebAclDefaultActionArgs()
        {
        }
    }

    public sealed class WebAclDefaultActionGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The rule type, either `REGULAR`, as defined by [Rule](http://docs.aws.amazon.com/waf/latest/APIReference/API_Rule.html), `RATE_BASED`, as defined by [RateBasedRule](http://docs.aws.amazon.com/waf/latest/APIReference/API_RateBasedRule.html), or `GROUP`, as defined by [RuleGroup](https://docs.aws.amazon.com/waf/latest/APIReference/API_RuleGroup.html). The default is REGULAR. If you add a RATE_BASED rule, you need to set `type` as `RATE_BASED`. If you add a GROUP rule, you need to set `type` as `GROUP`.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public WebAclDefaultActionGetArgs()
        {
        }
    }

    public sealed class WebAclLoggingConfigurationArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of Kinesis Firehose Delivery Stream
        /// </summary>
        [Input("logDestination", required: true)]
        public Input<string> LogDestination { get; set; } = null!;

        /// <summary>
        /// Configuration block containing parts of the request that you want redacted from the logs. Detailed below.
        /// </summary>
        [Input("redactedFields")]
        public Input<WebAclLoggingConfigurationRedactedFieldsArgs>? RedactedFields { get; set; }

        public WebAclLoggingConfigurationArgs()
        {
        }
    }

    public sealed class WebAclLoggingConfigurationGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of Kinesis Firehose Delivery Stream
        /// </summary>
        [Input("logDestination", required: true)]
        public Input<string> LogDestination { get; set; } = null!;

        /// <summary>
        /// Configuration block containing parts of the request that you want redacted from the logs. Detailed below.
        /// </summary>
        [Input("redactedFields")]
        public Input<WebAclLoggingConfigurationRedactedFieldsGetArgs>? RedactedFields { get; set; }

        public WebAclLoggingConfigurationGetArgs()
        {
        }
    }

    public sealed class WebAclLoggingConfigurationRedactedFieldsArgs : Pulumi.ResourceArgs
    {
        [Input("fieldToMatches", required: true)]
        private InputList<WebAclLoggingConfigurationRedactedFieldsFieldToMatchesArgs>? _fieldToMatches;

        /// <summary>
        /// Set of configuration blocks for fields to redact. Detailed below.
        /// </summary>
        public InputList<WebAclLoggingConfigurationRedactedFieldsFieldToMatchesArgs> FieldToMatches
        {
            get => _fieldToMatches ?? (_fieldToMatches = new InputList<WebAclLoggingConfigurationRedactedFieldsFieldToMatchesArgs>());
            set => _fieldToMatches = value;
        }

        public WebAclLoggingConfigurationRedactedFieldsArgs()
        {
        }
    }

    public sealed class WebAclLoggingConfigurationRedactedFieldsFieldToMatchesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// When the value of `type` is `HEADER`, enter the name of the header that you want the WAF to search, for example, `User-Agent` or `Referer`. If the value of `type` is any other value, omit `data`.
        /// </summary>
        [Input("data")]
        public Input<string>? Data { get; set; }

        /// <summary>
        /// The rule type, either `REGULAR`, as defined by [Rule](http://docs.aws.amazon.com/waf/latest/APIReference/API_Rule.html), `RATE_BASED`, as defined by [RateBasedRule](http://docs.aws.amazon.com/waf/latest/APIReference/API_RateBasedRule.html), or `GROUP`, as defined by [RuleGroup](https://docs.aws.amazon.com/waf/latest/APIReference/API_RuleGroup.html). The default is REGULAR. If you add a RATE_BASED rule, you need to set `type` as `RATE_BASED`. If you add a GROUP rule, you need to set `type` as `GROUP`.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public WebAclLoggingConfigurationRedactedFieldsFieldToMatchesArgs()
        {
        }
    }

    public sealed class WebAclLoggingConfigurationRedactedFieldsFieldToMatchesGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// When the value of `type` is `HEADER`, enter the name of the header that you want the WAF to search, for example, `User-Agent` or `Referer`. If the value of `type` is any other value, omit `data`.
        /// </summary>
        [Input("data")]
        public Input<string>? Data { get; set; }

        /// <summary>
        /// The rule type, either `REGULAR`, as defined by [Rule](http://docs.aws.amazon.com/waf/latest/APIReference/API_Rule.html), `RATE_BASED`, as defined by [RateBasedRule](http://docs.aws.amazon.com/waf/latest/APIReference/API_RateBasedRule.html), or `GROUP`, as defined by [RuleGroup](https://docs.aws.amazon.com/waf/latest/APIReference/API_RuleGroup.html). The default is REGULAR. If you add a RATE_BASED rule, you need to set `type` as `RATE_BASED`. If you add a GROUP rule, you need to set `type` as `GROUP`.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public WebAclLoggingConfigurationRedactedFieldsFieldToMatchesGetArgs()
        {
        }
    }

    public sealed class WebAclLoggingConfigurationRedactedFieldsGetArgs : Pulumi.ResourceArgs
    {
        [Input("fieldToMatches", required: true)]
        private InputList<WebAclLoggingConfigurationRedactedFieldsFieldToMatchesGetArgs>? _fieldToMatches;

        /// <summary>
        /// Set of configuration blocks for fields to redact. Detailed below.
        /// </summary>
        public InputList<WebAclLoggingConfigurationRedactedFieldsFieldToMatchesGetArgs> FieldToMatches
        {
            get => _fieldToMatches ?? (_fieldToMatches = new InputList<WebAclLoggingConfigurationRedactedFieldsFieldToMatchesGetArgs>());
            set => _fieldToMatches = value;
        }

        public WebAclLoggingConfigurationRedactedFieldsGetArgs()
        {
        }
    }

    public sealed class WebAclRulesActionArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The rule type, either `REGULAR`, as defined by [Rule](http://docs.aws.amazon.com/waf/latest/APIReference/API_Rule.html), `RATE_BASED`, as defined by [RateBasedRule](http://docs.aws.amazon.com/waf/latest/APIReference/API_RateBasedRule.html), or `GROUP`, as defined by [RuleGroup](https://docs.aws.amazon.com/waf/latest/APIReference/API_RuleGroup.html). The default is REGULAR. If you add a RATE_BASED rule, you need to set `type` as `RATE_BASED`. If you add a GROUP rule, you need to set `type` as `GROUP`.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public WebAclRulesActionArgs()
        {
        }
    }

    public sealed class WebAclRulesActionGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The rule type, either `REGULAR`, as defined by [Rule](http://docs.aws.amazon.com/waf/latest/APIReference/API_Rule.html), `RATE_BASED`, as defined by [RateBasedRule](http://docs.aws.amazon.com/waf/latest/APIReference/API_RateBasedRule.html), or `GROUP`, as defined by [RuleGroup](https://docs.aws.amazon.com/waf/latest/APIReference/API_RuleGroup.html). The default is REGULAR. If you add a RATE_BASED rule, you need to set `type` as `RATE_BASED`. If you add a GROUP rule, you need to set `type` as `GROUP`.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public WebAclRulesActionGetArgs()
        {
        }
    }

    public sealed class WebAclRulesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The action that CloudFront or AWS WAF takes when a web request matches the conditions in the rule. Not used if `type` is `GROUP`.
        /// </summary>
        [Input("action")]
        public Input<WebAclRulesActionArgs>? Action { get; set; }

        /// <summary>
        /// Override the action that a group requests CloudFront or AWS WAF takes when a web request matches the conditions in the rule. Only used if `type` is `GROUP`.
        /// </summary>
        [Input("overrideAction")]
        public Input<WebAclRulesOverrideActionArgs>? OverrideAction { get; set; }

        /// <summary>
        /// Specifies the order in which the rules in a WebACL are evaluated.
        /// Rules with a lower value are evaluated before rules with a higher value.
        /// </summary>
        [Input("priority", required: true)]
        public Input<int> Priority { get; set; } = null!;

        /// <summary>
        /// ID of the associated WAF (Global) rule (e.g. [`aws.waf.Rule`](https://www.terraform.io/docs/providers/aws/r/waf_rule.html)). WAF (Regional) rules cannot be used.
        /// </summary>
        [Input("ruleId", required: true)]
        public Input<string> RuleId { get; set; } = null!;

        /// <summary>
        /// The rule type, either `REGULAR`, as defined by [Rule](http://docs.aws.amazon.com/waf/latest/APIReference/API_Rule.html), `RATE_BASED`, as defined by [RateBasedRule](http://docs.aws.amazon.com/waf/latest/APIReference/API_RateBasedRule.html), or `GROUP`, as defined by [RuleGroup](https://docs.aws.amazon.com/waf/latest/APIReference/API_RuleGroup.html). The default is REGULAR. If you add a RATE_BASED rule, you need to set `type` as `RATE_BASED`. If you add a GROUP rule, you need to set `type` as `GROUP`.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public WebAclRulesArgs()
        {
        }
    }

    public sealed class WebAclRulesGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The action that CloudFront or AWS WAF takes when a web request matches the conditions in the rule. Not used if `type` is `GROUP`.
        /// </summary>
        [Input("action")]
        public Input<WebAclRulesActionGetArgs>? Action { get; set; }

        /// <summary>
        /// Override the action that a group requests CloudFront or AWS WAF takes when a web request matches the conditions in the rule. Only used if `type` is `GROUP`.
        /// </summary>
        [Input("overrideAction")]
        public Input<WebAclRulesOverrideActionGetArgs>? OverrideAction { get; set; }

        /// <summary>
        /// Specifies the order in which the rules in a WebACL are evaluated.
        /// Rules with a lower value are evaluated before rules with a higher value.
        /// </summary>
        [Input("priority", required: true)]
        public Input<int> Priority { get; set; } = null!;

        /// <summary>
        /// ID of the associated WAF (Global) rule (e.g. [`aws.waf.Rule`](https://www.terraform.io/docs/providers/aws/r/waf_rule.html)). WAF (Regional) rules cannot be used.
        /// </summary>
        [Input("ruleId", required: true)]
        public Input<string> RuleId { get; set; } = null!;

        /// <summary>
        /// The rule type, either `REGULAR`, as defined by [Rule](http://docs.aws.amazon.com/waf/latest/APIReference/API_Rule.html), `RATE_BASED`, as defined by [RateBasedRule](http://docs.aws.amazon.com/waf/latest/APIReference/API_RateBasedRule.html), or `GROUP`, as defined by [RuleGroup](https://docs.aws.amazon.com/waf/latest/APIReference/API_RuleGroup.html). The default is REGULAR. If you add a RATE_BASED rule, you need to set `type` as `RATE_BASED`. If you add a GROUP rule, you need to set `type` as `GROUP`.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public WebAclRulesGetArgs()
        {
        }
    }

    public sealed class WebAclRulesOverrideActionArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The rule type, either `REGULAR`, as defined by [Rule](http://docs.aws.amazon.com/waf/latest/APIReference/API_Rule.html), `RATE_BASED`, as defined by [RateBasedRule](http://docs.aws.amazon.com/waf/latest/APIReference/API_RateBasedRule.html), or `GROUP`, as defined by [RuleGroup](https://docs.aws.amazon.com/waf/latest/APIReference/API_RuleGroup.html). The default is REGULAR. If you add a RATE_BASED rule, you need to set `type` as `RATE_BASED`. If you add a GROUP rule, you need to set `type` as `GROUP`.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public WebAclRulesOverrideActionArgs()
        {
        }
    }

    public sealed class WebAclRulesOverrideActionGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The rule type, either `REGULAR`, as defined by [Rule](http://docs.aws.amazon.com/waf/latest/APIReference/API_Rule.html), `RATE_BASED`, as defined by [RateBasedRule](http://docs.aws.amazon.com/waf/latest/APIReference/API_RateBasedRule.html), or `GROUP`, as defined by [RuleGroup](https://docs.aws.amazon.com/waf/latest/APIReference/API_RuleGroup.html). The default is REGULAR. If you add a RATE_BASED rule, you need to set `type` as `RATE_BASED`. If you add a GROUP rule, you need to set `type` as `GROUP`.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public WebAclRulesOverrideActionGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class WebAclDefaultAction
    {
        /// <summary>
        /// The rule type, either `REGULAR`, as defined by [Rule](http://docs.aws.amazon.com/waf/latest/APIReference/API_Rule.html), `RATE_BASED`, as defined by [RateBasedRule](http://docs.aws.amazon.com/waf/latest/APIReference/API_RateBasedRule.html), or `GROUP`, as defined by [RuleGroup](https://docs.aws.amazon.com/waf/latest/APIReference/API_RuleGroup.html). The default is REGULAR. If you add a RATE_BASED rule, you need to set `type` as `RATE_BASED`. If you add a GROUP rule, you need to set `type` as `GROUP`.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private WebAclDefaultAction(string type)
        {
            Type = type;
        }
    }

    [OutputType]
    public sealed class WebAclLoggingConfiguration
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of Kinesis Firehose Delivery Stream
        /// </summary>
        public readonly string LogDestination;
        /// <summary>
        /// Configuration block containing parts of the request that you want redacted from the logs. Detailed below.
        /// </summary>
        public readonly WebAclLoggingConfigurationRedactedFields? RedactedFields;

        [OutputConstructor]
        private WebAclLoggingConfiguration(
            string logDestination,
            WebAclLoggingConfigurationRedactedFields? redactedFields)
        {
            LogDestination = logDestination;
            RedactedFields = redactedFields;
        }
    }

    [OutputType]
    public sealed class WebAclLoggingConfigurationRedactedFields
    {
        /// <summary>
        /// Set of configuration blocks for fields to redact. Detailed below.
        /// </summary>
        public readonly ImmutableArray<WebAclLoggingConfigurationRedactedFieldsFieldToMatches> FieldToMatches;

        [OutputConstructor]
        private WebAclLoggingConfigurationRedactedFields(ImmutableArray<WebAclLoggingConfigurationRedactedFieldsFieldToMatches> fieldToMatches)
        {
            FieldToMatches = fieldToMatches;
        }
    }

    [OutputType]
    public sealed class WebAclLoggingConfigurationRedactedFieldsFieldToMatches
    {
        /// <summary>
        /// When the value of `type` is `HEADER`, enter the name of the header that you want the WAF to search, for example, `User-Agent` or `Referer`. If the value of `type` is any other value, omit `data`.
        /// </summary>
        public readonly string? Data;
        /// <summary>
        /// The rule type, either `REGULAR`, as defined by [Rule](http://docs.aws.amazon.com/waf/latest/APIReference/API_Rule.html), `RATE_BASED`, as defined by [RateBasedRule](http://docs.aws.amazon.com/waf/latest/APIReference/API_RateBasedRule.html), or `GROUP`, as defined by [RuleGroup](https://docs.aws.amazon.com/waf/latest/APIReference/API_RuleGroup.html). The default is REGULAR. If you add a RATE_BASED rule, you need to set `type` as `RATE_BASED`. If you add a GROUP rule, you need to set `type` as `GROUP`.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private WebAclLoggingConfigurationRedactedFieldsFieldToMatches(
            string? data,
            string type)
        {
            Data = data;
            Type = type;
        }
    }

    [OutputType]
    public sealed class WebAclRules
    {
        /// <summary>
        /// The action that CloudFront or AWS WAF takes when a web request matches the conditions in the rule. Not used if `type` is `GROUP`.
        /// </summary>
        public readonly WebAclRulesAction? Action;
        /// <summary>
        /// Override the action that a group requests CloudFront or AWS WAF takes when a web request matches the conditions in the rule. Only used if `type` is `GROUP`.
        /// </summary>
        public readonly WebAclRulesOverrideAction? OverrideAction;
        /// <summary>
        /// Specifies the order in which the rules in a WebACL are evaluated.
        /// Rules with a lower value are evaluated before rules with a higher value.
        /// </summary>
        public readonly int Priority;
        /// <summary>
        /// ID of the associated WAF (Global) rule (e.g. [`aws.waf.Rule`](https://www.terraform.io/docs/providers/aws/r/waf_rule.html)). WAF (Regional) rules cannot be used.
        /// </summary>
        public readonly string RuleId;
        /// <summary>
        /// The rule type, either `REGULAR`, as defined by [Rule](http://docs.aws.amazon.com/waf/latest/APIReference/API_Rule.html), `RATE_BASED`, as defined by [RateBasedRule](http://docs.aws.amazon.com/waf/latest/APIReference/API_RateBasedRule.html), or `GROUP`, as defined by [RuleGroup](https://docs.aws.amazon.com/waf/latest/APIReference/API_RuleGroup.html). The default is REGULAR. If you add a RATE_BASED rule, you need to set `type` as `RATE_BASED`. If you add a GROUP rule, you need to set `type` as `GROUP`.
        /// </summary>
        public readonly string? Type;

        [OutputConstructor]
        private WebAclRules(
            WebAclRulesAction? action,
            WebAclRulesOverrideAction? overrideAction,
            int priority,
            string ruleId,
            string? type)
        {
            Action = action;
            OverrideAction = overrideAction;
            Priority = priority;
            RuleId = ruleId;
            Type = type;
        }
    }

    [OutputType]
    public sealed class WebAclRulesAction
    {
        /// <summary>
        /// The rule type, either `REGULAR`, as defined by [Rule](http://docs.aws.amazon.com/waf/latest/APIReference/API_Rule.html), `RATE_BASED`, as defined by [RateBasedRule](http://docs.aws.amazon.com/waf/latest/APIReference/API_RateBasedRule.html), or `GROUP`, as defined by [RuleGroup](https://docs.aws.amazon.com/waf/latest/APIReference/API_RuleGroup.html). The default is REGULAR. If you add a RATE_BASED rule, you need to set `type` as `RATE_BASED`. If you add a GROUP rule, you need to set `type` as `GROUP`.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private WebAclRulesAction(string type)
        {
            Type = type;
        }
    }

    [OutputType]
    public sealed class WebAclRulesOverrideAction
    {
        /// <summary>
        /// The rule type, either `REGULAR`, as defined by [Rule](http://docs.aws.amazon.com/waf/latest/APIReference/API_Rule.html), `RATE_BASED`, as defined by [RateBasedRule](http://docs.aws.amazon.com/waf/latest/APIReference/API_RateBasedRule.html), or `GROUP`, as defined by [RuleGroup](https://docs.aws.amazon.com/waf/latest/APIReference/API_RuleGroup.html). The default is REGULAR. If you add a RATE_BASED rule, you need to set `type` as `RATE_BASED`. If you add a GROUP rule, you need to set `type` as `GROUP`.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private WebAclRulesOverrideAction(string type)
        {
            Type = type;
        }
    }
    }
}
