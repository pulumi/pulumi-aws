// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.CodePipeline
{
    /// <summary>
    /// Provides a CodePipeline.
    /// 
    /// &gt; **NOTE on `aws.codepipeline.Pipeline`:** - the `GITHUB_TOKEN` environment variable must be set if the GitHub provider is specified.
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/codepipeline.markdown.
    /// </summary>
    public partial class Pipeline : Pulumi.CustomResource
    {
        /// <summary>
        /// The codepipeline ARN.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// An artifact_store block. Artifact stores are documented below.
        /// * `stage` (Minimum of at least two `stage` blocks is required) A stage block. Stages are documented below.
        /// </summary>
        [Output("artifactStore")]
        public Output<Outputs.PipelineArtifactStore> ArtifactStore { get; private set; } = null!;

        /// <summary>
        /// The name of the pipeline.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// A service role Amazon Resource Name (ARN) that grants AWS CodePipeline permission to make calls to AWS services on your behalf.
        /// </summary>
        [Output("roleArn")]
        public Output<string> RoleArn { get; private set; } = null!;

        [Output("stages")]
        public Output<ImmutableArray<Outputs.PipelineStages>> Stages { get; private set; } = null!;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, object>?> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a Pipeline resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Pipeline(string name, PipelineArgs args, CustomResourceOptions? options = null)
            : base("aws:codepipeline/pipeline:Pipeline", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private Pipeline(string name, Input<string> id, PipelineState? state = null, CustomResourceOptions? options = null)
            : base("aws:codepipeline/pipeline:Pipeline", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Pipeline resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Pipeline Get(string name, Input<string> id, PipelineState? state = null, CustomResourceOptions? options = null)
        {
            return new Pipeline(name, id, state, options);
        }
    }

    public sealed class PipelineArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// An artifact_store block. Artifact stores are documented below.
        /// * `stage` (Minimum of at least two `stage` blocks is required) A stage block. Stages are documented below.
        /// </summary>
        [Input("artifactStore", required: true)]
        public Input<Inputs.PipelineArtifactStoreArgs> ArtifactStore { get; set; } = null!;

        /// <summary>
        /// The name of the pipeline.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A service role Amazon Resource Name (ARN) that grants AWS CodePipeline permission to make calls to AWS services on your behalf.
        /// </summary>
        [Input("roleArn", required: true)]
        public Input<string> RoleArn { get; set; } = null!;

        [Input("stages", required: true)]
        private InputList<Inputs.PipelineStagesArgs>? _stages;
        public InputList<Inputs.PipelineStagesArgs> Stages
        {
            get => _stages ?? (_stages = new InputList<Inputs.PipelineStagesArgs>());
            set => _stages = value;
        }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        public PipelineArgs()
        {
        }
    }

    public sealed class PipelineState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The codepipeline ARN.
        /// </summary>
        [Input("arn")]
        public Input<string>? Arn { get; set; }

        /// <summary>
        /// An artifact_store block. Artifact stores are documented below.
        /// * `stage` (Minimum of at least two `stage` blocks is required) A stage block. Stages are documented below.
        /// </summary>
        [Input("artifactStore")]
        public Input<Inputs.PipelineArtifactStoreGetArgs>? ArtifactStore { get; set; }

        /// <summary>
        /// The name of the pipeline.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A service role Amazon Resource Name (ARN) that grants AWS CodePipeline permission to make calls to AWS services on your behalf.
        /// </summary>
        [Input("roleArn")]
        public Input<string>? RoleArn { get; set; }

        [Input("stages")]
        private InputList<Inputs.PipelineStagesGetArgs>? _stages;
        public InputList<Inputs.PipelineStagesGetArgs> Stages
        {
            get => _stages ?? (_stages = new InputList<Inputs.PipelineStagesGetArgs>());
            set => _stages = value;
        }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// A mapping of tags to assign to the resource.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        public PipelineState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class PipelineArtifactStoreArgs : Pulumi.ResourceArgs
    {
        [Input("encryptionKey")]
        public Input<PipelineArtifactStoreEncryptionKeyArgs>? EncryptionKey { get; set; }

        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public PipelineArtifactStoreArgs()
        {
        }
    }

    public sealed class PipelineArtifactStoreEncryptionKeyArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The codepipeline ID.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public PipelineArtifactStoreEncryptionKeyArgs()
        {
        }
    }

    public sealed class PipelineArtifactStoreEncryptionKeyGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The codepipeline ID.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public PipelineArtifactStoreEncryptionKeyGetArgs()
        {
        }
    }

    public sealed class PipelineArtifactStoreGetArgs : Pulumi.ResourceArgs
    {
        [Input("encryptionKey")]
        public Input<PipelineArtifactStoreEncryptionKeyGetArgs>? EncryptionKey { get; set; }

        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public PipelineArtifactStoreGetArgs()
        {
        }
    }

    public sealed class PipelineStagesActionsArgs : Pulumi.ResourceArgs
    {
        [Input("category", required: true)]
        public Input<string> Category { get; set; } = null!;

        [Input("configuration")]
        private InputMap<object>? _configuration;
        public InputMap<object> Configuration
        {
            get => _configuration ?? (_configuration = new InputMap<object>());
            set => _configuration = value;
        }

        [Input("inputArtifacts")]
        private InputList<string>? _inputArtifacts;
        public InputList<string> InputArtifacts
        {
            get => _inputArtifacts ?? (_inputArtifacts = new InputList<string>());
            set => _inputArtifacts = value;
        }

        /// <summary>
        /// The name of the pipeline.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("outputArtifacts")]
        private InputList<string>? _outputArtifacts;
        public InputList<string> OutputArtifacts
        {
            get => _outputArtifacts ?? (_outputArtifacts = new InputList<string>());
            set => _outputArtifacts = value;
        }

        [Input("owner", required: true)]
        public Input<string> Owner { get; set; } = null!;

        [Input("provider", required: true)]
        public Input<string> Provider { get; set; } = null!;

        /// <summary>
        /// A service role Amazon Resource Name (ARN) that grants AWS CodePipeline permission to make calls to AWS services on your behalf.
        /// </summary>
        [Input("roleArn")]
        public Input<string>? RoleArn { get; set; }

        [Input("runOrder")]
        public Input<int>? RunOrder { get; set; }

        [Input("version", required: true)]
        public Input<string> Version { get; set; } = null!;

        public PipelineStagesActionsArgs()
        {
        }
    }

    public sealed class PipelineStagesActionsGetArgs : Pulumi.ResourceArgs
    {
        [Input("category", required: true)]
        public Input<string> Category { get; set; } = null!;

        [Input("configuration")]
        private InputMap<object>? _configuration;
        public InputMap<object> Configuration
        {
            get => _configuration ?? (_configuration = new InputMap<object>());
            set => _configuration = value;
        }

        [Input("inputArtifacts")]
        private InputList<string>? _inputArtifacts;
        public InputList<string> InputArtifacts
        {
            get => _inputArtifacts ?? (_inputArtifacts = new InputList<string>());
            set => _inputArtifacts = value;
        }

        /// <summary>
        /// The name of the pipeline.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("outputArtifacts")]
        private InputList<string>? _outputArtifacts;
        public InputList<string> OutputArtifacts
        {
            get => _outputArtifacts ?? (_outputArtifacts = new InputList<string>());
            set => _outputArtifacts = value;
        }

        [Input("owner", required: true)]
        public Input<string> Owner { get; set; } = null!;

        [Input("provider", required: true)]
        public Input<string> Provider { get; set; } = null!;

        /// <summary>
        /// A service role Amazon Resource Name (ARN) that grants AWS CodePipeline permission to make calls to AWS services on your behalf.
        /// </summary>
        [Input("roleArn")]
        public Input<string>? RoleArn { get; set; }

        [Input("runOrder")]
        public Input<int>? RunOrder { get; set; }

        [Input("version", required: true)]
        public Input<string> Version { get; set; } = null!;

        public PipelineStagesActionsGetArgs()
        {
        }
    }

    public sealed class PipelineStagesArgs : Pulumi.ResourceArgs
    {
        [Input("actions", required: true)]
        private InputList<PipelineStagesActionsArgs>? _actions;
        public InputList<PipelineStagesActionsArgs> Actions
        {
            get => _actions ?? (_actions = new InputList<PipelineStagesActionsArgs>());
            set => _actions = value;
        }

        /// <summary>
        /// The name of the pipeline.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public PipelineStagesArgs()
        {
        }
    }

    public sealed class PipelineStagesGetArgs : Pulumi.ResourceArgs
    {
        [Input("actions", required: true)]
        private InputList<PipelineStagesActionsGetArgs>? _actions;
        public InputList<PipelineStagesActionsGetArgs> Actions
        {
            get => _actions ?? (_actions = new InputList<PipelineStagesActionsGetArgs>());
            set => _actions = value;
        }

        /// <summary>
        /// The name of the pipeline.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public PipelineStagesGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class PipelineArtifactStore
    {
        public readonly PipelineArtifactStoreEncryptionKey? EncryptionKey;
        public readonly string Location;
        public readonly string Type;

        [OutputConstructor]
        private PipelineArtifactStore(
            PipelineArtifactStoreEncryptionKey? encryptionKey,
            string location,
            string type)
        {
            EncryptionKey = encryptionKey;
            Location = location;
            Type = type;
        }
    }

    [OutputType]
    public sealed class PipelineArtifactStoreEncryptionKey
    {
        /// <summary>
        /// The codepipeline ID.
        /// </summary>
        public readonly string Id;
        public readonly string Type;

        [OutputConstructor]
        private PipelineArtifactStoreEncryptionKey(
            string id,
            string type)
        {
            Id = id;
            Type = type;
        }
    }

    [OutputType]
    public sealed class PipelineStages
    {
        public readonly ImmutableArray<PipelineStagesActions> Actions;
        /// <summary>
        /// The name of the pipeline.
        /// </summary>
        public readonly string Name;

        [OutputConstructor]
        private PipelineStages(
            ImmutableArray<PipelineStagesActions> actions,
            string name)
        {
            Actions = actions;
            Name = name;
        }
    }

    [OutputType]
    public sealed class PipelineStagesActions
    {
        public readonly string Category;
        public readonly ImmutableDictionary<string, object>? Configuration;
        public readonly ImmutableArray<string> InputArtifacts;
        /// <summary>
        /// The name of the pipeline.
        /// </summary>
        public readonly string Name;
        public readonly ImmutableArray<string> OutputArtifacts;
        public readonly string Owner;
        public readonly string Provider;
        /// <summary>
        /// A service role Amazon Resource Name (ARN) that grants AWS CodePipeline permission to make calls to AWS services on your behalf.
        /// </summary>
        public readonly string? RoleArn;
        public readonly int RunOrder;
        public readonly string Version;

        [OutputConstructor]
        private PipelineStagesActions(
            string category,
            ImmutableDictionary<string, object>? configuration,
            ImmutableArray<string> inputArtifacts,
            string name,
            ImmutableArray<string> outputArtifacts,
            string owner,
            string provider,
            string? roleArn,
            int runOrder,
            string version)
        {
            Category = category;
            Configuration = configuration;
            InputArtifacts = inputArtifacts;
            Name = name;
            OutputArtifacts = outputArtifacts;
            Owner = owner;
            Provider = provider;
            RoleArn = roleArn;
            RunOrder = runOrder;
            Version = version;
        }
    }
    }
}
