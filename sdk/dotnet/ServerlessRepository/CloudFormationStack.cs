// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.ServerlessRepository
{
    [AwsResourceType("aws:serverlessrepository/cloudFormationStack:CloudFormationStack")]
    public partial class CloudFormationStack : global::Pulumi.CustomResource
    {
        [Output("applicationId")]
        public Output<string> ApplicationId { get; private set; } = null!;

        [Output("capabilities")]
        public Output<ImmutableArray<string>> Capabilities { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("outputs")]
        public Output<ImmutableDictionary<string, string>> Outputs { get; private set; } = null!;

        [Output("parameters")]
        public Output<ImmutableDictionary<string, string>> Parameters { get; private set; } = null!;

        [Output("semanticVersion")]
        public Output<string> SemanticVersion { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;


        /// <summary>
        /// Create a CloudFormationStack resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CloudFormationStack(string name, CloudFormationStackArgs args, CustomResourceOptions? options = null)
            : base("aws:serverlessrepository/cloudFormationStack:CloudFormationStack", name, args ?? new CloudFormationStackArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CloudFormationStack(string name, Input<string> id, CloudFormationStackState? state = null, CustomResourceOptions? options = null)
            : base("aws:serverlessrepository/cloudFormationStack:CloudFormationStack", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CloudFormationStack resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CloudFormationStack Get(string name, Input<string> id, CloudFormationStackState? state = null, CustomResourceOptions? options = null)
        {
            return new CloudFormationStack(name, id, state, options);
        }
    }

    public sealed class CloudFormationStackArgs : global::Pulumi.ResourceArgs
    {
        [Input("applicationId", required: true)]
        public Input<string> ApplicationId { get; set; } = null!;

        [Input("capabilities", required: true)]
        private InputList<string>? _capabilities;
        public InputList<string> Capabilities
        {
            get => _capabilities ?? (_capabilities = new InputList<string>());
            set => _capabilities = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("parameters")]
        private InputMap<string>? _parameters;
        public InputMap<string> Parameters
        {
            get => _parameters ?? (_parameters = new InputMap<string>());
            set => _parameters = value;
        }

        [Input("semanticVersion")]
        public Input<string>? SemanticVersion { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public CloudFormationStackArgs()
        {
        }
        public static new CloudFormationStackArgs Empty => new CloudFormationStackArgs();
    }

    public sealed class CloudFormationStackState : global::Pulumi.ResourceArgs
    {
        [Input("applicationId")]
        public Input<string>? ApplicationId { get; set; }

        [Input("capabilities")]
        private InputList<string>? _capabilities;
        public InputList<string> Capabilities
        {
            get => _capabilities ?? (_capabilities = new InputList<string>());
            set => _capabilities = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("outputs")]
        private InputMap<string>? _outputs;
        public InputMap<string> Outputs
        {
            get => _outputs ?? (_outputs = new InputMap<string>());
            set => _outputs = value;
        }

        [Input("parameters")]
        private InputMap<string>? _parameters;
        public InputMap<string> Parameters
        {
            get => _parameters ?? (_parameters = new InputMap<string>());
            set => _parameters = value;
        }

        [Input("semanticVersion")]
        public Input<string>? SemanticVersion { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        public CloudFormationStackState()
        {
        }
        public static new CloudFormationStackState Empty => new CloudFormationStackState();
    }
}
