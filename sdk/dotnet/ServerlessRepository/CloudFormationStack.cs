// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.ServerlessRepository
{
    /// <summary>
    /// Deploys an Application CloudFormation Stack from the Serverless Application Repository.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Aws = Pulumi.Aws;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var currentPartition = Output.Create(Aws.GetPartition.InvokeAsync());
    ///         var currentRegion = Output.Create(Aws.GetRegion.InvokeAsync());
    ///         var postgres_rotator = new Aws.ServerlessRepository.CloudFormationStack("postgres-rotator", new Aws.ServerlessRepository.CloudFormationStackArgs
    ///         {
    ///             ApplicationId = "arn:aws:serverlessrepo:us-east-1:297356227824:applications/SecretsManagerRDSPostgreSQLRotationSingleUser",
    ///             Capabilities = 
    ///             {
    ///                 "CAPABILITY_IAM",
    ///                 "CAPABILITY_RESOURCE_POLICY",
    ///             },
    ///             Parameters = 
    ///             {
    ///                 { "endpoint", Output.Tuple(currentRegion, currentPartition).Apply(values =&gt;
    ///                 {
    ///                     var currentRegion = values.Item1;
    ///                     var currentPartition = values.Item2;
    ///                     return $"secretsmanager.{currentRegion.Name}.{currentPartition.DnsSuffix}";
    ///                 }) },
    ///                 { "functionName", "func-postgres-rotator" },
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// Serverless Application Repository Stack can be imported using the CloudFormation Stack name (with or without the `serverlessrepo-` prefix) or the CloudFormation Stack ID, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import aws:serverlessrepository/cloudFormationStack:CloudFormationStack example serverlessrepo-postgres-rotator
    /// ```
    /// </summary>
    [AwsResourceType("aws:serverlessrepository/cloudFormationStack:CloudFormationStack")]
    public partial class CloudFormationStack : Pulumi.CustomResource
    {
        /// <summary>
        /// The ARN of the application from the Serverless Application Repository.
        /// </summary>
        [Output("applicationId")]
        public Output<string> ApplicationId { get; private set; } = null!;

        /// <summary>
        /// A list of capabilities. Valid values are `CAPABILITY_IAM`, `CAPABILITY_NAMED_IAM`, `CAPABILITY_RESOURCE_POLICY`, or `CAPABILITY_AUTO_EXPAND`
        /// </summary>
        [Output("capabilities")]
        public Output<ImmutableArray<string>> Capabilities { get; private set; } = null!;

        /// <summary>
        /// The name of the stack to create. The resource deployed in AWS will be prefixed with `serverlessrepo-`
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// A map of outputs from the stack.
        /// </summary>
        [Output("outputs")]
        public Output<ImmutableDictionary<string, string>> Outputs { get; private set; } = null!;

        /// <summary>
        /// A map of Parameter structures that specify input parameters for the stack.
        /// </summary>
        [Output("parameters")]
        public Output<ImmutableDictionary<string, string>> Parameters { get; private set; } = null!;

        /// <summary>
        /// The version of the application to deploy. If not supplied, deploys the latest version.
        /// </summary>
        [Output("semanticVersion")]
        public Output<string> SemanticVersion { get; private set; } = null!;

        /// <summary>
        /// A list of tags to associate with this stack.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a CloudFormationStack resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CloudFormationStack(string name, CloudFormationStackArgs args, CustomResourceOptions? options = null)
            : base("aws:serverlessrepository/cloudFormationStack:CloudFormationStack", name, args ?? new CloudFormationStackArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CloudFormationStack(string name, Input<string> id, CloudFormationStackState? state = null, CustomResourceOptions? options = null)
            : base("aws:serverlessrepository/cloudFormationStack:CloudFormationStack", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CloudFormationStack resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CloudFormationStack Get(string name, Input<string> id, CloudFormationStackState? state = null, CustomResourceOptions? options = null)
        {
            return new CloudFormationStack(name, id, state, options);
        }
    }

    public sealed class CloudFormationStackArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ARN of the application from the Serverless Application Repository.
        /// </summary>
        [Input("applicationId", required: true)]
        public Input<string> ApplicationId { get; set; } = null!;

        [Input("capabilities", required: true)]
        private InputList<string>? _capabilities;

        /// <summary>
        /// A list of capabilities. Valid values are `CAPABILITY_IAM`, `CAPABILITY_NAMED_IAM`, `CAPABILITY_RESOURCE_POLICY`, or `CAPABILITY_AUTO_EXPAND`
        /// </summary>
        public InputList<string> Capabilities
        {
            get => _capabilities ?? (_capabilities = new InputList<string>());
            set => _capabilities = value;
        }

        /// <summary>
        /// The name of the stack to create. The resource deployed in AWS will be prefixed with `serverlessrepo-`
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("parameters")]
        private InputMap<string>? _parameters;

        /// <summary>
        /// A map of Parameter structures that specify input parameters for the stack.
        /// </summary>
        public InputMap<string> Parameters
        {
            get => _parameters ?? (_parameters = new InputMap<string>());
            set => _parameters = value;
        }

        /// <summary>
        /// The version of the application to deploy. If not supplied, deploys the latest version.
        /// </summary>
        [Input("semanticVersion")]
        public Input<string>? SemanticVersion { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A list of tags to associate with this stack.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public CloudFormationStackArgs()
        {
        }
    }

    public sealed class CloudFormationStackState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ARN of the application from the Serverless Application Repository.
        /// </summary>
        [Input("applicationId")]
        public Input<string>? ApplicationId { get; set; }

        [Input("capabilities")]
        private InputList<string>? _capabilities;

        /// <summary>
        /// A list of capabilities. Valid values are `CAPABILITY_IAM`, `CAPABILITY_NAMED_IAM`, `CAPABILITY_RESOURCE_POLICY`, or `CAPABILITY_AUTO_EXPAND`
        /// </summary>
        public InputList<string> Capabilities
        {
            get => _capabilities ?? (_capabilities = new InputList<string>());
            set => _capabilities = value;
        }

        /// <summary>
        /// The name of the stack to create. The resource deployed in AWS will be prefixed with `serverlessrepo-`
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("outputs")]
        private InputMap<string>? _outputs;

        /// <summary>
        /// A map of outputs from the stack.
        /// </summary>
        public InputMap<string> Outputs
        {
            get => _outputs ?? (_outputs = new InputMap<string>());
            set => _outputs = value;
        }

        [Input("parameters")]
        private InputMap<string>? _parameters;

        /// <summary>
        /// A map of Parameter structures that specify input parameters for the stack.
        /// </summary>
        public InputMap<string> Parameters
        {
            get => _parameters ?? (_parameters = new InputMap<string>());
            set => _parameters = value;
        }

        /// <summary>
        /// The version of the application to deploy. If not supplied, deploys the latest version.
        /// </summary>
        [Input("semanticVersion")]
        public Input<string>? SemanticVersion { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// A list of tags to associate with this stack.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public CloudFormationStackState()
        {
        }
    }
}
