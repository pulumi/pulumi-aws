// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Aws.ElasticLoadBalancing
{
    [Obsolete(@"aws.elasticloadbalancing.LoadBalancer has been deprecated in favor of aws.elb.LoadBalancer")]
    [AwsResourceType("aws:elasticloadbalancing/loadBalancer:LoadBalancer")]
    public partial class LoadBalancer : global::Pulumi.CustomResource
    {
        [Output("accessLogs")]
        public Output<Outputs.LoadBalancerAccessLogs?> AccessLogs { get; private set; } = null!;

        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("availabilityZones")]
        public Output<ImmutableArray<string>> AvailabilityZones { get; private set; } = null!;

        [Output("connectionDraining")]
        public Output<bool?> ConnectionDraining { get; private set; } = null!;

        [Output("connectionDrainingTimeout")]
        public Output<int?> ConnectionDrainingTimeout { get; private set; } = null!;

        [Output("crossZoneLoadBalancing")]
        public Output<bool?> CrossZoneLoadBalancing { get; private set; } = null!;

        [Output("desyncMitigationMode")]
        public Output<string?> DesyncMitigationMode { get; private set; } = null!;

        [Output("dnsName")]
        public Output<string> DnsName { get; private set; } = null!;

        [Output("healthCheck")]
        public Output<Outputs.LoadBalancerHealthCheck> HealthCheck { get; private set; } = null!;

        [Output("idleTimeout")]
        public Output<int?> IdleTimeout { get; private set; } = null!;

        [Output("instances")]
        public Output<ImmutableArray<string>> Instances { get; private set; } = null!;

        [Output("internal")]
        public Output<bool> Internal { get; private set; } = null!;

        [Output("listeners")]
        public Output<ImmutableArray<Outputs.LoadBalancerListener>> Listeners { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("namePrefix")]
        public Output<string?> NamePrefix { get; private set; } = null!;

        [Output("securityGroups")]
        public Output<ImmutableArray<string>> SecurityGroups { get; private set; } = null!;

        [Output("sourceSecurityGroup")]
        public Output<string> SourceSecurityGroup { get; private set; } = null!;

        [Output("sourceSecurityGroupId")]
        public Output<string> SourceSecurityGroupId { get; private set; } = null!;

        [Output("subnets")]
        public Output<ImmutableArray<string>> Subnets { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableDictionary<string, string>?> Tags { get; private set; } = null!;

        [Output("tagsAll")]
        public Output<ImmutableDictionary<string, string>> TagsAll { get; private set; } = null!;

        [Output("zoneId")]
        public Output<string> ZoneId { get; private set; } = null!;


        /// <summary>
        /// Create a LoadBalancer resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LoadBalancer(string name, LoadBalancerArgs args, CustomResourceOptions? options = null)
            : base("aws:elasticloadbalancing/loadBalancer:LoadBalancer", name, args ?? new LoadBalancerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LoadBalancer(string name, Input<string> id, LoadBalancerState? state = null, CustomResourceOptions? options = null)
            : base("aws:elasticloadbalancing/loadBalancer:LoadBalancer", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LoadBalancer resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LoadBalancer Get(string name, Input<string> id, LoadBalancerState? state = null, CustomResourceOptions? options = null)
        {
            return new LoadBalancer(name, id, state, options);
        }
    }

    public sealed class LoadBalancerArgs : global::Pulumi.ResourceArgs
    {
        [Input("accessLogs")]
        public Input<Inputs.LoadBalancerAccessLogsArgs>? AccessLogs { get; set; }

        [Input("availabilityZones")]
        private InputList<string>? _availabilityZones;
        public InputList<string> AvailabilityZones
        {
            get => _availabilityZones ?? (_availabilityZones = new InputList<string>());
            set => _availabilityZones = value;
        }

        [Input("connectionDraining")]
        public Input<bool>? ConnectionDraining { get; set; }

        [Input("connectionDrainingTimeout")]
        public Input<int>? ConnectionDrainingTimeout { get; set; }

        [Input("crossZoneLoadBalancing")]
        public Input<bool>? CrossZoneLoadBalancing { get; set; }

        [Input("desyncMitigationMode")]
        public Input<string>? DesyncMitigationMode { get; set; }

        [Input("healthCheck")]
        public Input<Inputs.LoadBalancerHealthCheckArgs>? HealthCheck { get; set; }

        [Input("idleTimeout")]
        public Input<int>? IdleTimeout { get; set; }

        [Input("instances")]
        private InputList<string>? _instances;
        public InputList<string> Instances
        {
            get => _instances ?? (_instances = new InputList<string>());
            set => _instances = value;
        }

        [Input("internal")]
        public Input<bool>? Internal { get; set; }

        [Input("listeners", required: true)]
        private InputList<Inputs.LoadBalancerListenerArgs>? _listeners;
        public InputList<Inputs.LoadBalancerListenerArgs> Listeners
        {
            get => _listeners ?? (_listeners = new InputList<Inputs.LoadBalancerListenerArgs>());
            set => _listeners = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("namePrefix")]
        public Input<string>? NamePrefix { get; set; }

        [Input("securityGroups")]
        private InputList<string>? _securityGroups;
        public InputList<string> SecurityGroups
        {
            get => _securityGroups ?? (_securityGroups = new InputList<string>());
            set => _securityGroups = value;
        }

        [Input("sourceSecurityGroup")]
        public Input<string>? SourceSecurityGroup { get; set; }

        [Input("subnets")]
        private InputList<string>? _subnets;
        public InputList<string> Subnets
        {
            get => _subnets ?? (_subnets = new InputList<string>());
            set => _subnets = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        public LoadBalancerArgs()
        {
        }
        public static new LoadBalancerArgs Empty => new LoadBalancerArgs();
    }

    public sealed class LoadBalancerState : global::Pulumi.ResourceArgs
    {
        [Input("accessLogs")]
        public Input<Inputs.LoadBalancerAccessLogsGetArgs>? AccessLogs { get; set; }

        [Input("arn")]
        public Input<string>? Arn { get; set; }

        [Input("availabilityZones")]
        private InputList<string>? _availabilityZones;
        public InputList<string> AvailabilityZones
        {
            get => _availabilityZones ?? (_availabilityZones = new InputList<string>());
            set => _availabilityZones = value;
        }

        [Input("connectionDraining")]
        public Input<bool>? ConnectionDraining { get; set; }

        [Input("connectionDrainingTimeout")]
        public Input<int>? ConnectionDrainingTimeout { get; set; }

        [Input("crossZoneLoadBalancing")]
        public Input<bool>? CrossZoneLoadBalancing { get; set; }

        [Input("desyncMitigationMode")]
        public Input<string>? DesyncMitigationMode { get; set; }

        [Input("dnsName")]
        public Input<string>? DnsName { get; set; }

        [Input("healthCheck")]
        public Input<Inputs.LoadBalancerHealthCheckGetArgs>? HealthCheck { get; set; }

        [Input("idleTimeout")]
        public Input<int>? IdleTimeout { get; set; }

        [Input("instances")]
        private InputList<string>? _instances;
        public InputList<string> Instances
        {
            get => _instances ?? (_instances = new InputList<string>());
            set => _instances = value;
        }

        [Input("internal")]
        public Input<bool>? Internal { get; set; }

        [Input("listeners")]
        private InputList<Inputs.LoadBalancerListenerGetArgs>? _listeners;
        public InputList<Inputs.LoadBalancerListenerGetArgs> Listeners
        {
            get => _listeners ?? (_listeners = new InputList<Inputs.LoadBalancerListenerGetArgs>());
            set => _listeners = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("namePrefix")]
        public Input<string>? NamePrefix { get; set; }

        [Input("securityGroups")]
        private InputList<string>? _securityGroups;
        public InputList<string> SecurityGroups
        {
            get => _securityGroups ?? (_securityGroups = new InputList<string>());
            set => _securityGroups = value;
        }

        [Input("sourceSecurityGroup")]
        public Input<string>? SourceSecurityGroup { get; set; }

        [Input("sourceSecurityGroupId")]
        public Input<string>? SourceSecurityGroupId { get; set; }

        [Input("subnets")]
        private InputList<string>? _subnets;
        public InputList<string> Subnets
        {
            get => _subnets ?? (_subnets = new InputList<string>());
            set => _subnets = value;
        }

        [Input("tags")]
        private InputMap<string>? _tags;
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("tagsAll")]
        private InputMap<string>? _tagsAll;
        public InputMap<string> TagsAll
        {
            get => _tagsAll ?? (_tagsAll = new InputMap<string>());
            set => _tagsAll = value;
        }

        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public LoadBalancerState()
        {
        }
        public static new LoadBalancerState Empty => new LoadBalancerState();
    }
}
