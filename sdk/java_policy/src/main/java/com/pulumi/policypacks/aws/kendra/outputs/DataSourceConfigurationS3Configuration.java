// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.kendra.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.kendra.outputs.DataSourceConfigurationS3ConfigurationAccessControlListConfiguration;
import com.pulumi.policypacks.aws.kendra.outputs.DataSourceConfigurationS3ConfigurationDocumentsMetadataConfiguration;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class DataSourceConfigurationS3Configuration {

    /**
     * A block that provides the path to the S3 bucket that contains the user context filtering files for the data source. For the format of the file, see [Access control for S3 data sources](https://docs.aws.amazon.com/kendra/latest/dg/s3-acl.html). Detailed below.
     * 
     */
    private @Nullable UndeferrableValue<DataSourceConfigurationS3ConfigurationAccessControlListConfiguration> accessControlListConfiguration;

    public @Nullable DataSourceConfigurationS3ConfigurationAccessControlListConfiguration accessControlListConfiguration() {
        if (accessControlListConfiguration == null) return null;
        return accessControlListConfiguration.getValue("DataSourceConfigurationS3Configuration.accessControlListConfiguration");
    }

    /**
     * The name of the bucket that contains the documents.
     * 
     */
    private UndeferrableValue<String> bucketName;

    public String bucketName() {
        if (bucketName == null) return null;
        return bucketName.getValue("DataSourceConfigurationS3Configuration.bucketName");
    }

    /**
     * A block that defines the Document metadata files that contain information such as the document access control information, source URI, document author, and custom attributes. Each metadata file contains metadata about a single document. Detailed below.
     * 
     */
    private @Nullable UndeferrableValue<DataSourceConfigurationS3ConfigurationDocumentsMetadataConfiguration> documentsMetadataConfiguration;

    public @Nullable DataSourceConfigurationS3ConfigurationDocumentsMetadataConfiguration documentsMetadataConfiguration() {
        if (documentsMetadataConfiguration == null) return null;
        return documentsMetadataConfiguration.getValue("DataSourceConfigurationS3Configuration.documentsMetadataConfiguration");
    }

    /**
     * A list of glob patterns for documents that should not be indexed. If a document that matches an inclusion prefix or inclusion pattern also matches an exclusion pattern, the document is not indexed. Refer to [Exclusion Patterns for more examples](https://docs.aws.amazon.com/kendra/latest/dg/API_S3DataSourceConfiguration.html#Kendra-Type-S3DataSourceConfiguration-ExclusionPatterns).
     * 
     */
    private @Nullable UndeferrableValue<List<String>> exclusionPatterns;

    public @Nullable List<String> exclusionPatterns() {
        if (exclusionPatterns == null) return null;
        return exclusionPatterns.getValue("DataSourceConfigurationS3Configuration.exclusionPatterns");
    }

    /**
     * A list of glob patterns for documents that should be indexed. If a document that matches an inclusion pattern also matches an exclusion pattern, the document is not indexed. Refer to [Inclusion Patterns for more examples](https://docs.aws.amazon.com/kendra/latest/dg/API_S3DataSourceConfiguration.html#Kendra-Type-S3DataSourceConfiguration-InclusionPatterns).
     * 
     */
    private @Nullable UndeferrableValue<List<String>> inclusionPatterns;

    public @Nullable List<String> inclusionPatterns() {
        if (inclusionPatterns == null) return null;
        return inclusionPatterns.getValue("DataSourceConfigurationS3Configuration.inclusionPatterns");
    }

    /**
     * A list of S3 prefixes for the documents that should be included in the index.
     * 
     */
    private @Nullable UndeferrableValue<List<String>> inclusionPrefixes;

    public @Nullable List<String> inclusionPrefixes() {
        if (inclusionPrefixes == null) return null;
        return inclusionPrefixes.getValue("DataSourceConfigurationS3Configuration.inclusionPrefixes");
    }

}
