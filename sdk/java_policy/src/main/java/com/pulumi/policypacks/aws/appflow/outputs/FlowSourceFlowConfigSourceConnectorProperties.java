// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appflow.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.appflow.outputs.FlowSourceFlowConfigSourceConnectorPropertiesAmplitude;
import com.pulumi.policypacks.aws.appflow.outputs.FlowSourceFlowConfigSourceConnectorPropertiesCustomConnector;
import com.pulumi.policypacks.aws.appflow.outputs.FlowSourceFlowConfigSourceConnectorPropertiesDatadog;
import com.pulumi.policypacks.aws.appflow.outputs.FlowSourceFlowConfigSourceConnectorPropertiesDynatrace;
import com.pulumi.policypacks.aws.appflow.outputs.FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalytics;
import com.pulumi.policypacks.aws.appflow.outputs.FlowSourceFlowConfigSourceConnectorPropertiesInforNexus;
import com.pulumi.policypacks.aws.appflow.outputs.FlowSourceFlowConfigSourceConnectorPropertiesMarketo;
import com.pulumi.policypacks.aws.appflow.outputs.FlowSourceFlowConfigSourceConnectorPropertiesS3;
import com.pulumi.policypacks.aws.appflow.outputs.FlowSourceFlowConfigSourceConnectorPropertiesSalesforce;
import com.pulumi.policypacks.aws.appflow.outputs.FlowSourceFlowConfigSourceConnectorPropertiesSapoData;
import com.pulumi.policypacks.aws.appflow.outputs.FlowSourceFlowConfigSourceConnectorPropertiesServiceNow;
import com.pulumi.policypacks.aws.appflow.outputs.FlowSourceFlowConfigSourceConnectorPropertiesSingular;
import com.pulumi.policypacks.aws.appflow.outputs.FlowSourceFlowConfigSourceConnectorPropertiesSlack;
import com.pulumi.policypacks.aws.appflow.outputs.FlowSourceFlowConfigSourceConnectorPropertiesTrendmicro;
import com.pulumi.policypacks.aws.appflow.outputs.FlowSourceFlowConfigSourceConnectorPropertiesVeeva;
import com.pulumi.policypacks.aws.appflow.outputs.FlowSourceFlowConfigSourceConnectorPropertiesZendesk;
import javax.annotation.Nullable;


public final class FlowSourceFlowConfigSourceConnectorProperties {

    /**
     * Information that is required for querying Amplitude. See Generic Source Properties for more details.
     * 
     */
    @PolicyResourceProperty(name="amplitude", flag="unknown_amplitude")
    private @Nullable FlowSourceFlowConfigSourceConnectorPropertiesAmplitude value_amplitude;
    private boolean unknown_amplitude;
    public @Nullable FlowSourceFlowConfigSourceConnectorPropertiesAmplitude amplitude() {
        if (!unknown_amplitude) return value_amplitude;
        throw new UndeferrableValueException("Value 'FlowSourceFlowConfigSourceConnectorProperties.amplitude' is not present");
    }

    /**
     * Properties that are applied when the custom connector is being used as a source. See Custom Connector Source Properties.
     * 
     */
    @PolicyResourceProperty(name="customConnector", flag="unknown_customConnector")
    private @Nullable FlowSourceFlowConfigSourceConnectorPropertiesCustomConnector value_customConnector;
    private boolean unknown_customConnector;
    public @Nullable FlowSourceFlowConfigSourceConnectorPropertiesCustomConnector customConnector() {
        if (!unknown_customConnector) return value_customConnector;
        throw new UndeferrableValueException("Value 'FlowSourceFlowConfigSourceConnectorProperties.customConnector' is not present");
    }

    /**
     * Information that is required for querying Datadog. See Generic Source Properties for more details.
     * 
     */
    @PolicyResourceProperty(name="datadog", flag="unknown_datadog")
    private @Nullable FlowSourceFlowConfigSourceConnectorPropertiesDatadog value_datadog;
    private boolean unknown_datadog;
    public @Nullable FlowSourceFlowConfigSourceConnectorPropertiesDatadog datadog() {
        if (!unknown_datadog) return value_datadog;
        throw new UndeferrableValueException("Value 'FlowSourceFlowConfigSourceConnectorProperties.datadog' is not present");
    }

    /**
     * Operation to be performed on the provided Dynatrace source fields. Valid values are `PROJECTION`, `BETWEEN`, `EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
     * 
     */
    @PolicyResourceProperty(name="dynatrace", flag="unknown_dynatrace")
    private @Nullable FlowSourceFlowConfigSourceConnectorPropertiesDynatrace value_dynatrace;
    private boolean unknown_dynatrace;
    public @Nullable FlowSourceFlowConfigSourceConnectorPropertiesDynatrace dynatrace() {
        if (!unknown_dynatrace) return value_dynatrace;
        throw new UndeferrableValueException("Value 'FlowSourceFlowConfigSourceConnectorProperties.dynatrace' is not present");
    }

    /**
     * Operation to be performed on the provided Google Analytics source fields. Valid values are `PROJECTION` and `BETWEEN`.
     * 
     */
    @PolicyResourceProperty(name="googleAnalytics", flag="unknown_googleAnalytics")
    private @Nullable FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalytics value_googleAnalytics;
    private boolean unknown_googleAnalytics;
    public @Nullable FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalytics googleAnalytics() {
        if (!unknown_googleAnalytics) return value_googleAnalytics;
        throw new UndeferrableValueException("Value 'FlowSourceFlowConfigSourceConnectorProperties.googleAnalytics' is not present");
    }

    /**
     * Information that is required for querying Infor Nexus. See Generic Source Properties for more details.
     * 
     */
    @PolicyResourceProperty(name="inforNexus", flag="unknown_inforNexus")
    private @Nullable FlowSourceFlowConfigSourceConnectorPropertiesInforNexus value_inforNexus;
    private boolean unknown_inforNexus;
    public @Nullable FlowSourceFlowConfigSourceConnectorPropertiesInforNexus inforNexus() {
        if (!unknown_inforNexus) return value_inforNexus;
        throw new UndeferrableValueException("Value 'FlowSourceFlowConfigSourceConnectorProperties.inforNexus' is not present");
    }

    /**
     * Information that is required for querying Marketo. See Generic Source Properties for more details.
     * 
     */
    @PolicyResourceProperty(name="marketo", flag="unknown_marketo")
    private @Nullable FlowSourceFlowConfigSourceConnectorPropertiesMarketo value_marketo;
    private boolean unknown_marketo;
    public @Nullable FlowSourceFlowConfigSourceConnectorPropertiesMarketo marketo() {
        if (!unknown_marketo) return value_marketo;
        throw new UndeferrableValueException("Value 'FlowSourceFlowConfigSourceConnectorProperties.marketo' is not present");
    }

    /**
     * Information that is required for querying Amazon S3. See S3 Source Properties for more details.
     * 
     */
    @PolicyResourceProperty(name="s3", flag="unknown_s3")
    private @Nullable FlowSourceFlowConfigSourceConnectorPropertiesS3 value_s3;
    private boolean unknown_s3;
    public @Nullable FlowSourceFlowConfigSourceConnectorPropertiesS3 s3() {
        if (!unknown_s3) return value_s3;
        throw new UndeferrableValueException("Value 'FlowSourceFlowConfigSourceConnectorProperties.s3' is not present");
    }

    /**
     * Information that is required for querying Salesforce. See Salesforce Source Properties for more details.
     * 
     */
    @PolicyResourceProperty(name="salesforce", flag="unknown_salesforce")
    private @Nullable FlowSourceFlowConfigSourceConnectorPropertiesSalesforce value_salesforce;
    private boolean unknown_salesforce;
    public @Nullable FlowSourceFlowConfigSourceConnectorPropertiesSalesforce salesforce() {
        if (!unknown_salesforce) return value_salesforce;
        throw new UndeferrableValueException("Value 'FlowSourceFlowConfigSourceConnectorProperties.salesforce' is not present");
    }

    /**
     * Information that is required for querying SAPOData as a flow source. See SAPO Source Properties for more details.
     * 
     */
    @PolicyResourceProperty(name="sapoData", flag="unknown_sapoData")
    private @Nullable FlowSourceFlowConfigSourceConnectorPropertiesSapoData value_sapoData;
    private boolean unknown_sapoData;
    public @Nullable FlowSourceFlowConfigSourceConnectorPropertiesSapoData sapoData() {
        if (!unknown_sapoData) return value_sapoData;
        throw new UndeferrableValueException("Value 'FlowSourceFlowConfigSourceConnectorProperties.sapoData' is not present");
    }

    /**
     * Information that is required for querying ServiceNow. See Generic Source Properties for more details.
     * 
     */
    @PolicyResourceProperty(name="serviceNow", flag="unknown_serviceNow")
    private @Nullable FlowSourceFlowConfigSourceConnectorPropertiesServiceNow value_serviceNow;
    private boolean unknown_serviceNow;
    public @Nullable FlowSourceFlowConfigSourceConnectorPropertiesServiceNow serviceNow() {
        if (!unknown_serviceNow) return value_serviceNow;
        throw new UndeferrableValueException("Value 'FlowSourceFlowConfigSourceConnectorProperties.serviceNow' is not present");
    }

    /**
     * Information that is required for querying Singular. See Generic Source Properties for more details.
     * 
     */
    @PolicyResourceProperty(name="singular", flag="unknown_singular")
    private @Nullable FlowSourceFlowConfigSourceConnectorPropertiesSingular value_singular;
    private boolean unknown_singular;
    public @Nullable FlowSourceFlowConfigSourceConnectorPropertiesSingular singular() {
        if (!unknown_singular) return value_singular;
        throw new UndeferrableValueException("Value 'FlowSourceFlowConfigSourceConnectorProperties.singular' is not present");
    }

    /**
     * Information that is required for querying Slack. See Generic Source Properties for more details.
     * 
     */
    @PolicyResourceProperty(name="slack", flag="unknown_slack")
    private @Nullable FlowSourceFlowConfigSourceConnectorPropertiesSlack value_slack;
    private boolean unknown_slack;
    public @Nullable FlowSourceFlowConfigSourceConnectorPropertiesSlack slack() {
        if (!unknown_slack) return value_slack;
        throw new UndeferrableValueException("Value 'FlowSourceFlowConfigSourceConnectorProperties.slack' is not present");
    }

    /**
     * Operation to be performed on the provided Trend Micro source fields. Valid values are `PROJECTION`, `EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
     * 
     */
    @PolicyResourceProperty(name="trendmicro", flag="unknown_trendmicro")
    private @Nullable FlowSourceFlowConfigSourceConnectorPropertiesTrendmicro value_trendmicro;
    private boolean unknown_trendmicro;
    public @Nullable FlowSourceFlowConfigSourceConnectorPropertiesTrendmicro trendmicro() {
        if (!unknown_trendmicro) return value_trendmicro;
        throw new UndeferrableValueException("Value 'FlowSourceFlowConfigSourceConnectorProperties.trendmicro' is not present");
    }

    /**
     * Information that is required for querying Veeva. See Veeva Source Properties for more details.
     * 
     */
    @PolicyResourceProperty(name="veeva", flag="unknown_veeva")
    private @Nullable FlowSourceFlowConfigSourceConnectorPropertiesVeeva value_veeva;
    private boolean unknown_veeva;
    public @Nullable FlowSourceFlowConfigSourceConnectorPropertiesVeeva veeva() {
        if (!unknown_veeva) return value_veeva;
        throw new UndeferrableValueException("Value 'FlowSourceFlowConfigSourceConnectorProperties.veeva' is not present");
    }

    /**
     * Information that is required for querying Zendesk. See Generic Source Properties for more details.
     * 
     */
    @PolicyResourceProperty(name="zendesk", flag="unknown_zendesk")
    private @Nullable FlowSourceFlowConfigSourceConnectorPropertiesZendesk value_zendesk;
    private boolean unknown_zendesk;
    public @Nullable FlowSourceFlowConfigSourceConnectorPropertiesZendesk zendesk() {
        if (!unknown_zendesk) return value_zendesk;
        throw new UndeferrableValueException("Value 'FlowSourceFlowConfigSourceConnectorProperties.zendesk' is not present");
    }

}
