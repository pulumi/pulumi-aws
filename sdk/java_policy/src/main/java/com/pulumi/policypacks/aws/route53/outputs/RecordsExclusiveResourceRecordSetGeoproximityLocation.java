// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.route53.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.route53.outputs.RecordsExclusiveResourceRecordSetGeoproximityLocationCoordinates;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class RecordsExclusiveResourceRecordSetGeoproximityLocation {

    /**
     * AWS region of the resource where DNS traffic is directed to.
     * 
     */
    @PolicyResourceProperty(name="awsRegion", flag="unknown_awsRegion")
    private @Nullable String value_awsRegion;
    private boolean unknown_awsRegion;
    public @Nullable String awsRegion() {
        if (!unknown_awsRegion) return value_awsRegion;
        throw new UndeferrableValueException("Value 'RecordsExclusiveResourceRecordSetGeoproximityLocation.awsRegion' is not present");
    }

    /**
     * Increases or decreases the size of the geographic region from which Route 53 routes traffic to a resource.
     * To expand the size of the geographic region from which Route 53 routes traffic to a resource, specify a positive integer from `1` to `99`.
     * To shrink the size of the geographic region from which Route 53 routes traffic to a resource, specify a negative bias of `-1` to `-99`.
     * See the [AWS documentation](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy-geoproximity.html) for additional details.
     * 
     */
    @PolicyResourceProperty(name="bias", flag="unknown_bias")
    private @Nullable Integer value_bias;
    private boolean unknown_bias;
    public @Nullable Integer bias() {
        if (!unknown_bias) return value_bias;
        throw new UndeferrableValueException("Value 'RecordsExclusiveResourceRecordSetGeoproximityLocation.bias' is not present");
    }

    /**
     * Coordinates for a geoproximity resource record.
     * See `coordinates` below.
     * 
     */
    @PolicyResourceProperty(name="coordinates", flag="unknown_coordinates")
    private @Nullable RecordsExclusiveResourceRecordSetGeoproximityLocationCoordinates value_coordinates;
    private boolean unknown_coordinates;
    public @Nullable RecordsExclusiveResourceRecordSetGeoproximityLocationCoordinates coordinates() {
        if (!unknown_coordinates) return value_coordinates;
        throw new UndeferrableValueException("Value 'RecordsExclusiveResourceRecordSetGeoproximityLocation.coordinates' is not present");
    }

    /**
     * AWS local zone group.
     * Identify the Local Zones Group for a specific Local Zone by using the [`describe-availability-zones` CLI command](https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-availability-zones.html).
     * 
     */
    @PolicyResourceProperty(name="localZoneGroup", flag="unknown_localZoneGroup")
    private @Nullable String value_localZoneGroup;
    private boolean unknown_localZoneGroup;
    public @Nullable String localZoneGroup() {
        if (!unknown_localZoneGroup) return value_localZoneGroup;
        throw new UndeferrableValueException("Value 'RecordsExclusiveResourceRecordSetGeoproximityLocation.localZoneGroup' is not present");
    }

}
