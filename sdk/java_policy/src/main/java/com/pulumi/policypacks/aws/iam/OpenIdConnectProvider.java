// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.iam;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:iam/openIdConnectProvider:OpenIdConnectProvider")
public final class OpenIdConnectProvider extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * ARN assigned by AWS for this provider.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'OpenIdConnectProvider.arn' is not present");
    }

    /**
     * List of client IDs (audiences) that identify the application registered with the OpenID Connect provider. This is the value sent as the `client_id` parameter in OAuth requests.
     * 
     */
    @PolicyResourceProperty(name="clientIdLists", flag="unknown_clientIdLists")
    private List<String> value_clientIdLists;
    private boolean unknown_clientIdLists;
    public List<String> clientIdLists() {
        if (!unknown_clientIdLists) return value_clientIdLists;
        throw new UndeferrableValueException("Value 'OpenIdConnectProvider.clientIdLists' is not present");
    }

    /**
     * Map of resource tags for the IAM OIDC provider. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'OpenIdConnectProvider.tags' is not present");
    }

    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'OpenIdConnectProvider.tagsAll' is not present");
    }

    @PolicyResourceProperty(name="thumbprintLists", flag="unknown_thumbprintLists")
    private List<String> value_thumbprintLists;
    private boolean unknown_thumbprintLists;
    public List<String> thumbprintLists() {
        if (!unknown_thumbprintLists) return value_thumbprintLists;
        throw new UndeferrableValueException("Value 'OpenIdConnectProvider.thumbprintLists' is not present");
    }

    /**
     * URL of the identity provider, corresponding to the `iss` claim.
     * 
     */
    @PolicyResourceProperty(name="url", flag="unknown_url")
    private String value_url;
    private boolean unknown_url;
    public String url() {
        if (!unknown_url) return value_url;
        throw new UndeferrableValueException("Value 'OpenIdConnectProvider.url' is not present");
    }

}
