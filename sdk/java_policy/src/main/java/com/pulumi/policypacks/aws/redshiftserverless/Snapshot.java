// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.redshiftserverless;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:redshiftserverless/snapshot:Snapshot")
public final class Snapshot extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * All of the Amazon Web Services accounts that have access to restore a snapshot to a provisioned cluster.
     * 
     */
    @PolicyResourceProperty(name="accountsWithProvisionedRestoreAccesses", flag="unknown_accountsWithProvisionedRestoreAccesses")
    private List<String> value_accountsWithProvisionedRestoreAccesses;
    private boolean unknown_accountsWithProvisionedRestoreAccesses;
    public List<String> accountsWithProvisionedRestoreAccesses() {
        if (!unknown_accountsWithProvisionedRestoreAccesses) return value_accountsWithProvisionedRestoreAccesses;
        throw new UndeferrableValueException("Value 'Snapshot.accountsWithProvisionedRestoreAccesses' is not present");
    }

    /**
     * All of the Amazon Web Services accounts that have access to restore a snapshot to a namespace.
     * 
     */
    @PolicyResourceProperty(name="accountsWithRestoreAccesses", flag="unknown_accountsWithRestoreAccesses")
    private List<String> value_accountsWithRestoreAccesses;
    private boolean unknown_accountsWithRestoreAccesses;
    public List<String> accountsWithRestoreAccesses() {
        if (!unknown_accountsWithRestoreAccesses) return value_accountsWithRestoreAccesses;
        throw new UndeferrableValueException("Value 'Snapshot.accountsWithRestoreAccesses' is not present");
    }

    /**
     * The username of the database within a snapshot.
     * 
     */
    @PolicyResourceProperty(name="adminUsername", flag="unknown_adminUsername")
    private String value_adminUsername;
    private boolean unknown_adminUsername;
    public String adminUsername() {
        if (!unknown_adminUsername) return value_adminUsername;
        throw new UndeferrableValueException("Value 'Snapshot.adminUsername' is not present");
    }

    /**
     * The Amazon Resource Name (ARN) of the snapshot.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'Snapshot.arn' is not present");
    }

    /**
     * The unique identifier of the KMS key used to encrypt the snapshot.
     * 
     */
    @PolicyResourceProperty(name="kmsKeyId", flag="unknown_kmsKeyId")
    private String value_kmsKeyId;
    private boolean unknown_kmsKeyId;
    public String kmsKeyId() {
        if (!unknown_kmsKeyId) return value_kmsKeyId;
        throw new UndeferrableValueException("Value 'Snapshot.kmsKeyId' is not present");
    }

    /**
     * The Amazon Resource Name (ARN) of the namespace the snapshot was created from.
     * 
     */
    @PolicyResourceProperty(name="namespaceArn", flag="unknown_namespaceArn")
    private String value_namespaceArn;
    private boolean unknown_namespaceArn;
    public String namespaceArn() {
        if (!unknown_namespaceArn) return value_namespaceArn;
        throw new UndeferrableValueException("Value 'Snapshot.namespaceArn' is not present");
    }

    /**
     * The namespace to create a snapshot for.
     * 
     */
    @PolicyResourceProperty(name="namespaceName", flag="unknown_namespaceName")
    private String value_namespaceName;
    private boolean unknown_namespaceName;
    public String namespaceName() {
        if (!unknown_namespaceName) return value_namespaceName;
        throw new UndeferrableValueException("Value 'Snapshot.namespaceName' is not present");
    }

    /**
     * The owner Amazon Web Services; account of the snapshot.
     * 
     */
    @PolicyResourceProperty(name="ownerAccount", flag="unknown_ownerAccount")
    private String value_ownerAccount;
    private boolean unknown_ownerAccount;
    public String ownerAccount() {
        if (!unknown_ownerAccount) return value_ownerAccount;
        throw new UndeferrableValueException("Value 'Snapshot.ownerAccount' is not present");
    }

    /**
     * How long to retain the created snapshot. Default value is `-1`.
     * 
     */
    @PolicyResourceProperty(name="retentionPeriod", flag="unknown_retentionPeriod")
    private @Nullable Integer value_retentionPeriod;
    private boolean unknown_retentionPeriod;
    public @Nullable Integer retentionPeriod() {
        if (!unknown_retentionPeriod) return value_retentionPeriod;
        throw new UndeferrableValueException("Value 'Snapshot.retentionPeriod' is not present");
    }

    /**
     * The name of the snapshot.
     * 
     */
    @PolicyResourceProperty(name="snapshotName", flag="unknown_snapshotName")
    private String value_snapshotName;
    private boolean unknown_snapshotName;
    public String snapshotName() {
        if (!unknown_snapshotName) return value_snapshotName;
        throw new UndeferrableValueException("Value 'Snapshot.snapshotName' is not present");
    }

}
