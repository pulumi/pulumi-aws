// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.redshift;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:redshift/endpointAuthorization:EndpointAuthorization")
public final class EndpointAuthorization extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The Amazon Web Services account ID to grant access to.
     * 
     */
    private UndeferrableValue<String> account;

    public String account() {
        if (account == null) return null;
        return account.getValue("EndpointAuthorization.account");
    }

    /**
     * Indicates whether all VPCs in the grantee account are allowed access to the cluster.
     * 
     */
    private UndeferrableValue<Boolean> allowedAllVpcs;

    public Boolean allowedAllVpcs() {
        if (allowedAllVpcs == null) return null;
        return allowedAllVpcs.getValue("EndpointAuthorization.allowedAllVpcs");
    }

    /**
     * The cluster identifier of the cluster to grant access to.
     * 
     */
    private UndeferrableValue<String> clusterIdentifier;

    public String clusterIdentifier() {
        if (clusterIdentifier == null) return null;
        return clusterIdentifier.getValue("EndpointAuthorization.clusterIdentifier");
    }

    /**
     * The number of Redshift-managed VPC endpoints created for the authorization.
     * 
     */
    private UndeferrableValue<Integer> endpointCount;

    public Integer endpointCount() {
        if (endpointCount == null) return null;
        return endpointCount.getValue("EndpointAuthorization.endpointCount");
    }

    /**
     * Indicates whether to force the revoke action. If true, the Redshift-managed VPC endpoints associated with the endpoint authorization are also deleted. Default value is `false`.
     * 
     */
    private @Nullable UndeferrableValue<Boolean> forceDelete;

    public @Nullable Boolean forceDelete() {
        if (forceDelete == null) return null;
        return forceDelete.getValue("EndpointAuthorization.forceDelete");
    }

    /**
     * The Amazon Web Services account ID of the grantee of the cluster.
     * 
     */
    private UndeferrableValue<String> grantee;

    public String grantee() {
        if (grantee == null) return null;
        return grantee.getValue("EndpointAuthorization.grantee");
    }

    /**
     * The Amazon Web Services account ID of the cluster owner.
     * 
     */
    private UndeferrableValue<String> grantor;

    public String grantor() {
        if (grantor == null) return null;
        return grantor.getValue("EndpointAuthorization.grantor");
    }

    /**
     * The virtual private cloud (VPC) identifiers to grant access to. If none are specified all VPCs in shared account are allowed.
     * 
     */
    private @Nullable UndeferrableValue<List<String>> vpcIds;

    public @Nullable List<String> vpcIds() {
        if (vpcIds == null) return null;
        return vpcIds.getValue("EndpointAuthorization.vpcIds");
    }

}
