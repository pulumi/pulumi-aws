// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.rds;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:rds/snapshotCopy:SnapshotCopy")
public final class SnapshotCopyArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Whether to copy existing tags. Defaults to `false`.
     * 
     */
    @PolicyResourceProperty(name="copyTags", flag="unknown_copyTags")
    private Boolean value_copyTags;
    private boolean unknown_copyTags;
    public Boolean copyTags() {
        if (!unknown_copyTags) return value_copyTags;
        throw new UndeferrableValueException("Value 'SnapshotCopyArgs.copyTags' is not present");
    }

    /**
     * The Destination region to place snapshot copy.
     * 
     */
    @PolicyResourceProperty(name="destinationRegion", flag="unknown_destinationRegion")
    private String value_destinationRegion;
    private boolean unknown_destinationRegion;
    public String destinationRegion() {
        if (!unknown_destinationRegion) return value_destinationRegion;
        throw new UndeferrableValueException("Value 'SnapshotCopyArgs.destinationRegion' is not present");
    }

    /**
     * KMS key ID.
     * 
     */
    @PolicyResourceProperty(name="kmsKeyId", flag="unknown_kmsKeyId")
    private String value_kmsKeyId;
    private boolean unknown_kmsKeyId;
    public String kmsKeyId() {
        if (!unknown_kmsKeyId) return value_kmsKeyId;
        throw new UndeferrableValueException("Value 'SnapshotCopyArgs.kmsKeyId' is not present");
    }

    /**
     * The name of an option group to associate with the copy of the snapshot.
     * 
     */
    @PolicyResourceProperty(name="optionGroupName", flag="unknown_optionGroupName")
    private String value_optionGroupName;
    private boolean unknown_optionGroupName;
    public String optionGroupName() {
        if (!unknown_optionGroupName) return value_optionGroupName;
        throw new UndeferrableValueException("Value 'SnapshotCopyArgs.optionGroupName' is not present");
    }

    /**
     * he URL that contains a Signature Version 4 signed request.
     * 
     */
    @PolicyResourceProperty(name="presignedUrl", flag="unknown_presignedUrl")
    private String value_presignedUrl;
    private boolean unknown_presignedUrl;
    public String presignedUrl() {
        if (!unknown_presignedUrl) return value_presignedUrl;
        throw new UndeferrableValueException("Value 'SnapshotCopyArgs.presignedUrl' is not present");
    }

    /**
     * List of AWS Account IDs to share the snapshot with. Use `all` to make the snapshot public.
     * 
     */
    @PolicyResourceProperty(name="sharedAccounts", flag="unknown_sharedAccounts")
    private List<String> value_sharedAccounts;
    private boolean unknown_sharedAccounts;
    public List<String> sharedAccounts() {
        if (!unknown_sharedAccounts) return value_sharedAccounts;
        throw new UndeferrableValueException("Value 'SnapshotCopyArgs.sharedAccounts' is not present");
    }

    /**
     * Snapshot identifier of the source snapshot.
     * 
     */
    @PolicyResourceProperty(name="sourceDbSnapshotIdentifier", flag="unknown_sourceDbSnapshotIdentifier")
    private String value_sourceDbSnapshotIdentifier;
    private boolean unknown_sourceDbSnapshotIdentifier;
    public String sourceDbSnapshotIdentifier() {
        if (!unknown_sourceDbSnapshotIdentifier) return value_sourceDbSnapshotIdentifier;
        throw new UndeferrableValueException("Value 'SnapshotCopyArgs.sourceDbSnapshotIdentifier' is not present");
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'SnapshotCopyArgs.tags' is not present");
    }

    /**
     * The external custom Availability Zone.
     * 
     */
    @PolicyResourceProperty(name="targetCustomAvailabilityZone", flag="unknown_targetCustomAvailabilityZone")
    private String value_targetCustomAvailabilityZone;
    private boolean unknown_targetCustomAvailabilityZone;
    public String targetCustomAvailabilityZone() {
        if (!unknown_targetCustomAvailabilityZone) return value_targetCustomAvailabilityZone;
        throw new UndeferrableValueException("Value 'SnapshotCopyArgs.targetCustomAvailabilityZone' is not present");
    }

    /**
     * The Identifier for the snapshot.
     * 
     */
    @PolicyResourceProperty(name="targetDbSnapshotIdentifier", flag="unknown_targetDbSnapshotIdentifier")
    private String value_targetDbSnapshotIdentifier;
    private boolean unknown_targetDbSnapshotIdentifier;
    public String targetDbSnapshotIdentifier() {
        if (!unknown_targetDbSnapshotIdentifier) return value_targetDbSnapshotIdentifier;
        throw new UndeferrableValueException("Value 'SnapshotCopyArgs.targetDbSnapshotIdentifier' is not present");
    }

}
