// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.rum;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.rum.outputs.AppMonitorAppMonitorConfiguration;
import com.pulumi.policypacks.aws.rum.outputs.AppMonitorCustomEvents;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:rum/appMonitor:AppMonitor")
public final class AppMonitor extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * configuration data for the app monitor. See app_monitor_configuration below.
     * 
     */
    private UndeferrableValue<AppMonitorAppMonitorConfiguration> appMonitorConfiguration;

    public AppMonitorAppMonitorConfiguration appMonitorConfiguration() {
        if (appMonitorConfiguration == null) return null;
        return appMonitorConfiguration.getValue("AppMonitor.appMonitorConfiguration");
    }

    /**
     * The unique ID of the app monitor. Useful for JS templates.
     * 
     */
    private UndeferrableValue<String> appMonitorId;

    public String appMonitorId() {
        if (appMonitorId == null) return null;
        return appMonitorId.getValue("AppMonitor.appMonitorId");
    }

    /**
     * The Amazon Resource Name (ARN) specifying the app monitor.
     * 
     */
    private UndeferrableValue<String> arn;

    public String arn() {
        if (arn == null) return null;
        return arn.getValue("AppMonitor.arn");
    }

    /**
     * Specifies whether this app monitor allows the web client to define and send custom events. If you omit this parameter, custom events are `DISABLED`. See custom_events below.
     * 
     */
    private UndeferrableValue<AppMonitorCustomEvents> customEvents;

    public AppMonitorCustomEvents customEvents() {
        if (customEvents == null) return null;
        return customEvents.getValue("AppMonitor.customEvents");
    }

    /**
     * Data collected by RUM is kept by RUM for 30 days and then deleted. This parameter  specifies whether RUM sends a copy of this telemetry data to Amazon CloudWatch Logs in your account. This enables you to keep the telemetry data for more than 30 days, but it does incur Amazon CloudWatch Logs charges. Default value is `false`.
     * 
     */
    private @Nullable UndeferrableValue<Boolean> cwLogEnabled;

    public @Nullable Boolean cwLogEnabled() {
        if (cwLogEnabled == null) return null;
        return cwLogEnabled.getValue("AppMonitor.cwLogEnabled");
    }

    /**
     * The name of the log group where the copies are stored.
     * 
     */
    private UndeferrableValue<String> cwLogGroup;

    public String cwLogGroup() {
        if (cwLogGroup == null) return null;
        return cwLogGroup.getValue("AppMonitor.cwLogGroup");
    }

    /**
     * The top-level internet domain name for which your application has administrative authority.
     * 
     */
    private UndeferrableValue<String> domain;

    public String domain() {
        if (domain == null) return null;
        return domain.getValue("AppMonitor.domain");
    }

    /**
     * The name of the log stream.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("AppMonitor.name");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private @Nullable UndeferrableValue<Map<String,String>> tags;

    public @Nullable Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("AppMonitor.tags");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    private UndeferrableValue<Map<String,String>> tagsAll;

    public Map<String,String> tagsAll() {
        if (tagsAll == null) return null;
        return tagsAll.getValue("AppMonitor.tagsAll");
    }

}
