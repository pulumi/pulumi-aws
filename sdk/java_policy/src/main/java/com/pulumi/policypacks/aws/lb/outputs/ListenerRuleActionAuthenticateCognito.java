// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.lb.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


public final class ListenerRuleActionAuthenticateCognito {

    /**
     * The query parameters to include in the redirect request to the authorization endpoint. Max: 10.
     * 
     */
    @PolicyResourceProperty(name="authenticationRequestExtraParams", flag="unknown_authenticationRequestExtraParams")
    private @Nullable Map<String,String> value_authenticationRequestExtraParams;
    private boolean unknown_authenticationRequestExtraParams;
    public @Nullable Map<String,String> authenticationRequestExtraParams() {
        if (!unknown_authenticationRequestExtraParams) return value_authenticationRequestExtraParams;
        throw new UndeferrableValueException("Value 'ListenerRuleActionAuthenticateCognito.authenticationRequestExtraParams' is not present");
    }

    /**
     * The behavior if the user is not authenticated. Valid values: `deny`, `allow` and `authenticate`
     * 
     */
    @PolicyResourceProperty(name="onUnauthenticatedRequest", flag="unknown_onUnauthenticatedRequest")
    private @Nullable String value_onUnauthenticatedRequest;
    private boolean unknown_onUnauthenticatedRequest;
    public @Nullable String onUnauthenticatedRequest() {
        if (!unknown_onUnauthenticatedRequest) return value_onUnauthenticatedRequest;
        throw new UndeferrableValueException("Value 'ListenerRuleActionAuthenticateCognito.onUnauthenticatedRequest' is not present");
    }

    /**
     * The set of user claims to be requested from the IdP.
     * 
     */
    @PolicyResourceProperty(name="scope", flag="unknown_scope")
    private @Nullable String value_scope;
    private boolean unknown_scope;
    public @Nullable String scope() {
        if (!unknown_scope) return value_scope;
        throw new UndeferrableValueException("Value 'ListenerRuleActionAuthenticateCognito.scope' is not present");
    }

    /**
     * The name of the cookie used to maintain session information.
     * 
     */
    @PolicyResourceProperty(name="sessionCookieName", flag="unknown_sessionCookieName")
    private @Nullable String value_sessionCookieName;
    private boolean unknown_sessionCookieName;
    public @Nullable String sessionCookieName() {
        if (!unknown_sessionCookieName) return value_sessionCookieName;
        throw new UndeferrableValueException("Value 'ListenerRuleActionAuthenticateCognito.sessionCookieName' is not present");
    }

    /**
     * The maximum duration of the authentication session, in seconds.
     * 
     */
    @PolicyResourceProperty(name="sessionTimeout", flag="unknown_sessionTimeout")
    private @Nullable Integer value_sessionTimeout;
    private boolean unknown_sessionTimeout;
    public @Nullable Integer sessionTimeout() {
        if (!unknown_sessionTimeout) return value_sessionTimeout;
        throw new UndeferrableValueException("Value 'ListenerRuleActionAuthenticateCognito.sessionTimeout' is not present");
    }

    /**
     * The ARN of the Cognito user pool.
     * 
     */
    @PolicyResourceProperty(name="userPoolArn", flag="unknown_userPoolArn")
    private String value_userPoolArn;
    private boolean unknown_userPoolArn;
    public String userPoolArn() {
        if (!unknown_userPoolArn) return value_userPoolArn;
        throw new UndeferrableValueException("Value 'ListenerRuleActionAuthenticateCognito.userPoolArn' is not present");
    }

    /**
     * The ID of the Cognito user pool client.
     * 
     */
    @PolicyResourceProperty(name="userPoolClientId", flag="unknown_userPoolClientId")
    private String value_userPoolClientId;
    private boolean unknown_userPoolClientId;
    public String userPoolClientId() {
        if (!unknown_userPoolClientId) return value_userPoolClientId;
        throw new UndeferrableValueException("Value 'ListenerRuleActionAuthenticateCognito.userPoolClientId' is not present");
    }

    /**
     * The domain prefix or fully-qualified domain name of the Cognito user pool.
     * 
     */
    @PolicyResourceProperty(name="userPoolDomain", flag="unknown_userPoolDomain")
    private String value_userPoolDomain;
    private boolean unknown_userPoolDomain;
    public String userPoolDomain() {
        if (!unknown_userPoolDomain) return value_userPoolDomain;
        throw new UndeferrableValueException("Value 'ListenerRuleActionAuthenticateCognito.userPoolDomain' is not present");
    }

}
