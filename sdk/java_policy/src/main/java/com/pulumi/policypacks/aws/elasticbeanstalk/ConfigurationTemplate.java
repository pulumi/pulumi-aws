// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.elasticbeanstalk;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.elasticbeanstalk.outputs.ConfigurationTemplateSetting;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:elasticbeanstalk/configurationTemplate:ConfigurationTemplate")
public final class ConfigurationTemplate extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * name of the application to associate with this configuration template
     * 
     */
    @PolicyResourceProperty(name="application", flag="unknown_application")
    private String value_application;
    private boolean unknown_application;
    public String application() {
        if (!unknown_application) return value_application;
        throw new UndeferrableValueException("Value 'ConfigurationTemplate.application' is not present");
    }

    /**
     * Short description of the Template
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private @Nullable String value_description;
    private boolean unknown_description;
    public @Nullable String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'ConfigurationTemplate.description' is not present");
    }

    /**
     * The ID of the environment used with this configuration template
     * 
     */
    @PolicyResourceProperty(name="environmentId", flag="unknown_environmentId")
    private @Nullable String value_environmentId;
    private boolean unknown_environmentId;
    public @Nullable String environmentId() {
        if (!unknown_environmentId) return value_environmentId;
        throw new UndeferrableValueException("Value 'ConfigurationTemplate.environmentId' is not present");
    }

    /**
     * A unique name for this Template.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'ConfigurationTemplate.name' is not present");
    }

    /**
     * Option settings to configure the new Environment. These
     * override specific values that are set as defaults. The format is detailed
     * below in Option Settings
     * 
     */
    @PolicyResourceProperty(name="settings", flag="unknown_settings")
    private List<ConfigurationTemplateSetting> value_settings;
    private boolean unknown_settings;
    public List<ConfigurationTemplateSetting> settings() {
        if (!unknown_settings) return value_settings;
        throw new UndeferrableValueException("Value 'ConfigurationTemplate.settings' is not present");
    }

    /**
     * A solution stack to base your Template
     * off of. Example stacks can be found in the [Amazon API documentation][1]
     * 
     */
    @PolicyResourceProperty(name="solutionStackName", flag="unknown_solutionStackName")
    private @Nullable String value_solutionStackName;
    private boolean unknown_solutionStackName;
    public @Nullable String solutionStackName() {
        if (!unknown_solutionStackName) return value_solutionStackName;
        throw new UndeferrableValueException("Value 'ConfigurationTemplate.solutionStackName' is not present");
    }

}
