// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2transitgateway;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ec2transitgateway/vpcAttachmentAccepter:VpcAttachmentAccepter")
public final class VpcAttachmentAccepterArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Key-value tags for the EC2 Transit Gateway VPC Attachment. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'VpcAttachmentAccepterArgs.tags' is not present");
    }

    /**
     * The ID of the EC2 Transit Gateway Attachment to manage.
     * 
     */
    @PolicyResourceProperty(name="transitGatewayAttachmentId", flag="unknown_transitGatewayAttachmentId")
    private String value_transitGatewayAttachmentId;
    private boolean unknown_transitGatewayAttachmentId;
    public String transitGatewayAttachmentId() {
        if (!unknown_transitGatewayAttachmentId) return value_transitGatewayAttachmentId;
        throw new UndeferrableValueException("Value 'VpcAttachmentAccepterArgs.transitGatewayAttachmentId' is not present");
    }

    /**
     * Boolean whether the VPC Attachment should be associated with the EC2 Transit Gateway association default route table. Default value: `true`.
     * 
     */
    @PolicyResourceProperty(name="transitGatewayDefaultRouteTableAssociation", flag="unknown_transitGatewayDefaultRouteTableAssociation")
    private Boolean value_transitGatewayDefaultRouteTableAssociation;
    private boolean unknown_transitGatewayDefaultRouteTableAssociation;
    public Boolean transitGatewayDefaultRouteTableAssociation() {
        if (!unknown_transitGatewayDefaultRouteTableAssociation) return value_transitGatewayDefaultRouteTableAssociation;
        throw new UndeferrableValueException("Value 'VpcAttachmentAccepterArgs.transitGatewayDefaultRouteTableAssociation' is not present");
    }

    /**
     * Boolean whether the VPC Attachment should propagate routes with the EC2 Transit Gateway propagation default route table. Default value: `true`.
     * 
     */
    @PolicyResourceProperty(name="transitGatewayDefaultRouteTablePropagation", flag="unknown_transitGatewayDefaultRouteTablePropagation")
    private Boolean value_transitGatewayDefaultRouteTablePropagation;
    private boolean unknown_transitGatewayDefaultRouteTablePropagation;
    public Boolean transitGatewayDefaultRouteTablePropagation() {
        if (!unknown_transitGatewayDefaultRouteTablePropagation) return value_transitGatewayDefaultRouteTablePropagation;
        throw new UndeferrableValueException("Value 'VpcAttachmentAccepterArgs.transitGatewayDefaultRouteTablePropagation' is not present");
    }

}
