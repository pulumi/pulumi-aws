// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.route53recoverycontrol;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.route53recoverycontrol.SafetyRuleRuleConfig;
import java.lang.Integer;
import java.lang.String;
import java.util.List;


@PolicyResourceType(type="aws:route53recoverycontrol/safetyRule:SafetyRule")
public final class SafetyRule extends com.pulumi.resources.PolicyResource {

    /**
     * ARN of the safety rule.
     * 
     */
    public String arn;



    /**
     * Routing controls that are part of transactions that are evaluated to determine if a request to change a routing control state is allowed.
     * 
     */
    public List<String> assertedControls;



    /**
     * ARN of the control panel in which this safety rule will reside.
     * 
     */
    public String controlPanelArn;



    /**
     * Gating controls for the new gating rule. That is, routing controls that are evaluated by the rule configuration that you specify.
     * 
     */
    public List<String> gatingControls;



    /**
     * Name describing the safety rule.
     * 
     */
    public String name;



    /**
     * Configuration block for safety rule criteria. See below.
     * 
     */
    public SafetyRuleRuleConfig ruleConfig;



    /**
     * Status of the safety rule. `PENDING` when it is being created/updated, `PENDING_DELETION` when it is being deleted, and `DEPLOYED` otherwise.
     * 
     */
    public String status;



    /**
     * Routing controls that can only be set or unset if the specified `rule_config` evaluates to true for the specified `gating_controls`.
     * 
     */
    public List<String> targetControls;



    /**
     * Evaluation period, in milliseconds (ms), during which any request against the target routing controls will fail.
     * 
     * The following arguments are optional:
     * 
     */
    public Integer waitPeriodMs;



}
