// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.rds;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;


@PolicyResourceType(type="aws:rds/clusterRoleAssociation:ClusterRoleAssociation")
public final class ClusterRoleAssociationArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * DB Cluster Identifier to associate with the IAM Role.
     * 
     */
    @PolicyResourceProperty(name="dbClusterIdentifier", flag="unknown_dbClusterIdentifier")
    private String value_dbClusterIdentifier;
    private boolean unknown_dbClusterIdentifier;
    public String dbClusterIdentifier() {
        if (!unknown_dbClusterIdentifier) return value_dbClusterIdentifier;
        throw new UndeferrableValueException("Value 'ClusterRoleAssociationArgs.dbClusterIdentifier' is not present");
    }

    /**
     * Name of the feature for association. This can be found in the AWS documentation relevant to the integration or a full list is available in the `SupportedFeatureNames` list returned by [AWS CLI rds describe-db-engine-versions](https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-engine-versions.html).
     * 
     */
    @PolicyResourceProperty(name="featureName", flag="unknown_featureName")
    private String value_featureName;
    private boolean unknown_featureName;
    public String featureName() {
        if (!unknown_featureName) return value_featureName;
        throw new UndeferrableValueException("Value 'ClusterRoleAssociationArgs.featureName' is not present");
    }

    /**
     * Amazon Resource Name (ARN) of the IAM Role to associate with the DB Cluster.
     * 
     */
    @PolicyResourceProperty(name="roleArn", flag="unknown_roleArn")
    private String value_roleArn;
    private boolean unknown_roleArn;
    public String roleArn() {
        if (!unknown_roleArn) return value_roleArn;
        throw new UndeferrableValueException("Value 'ClusterRoleAssociationArgs.roleArn' is not present");
    }

}
