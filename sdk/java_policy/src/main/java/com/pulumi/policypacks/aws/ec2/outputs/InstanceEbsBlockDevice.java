// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2.outputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


public final class InstanceEbsBlockDevice {

    /**
     * Whether the volume should be destroyed on instance termination. Defaults to `true`.
     * 
     */
    private @Nullable UndeferrableValue<Boolean> deleteOnTermination;

    public @Nullable Boolean deleteOnTermination() {
        if (deleteOnTermination == null) return null;
        return deleteOnTermination.getValue("InstanceEbsBlockDevice.deleteOnTermination");
    }

    /**
     * Name of the device to mount.
     * 
     */
    private UndeferrableValue<String> deviceName;

    public String deviceName() {
        if (deviceName == null) return null;
        return deviceName.getValue("InstanceEbsBlockDevice.deviceName");
    }

    /**
     * Enables [EBS encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html) on the volume. Defaults to `false`. Cannot be used with `snapshot_id`. Must be configured to perform drift detection.
     * 
     */
    private @Nullable UndeferrableValue<Boolean> encrypted;

    public @Nullable Boolean encrypted() {
        if (encrypted == null) return null;
        return encrypted.getValue("InstanceEbsBlockDevice.encrypted");
    }

    /**
     * Amount of provisioned [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html). Only valid for volume_type of `io1`, `io2` or `gp3`.
     * 
     */
    private @Nullable UndeferrableValue<Integer> iops;

    public @Nullable Integer iops() {
        if (iops == null) return null;
        return iops.getValue("InstanceEbsBlockDevice.iops");
    }

    /**
     * Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
     * 
     */
    private @Nullable UndeferrableValue<String> kmsKeyId;

    public @Nullable String kmsKeyId() {
        if (kmsKeyId == null) return null;
        return kmsKeyId.getValue("InstanceEbsBlockDevice.kmsKeyId");
    }

    /**
     * Snapshot ID to mount.
     * 
     */
    private @Nullable UndeferrableValue<String> snapshotId;

    public @Nullable String snapshotId() {
        if (snapshotId == null) return null;
        return snapshotId.getValue("InstanceEbsBlockDevice.snapshotId");
    }

    /**
     * Map of tags to assign to the device.
     * 
     */
    private @Nullable UndeferrableValue<Map<String,String>> tags;

    public @Nullable Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("InstanceEbsBlockDevice.tags");
    }

    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    private @Nullable UndeferrableValue<Map<String,String>> tagsAll;

    public @Nullable Map<String,String> tagsAll() {
        if (tagsAll == null) return null;
        return tagsAll.getValue("InstanceEbsBlockDevice.tagsAll");
    }

    /**
     * Throughput to provision for a volume in mebibytes per second (MiB/s). This is only valid for `volume_type` of `gp3`.
     * 
     */
    private @Nullable UndeferrableValue<Integer> throughput;

    public @Nullable Integer throughput() {
        if (throughput == null) return null;
        return throughput.getValue("InstanceEbsBlockDevice.throughput");
    }

    /**
     * ID of the volume. For example, the ID can be accessed like this, `aws_instance.web.root_block_device.0.volume_id`.
     * 
     */
    private @Nullable UndeferrableValue<String> volumeId;

    public @Nullable String volumeId() {
        if (volumeId == null) return null;
        return volumeId.getValue("InstanceEbsBlockDevice.volumeId");
    }

    /**
     * Size of the volume in gibibytes (GiB).
     * 
     */
    private @Nullable UndeferrableValue<Integer> volumeSize;

    public @Nullable Integer volumeSize() {
        if (volumeSize == null) return null;
        return volumeSize.getValue("InstanceEbsBlockDevice.volumeSize");
    }

    /**
     * Type of volume. Valid values include `standard`, `gp2`, `gp3`, `io1`, `io2`, `sc1`, or `st1`. Defaults to `gp2`.
     * 
     * &gt; **NOTE:** Currently, changes to the `ebs_block_device` configuration of _existing_ resources cannot be automatically detected by this provider. To manage changes and attachments of an EBS block to an instance, use the `aws.ebs.Volume` and `aws.ec2.VolumeAttachment` resources instead. If you use `ebs_block_device` on an `aws.ec2.Instance`, this provider will assume management over the full set of non-root EBS block devices for the instance, treating additional block devices as drift. For this reason, `ebs_block_device` cannot be mixed with external `aws.ebs.Volume` and `aws.ec2.VolumeAttachment` resources for a given instance.
     * 
     */
    private @Nullable UndeferrableValue<String> volumeType;

    public @Nullable String volumeType() {
        if (volumeType == null) return null;
        return volumeType.getValue("InstanceEbsBlockDevice.volumeType");
    }

}
