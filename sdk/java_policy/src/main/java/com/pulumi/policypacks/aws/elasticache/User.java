// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.elasticache;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.elasticache.outputs.UserAuthenticationMode;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:elasticache/user:User")
public final class User extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Access permissions string used for this user. See [Specifying Permissions Using an Access String](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Clusters.RBAC.html#Access-string) for more details.
     * 
     */
    private UndeferrableValue<String> accessString;

    public String accessString() {
        if (accessString == null) return null;
        return accessString.getValue("User.accessString");
    }

    /**
     * The ARN of the created ElastiCache User.
     * 
     */
    private UndeferrableValue<String> arn;

    public String arn() {
        if (arn == null) return null;
        return arn.getValue("User.arn");
    }

    /**
     * Denotes the user&#39;s authentication properties. Detailed below.
     * 
     */
    private UndeferrableValue<UserAuthenticationMode> authenticationMode;

    public UserAuthenticationMode authenticationMode() {
        if (authenticationMode == null) return null;
        return authenticationMode.getValue("User.authenticationMode");
    }

    /**
     * The current supported values are `redis`, `valkey` (case insensitive).
     * 
     */
    private UndeferrableValue<String> engine;

    public String engine() {
        if (engine == null) return null;
        return engine.getValue("User.engine");
    }

    /**
     * Indicates a password is not required for this user.
     * 
     */
    private @Nullable UndeferrableValue<Boolean> noPasswordRequired;

    public @Nullable Boolean noPasswordRequired() {
        if (noPasswordRequired == null) return null;
        return noPasswordRequired.getValue("User.noPasswordRequired");
    }

    /**
     * Passwords used for this user. You can create up to two passwords for each user.
     * 
     */
    private @Nullable UndeferrableValue<List<String>> passwords;

    public @Nullable List<String> passwords() {
        if (passwords == null) return null;
        return passwords.getValue("User.passwords");
    }

    /**
     * A list of tags to be added to this resource. A tag is a key-value pair.
     * 
     */
    private @Nullable UndeferrableValue<Map<String,String>> tags;

    public @Nullable Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("User.tags");
    }

    /**
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    private UndeferrableValue<Map<String,String>> tagsAll;

    public Map<String,String> tagsAll() {
        if (tagsAll == null) return null;
        return tagsAll.getValue("User.tagsAll");
    }

    /**
     * The ID of the user.
     * 
     */
    private UndeferrableValue<String> userId;

    public String userId() {
        if (userId == null) return null;
        return userId.getValue("User.userId");
    }

    /**
     * The username of the user.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> userName;

    public String userName() {
        if (userName == null) return null;
        return userName.getValue("User.userName");
    }

}
