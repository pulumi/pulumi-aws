// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.location;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:location/geofenceCollection:GeofenceCollection")
public final class GeofenceCollectionArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The name of the geofence collection.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="collectionName", flag="unknown_collectionName")
    private String value_collectionName;
    private boolean unknown_collectionName;
    public String collectionName() {
        if (!unknown_collectionName) return value_collectionName;
        throw new UndeferrableValueException("Value 'GeofenceCollectionArgs.collectionName' is not present");
    }

    /**
     * The optional description for the geofence collection.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private String value_description;
    private boolean unknown_description;
    public String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'GeofenceCollectionArgs.description' is not present");
    }

    /**
     * A key identifier for an AWS KMS customer managed key assigned to the Amazon Location resource.
     * 
     */
    @PolicyResourceProperty(name="kmsKeyId", flag="unknown_kmsKeyId")
    private String value_kmsKeyId;
    private boolean unknown_kmsKeyId;
    public String kmsKeyId() {
        if (!unknown_kmsKeyId) return value_kmsKeyId;
        throw new UndeferrableValueException("Value 'GeofenceCollectionArgs.kmsKeyId' is not present");
    }

    /**
     * Key-value tags for the geofence collection. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'GeofenceCollectionArgs.tags' is not present");
    }

}
