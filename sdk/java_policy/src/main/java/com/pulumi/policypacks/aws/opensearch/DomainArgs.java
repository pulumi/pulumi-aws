// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.opensearch;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.opensearch.inputs.DomainAdvancedSecurityOptionsArgs;
import com.pulumi.policypacks.aws.opensearch.inputs.DomainAutoTuneOptionsArgs;
import com.pulumi.policypacks.aws.opensearch.inputs.DomainClusterConfigArgs;
import com.pulumi.policypacks.aws.opensearch.inputs.DomainCognitoOptionsArgs;
import com.pulumi.policypacks.aws.opensearch.inputs.DomainDomainEndpointOptionsArgs;
import com.pulumi.policypacks.aws.opensearch.inputs.DomainEbsOptionsArgs;
import com.pulumi.policypacks.aws.opensearch.inputs.DomainEncryptAtRestArgs;
import com.pulumi.policypacks.aws.opensearch.inputs.DomainLogPublishingOptionArgs;
import com.pulumi.policypacks.aws.opensearch.inputs.DomainNodeToNodeEncryptionArgs;
import com.pulumi.policypacks.aws.opensearch.inputs.DomainOffPeakWindowOptionsArgs;
import com.pulumi.policypacks.aws.opensearch.inputs.DomainSnapshotOptionsArgs;
import com.pulumi.policypacks.aws.opensearch.inputs.DomainSoftwareUpdateOptionsArgs;
import com.pulumi.policypacks.aws.opensearch.inputs.DomainVpcOptionsArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:opensearch/domain:Domain")
public final class DomainArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * IAM policy document specifying the access policies for the domain.
     * 
     */
    private UndeferrableValue<String> accessPolicies;

    public String accessPolicies() {
        if (accessPolicies == null) return null;
        return accessPolicies.getValue("DomainArgs.accessPolicies");
    }

    /**
     * Key-value string pairs to specify advanced configuration options. Note that the values for these configuration options must be strings (wrapped in quotes) or they may be wrong and cause a perpetual diff, causing the provider to want to recreate your OpenSearch domain on every apply.
     * 
     */
    private UndeferrableValue<Map<String,String>> advancedOptions;

    public Map<String,String> advancedOptions() {
        if (advancedOptions == null) return null;
        return advancedOptions.getValue("DomainArgs.advancedOptions");
    }

    /**
     * Configuration block for [fine-grained access control](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html). Detailed below.
     * 
     */
    private UndeferrableValue<DomainAdvancedSecurityOptionsArgs> advancedSecurityOptions;

    public DomainAdvancedSecurityOptionsArgs advancedSecurityOptions() {
        if (advancedSecurityOptions == null) return null;
        return advancedSecurityOptions.getValue("DomainArgs.advancedSecurityOptions");
    }

    /**
     * Configuration block for the Auto-Tune options of the domain. Detailed below.
     * 
     */
    private UndeferrableValue<DomainAutoTuneOptionsArgs> autoTuneOptions;

    public DomainAutoTuneOptionsArgs autoTuneOptions() {
        if (autoTuneOptions == null) return null;
        return autoTuneOptions.getValue("DomainArgs.autoTuneOptions");
    }

    /**
     * Configuration block for the cluster of the domain. Detailed below.
     * 
     */
    private UndeferrableValue<DomainClusterConfigArgs> clusterConfig;

    public DomainClusterConfigArgs clusterConfig() {
        if (clusterConfig == null) return null;
        return clusterConfig.getValue("DomainArgs.clusterConfig");
    }

    /**
     * Configuration block for authenticating dashboard with Cognito. Detailed below.
     * 
     */
    private UndeferrableValue<DomainCognitoOptionsArgs> cognitoOptions;

    public DomainCognitoOptionsArgs cognitoOptions() {
        if (cognitoOptions == null) return null;
        return cognitoOptions.getValue("DomainArgs.cognitoOptions");
    }

    /**
     * Configuration block for domain endpoint HTTP(S) related options. Detailed below.
     * 
     */
    private UndeferrableValue<DomainDomainEndpointOptionsArgs> domainEndpointOptions;

    public DomainDomainEndpointOptionsArgs domainEndpointOptions() {
        if (domainEndpointOptions == null) return null;
        return domainEndpointOptions.getValue("DomainArgs.domainEndpointOptions");
    }

    /**
     * Name of the domain.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> domainName;

    public String domainName() {
        if (domainName == null) return null;
        return domainName.getValue("DomainArgs.domainName");
    }

    /**
     * Configuration block for EBS related options, may be required based on chosen [instance size](https://aws.amazon.com/opensearch-service/pricing/). Detailed below.
     * 
     */
    private UndeferrableValue<DomainEbsOptionsArgs> ebsOptions;

    public DomainEbsOptionsArgs ebsOptions() {
        if (ebsOptions == null) return null;
        return ebsOptions.getValue("DomainArgs.ebsOptions");
    }

    /**
     * Configuration block for encrypt at rest options. Only available for [certain instance types](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/encryption-at-rest.html). Detailed below.
     * 
     */
    private UndeferrableValue<DomainEncryptAtRestArgs> encryptAtRest;

    public DomainEncryptAtRestArgs encryptAtRest() {
        if (encryptAtRest == null) return null;
        return encryptAtRest.getValue("DomainArgs.encryptAtRest");
    }

    /**
     * Either `Elasticsearch_X.Y` or `OpenSearch_X.Y` to specify the engine version for the Amazon OpenSearch Service domain. For example, `OpenSearch_1.0` or `Elasticsearch_7.9`.
     * See [Creating and managing Amazon OpenSearch Service domains](http://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomains).
     * Defaults to the lastest version of OpenSearch.
     * 
     */
    private UndeferrableValue<String> engineVersion;

    public String engineVersion() {
        if (engineVersion == null) return null;
        return engineVersion.getValue("DomainArgs.engineVersion");
    }

    /**
     * The IP address type for the endpoint. Valid values are `ipv4` and `dualstack`.
     * 
     */
    private UndeferrableValue<String> ipAddressType;

    public String ipAddressType() {
        if (ipAddressType == null) return null;
        return ipAddressType.getValue("DomainArgs.ipAddressType");
    }

    /**
     * Configuration block for publishing slow and application logs to CloudWatch Logs. This block can be declared multiple times, for each log_type, within the same resource. Detailed below.
     * 
     */
    private UndeferrableValue<List<DomainLogPublishingOptionArgs>> logPublishingOptions;

    public List<DomainLogPublishingOptionArgs> logPublishingOptions() {
        if (logPublishingOptions == null) return null;
        return logPublishingOptions.getValue("DomainArgs.logPublishingOptions");
    }

    /**
     * Configuration block for node-to-node encryption options. Detailed below.
     * 
     */
    private UndeferrableValue<DomainNodeToNodeEncryptionArgs> nodeToNodeEncryption;

    public DomainNodeToNodeEncryptionArgs nodeToNodeEncryption() {
        if (nodeToNodeEncryption == null) return null;
        return nodeToNodeEncryption.getValue("DomainArgs.nodeToNodeEncryption");
    }

    /**
     * Configuration to add Off Peak update options. ([documentation](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/off-peak.html)). Detailed below.
     * 
     */
    private UndeferrableValue<DomainOffPeakWindowOptionsArgs> offPeakWindowOptions;

    public DomainOffPeakWindowOptionsArgs offPeakWindowOptions() {
        if (offPeakWindowOptions == null) return null;
        return offPeakWindowOptions.getValue("DomainArgs.offPeakWindowOptions");
    }

    /**
     * Configuration block for snapshot related options. Detailed below. DEPRECATED. For domains running OpenSearch 5.3 and later, Amazon OpenSearch takes hourly automated snapshots, making this setting irrelevant. For domains running earlier versions, OpenSearch takes daily automated snapshots.
     * 
     */
    private UndeferrableValue<DomainSnapshotOptionsArgs> snapshotOptions;

    public DomainSnapshotOptionsArgs snapshotOptions() {
        if (snapshotOptions == null) return null;
        return snapshotOptions.getValue("DomainArgs.snapshotOptions");
    }

    /**
     * Software update options for the domain. Detailed below.
     * 
     */
    private UndeferrableValue<DomainSoftwareUpdateOptionsArgs> softwareUpdateOptions;

    public DomainSoftwareUpdateOptionsArgs softwareUpdateOptions() {
        if (softwareUpdateOptions == null) return null;
        return softwareUpdateOptions.getValue("DomainArgs.softwareUpdateOptions");
    }

    /**
     * Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("DomainArgs.tags");
    }

    /**
     * Configuration block for VPC related options. Adding or removing this configuration forces a new resource ([documentation](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html)). Detailed below.
     * 
     */
    private UndeferrableValue<DomainVpcOptionsArgs> vpcOptions;

    public DomainVpcOptionsArgs vpcOptions() {
        if (vpcOptions == null) return null;
        return vpcOptions.getValue("DomainArgs.vpcOptions");
    }

}
