// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.dlm.inputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.dlm.inputs.LifecyclePolicyPolicyDetailsScheduleCreateRuleArgs;
import com.pulumi.policypacks.aws.dlm.inputs.LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRuleArgs;
import com.pulumi.policypacks.aws.dlm.inputs.LifecyclePolicyPolicyDetailsScheduleDeprecateRuleArgs;
import com.pulumi.policypacks.aws.dlm.inputs.LifecyclePolicyPolicyDetailsScheduleFastRestoreRuleArgs;
import com.pulumi.policypacks.aws.dlm.inputs.LifecyclePolicyPolicyDetailsScheduleRetainRuleArgs;
import com.pulumi.policypacks.aws.dlm.inputs.LifecyclePolicyPolicyDetailsScheduleShareRuleArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


public final class LifecyclePolicyPolicyDetailsScheduleArgs {

    private UndeferrableValue<Boolean> copyTags;

    public Boolean copyTags() {
        if (copyTags == null) return null;
        return copyTags.getValue("LifecyclePolicyPolicyDetailsScheduleArgs.copyTags");
    }

    /**
     * See the `create_rule` block. Max of 1 per schedule.
     * 
     */
    private UndeferrableValue<LifecyclePolicyPolicyDetailsScheduleCreateRuleArgs> createRule;

    public LifecyclePolicyPolicyDetailsScheduleCreateRuleArgs createRule() {
        if (createRule == null) return null;
        return createRule.getValue("LifecyclePolicyPolicyDetailsScheduleArgs.createRule");
    }

    /**
     * See the `cross_region_copy_rule` block. Max of 3 per schedule.
     * 
     */
    private UndeferrableValue<List<LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRuleArgs>> crossRegionCopyRules;

    public List<LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRuleArgs> crossRegionCopyRules() {
        if (crossRegionCopyRules == null) return null;
        return crossRegionCopyRules.getValue("LifecyclePolicyPolicyDetailsScheduleArgs.crossRegionCopyRules");
    }

    private UndeferrableValue<LifecyclePolicyPolicyDetailsScheduleDeprecateRuleArgs> deprecateRule;

    public LifecyclePolicyPolicyDetailsScheduleDeprecateRuleArgs deprecateRule() {
        if (deprecateRule == null) return null;
        return deprecateRule.getValue("LifecyclePolicyPolicyDetailsScheduleArgs.deprecateRule");
    }

    /**
     * See the `fast_restore_rule` block. Max of 1 per schedule.
     * 
     */
    private UndeferrableValue<LifecyclePolicyPolicyDetailsScheduleFastRestoreRuleArgs> fastRestoreRule;

    public LifecyclePolicyPolicyDetailsScheduleFastRestoreRuleArgs fastRestoreRule() {
        if (fastRestoreRule == null) return null;
        return fastRestoreRule.getValue("LifecyclePolicyPolicyDetailsScheduleArgs.fastRestoreRule");
    }

    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("LifecyclePolicyPolicyDetailsScheduleArgs.name");
    }

    private UndeferrableValue<LifecyclePolicyPolicyDetailsScheduleRetainRuleArgs> retainRule;

    public LifecyclePolicyPolicyDetailsScheduleRetainRuleArgs retainRule() {
        if (retainRule == null) return null;
        return retainRule.getValue("LifecyclePolicyPolicyDetailsScheduleArgs.retainRule");
    }

    /**
     * See the `share_rule` block. Max of 1 per schedule.
     * 
     */
    private UndeferrableValue<LifecyclePolicyPolicyDetailsScheduleShareRuleArgs> shareRule;

    public LifecyclePolicyPolicyDetailsScheduleShareRuleArgs shareRule() {
        if (shareRule == null) return null;
        return shareRule.getValue("LifecyclePolicyPolicyDetailsScheduleArgs.shareRule");
    }

    /**
     * A map of tag keys and their values. DLM lifecycle policies will already tag the snapshot with the tags on the volume. This configuration adds extra tags on top of these.
     * 
     */
    private UndeferrableValue<Map<String,String>> tagsToAdd;

    public Map<String,String> tagsToAdd() {
        if (tagsToAdd == null) return null;
        return tagsToAdd.getValue("LifecyclePolicyPolicyDetailsScheduleArgs.tagsToAdd");
    }

    /**
     * A map of tag keys and variable values, where the values are determined when the policy is executed. Only `$(instance-id)` or `$(timestamp)` are valid values. Can only be used when `resource_types` is `INSTANCE`.
     * 
     */
    private UndeferrableValue<Map<String,String>> variableTags;

    public Map<String,String> variableTags() {
        if (variableTags == null) return null;
        return variableTags.getValue("LifecyclePolicyPolicyDetailsScheduleArgs.variableTags");
    }

}
