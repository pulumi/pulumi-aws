// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.kms;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:kms/keyPolicy:KeyPolicy")
public final class KeyPolicy extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * A flag to indicate whether to bypass the key policy lockout safety check.
     * Setting this value to true increases the risk that the KMS key becomes unmanageable. Do not set this value to true indiscriminately. If this value is set, and the resource is destroyed, a warning will be shown, and the resource will be removed from state.
     * For more information, refer to the scenario in the [Default Key Policy](https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default-allow-root-enable-iam) section in the _AWS Key Management Service Developer Guide_.
     * 
     */
    @PolicyResourceProperty(name="bypassPolicyLockoutSafetyCheck", flag="unknown_bypassPolicyLockoutSafetyCheck")
    private @Nullable Boolean value_bypassPolicyLockoutSafetyCheck;
    private boolean unknown_bypassPolicyLockoutSafetyCheck;
    public @Nullable Boolean bypassPolicyLockoutSafetyCheck() {
        if (!unknown_bypassPolicyLockoutSafetyCheck) return value_bypassPolicyLockoutSafetyCheck;
        throw new UndeferrableValueException("Value 'KeyPolicy.bypassPolicyLockoutSafetyCheck' is not present");
    }

    /**
     * The ID of the KMS Key to attach the policy.
     * 
     */
    @PolicyResourceProperty(name="keyId", flag="unknown_keyId")
    private String value_keyId;
    private boolean unknown_keyId;
    public String keyId() {
        if (!unknown_keyId) return value_keyId;
        throw new UndeferrableValueException("Value 'KeyPolicy.keyId' is not present");
    }

    /**
     * A valid policy JSON document. Although this is a key policy, not an IAM policy, an `aws.iam.getPolicyDocument`, in the form that designates a principal, can be used. For more information about building policy documents, see the AWS IAM Policy Document Guide.
     * 
     * &gt; **NOTE:** Note: All KMS keys must have a key policy. If a key policy is not specified, or this resource is destroyed, AWS gives the KMS key a [default key policy](https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default) that gives all principals in the owning account unlimited access to all KMS operations for the key. This default key policy effectively delegates all access control to IAM policies and KMS grants.
     * 
     */
    @PolicyResourceProperty(name="policy", flag="unknown_policy")
    private String value_policy;
    private boolean unknown_policy;
    public String policy() {
        if (!unknown_policy) return value_policy;
        throw new UndeferrableValueException("Value 'KeyPolicy.policy' is not present");
    }

}
