// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.grafana;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:grafana/workspaceSamlConfiguration:WorkspaceSamlConfiguration")
public final class WorkspaceSamlConfigurationArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The admin role values.
     * 
     */
    private UndeferrableValue<List<String>> adminRoleValues;

    public List<String> adminRoleValues() {
        if (adminRoleValues == null) return null;
        return adminRoleValues.getValue("WorkspaceSamlConfigurationArgs.adminRoleValues");
    }

    /**
     * The allowed organizations.
     * 
     */
    private UndeferrableValue<List<String>> allowedOrganizations;

    public List<String> allowedOrganizations() {
        if (allowedOrganizations == null) return null;
        return allowedOrganizations.getValue("WorkspaceSamlConfigurationArgs.allowedOrganizations");
    }

    /**
     * The editor role values.
     * 
     */
    private UndeferrableValue<List<String>> editorRoleValues;

    public List<String> editorRoleValues() {
        if (editorRoleValues == null) return null;
        return editorRoleValues.getValue("WorkspaceSamlConfigurationArgs.editorRoleValues");
    }

    /**
     * The email assertion.
     * 
     */
    private UndeferrableValue<String> emailAssertion;

    public String emailAssertion() {
        if (emailAssertion == null) return null;
        return emailAssertion.getValue("WorkspaceSamlConfigurationArgs.emailAssertion");
    }

    /**
     * The groups assertion.
     * 
     */
    private UndeferrableValue<String> groupsAssertion;

    public String groupsAssertion() {
        if (groupsAssertion == null) return null;
        return groupsAssertion.getValue("WorkspaceSamlConfigurationArgs.groupsAssertion");
    }

    /**
     * The IDP Metadata URL. Note that either `idp_metadata_url` or `idp_metadata_xml` (but not both) must be specified.
     * 
     */
    private UndeferrableValue<String> idpMetadataUrl;

    public String idpMetadataUrl() {
        if (idpMetadataUrl == null) return null;
        return idpMetadataUrl.getValue("WorkspaceSamlConfigurationArgs.idpMetadataUrl");
    }

    /**
     * The IDP Metadata XML. Note that either `idp_metadata_url` or `idp_metadata_xml` (but not both) must be specified.
     * 
     */
    private UndeferrableValue<String> idpMetadataXml;

    public String idpMetadataXml() {
        if (idpMetadataXml == null) return null;
        return idpMetadataXml.getValue("WorkspaceSamlConfigurationArgs.idpMetadataXml");
    }

    /**
     * The login assertion.
     * 
     */
    private UndeferrableValue<String> loginAssertion;

    public String loginAssertion() {
        if (loginAssertion == null) return null;
        return loginAssertion.getValue("WorkspaceSamlConfigurationArgs.loginAssertion");
    }

    /**
     * The login validity duration.
     * 
     */
    private UndeferrableValue<Integer> loginValidityDuration;

    public Integer loginValidityDuration() {
        if (loginValidityDuration == null) return null;
        return loginValidityDuration.getValue("WorkspaceSamlConfigurationArgs.loginValidityDuration");
    }

    /**
     * The name assertion.
     * 
     */
    private UndeferrableValue<String> nameAssertion;

    public String nameAssertion() {
        if (nameAssertion == null) return null;
        return nameAssertion.getValue("WorkspaceSamlConfigurationArgs.nameAssertion");
    }

    /**
     * The org assertion.
     * 
     */
    private UndeferrableValue<String> orgAssertion;

    public String orgAssertion() {
        if (orgAssertion == null) return null;
        return orgAssertion.getValue("WorkspaceSamlConfigurationArgs.orgAssertion");
    }

    /**
     * The role assertion.
     * 
     */
    private UndeferrableValue<String> roleAssertion;

    public String roleAssertion() {
        if (roleAssertion == null) return null;
        return roleAssertion.getValue("WorkspaceSamlConfigurationArgs.roleAssertion");
    }

    /**
     * The workspace id.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> workspaceId;

    public String workspaceId() {
        if (workspaceId == null) return null;
        return workspaceId.getValue("WorkspaceSamlConfigurationArgs.workspaceId");
    }

}
