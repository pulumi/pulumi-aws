// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.pipes.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.String;
import javax.annotation.Nullable;


public final class PipeLogConfigurationS3LogDestination {

    /**
     * Name of the Amazon S3 bucket to which EventBridge delivers the log records for the pipe.
     * 
     */
    @PolicyResourceProperty(name="bucketName", flag="unknown_bucketName")
    private String value_bucketName;
    private boolean unknown_bucketName;
    public String bucketName() {
        if (!unknown_bucketName) return value_bucketName;
        throw new UndeferrableValueException("Value 'PipeLogConfigurationS3LogDestination.bucketName' is not present");
    }

    /**
     * Amazon Web Services account that owns the Amazon S3 bucket to which EventBridge delivers the log records for the pipe.
     * 
     */
    @PolicyResourceProperty(name="bucketOwner", flag="unknown_bucketOwner")
    private String value_bucketOwner;
    private boolean unknown_bucketOwner;
    public String bucketOwner() {
        if (!unknown_bucketOwner) return value_bucketOwner;
        throw new UndeferrableValueException("Value 'PipeLogConfigurationS3LogDestination.bucketOwner' is not present");
    }

    /**
     * EventBridge format for the log records. Valid values `json`, `plain` and `w3c`.
     * 
     */
    @PolicyResourceProperty(name="outputFormat", flag="unknown_outputFormat")
    private @Nullable String value_outputFormat;
    private boolean unknown_outputFormat;
    public @Nullable String outputFormat() {
        if (!unknown_outputFormat) return value_outputFormat;
        throw new UndeferrableValueException("Value 'PipeLogConfigurationS3LogDestination.outputFormat' is not present");
    }

    /**
     * Prefix text with which to begin Amazon S3 log object names.
     * 
     */
    @PolicyResourceProperty(name="prefix", flag="unknown_prefix")
    private @Nullable String value_prefix;
    private boolean unknown_prefix;
    public @Nullable String prefix() {
        if (!unknown_prefix) return value_prefix;
        throw new UndeferrableValueException("Value 'PipeLogConfigurationS3LogDestination.prefix' is not present");
    }

}
