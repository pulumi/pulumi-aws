// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.chime;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:chime/voiceConnector:VoiceConnector")
public final class VoiceConnectorArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The AWS Region in which the Amazon Chime Voice Connector is created. Default value: `us-east-1`
     * 
     */
    @PolicyResourceProperty(name="awsRegion", flag="unknown_awsRegion")
    private String value_awsRegion;
    private boolean unknown_awsRegion;
    public String awsRegion() {
        if (!unknown_awsRegion) return value_awsRegion;
        throw new UndeferrableValueException("Value 'VoiceConnectorArgs.awsRegion' is not present");
    }

    /**
     * The name of the Amazon Chime Voice Connector.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'VoiceConnectorArgs.name' is not present");
    }

    /**
     * When enabled, requires encryption for the Amazon Chime Voice Connector.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="requireEncryption", flag="unknown_requireEncryption")
    private Boolean value_requireEncryption;
    private boolean unknown_requireEncryption;
    public Boolean requireEncryption() {
        if (!unknown_requireEncryption) return value_requireEncryption;
        throw new UndeferrableValueException("Value 'VoiceConnectorArgs.requireEncryption' is not present");
    }

    /**
     * Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'VoiceConnectorArgs.tags' is not present");
    }

}
