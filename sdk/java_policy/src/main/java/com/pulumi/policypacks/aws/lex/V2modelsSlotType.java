// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.lex;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.lex.outputs.V2modelsSlotTypeCompositeSlotTypeSetting;
import com.pulumi.policypacks.aws.lex.outputs.V2modelsSlotTypeExternalSourceSetting;
import com.pulumi.policypacks.aws.lex.outputs.V2modelsSlotTypeSlotTypeValues;
import com.pulumi.policypacks.aws.lex.outputs.V2modelsSlotTypeTimeouts;
import com.pulumi.policypacks.aws.lex.outputs.V2modelsSlotTypeValueSelectionSetting;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:lex/v2modelsSlotType:V2modelsSlotType")
public final class V2modelsSlotType extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Identifier of the bot associated with this slot type.
     * 
     */
    @PolicyResourceProperty(name="botId", flag="unknown_botId")
    private String value_botId;
    private boolean unknown_botId;
    public String botId() {
        if (!unknown_botId) return value_botId;
        throw new UndeferrableValueException("Value 'V2modelsSlotType.botId' is not present");
    }

    /**
     * Version of the bot associated with this slot type.
     * 
     */
    @PolicyResourceProperty(name="botVersion", flag="unknown_botVersion")
    private String value_botVersion;
    private boolean unknown_botVersion;
    public String botVersion() {
        if (!unknown_botVersion) return value_botVersion;
        throw new UndeferrableValueException("Value 'V2modelsSlotType.botVersion' is not present");
    }

    /**
     * Specifications for a composite slot type.
     * See `composite_slot_type_setting` argument reference below.
     * 
     */
    @PolicyResourceProperty(name="compositeSlotTypeSetting", flag="unknown_compositeSlotTypeSetting")
    private @Nullable V2modelsSlotTypeCompositeSlotTypeSetting value_compositeSlotTypeSetting;
    private boolean unknown_compositeSlotTypeSetting;
    public @Nullable V2modelsSlotTypeCompositeSlotTypeSetting compositeSlotTypeSetting() {
        if (!unknown_compositeSlotTypeSetting) return value_compositeSlotTypeSetting;
        throw new UndeferrableValueException("Value 'V2modelsSlotType.compositeSlotTypeSetting' is not present");
    }

    /**
     * Description of the slot type.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private @Nullable String value_description;
    private boolean unknown_description;
    public @Nullable String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'V2modelsSlotType.description' is not present");
    }

    /**
     * Type of external information used to create the slot type.
     * See `external_source_setting` argument reference below.
     * 
     */
    @PolicyResourceProperty(name="externalSourceSetting", flag="unknown_externalSourceSetting")
    private @Nullable V2modelsSlotTypeExternalSourceSetting value_externalSourceSetting;
    private boolean unknown_externalSourceSetting;
    public @Nullable V2modelsSlotTypeExternalSourceSetting externalSourceSetting() {
        if (!unknown_externalSourceSetting) return value_externalSourceSetting;
        throw new UndeferrableValueException("Value 'V2modelsSlotType.externalSourceSetting' is not present");
    }

    /**
     * Identifier of the language and locale where this slot type is used.
     * All of the bots, slot types, and slots used by the intent must have the same locale.
     * 
     */
    @PolicyResourceProperty(name="localeId", flag="unknown_localeId")
    private String value_localeId;
    private boolean unknown_localeId;
    public String localeId() {
        if (!unknown_localeId) return value_localeId;
        throw new UndeferrableValueException("Value 'V2modelsSlotType.localeId' is not present");
    }

    /**
     * Name of the slot type.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'V2modelsSlotType.name' is not present");
    }

    /**
     * Built-in slot type used as a parent of this slot type.
     * When you define a parent slot type, the new slot type has the configuration of the parent slot type.
     * Only `AMAZON.AlphaNumeric` is supported.
     * 
     */
    @PolicyResourceProperty(name="parentSlotTypeSignature", flag="unknown_parentSlotTypeSignature")
    private @Nullable String value_parentSlotTypeSignature;
    private boolean unknown_parentSlotTypeSignature;
    public @Nullable String parentSlotTypeSignature() {
        if (!unknown_parentSlotTypeSignature) return value_parentSlotTypeSignature;
        throw new UndeferrableValueException("Value 'V2modelsSlotType.parentSlotTypeSignature' is not present");
    }

    /**
     * Unique identifier for the slot type.
     * 
     */
    @PolicyResourceProperty(name="slotTypeId", flag="unknown_slotTypeId")
    private String value_slotTypeId;
    private boolean unknown_slotTypeId;
    public String slotTypeId() {
        if (!unknown_slotTypeId) return value_slotTypeId;
        throw new UndeferrableValueException("Value 'V2modelsSlotType.slotTypeId' is not present");
    }

    /**
     * List of SlotTypeValue objects that defines the values that the slot type can take.
     * Each value can have a list of synonyms, additional values that help train the machine learning model about the values that it resolves for a slot.
     * See `slot_type_values` argument reference below.
     * 
     */
    @PolicyResourceProperty(name="slotTypeValues", flag="unknown_slotTypeValues")
    private @Nullable V2modelsSlotTypeSlotTypeValues value_slotTypeValues;
    private boolean unknown_slotTypeValues;
    public @Nullable V2modelsSlotTypeSlotTypeValues slotTypeValues() {
        if (!unknown_slotTypeValues) return value_slotTypeValues;
        throw new UndeferrableValueException("Value 'V2modelsSlotType.slotTypeValues' is not present");
    }

    @PolicyResourceProperty(name="timeouts", flag="unknown_timeouts")
    private @Nullable V2modelsSlotTypeTimeouts value_timeouts;
    private boolean unknown_timeouts;
    public @Nullable V2modelsSlotTypeTimeouts timeouts() {
        if (!unknown_timeouts) return value_timeouts;
        throw new UndeferrableValueException("Value 'V2modelsSlotType.timeouts' is not present");
    }

    /**
     * Determines the strategy that Amazon Lex uses to select a value from the list of possible values.
     * See `value_selection_setting` argument reference below.
     * 
     */
    @PolicyResourceProperty(name="valueSelectionSetting", flag="unknown_valueSelectionSetting")
    private @Nullable V2modelsSlotTypeValueSelectionSetting value_valueSelectionSetting;
    private boolean unknown_valueSelectionSetting;
    public @Nullable V2modelsSlotTypeValueSelectionSetting valueSelectionSetting() {
        if (!unknown_valueSelectionSetting) return value_valueSelectionSetting;
        throw new UndeferrableValueException("Value 'V2modelsSlotType.valueSelectionSetting' is not present");
    }

}
