// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.evidently.inputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;


public final class LaunchScheduledSplitsConfigStepSegmentOverrideArgs {

    /**
     * Specifies a number indicating the order to use to evaluate segment overrides, if there are more than one. Segment overrides with lower numbers are evaluated first.
     * 
     */
    private UndeferrableValue<Integer> evaluationOrder;

    public Integer evaluationOrder() {
        if (evaluationOrder == null) return null;
        return evaluationOrder.getValue("LaunchScheduledSplitsConfigStepSegmentOverrideArgs.evaluationOrder");
    }

    /**
     * The name or ARN of the segment to use.
     * 
     */
    private UndeferrableValue<String> segment;

    public String segment() {
        if (segment == null) return null;
        return segment.getValue("LaunchScheduledSplitsConfigStepSegmentOverrideArgs.segment");
    }

    /**
     * The traffic allocation percentages among the feature variations to assign to this segment. This is a set of key-value pairs. The keys are variation names. The values represent the amount of traffic to allocate to that variation for this segment. This is expressed in thousandths of a percent, so a weight of 50000 represents 50% of traffic.
     * 
     */
    private UndeferrableValue<Map<String,Integer>> weights;

    public Map<String,Integer> weights() {
        if (weights == null) return null;
        return weights.getValue("LaunchScheduledSplitsConfigStepSegmentOverrideArgs.weights");
    }

}
