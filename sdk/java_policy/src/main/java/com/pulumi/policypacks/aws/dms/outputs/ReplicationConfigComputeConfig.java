// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.dms.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class ReplicationConfigComputeConfig {

    /**
     * The Availability Zone where the DMS Serverless replication using this configuration will run. The default value is a random.
     * 
     */
    @PolicyResourceProperty(name="availabilityZone", flag="unknown_availabilityZone")
    private @Nullable String value_availabilityZone;
    private boolean unknown_availabilityZone;
    public @Nullable String availabilityZone() {
        if (!unknown_availabilityZone) return value_availabilityZone;
        throw new UndeferrableValueException("Value 'ReplicationConfigComputeConfig.availabilityZone' is not present");
    }

    /**
     * A list of custom DNS name servers supported for the DMS Serverless replication to access your source or target database.
     * 
     */
    @PolicyResourceProperty(name="dnsNameServers", flag="unknown_dnsNameServers")
    private @Nullable String value_dnsNameServers;
    private boolean unknown_dnsNameServers;
    public @Nullable String dnsNameServers() {
        if (!unknown_dnsNameServers) return value_dnsNameServers;
        throw new UndeferrableValueException("Value 'ReplicationConfigComputeConfig.dnsNameServers' is not present");
    }

    /**
     * An Key Management Service (KMS) key Amazon Resource Name (ARN) that is used to encrypt the data during DMS Serverless replication. If you don&#39;t specify a value for the KmsKeyId parameter, DMS uses your default encryption key.
     * 
     */
    @PolicyResourceProperty(name="kmsKeyId", flag="unknown_kmsKeyId")
    private @Nullable String value_kmsKeyId;
    private boolean unknown_kmsKeyId;
    public @Nullable String kmsKeyId() {
        if (!unknown_kmsKeyId) return value_kmsKeyId;
        throw new UndeferrableValueException("Value 'ReplicationConfigComputeConfig.kmsKeyId' is not present");
    }

    /**
     * Specifies the maximum value of the DMS capacity units (DCUs) for which a given DMS Serverless replication can be provisioned. A single DCU is 2GB of RAM, with 1 DCUs as the minimum value allowed. The list of valid DCU values includes 1, 2, 4, 8, 16, 32, 64, 128, 192, 256, and 384.
     * 
     */
    @PolicyResourceProperty(name="maxCapacityUnits", flag="unknown_maxCapacityUnits")
    private @Nullable Integer value_maxCapacityUnits;
    private boolean unknown_maxCapacityUnits;
    public @Nullable Integer maxCapacityUnits() {
        if (!unknown_maxCapacityUnits) return value_maxCapacityUnits;
        throw new UndeferrableValueException("Value 'ReplicationConfigComputeConfig.maxCapacityUnits' is not present");
    }

    /**
     * Specifies the minimum value of the DMS capacity units (DCUs) for which a given DMS Serverless replication can be provisioned. The list of valid DCU values includes 1, 2, 4, 8, 16, 32, 64, 128, 192, 256, and 384. If this value isn&#39;t set DMS sets the lowest allowed value, 1.
     * 
     */
    @PolicyResourceProperty(name="minCapacityUnits", flag="unknown_minCapacityUnits")
    private @Nullable Integer value_minCapacityUnits;
    private boolean unknown_minCapacityUnits;
    public @Nullable Integer minCapacityUnits() {
        if (!unknown_minCapacityUnits) return value_minCapacityUnits;
        throw new UndeferrableValueException("Value 'ReplicationConfigComputeConfig.minCapacityUnits' is not present");
    }

    /**
     * Specifies if the replication instance is a multi-az deployment. You cannot set the `availability_zone` parameter if the `multi_az` parameter is set to `true`.
     * 
     */
    @PolicyResourceProperty(name="multiAz", flag="unknown_multiAz")
    private @Nullable Boolean value_multiAz;
    private boolean unknown_multiAz;
    public @Nullable Boolean multiAz() {
        if (!unknown_multiAz) return value_multiAz;
        throw new UndeferrableValueException("Value 'ReplicationConfigComputeConfig.multiAz' is not present");
    }

    /**
     * The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).
     * 
     * - Default: A 30-minute window selected at random from an 8-hour block of time per region, occurring on a random day of the week.
     * - Format: `ddd:hh24:mi-ddd:hh24:mi`
     * - Valid Days: `mon, tue, wed, thu, fri, sat, sun`
     * - Constraints: Minimum 30-minute window.
     * 
     */
    @PolicyResourceProperty(name="preferredMaintenanceWindow", flag="unknown_preferredMaintenanceWindow")
    private @Nullable String value_preferredMaintenanceWindow;
    private boolean unknown_preferredMaintenanceWindow;
    public @Nullable String preferredMaintenanceWindow() {
        if (!unknown_preferredMaintenanceWindow) return value_preferredMaintenanceWindow;
        throw new UndeferrableValueException("Value 'ReplicationConfigComputeConfig.preferredMaintenanceWindow' is not present");
    }

    /**
     * Specifies a subnet group identifier to associate with the DMS Serverless replication.
     * 
     */
    @PolicyResourceProperty(name="replicationSubnetGroupId", flag="unknown_replicationSubnetGroupId")
    private String value_replicationSubnetGroupId;
    private boolean unknown_replicationSubnetGroupId;
    public String replicationSubnetGroupId() {
        if (!unknown_replicationSubnetGroupId) return value_replicationSubnetGroupId;
        throw new UndeferrableValueException("Value 'ReplicationConfigComputeConfig.replicationSubnetGroupId' is not present");
    }

    /**
     * Specifies the virtual private cloud (VPC) security group to use with the DMS Serverless replication. The VPC security group must work with the VPC containing the replication.
     * 
     */
    @PolicyResourceProperty(name="vpcSecurityGroupIds", flag="unknown_vpcSecurityGroupIds")
    private @Nullable List<String> value_vpcSecurityGroupIds;
    private boolean unknown_vpcSecurityGroupIds;
    public @Nullable List<String> vpcSecurityGroupIds() {
        if (!unknown_vpcSecurityGroupIds) return value_vpcSecurityGroupIds;
        throw new UndeferrableValueException("Value 'ReplicationConfigComputeConfig.vpcSecurityGroupIds' is not present");
    }

}
