// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appsync.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.String;
import javax.annotation.Nullable;


public final class DataSourceRelationalDatabaseConfigHttpEndpointConfigArgs {

    /**
     * AWS secret store ARN for database credentials.
     * 
     */
    @PolicyResourceProperty(name="awsSecretStoreArn", flag="unknown_awsSecretStoreArn")
    private String value_awsSecretStoreArn;
    private boolean unknown_awsSecretStoreArn;
    public String awsSecretStoreArn() {
        if (!unknown_awsSecretStoreArn) return value_awsSecretStoreArn;
        throw new UndeferrableValueException("Value 'DataSourceRelationalDatabaseConfigHttpEndpointConfigArgs.awsSecretStoreArn' is not present");
    }

    /**
     * Logical database name.
     * 
     */
    @PolicyResourceProperty(name="databaseName", flag="unknown_databaseName")
    private String value_databaseName;
    private boolean unknown_databaseName;
    public String databaseName() {
        if (!unknown_databaseName) return value_databaseName;
        throw new UndeferrableValueException("Value 'DataSourceRelationalDatabaseConfigHttpEndpointConfigArgs.databaseName' is not present");
    }

    /**
     * Amazon RDS cluster identifier.
     * 
     */
    @PolicyResourceProperty(name="dbClusterIdentifier", flag="unknown_dbClusterIdentifier")
    private String value_dbClusterIdentifier;
    private boolean unknown_dbClusterIdentifier;
    public String dbClusterIdentifier() {
        if (!unknown_dbClusterIdentifier) return value_dbClusterIdentifier;
        throw new UndeferrableValueException("Value 'DataSourceRelationalDatabaseConfigHttpEndpointConfigArgs.dbClusterIdentifier' is not present");
    }

    /**
     * AWS Region for RDS HTTP endpoint. Defaults to current region.
     * 
     */
    @PolicyResourceProperty(name="region", flag="unknown_region")
    private String value_region;
    private boolean unknown_region;
    public String region() {
        if (!unknown_region) return value_region;
        throw new UndeferrableValueException("Value 'DataSourceRelationalDatabaseConfigHttpEndpointConfigArgs.region' is not present");
    }

    /**
     * Logical schema name.
     * 
     */
    @PolicyResourceProperty(name="schema", flag="unknown_schema")
    private String value_schema;
    private boolean unknown_schema;
    public String schema() {
        if (!unknown_schema) return value_schema;
        throw new UndeferrableValueException("Value 'DataSourceRelationalDatabaseConfigHttpEndpointConfigArgs.schema' is not present");
    }

}
