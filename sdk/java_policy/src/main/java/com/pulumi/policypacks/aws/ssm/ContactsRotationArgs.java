// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ssm;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.ssm.inputs.ContactsRotationRecurrenceArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ssm/contactsRotation:ContactsRotation")
public final class ContactsRotationArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Amazon Resource Names (ARNs) of the contacts to add to the rotation. The order in which you list the contacts is their shift order in the rotation schedule.
     * 
     */
    private UndeferrableValue<List<String>> contactIds;

    public List<String> contactIds() {
        if (contactIds == null) return null;
        return contactIds.getValue("ContactsRotationArgs.contactIds");
    }

    /**
     * The name for the rotation.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("ContactsRotationArgs.name");
    }

    /**
     * Information about when an on-call rotation is in effect and how long the rotation period lasts. Exactly one of either `daily_settings`, `monthly_settings`, or `weekly_settings` must be populated. See Recurrence for more details.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<ContactsRotationRecurrenceArgs> recurrence;

    public ContactsRotationRecurrenceArgs recurrence() {
        if (recurrence == null) return null;
        return recurrence.getValue("ContactsRotationArgs.recurrence");
    }

    /**
     * The date and time, in RFC 3339 format, that the rotation goes into effect.
     * 
     */
    private UndeferrableValue<String> startTime;

    public String startTime() {
        if (startTime == null) return null;
        return startTime.getValue("ContactsRotationArgs.startTime");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("ContactsRotationArgs.tags");
    }

    /**
     * The time zone to base the rotationâ€™s activity on in Internet Assigned Numbers Authority (IANA) format.
     * 
     */
    private UndeferrableValue<String> timeZoneId;

    public String timeZoneId() {
        if (timeZoneId == null) return null;
        return timeZoneId.getValue("ContactsRotationArgs.timeZoneId");
    }

}
