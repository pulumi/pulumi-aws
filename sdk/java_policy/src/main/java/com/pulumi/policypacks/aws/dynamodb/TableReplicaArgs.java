// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.dynamodb;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:dynamodb/tableReplica:TableReplica")
public final class TableReplicaArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Whether deletion protection is enabled (true) or disabled (false) on the table replica.
     * 
     */
    private UndeferrableValue<Boolean> deletionProtectionEnabled;

    public Boolean deletionProtectionEnabled() {
        if (deletionProtectionEnabled == null) return null;
        return deletionProtectionEnabled.getValue("TableReplicaArgs.deletionProtectionEnabled");
    }

    /**
     * ARN of the _main_ or global table which this resource will replicate.
     * 
     * Optional arguments:
     * 
     */
    private UndeferrableValue<String> globalTableArn;

    public String globalTableArn() {
        if (globalTableArn == null) return null;
        return globalTableArn.getValue("TableReplicaArgs.globalTableArn");
    }

    /**
     * ARN of the CMK that should be used for the AWS KMS encryption. This argument should only be used if the key is different from the default KMS-managed DynamoDB key, `alias/aws/dynamodb`. **Note:** This attribute will _not_ be populated with the ARN of _default_ keys.
     * 
     */
    private UndeferrableValue<String> kmsKeyArn;

    public String kmsKeyArn() {
        if (kmsKeyArn == null) return null;
        return kmsKeyArn.getValue("TableReplicaArgs.kmsKeyArn");
    }

    /**
     * Whether to enable Point In Time Recovery for the table replica. Default is `false`.
     * 
     */
    private UndeferrableValue<Boolean> pointInTimeRecovery;

    public Boolean pointInTimeRecovery() {
        if (pointInTimeRecovery == null) return null;
        return pointInTimeRecovery.getValue("TableReplicaArgs.pointInTimeRecovery");
    }

    /**
     * Storage class of the table replica. Valid values are `STANDARD` and `STANDARD_INFREQUENT_ACCESS`. If not used, the table replica will use the same class as the global table.
     * 
     */
    private UndeferrableValue<String> tableClassOverride;

    public String tableClassOverride() {
        if (tableClassOverride == null) return null;
        return tableClassOverride.getValue("TableReplicaArgs.tableClassOverride");
    }

    /**
     * Map of tags to populate on the created table. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("TableReplicaArgs.tags");
    }

}
