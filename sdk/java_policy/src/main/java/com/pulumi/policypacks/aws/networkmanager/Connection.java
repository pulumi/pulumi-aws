// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.networkmanager;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:networkmanager/connection:Connection")
public final class Connection extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The Amazon Resource Name (ARN) of the connection.
     * 
     */
    private UndeferrableValue<String> arn;

    public String arn() {
        if (arn == null) return null;
        return arn.getValue("Connection.arn");
    }

    /**
     * The ID of the second device in the connection.
     * 
     */
    private UndeferrableValue<String> connectedDeviceId;

    public String connectedDeviceId() {
        if (connectedDeviceId == null) return null;
        return connectedDeviceId.getValue("Connection.connectedDeviceId");
    }

    /**
     * The ID of the link for the second device.
     * 
     */
    private @Nullable UndeferrableValue<String> connectedLinkId;

    public @Nullable String connectedLinkId() {
        if (connectedLinkId == null) return null;
        return connectedLinkId.getValue("Connection.connectedLinkId");
    }

    /**
     * A description of the connection.
     * 
     */
    private @Nullable UndeferrableValue<String> description;

    public @Nullable String description() {
        if (description == null) return null;
        return description.getValue("Connection.description");
    }

    /**
     * The ID of the first device in the connection.
     * 
     */
    private UndeferrableValue<String> deviceId;

    public String deviceId() {
        if (deviceId == null) return null;
        return deviceId.getValue("Connection.deviceId");
    }

    /**
     * The ID of the global network.
     * 
     */
    private UndeferrableValue<String> globalNetworkId;

    public String globalNetworkId() {
        if (globalNetworkId == null) return null;
        return globalNetworkId.getValue("Connection.globalNetworkId");
    }

    /**
     * The ID of the link for the first device.
     * 
     */
    private @Nullable UndeferrableValue<String> linkId;

    public @Nullable String linkId() {
        if (linkId == null) return null;
        return linkId.getValue("Connection.linkId");
    }

    /**
     * Key-value tags for the connection. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private @Nullable UndeferrableValue<Map<String,String>> tags;

    public @Nullable Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("Connection.tags");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    private UndeferrableValue<Map<String,String>> tagsAll;

    public Map<String,String> tagsAll() {
        if (tagsAll == null) return null;
        return tagsAll.getValue("Connection.tagsAll");
    }

}
