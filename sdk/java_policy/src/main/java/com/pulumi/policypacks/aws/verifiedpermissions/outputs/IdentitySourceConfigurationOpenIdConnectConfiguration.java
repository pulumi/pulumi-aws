// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.verifiedpermissions.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.verifiedpermissions.outputs.IdentitySourceConfigurationOpenIdConnectConfigurationGroupConfiguration;
import com.pulumi.policypacks.aws.verifiedpermissions.outputs.IdentitySourceConfigurationOpenIdConnectConfigurationTokenSelection;
import java.lang.String;
import javax.annotation.Nullable;


public final class IdentitySourceConfigurationOpenIdConnectConfiguration {

    /**
     * A descriptive string that you want to prefix to user entities from your OIDC identity provider.
     * 
     */
    private @Nullable UndeferrableValue<String> entityIdPrefix;

    public @Nullable String entityIdPrefix() {
        if (entityIdPrefix == null) return null;
        return entityIdPrefix.getValue("IdentitySourceConfigurationOpenIdConnectConfiguration.entityIdPrefix");
    }

    /**
     * The type of entity that a policy store maps to groups from an Amazon Cognito user pool identity source. See Group Configuration below.
     * 
     */
    private @Nullable UndeferrableValue<IdentitySourceConfigurationOpenIdConnectConfigurationGroupConfiguration> groupConfiguration;

    public @Nullable IdentitySourceConfigurationOpenIdConnectConfigurationGroupConfiguration groupConfiguration() {
        if (groupConfiguration == null) return null;
        return groupConfiguration.getValue("IdentitySourceConfigurationOpenIdConnectConfiguration.groupConfiguration");
    }

    /**
     * The issuer URL of an OIDC identity provider. This URL must have an OIDC discovery endpoint at the path `.well-known/openid-configuration`.
     * 
     */
    private UndeferrableValue<String> issuer;

    public String issuer() {
        if (issuer == null) return null;
        return issuer.getValue("IdentitySourceConfigurationOpenIdConnectConfiguration.issuer");
    }

    /**
     * The token type that you want to process from your OIDC identity provider. Your policy store can process either identity (ID) or access tokens from a given OIDC identity source. See Token Selection below.
     * 
     */
    private @Nullable UndeferrableValue<IdentitySourceConfigurationOpenIdConnectConfigurationTokenSelection> tokenSelection;

    public @Nullable IdentitySourceConfigurationOpenIdConnectConfigurationTokenSelection tokenSelection() {
        if (tokenSelection == null) return null;
        return tokenSelection.getValue("IdentitySourceConfigurationOpenIdConnectConfiguration.tokenSelection");
    }

}
