// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.elasticache;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.elasticache.ReplicationGroupLogDeliveryConfiguration;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;


@PolicyResourceType(type="aws:elasticache/replicationGroup:ReplicationGroup")
public final class ReplicationGroup extends com.pulumi.resources.PolicyResource {

    /**
     * Specifies whether any modifications are applied immediately, or during the next maintenance window. Default is `false`.
     * 
     */
    public Boolean applyImmediately;



    /**
     * ARN of the created ElastiCache Replication Group.
     * 
     */
    public String arn;



    /**
     * Whether to enable encryption at rest.
     * When `engine` is `redis`, default is `false`.
     * When `engine` is `valkey`, default is `true`.
     * 
     */
    public Boolean atRestEncryptionEnabled;



    /**
     * Password used to access a password protected server. Can be specified only if `transit_encryption_enabled = true`.
     * 
     */
    public String authToken;



    /**
     * Strategy to use when updating the `auth_token`. Valid values are `SET`, `ROTATE`, and `DELETE`. Defaults to `ROTATE`.
     * 
     */
    public String authTokenUpdateStrategy;



    /**
     * Specifies whether minor version engine upgrades will be applied automatically to the underlying Cache Cluster instances during the maintenance window.
     * Only supported for engine types `&#34;redis&#34;` and `&#34;valkey&#34;` and if the engine version is 6 or higher.
     * Defaults to `true`.
     * 
     */
    public Boolean autoMinorVersionUpgrade;



    /**
     * Specifies whether a read-only replica will be automatically promoted to read/write primary if the existing primary fails. If enabled, `num_cache_clusters` must be greater than 1. Must be enabled for Redis (cluster mode enabled) replication groups. Defaults to `false`.
     * 
     */
    public Boolean automaticFailoverEnabled;



    /**
     * Indicates if cluster mode is enabled.
     * 
     */
    public Boolean clusterEnabled;



    /**
     * Specifies whether cluster mode is enabled or disabled. Valid values are `enabled` or `disabled` or `compatible`
     * 
     */
    public String clusterMode;



    /**
     * Address of the replication group configuration endpoint when cluster mode is enabled.
     * 
     */
    public String configurationEndpointAddress;



    /**
     * Enables data tiering. Data tiering is only supported for replication groups using the r6gd node type. This parameter must be set to `true` when using r6gd nodes.
     * 
     */
    public Boolean dataTieringEnabled;



    /**
     * User-created description for the replication group. Must not be empty.
     * 
     */
    public String description;



    /**
     * Name of the cache engine to be used for the clusters in this replication group.
     * Valid values are `redis` or `valkey`.
     * Default is `redis`.
     * 
     */
    public String engine;



    /**
     * Version number of the cache engine to be used for the cache clusters in this replication group.
     * If the version is 7 or higher, the major and minor version should be set, e.g., `7.2`.
     * If the version is 6, the major and minor version can be set, e.g., `6.2`,
     * or the minor version can be unspecified which will use the latest version at creation time, e.g., `6.x`.
     * Otherwise, specify the full version desired, e.g., `5.0.6`.
     * The actual engine version used is returned in the attribute `engine_version_actual`, see Attribute Reference below.
     * 
     */
    public String engineVersion;



    /**
     * Because ElastiCache pulls the latest minor or patch for a version, this attribute returns the running version of the cache engine.
     * 
     */
    public String engineVersionActual;



    /**
     * The name of your final node group (shard) snapshot. ElastiCache creates the snapshot from the primary node in the cluster. If omitted, no final snapshot will be made.
     * 
     */
    public String finalSnapshotIdentifier;



    /**
     * The ID of the global replication group to which this replication group should belong. If this parameter is specified, the replication group is added to the specified global replication group as a secondary replication group; otherwise, the replication group is not part of any global replication group. If `global_replication_group_id` is set, the `num_node_groups` parameter cannot be set.
     * 
     */
    public String globalReplicationGroupId;



    /**
     * The IP version to advertise in the discovery protocol. Valid values are `ipv4` or `ipv6`.
     * 
     */
    public String ipDiscovery;



    /**
     * The ARN of the key that you wish to use if encrypting at rest. If not supplied, uses service managed encryption. Can be specified only if `at_rest_encryption_enabled = true`.
     * 
     */
    public String kmsKeyId;



    /**
     * Specifies the destination and format of Redis OSS/Valkey [SLOWLOG](https://redis.io/commands/slowlog) or Redis OSS/Valkey [Engine Log](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Log_Delivery.html#Log_contents-engine-log). See the documentation on [Amazon ElastiCache](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Log_Delivery.html#Log_contents-engine-log). See Log Delivery Configuration below for more details.
     * 
     */
    public List<ReplicationGroupLogDeliveryConfiguration> logDeliveryConfigurations;



    /**
     * Specifies the weekly time range for when maintenance on the cache cluster is performed. The format is `ddd:hh24:mi-ddd:hh24:mi` (24H Clock UTC). The minimum maintenance window is a 60 minute period. Example: `sun:05:00-sun:09:00`
     * 
     */
    public String maintenanceWindow;



    /**
     * Identifiers of all the nodes that are part of this replication group.
     * 
     */
    public List<String> memberClusters;



    /**
     * Specifies whether to enable Multi-AZ Support for the replication group.
     * If `true`, `automatic_failover_enabled` must also be enabled.
     * Defaults to `false`.
     * 
     */
    public Boolean multiAzEnabled;



    /**
     * The IP versions for cache cluster connections. Valid values are `ipv4`, `ipv6` or `dual_stack`.
     * 
     */
    public String networkType;



    /**
     * Instance class to be used.
     * See AWS documentation for information on [supported node types](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html) and [guidance on selecting node types](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/nodes-select-size.html).
     * Required unless `global_replication_group_id` is set.
     * Cannot be set if `global_replication_group_id` is set.
     * 
     */
    public String nodeType;



    /**
     * ARN of an SNS topic to send ElastiCache notifications to. Example: `arn:aws:sns:us-east-1:012345678999:my_sns_topic`
     * 
     */
    public String notificationTopicArn;



    /**
     * Number of cache clusters (primary and replicas) this replication group will have.
     * If `automatic_failover_enabled` or `multi_az_enabled` are `true`, must be at least 2.
     * Updates will occur before other modifications.
     * Conflicts with `num_node_groups` and `replicas_per_node_group`.
     * Defaults to `1`.
     * 
     */
    public Integer numCacheClusters;



    /**
     * Number of node groups (shards) for this Redis replication group.
     * Changing this number will trigger a resizing operation before other settings modifications.
     * Conflicts with `num_cache_clusters`.
     * 
     */
    public Integer numNodeGroups;



    /**
     * Name of the parameter group to associate with this replication group. If this argument is omitted, the default cache parameter group for the specified engine is used. To enable &#34;cluster mode&#34;, i.e., data sharding, use a parameter group that has the parameter `cluster-enabled` set to true.
     * 
     */
    public String parameterGroupName;



    /**
     * Port number on which each of the cache nodes will accept connections. For Memcache the default is 11211, and for Redis the default port is 6379.
     * 
     */
    public Integer port;



    /**
     * List of EC2 availability zones in which the replication group&#39;s cache clusters will be created. The order of the availability zones in the list is considered. The first item in the list will be the primary node. Ignored when updating.
     * 
     */
    public List<String> preferredCacheClusterAzs;



    /**
     * (Redis only) Address of the endpoint for the primary node in the replication group, if the cluster mode is disabled.
     * 
     */
    public String primaryEndpointAddress;



    /**
     * (Redis only) Address of the endpoint for the reader node in the replication group, if the cluster mode is disabled.
     * 
     */
    public String readerEndpointAddress;



    /**
     * Number of replica nodes in each node group.
     * Changing this number will trigger a resizing operation before other settings modifications.
     * Valid values are 0 to 5.
     * Conflicts with `num_cache_clusters`.
     * Can only be set if `num_node_groups` is set.
     * 
     */
    public Integer replicasPerNodeGroup;



    /**
     * Replication group identifier. This parameter is stored as a lowercase string.
     * 
     * The following arguments are optional:
     * 
     */
    public String replicationGroupId;



    /**
     * IDs of one or more Amazon VPC security groups associated with this replication group. Use this parameter only when you are creating a replication group in an Amazon Virtual Private Cloud.
     * 
     */
    public List<String> securityGroupIds;



    /**
     * Names of one or more Amazon VPC security groups associated with this replication group. Use this parameter only when you are creating a replication group in an Amazon Virtual Private Cloud.
     * 
     */
    public List<String> securityGroupNames;



    /**
     * List of ARNs that identify Redis RDB snapshot files stored in Amazon S3. The names object names cannot contain any commas.
     * 
     */
    public List<String> snapshotArns;



    /**
     * Name of a snapshot from which to restore data into the new node group. Changing the `snapshot_name` forces a new resource.
     * 
     */
    public String snapshotName;



    /**
     * Number of days for which ElastiCache will retain automatic cache cluster snapshots before deleting them. For example, if you set SnapshotRetentionLimit to 5, then a snapshot that was taken today will be retained for 5 days before being deleted. If the value of `snapshot_retention_limit` is set to zero (0), backups are turned off. Please note that setting a `snapshot_retention_limit` is not supported on cache.t1.micro cache nodes
     * 
     */
    public Integer snapshotRetentionLimit;



    /**
     * Daily time range (in UTC) during which ElastiCache will begin taking a daily snapshot of your cache cluster. The minimum snapshot window is a 60 minute period. Example: `05:00-09:00`
     * 
     */
    public String snapshotWindow;



    /**
     * Name of the cache subnet group to be used for the replication group.
     * 
     */
    public String subnetGroupName;



    /**
     * Map of tags to assign to the resource. Adding tags to this resource will add or overwrite any existing tags on the clusters in the replication group and not to the group itself. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



    /**
     * Whether to enable encryption in transit.
     * Changing this argument with an `engine_version` &lt; `7.0.5` will force a replacement.
     * Engine versions prior to `7.0.5` only allow this transit encryption to be configured during creation of the replication group.
     * 
     */
    public Boolean transitEncryptionEnabled;



    /**
     * A setting that enables clients to migrate to in-transit encryption with no downtime.
     * Valid values are `preferred` and `required`.
     * When enabling encryption on an existing replication group, this must first be set to `preferred` before setting it to `required` in a subsequent apply.
     * See the `TransitEncryptionMode` field in the [`CreateReplicationGroup` API documentation](https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_CreateReplicationGroup.html) for additional details.
     * 
     */
    public String transitEncryptionMode;



    /**
     * User Group ID to associate with the replication group. Only a maximum of one (1) user group ID is valid. **NOTE:** This argument _is_ a set because the AWS specification allows for multiple IDs. However, in practice, AWS only allows a maximum size of one.
     * 
     */
    public List<String> userGroupIds;



}
