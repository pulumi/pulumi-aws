// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ec2/vpcEndpointService:VpcEndpointService")
public final class VpcEndpointServiceArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Whether or not VPC endpoint connection requests to the service must be accepted by the service owner - `true` or `false`.
     * 
     */
    private UndeferrableValue<Boolean> acceptanceRequired;

    public Boolean acceptanceRequired() {
        if (acceptanceRequired == null) return null;
        return acceptanceRequired.getValue("VpcEndpointServiceArgs.acceptanceRequired");
    }

    /**
     * The ARNs of one or more principals allowed to discover the endpoint service.
     * 
     */
    private UndeferrableValue<List<String>> allowedPrincipals;

    public List<String> allowedPrincipals() {
        if (allowedPrincipals == null) return null;
        return allowedPrincipals.getValue("VpcEndpointServiceArgs.allowedPrincipals");
    }

    /**
     * Amazon Resource Names (ARNs) of one or more Gateway Load Balancers for the endpoint service.
     * 
     */
    private UndeferrableValue<List<String>> gatewayLoadBalancerArns;

    public List<String> gatewayLoadBalancerArns() {
        if (gatewayLoadBalancerArns == null) return null;
        return gatewayLoadBalancerArns.getValue("VpcEndpointServiceArgs.gatewayLoadBalancerArns");
    }

    /**
     * Amazon Resource Names (ARNs) of one or more Network Load Balancers for the endpoint service.
     * 
     */
    private UndeferrableValue<List<String>> networkLoadBalancerArns;

    public List<String> networkLoadBalancerArns() {
        if (networkLoadBalancerArns == null) return null;
        return networkLoadBalancerArns.getValue("VpcEndpointServiceArgs.networkLoadBalancerArns");
    }

    /**
     * The private DNS name for the service.
     * 
     */
    private UndeferrableValue<String> privateDnsName;

    public String privateDnsName() {
        if (privateDnsName == null) return null;
        return privateDnsName.getValue("VpcEndpointServiceArgs.privateDnsName");
    }

    /**
     * The supported IP address types. The possible values are `ipv4` and `ipv6`.
     * 
     */
    private UndeferrableValue<List<String>> supportedIpAddressTypes;

    public List<String> supportedIpAddressTypes() {
        if (supportedIpAddressTypes == null) return null;
        return supportedIpAddressTypes.getValue("VpcEndpointServiceArgs.supportedIpAddressTypes");
    }

    /**
     * The set of regions from which service consumers can access the service.
     * 
     */
    private UndeferrableValue<List<String>> supportedRegions;

    public List<String> supportedRegions() {
        if (supportedRegions == null) return null;
        return supportedRegions.getValue("VpcEndpointServiceArgs.supportedRegions");
    }

    /**
     * A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("VpcEndpointServiceArgs.tags");
    }

}
