// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ecs.inputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.ecs.inputs.ServiceVolumeConfigurationManagedEbsVolumeTagSpecificationArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class ServiceVolumeConfigurationManagedEbsVolumeArgs {

    /**
     * Whether the volume should be encrypted. Default value is `true`.
     * 
     */
    private UndeferrableValue<Boolean> encrypted;

    public Boolean encrypted() {
        if (encrypted == null) return null;
        return encrypted.getValue("ServiceVolumeConfigurationManagedEbsVolumeArgs.encrypted");
    }

    /**
     * Linux filesystem type for the volume. For volumes created from a snapshot, same filesystem type must be specified that the volume was using when the snapshot was created. Valid values are `ext3`, `ext4`, `xfs`. Default value is `xfs`.
     * 
     */
    private UndeferrableValue<String> fileSystemType;

    public String fileSystemType() {
        if (fileSystemType == null) return null;
        return fileSystemType.getValue("ServiceVolumeConfigurationManagedEbsVolumeArgs.fileSystemType");
    }

    /**
     * Number of I/O operations per second (IOPS).
     * 
     */
    private UndeferrableValue<Integer> iops;

    public Integer iops() {
        if (iops == null) return null;
        return iops.getValue("ServiceVolumeConfigurationManagedEbsVolumeArgs.iops");
    }

    /**
     * Amazon Resource Name (ARN) identifier of the Amazon Web Services Key Management Service key to use for Amazon EBS encryption.
     * 
     */
    private UndeferrableValue<String> kmsKeyId;

    public String kmsKeyId() {
        if (kmsKeyId == null) return null;
        return kmsKeyId.getValue("ServiceVolumeConfigurationManagedEbsVolumeArgs.kmsKeyId");
    }

    /**
     * Amazon ECS infrastructure IAM role that is used to manage your Amazon Web Services infrastructure. Recommended using the Amazon ECS-managed `AmazonECSInfrastructureRolePolicyForVolumes` IAM policy with this role.
     * 
     */
    private UndeferrableValue<String> roleArn;

    public String roleArn() {
        if (roleArn == null) return null;
        return roleArn.getValue("ServiceVolumeConfigurationManagedEbsVolumeArgs.roleArn");
    }

    /**
     * Size of the volume in GiB. You must specify either a `size_in_gb` or a `snapshot_id`. You can optionally specify a volume size greater than or equal to the snapshot size.
     * 
     */
    private UndeferrableValue<Integer> sizeInGb;

    public Integer sizeInGb() {
        if (sizeInGb == null) return null;
        return sizeInGb.getValue("ServiceVolumeConfigurationManagedEbsVolumeArgs.sizeInGb");
    }

    /**
     * Snapshot that Amazon ECS uses to create the volume. You must specify either a `size_in_gb` or a `snapshot_id`.
     * 
     */
    private UndeferrableValue<String> snapshotId;

    public String snapshotId() {
        if (snapshotId == null) return null;
        return snapshotId.getValue("ServiceVolumeConfigurationManagedEbsVolumeArgs.snapshotId");
    }

    /**
     * The tags to apply to the volume. See below.
     * 
     */
    private UndeferrableValue<List<ServiceVolumeConfigurationManagedEbsVolumeTagSpecificationArgs>> tagSpecifications;

    public List<ServiceVolumeConfigurationManagedEbsVolumeTagSpecificationArgs> tagSpecifications() {
        if (tagSpecifications == null) return null;
        return tagSpecifications.getValue("ServiceVolumeConfigurationManagedEbsVolumeArgs.tagSpecifications");
    }

    /**
     * Throughput to provision for a volume, in MiB/s, with a maximum of 1,000 MiB/s.
     * 
     */
    private UndeferrableValue<Integer> throughput;

    public Integer throughput() {
        if (throughput == null) return null;
        return throughput.getValue("ServiceVolumeConfigurationManagedEbsVolumeArgs.throughput");
    }

    /**
     * Volume type.
     * 
     */
    private UndeferrableValue<String> volumeType;

    public String volumeType() {
        if (volumeType == null) return null;
        return volumeType.getValue("ServiceVolumeConfigurationManagedEbsVolumeArgs.volumeType");
    }

}
