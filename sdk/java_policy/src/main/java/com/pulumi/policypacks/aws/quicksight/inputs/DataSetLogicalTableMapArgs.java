// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.quicksight.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.quicksight.inputs.DataSetLogicalTableMapDataTransformArgs;
import com.pulumi.policypacks.aws.quicksight.inputs.DataSetLogicalTableMapSourceArgs;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class DataSetLogicalTableMapArgs {

    /**
     * A display name for the logical table.
     * 
     */
    @PolicyResourceProperty(name="alias", flag="unknown_alias")
    private String value_alias;
    private boolean unknown_alias;
    public String alias() {
        if (!unknown_alias) return value_alias;
        throw new UndeferrableValueException("Value 'DataSetLogicalTableMapArgs.alias' is not present");
    }

    /**
     * Transform operations that act on this logical table. For this structure to be valid, only one of the attributes can be non-null. See data_transforms.
     * 
     */
    @PolicyResourceProperty(name="dataTransforms", flag="unknown_dataTransforms")
    private List<DataSetLogicalTableMapDataTransformArgs> value_dataTransforms;
    private boolean unknown_dataTransforms;
    public List<DataSetLogicalTableMapDataTransformArgs> dataTransforms() {
        if (!unknown_dataTransforms) return value_dataTransforms;
        throw new UndeferrableValueException("Value 'DataSetLogicalTableMapArgs.dataTransforms' is not present");
    }

    /**
     * Key of the logical table map.
     * 
     */
    @PolicyResourceProperty(name="logicalTableMapId", flag="unknown_logicalTableMapId")
    private String value_logicalTableMapId;
    private boolean unknown_logicalTableMapId;
    public String logicalTableMapId() {
        if (!unknown_logicalTableMapId) return value_logicalTableMapId;
        throw new UndeferrableValueException("Value 'DataSetLogicalTableMapArgs.logicalTableMapId' is not present");
    }

    /**
     * Source of this logical table. See source.
     * 
     */
    @PolicyResourceProperty(name="source", flag="unknown_source")
    private DataSetLogicalTableMapSourceArgs value_source;
    private boolean unknown_source;
    public DataSetLogicalTableMapSourceArgs source() {
        if (!unknown_source) return value_source;
        throw new UndeferrableValueException("Value 'DataSetLogicalTableMapArgs.source' is not present");
    }

}
