// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.apigatewayv2;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:apigatewayv2/integrationResponse:IntegrationResponse")
public final class IntegrationResponseArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * API identifier.
     * 
     */
    @PolicyResourceProperty(name="apiId", flag="unknown_apiId")
    private String value_apiId;
    private boolean unknown_apiId;
    public String apiId() {
        if (!unknown_apiId) return value_apiId;
        throw new UndeferrableValueException("Value 'IntegrationResponseArgs.apiId' is not present");
    }

    /**
     * How to handle response payload content type conversions. Valid values: `CONVERT_TO_BINARY`, `CONVERT_TO_TEXT`.
     * 
     */
    @PolicyResourceProperty(name="contentHandlingStrategy", flag="unknown_contentHandlingStrategy")
    private String value_contentHandlingStrategy;
    private boolean unknown_contentHandlingStrategy;
    public String contentHandlingStrategy() {
        if (!unknown_contentHandlingStrategy) return value_contentHandlingStrategy;
        throw new UndeferrableValueException("Value 'IntegrationResponseArgs.contentHandlingStrategy' is not present");
    }

    /**
     * Identifier of the `aws.apigatewayv2.Integration`.
     * 
     */
    @PolicyResourceProperty(name="integrationId", flag="unknown_integrationId")
    private String value_integrationId;
    private boolean unknown_integrationId;
    public String integrationId() {
        if (!unknown_integrationId) return value_integrationId;
        throw new UndeferrableValueException("Value 'IntegrationResponseArgs.integrationId' is not present");
    }

    /**
     * Integration response key.
     * 
     */
    @PolicyResourceProperty(name="integrationResponseKey", flag="unknown_integrationResponseKey")
    private String value_integrationResponseKey;
    private boolean unknown_integrationResponseKey;
    public String integrationResponseKey() {
        if (!unknown_integrationResponseKey) return value_integrationResponseKey;
        throw new UndeferrableValueException("Value 'IntegrationResponseArgs.integrationResponseKey' is not present");
    }

    /**
     * Map of Velocity templates that are applied on the request payload based on the value of the Content-Type header sent by the client.
     * 
     */
    @PolicyResourceProperty(name="responseTemplates", flag="unknown_responseTemplates")
    private Map<String,String> value_responseTemplates;
    private boolean unknown_responseTemplates;
    public Map<String,String> responseTemplates() {
        if (!unknown_responseTemplates) return value_responseTemplates;
        throw new UndeferrableValueException("Value 'IntegrationResponseArgs.responseTemplates' is not present");
    }

    /**
     * The [template selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-template-selection-expressions) for the integration response.
     * 
     */
    @PolicyResourceProperty(name="templateSelectionExpression", flag="unknown_templateSelectionExpression")
    private String value_templateSelectionExpression;
    private boolean unknown_templateSelectionExpression;
    public String templateSelectionExpression() {
        if (!unknown_templateSelectionExpression) return value_templateSelectionExpression;
        throw new UndeferrableValueException("Value 'IntegrationResponseArgs.templateSelectionExpression' is not present");
    }

}
