// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appflow.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.appflow.outputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequest;
import java.lang.String;
import javax.annotation.Nullable;


public final class ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentials {

    @PolicyResourceProperty(name="accessToken", flag="unknown_accessToken")
    private @Nullable String value_accessToken;
    private boolean unknown_accessToken;
    public @Nullable String accessToken() {
        if (!unknown_accessToken) return value_accessToken;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentials.accessToken' is not present");
    }

    @PolicyResourceProperty(name="clientId", flag="unknown_clientId")
    private String value_clientId;
    private boolean unknown_clientId;
    public String clientId() {
        if (!unknown_clientId) return value_clientId;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentials.clientId' is not present");
    }

    @PolicyResourceProperty(name="clientSecret", flag="unknown_clientSecret")
    private String value_clientSecret;
    private boolean unknown_clientSecret;
    public String clientSecret() {
        if (!unknown_clientSecret) return value_clientSecret;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentials.clientSecret' is not present");
    }

    @PolicyResourceProperty(name="oauthRequest", flag="unknown_oauthRequest")
    private @Nullable ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequest value_oauthRequest;
    private boolean unknown_oauthRequest;
    public @Nullable ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentialsOauthRequest oauthRequest() {
        if (!unknown_oauthRequest) return value_oauthRequest;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentials.oauthRequest' is not present");
    }

    @PolicyResourceProperty(name="refreshToken", flag="unknown_refreshToken")
    private @Nullable String value_refreshToken;
    private boolean unknown_refreshToken;
    public @Nullable String refreshToken() {
        if (!unknown_refreshToken) return value_refreshToken;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataOauthCredentials.refreshToken' is not present");
    }

}
