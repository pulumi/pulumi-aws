// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.comprehend.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class DocumentClassifierInputDataConfigAugmentedManifest {

    /**
     * Location of annotation files.
     * 
     */
    @PolicyResourceProperty(name="annotationDataS3Uri", flag="unknown_annotationDataS3Uri")
    private @Nullable String value_annotationDataS3Uri;
    private boolean unknown_annotationDataS3Uri;
    public @Nullable String annotationDataS3Uri() {
        if (!unknown_annotationDataS3Uri) return value_annotationDataS3Uri;
        throw new UndeferrableValueException("Value 'DocumentClassifierInputDataConfigAugmentedManifest.annotationDataS3Uri' is not present");
    }

    /**
     * The JSON attribute that contains the annotations for the training documents.
     * 
     */
    @PolicyResourceProperty(name="attributeNames", flag="unknown_attributeNames")
    private List<String> value_attributeNames;
    private boolean unknown_attributeNames;
    public List<String> attributeNames() {
        if (!unknown_attributeNames) return value_attributeNames;
        throw new UndeferrableValueException("Value 'DocumentClassifierInputDataConfigAugmentedManifest.attributeNames' is not present");
    }

    /**
     * Type of augmented manifest.
     * One of `PLAIN_TEXT_DOCUMENT` or `SEMI_STRUCTURED_DOCUMENT`.
     * 
     */
    @PolicyResourceProperty(name="documentType", flag="unknown_documentType")
    private @Nullable String value_documentType;
    private boolean unknown_documentType;
    public @Nullable String documentType() {
        if (!unknown_documentType) return value_documentType;
        throw new UndeferrableValueException("Value 'DocumentClassifierInputDataConfigAugmentedManifest.documentType' is not present");
    }

    /**
     * Location of augmented manifest file.
     * 
     */
    @PolicyResourceProperty(name="s3Uri", flag="unknown_s3Uri")
    private String value_s3Uri;
    private boolean unknown_s3Uri;
    public String s3Uri() {
        if (!unknown_s3Uri) return value_s3Uri;
        throw new UndeferrableValueException("Value 'DocumentClassifierInputDataConfigAugmentedManifest.s3Uri' is not present");
    }

    /**
     * Location of source PDF files.
     * 
     */
    @PolicyResourceProperty(name="sourceDocumentsS3Uri", flag="unknown_sourceDocumentsS3Uri")
    private @Nullable String value_sourceDocumentsS3Uri;
    private boolean unknown_sourceDocumentsS3Uri;
    public @Nullable String sourceDocumentsS3Uri() {
        if (!unknown_sourceDocumentsS3Uri) return value_sourceDocumentsS3Uri;
        throw new UndeferrableValueException("Value 'DocumentClassifierInputDataConfigAugmentedManifest.sourceDocumentsS3Uri' is not present");
    }

    /**
     * Purpose of data in augmented manifest.
     * One of `TRAIN` or `TEST`.
     * 
     */
    @PolicyResourceProperty(name="split", flag="unknown_split")
    private @Nullable String value_split;
    private boolean unknown_split;
    public @Nullable String split() {
        if (!unknown_split) return value_split;
        throw new UndeferrableValueException("Value 'DocumentClassifierInputDataConfigAugmentedManifest.split' is not present");
    }

}
