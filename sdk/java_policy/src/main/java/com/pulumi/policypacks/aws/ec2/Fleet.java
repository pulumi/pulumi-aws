// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.ec2.FleetFleetInstanceSet;
import com.pulumi.policypacks.aws.ec2.FleetLaunchTemplateConfig;
import com.pulumi.policypacks.aws.ec2.FleetOnDemandOptions;
import com.pulumi.policypacks.aws.ec2.FleetSpotOptions;
import com.pulumi.policypacks.aws.ec2.FleetTargetCapacitySpecification;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Map;


@PolicyResourceType(type="aws:ec2/fleet:Fleet")
public final class Fleet extends com.pulumi.resources.PolicyResource {

    /**
     * The ARN of the fleet
     * 
     */
    public String arn;



    /**
     * Reserved.
     * 
     */
    public String context;



    /**
     * Whether running instances should be terminated if the total target capacity of the EC2 Fleet is decreased below the current size of the EC2. Valid values: `no-termination`, `termination`. Defaults to `termination`. Supported only for fleets of type `maintain`.
     * 
     */
    public String excessCapacityTerminationPolicy;



    /**
     * Information about the instances that were launched by the fleet. Available only when `type` is set to `instant`.
     * 
     */
    public List<FleetFleetInstanceSet> fleetInstanceSets;



    /**
     * The state of the EC2 Fleet.
     * 
     */
    public String fleetState;



    /**
     * The number of units fulfilled by this request compared to the set target capacity.
     * 
     */
    public Double fulfilledCapacity;



    /**
     * The number of units fulfilled by this request compared to the set target On-Demand capacity.
     * 
     */
    public Double fulfilledOnDemandCapacity;



    /**
     * Nested argument containing EC2 Launch Template configurations. Defined below.
     * 
     */
    public List<FleetLaunchTemplateConfig> launchTemplateConfigs;



    /**
     * Nested argument containing On-Demand configurations. Defined below.
     * 
     */
    public FleetOnDemandOptions onDemandOptions;



    /**
     * Whether EC2 Fleet should replace unhealthy instances. Defaults to `false`. Supported only for fleets of type `maintain`.
     * 
     */
    public Boolean replaceUnhealthyInstances;



    /**
     * Nested argument containing Spot configurations. Defined below.
     * 
     */
    public FleetSpotOptions spotOptions;



    /**
     * Map of Fleet tags. To tag instances at launch, specify the tags in the Launch Template. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



    /**
     * Nested argument containing target capacity configurations. Defined below.
     * 
     */
    public FleetTargetCapacitySpecification targetCapacitySpecification;



    /**
     * Whether to terminate instances for an EC2 Fleet if it is deleted successfully. Defaults to `false`.
     * 
     */
    public Boolean terminateInstances;



    /**
     * Whether running instances should be terminated when the EC2 Fleet expires. Defaults to `false`.
     * 
     */
    public Boolean terminateInstancesWithExpiration;



    /**
     * The type of request. Indicates whether the EC2 Fleet only requests the target capacity, or also attempts to maintain it. Valid values: `maintain`, `request`, `instant`. Defaults to `maintain`.
     * 
     */
    public String type;



    /**
     * The start date and time of the request, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.
     * 
     */
    public String validFrom;



    /**
     * The end date and time of the request, in UTC format (for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new EC2 Fleet requests are placed or able to fulfill the request. If no value is specified, the request remains until you cancel it.
     * 
     */
    public String validUntil;



}
