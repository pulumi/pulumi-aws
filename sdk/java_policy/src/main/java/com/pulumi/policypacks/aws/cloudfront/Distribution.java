// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.cloudfront;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.cloudfront.outputs.DistributionCustomErrorResponse;
import com.pulumi.policypacks.aws.cloudfront.outputs.DistributionDefaultCacheBehavior;
import com.pulumi.policypacks.aws.cloudfront.outputs.DistributionLoggingConfig;
import com.pulumi.policypacks.aws.cloudfront.outputs.DistributionOrderedCacheBehavior;
import com.pulumi.policypacks.aws.cloudfront.outputs.DistributionOrigin;
import com.pulumi.policypacks.aws.cloudfront.outputs.DistributionOriginGroup;
import com.pulumi.policypacks.aws.cloudfront.outputs.DistributionRestrictions;
import com.pulumi.policypacks.aws.cloudfront.outputs.DistributionTrustedKeyGroup;
import com.pulumi.policypacks.aws.cloudfront.outputs.DistributionTrustedSigner;
import com.pulumi.policypacks.aws.cloudfront.outputs.DistributionViewerCertificate;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:cloudfront/distribution:Distribution")
public final class Distribution extends com.pulumi.resources.PolicyResourceOutput {

    @PolicyResourceProperty(name="aliases", flag="unknown_aliases")
    private @Nullable List<String> value_aliases;
    private boolean unknown_aliases;
    public @Nullable List<String> aliases() {
        if (!unknown_aliases) return value_aliases;
        throw new UndeferrableValueException("Value 'Distribution.aliases' is not present");
    }

    /**
     * ARN for the distribution. For example: `arn:aws:cloudfront::123456789012:distribution/EDFDVBD632BHDS5`, where `123456789012` is your AWS account ID.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'Distribution.arn' is not present");
    }

    /**
     * Internal value used by CloudFront to allow future updates to the distribution configuration.
     * 
     */
    @PolicyResourceProperty(name="callerReference", flag="unknown_callerReference")
    private String value_callerReference;
    private boolean unknown_callerReference;
    public String callerReference() {
        if (!unknown_callerReference) return value_callerReference;
        throw new UndeferrableValueException("Value 'Distribution.callerReference' is not present");
    }

    @PolicyResourceProperty(name="comment", flag="unknown_comment")
    private @Nullable String value_comment;
    private boolean unknown_comment;
    public @Nullable String comment() {
        if (!unknown_comment) return value_comment;
        throw new UndeferrableValueException("Value 'Distribution.comment' is not present");
    }

    @PolicyResourceProperty(name="continuousDeploymentPolicyId", flag="unknown_continuousDeploymentPolicyId")
    private String value_continuousDeploymentPolicyId;
    private boolean unknown_continuousDeploymentPolicyId;
    public String continuousDeploymentPolicyId() {
        if (!unknown_continuousDeploymentPolicyId) return value_continuousDeploymentPolicyId;
        throw new UndeferrableValueException("Value 'Distribution.continuousDeploymentPolicyId' is not present");
    }

    @PolicyResourceProperty(name="customErrorResponses", flag="unknown_customErrorResponses")
    private @Nullable List<DistributionCustomErrorResponse> value_customErrorResponses;
    private boolean unknown_customErrorResponses;
    public @Nullable List<DistributionCustomErrorResponse> customErrorResponses() {
        if (!unknown_customErrorResponses) return value_customErrorResponses;
        throw new UndeferrableValueException("Value 'Distribution.customErrorResponses' is not present");
    }

    @PolicyResourceProperty(name="defaultCacheBehavior", flag="unknown_defaultCacheBehavior")
    private DistributionDefaultCacheBehavior value_defaultCacheBehavior;
    private boolean unknown_defaultCacheBehavior;
    public DistributionDefaultCacheBehavior defaultCacheBehavior() {
        if (!unknown_defaultCacheBehavior) return value_defaultCacheBehavior;
        throw new UndeferrableValueException("Value 'Distribution.defaultCacheBehavior' is not present");
    }

    @PolicyResourceProperty(name="defaultRootObject", flag="unknown_defaultRootObject")
    private @Nullable String value_defaultRootObject;
    private boolean unknown_defaultRootObject;
    public @Nullable String defaultRootObject() {
        if (!unknown_defaultRootObject) return value_defaultRootObject;
        throw new UndeferrableValueException("Value 'Distribution.defaultRootObject' is not present");
    }

    /**
     * Domain name corresponding to the distribution. For example: `d604721fxaaqy9.cloudfront.net`.
     * 
     */
    @PolicyResourceProperty(name="domainName", flag="unknown_domainName")
    private String value_domainName;
    private boolean unknown_domainName;
    public String domainName() {
        if (!unknown_domainName) return value_domainName;
        throw new UndeferrableValueException("Value 'Distribution.domainName' is not present");
    }

    /**
     * `true` if any of the AWS accounts listed as trusted signers have active CloudFront key pairs
     * 
     */
    @PolicyResourceProperty(name="enabled", flag="unknown_enabled")
    private Boolean value_enabled;
    private boolean unknown_enabled;
    public Boolean enabled() {
        if (!unknown_enabled) return value_enabled;
        throw new UndeferrableValueException("Value 'Distribution.enabled' is not present");
    }

    /**
     * Current version of the distribution&#39;s information. For example: `E2QWRUHAPOMQZL`.
     * 
     */
    @PolicyResourceProperty(name="etag", flag="unknown_etag")
    private String value_etag;
    private boolean unknown_etag;
    public String etag() {
        if (!unknown_etag) return value_etag;
        throw new UndeferrableValueException("Value 'Distribution.etag' is not present");
    }

    /**
     * CloudFront Route 53 zone ID that can be used to route an [Alias Resource Record Set](http://docs.aws.amazon.com/Route53/latest/APIReference/CreateAliasRRSAPI.html) to. This attribute is simply an alias for the zone ID `Z2FDTNDATAQYW2`.
     * 
     */
    @PolicyResourceProperty(name="hostedZoneId", flag="unknown_hostedZoneId")
    private String value_hostedZoneId;
    private boolean unknown_hostedZoneId;
    public String hostedZoneId() {
        if (!unknown_hostedZoneId) return value_hostedZoneId;
        throw new UndeferrableValueException("Value 'Distribution.hostedZoneId' is not present");
    }

    @PolicyResourceProperty(name="httpVersion", flag="unknown_httpVersion")
    private @Nullable String value_httpVersion;
    private boolean unknown_httpVersion;
    public @Nullable String httpVersion() {
        if (!unknown_httpVersion) return value_httpVersion;
        throw new UndeferrableValueException("Value 'Distribution.httpVersion' is not present");
    }

    /**
     * Number of invalidation batches currently in progress.
     * 
     */
    @PolicyResourceProperty(name="inProgressValidationBatches", flag="unknown_inProgressValidationBatches")
    private Integer value_inProgressValidationBatches;
    private boolean unknown_inProgressValidationBatches;
    public Integer inProgressValidationBatches() {
        if (!unknown_inProgressValidationBatches) return value_inProgressValidationBatches;
        throw new UndeferrableValueException("Value 'Distribution.inProgressValidationBatches' is not present");
    }

    @PolicyResourceProperty(name="isIpv6Enabled", flag="unknown_isIpv6Enabled")
    private @Nullable Boolean value_isIpv6Enabled;
    private boolean unknown_isIpv6Enabled;
    public @Nullable Boolean isIpv6Enabled() {
        if (!unknown_isIpv6Enabled) return value_isIpv6Enabled;
        throw new UndeferrableValueException("Value 'Distribution.isIpv6Enabled' is not present");
    }

    /**
     * Date and time the distribution was last modified.
     * 
     */
    @PolicyResourceProperty(name="lastModifiedTime", flag="unknown_lastModifiedTime")
    private String value_lastModifiedTime;
    private boolean unknown_lastModifiedTime;
    public String lastModifiedTime() {
        if (!unknown_lastModifiedTime) return value_lastModifiedTime;
        throw new UndeferrableValueException("Value 'Distribution.lastModifiedTime' is not present");
    }

    @PolicyResourceProperty(name="loggingConfig", flag="unknown_loggingConfig")
    private @Nullable DistributionLoggingConfig value_loggingConfig;
    private boolean unknown_loggingConfig;
    public @Nullable DistributionLoggingConfig loggingConfig() {
        if (!unknown_loggingConfig) return value_loggingConfig;
        throw new UndeferrableValueException("Value 'Distribution.loggingConfig' is not present");
    }

    @PolicyResourceProperty(name="orderedCacheBehaviors", flag="unknown_orderedCacheBehaviors")
    private @Nullable List<DistributionOrderedCacheBehavior> value_orderedCacheBehaviors;
    private boolean unknown_orderedCacheBehaviors;
    public @Nullable List<DistributionOrderedCacheBehavior> orderedCacheBehaviors() {
        if (!unknown_orderedCacheBehaviors) return value_orderedCacheBehaviors;
        throw new UndeferrableValueException("Value 'Distribution.orderedCacheBehaviors' is not present");
    }

    @PolicyResourceProperty(name="originGroups", flag="unknown_originGroups")
    private @Nullable List<DistributionOriginGroup> value_originGroups;
    private boolean unknown_originGroups;
    public @Nullable List<DistributionOriginGroup> originGroups() {
        if (!unknown_originGroups) return value_originGroups;
        throw new UndeferrableValueException("Value 'Distribution.originGroups' is not present");
    }

    @PolicyResourceProperty(name="origins", flag="unknown_origins")
    private List<DistributionOrigin> value_origins;
    private boolean unknown_origins;
    public List<DistributionOrigin> origins() {
        if (!unknown_origins) return value_origins;
        throw new UndeferrableValueException("Value 'Distribution.origins' is not present");
    }

    @PolicyResourceProperty(name="priceClass", flag="unknown_priceClass")
    private @Nullable String value_priceClass;
    private boolean unknown_priceClass;
    public @Nullable String priceClass() {
        if (!unknown_priceClass) return value_priceClass;
        throw new UndeferrableValueException("Value 'Distribution.priceClass' is not present");
    }

    @PolicyResourceProperty(name="restrictions", flag="unknown_restrictions")
    private DistributionRestrictions value_restrictions;
    private boolean unknown_restrictions;
    public DistributionRestrictions restrictions() {
        if (!unknown_restrictions) return value_restrictions;
        throw new UndeferrableValueException("Value 'Distribution.restrictions' is not present");
    }

    @PolicyResourceProperty(name="retainOnDelete", flag="unknown_retainOnDelete")
    private @Nullable Boolean value_retainOnDelete;
    private boolean unknown_retainOnDelete;
    public @Nullable Boolean retainOnDelete() {
        if (!unknown_retainOnDelete) return value_retainOnDelete;
        throw new UndeferrableValueException("Value 'Distribution.retainOnDelete' is not present");
    }

    @PolicyResourceProperty(name="staging", flag="unknown_staging")
    private @Nullable Boolean value_staging;
    private boolean unknown_staging;
    public @Nullable Boolean staging() {
        if (!unknown_staging) return value_staging;
        throw new UndeferrableValueException("Value 'Distribution.staging' is not present");
    }

    /**
     * Current status of the distribution. `Deployed` if the distribution&#39;s information is fully propagated throughout the Amazon CloudFront system.
     * 
     */
    @PolicyResourceProperty(name="status", flag="unknown_status")
    private String value_status;
    private boolean unknown_status;
    public String status() {
        if (!unknown_status) return value_status;
        throw new UndeferrableValueException("Value 'Distribution.status' is not present");
    }

    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'Distribution.tags' is not present");
    }

    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'Distribution.tagsAll' is not present");
    }

    /**
     * List of nested attributes for active trusted key groups, if the distribution is set up to serve private content with signed URLs.
     * 
     */
    @PolicyResourceProperty(name="trustedKeyGroups", flag="unknown_trustedKeyGroups")
    private List<DistributionTrustedKeyGroup> value_trustedKeyGroups;
    private boolean unknown_trustedKeyGroups;
    public List<DistributionTrustedKeyGroup> trustedKeyGroups() {
        if (!unknown_trustedKeyGroups) return value_trustedKeyGroups;
        throw new UndeferrableValueException("Value 'Distribution.trustedKeyGroups' is not present");
    }

    /**
     * List of nested attributes for active trusted signers, if the distribution is set up to serve private content with signed URLs.
     * 
     */
    @PolicyResourceProperty(name="trustedSigners", flag="unknown_trustedSigners")
    private List<DistributionTrustedSigner> value_trustedSigners;
    private boolean unknown_trustedSigners;
    public List<DistributionTrustedSigner> trustedSigners() {
        if (!unknown_trustedSigners) return value_trustedSigners;
        throw new UndeferrableValueException("Value 'Distribution.trustedSigners' is not present");
    }

    @PolicyResourceProperty(name="viewerCertificate", flag="unknown_viewerCertificate")
    private DistributionViewerCertificate value_viewerCertificate;
    private boolean unknown_viewerCertificate;
    public DistributionViewerCertificate viewerCertificate() {
        if (!unknown_viewerCertificate) return value_viewerCertificate;
        throw new UndeferrableValueException("Value 'Distribution.viewerCertificate' is not present");
    }

    @PolicyResourceProperty(name="waitForDeployment", flag="unknown_waitForDeployment")
    private @Nullable Boolean value_waitForDeployment;
    private boolean unknown_waitForDeployment;
    public @Nullable Boolean waitForDeployment() {
        if (!unknown_waitForDeployment) return value_waitForDeployment;
        throw new UndeferrableValueException("Value 'Distribution.waitForDeployment' is not present");
    }

    @PolicyResourceProperty(name="webAclId", flag="unknown_webAclId")
    private @Nullable String value_webAclId;
    private boolean unknown_webAclId;
    public @Nullable String webAclId() {
        if (!unknown_webAclId) return value_webAclId;
        throw new UndeferrableValueException("Value 'Distribution.webAclId' is not present");
    }

}
