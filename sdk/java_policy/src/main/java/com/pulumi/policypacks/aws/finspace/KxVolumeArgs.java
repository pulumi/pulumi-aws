// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.finspace;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.finspace.inputs.KxVolumeNas1ConfigurationArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:finspace/kxVolume:KxVolume")
public final class KxVolumeArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The identifier of the AWS Availability Zone IDs.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<List<String>> availabilityZones;

    public List<String> availabilityZones() {
        if (availabilityZones == null) return null;
        return availabilityZones.getValue("KxVolumeArgs.availabilityZones");
    }

    /**
     * The number of availability zones you want to assign per volume. Currently, Finspace only support SINGLE for volumes.
     * * `SINGLE` - Assigns one availability zone per volume.
     * 
     */
    private UndeferrableValue<String> azMode;

    public String azMode() {
        if (azMode == null) return null;
        return azMode.getValue("KxVolumeArgs.azMode");
    }

    /**
     * Description of the volume.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("KxVolumeArgs.description");
    }

    /**
     * A unique identifier for the kdb environment, whose clusters can attach to the volume.
     * 
     */
    private UndeferrableValue<String> environmentId;

    public String environmentId() {
        if (environmentId == null) return null;
        return environmentId.getValue("KxVolumeArgs.environmentId");
    }

    /**
     * Unique name for the volumr that you want to create.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("KxVolumeArgs.name");
    }

    /**
     * Specifies the configuration for the Network attached storage (`NAS_1`) file system volume. This parameter is required when `volume_type` is `NAS_1`. See `nas1_configuration` Argument Reference below.
     * 
     */
    private UndeferrableValue<List<KxVolumeNas1ConfigurationArgs>> nas1Configurations;

    public List<KxVolumeNas1ConfigurationArgs> nas1Configurations() {
        if (nas1Configurations == null) return null;
        return nas1Configurations.getValue("KxVolumeArgs.nas1Configurations");
    }

    /**
     * A list of key-value pairs to label the volume. You can add up to 50 tags to a volume
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("KxVolumeArgs.tags");
    }

    /**
     * The type of file system volume. Currently, FinSpace only supports the `NAS_1` volume type. When you select the `NAS_1` volume type, you must also provide `nas1_configuration`.
     * 
     */
    private UndeferrableValue<String> type;

    public String type() {
        if (type == null) return null;
        return type.getValue("KxVolumeArgs.type");
    }

}
