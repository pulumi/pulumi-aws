// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.directconnect;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.List;


@PolicyResourceType(type="aws:directconnect/gatewayAssociationProposal:GatewayAssociationProposal")
public final class GatewayAssociationProposal extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * VPC prefixes (CIDRs) to advertise to the Direct Connect gateway. Defaults to the CIDR block of the VPC associated with the Virtual Gateway. To enable drift detection, must be configured.
     * 
     */
    @PolicyResourceProperty(name="allowedPrefixes", flag="unknown_allowedPrefixes")
    private List<String> value_allowedPrefixes;
    private boolean unknown_allowedPrefixes;
    public List<String> allowedPrefixes() {
        if (!unknown_allowedPrefixes) return value_allowedPrefixes;
        throw new UndeferrableValueException("Value 'GatewayAssociationProposal.allowedPrefixes' is not present");
    }

    /**
     * The ID of the VGW or transit gateway with which to associate the Direct Connect gateway.
     * 
     */
    @PolicyResourceProperty(name="associatedGatewayId", flag="unknown_associatedGatewayId")
    private String value_associatedGatewayId;
    private boolean unknown_associatedGatewayId;
    public String associatedGatewayId() {
        if (!unknown_associatedGatewayId) return value_associatedGatewayId;
        throw new UndeferrableValueException("Value 'GatewayAssociationProposal.associatedGatewayId' is not present");
    }

    /**
     * The ID of the AWS account that owns the VGW or transit gateway with which to associate the Direct Connect gateway.
     * 
     */
    @PolicyResourceProperty(name="associatedGatewayOwnerAccountId", flag="unknown_associatedGatewayOwnerAccountId")
    private String value_associatedGatewayOwnerAccountId;
    private boolean unknown_associatedGatewayOwnerAccountId;
    public String associatedGatewayOwnerAccountId() {
        if (!unknown_associatedGatewayOwnerAccountId) return value_associatedGatewayOwnerAccountId;
        throw new UndeferrableValueException("Value 'GatewayAssociationProposal.associatedGatewayOwnerAccountId' is not present");
    }

    /**
     * The type of the associated gateway, `transitGateway` or `virtualPrivateGateway`.
     * 
     */
    @PolicyResourceProperty(name="associatedGatewayType", flag="unknown_associatedGatewayType")
    private String value_associatedGatewayType;
    private boolean unknown_associatedGatewayType;
    public String associatedGatewayType() {
        if (!unknown_associatedGatewayType) return value_associatedGatewayType;
        throw new UndeferrableValueException("Value 'GatewayAssociationProposal.associatedGatewayType' is not present");
    }

    /**
     * Direct Connect Gateway identifier.
     * 
     */
    @PolicyResourceProperty(name="dxGatewayId", flag="unknown_dxGatewayId")
    private String value_dxGatewayId;
    private boolean unknown_dxGatewayId;
    public String dxGatewayId() {
        if (!unknown_dxGatewayId) return value_dxGatewayId;
        throw new UndeferrableValueException("Value 'GatewayAssociationProposal.dxGatewayId' is not present");
    }

    /**
     * AWS Account identifier of the Direct Connect Gateway&#39;s owner.
     * 
     */
    @PolicyResourceProperty(name="dxGatewayOwnerAccountId", flag="unknown_dxGatewayOwnerAccountId")
    private String value_dxGatewayOwnerAccountId;
    private boolean unknown_dxGatewayOwnerAccountId;
    public String dxGatewayOwnerAccountId() {
        if (!unknown_dxGatewayOwnerAccountId) return value_dxGatewayOwnerAccountId;
        throw new UndeferrableValueException("Value 'GatewayAssociationProposal.dxGatewayOwnerAccountId' is not present");
    }

}
