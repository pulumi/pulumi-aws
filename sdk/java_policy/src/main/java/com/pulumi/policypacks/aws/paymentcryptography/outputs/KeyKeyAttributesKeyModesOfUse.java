// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.paymentcryptography.outputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.Boolean;
import javax.annotation.Nullable;


public final class KeyKeyAttributesKeyModesOfUse {

    /**
     * Whether an AWS Payment Cryptography key can be used to decrypt data.
     * 
     */
    private @Nullable UndeferrableValue<Boolean> decrypt;

    public @Nullable Boolean decrypt() {
        if (decrypt == null) return null;
        return decrypt.getValue("KeyKeyAttributesKeyModesOfUse.decrypt");
    }

    /**
     * Whether an AWS Payment Cryptography key can be used to derive new keys.
     * 
     */
    private @Nullable UndeferrableValue<Boolean> deriveKey;

    public @Nullable Boolean deriveKey() {
        if (deriveKey == null) return null;
        return deriveKey.getValue("KeyKeyAttributesKeyModesOfUse.deriveKey");
    }

    /**
     * Whether an AWS Payment Cryptography key can be used to encrypt data.
     * 
     */
    private @Nullable UndeferrableValue<Boolean> encrypt;

    public @Nullable Boolean encrypt() {
        if (encrypt == null) return null;
        return encrypt.getValue("KeyKeyAttributesKeyModesOfUse.encrypt");
    }

    /**
     * Whether an AWS Payment Cryptography key can be used to generate and verify other card and PIN verification keys.
     * 
     */
    private @Nullable UndeferrableValue<Boolean> generate;

    public @Nullable Boolean generate() {
        if (generate == null) return null;
        return generate.getValue("KeyKeyAttributesKeyModesOfUse.generate");
    }

    /**
     * Whether an AWS Payment Cryptography key has no special restrictions other than the restrictions implied by KeyUsage.
     * 
     */
    private @Nullable UndeferrableValue<Boolean> noRestrictions;

    public @Nullable Boolean noRestrictions() {
        if (noRestrictions == null) return null;
        return noRestrictions.getValue("KeyKeyAttributesKeyModesOfUse.noRestrictions");
    }

    /**
     * Whether an AWS Payment Cryptography key can be used for signing.
     * 
     */
    private @Nullable UndeferrableValue<Boolean> sign;

    public @Nullable Boolean sign() {
        if (sign == null) return null;
        return sign.getValue("KeyKeyAttributesKeyModesOfUse.sign");
    }

    /**
     * Whether an AWS Payment Cryptography key can be used to unwrap other keys.
     * 
     */
    private @Nullable UndeferrableValue<Boolean> unwrap;

    public @Nullable Boolean unwrap() {
        if (unwrap == null) return null;
        return unwrap.getValue("KeyKeyAttributesKeyModesOfUse.unwrap");
    }

    /**
     * Whether an AWS Payment Cryptography key can be used to verify signatures.
     * 
     */
    private @Nullable UndeferrableValue<Boolean> verify;

    public @Nullable Boolean verify() {
        if (verify == null) return null;
        return verify.getValue("KeyKeyAttributesKeyModesOfUse.verify");
    }

    /**
     * Whether an AWS Payment Cryptography key can be used to wrap other keys.
     * 
     */
    private @Nullable UndeferrableValue<Boolean> wrap;

    public @Nullable Boolean wrap() {
        if (wrap == null) return null;
        return wrap.getValue("KeyKeyAttributesKeyModesOfUse.wrap");
    }

}
