// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.networkmanager;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:networkmanager/transitGatewayRouteTableAttachment:TransitGatewayRouteTableAttachment")
public final class TransitGatewayRouteTableAttachment extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Attachment Amazon Resource Name (ARN).
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'TransitGatewayRouteTableAttachment.arn' is not present");
    }

    /**
     * The policy rule number associated with the attachment.
     * 
     */
    @PolicyResourceProperty(name="attachmentPolicyRuleNumber", flag="unknown_attachmentPolicyRuleNumber")
    private Integer value_attachmentPolicyRuleNumber;
    private boolean unknown_attachmentPolicyRuleNumber;
    public Integer attachmentPolicyRuleNumber() {
        if (!unknown_attachmentPolicyRuleNumber) return value_attachmentPolicyRuleNumber;
        throw new UndeferrableValueException("Value 'TransitGatewayRouteTableAttachment.attachmentPolicyRuleNumber' is not present");
    }

    /**
     * The type of attachment.
     * 
     */
    @PolicyResourceProperty(name="attachmentType", flag="unknown_attachmentType")
    private String value_attachmentType;
    private boolean unknown_attachmentType;
    public String attachmentType() {
        if (!unknown_attachmentType) return value_attachmentType;
        throw new UndeferrableValueException("Value 'TransitGatewayRouteTableAttachment.attachmentType' is not present");
    }

    /**
     * The ARN of the core network.
     * 
     */
    @PolicyResourceProperty(name="coreNetworkArn", flag="unknown_coreNetworkArn")
    private String value_coreNetworkArn;
    private boolean unknown_coreNetworkArn;
    public String coreNetworkArn() {
        if (!unknown_coreNetworkArn) return value_coreNetworkArn;
        throw new UndeferrableValueException("Value 'TransitGatewayRouteTableAttachment.coreNetworkArn' is not present");
    }

    /**
     * The ID of the core network.
     * 
     */
    @PolicyResourceProperty(name="coreNetworkId", flag="unknown_coreNetworkId")
    private String value_coreNetworkId;
    private boolean unknown_coreNetworkId;
    public String coreNetworkId() {
        if (!unknown_coreNetworkId) return value_coreNetworkId;
        throw new UndeferrableValueException("Value 'TransitGatewayRouteTableAttachment.coreNetworkId' is not present");
    }

    /**
     * The edge location for the peer.
     * 
     */
    @PolicyResourceProperty(name="edgeLocation", flag="unknown_edgeLocation")
    private String value_edgeLocation;
    private boolean unknown_edgeLocation;
    public String edgeLocation() {
        if (!unknown_edgeLocation) return value_edgeLocation;
        throw new UndeferrableValueException("Value 'TransitGatewayRouteTableAttachment.edgeLocation' is not present");
    }

    /**
     * The ID of the attachment account owner.
     * 
     */
    @PolicyResourceProperty(name="ownerAccountId", flag="unknown_ownerAccountId")
    private String value_ownerAccountId;
    private boolean unknown_ownerAccountId;
    public String ownerAccountId() {
        if (!unknown_ownerAccountId) return value_ownerAccountId;
        throw new UndeferrableValueException("Value 'TransitGatewayRouteTableAttachment.ownerAccountId' is not present");
    }

    /**
     * The ID of the peer for the attachment.
     * 
     */
    @PolicyResourceProperty(name="peeringId", flag="unknown_peeringId")
    private String value_peeringId;
    private boolean unknown_peeringId;
    public String peeringId() {
        if (!unknown_peeringId) return value_peeringId;
        throw new UndeferrableValueException("Value 'TransitGatewayRouteTableAttachment.peeringId' is not present");
    }

    /**
     * The attachment resource ARN.
     * 
     */
    @PolicyResourceProperty(name="resourceArn", flag="unknown_resourceArn")
    private String value_resourceArn;
    private boolean unknown_resourceArn;
    public String resourceArn() {
        if (!unknown_resourceArn) return value_resourceArn;
        throw new UndeferrableValueException("Value 'TransitGatewayRouteTableAttachment.resourceArn' is not present");
    }

    /**
     * The name of the segment attachment.
     * 
     */
    @PolicyResourceProperty(name="segmentName", flag="unknown_segmentName")
    private String value_segmentName;
    private boolean unknown_segmentName;
    public String segmentName() {
        if (!unknown_segmentName) return value_segmentName;
        throw new UndeferrableValueException("Value 'TransitGatewayRouteTableAttachment.segmentName' is not present");
    }

    /**
     * The state of the attachment.
     * 
     */
    @PolicyResourceProperty(name="state", flag="unknown_state")
    private String value_state;
    private boolean unknown_state;
    public String state() {
        if (!unknown_state) return value_state;
        throw new UndeferrableValueException("Value 'TransitGatewayRouteTableAttachment.state' is not present");
    }

    /**
     * Key-value tags for the attachment. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'TransitGatewayRouteTableAttachment.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'TransitGatewayRouteTableAttachment.tagsAll' is not present");
    }

    /**
     * The ARN of the transit gateway route table for the attachment.
     * 
     */
    @PolicyResourceProperty(name="transitGatewayRouteTableArn", flag="unknown_transitGatewayRouteTableArn")
    private String value_transitGatewayRouteTableArn;
    private boolean unknown_transitGatewayRouteTableArn;
    public String transitGatewayRouteTableArn() {
        if (!unknown_transitGatewayRouteTableArn) return value_transitGatewayRouteTableArn;
        throw new UndeferrableValueException("Value 'TransitGatewayRouteTableAttachment.transitGatewayRouteTableArn' is not present");
    }

}
