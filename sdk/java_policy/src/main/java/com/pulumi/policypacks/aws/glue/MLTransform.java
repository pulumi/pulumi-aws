// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.glue;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.glue.MLTransformInputRecordTable;
import com.pulumi.policypacks.aws.glue.MLTransformParameters;
import com.pulumi.policypacks.aws.glue.MLTransformSchema;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;


@PolicyResourceType(type="aws:glue/mLTransform:MLTransform")
public final class MLTransform extends com.pulumi.resources.PolicyResource {

    /**
     * Amazon Resource Name (ARN) of Glue ML Transform.
     * 
     */
    public String arn;



    /**
     * Description of the ML Transform.
     * 
     */
    public String description;



    /**
     * The version of glue to use, for example &#34;1.0&#34;. For information about available versions, see the [AWS Glue Release Notes](https://docs.aws.amazon.com/glue/latest/dg/release-notes.html).
     * 
     */
    public String glueVersion;



    /**
     * A list of AWS Glue table definitions used by the transform. see Input Record Tables.
     * 
     */
    public List<MLTransformInputRecordTable> inputRecordTables;



    /**
     * The number of labels available for this transform.
     * 
     */
    public Integer labelCount;



    /**
     * The number of AWS Glue data processing units (DPUs) that are allocated to task runs for this transform. You can allocate from `2` to `100` DPUs; the default is `10`. `max_capacity` is a mutually exclusive option with `number_of_workers` and `worker_type`.
     * 
     */
    public Double maxCapacity;



    /**
     * The maximum number of times to retry this ML Transform if it fails.
     * 
     */
    public Integer maxRetries;



    /**
     * The name you assign to this ML Transform. It must be unique in your account.
     * 
     */
    public String name;



    /**
     * The number of workers of a defined `worker_type` that are allocated when an ML Transform runs. Required with `worker_type`.
     * 
     */
    public Integer numberOfWorkers;



    /**
     * The algorithmic parameters that are specific to the transform type used. Conditionally dependent on the transform type. see Parameters.
     * 
     */
    public MLTransformParameters parameters;



    /**
     * The ARN of the IAM role associated with this ML Transform.
     * 
     */
    public String roleArn;



    /**
     * The object that represents the schema that this transform accepts. see Schema.
     * 
     */
    public List<MLTransformSchema> schemas;



    /**
     * Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



    /**
     * The ML Transform timeout in minutes. The default is 2880 minutes (48 hours).
     * 
     */
    public Integer timeout;



    /**
     * The type of predefined worker that is allocated when an ML Transform runs. Accepts a value of `Standard`, `G.1X`, or `G.2X`. Required with `number_of_workers`.
     * 
     */
    public String workerType;



}
