// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ssoadmin;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.ssoadmin.inputs.TrustedTokenIssuerTrustedTokenIssuerConfigurationArgs;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ssoadmin/trustedTokenIssuer:TrustedTokenIssuer")
public final class TrustedTokenIssuerArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * A unique, case-sensitive ID that you provide to ensure the idempotency of the request. AWS generates a random value when not provided.
     * 
     */
    private UndeferrableValue<String> clientToken;

    public String clientToken() {
        if (clientToken == null) return null;
        return clientToken.getValue("TrustedTokenIssuerArgs.clientToken");
    }

    /**
     * ARN of the instance of IAM Identity Center.
     * 
     */
    private UndeferrableValue<String> instanceArn;

    public String instanceArn() {
        if (instanceArn == null) return null;
        return instanceArn.getValue("TrustedTokenIssuerArgs.instanceArn");
    }

    /**
     * Name of the trusted token issuer.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("TrustedTokenIssuerArgs.name");
    }

    /**
     * Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("TrustedTokenIssuerArgs.tags");
    }

    /**
     * A block that specifies settings that apply to the trusted token issuer, these change depending on the type you specify in `trusted_token_issuer_type`. Documented below.
     * 
     */
    private UndeferrableValue<TrustedTokenIssuerTrustedTokenIssuerConfigurationArgs> trustedTokenIssuerConfiguration;

    public TrustedTokenIssuerTrustedTokenIssuerConfigurationArgs trustedTokenIssuerConfiguration() {
        if (trustedTokenIssuerConfiguration == null) return null;
        return trustedTokenIssuerConfiguration.getValue("TrustedTokenIssuerArgs.trustedTokenIssuerConfiguration");
    }

    /**
     * Specifies the type of the trusted token issuer. Valid values are `OIDC_JWT`
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> trustedTokenIssuerType;

    public String trustedTokenIssuerType() {
        if (trustedTokenIssuerType == null) return null;
        return trustedTokenIssuerType.getValue("TrustedTokenIssuerArgs.trustedTokenIssuerType");
    }

}
