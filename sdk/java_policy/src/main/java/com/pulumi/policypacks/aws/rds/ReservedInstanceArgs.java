// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.rds;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:rds/reservedInstance:ReservedInstance")
public final class ReservedInstanceArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Number of instances to reserve. Default value is `1`.
     * 
     */
    @PolicyResourceProperty(name="instanceCount", flag="unknown_instanceCount")
    private Integer value_instanceCount;
    private boolean unknown_instanceCount;
    public Integer instanceCount() {
        if (!unknown_instanceCount) return value_instanceCount;
        throw new UndeferrableValueException("Value 'ReservedInstanceArgs.instanceCount' is not present");
    }

    /**
     * ID of the Reserved DB instance offering to purchase. To determine an `offering_id`, see the `aws.rds.getReservedInstanceOffering` data source.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="offeringId", flag="unknown_offeringId")
    private String value_offeringId;
    private boolean unknown_offeringId;
    public String offeringId() {
        if (!unknown_offeringId) return value_offeringId;
        throw new UndeferrableValueException("Value 'ReservedInstanceArgs.offeringId' is not present");
    }

    /**
     * Customer-specified identifier to track this reservation.
     * 
     */
    @PolicyResourceProperty(name="reservationId", flag="unknown_reservationId")
    private String value_reservationId;
    private boolean unknown_reservationId;
    public String reservationId() {
        if (!unknown_reservationId) return value_reservationId;
        throw new UndeferrableValueException("Value 'ReservedInstanceArgs.reservationId' is not present");
    }

    /**
     * Map of tags to assign to the DB reservation. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'ReservedInstanceArgs.tags' is not present");
    }

}
