// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.wafv2.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.wafv2.inputs.RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllArgs;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternArgs {

    /**
     * An empty configuration block that is used for inspecting all headers.
     * 
     */
    @PolicyResourceProperty(name="all", flag="unknown_all")
    private RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllArgs value_all;
    private boolean unknown_all;
    public RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternAllArgs all() {
        if (!unknown_all) return value_all;
        throw new UndeferrableValueException("Value 'RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternArgs.all' is not present");
    }

    /**
     * An array of strings that will be used for inspecting headers that do not have a key that matches one of the provided values.
     * 
     */
    @PolicyResourceProperty(name="excludedHeaders", flag="unknown_excludedHeaders")
    private List<String> value_excludedHeaders;
    private boolean unknown_excludedHeaders;
    public List<String> excludedHeaders() {
        if (!unknown_excludedHeaders) return value_excludedHeaders;
        throw new UndeferrableValueException("Value 'RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternArgs.excludedHeaders' is not present");
    }

    /**
     * An array of strings that will be used for inspecting headers that have a key that matches one of the provided values.
     * 
     */
    @PolicyResourceProperty(name="includedHeaders", flag="unknown_includedHeaders")
    private List<String> value_includedHeaders;
    private boolean unknown_includedHeaders;
    public List<String> includedHeaders() {
        if (!unknown_includedHeaders) return value_includedHeaders;
        throw new UndeferrableValueException("Value 'RuleGroupRuleStatementSizeConstraintStatementFieldToMatchHeaderMatchPatternArgs.includedHeaders' is not present");
    }

}
