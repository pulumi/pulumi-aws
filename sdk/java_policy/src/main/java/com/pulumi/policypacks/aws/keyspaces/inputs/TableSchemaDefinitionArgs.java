// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.keyspaces.inputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.keyspaces.inputs.TableSchemaDefinitionClusteringKeyArgs;
import com.pulumi.policypacks.aws.keyspaces.inputs.TableSchemaDefinitionColumnArgs;
import com.pulumi.policypacks.aws.keyspaces.inputs.TableSchemaDefinitionPartitionKeyArgs;
import com.pulumi.policypacks.aws.keyspaces.inputs.TableSchemaDefinitionStaticColumnArgs;
import java.util.List;
import javax.annotation.Nullable;


public final class TableSchemaDefinitionArgs {

    /**
     * The columns that are part of the clustering key of the table.
     * 
     */
    private UndeferrableValue<List<TableSchemaDefinitionClusteringKeyArgs>> clusteringKeys;

    public List<TableSchemaDefinitionClusteringKeyArgs> clusteringKeys() {
        if (clusteringKeys == null) return null;
        return clusteringKeys.getValue("TableSchemaDefinitionArgs.clusteringKeys");
    }

    /**
     * The regular columns of the table.
     * 
     */
    private UndeferrableValue<List<TableSchemaDefinitionColumnArgs>> columns;

    public List<TableSchemaDefinitionColumnArgs> columns() {
        if (columns == null) return null;
        return columns.getValue("TableSchemaDefinitionArgs.columns");
    }

    /**
     * The columns that are part of the partition key of the table .
     * 
     */
    private UndeferrableValue<List<TableSchemaDefinitionPartitionKeyArgs>> partitionKeys;

    public List<TableSchemaDefinitionPartitionKeyArgs> partitionKeys() {
        if (partitionKeys == null) return null;
        return partitionKeys.getValue("TableSchemaDefinitionArgs.partitionKeys");
    }

    /**
     * The columns that have been defined as `STATIC`. Static columns store values that are shared by all rows in the same partition.
     * 
     */
    private UndeferrableValue<List<TableSchemaDefinitionStaticColumnArgs>> staticColumns;

    public List<TableSchemaDefinitionStaticColumnArgs> staticColumns() {
        if (staticColumns == null) return null;
        return staticColumns.getValue("TableSchemaDefinitionArgs.staticColumns");
    }

}
