// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.costexplorer.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.costexplorer.outputs.AnomalySubscriptionThresholdExpressionAnd;
import com.pulumi.policypacks.aws.costexplorer.outputs.AnomalySubscriptionThresholdExpressionCostCategory;
import com.pulumi.policypacks.aws.costexplorer.outputs.AnomalySubscriptionThresholdExpressionDimension;
import com.pulumi.policypacks.aws.costexplorer.outputs.AnomalySubscriptionThresholdExpressionNot;
import com.pulumi.policypacks.aws.costexplorer.outputs.AnomalySubscriptionThresholdExpressionOr;
import com.pulumi.policypacks.aws.costexplorer.outputs.AnomalySubscriptionThresholdExpressionTags;
import java.util.List;
import javax.annotation.Nullable;


public final class AnomalySubscriptionThresholdExpression {

    /**
     * Return results that match both Dimension objects.
     * 
     */
    private @Nullable UndeferrableValue<List<AnomalySubscriptionThresholdExpressionAnd>> ands;

    public @Nullable List<AnomalySubscriptionThresholdExpressionAnd> ands() {
        if (ands == null) return null;
        return ands.getValue("AnomalySubscriptionThresholdExpression.ands");
    }

    /**
     * Configuration block for the filter that&#39;s based on  values. See Cost Category below.
     * 
     */
    private @Nullable UndeferrableValue<AnomalySubscriptionThresholdExpressionCostCategory> costCategory;

    public @Nullable AnomalySubscriptionThresholdExpressionCostCategory costCategory() {
        if (costCategory == null) return null;
        return costCategory.getValue("AnomalySubscriptionThresholdExpression.costCategory");
    }

    /**
     * Configuration block for the specific Dimension to use for.
     * 
     */
    private @Nullable UndeferrableValue<AnomalySubscriptionThresholdExpressionDimension> dimension;

    public @Nullable AnomalySubscriptionThresholdExpressionDimension dimension() {
        if (dimension == null) return null;
        return dimension.getValue("AnomalySubscriptionThresholdExpression.dimension");
    }

    /**
     * Return results that do not match the Dimension object.
     * 
     */
    private @Nullable UndeferrableValue<AnomalySubscriptionThresholdExpressionNot> not;

    public @Nullable AnomalySubscriptionThresholdExpressionNot not() {
        if (not == null) return null;
        return not.getValue("AnomalySubscriptionThresholdExpression.not");
    }

    /**
     * Return results that match either Dimension object.
     * 
     */
    private @Nullable UndeferrableValue<List<AnomalySubscriptionThresholdExpressionOr>> ors;

    public @Nullable List<AnomalySubscriptionThresholdExpressionOr> ors() {
        if (ors == null) return null;
        return ors.getValue("AnomalySubscriptionThresholdExpression.ors");
    }

    /**
     * Configuration block for the specific Tag to use for. See Tags below.
     * 
     */
    private @Nullable UndeferrableValue<AnomalySubscriptionThresholdExpressionTags> tags;

    public @Nullable AnomalySubscriptionThresholdExpressionTags tags() {
        if (tags == null) return null;
        return tags.getValue("AnomalySubscriptionThresholdExpression.tags");
    }

}
