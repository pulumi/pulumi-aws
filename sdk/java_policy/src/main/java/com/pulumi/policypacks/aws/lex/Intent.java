// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.lex;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.lex.IntentConclusionStatement;
import com.pulumi.policypacks.aws.lex.IntentConfirmationPrompt;
import com.pulumi.policypacks.aws.lex.IntentDialogCodeHook;
import com.pulumi.policypacks.aws.lex.IntentFollowUpPrompt;
import com.pulumi.policypacks.aws.lex.IntentFulfillmentActivity;
import com.pulumi.policypacks.aws.lex.IntentRejectionStatement;
import com.pulumi.policypacks.aws.lex.IntentSlot;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;


@PolicyResourceType(type="aws:lex/intent:Intent")
public final class Intent extends com.pulumi.resources.PolicyResource {

    /**
     * The ARN of the Lex intent.
     * 
     */
    public String arn;



    /**
     * Checksum identifying the version of the intent that was created. The checksum is not
     * included as an argument because the resource will add it automatically when updating the intent.
     * 
     */
    public String checksum;



    /**
     * The statement that you want Amazon Lex to convey to the user
     * after the intent is successfully fulfilled by the Lambda function. This element is relevant only if
     * you provide a Lambda function in the `fulfillment_activity`. If you return the intent to the client
     * application, you can&#39;t specify this element. The `follow_up_prompt` and `conclusion_statement` are
     * mutually exclusive. You can specify only one. Attributes are documented under statement.
     * 
     */
    public IntentConclusionStatement conclusionStatement;



    /**
     * Prompts the user to confirm the intent. This question should
     * have a yes or no answer. You you must provide both the `rejection_statement` and `confirmation_prompt`,
     * or neither. Attributes are documented under prompt.
     * 
     */
    public IntentConfirmationPrompt confirmationPrompt;



    /**
     * Determines if a new slot type version is created when the initial
     * resource is created and on each update. Defaults to `false`.
     * 
     */
    public Boolean createVersion;



    /**
     * The date when the intent version was created.
     * 
     */
    public String createdDate;



    /**
     * A description of the intent. Must be less than or equal to 200 characters in length.
     * 
     */
    public String description;



    /**
     * Specifies a Lambda function to invoke for each user input. You can
     * invoke this Lambda function to personalize user interaction. Attributes are documented under code_hook.
     * 
     */
    public IntentDialogCodeHook dialogCodeHook;



    /**
     * Amazon Lex uses this prompt to solicit additional activity after
     * fulfilling an intent. For example, after the OrderPizza intent is fulfilled, you might prompt the
     * user to order a drink. The `follow_up_prompt` field and the `conclusion_statement` field are mutually
     * exclusive. You can specify only one. Attributes are documented under follow_up_prompt.
     * 
     */
    public IntentFollowUpPrompt followUpPrompt;



    /**
     * Describes how the intent is fulfilled. For example, after a
     * user provides all of the information for a pizza order, `fulfillment_activity` defines how the bot
     * places an order with a local pizza store. Attributes are documented under fulfillment_activity.
     * 
     */
    public IntentFulfillmentActivity fulfillmentActivity;



    /**
     * The date when the $LATEST version of this intent was updated.
     * 
     */
    public String lastUpdatedDate;



    /**
     * The name of the intent, not case sensitive. Must be less than or equal to 100 characters in length.
     * 
     */
    public String name;



    /**
     * A unique identifier for the built-in intent to base this
     * intent on. To find the signature for an intent, see
     * [Standard Built-in Intents](https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/built-in-intent-ref/standard-intents)
     * in the Alexa Skills Kit.
     * 
     */
    public String parentIntentSignature;



    /**
     * When the user answers &#34;no&#34; to the question defined in
     * `confirmation_prompt`, Amazon Lex responds with this statement to acknowledge that the intent was
     * canceled. You must provide both the `rejection_statement` and the `confirmation_prompt`, or neither.
     * Attributes are documented under statement.
     * 
     */
    public IntentRejectionStatement rejectionStatement;



    /**
     * An array of utterances (strings) that a user might say to signal
     * the intent. For example, &#34;I want {PizzaSize} pizza&#34;, &#34;Order {Quantity} {PizzaSize} pizzas&#34;.
     * In each utterance, a slot name is enclosed in curly braces. Must have between 1 and 10 items in the list, and each item must be less than or equal to 200 characters in length.
     * 
     */
    public List<String> sampleUtterances;



    /**
     * An list of intent slots. At runtime, Amazon Lex elicits required slot values
     * from the user using prompts defined in the slots. Attributes are documented under slot.
     * 
     */
    public List<IntentSlot> slots;



    /**
     * The version of the bot.
     * 
     */
    public String version;



}
