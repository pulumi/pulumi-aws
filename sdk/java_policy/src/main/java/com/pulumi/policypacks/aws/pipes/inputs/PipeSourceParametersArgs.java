// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.pipes.inputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.pipes.inputs.PipeSourceParametersActivemqBrokerParametersArgs;
import com.pulumi.policypacks.aws.pipes.inputs.PipeSourceParametersDynamodbStreamParametersArgs;
import com.pulumi.policypacks.aws.pipes.inputs.PipeSourceParametersFilterCriteriaArgs;
import com.pulumi.policypacks.aws.pipes.inputs.PipeSourceParametersKinesisStreamParametersArgs;
import com.pulumi.policypacks.aws.pipes.inputs.PipeSourceParametersManagedStreamingKafkaParametersArgs;
import com.pulumi.policypacks.aws.pipes.inputs.PipeSourceParametersRabbitmqBrokerParametersArgs;
import com.pulumi.policypacks.aws.pipes.inputs.PipeSourceParametersSelfManagedKafkaParametersArgs;
import com.pulumi.policypacks.aws.pipes.inputs.PipeSourceParametersSqsQueueParametersArgs;
import javax.annotation.Nullable;


public final class PipeSourceParametersArgs {

    /**
     * The parameters for using an Active MQ broker as a source. Detailed below.
     * 
     */
    private UndeferrableValue<PipeSourceParametersActivemqBrokerParametersArgs> activemqBrokerParameters;

    public PipeSourceParametersActivemqBrokerParametersArgs activemqBrokerParameters() {
        if (activemqBrokerParameters == null) return null;
        return activemqBrokerParameters.getValue("PipeSourceParametersArgs.activemqBrokerParameters");
    }

    /**
     * The parameters for using a DynamoDB stream as a source.  Detailed below.
     * 
     */
    private UndeferrableValue<PipeSourceParametersDynamodbStreamParametersArgs> dynamodbStreamParameters;

    public PipeSourceParametersDynamodbStreamParametersArgs dynamodbStreamParameters() {
        if (dynamodbStreamParameters == null) return null;
        return dynamodbStreamParameters.getValue("PipeSourceParametersArgs.dynamodbStreamParameters");
    }

    /**
     * The collection of event patterns used to [filter events](https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-pipes-event-filtering.html). Detailed below.
     * 
     */
    private UndeferrableValue<PipeSourceParametersFilterCriteriaArgs> filterCriteria;

    public PipeSourceParametersFilterCriteriaArgs filterCriteria() {
        if (filterCriteria == null) return null;
        return filterCriteria.getValue("PipeSourceParametersArgs.filterCriteria");
    }

    /**
     * The parameters for using a Kinesis stream as a source. Detailed below.
     * 
     */
    private UndeferrableValue<PipeSourceParametersKinesisStreamParametersArgs> kinesisStreamParameters;

    public PipeSourceParametersKinesisStreamParametersArgs kinesisStreamParameters() {
        if (kinesisStreamParameters == null) return null;
        return kinesisStreamParameters.getValue("PipeSourceParametersArgs.kinesisStreamParameters");
    }

    /**
     * The parameters for using an MSK stream as a source. Detailed below.
     * 
     */
    private UndeferrableValue<PipeSourceParametersManagedStreamingKafkaParametersArgs> managedStreamingKafkaParameters;

    public PipeSourceParametersManagedStreamingKafkaParametersArgs managedStreamingKafkaParameters() {
        if (managedStreamingKafkaParameters == null) return null;
        return managedStreamingKafkaParameters.getValue("PipeSourceParametersArgs.managedStreamingKafkaParameters");
    }

    /**
     * The parameters for using a Rabbit MQ broker as a source. Detailed below.
     * 
     */
    private UndeferrableValue<PipeSourceParametersRabbitmqBrokerParametersArgs> rabbitmqBrokerParameters;

    public PipeSourceParametersRabbitmqBrokerParametersArgs rabbitmqBrokerParameters() {
        if (rabbitmqBrokerParameters == null) return null;
        return rabbitmqBrokerParameters.getValue("PipeSourceParametersArgs.rabbitmqBrokerParameters");
    }

    /**
     * The parameters for using a self-managed Apache Kafka stream as a source. Detailed below.
     * 
     */
    private UndeferrableValue<PipeSourceParametersSelfManagedKafkaParametersArgs> selfManagedKafkaParameters;

    public PipeSourceParametersSelfManagedKafkaParametersArgs selfManagedKafkaParameters() {
        if (selfManagedKafkaParameters == null) return null;
        return selfManagedKafkaParameters.getValue("PipeSourceParametersArgs.selfManagedKafkaParameters");
    }

    /**
     * The parameters for using a Amazon SQS stream as a source. Detailed below.
     * 
     */
    private UndeferrableValue<PipeSourceParametersSqsQueueParametersArgs> sqsQueueParameters;

    public PipeSourceParametersSqsQueueParametersArgs sqsQueueParameters() {
        if (sqsQueueParameters == null) return null;
        return sqsQueueParameters.getValue("PipeSourceParametersArgs.sqsQueueParameters");
    }

}
