// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.amplify;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:amplify/branch:Branch")
public final class Branch extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Unique ID for an Amplify app.
     * 
     */
    @PolicyResourceProperty(name="appId", flag="unknown_appId")
    private String value_appId;
    private boolean unknown_appId;
    public String appId() {
        if (!unknown_appId) return value_appId;
        throw new UndeferrableValueException("Value 'Branch.appId' is not present");
    }

    /**
     * ARN for the branch.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'Branch.arn' is not present");
    }

    /**
     * A list of custom resources that are linked to this branch.
     * 
     */
    @PolicyResourceProperty(name="associatedResources", flag="unknown_associatedResources")
    private List<String> value_associatedResources;
    private boolean unknown_associatedResources;
    public List<String> associatedResources() {
        if (!unknown_associatedResources) return value_associatedResources;
        throw new UndeferrableValueException("Value 'Branch.associatedResources' is not present");
    }

    /**
     * ARN for a backend environment that is part of an Amplify app.
     * 
     */
    @PolicyResourceProperty(name="backendEnvironmentArn", flag="unknown_backendEnvironmentArn")
    private @Nullable String value_backendEnvironmentArn;
    private boolean unknown_backendEnvironmentArn;
    public @Nullable String backendEnvironmentArn() {
        if (!unknown_backendEnvironmentArn) return value_backendEnvironmentArn;
        throw new UndeferrableValueException("Value 'Branch.backendEnvironmentArn' is not present");
    }

    /**
     * Basic authorization credentials for the branch.
     * 
     */
    @PolicyResourceProperty(name="basicAuthCredentials", flag="unknown_basicAuthCredentials")
    private @Nullable String value_basicAuthCredentials;
    private boolean unknown_basicAuthCredentials;
    public @Nullable String basicAuthCredentials() {
        if (!unknown_basicAuthCredentials) return value_basicAuthCredentials;
        throw new UndeferrableValueException("Value 'Branch.basicAuthCredentials' is not present");
    }

    /**
     * Name for the branch.
     * 
     */
    @PolicyResourceProperty(name="branchName", flag="unknown_branchName")
    private String value_branchName;
    private boolean unknown_branchName;
    public String branchName() {
        if (!unknown_branchName) return value_branchName;
        throw new UndeferrableValueException("Value 'Branch.branchName' is not present");
    }

    /**
     * Custom domains for the branch.
     * 
     */
    @PolicyResourceProperty(name="customDomains", flag="unknown_customDomains")
    private List<String> value_customDomains;
    private boolean unknown_customDomains;
    public List<String> customDomains() {
        if (!unknown_customDomains) return value_customDomains;
        throw new UndeferrableValueException("Value 'Branch.customDomains' is not present");
    }

    /**
     * Description for the branch.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private @Nullable String value_description;
    private boolean unknown_description;
    public @Nullable String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'Branch.description' is not present");
    }

    /**
     * Destination branch if the branch is a pull request branch.
     * 
     */
    @PolicyResourceProperty(name="destinationBranch", flag="unknown_destinationBranch")
    private String value_destinationBranch;
    private boolean unknown_destinationBranch;
    public String destinationBranch() {
        if (!unknown_destinationBranch) return value_destinationBranch;
        throw new UndeferrableValueException("Value 'Branch.destinationBranch' is not present");
    }

    /**
     * Display name for a branch. This is used as the default domain prefix.
     * 
     */
    @PolicyResourceProperty(name="displayName", flag="unknown_displayName")
    private String value_displayName;
    private boolean unknown_displayName;
    public String displayName() {
        if (!unknown_displayName) return value_displayName;
        throw new UndeferrableValueException("Value 'Branch.displayName' is not present");
    }

    /**
     * Enables auto building for the branch.
     * 
     */
    @PolicyResourceProperty(name="enableAutoBuild", flag="unknown_enableAutoBuild")
    private @Nullable Boolean value_enableAutoBuild;
    private boolean unknown_enableAutoBuild;
    public @Nullable Boolean enableAutoBuild() {
        if (!unknown_enableAutoBuild) return value_enableAutoBuild;
        throw new UndeferrableValueException("Value 'Branch.enableAutoBuild' is not present");
    }

    /**
     * Enables basic authorization for the branch.
     * 
     */
    @PolicyResourceProperty(name="enableBasicAuth", flag="unknown_enableBasicAuth")
    private @Nullable Boolean value_enableBasicAuth;
    private boolean unknown_enableBasicAuth;
    public @Nullable Boolean enableBasicAuth() {
        if (!unknown_enableBasicAuth) return value_enableBasicAuth;
        throw new UndeferrableValueException("Value 'Branch.enableBasicAuth' is not present");
    }

    /**
     * Enables notifications for the branch.
     * 
     */
    @PolicyResourceProperty(name="enableNotification", flag="unknown_enableNotification")
    private @Nullable Boolean value_enableNotification;
    private boolean unknown_enableNotification;
    public @Nullable Boolean enableNotification() {
        if (!unknown_enableNotification) return value_enableNotification;
        throw new UndeferrableValueException("Value 'Branch.enableNotification' is not present");
    }

    /**
     * Enables performance mode for the branch.
     * 
     */
    @PolicyResourceProperty(name="enablePerformanceMode", flag="unknown_enablePerformanceMode")
    private @Nullable Boolean value_enablePerformanceMode;
    private boolean unknown_enablePerformanceMode;
    public @Nullable Boolean enablePerformanceMode() {
        if (!unknown_enablePerformanceMode) return value_enablePerformanceMode;
        throw new UndeferrableValueException("Value 'Branch.enablePerformanceMode' is not present");
    }

    /**
     * Enables pull request previews for this branch.
     * 
     */
    @PolicyResourceProperty(name="enablePullRequestPreview", flag="unknown_enablePullRequestPreview")
    private @Nullable Boolean value_enablePullRequestPreview;
    private boolean unknown_enablePullRequestPreview;
    public @Nullable Boolean enablePullRequestPreview() {
        if (!unknown_enablePullRequestPreview) return value_enablePullRequestPreview;
        throw new UndeferrableValueException("Value 'Branch.enablePullRequestPreview' is not present");
    }

    /**
     * Environment variables for the branch.
     * 
     */
    @PolicyResourceProperty(name="environmentVariables", flag="unknown_environmentVariables")
    private @Nullable Map<String,String> value_environmentVariables;
    private boolean unknown_environmentVariables;
    public @Nullable Map<String,String> environmentVariables() {
        if (!unknown_environmentVariables) return value_environmentVariables;
        throw new UndeferrableValueException("Value 'Branch.environmentVariables' is not present");
    }

    /**
     * Framework for the branch.
     * 
     */
    @PolicyResourceProperty(name="framework", flag="unknown_framework")
    private @Nullable String value_framework;
    private boolean unknown_framework;
    public @Nullable String framework() {
        if (!unknown_framework) return value_framework;
        throw new UndeferrableValueException("Value 'Branch.framework' is not present");
    }

    /**
     * Amplify environment name for the pull request.
     * 
     */
    @PolicyResourceProperty(name="pullRequestEnvironmentName", flag="unknown_pullRequestEnvironmentName")
    private @Nullable String value_pullRequestEnvironmentName;
    private boolean unknown_pullRequestEnvironmentName;
    public @Nullable String pullRequestEnvironmentName() {
        if (!unknown_pullRequestEnvironmentName) return value_pullRequestEnvironmentName;
        throw new UndeferrableValueException("Value 'Branch.pullRequestEnvironmentName' is not present");
    }

    /**
     * Source branch if the branch is a pull request branch.
     * 
     */
    @PolicyResourceProperty(name="sourceBranch", flag="unknown_sourceBranch")
    private String value_sourceBranch;
    private boolean unknown_sourceBranch;
    public String sourceBranch() {
        if (!unknown_sourceBranch) return value_sourceBranch;
        throw new UndeferrableValueException("Value 'Branch.sourceBranch' is not present");
    }

    /**
     * Describes the current stage for the branch. Valid values: `PRODUCTION`, `BETA`, `DEVELOPMENT`, `EXPERIMENTAL`, `PULL_REQUEST`.
     * 
     */
    @PolicyResourceProperty(name="stage", flag="unknown_stage")
    private @Nullable String value_stage;
    private boolean unknown_stage;
    public @Nullable String stage() {
        if (!unknown_stage) return value_stage;
        throw new UndeferrableValueException("Value 'Branch.stage' is not present");
    }

    /**
     * Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'Branch.tags' is not present");
    }

    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'Branch.tagsAll' is not present");
    }

    /**
     * Content Time To Live (TTL) for the website in seconds.
     * 
     */
    @PolicyResourceProperty(name="ttl", flag="unknown_ttl")
    private @Nullable String value_ttl;
    private boolean unknown_ttl;
    public @Nullable String ttl() {
        if (!unknown_ttl) return value_ttl;
        throw new UndeferrableValueException("Value 'Branch.ttl' is not present");
    }

}
