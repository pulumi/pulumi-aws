// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.lex;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.lex.inputs.V2modelsIntentClosingSettingArgs;
import com.pulumi.policypacks.aws.lex.inputs.V2modelsIntentConfirmationSettingArgs;
import com.pulumi.policypacks.aws.lex.inputs.V2modelsIntentDialogCodeHookArgs;
import com.pulumi.policypacks.aws.lex.inputs.V2modelsIntentFulfillmentCodeHookArgs;
import com.pulumi.policypacks.aws.lex.inputs.V2modelsIntentInitialResponseSettingArgs;
import com.pulumi.policypacks.aws.lex.inputs.V2modelsIntentInputContextArgs;
import com.pulumi.policypacks.aws.lex.inputs.V2modelsIntentKendraConfigurationArgs;
import com.pulumi.policypacks.aws.lex.inputs.V2modelsIntentOutputContextArgs;
import com.pulumi.policypacks.aws.lex.inputs.V2modelsIntentSampleUtteranceArgs;
import com.pulumi.policypacks.aws.lex.inputs.V2modelsIntentSlotPriorityArgs;
import com.pulumi.policypacks.aws.lex.inputs.V2modelsIntentTimeoutsArgs;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:lex/v2modelsIntent:V2modelsIntent")
public final class V2modelsIntentArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Identifier of the bot associated with this intent.
     * 
     */
    private UndeferrableValue<String> botId;

    public String botId() {
        if (botId == null) return null;
        return botId.getValue("V2modelsIntentArgs.botId");
    }

    /**
     * Version of the bot associated with this intent.
     * 
     */
    private UndeferrableValue<String> botVersion;

    public String botVersion() {
        if (botVersion == null) return null;
        return botVersion.getValue("V2modelsIntentArgs.botVersion");
    }

    /**
     * Configuration block for the response that Amazon Lex sends to the user when the intent is closed. See `closing_setting`.
     * 
     */
    private UndeferrableValue<V2modelsIntentClosingSettingArgs> closingSetting;

    public V2modelsIntentClosingSettingArgs closingSetting() {
        if (closingSetting == null) return null;
        return closingSetting.getValue("V2modelsIntentArgs.closingSetting");
    }

    private UndeferrableValue<V2modelsIntentConfirmationSettingArgs> confirmationSetting;

    public V2modelsIntentConfirmationSettingArgs confirmationSetting() {
        if (confirmationSetting == null) return null;
        return confirmationSetting.getValue("V2modelsIntentArgs.confirmationSetting");
    }

    /**
     * Description of the intent. Use the description to help identify the intent in lists.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("V2modelsIntentArgs.description");
    }

    /**
     * Configuration block for invoking the alias Lambda function for each user input. You can invoke this Lambda function to personalize user interaction. See `dialog_code_hook`.
     * 
     */
    private UndeferrableValue<V2modelsIntentDialogCodeHookArgs> dialogCodeHook;

    public V2modelsIntentDialogCodeHookArgs dialogCodeHook() {
        if (dialogCodeHook == null) return null;
        return dialogCodeHook.getValue("V2modelsIntentArgs.dialogCodeHook");
    }

    /**
     * Configuration block for invoking the alias Lambda function when the intent is ready for fulfillment. You can invoke this function to complete the bot&#39;s transaction with the user. See `fulfillment_code_hook`.
     * 
     */
    private UndeferrableValue<V2modelsIntentFulfillmentCodeHookArgs> fulfillmentCodeHook;

    public V2modelsIntentFulfillmentCodeHookArgs fulfillmentCodeHook() {
        if (fulfillmentCodeHook == null) return null;
        return fulfillmentCodeHook.getValue("V2modelsIntentArgs.fulfillmentCodeHook");
    }

    /**
     * Configuration block for the response that is sent to the user at the beginning of a conversation, before eliciting slot values. See `initial_response_setting`.
     * 
     */
    private UndeferrableValue<V2modelsIntentInitialResponseSettingArgs> initialResponseSetting;

    public V2modelsIntentInitialResponseSettingArgs initialResponseSetting() {
        if (initialResponseSetting == null) return null;
        return initialResponseSetting.getValue("V2modelsIntentArgs.initialResponseSetting");
    }

    /**
     * Configuration blocks for contexts that must be active for this intent to be considered by Amazon Lex. When an intent has an input context list, Amazon Lex only considers using the intent in an interaction with the user when the specified contexts are included in the active context list for the session. If the contexts are not active, then Amazon Lex will not use the intent. A context can be automatically activated using the outputContexts property or it can be set at runtime. See `input_context`.
     * 
     */
    private UndeferrableValue<List<V2modelsIntentInputContextArgs>> inputContexts;

    public List<V2modelsIntentInputContextArgs> inputContexts() {
        if (inputContexts == null) return null;
        return inputContexts.getValue("V2modelsIntentArgs.inputContexts");
    }

    /**
     * Configuration block for information required to use the AMAZON.KendraSearchIntent intent to connect to an Amazon Kendra index. The AMAZON.KendraSearchIntent intent is called when Amazon Lex can&#39;t determine another intent to invoke. See `kendra_configuration`.
     * 
     */
    private UndeferrableValue<V2modelsIntentKendraConfigurationArgs> kendraConfiguration;

    public V2modelsIntentKendraConfigurationArgs kendraConfiguration() {
        if (kendraConfiguration == null) return null;
        return kendraConfiguration.getValue("V2modelsIntentArgs.kendraConfiguration");
    }

    /**
     * Identifier of the language and locale where this intent is used. All of the bots, slot types, and slots used by the intent must have the same locale.
     * 
     */
    private UndeferrableValue<String> localeId;

    public String localeId() {
        if (localeId == null) return null;
        return localeId.getValue("V2modelsIntentArgs.localeId");
    }

    /**
     * Name of the intent. Intent names must be unique in the locale that contains the intent and cannot match the name of any built-in intent.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("V2modelsIntentArgs.name");
    }

    /**
     * Configuration blocks for contexts that the intent activates when it is fulfilled. You can use an output context to indicate the intents that Amazon Lex should consider for the next turn of the conversation with a customer. When you use the outputContextsList property, all of the contexts specified in the list are activated when the intent is fulfilled. You can set up to 10 output contexts. You can also set the number of conversation turns that the context should be active, or the length of time that the context should be active. See `output_context`.
     * 
     */
    private UndeferrableValue<List<V2modelsIntentOutputContextArgs>> outputContexts;

    public List<V2modelsIntentOutputContextArgs> outputContexts() {
        if (outputContexts == null) return null;
        return outputContexts.getValue("V2modelsIntentArgs.outputContexts");
    }

    /**
     * Identifier for the built-in intent to base this intent on.
     * 
     */
    private UndeferrableValue<String> parentIntentSignature;

    public String parentIntentSignature() {
        if (parentIntentSignature == null) return null;
        return parentIntentSignature.getValue("V2modelsIntentArgs.parentIntentSignature");
    }

    /**
     * Configuration block for strings that a user might say to signal the intent. See `sample_utterance`.
     * 
     */
    private UndeferrableValue<List<V2modelsIntentSampleUtteranceArgs>> sampleUtterances;

    public List<V2modelsIntentSampleUtteranceArgs> sampleUtterances() {
        if (sampleUtterances == null) return null;
        return sampleUtterances.getValue("V2modelsIntentArgs.sampleUtterances");
    }

    /**
     * Configuration block for a new list of slots and their priorities that are contained by the intent. This is ignored on create and only valid for updates. See `slot_priority`.
     * 
     */
    private UndeferrableValue<List<V2modelsIntentSlotPriorityArgs>> slotPriorities;

    public List<V2modelsIntentSlotPriorityArgs> slotPriorities() {
        if (slotPriorities == null) return null;
        return slotPriorities.getValue("V2modelsIntentArgs.slotPriorities");
    }

    private UndeferrableValue<V2modelsIntentTimeoutsArgs> timeouts;

    public V2modelsIntentTimeoutsArgs timeouts() {
        if (timeouts == null) return null;
        return timeouts.getValue("V2modelsIntentArgs.timeouts");
    }

}
