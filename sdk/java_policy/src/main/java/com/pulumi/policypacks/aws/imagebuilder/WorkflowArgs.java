// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.imagebuilder;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:imagebuilder/workflow:Workflow")
public final class WorkflowArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Change description of the workflow.
     * 
     */
    private UndeferrableValue<String> changeDescription;

    public String changeDescription() {
        if (changeDescription == null) return null;
        return changeDescription.getValue("WorkflowArgs.changeDescription");
    }

    /**
     * Inline YAML string with data of the workflow. Exactly one of `data` and `uri` can be specified.
     * 
     */
    private UndeferrableValue<String> data;

    public String data() {
        if (data == null) return null;
        return data.getValue("WorkflowArgs.data");
    }

    /**
     * Description of the workflow.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("WorkflowArgs.description");
    }

    /**
     * Amazon Resource Name (ARN) of the Key Management Service (KMS) Key used to encrypt the workflow.
     * 
     */
    private UndeferrableValue<String> kmsKeyId;

    public String kmsKeyId() {
        if (kmsKeyId == null) return null;
        return kmsKeyId.getValue("WorkflowArgs.kmsKeyId");
    }

    /**
     * Name of the workflow.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("WorkflowArgs.name");
    }

    /**
     * Key-value map of resource tags for the workflow. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("WorkflowArgs.tags");
    }

    /**
     * Type of the workflow. Valid values: `BUILD`, `TEST`.
     * 
     */
    private UndeferrableValue<String> type;

    public String type() {
        if (type == null) return null;
        return type.getValue("WorkflowArgs.type");
    }

    /**
     * S3 URI with data of the workflow. Exactly one of `data` and `uri` can be specified.
     * 
     */
    private UndeferrableValue<String> uri;

    public String uri() {
        if (uri == null) return null;
        return uri.getValue("WorkflowArgs.uri");
    }

    /**
     * Version of the workflow.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> version;

    public String version() {
        if (version == null) return null;
        return version.getValue("WorkflowArgs.version");
    }

}
