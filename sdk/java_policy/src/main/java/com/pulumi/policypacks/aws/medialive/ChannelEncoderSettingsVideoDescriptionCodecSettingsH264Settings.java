// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.medialive;

import com.pulumi.policypacks.aws.medialive.ChannelEncoderSettingsVideoDescriptionCodecSettingsH264SettingsFilterSettings;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;


public final class ChannelEncoderSettingsVideoDescriptionCodecSettingsH264Settings {

    /**
     * Enables or disables adaptive quantization.
     * 
     */
    public String adaptiveQuantization;



    /**
     * Indicates that AFD values will be written into the output stream.
     * 
     */
    public String afdSignaling;



    /**
     * Average bitrate in bits/second.
     * 
     */
    public Integer bitrate;



    public Integer bufFillPct;



    /**
     * Size of buffer in bits.
     * 
     */
    public Integer bufSize;



    /**
     * Includes color space metadata in the output.
     * 
     */
    public String colorMetadata;



    /**
     * Entropy encoding mode.
     * 
     */
    public String entropyEncoding;



    /**
     * Filters to apply to an encode. See H264 Filter Settings for more details.
     * 
     */
    public ChannelEncoderSettingsVideoDescriptionCodecSettingsH264SettingsFilterSettings filterSettings;



    /**
     * Four bit AFD value to write on all frames of video in the output stream.
     * 
     */
    public String fixedAfd;



    public String flickerAq;



    /**
     * Controls whether coding is performed on a field basis or on a frame basis.
     * 
     */
    public String forceFieldPictures;



    /**
     * Indicates how the output video frame rate is specified.
     * 
     */
    public String framerateControl;



    /**
     * Framerate denominator.
     * 
     */
    public Integer framerateDenominator;



    /**
     * Framerate numerator.
     * 
     */
    public Integer framerateNumerator;



    /**
     * GOP-B reference.
     * 
     */
    public String gopBReference;



    /**
     * Frequency of closed GOPs.
     * 
     */
    public Integer gopClosedCadence;



    /**
     * Number of B-frames between reference frames.
     * 
     */
    public Integer gopNumBFrames;



    /**
     * GOP size in units of either frames of seconds per `gop_size_units`.
     * 
     */
    public Double gopSize;



    /**
     * Indicates if the `gop_size` is specified in frames or seconds.
     * 
     */
    public String gopSizeUnits;



    /**
     * H264 level.
     * 
     */
    public String level;



    /**
     * Amount of lookahead.
     * 
     */
    public String lookAheadRateControl;



    /**
     * Set the maximum bitrate in order to accommodate expected spikes in the complexity of the video.
     * 
     */
    public Integer maxBitrate;



    /**
     * Min interval.
     * 
     */
    public Integer minIInterval;



    /**
     * Number of reference frames to use.
     * 
     */
    public Integer numRefFrames;



    /**
     * Indicates how the output pixel aspect ratio is specified.
     * 
     */
    public String parControl;



    /**
     * Pixel Aspect Ratio denominator.
     * 
     */
    public Integer parDenominator;



    /**
     * Pixel Aspect Ratio numerator.
     * 
     */
    public Integer parNumerator;



    /**
     * H264 profile.
     * 
     */
    public String profile;



    /**
     * Quality level.
     * 
     */
    public String qualityLevel;



    /**
     * Controls the target quality for the video encode.
     * 
     */
    public Integer qvbrQualityLevel;



    /**
     * Rate control mode.
     * 
     */
    public String rateControlMode;



    /**
     * Sets the scan type of the output.
     * 
     */
    public String scanType;



    /**
     * Scene change detection.
     * 
     */
    public String sceneChangeDetect;



    /**
     * Number of slices per picture.
     * 
     */
    public Integer slices;



    /**
     * Softness.
     * 
     */
    public Integer softness;



    /**
     * Makes adjustments within each frame based on spatial variation of content complexity.
     * 
     */
    public String spatialAq;



    /**
     * Subgop length.
     * 
     */
    public String subgopLength;



    /**
     * Produces a bitstream compliant with SMPTE RP-2027.
     * 
     */
    public String syntax;



    /**
     * Makes adjustments within each frame based on temporal variation of content complexity.
     * 
     */
    public String temporalAq;



    /**
     * Determines how timecodes should be inserted into the video elementary stream.
     * 
     */
    public String timecodeInsertion;



}
