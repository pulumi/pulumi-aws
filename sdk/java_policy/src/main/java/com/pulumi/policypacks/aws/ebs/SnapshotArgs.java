// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ebs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ebs/snapshot:Snapshot")
public final class SnapshotArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * A description of what the snapshot is.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("SnapshotArgs.description");
    }

    /**
     * The Amazon Resource Name (ARN) of the Outpost on which to create a local snapshot.
     * 
     */
    private UndeferrableValue<String> outpostArn;

    public String outpostArn() {
        if (outpostArn == null) return null;
        return outpostArn.getValue("SnapshotArgs.outpostArn");
    }

    /**
     * Indicates whether to permanently restore an archived snapshot.
     * 
     */
    private UndeferrableValue<Boolean> permanentRestore;

    public Boolean permanentRestore() {
        if (permanentRestore == null) return null;
        return permanentRestore.getValue("SnapshotArgs.permanentRestore");
    }

    /**
     * The name of the storage tier. Valid values are `archive` and `standard`. Default value is `standard`.
     * 
     */
    private UndeferrableValue<String> storageTier;

    public String storageTier() {
        if (storageTier == null) return null;
        return storageTier.getValue("SnapshotArgs.storageTier");
    }

    /**
     * A map of tags to assign to the snapshot. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("SnapshotArgs.tags");
    }

    /**
     * Specifies the number of days for which to temporarily restore an archived snapshot. Required for temporary restores only. The snapshot will be automatically re-archived after this period.
     * 
     */
    private UndeferrableValue<Integer> temporaryRestoreDays;

    public Integer temporaryRestoreDays() {
        if (temporaryRestoreDays == null) return null;
        return temporaryRestoreDays.getValue("SnapshotArgs.temporaryRestoreDays");
    }

    /**
     * The Volume ID of which to make a snapshot.
     * 
     */
    private UndeferrableValue<String> volumeId;

    public String volumeId() {
        if (volumeId == null) return null;
        return volumeId.getValue("SnapshotArgs.volumeId");
    }

}
