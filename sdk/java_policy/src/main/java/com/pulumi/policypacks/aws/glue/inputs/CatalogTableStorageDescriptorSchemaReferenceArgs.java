// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.glue.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.glue.inputs.CatalogTableStorageDescriptorSchemaReferenceSchemaIdArgs;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class CatalogTableStorageDescriptorSchemaReferenceArgs {

    /**
     * Configuration block that contains schema identity fields. Either this or the `schema_version_id` has to be provided. See `schema_id` below.
     * 
     */
    @PolicyResourceProperty(name="schemaId", flag="unknown_schemaId")
    private CatalogTableStorageDescriptorSchemaReferenceSchemaIdArgs value_schemaId;
    private boolean unknown_schemaId;
    public CatalogTableStorageDescriptorSchemaReferenceSchemaIdArgs schemaId() {
        if (!unknown_schemaId) return value_schemaId;
        throw new UndeferrableValueException("Value 'CatalogTableStorageDescriptorSchemaReferenceArgs.schemaId' is not present");
    }

    /**
     * Unique ID assigned to a version of the schema. Either this or the `schema_id` has to be provided.
     * 
     */
    @PolicyResourceProperty(name="schemaVersionId", flag="unknown_schemaVersionId")
    private String value_schemaVersionId;
    private boolean unknown_schemaVersionId;
    public String schemaVersionId() {
        if (!unknown_schemaVersionId) return value_schemaVersionId;
        throw new UndeferrableValueException("Value 'CatalogTableStorageDescriptorSchemaReferenceArgs.schemaVersionId' is not present");
    }

    /**
     * Version number of the schema.
     * 
     */
    @PolicyResourceProperty(name="schemaVersionNumber", flag="unknown_schemaVersionNumber")
    private Integer value_schemaVersionNumber;
    private boolean unknown_schemaVersionNumber;
    public Integer schemaVersionNumber() {
        if (!unknown_schemaVersionNumber) return value_schemaVersionNumber;
        throw new UndeferrableValueException("Value 'CatalogTableStorageDescriptorSchemaReferenceArgs.schemaVersionNumber' is not present");
    }

}
