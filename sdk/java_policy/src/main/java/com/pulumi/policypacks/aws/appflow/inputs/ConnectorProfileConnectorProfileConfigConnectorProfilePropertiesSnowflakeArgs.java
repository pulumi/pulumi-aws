// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appflow.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.String;
import javax.annotation.Nullable;


public final class ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeArgs {

    /**
     * The name of the account.
     * 
     */
    @PolicyResourceProperty(name="accountName", flag="unknown_accountName")
    private String value_accountName;
    private boolean unknown_accountName;
    public String accountName() {
        if (!unknown_accountName) return value_accountName;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeArgs.accountName' is not present");
    }

    @PolicyResourceProperty(name="bucketName", flag="unknown_bucketName")
    private String value_bucketName;
    private boolean unknown_bucketName;
    public String bucketName() {
        if (!unknown_bucketName) return value_bucketName;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeArgs.bucketName' is not present");
    }

    @PolicyResourceProperty(name="bucketPrefix", flag="unknown_bucketPrefix")
    private String value_bucketPrefix;
    private boolean unknown_bucketPrefix;
    public String bucketPrefix() {
        if (!unknown_bucketPrefix) return value_bucketPrefix;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeArgs.bucketPrefix' is not present");
    }

    @PolicyResourceProperty(name="privateLinkServiceName", flag="unknown_privateLinkServiceName")
    private String value_privateLinkServiceName;
    private boolean unknown_privateLinkServiceName;
    public String privateLinkServiceName() {
        if (!unknown_privateLinkServiceName) return value_privateLinkServiceName;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeArgs.privateLinkServiceName' is not present");
    }

    /**
     * AWS Region of the Snowflake account.
     * 
     */
    @PolicyResourceProperty(name="region", flag="unknown_region")
    private String value_region;
    private boolean unknown_region;
    public String region() {
        if (!unknown_region) return value_region;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeArgs.region' is not present");
    }

    /**
     * Name of the Amazon S3 stage that was created while setting up an Amazon S3 stage in the Snowflake account. This is written in the following format: `&lt;Database&gt;.&lt;Schema&gt;.&lt;Stage Name&gt;`.
     * 
     */
    @PolicyResourceProperty(name="stage", flag="unknown_stage")
    private String value_stage;
    private boolean unknown_stage;
    public String stage() {
        if (!unknown_stage) return value_stage;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeArgs.stage' is not present");
    }

    /**
     * The name of the Snowflake warehouse.
     * 
     */
    @PolicyResourceProperty(name="warehouse", flag="unknown_warehouse")
    private String value_warehouse;
    private boolean unknown_warehouse;
    public String warehouse() {
        if (!unknown_warehouse) return value_warehouse;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeArgs.warehouse' is not present");
    }

}
