// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Integer;
import java.lang.String;


@PolicyResourceType(type="aws:ec2/instanceMetadataDefaults:InstanceMetadataDefaults")
public final class InstanceMetadataDefaults extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Whether the metadata service is available. Can be `&#34;enabled&#34;`, `&#34;disabled&#34;`, or `&#34;no-preference&#34;`. Default: `&#34;no-preference&#34;`.
     * 
     */
    @PolicyResourceProperty(name="httpEndpoint", flag="unknown_httpEndpoint")
    private String value_httpEndpoint;
    private boolean unknown_httpEndpoint;
    public String httpEndpoint() {
        if (!unknown_httpEndpoint) return value_httpEndpoint;
        throw new UndeferrableValueException("Value 'InstanceMetadataDefaults.httpEndpoint' is not present");
    }

    /**
     * The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from `1` to `64`, or `-1` to indicate no preference. Default: `-1`.
     * 
     */
    @PolicyResourceProperty(name="httpPutResponseHopLimit", flag="unknown_httpPutResponseHopLimit")
    private Integer value_httpPutResponseHopLimit;
    private boolean unknown_httpPutResponseHopLimit;
    public Integer httpPutResponseHopLimit() {
        if (!unknown_httpPutResponseHopLimit) return value_httpPutResponseHopLimit;
        throw new UndeferrableValueException("Value 'InstanceMetadataDefaults.httpPutResponseHopLimit' is not present");
    }

    /**
     * Whether the metadata service requires session tokens, also referred to as _Instance Metadata Service Version 2 (IMDSv2)_. Can be `&#34;optional&#34;`, `&#34;required&#34;`, or `&#34;no-preference&#34;`. Default: `&#34;no-preference&#34;`.
     * 
     */
    @PolicyResourceProperty(name="httpTokens", flag="unknown_httpTokens")
    private String value_httpTokens;
    private boolean unknown_httpTokens;
    public String httpTokens() {
        if (!unknown_httpTokens) return value_httpTokens;
        throw new UndeferrableValueException("Value 'InstanceMetadataDefaults.httpTokens' is not present");
    }

    /**
     * Enables or disables access to instance tags from the instance metadata service. Can be `&#34;enabled&#34;`, `&#34;disabled&#34;`, or `&#34;no-preference&#34;`. Default: `&#34;no-preference&#34;`.
     * 
     */
    @PolicyResourceProperty(name="instanceMetadataTags", flag="unknown_instanceMetadataTags")
    private String value_instanceMetadataTags;
    private boolean unknown_instanceMetadataTags;
    public String instanceMetadataTags() {
        if (!unknown_instanceMetadataTags) return value_instanceMetadataTags;
        throw new UndeferrableValueException("Value 'InstanceMetadataDefaults.instanceMetadataTags' is not present");
    }

}
