// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.s3tables;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.s3tables.outputs.TableMaintenanceConfiguration;
import java.lang.String;


@PolicyResourceType(type="aws:s3tables/table:Table")
public final class Table extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * ARN of the table.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'Table.arn' is not present");
    }

    /**
     * Date and time when the namespace was created.
     * 
     */
    @PolicyResourceProperty(name="createdAt", flag="unknown_createdAt")
    private String value_createdAt;
    private boolean unknown_createdAt;
    public String createdAt() {
        if (!unknown_createdAt) return value_createdAt;
        throw new UndeferrableValueException("Value 'Table.createdAt' is not present");
    }

    /**
     * Account ID of the account that created the namespace.
     * 
     */
    @PolicyResourceProperty(name="createdBy", flag="unknown_createdBy")
    private String value_createdBy;
    private boolean unknown_createdBy;
    public String createdBy() {
        if (!unknown_createdBy) return value_createdBy;
        throw new UndeferrableValueException("Value 'Table.createdBy' is not present");
    }

    /**
     * Format of the table.
     * Must be `ICEBERG`.
     * 
     */
    @PolicyResourceProperty(name="format", flag="unknown_format")
    private String value_format;
    private boolean unknown_format;
    public String format() {
        if (!unknown_format) return value_format;
        throw new UndeferrableValueException("Value 'Table.format' is not present");
    }

    /**
     * A single table bucket maintenance configuration object.
     * See `maintenance_configuration` below.
     * 
     */
    @PolicyResourceProperty(name="maintenanceConfiguration", flag="unknown_maintenanceConfiguration")
    private TableMaintenanceConfiguration value_maintenanceConfiguration;
    private boolean unknown_maintenanceConfiguration;
    public TableMaintenanceConfiguration maintenanceConfiguration() {
        if (!unknown_maintenanceConfiguration) return value_maintenanceConfiguration;
        throw new UndeferrableValueException("Value 'Table.maintenanceConfiguration' is not present");
    }

    /**
     * Location of table metadata.
     * 
     */
    @PolicyResourceProperty(name="metadataLocation", flag="unknown_metadataLocation")
    private String value_metadataLocation;
    private boolean unknown_metadataLocation;
    public String metadataLocation() {
        if (!unknown_metadataLocation) return value_metadataLocation;
        throw new UndeferrableValueException("Value 'Table.metadataLocation' is not present");
    }

    /**
     * Date and time when the namespace was last modified.
     * 
     */
    @PolicyResourceProperty(name="modifiedAt", flag="unknown_modifiedAt")
    private String value_modifiedAt;
    private boolean unknown_modifiedAt;
    public String modifiedAt() {
        if (!unknown_modifiedAt) return value_modifiedAt;
        throw new UndeferrableValueException("Value 'Table.modifiedAt' is not present");
    }

    /**
     * Account ID of the account that last modified the namespace.
     * 
     */
    @PolicyResourceProperty(name="modifiedBy", flag="unknown_modifiedBy")
    private String value_modifiedBy;
    private boolean unknown_modifiedBy;
    public String modifiedBy() {
        if (!unknown_modifiedBy) return value_modifiedBy;
        throw new UndeferrableValueException("Value 'Table.modifiedBy' is not present");
    }

    /**
     * Name of the table.
     * Must be between 1 and 255 characters in length.
     * Can consist of lowercase letters, numbers, and underscores, and must begin and end with a lowercase letter or number.
     * A full list of table naming rules can be found in the [S3 Tables documentation](https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-tables-buckets-naming.html#naming-rules-table).
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'Table.name' is not present");
    }

    /**
     * Name of the namespace for this table.
     * Must be between 1 and 255 characters in length.
     * Can consist of lowercase letters, numbers, and underscores, and must begin and end with a lowercase letter or number.
     * 
     */
    @PolicyResourceProperty(name="namespace", flag="unknown_namespace")
    private String value_namespace;
    private boolean unknown_namespace;
    public String namespace() {
        if (!unknown_namespace) return value_namespace;
        throw new UndeferrableValueException("Value 'Table.namespace' is not present");
    }

    /**
     * Account ID of the account that owns the namespace.
     * 
     */
    @PolicyResourceProperty(name="ownerAccountId", flag="unknown_ownerAccountId")
    private String value_ownerAccountId;
    private boolean unknown_ownerAccountId;
    public String ownerAccountId() {
        if (!unknown_ownerAccountId) return value_ownerAccountId;
        throw new UndeferrableValueException("Value 'Table.ownerAccountId' is not present");
    }

    /**
     * ARN referencing the Table Bucket that contains this Namespace.
     * 
     * The following argument is optional:
     * 
     */
    @PolicyResourceProperty(name="tableBucketArn", flag="unknown_tableBucketArn")
    private String value_tableBucketArn;
    private boolean unknown_tableBucketArn;
    public String tableBucketArn() {
        if (!unknown_tableBucketArn) return value_tableBucketArn;
        throw new UndeferrableValueException("Value 'Table.tableBucketArn' is not present");
    }

    /**
     * Type of the table.
     * One of `customer` or `aws`.
     * 
     */
    @PolicyResourceProperty(name="type", flag="unknown_type")
    private String value_type;
    private boolean unknown_type;
    public String type() {
        if (!unknown_type) return value_type;
        throw new UndeferrableValueException("Value 'Table.type' is not present");
    }

    /**
     * Identifier for the current version of table data.
     * 
     */
    @PolicyResourceProperty(name="versionToken", flag="unknown_versionToken")
    private String value_versionToken;
    private boolean unknown_versionToken;
    public String versionToken() {
        if (!unknown_versionToken) return value_versionToken;
        throw new UndeferrableValueException("Value 'Table.versionToken' is not present");
    }

    /**
     * S3 URI pointing to the S3 Bucket that contains the table data.
     * 
     */
    @PolicyResourceProperty(name="warehouseLocation", flag="unknown_warehouseLocation")
    private String value_warehouseLocation;
    private boolean unknown_warehouseLocation;
    public String warehouseLocation() {
        if (!unknown_warehouseLocation) return value_warehouseLocation;
        throw new UndeferrableValueException("Value 'Table.warehouseLocation' is not present");
    }

}
