// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.ec2.outputs.DefaultSecurityGroupEgress;
import com.pulumi.policypacks.aws.ec2.outputs.DefaultSecurityGroupIngress;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ec2/defaultSecurityGroup:DefaultSecurityGroup")
public final class DefaultSecurityGroup extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * ARN of the security group.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'DefaultSecurityGroup.arn' is not present");
    }

    /**
     * Description of the security group.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private String value_description;
    private boolean unknown_description;
    public String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'DefaultSecurityGroup.description' is not present");
    }

    /**
     * Configuration block. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="egress", flag="unknown_egress")
    private List<DefaultSecurityGroupEgress> value_egress;
    private boolean unknown_egress;
    public List<DefaultSecurityGroupEgress> egress() {
        if (!unknown_egress) return value_egress;
        throw new UndeferrableValueException("Value 'DefaultSecurityGroup.egress' is not present");
    }

    /**
     * Configuration block. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="ingress", flag="unknown_ingress")
    private List<DefaultSecurityGroupIngress> value_ingress;
    private boolean unknown_ingress;
    public List<DefaultSecurityGroupIngress> ingress() {
        if (!unknown_ingress) return value_ingress;
        throw new UndeferrableValueException("Value 'DefaultSecurityGroup.ingress' is not present");
    }

    /**
     * Name of the security group.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'DefaultSecurityGroup.name' is not present");
    }

    @PolicyResourceProperty(name="namePrefix", flag="unknown_namePrefix")
    private String value_namePrefix;
    private boolean unknown_namePrefix;
    public String namePrefix() {
        if (!unknown_namePrefix) return value_namePrefix;
        throw new UndeferrableValueException("Value 'DefaultSecurityGroup.namePrefix' is not present");
    }

    /**
     * Owner ID.
     * 
     */
    @PolicyResourceProperty(name="ownerId", flag="unknown_ownerId")
    private String value_ownerId;
    private boolean unknown_ownerId;
    public String ownerId() {
        if (!unknown_ownerId) return value_ownerId;
        throw new UndeferrableValueException("Value 'DefaultSecurityGroup.ownerId' is not present");
    }

    @PolicyResourceProperty(name="revokeRulesOnDelete", flag="unknown_revokeRulesOnDelete")
    private @Nullable Boolean value_revokeRulesOnDelete;
    private boolean unknown_revokeRulesOnDelete;
    public @Nullable Boolean revokeRulesOnDelete() {
        if (!unknown_revokeRulesOnDelete) return value_revokeRulesOnDelete;
        throw new UndeferrableValueException("Value 'DefaultSecurityGroup.revokeRulesOnDelete' is not present");
    }

    /**
     * Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'DefaultSecurityGroup.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'DefaultSecurityGroup.tagsAll' is not present");
    }

    /**
     * VPC ID. **Note that changing the `vpc_id` will _not_ restore any default security group rules that were modified, added, or removed.** It will be left in its current state.
     * 
     */
    @PolicyResourceProperty(name="vpcId", flag="unknown_vpcId")
    private String value_vpcId;
    private boolean unknown_vpcId;
    public String vpcId() {
        if (!unknown_vpcId) return value_vpcId;
        throw new UndeferrableValueException("Value 'DefaultSecurityGroup.vpcId' is not present");
    }

}
