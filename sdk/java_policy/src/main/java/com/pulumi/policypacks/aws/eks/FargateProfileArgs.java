// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.eks;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.eks.inputs.FargateProfileSelectorArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:eks/fargateProfile:FargateProfile")
public final class FargateProfileArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Name of the EKS Cluster.
     * 
     */
    @PolicyResourceProperty(name="clusterName", flag="unknown_clusterName")
    private String value_clusterName;
    private boolean unknown_clusterName;
    public String clusterName() {
        if (!unknown_clusterName) return value_clusterName;
        throw new UndeferrableValueException("Value 'FargateProfileArgs.clusterName' is not present");
    }

    /**
     * Name of the EKS Fargate Profile.
     * 
     */
    @PolicyResourceProperty(name="fargateProfileName", flag="unknown_fargateProfileName")
    private String value_fargateProfileName;
    private boolean unknown_fargateProfileName;
    public String fargateProfileName() {
        if (!unknown_fargateProfileName) return value_fargateProfileName;
        throw new UndeferrableValueException("Value 'FargateProfileArgs.fargateProfileName' is not present");
    }

    /**
     * Amazon Resource Name (ARN) of the IAM Role that provides permissions for the EKS Fargate Profile.
     * 
     */
    @PolicyResourceProperty(name="podExecutionRoleArn", flag="unknown_podExecutionRoleArn")
    private String value_podExecutionRoleArn;
    private boolean unknown_podExecutionRoleArn;
    public String podExecutionRoleArn() {
        if (!unknown_podExecutionRoleArn) return value_podExecutionRoleArn;
        throw new UndeferrableValueException("Value 'FargateProfileArgs.podExecutionRoleArn' is not present");
    }

    /**
     * Configuration block(s) for selecting Kubernetes Pods to execute with this EKS Fargate Profile. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="selectors", flag="unknown_selectors")
    private List<FargateProfileSelectorArgs> value_selectors;
    private boolean unknown_selectors;
    public List<FargateProfileSelectorArgs> selectors() {
        if (!unknown_selectors) return value_selectors;
        throw new UndeferrableValueException("Value 'FargateProfileArgs.selectors' is not present");
    }

    /**
     * Identifiers of private EC2 Subnets to associate with the EKS Fargate Profile. These subnets must have the following resource tag: `kubernetes.io/cluster/CLUSTER_NAME` (where `CLUSTER_NAME` is replaced with the name of the EKS Cluster).
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="subnetIds", flag="unknown_subnetIds")
    private List<String> value_subnetIds;
    private boolean unknown_subnetIds;
    public List<String> subnetIds() {
        if (!unknown_subnetIds) return value_subnetIds;
        throw new UndeferrableValueException("Value 'FargateProfileArgs.subnetIds' is not present");
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'FargateProfileArgs.tags' is not present");
    }

}
