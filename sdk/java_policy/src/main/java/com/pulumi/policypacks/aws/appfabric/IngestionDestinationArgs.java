// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appfabric;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.appfabric.inputs.IngestionDestinationDestinationConfigurationArgs;
import com.pulumi.policypacks.aws.appfabric.inputs.IngestionDestinationProcessingConfigurationArgs;
import com.pulumi.policypacks.aws.appfabric.inputs.IngestionDestinationTimeoutsArgs;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:appfabric/ingestionDestination:IngestionDestination")
public final class IngestionDestinationArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The Amazon Resource Name (ARN) of the app bundle to use for the request.
     * 
     */
    private UndeferrableValue<String> appBundleArn;

    public String appBundleArn() {
        if (appBundleArn == null) return null;
        return appBundleArn.getValue("IngestionDestinationArgs.appBundleArn");
    }

    /**
     * Contains information about the destination of ingested data.
     * 
     */
    private UndeferrableValue<IngestionDestinationDestinationConfigurationArgs> destinationConfiguration;

    public IngestionDestinationDestinationConfigurationArgs destinationConfiguration() {
        if (destinationConfiguration == null) return null;
        return destinationConfiguration.getValue("IngestionDestinationArgs.destinationConfiguration");
    }

    /**
     * The Amazon Resource Name (ARN) of the ingestion to use for the request.
     * 
     */
    private UndeferrableValue<String> ingestionArn;

    public String ingestionArn() {
        if (ingestionArn == null) return null;
        return ingestionArn.getValue("IngestionDestinationArgs.ingestionArn");
    }

    /**
     * Contains information about how ingested data is processed.
     * 
     */
    private UndeferrableValue<IngestionDestinationProcessingConfigurationArgs> processingConfiguration;

    public IngestionDestinationProcessingConfigurationArgs processingConfiguration() {
        if (processingConfiguration == null) return null;
        return processingConfiguration.getValue("IngestionDestinationArgs.processingConfiguration");
    }

    /**
     * Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("IngestionDestinationArgs.tags");
    }

    private UndeferrableValue<IngestionDestinationTimeoutsArgs> timeouts;

    public IngestionDestinationTimeoutsArgs timeouts() {
        if (timeouts == null) return null;
        return timeouts.getValue("IngestionDestinationArgs.timeouts");
    }

}
