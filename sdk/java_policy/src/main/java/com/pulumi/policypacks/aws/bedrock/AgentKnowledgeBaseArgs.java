// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.bedrock;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.bedrock.inputs.AgentKnowledgeBaseKnowledgeBaseConfigurationArgs;
import com.pulumi.policypacks.aws.bedrock.inputs.AgentKnowledgeBaseStorageConfigurationArgs;
import com.pulumi.policypacks.aws.bedrock.inputs.AgentKnowledgeBaseTimeoutsArgs;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:bedrock/agentKnowledgeBase:AgentKnowledgeBase")
public final class AgentKnowledgeBaseArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Description of the knowledge base.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("AgentKnowledgeBaseArgs.description");
    }

    /**
     * Details about the embeddings configuration of the knowledge base. See `knowledge_base_configuration` block for details.
     * 
     */
    private UndeferrableValue<AgentKnowledgeBaseKnowledgeBaseConfigurationArgs> knowledgeBaseConfiguration;

    public AgentKnowledgeBaseKnowledgeBaseConfigurationArgs knowledgeBaseConfiguration() {
        if (knowledgeBaseConfiguration == null) return null;
        return knowledgeBaseConfiguration.getValue("AgentKnowledgeBaseArgs.knowledgeBaseConfiguration");
    }

    /**
     * Name of the knowledge base.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("AgentKnowledgeBaseArgs.name");
    }

    /**
     * ARN of the IAM role with permissions to invoke API operations on the knowledge base.
     * 
     */
    private UndeferrableValue<String> roleArn;

    public String roleArn() {
        if (roleArn == null) return null;
        return roleArn.getValue("AgentKnowledgeBaseArgs.roleArn");
    }

    /**
     * Details about the storage configuration of the knowledge base. See `storage_configuration` block for details.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<AgentKnowledgeBaseStorageConfigurationArgs> storageConfiguration;

    public AgentKnowledgeBaseStorageConfigurationArgs storageConfiguration() {
        if (storageConfiguration == null) return null;
        return storageConfiguration.getValue("AgentKnowledgeBaseArgs.storageConfiguration");
    }

    /**
     * Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("AgentKnowledgeBaseArgs.tags");
    }

    private UndeferrableValue<AgentKnowledgeBaseTimeoutsArgs> timeouts;

    public AgentKnowledgeBaseTimeoutsArgs timeouts() {
        if (timeouts == null) return null;
        return timeouts.getValue("AgentKnowledgeBaseArgs.timeouts");
    }

}
