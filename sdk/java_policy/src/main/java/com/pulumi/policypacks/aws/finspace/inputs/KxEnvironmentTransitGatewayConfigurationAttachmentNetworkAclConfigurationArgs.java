// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.finspace.inputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.finspace.inputs.KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodeArgs;
import com.pulumi.policypacks.aws.finspace.inputs.KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangeArgs;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArgs {

    /**
     * The IPv4 network range to allow or deny, in CIDR notation. The specified CIDR block is modified to its canonical form. For example, `100.68.0.18/18` will be converted to `100.68.0.0/18`.
     * 
     */
    private UndeferrableValue<String> cidrBlock;

    public String cidrBlock() {
        if (cidrBlock == null) return null;
        return cidrBlock.getValue("KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArgs.cidrBlock");
    }

    /**
     * Defines the ICMP protocol that consists of the ICMP type and code. Defined below.
     * 
     */
    private UndeferrableValue<KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodeArgs> icmpTypeCode;

    public KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodeArgs icmpTypeCode() {
        if (icmpTypeCode == null) return null;
        return icmpTypeCode.getValue("KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArgs.icmpTypeCode");
    }

    /**
     * Range of ports the rule applies to. Defined below.
     * 
     */
    private UndeferrableValue<KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangeArgs> portRange;

    public KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangeArgs portRange() {
        if (portRange == null) return null;
        return portRange.getValue("KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArgs.portRange");
    }

    /**
     * Protocol number. A value of `1` means all the protocols.
     * 
     */
    private UndeferrableValue<String> protocol;

    public String protocol() {
        if (protocol == null) return null;
        return protocol.getValue("KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArgs.protocol");
    }

    /**
     * Indicates whether to `allow` or `deny` the traffic that matches the rule.
     * 
     */
    private UndeferrableValue<String> ruleAction;

    public String ruleAction() {
        if (ruleAction == null) return null;
        return ruleAction.getValue("KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArgs.ruleAction");
    }

    /**
     * Rule number for the entry. All the network ACL entries are processed in ascending order by rule number.
     * 
     */
    private UndeferrableValue<Integer> ruleNumber;

    public Integer ruleNumber() {
        if (ruleNumber == null) return null;
        return ruleNumber.getValue("KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArgs.ruleNumber");
    }

}
