// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.rds;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:rds/clusterActivityStream:ClusterActivityStream")
public final class ClusterActivityStreamArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Specifies whether the database activity stream includes engine-native audit fields. This option only applies to an Oracle DB instance. By default, no engine-native audit fields are included. Defaults `false`.
     * 
     */
    @PolicyResourceProperty(name="engineNativeAuditFieldsIncluded", flag="unknown_engineNativeAuditFieldsIncluded")
    private Boolean value_engineNativeAuditFieldsIncluded;
    private boolean unknown_engineNativeAuditFieldsIncluded;
    public Boolean engineNativeAuditFieldsIncluded() {
        if (!unknown_engineNativeAuditFieldsIncluded) return value_engineNativeAuditFieldsIncluded;
        throw new UndeferrableValueException("Value 'ClusterActivityStreamArgs.engineNativeAuditFieldsIncluded' is not present");
    }

    /**
     * The AWS KMS key identifier for encrypting messages in the database activity stream. The AWS KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key.
     * 
     */
    @PolicyResourceProperty(name="kmsKeyId", flag="unknown_kmsKeyId")
    private String value_kmsKeyId;
    private boolean unknown_kmsKeyId;
    public String kmsKeyId() {
        if (!unknown_kmsKeyId) return value_kmsKeyId;
        throw new UndeferrableValueException("Value 'ClusterActivityStreamArgs.kmsKeyId' is not present");
    }

    /**
     * Specifies the mode of the database activity stream. Database events such as a change or access generate an activity stream event. The database session can handle these events either synchronously or asynchronously. One of: `sync`, `async`.
     * 
     */
    @PolicyResourceProperty(name="mode", flag="unknown_mode")
    private String value_mode;
    private boolean unknown_mode;
    public String mode() {
        if (!unknown_mode) return value_mode;
        throw new UndeferrableValueException("Value 'ClusterActivityStreamArgs.mode' is not present");
    }

    /**
     * The Amazon Resource Name (ARN) of the DB cluster.
     * 
     */
    @PolicyResourceProperty(name="resourceArn", flag="unknown_resourceArn")
    private String value_resourceArn;
    private boolean unknown_resourceArn;
    public String resourceArn() {
        if (!unknown_resourceArn) return value_resourceArn;
        throw new UndeferrableValueException("Value 'ClusterActivityStreamArgs.resourceArn' is not present");
    }

}
