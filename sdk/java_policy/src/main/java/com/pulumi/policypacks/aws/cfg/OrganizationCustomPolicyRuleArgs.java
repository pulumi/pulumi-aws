// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.cfg;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:cfg/organizationCustomPolicyRule:OrganizationCustomPolicyRule")
public final class OrganizationCustomPolicyRuleArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * List of AWS account identifiers to exclude from the rule
     * 
     */
    private UndeferrableValue<List<String>> debugLogDeliveryAccounts;

    public List<String> debugLogDeliveryAccounts() {
        if (debugLogDeliveryAccounts == null) return null;
        return debugLogDeliveryAccounts.getValue("OrganizationCustomPolicyRuleArgs.debugLogDeliveryAccounts");
    }

    /**
     * Description of the rule
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("OrganizationCustomPolicyRuleArgs.description");
    }

    /**
     * List of AWS account identifiers to exclude from the rule
     * 
     */
    private UndeferrableValue<List<String>> excludedAccounts;

    public List<String> excludedAccounts() {
        if (excludedAccounts == null) return null;
        return excludedAccounts.getValue("OrganizationCustomPolicyRuleArgs.excludedAccounts");
    }

    /**
     * A string in JSON format that is passed to the AWS Config Rule Lambda Function
     * 
     */
    private UndeferrableValue<String> inputParameters;

    public String inputParameters() {
        if (inputParameters == null) return null;
        return inputParameters.getValue("OrganizationCustomPolicyRuleArgs.inputParameters");
    }

    /**
     * Maximum frequency with which AWS Config runs evaluations for a rule, if the rule is triggered at a periodic frequency. Defaults to `TwentyFour_Hours` for periodic frequency triggered rules. Valid values: `One_Hour`, `Three_Hours`, `Six_Hours`, `Twelve_Hours`, or `TwentyFour_Hours`.
     * 
     */
    private UndeferrableValue<String> maximumExecutionFrequency;

    public String maximumExecutionFrequency() {
        if (maximumExecutionFrequency == null) return null;
        return maximumExecutionFrequency.getValue("OrganizationCustomPolicyRuleArgs.maximumExecutionFrequency");
    }

    /**
     * name of the rule
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("OrganizationCustomPolicyRuleArgs.name");
    }

    /**
     * runtime system for your organization AWS Config Custom Policy rules
     * 
     */
    private UndeferrableValue<String> policyRuntime;

    public String policyRuntime() {
        if (policyRuntime == null) return null;
        return policyRuntime.getValue("OrganizationCustomPolicyRuleArgs.policyRuntime");
    }

    /**
     * policy definition containing the logic for your organization AWS Config Custom Policy rule
     * 
     */
    private UndeferrableValue<String> policyText;

    public String policyText() {
        if (policyText == null) return null;
        return policyText.getValue("OrganizationCustomPolicyRuleArgs.policyText");
    }

    /**
     * Identifier of the AWS resource to evaluate
     * 
     */
    private UndeferrableValue<String> resourceIdScope;

    public String resourceIdScope() {
        if (resourceIdScope == null) return null;
        return resourceIdScope.getValue("OrganizationCustomPolicyRuleArgs.resourceIdScope");
    }

    /**
     * List of types of AWS resources to evaluate
     * 
     */
    private UndeferrableValue<List<String>> resourceTypesScopes;

    public List<String> resourceTypesScopes() {
        if (resourceTypesScopes == null) return null;
        return resourceTypesScopes.getValue("OrganizationCustomPolicyRuleArgs.resourceTypesScopes");
    }

    /**
     * Tag key of AWS resources to evaluate
     * 
     */
    private UndeferrableValue<String> tagKeyScope;

    public String tagKeyScope() {
        if (tagKeyScope == null) return null;
        return tagKeyScope.getValue("OrganizationCustomPolicyRuleArgs.tagKeyScope");
    }

    /**
     * Tag value of AWS resources to evaluate
     * 
     */
    private UndeferrableValue<String> tagValueScope;

    public String tagValueScope() {
        if (tagValueScope == null) return null;
        return tagValueScope.getValue("OrganizationCustomPolicyRuleArgs.tagValueScope");
    }

    /**
     * List of notification types that trigger AWS Config to run an evaluation for the rule. Valid values: `ConfigurationItemChangeNotification`, `OversizedConfigurationItemChangeNotification`
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<List<String>> triggerTypes;

    public List<String> triggerTypes() {
        if (triggerTypes == null) return null;
        return triggerTypes.getValue("OrganizationCustomPolicyRuleArgs.triggerTypes");
    }

}
