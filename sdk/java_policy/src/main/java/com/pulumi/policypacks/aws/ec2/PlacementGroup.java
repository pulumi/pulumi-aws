// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ec2/placementGroup:PlacementGroup")
public final class PlacementGroup extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Amazon Resource Name (ARN) of the placement group.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'PlacementGroup.arn' is not present");
    }

    /**
     * The name of the placement group.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'PlacementGroup.name' is not present");
    }

    /**
     * The number of partitions to create in the
     * placement group.  Can only be specified when the `strategy` is set to
     * `partition`.  Valid values are 1 - 7 (default is `2`).
     * 
     */
    @PolicyResourceProperty(name="partitionCount", flag="unknown_partitionCount")
    private Integer value_partitionCount;
    private boolean unknown_partitionCount;
    public Integer partitionCount() {
        if (!unknown_partitionCount) return value_partitionCount;
        throw new UndeferrableValueException("Value 'PlacementGroup.partitionCount' is not present");
    }

    /**
     * The ID of the placement group.
     * 
     */
    @PolicyResourceProperty(name="placementGroupId", flag="unknown_placementGroupId")
    private String value_placementGroupId;
    private boolean unknown_placementGroupId;
    public String placementGroupId() {
        if (!unknown_placementGroupId) return value_placementGroupId;
        throw new UndeferrableValueException("Value 'PlacementGroup.placementGroupId' is not present");
    }

    /**
     * Determines how placement groups spread instances. Can only be used
     * when the `strategy` is set to `spread`. Can be `host` or `rack`. `host` can only be used for Outpost placement groups. Defaults to `rack`.
     * 
     */
    @PolicyResourceProperty(name="spreadLevel", flag="unknown_spreadLevel")
    private String value_spreadLevel;
    private boolean unknown_spreadLevel;
    public String spreadLevel() {
        if (!unknown_spreadLevel) return value_spreadLevel;
        throw new UndeferrableValueException("Value 'PlacementGroup.spreadLevel' is not present");
    }

    /**
     * The placement strategy. Can be `cluster`, `partition` or `spread`.
     * 
     */
    @PolicyResourceProperty(name="strategy", flag="unknown_strategy")
    private String value_strategy;
    private boolean unknown_strategy;
    public String strategy() {
        if (!unknown_strategy) return value_strategy;
        throw new UndeferrableValueException("Value 'PlacementGroup.strategy' is not present");
    }

    /**
     * Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'PlacementGroup.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'PlacementGroup.tagsAll' is not present");
    }

}
