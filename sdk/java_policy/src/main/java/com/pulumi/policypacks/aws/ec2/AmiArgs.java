// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.ec2.inputs.AmiEbsBlockDeviceArgs;
import com.pulumi.policypacks.aws.ec2.inputs.AmiEphemeralBlockDeviceArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ec2/ami:Ami")
public final class AmiArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Machine architecture for created instances. Defaults to `x86_64`.
     * 
     */
    private UndeferrableValue<String> architecture;

    public String architecture() {
        if (architecture == null) return null;
        return architecture.getValue("AmiArgs.architecture");
    }

    /**
     * Boot mode of the AMI. For more information, see [Boot modes](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-boot.html) in the Amazon Elastic Compute Cloud User Guide.
     * 
     */
    private UndeferrableValue<String> bootMode;

    public String bootMode() {
        if (bootMode == null) return null;
        return bootMode.getValue("AmiArgs.bootMode");
    }

    /**
     * Date and time to deprecate the AMI. If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
     * 
     */
    private UndeferrableValue<String> deprecationTime;

    public String deprecationTime() {
        if (deprecationTime == null) return null;
        return deprecationTime.getValue("AmiArgs.deprecationTime");
    }

    /**
     * Longer, human-readable description for the AMI.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("AmiArgs.description");
    }

    /**
     * Nested block describing an EBS block device that should be
     * attached to created instances. The structure of this block is described below.
     * 
     */
    private UndeferrableValue<List<AmiEbsBlockDeviceArgs>> ebsBlockDevices;

    public List<AmiEbsBlockDeviceArgs> ebsBlockDevices() {
        if (ebsBlockDevices == null) return null;
        return ebsBlockDevices.getValue("AmiArgs.ebsBlockDevices");
    }

    /**
     * Whether enhanced networking with ENA is enabled. Defaults to `false`.
     * 
     */
    private UndeferrableValue<Boolean> enaSupport;

    public Boolean enaSupport() {
        if (enaSupport == null) return null;
        return enaSupport.getValue("AmiArgs.enaSupport");
    }

    /**
     * Nested block describing an ephemeral block device that
     * should be attached to created instances. The structure of this block is described below.
     * 
     */
    private UndeferrableValue<List<AmiEphemeralBlockDeviceArgs>> ephemeralBlockDevices;

    public List<AmiEphemeralBlockDeviceArgs> ephemeralBlockDevices() {
        if (ephemeralBlockDevices == null) return null;
        return ephemeralBlockDevices.getValue("AmiArgs.ephemeralBlockDevices");
    }

    private UndeferrableValue<String> imageLocation;

    public String imageLocation() {
        if (imageLocation == null) return null;
        return imageLocation.getValue("AmiArgs.imageLocation");
    }

    /**
     * If EC2 instances started from this image should require the use of the Instance Metadata Service V2 (IMDSv2), set this argument to `v2.0`. For more information, see [Configure instance metadata options for new instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-IMDS-new-instances.html#configure-IMDS-new-instances-ami-configuration).
     * 
     */
    private UndeferrableValue<String> imdsSupport;

    public String imdsSupport() {
        if (imdsSupport == null) return null;
        return imdsSupport.getValue("AmiArgs.imdsSupport");
    }

    private UndeferrableValue<String> kernelId;

    public String kernelId() {
        if (kernelId == null) return null;
        return kernelId.getValue("AmiArgs.kernelId");
    }

    /**
     * Region-unique name for the AMI.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("AmiArgs.name");
    }

    private UndeferrableValue<String> ramdiskId;

    public String ramdiskId() {
        if (ramdiskId == null) return null;
        return ramdiskId.getValue("AmiArgs.ramdiskId");
    }

    /**
     * Name of the root device (for example, `/dev/sda1`, or `/dev/xvda`).
     * 
     */
    private UndeferrableValue<String> rootDeviceName;

    public String rootDeviceName() {
        if (rootDeviceName == null) return null;
        return rootDeviceName.getValue("AmiArgs.rootDeviceName");
    }

    private UndeferrableValue<String> sriovNetSupport;

    public String sriovNetSupport() {
        if (sriovNetSupport == null) return null;
        return sriovNetSupport.getValue("AmiArgs.sriovNetSupport");
    }

    /**
     * Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("AmiArgs.tags");
    }

    /**
     * If the image is configured for NitroTPM support, the value is `v2.0`. For more information, see [NitroTPM](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nitrotpm.html) in the Amazon Elastic Compute Cloud User Guide.
     * 
     */
    private UndeferrableValue<String> tpmSupport;

    public String tpmSupport() {
        if (tpmSupport == null) return null;
        return tpmSupport.getValue("AmiArgs.tpmSupport");
    }

    /**
     * Base64 representation of the non-volatile UEFI variable store.
     * 
     */
    private UndeferrableValue<String> uefiData;

    public String uefiData() {
        if (uefiData == null) return null;
        return uefiData.getValue("AmiArgs.uefiData");
    }

    /**
     * Keyword to choose what virtualization mode created instances
     * will use. Can be either &#34;paravirtual&#34; (the default) or &#34;hvm&#34;. The choice of virtualization type
     * changes the set of further arguments that are required, as described below.
     * 
     */
    private UndeferrableValue<String> virtualizationType;

    public String virtualizationType() {
        if (virtualizationType == null) return null;
        return virtualizationType.getValue("AmiArgs.virtualizationType");
    }

}
