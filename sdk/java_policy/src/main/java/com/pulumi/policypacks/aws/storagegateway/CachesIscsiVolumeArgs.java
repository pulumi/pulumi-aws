// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.storagegateway;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:storagegateway/cachesIscsiVolume:CachesIscsiVolume")
public final class CachesIscsiVolumeArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The Amazon Resource Name (ARN) of the gateway.
     * 
     */
    private UndeferrableValue<String> gatewayArn;

    public String gatewayArn() {
        if (gatewayArn == null) return null;
        return gatewayArn.getValue("CachesIscsiVolumeArgs.gatewayArn");
    }

    /**
     * Set to `true` to use Amazon S3 server side encryption with your own AWS KMS key, or `false` to use a key managed by Amazon S3.
     * 
     */
    private UndeferrableValue<Boolean> kmsEncrypted;

    public Boolean kmsEncrypted() {
        if (kmsEncrypted == null) return null;
        return kmsEncrypted.getValue("CachesIscsiVolumeArgs.kmsEncrypted");
    }

    /**
     * The Amazon Resource Name (ARN) of the AWS KMS key used for Amazon S3 server side encryption. Is required when `kms_encrypted` is set.
     * 
     */
    private UndeferrableValue<String> kmsKey;

    public String kmsKey() {
        if (kmsKey == null) return null;
        return kmsKey.getValue("CachesIscsiVolumeArgs.kmsKey");
    }

    /**
     * The network interface of the gateway on which to expose the iSCSI target. Only IPv4 addresses are accepted.
     * 
     */
    private UndeferrableValue<String> networkInterfaceId;

    public String networkInterfaceId() {
        if (networkInterfaceId == null) return null;
        return networkInterfaceId.getValue("CachesIscsiVolumeArgs.networkInterfaceId");
    }

    /**
     * The snapshot ID of the snapshot to restore as the new cached volumeE.g., `snap-1122aabb`.
     * 
     */
    private UndeferrableValue<String> snapshotId;

    public String snapshotId() {
        if (snapshotId == null) return null;
        return snapshotId.getValue("CachesIscsiVolumeArgs.snapshotId");
    }

    /**
     * The ARN for an existing volume. Specifying this ARN makes the new volume into an exact copy of the specified existing volume&#39;s latest recovery point. The `volume_size_in_bytes` value for this new volume must be equal to or larger than the size of the existing volume, in bytes.
     * 
     */
    private UndeferrableValue<String> sourceVolumeArn;

    public String sourceVolumeArn() {
        if (sourceVolumeArn == null) return null;
        return sourceVolumeArn.getValue("CachesIscsiVolumeArgs.sourceVolumeArn");
    }

    /**
     * Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("CachesIscsiVolumeArgs.tags");
    }

    /**
     * The name of the iSCSI target used by initiators to connect to the target and as a suffix for the target ARN. The target name must be unique across all volumes of a gateway.
     * 
     */
    private UndeferrableValue<String> targetName;

    public String targetName() {
        if (targetName == null) return null;
        return targetName.getValue("CachesIscsiVolumeArgs.targetName");
    }

    /**
     * The size of the volume in bytes.
     * 
     */
    private UndeferrableValue<Integer> volumeSizeInBytes;

    public Integer volumeSizeInBytes() {
        if (volumeSizeInBytes == null) return null;
        return volumeSizeInBytes.getValue("CachesIscsiVolumeArgs.volumeSizeInBytes");
    }

}
