// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.medialive.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.medialive.outputs.ChannelInputAttachmentAutomaticInputFailoverSettingsFailoverConditionFailoverConditionSettingsAudioSilenceSettings;
import com.pulumi.policypacks.aws.medialive.outputs.ChannelInputAttachmentAutomaticInputFailoverSettingsFailoverConditionFailoverConditionSettingsInputLossSettings;
import com.pulumi.policypacks.aws.medialive.outputs.ChannelInputAttachmentAutomaticInputFailoverSettingsFailoverConditionFailoverConditionSettingsVideoBlackSettings;
import javax.annotation.Nullable;


public final class ChannelInputAttachmentAutomaticInputFailoverSettingsFailoverConditionFailoverConditionSettings {

    /**
     * MediaLive will perform a failover if the specified audio selector is silent for the specified period. See Audio Silence Failover Settings for more details.
     * 
     */
    @PolicyResourceProperty(name="audioSilenceSettings", flag="unknown_audioSilenceSettings")
    private @Nullable ChannelInputAttachmentAutomaticInputFailoverSettingsFailoverConditionFailoverConditionSettingsAudioSilenceSettings value_audioSilenceSettings;
    private boolean unknown_audioSilenceSettings;
    public @Nullable ChannelInputAttachmentAutomaticInputFailoverSettingsFailoverConditionFailoverConditionSettingsAudioSilenceSettings audioSilenceSettings() {
        if (!unknown_audioSilenceSettings) return value_audioSilenceSettings;
        throw new UndeferrableValueException("Value 'ChannelInputAttachmentAutomaticInputFailoverSettingsFailoverConditionFailoverConditionSettings.audioSilenceSettings' is not present");
    }

    /**
     * MediaLive will perform a failover if content is not detected in this input for the specified period. See Input Loss Failover Settings for more details.
     * 
     */
    @PolicyResourceProperty(name="inputLossSettings", flag="unknown_inputLossSettings")
    private @Nullable ChannelInputAttachmentAutomaticInputFailoverSettingsFailoverConditionFailoverConditionSettingsInputLossSettings value_inputLossSettings;
    private boolean unknown_inputLossSettings;
    public @Nullable ChannelInputAttachmentAutomaticInputFailoverSettingsFailoverConditionFailoverConditionSettingsInputLossSettings inputLossSettings() {
        if (!unknown_inputLossSettings) return value_inputLossSettings;
        throw new UndeferrableValueException("Value 'ChannelInputAttachmentAutomaticInputFailoverSettingsFailoverConditionFailoverConditionSettings.inputLossSettings' is not present");
    }

    /**
     * MediaLive will perform a failover if content is considered black for the specified period. See Video Black Failover Settings for more details.
     * 
     */
    @PolicyResourceProperty(name="videoBlackSettings", flag="unknown_videoBlackSettings")
    private @Nullable ChannelInputAttachmentAutomaticInputFailoverSettingsFailoverConditionFailoverConditionSettingsVideoBlackSettings value_videoBlackSettings;
    private boolean unknown_videoBlackSettings;
    public @Nullable ChannelInputAttachmentAutomaticInputFailoverSettingsFailoverConditionFailoverConditionSettingsVideoBlackSettings videoBlackSettings() {
        if (!unknown_videoBlackSettings) return value_videoBlackSettings;
        throw new UndeferrableValueException("Value 'ChannelInputAttachmentAutomaticInputFailoverSettingsFailoverConditionFailoverConditionSettings.videoBlackSettings' is not present");
    }

}
