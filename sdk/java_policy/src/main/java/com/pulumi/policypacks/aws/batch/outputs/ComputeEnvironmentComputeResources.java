// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.batch.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.batch.outputs.ComputeEnvironmentComputeResourcesEc2Configuration;
import com.pulumi.policypacks.aws.batch.outputs.ComputeEnvironmentComputeResourcesLaunchTemplate;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


public final class ComputeEnvironmentComputeResources {

    /**
     * The allocation strategy to use for the compute resource in case not enough instances of the best fitting instance type can be allocated. For valid values, refer to the [AWS documentation](https://docs.aws.amazon.com/batch/latest/APIReference/API_ComputeResource.html#Batch-Type-ComputeResource-allocationStrategy). Defaults to `BEST_FIT`. This parameter isn&#39;t applicable to jobs running on Fargate resources, and shouldn&#39;t be specified.
     * 
     */
    private @Nullable UndeferrableValue<String> allocationStrategy;

    public @Nullable String allocationStrategy() {
        if (allocationStrategy == null) return null;
        return allocationStrategy.getValue("ComputeEnvironmentComputeResources.allocationStrategy");
    }

    /**
     * Integer of maximum percentage that a Spot Instance price can be when compared with the On-Demand price for that instance type before instances are launched. For example, if your bid percentage is 20% (`20`), then the Spot price must be below 20% of the current On-Demand price for that EC2 instance. If you leave this field empty, the default value is 100% of the On-Demand price. This parameter isn&#39;t applicable to jobs running on Fargate resources, and shouldn&#39;t be specified.
     * 
     */
    private @Nullable UndeferrableValue<Integer> bidPercentage;

    public @Nullable Integer bidPercentage() {
        if (bidPercentage == null) return null;
        return bidPercentage.getValue("ComputeEnvironmentComputeResources.bidPercentage");
    }

    /**
     * The desired number of EC2 vCPUS in the compute environment. This parameter isn&#39;t applicable to jobs running on Fargate resources, and shouldn&#39;t be specified.
     * 
     */
    private @Nullable UndeferrableValue<Integer> desiredVcpus;

    public @Nullable Integer desiredVcpus() {
        if (desiredVcpus == null) return null;
        return desiredVcpus.getValue("ComputeEnvironmentComputeResources.desiredVcpus");
    }

    /**
     * Provides information used to select Amazon Machine Images (AMIs) for EC2 instances in the compute environment. If Ec2Configuration isn&#39;t specified, the default is ECS_AL2. This parameter isn&#39;t applicable to jobs that are running on Fargate resources, and shouldn&#39;t be specified.
     * 
     */
    private @Nullable UndeferrableValue<List<ComputeEnvironmentComputeResourcesEc2Configuration>> ec2Configurations;

    public @Nullable List<ComputeEnvironmentComputeResourcesEc2Configuration> ec2Configurations() {
        if (ec2Configurations == null) return null;
        return ec2Configurations.getValue("ComputeEnvironmentComputeResources.ec2Configurations");
    }

    /**
     * The EC2 key pair that is used for instances launched in the compute environment. This parameter isn&#39;t applicable to jobs running on Fargate resources, and shouldn&#39;t be specified.
     * 
     */
    private @Nullable UndeferrableValue<String> ec2KeyPair;

    public @Nullable String ec2KeyPair() {
        if (ec2KeyPair == null) return null;
        return ec2KeyPair.getValue("ComputeEnvironmentComputeResources.ec2KeyPair");
    }

    /**
     * The Amazon Machine Image (AMI) ID used for instances launched in the compute environment. This parameter isn&#39;t applicable to jobs running on Fargate resources, and shouldn&#39;t be specified. (Deprecated, use `ec2_configuration` `image_id_override` instead)
     * 
     */
    private @Nullable UndeferrableValue<String> imageId;

    public @Nullable String imageId() {
        if (imageId == null) return null;
        return imageId.getValue("ComputeEnvironmentComputeResources.imageId");
    }

    /**
     * The Amazon ECS instance role applied to Amazon EC2 instances in a compute environment. This parameter isn&#39;t applicable to jobs running on Fargate resources, and shouldn&#39;t be specified.
     * 
     */
    private @Nullable UndeferrableValue<String> instanceRole;

    public @Nullable String instanceRole() {
        if (instanceRole == null) return null;
        return instanceRole.getValue("ComputeEnvironmentComputeResources.instanceRole");
    }

    /**
     * A list of instance types that may be launched. This parameter isn&#39;t applicable to jobs running on Fargate resources, and shouldn&#39;t be specified.
     * 
     */
    private @Nullable UndeferrableValue<List<String>> instanceTypes;

    public @Nullable List<String> instanceTypes() {
        if (instanceTypes == null) return null;
        return instanceTypes.getValue("ComputeEnvironmentComputeResources.instanceTypes");
    }

    /**
     * The launch template to use for your compute resources. See details below. This parameter isn&#39;t applicable to jobs running on Fargate resources, and shouldn&#39;t be specified.
     * 
     */
    private @Nullable UndeferrableValue<ComputeEnvironmentComputeResourcesLaunchTemplate> launchTemplate;

    public @Nullable ComputeEnvironmentComputeResourcesLaunchTemplate launchTemplate() {
        if (launchTemplate == null) return null;
        return launchTemplate.getValue("ComputeEnvironmentComputeResources.launchTemplate");
    }

    /**
     * The maximum number of EC2 vCPUs that an environment can reach.
     * 
     */
    private UndeferrableValue<Integer> maxVcpus;

    public Integer maxVcpus() {
        if (maxVcpus == null) return null;
        return maxVcpus.getValue("ComputeEnvironmentComputeResources.maxVcpus");
    }

    /**
     * The minimum number of EC2 vCPUs that an environment should maintain. For `EC2` or `SPOT` compute environments, if the parameter is not explicitly defined, a `0` default value will be set. This parameter isn&#39;t applicable to jobs running on Fargate resources, and shouldn&#39;t be specified.
     * 
     */
    private @Nullable UndeferrableValue<Integer> minVcpus;

    public @Nullable Integer minVcpus() {
        if (minVcpus == null) return null;
        return minVcpus.getValue("ComputeEnvironmentComputeResources.minVcpus");
    }

    /**
     * The Amazon EC2 placement group to associate with your compute resources.
     * 
     */
    private @Nullable UndeferrableValue<String> placementGroup;

    public @Nullable String placementGroup() {
        if (placementGroup == null) return null;
        return placementGroup.getValue("ComputeEnvironmentComputeResources.placementGroup");
    }

    /**
     * A list of EC2 security group that are associated with instances launched in the compute environment. This parameter is required for Fargate compute environments.
     * 
     */
    private @Nullable UndeferrableValue<List<String>> securityGroupIds;

    public @Nullable List<String> securityGroupIds() {
        if (securityGroupIds == null) return null;
        return securityGroupIds.getValue("ComputeEnvironmentComputeResources.securityGroupIds");
    }

    /**
     * The Amazon Resource Name (ARN) of the Amazon EC2 Spot Fleet IAM role applied to a SPOT compute environment. This parameter is required for SPOT compute environments. This parameter isn&#39;t applicable to jobs running on Fargate resources, and shouldn&#39;t be specified.
     * 
     */
    private @Nullable UndeferrableValue<String> spotIamFleetRole;

    public @Nullable String spotIamFleetRole() {
        if (spotIamFleetRole == null) return null;
        return spotIamFleetRole.getValue("ComputeEnvironmentComputeResources.spotIamFleetRole");
    }

    /**
     * A list of VPC subnets into which the compute resources are launched.
     * 
     */
    private UndeferrableValue<List<String>> subnets;

    public List<String> subnets() {
        if (subnets == null) return null;
        return subnets.getValue("ComputeEnvironmentComputeResources.subnets");
    }

    /**
     * Key-value pair tags to be applied to resources that are launched in the compute environment. This parameter isn&#39;t applicable to jobs running on Fargate resources, and shouldn&#39;t be specified.
     * 
     */
    private @Nullable UndeferrableValue<Map<String,String>> tags;

    public @Nullable Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("ComputeEnvironmentComputeResources.tags");
    }

    /**
     * The type of compute environment. Valid items are `EC2`, `SPOT`, `FARGATE` or `FARGATE_SPOT`.
     * 
     */
    private UndeferrableValue<String> type;

    public String type() {
        if (type == null) return null;
        return type.getValue("ComputeEnvironmentComputeResources.type");
    }

}
