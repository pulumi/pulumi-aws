// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.cloudformation;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.cloudformation.inputs.CloudFormationTypeLoggingConfigArgs;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:cloudformation/cloudFormationType:CloudFormationType")
public final class CloudFormationTypeArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Amazon Resource Name (ARN) of the IAM Role for CloudFormation to assume when invoking the extension. If your extension calls AWS APIs in any of its handlers, you must create an IAM execution role that includes the necessary permissions to call those AWS APIs, and provision that execution role in your account. When CloudFormation needs to invoke the extension handler, CloudFormation assumes this execution role to create a temporary session token, which it then passes to the extension handler, thereby supplying your extension with the appropriate credentials.
     * 
     */
    private UndeferrableValue<String> executionRoleArn;

    public String executionRoleArn() {
        if (executionRoleArn == null) return null;
        return executionRoleArn.getValue("CloudFormationTypeArgs.executionRoleArn");
    }

    /**
     * Configuration block containing logging configuration.
     * 
     */
    private UndeferrableValue<CloudFormationTypeLoggingConfigArgs> loggingConfig;

    public CloudFormationTypeLoggingConfigArgs loggingConfig() {
        if (loggingConfig == null) return null;
        return loggingConfig.getValue("CloudFormationTypeArgs.loggingConfig");
    }

    /**
     * URL to the S3 bucket containing the extension project package that contains the necessary files for the extension you want to register. Must begin with `s3://` or `https://`. For example, `s3://example-bucket/example-object`.
     * 
     */
    private UndeferrableValue<String> schemaHandlerPackage;

    public String schemaHandlerPackage() {
        if (schemaHandlerPackage == null) return null;
        return schemaHandlerPackage.getValue("CloudFormationTypeArgs.schemaHandlerPackage");
    }

    /**
     * CloudFormation Registry Type. For example, `RESOURCE` or `MODULE`.
     * 
     */
    private UndeferrableValue<String> type;

    public String type() {
        if (type == null) return null;
        return type.getValue("CloudFormationTypeArgs.type");
    }

    /**
     * CloudFormation Type name. For example, `ExampleCompany::ExampleService::ExampleResource`.
     * 
     */
    private UndeferrableValue<String> typeName;

    public String typeName() {
        if (typeName == null) return null;
        return typeName.getValue("CloudFormationTypeArgs.typeName");
    }

}
