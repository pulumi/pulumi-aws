// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.imagebuilder.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.imagebuilder.inputs.ImagePipelineWorkflowParameterArgs;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class ImagePipelineWorkflowArgs {

    /**
     * The action to take if the workflow fails. Must be one of `CONTINUE` or `ABORT`.
     * 
     */
    @PolicyResourceProperty(name="onFailure", flag="unknown_onFailure")
    private String value_onFailure;
    private boolean unknown_onFailure;
    public String onFailure() {
        if (!unknown_onFailure) return value_onFailure;
        throw new UndeferrableValueException("Value 'ImagePipelineWorkflowArgs.onFailure' is not present");
    }

    /**
     * The parallel group in which to run a test Workflow.
     * 
     */
    @PolicyResourceProperty(name="parallelGroup", flag="unknown_parallelGroup")
    private String value_parallelGroup;
    private boolean unknown_parallelGroup;
    public String parallelGroup() {
        if (!unknown_parallelGroup) return value_parallelGroup;
        throw new UndeferrableValueException("Value 'ImagePipelineWorkflowArgs.parallelGroup' is not present");
    }

    /**
     * Configuration block for the workflow parameters. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="parameters", flag="unknown_parameters")
    private List<ImagePipelineWorkflowParameterArgs> value_parameters;
    private boolean unknown_parameters;
    public List<ImagePipelineWorkflowParameterArgs> parameters() {
        if (!unknown_parameters) return value_parameters;
        throw new UndeferrableValueException("Value 'ImagePipelineWorkflowArgs.parameters' is not present");
    }

    /**
     * Amazon Resource Name (ARN) of the Image Builder Workflow.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="workflowArn", flag="unknown_workflowArn")
    private String value_workflowArn;
    private boolean unknown_workflowArn;
    public String workflowArn() {
        if (!unknown_workflowArn) return value_workflowArn;
        throw new UndeferrableValueException("Value 'ImagePipelineWorkflowArgs.workflowArn' is not present");
    }

}
