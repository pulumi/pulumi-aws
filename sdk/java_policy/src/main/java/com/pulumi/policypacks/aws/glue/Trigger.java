// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.glue;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.glue.TriggerAction;
import com.pulumi.policypacks.aws.glue.TriggerEventBatchingCondition;
import com.pulumi.policypacks.aws.glue.TriggerPredicate;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;


@PolicyResourceType(type="aws:glue/trigger:Trigger")
public final class Trigger extends com.pulumi.resources.PolicyResource {

    /**
     * List of actions initiated by this trigger when it fires. See Actions Below.
     * 
     */
    public List<TriggerAction> actions;



    /**
     * Amazon Resource Name (ARN) of Glue Trigger
     * 
     */
    public String arn;



    /**
     * A description of the new trigger.
     * 
     */
    public String description;



    /**
     * Start the trigger. Defaults to `true`.
     * 
     */
    public Boolean enabled;



    /**
     * Batch condition that must be met (specified number of events received or batch time window expired) before EventBridge event trigger fires. See Event Batching Condition.
     * 
     */
    public List<TriggerEventBatchingCondition> eventBatchingConditions;



    /**
     * The name of the trigger.
     * 
     */
    public String name;



    /**
     * A predicate to specify when the new trigger should fire. Required when trigger type is `CONDITIONAL`. See Predicate Below.
     * 
     */
    public TriggerPredicate predicate;



    /**
     * A cron expression used to specify the schedule. [Time-Based Schedules for Jobs and Crawlers](https://docs.aws.amazon.com/glue/latest/dg/monitor-data-warehouse-schedule.html)
     * 
     */
    public String schedule;



    /**
     * Set to true to start `SCHEDULED` and `CONDITIONAL` triggers when created. True is not supported for `ON_DEMAND` triggers.
     * 
     */
    public Boolean startOnCreation;



    /**
     * The current state of the trigger.
     * 
     */
    public String state;



    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



    /**
     * The type of trigger. Valid values are `CONDITIONAL`, `EVENT`, `ON_DEMAND`, and `SCHEDULED`.
     * 
     */
    public String type;



    /**
     * A workflow to which the trigger should be associated to. Every workflow graph (DAG) needs a starting trigger (`ON_DEMAND` or `SCHEDULED` type) and can contain multiple additional `CONDITIONAL` triggers.
     * 
     */
    public String workflowName;



}
