// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.m2;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.m2.inputs.ApplicationDefinitionArgs;
import com.pulumi.policypacks.aws.m2.inputs.ApplicationTimeoutsArgs;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:m2/application:Application")
public final class ApplicationArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The application definition for this application. You can specify either inline JSON or an S3 bucket location.
     * 
     */
    private UndeferrableValue<ApplicationDefinitionArgs> definition;

    public ApplicationDefinitionArgs definition() {
        if (definition == null) return null;
        return definition.getValue("ApplicationArgs.definition");
    }

    /**
     * Description of the application.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("ApplicationArgs.description");
    }

    /**
     * Engine type must be `microfocus | bluage`.
     * 
     */
    private UndeferrableValue<String> engineType;

    public String engineType() {
        if (engineType == null) return null;
        return engineType.getValue("ApplicationArgs.engineType");
    }

    /**
     * KMS Key to use for the Application.
     * 
     */
    private UndeferrableValue<String> kmsKeyId;

    public String kmsKeyId() {
        if (kmsKeyId == null) return null;
        return kmsKeyId.getValue("ApplicationArgs.kmsKeyId");
    }

    /**
     * Unique identifier of the application.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("ApplicationArgs.name");
    }

    /**
     * ARN of role for application to use to access AWS resources.
     * 
     */
    private UndeferrableValue<String> roleArn;

    public String roleArn() {
        if (roleArn == null) return null;
        return roleArn.getValue("ApplicationArgs.roleArn");
    }

    /**
     * Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("ApplicationArgs.tags");
    }

    private UndeferrableValue<ApplicationTimeoutsArgs> timeouts;

    public ApplicationTimeoutsArgs timeouts() {
        if (timeouts == null) return null;
        return timeouts.getValue("ApplicationArgs.timeouts");
    }

}
