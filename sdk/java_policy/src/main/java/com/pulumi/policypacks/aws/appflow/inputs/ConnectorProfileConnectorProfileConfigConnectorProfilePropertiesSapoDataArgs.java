// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appflow.inputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesArgs;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataArgs {

    /**
     * The location of the SAPOData resource.
     * 
     */
    private UndeferrableValue<String> applicationHostUrl;

    public String applicationHostUrl() {
        if (applicationHostUrl == null) return null;
        return applicationHostUrl.getValue("ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataArgs.applicationHostUrl");
    }

    /**
     * The application path to catalog service.
     * 
     */
    private UndeferrableValue<String> applicationServicePath;

    public String applicationServicePath() {
        if (applicationServicePath == null) return null;
        return applicationServicePath.getValue("ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataArgs.applicationServicePath");
    }

    /**
     * The client number for the client creating the connection.
     * 
     */
    private UndeferrableValue<String> clientNumber;

    public String clientNumber() {
        if (clientNumber == null) return null;
        return clientNumber.getValue("ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataArgs.clientNumber");
    }

    /**
     * The logon language of SAPOData instance.
     * 
     */
    private UndeferrableValue<String> logonLanguage;

    public String logonLanguage() {
        if (logonLanguage == null) return null;
        return logonLanguage.getValue("ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataArgs.logonLanguage");
    }

    /**
     * The SAPOData OAuth properties required for OAuth type authentication.
     * 
     */
    private UndeferrableValue<ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesArgs> oauthProperties;

    public ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthPropertiesArgs oauthProperties() {
        if (oauthProperties == null) return null;
        return oauthProperties.getValue("ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataArgs.oauthProperties");
    }

    /**
     * The port number of the SAPOData instance.
     * 
     */
    private UndeferrableValue<Integer> portNumber;

    public Integer portNumber() {
        if (portNumber == null) return null;
        return portNumber.getValue("ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataArgs.portNumber");
    }

    private UndeferrableValue<String> privateLinkServiceName;

    public String privateLinkServiceName() {
        if (privateLinkServiceName == null) return null;
        return privateLinkServiceName.getValue("ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataArgs.privateLinkServiceName");
    }

}
