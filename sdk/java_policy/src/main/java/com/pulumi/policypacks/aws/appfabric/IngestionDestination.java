// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appfabric;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.appfabric.outputs.IngestionDestinationDestinationConfiguration;
import com.pulumi.policypacks.aws.appfabric.outputs.IngestionDestinationProcessingConfiguration;
import com.pulumi.policypacks.aws.appfabric.outputs.IngestionDestinationTimeouts;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:appfabric/ingestionDestination:IngestionDestination")
public final class IngestionDestination extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The Amazon Resource Name (ARN) of the app bundle to use for the request.
     * 
     */
    @PolicyResourceProperty(name="appBundleArn", flag="unknown_appBundleArn")
    private String value_appBundleArn;
    private boolean unknown_appBundleArn;
    public String appBundleArn() {
        if (!unknown_appBundleArn) return value_appBundleArn;
        throw new UndeferrableValueException("Value 'IngestionDestination.appBundleArn' is not present");
    }

    /**
     * ARN of the Ingestion Destination.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'IngestionDestination.arn' is not present");
    }

    /**
     * Contains information about the destination of ingested data.
     * 
     */
    @PolicyResourceProperty(name="destinationConfiguration", flag="unknown_destinationConfiguration")
    private @Nullable IngestionDestinationDestinationConfiguration value_destinationConfiguration;
    private boolean unknown_destinationConfiguration;
    public @Nullable IngestionDestinationDestinationConfiguration destinationConfiguration() {
        if (!unknown_destinationConfiguration) return value_destinationConfiguration;
        throw new UndeferrableValueException("Value 'IngestionDestination.destinationConfiguration' is not present");
    }

    /**
     * The Amazon Resource Name (ARN) of the ingestion to use for the request.
     * 
     */
    @PolicyResourceProperty(name="ingestionArn", flag="unknown_ingestionArn")
    private String value_ingestionArn;
    private boolean unknown_ingestionArn;
    public String ingestionArn() {
        if (!unknown_ingestionArn) return value_ingestionArn;
        throw new UndeferrableValueException("Value 'IngestionDestination.ingestionArn' is not present");
    }

    /**
     * Contains information about how ingested data is processed.
     * 
     */
    @PolicyResourceProperty(name="processingConfiguration", flag="unknown_processingConfiguration")
    private @Nullable IngestionDestinationProcessingConfiguration value_processingConfiguration;
    private boolean unknown_processingConfiguration;
    public @Nullable IngestionDestinationProcessingConfiguration processingConfiguration() {
        if (!unknown_processingConfiguration) return value_processingConfiguration;
        throw new UndeferrableValueException("Value 'IngestionDestination.processingConfiguration' is not present");
    }

    /**
     * Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'IngestionDestination.tags' is not present");
    }

    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'IngestionDestination.tagsAll' is not present");
    }

    @PolicyResourceProperty(name="timeouts", flag="unknown_timeouts")
    private @Nullable IngestionDestinationTimeouts value_timeouts;
    private boolean unknown_timeouts;
    public @Nullable IngestionDestinationTimeouts timeouts() {
        if (!unknown_timeouts) return value_timeouts;
        throw new UndeferrableValueException("Value 'IngestionDestination.timeouts' is not present");
    }

}
