// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.eks.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.eks.inputs.ClusterKubernetesNetworkConfigElasticLoadBalancingArgs;
import java.lang.String;
import javax.annotation.Nullable;


public final class ClusterKubernetesNetworkConfigArgs {

    /**
     * Configuration block with elastic load balancing configuration for the cluster. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="elasticLoadBalancing", flag="unknown_elasticLoadBalancing")
    private ClusterKubernetesNetworkConfigElasticLoadBalancingArgs value_elasticLoadBalancing;
    private boolean unknown_elasticLoadBalancing;
    public ClusterKubernetesNetworkConfigElasticLoadBalancingArgs elasticLoadBalancing() {
        if (!unknown_elasticLoadBalancing) return value_elasticLoadBalancing;
        throw new UndeferrableValueException("Value 'ClusterKubernetesNetworkConfigArgs.elasticLoadBalancing' is not present");
    }

    /**
     * The IP family used to assign Kubernetes pod and service addresses. Valid values are `ipv4` (default) and `ipv6`. You can only specify an IP family when you create a cluster, changing this value will force a new cluster to be created.
     * 
     */
    @PolicyResourceProperty(name="ipFamily", flag="unknown_ipFamily")
    private String value_ipFamily;
    private boolean unknown_ipFamily;
    public String ipFamily() {
        if (!unknown_ipFamily) return value_ipFamily;
        throw new UndeferrableValueException("Value 'ClusterKubernetesNetworkConfigArgs.ipFamily' is not present");
    }

    /**
     * The CIDR block to assign Kubernetes pod and service IP addresses from. If you don&#39;t specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks. We recommend that you specify a block that does not overlap with resources in other networks that are peered or connected to your VPC. You can only specify a custom CIDR block when you create a cluster, changing this value will force a new cluster to be created. The block must meet the following requirements:
     * 
     * * Within one of the following private IP address blocks: 10.0.0.0/8, 172.16.0.0/12, or 192.168.0.0/16.
     * 
     * * Doesn&#39;t overlap with any CIDR block assigned to the VPC that you selected for VPC.
     * 
     * * Between /24 and /12.
     * 
     */
    @PolicyResourceProperty(name="serviceIpv4Cidr", flag="unknown_serviceIpv4Cidr")
    private String value_serviceIpv4Cidr;
    private boolean unknown_serviceIpv4Cidr;
    public String serviceIpv4Cidr() {
        if (!unknown_serviceIpv4Cidr) return value_serviceIpv4Cidr;
        throw new UndeferrableValueException("Value 'ClusterKubernetesNetworkConfigArgs.serviceIpv4Cidr' is not present");
    }

    /**
     * The CIDR block that Kubernetes pod and service IP addresses are assigned from if you specify `ipv6` for `ip_family` when you create the cluster. Kubernetes assigns service addresses from the unique local address range (fc00::/7) because you can&#39;t specify a custom IPv6 CIDR block when you create the cluster.
     * 
     */
    @PolicyResourceProperty(name="serviceIpv6Cidr", flag="unknown_serviceIpv6Cidr")
    private String value_serviceIpv6Cidr;
    private boolean unknown_serviceIpv6Cidr;
    public String serviceIpv6Cidr() {
        if (!unknown_serviceIpv6Cidr) return value_serviceIpv6Cidr;
        throw new UndeferrableValueException("Value 'ClusterKubernetesNetworkConfigArgs.serviceIpv6Cidr' is not present");
    }

}
