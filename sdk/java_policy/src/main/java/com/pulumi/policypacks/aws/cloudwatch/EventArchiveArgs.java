// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.cloudwatch;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:cloudwatch/eventArchive:EventArchive")
public final class EventArchiveArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The description of the new event archive.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("EventArchiveArgs.description");
    }

    /**
     * Instructs the new event archive to only capture events matched by this pattern. By default, it attempts to archive every event received in the `event_source_arn`.
     * 
     */
    private UndeferrableValue<String> eventPattern;

    public String eventPattern() {
        if (eventPattern == null) return null;
        return eventPattern.getValue("EventArchiveArgs.eventPattern");
    }

    /**
     * Event bus source ARN from where these events should be archived.
     * 
     */
    private UndeferrableValue<String> eventSourceArn;

    public String eventSourceArn() {
        if (eventSourceArn == null) return null;
        return eventSourceArn.getValue("EventArchiveArgs.eventSourceArn");
    }

    /**
     * The name of the new event archive. The archive name cannot exceed 48 characters.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("EventArchiveArgs.name");
    }

    /**
     * The maximum number of days to retain events in the new event archive. By default, it archives indefinitely.
     * 
     */
    private UndeferrableValue<Integer> retentionDays;

    public Integer retentionDays() {
        if (retentionDays == null) return null;
        return retentionDays.getValue("EventArchiveArgs.retentionDays");
    }

}
