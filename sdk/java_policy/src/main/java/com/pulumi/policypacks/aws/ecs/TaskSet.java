// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ecs;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.ecs.TaskSetCapacityProviderStrategy;
import com.pulumi.policypacks.aws.ecs.TaskSetLoadBalancer;
import com.pulumi.policypacks.aws.ecs.TaskSetNetworkConfiguration;
import com.pulumi.policypacks.aws.ecs.TaskSetScale;
import com.pulumi.policypacks.aws.ecs.TaskSetServiceRegistries;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;


@PolicyResourceType(type="aws:ecs/taskSet:TaskSet")
public final class TaskSet extends com.pulumi.resources.PolicyResource {

    /**
     * The Amazon Resource Name (ARN) that identifies the task set.
     * 
     */
    public String arn;



    /**
     * The capacity provider strategy to use for the service. Can be one or more.  Defined below.
     * 
     */
    public List<TaskSetCapacityProviderStrategy> capacityProviderStrategies;



    /**
     * The short name or ARN of the cluster that hosts the service to create the task set in.
     * 
     */
    public String cluster;



    /**
     * The external ID associated with the task set.
     * 
     */
    public String externalId;



    /**
     * Whether to allow deleting the task set without waiting for scaling down to 0. You can force a task set to delete even if it&#39;s in the process of scaling a resource. Normally, the provider drains all the tasks before deleting the task set. This bypasses that behavior and potentially leaves resources dangling.
     * 
     */
    public Boolean forceDelete;



    /**
     * The launch type on which to run your service. The valid values are `EC2`, `FARGATE`, and `EXTERNAL`. Defaults to `EC2`.
     * 
     */
    public String launchType;



    /**
     * Details on load balancers that are used with a task set. Detailed below.
     * 
     */
    public List<TaskSetLoadBalancer> loadBalancers;



    /**
     * The network configuration for the service. This parameter is required for task definitions that use the `awsvpc` network mode to receive their own Elastic Network Interface, and it is not supported for other network modes. Detailed below.
     * 
     */
    public TaskSetNetworkConfiguration networkConfiguration;



    /**
     * The platform version on which to run your service. Only applicable for `launch_type` set to `FARGATE`. Defaults to `LATEST`. More information about Fargate platform versions can be found in the [AWS ECS User Guide](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html).
     * 
     */
    public String platformVersion;



    /**
     * A floating-point percentage of the desired number of tasks to place and keep running in the task set. Detailed below.
     * 
     */
    public TaskSetScale scale;



    /**
     * The short name or ARN of the ECS service.
     * 
     */
    public String service;



    /**
     * The service discovery registries for the service. The maximum number of `service_registries` blocks is `1`. Detailed below.
     * 
     */
    public TaskSetServiceRegistries serviceRegistries;



    /**
     * The stability status. This indicates whether the task set has reached a steady state.
     * 
     */
    public String stabilityStatus;



    /**
     * The status of the task set.
     * 
     */
    public String status;



    /**
     * A map of tags to assign to the file system. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level. If you have set `copy_tags_to_backups` to true, and you specify one or more tags, no existing file system tags are copied from the file system to the backup.
     * 
     */
    public Map<String,String> tags;



    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



    /**
     * The family and revision (`family:revision`) or full ARN of the task definition that you want to run in your service.
     * 
     * The following arguments are optional:
     * 
     */
    public String taskDefinition;



    /**
     * The ID of the task set.
     * 
     */
    public String taskSetId;



    /**
     * Whether the provider should wait until the task set has reached `STEADY_STATE`.
     * 
     */
    public Boolean waitUntilStable;



    /**
     * Wait timeout for task set to reach `STEADY_STATE`. Valid time units include `ns`, `us` (or `Âµs`), `ms`, `s`, `m`, and `h`. Default `10m`.
     * 
     */
    public String waitUntilStableTimeout;



}
