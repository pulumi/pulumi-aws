// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.securityhub.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersAwsAccountId;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersCompanyName;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersComplianceStatus;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersConfidence;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersCreatedAt;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersCriticality;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersDescription;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersFindingProviderFieldsConfidence;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersFindingProviderFieldsCriticality;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersFindingProviderFieldsRelatedFindingsId;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersFindingProviderFieldsRelatedFindingsProductArn;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersFindingProviderFieldsSeverityLabel;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersFindingProviderFieldsSeverityOriginal;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersFindingProviderFieldsType;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersFirstObservedAt;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersGeneratorId;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersId;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersKeyword;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersLastObservedAt;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersMalwareName;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersMalwarePath;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersMalwareState;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersMalwareType;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersNetworkDestinationDomain;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersNetworkDestinationIpv4;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersNetworkDestinationIpv6;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersNetworkDestinationPort;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersNetworkDirection;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersNetworkProtocol;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersNetworkSourceDomain;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersNetworkSourceIpv4;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersNetworkSourceIpv6;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersNetworkSourceMac;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersNetworkSourcePort;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersNoteText;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersNoteUpdatedAt;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersNoteUpdatedBy;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersProcessLaunchedAt;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersProcessName;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersProcessParentPid;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersProcessPath;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersProcessPid;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersProcessTerminatedAt;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersProductArn;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersProductField;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersProductName;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersRecommendationText;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersRecordState;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersRelatedFindingsId;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersRelatedFindingsProductArn;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersResourceAwsEc2InstanceIamInstanceProfileArn;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersResourceAwsEc2InstanceImageId;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersResourceAwsEc2InstanceIpv4Address;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersResourceAwsEc2InstanceIpv6Address;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersResourceAwsEc2InstanceKeyName;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersResourceAwsEc2InstanceLaunchedAt;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersResourceAwsEc2InstanceSubnetId;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersResourceAwsEc2InstanceType;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersResourceAwsEc2InstanceVpcId;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersResourceAwsIamAccessKeyCreatedAt;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersResourceAwsIamAccessKeyStatus;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersResourceAwsIamAccessKeyUserName;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersResourceAwsS3BucketOwnerId;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersResourceAwsS3BucketOwnerName;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersResourceContainerImageId;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersResourceContainerImageName;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersResourceContainerLaunchedAt;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersResourceContainerName;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersResourceDetailsOther;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersResourceId;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersResourcePartition;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersResourceRegion;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersResourceTag;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersResourceType;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersSeverityLabel;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersSourceUrl;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersThreatIntelIndicatorCategory;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersThreatIntelIndicatorLastObservedAt;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersThreatIntelIndicatorSource;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersThreatIntelIndicatorSourceUrl;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersThreatIntelIndicatorType;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersThreatIntelIndicatorValue;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersTitle;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersType;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersUpdatedAt;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersUserDefinedValue;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersVerificationState;
import com.pulumi.policypacks.aws.securityhub.outputs.InsightFiltersWorkflowStatus;
import java.util.List;
import javax.annotation.Nullable;


public final class InsightFilters {

    /**
     * AWS account ID that a finding is generated in. See String_Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersAwsAccountId>> awsAccountIds;

    public @Nullable List<InsightFiltersAwsAccountId> awsAccountIds() {
        if (awsAccountIds == null) return null;
        return awsAccountIds.getValue("InsightFilters.awsAccountIds");
    }

    /**
     * The name of the findings provider (company) that owns the solution (product) that generates findings. See String_Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersCompanyName>> companyNames;

    public @Nullable List<InsightFiltersCompanyName> companyNames() {
        if (companyNames == null) return null;
        return companyNames.getValue("InsightFilters.companyNames");
    }

    /**
     * Exclusive to findings that are generated as the result of a check run against a specific rule in a supported standard, such as CIS AWS Foundations. Contains security standard-related finding details. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersComplianceStatus>> complianceStatuses;

    public @Nullable List<InsightFiltersComplianceStatus> complianceStatuses() {
        if (complianceStatuses == null) return null;
        return complianceStatuses.getValue("InsightFilters.complianceStatuses");
    }

    /**
     * A finding&#39;s confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify. Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence. See Number Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersConfidence>> confidences;

    public @Nullable List<InsightFiltersConfidence> confidences() {
        if (confidences == null) return null;
        return confidences.getValue("InsightFilters.confidences");
    }

    /**
     * An ISO8601-formatted timestamp that indicates when the security-findings provider captured the potential security issue that a finding captured. See Date Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersCreatedAt>> createdAts;

    public @Nullable List<InsightFiltersCreatedAt> createdAts() {
        if (createdAts == null) return null;
        return createdAts.getValue("InsightFilters.createdAts");
    }

    /**
     * The level of importance assigned to the resources associated with the finding. A score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources. See Number Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersCriticality>> criticalities;

    public @Nullable List<InsightFiltersCriticality> criticalities() {
        if (criticalities == null) return null;
        return criticalities.getValue("InsightFilters.criticalities");
    }

    /**
     * A finding&#39;s description. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersDescription>> descriptions;

    public @Nullable List<InsightFiltersDescription> descriptions() {
        if (descriptions == null) return null;
        return descriptions.getValue("InsightFilters.descriptions");
    }

    /**
     * The finding provider value for the finding confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify. Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence. See Number Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersFindingProviderFieldsConfidence>> findingProviderFieldsConfidences;

    public @Nullable List<InsightFiltersFindingProviderFieldsConfidence> findingProviderFieldsConfidences() {
        if (findingProviderFieldsConfidences == null) return null;
        return findingProviderFieldsConfidences.getValue("InsightFilters.findingProviderFieldsConfidences");
    }

    /**
     * The finding provider value for the level of importance assigned to the resources associated with the findings. A score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources. See Number Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersFindingProviderFieldsCriticality>> findingProviderFieldsCriticalities;

    public @Nullable List<InsightFiltersFindingProviderFieldsCriticality> findingProviderFieldsCriticalities() {
        if (findingProviderFieldsCriticalities == null) return null;
        return findingProviderFieldsCriticalities.getValue("InsightFilters.findingProviderFieldsCriticalities");
    }

    /**
     * The finding identifier of a related finding that is identified by the finding provider. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersFindingProviderFieldsRelatedFindingsId>> findingProviderFieldsRelatedFindingsIds;

    public @Nullable List<InsightFiltersFindingProviderFieldsRelatedFindingsId> findingProviderFieldsRelatedFindingsIds() {
        if (findingProviderFieldsRelatedFindingsIds == null) return null;
        return findingProviderFieldsRelatedFindingsIds.getValue("InsightFilters.findingProviderFieldsRelatedFindingsIds");
    }

    /**
     * The ARN of the solution that generated a related finding that is identified by the finding provider. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersFindingProviderFieldsRelatedFindingsProductArn>> findingProviderFieldsRelatedFindingsProductArns;

    public @Nullable List<InsightFiltersFindingProviderFieldsRelatedFindingsProductArn> findingProviderFieldsRelatedFindingsProductArns() {
        if (findingProviderFieldsRelatedFindingsProductArns == null) return null;
        return findingProviderFieldsRelatedFindingsProductArns.getValue("InsightFilters.findingProviderFieldsRelatedFindingsProductArns");
    }

    /**
     * The finding provider value for the severity label. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersFindingProviderFieldsSeverityLabel>> findingProviderFieldsSeverityLabels;

    public @Nullable List<InsightFiltersFindingProviderFieldsSeverityLabel> findingProviderFieldsSeverityLabels() {
        if (findingProviderFieldsSeverityLabels == null) return null;
        return findingProviderFieldsSeverityLabels.getValue("InsightFilters.findingProviderFieldsSeverityLabels");
    }

    /**
     * The finding provider&#39;s original value for the severity. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersFindingProviderFieldsSeverityOriginal>> findingProviderFieldsSeverityOriginals;

    public @Nullable List<InsightFiltersFindingProviderFieldsSeverityOriginal> findingProviderFieldsSeverityOriginals() {
        if (findingProviderFieldsSeverityOriginals == null) return null;
        return findingProviderFieldsSeverityOriginals.getValue("InsightFilters.findingProviderFieldsSeverityOriginals");
    }

    /**
     * One or more finding types that the finding provider assigned to the finding. Uses the format of `namespace/category/classifier` that classify a finding. Valid namespace values include: `Software and Configuration Checks`, `TTPs`, `Effects`, `Unusual Behaviors`, and `Sensitive Data Identifications`. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersFindingProviderFieldsType>> findingProviderFieldsTypes;

    public @Nullable List<InsightFiltersFindingProviderFieldsType> findingProviderFieldsTypes() {
        if (findingProviderFieldsTypes == null) return null;
        return findingProviderFieldsTypes.getValue("InsightFilters.findingProviderFieldsTypes");
    }

    /**
     * An ISO8601-formatted timestamp that indicates when the security-findings provider first observed the potential security issue that a finding captured. See Date Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersFirstObservedAt>> firstObservedAts;

    public @Nullable List<InsightFiltersFirstObservedAt> firstObservedAts() {
        if (firstObservedAts == null) return null;
        return firstObservedAts.getValue("InsightFilters.firstObservedAts");
    }

    /**
     * The identifier for the solution-specific component (a discrete unit of logic) that generated a finding. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersGeneratorId>> generatorIds;

    public @Nullable List<InsightFiltersGeneratorId> generatorIds() {
        if (generatorIds == null) return null;
        return generatorIds.getValue("InsightFilters.generatorIds");
    }

    /**
     * The security findings provider-specific identifier for a finding. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersId>> ids;

    public @Nullable List<InsightFiltersId> ids() {
        if (ids == null) return null;
        return ids.getValue("InsightFilters.ids");
    }

    /**
     * A keyword for a finding. See Keyword Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersKeyword>> keywords;

    public @Nullable List<InsightFiltersKeyword> keywords() {
        if (keywords == null) return null;
        return keywords.getValue("InsightFilters.keywords");
    }

    /**
     * An ISO8601-formatted timestamp that indicates when the security-findings provider most recently observed the potential security issue that a finding captured. See Date Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersLastObservedAt>> lastObservedAts;

    public @Nullable List<InsightFiltersLastObservedAt> lastObservedAts() {
        if (lastObservedAts == null) return null;
        return lastObservedAts.getValue("InsightFilters.lastObservedAts");
    }

    /**
     * The name of the malware that was observed. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersMalwareName>> malwareNames;

    public @Nullable List<InsightFiltersMalwareName> malwareNames() {
        if (malwareNames == null) return null;
        return malwareNames.getValue("InsightFilters.malwareNames");
    }

    /**
     * The filesystem path of the malware that was observed. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersMalwarePath>> malwarePaths;

    public @Nullable List<InsightFiltersMalwarePath> malwarePaths() {
        if (malwarePaths == null) return null;
        return malwarePaths.getValue("InsightFilters.malwarePaths");
    }

    /**
     * The state of the malware that was observed. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersMalwareState>> malwareStates;

    public @Nullable List<InsightFiltersMalwareState> malwareStates() {
        if (malwareStates == null) return null;
        return malwareStates.getValue("InsightFilters.malwareStates");
    }

    /**
     * The type of the malware that was observed. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersMalwareType>> malwareTypes;

    public @Nullable List<InsightFiltersMalwareType> malwareTypes() {
        if (malwareTypes == null) return null;
        return malwareTypes.getValue("InsightFilters.malwareTypes");
    }

    /**
     * The destination domain of network-related information about a finding. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersNetworkDestinationDomain>> networkDestinationDomains;

    public @Nullable List<InsightFiltersNetworkDestinationDomain> networkDestinationDomains() {
        if (networkDestinationDomains == null) return null;
        return networkDestinationDomains.getValue("InsightFilters.networkDestinationDomains");
    }

    /**
     * The destination IPv4 address of network-related information about a finding. See Ip Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersNetworkDestinationIpv4>> networkDestinationIpv4s;

    public @Nullable List<InsightFiltersNetworkDestinationIpv4> networkDestinationIpv4s() {
        if (networkDestinationIpv4s == null) return null;
        return networkDestinationIpv4s.getValue("InsightFilters.networkDestinationIpv4s");
    }

    /**
     * The destination IPv6 address of network-related information about a finding. See Ip Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersNetworkDestinationIpv6>> networkDestinationIpv6s;

    public @Nullable List<InsightFiltersNetworkDestinationIpv6> networkDestinationIpv6s() {
        if (networkDestinationIpv6s == null) return null;
        return networkDestinationIpv6s.getValue("InsightFilters.networkDestinationIpv6s");
    }

    /**
     * The destination port of network-related information about a finding. See Number Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersNetworkDestinationPort>> networkDestinationPorts;

    public @Nullable List<InsightFiltersNetworkDestinationPort> networkDestinationPorts() {
        if (networkDestinationPorts == null) return null;
        return networkDestinationPorts.getValue("InsightFilters.networkDestinationPorts");
    }

    /**
     * Indicates the direction of network traffic associated with a finding. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersNetworkDirection>> networkDirections;

    public @Nullable List<InsightFiltersNetworkDirection> networkDirections() {
        if (networkDirections == null) return null;
        return networkDirections.getValue("InsightFilters.networkDirections");
    }

    /**
     * The protocol of network-related information about a finding. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersNetworkProtocol>> networkProtocols;

    public @Nullable List<InsightFiltersNetworkProtocol> networkProtocols() {
        if (networkProtocols == null) return null;
        return networkProtocols.getValue("InsightFilters.networkProtocols");
    }

    /**
     * The source domain of network-related information about a finding. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersNetworkSourceDomain>> networkSourceDomains;

    public @Nullable List<InsightFiltersNetworkSourceDomain> networkSourceDomains() {
        if (networkSourceDomains == null) return null;
        return networkSourceDomains.getValue("InsightFilters.networkSourceDomains");
    }

    /**
     * The source IPv4 address of network-related information about a finding. See Ip Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersNetworkSourceIpv4>> networkSourceIpv4s;

    public @Nullable List<InsightFiltersNetworkSourceIpv4> networkSourceIpv4s() {
        if (networkSourceIpv4s == null) return null;
        return networkSourceIpv4s.getValue("InsightFilters.networkSourceIpv4s");
    }

    /**
     * The source IPv6 address of network-related information about a finding. See Ip Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersNetworkSourceIpv6>> networkSourceIpv6s;

    public @Nullable List<InsightFiltersNetworkSourceIpv6> networkSourceIpv6s() {
        if (networkSourceIpv6s == null) return null;
        return networkSourceIpv6s.getValue("InsightFilters.networkSourceIpv6s");
    }

    /**
     * The source media access control (MAC) address of network-related information about a finding. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersNetworkSourceMac>> networkSourceMacs;

    public @Nullable List<InsightFiltersNetworkSourceMac> networkSourceMacs() {
        if (networkSourceMacs == null) return null;
        return networkSourceMacs.getValue("InsightFilters.networkSourceMacs");
    }

    /**
     * The source port of network-related information about a finding. See Number Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersNetworkSourcePort>> networkSourcePorts;

    public @Nullable List<InsightFiltersNetworkSourcePort> networkSourcePorts() {
        if (networkSourcePorts == null) return null;
        return networkSourcePorts.getValue("InsightFilters.networkSourcePorts");
    }

    /**
     * The text of a note. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersNoteText>> noteTexts;

    public @Nullable List<InsightFiltersNoteText> noteTexts() {
        if (noteTexts == null) return null;
        return noteTexts.getValue("InsightFilters.noteTexts");
    }

    /**
     * The timestamp of when the note was updated. See Date Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersNoteUpdatedAt>> noteUpdatedAts;

    public @Nullable List<InsightFiltersNoteUpdatedAt> noteUpdatedAts() {
        if (noteUpdatedAts == null) return null;
        return noteUpdatedAts.getValue("InsightFilters.noteUpdatedAts");
    }

    /**
     * The principal that created a note. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersNoteUpdatedBy>> noteUpdatedBies;

    public @Nullable List<InsightFiltersNoteUpdatedBy> noteUpdatedBies() {
        if (noteUpdatedBies == null) return null;
        return noteUpdatedBies.getValue("InsightFilters.noteUpdatedBies");
    }

    /**
     * The date/time that the process was launched. See Date Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersProcessLaunchedAt>> processLaunchedAts;

    public @Nullable List<InsightFiltersProcessLaunchedAt> processLaunchedAts() {
        if (processLaunchedAts == null) return null;
        return processLaunchedAts.getValue("InsightFilters.processLaunchedAts");
    }

    /**
     * The name of the process. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersProcessName>> processNames;

    public @Nullable List<InsightFiltersProcessName> processNames() {
        if (processNames == null) return null;
        return processNames.getValue("InsightFilters.processNames");
    }

    /**
     * The parent process ID. See Number Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersProcessParentPid>> processParentPids;

    public @Nullable List<InsightFiltersProcessParentPid> processParentPids() {
        if (processParentPids == null) return null;
        return processParentPids.getValue("InsightFilters.processParentPids");
    }

    /**
     * The path to the process executable. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersProcessPath>> processPaths;

    public @Nullable List<InsightFiltersProcessPath> processPaths() {
        if (processPaths == null) return null;
        return processPaths.getValue("InsightFilters.processPaths");
    }

    /**
     * The process ID. See Number Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersProcessPid>> processPids;

    public @Nullable List<InsightFiltersProcessPid> processPids() {
        if (processPids == null) return null;
        return processPids.getValue("InsightFilters.processPids");
    }

    /**
     * The date/time that the process was terminated. See Date Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersProcessTerminatedAt>> processTerminatedAts;

    public @Nullable List<InsightFiltersProcessTerminatedAt> processTerminatedAts() {
        if (processTerminatedAts == null) return null;
        return processTerminatedAts.getValue("InsightFilters.processTerminatedAts");
    }

    /**
     * The ARN generated by Security Hub that uniquely identifies a third-party company (security findings provider) after this provider&#39;s product (solution that generates findings) is registered with Security Hub. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersProductArn>> productArns;

    public @Nullable List<InsightFiltersProductArn> productArns() {
        if (productArns == null) return null;
        return productArns.getValue("InsightFilters.productArns");
    }

    /**
     * A data type where security-findings providers can include additional solution-specific details that aren&#39;t part of the defined `AwsSecurityFinding` format. See Map Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersProductField>> productFields;

    public @Nullable List<InsightFiltersProductField> productFields() {
        if (productFields == null) return null;
        return productFields.getValue("InsightFilters.productFields");
    }

    /**
     * The name of the solution (product) that generates findings. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersProductName>> productNames;

    public @Nullable List<InsightFiltersProductName> productNames() {
        if (productNames == null) return null;
        return productNames.getValue("InsightFilters.productNames");
    }

    /**
     * The recommendation of what to do about the issue described in a finding. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersRecommendationText>> recommendationTexts;

    public @Nullable List<InsightFiltersRecommendationText> recommendationTexts() {
        if (recommendationTexts == null) return null;
        return recommendationTexts.getValue("InsightFilters.recommendationTexts");
    }

    /**
     * The updated record state for the finding. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersRecordState>> recordStates;

    public @Nullable List<InsightFiltersRecordState> recordStates() {
        if (recordStates == null) return null;
        return recordStates.getValue("InsightFilters.recordStates");
    }

    /**
     * The solution-generated identifier for a related finding. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersRelatedFindingsId>> relatedFindingsIds;

    public @Nullable List<InsightFiltersRelatedFindingsId> relatedFindingsIds() {
        if (relatedFindingsIds == null) return null;
        return relatedFindingsIds.getValue("InsightFilters.relatedFindingsIds");
    }

    /**
     * The ARN of the solution that generated a related finding. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersRelatedFindingsProductArn>> relatedFindingsProductArns;

    public @Nullable List<InsightFiltersRelatedFindingsProductArn> relatedFindingsProductArns() {
        if (relatedFindingsProductArns == null) return null;
        return relatedFindingsProductArns.getValue("InsightFilters.relatedFindingsProductArns");
    }

    /**
     * The IAM profile ARN of the instance. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersResourceAwsEc2InstanceIamInstanceProfileArn>> resourceAwsEc2InstanceIamInstanceProfileArns;

    public @Nullable List<InsightFiltersResourceAwsEc2InstanceIamInstanceProfileArn> resourceAwsEc2InstanceIamInstanceProfileArns() {
        if (resourceAwsEc2InstanceIamInstanceProfileArns == null) return null;
        return resourceAwsEc2InstanceIamInstanceProfileArns.getValue("InsightFilters.resourceAwsEc2InstanceIamInstanceProfileArns");
    }

    /**
     * The Amazon Machine Image (AMI) ID of the instance. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersResourceAwsEc2InstanceImageId>> resourceAwsEc2InstanceImageIds;

    public @Nullable List<InsightFiltersResourceAwsEc2InstanceImageId> resourceAwsEc2InstanceImageIds() {
        if (resourceAwsEc2InstanceImageIds == null) return null;
        return resourceAwsEc2InstanceImageIds.getValue("InsightFilters.resourceAwsEc2InstanceImageIds");
    }

    /**
     * The IPv4 addresses associated with the instance. See Ip Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersResourceAwsEc2InstanceIpv4Address>> resourceAwsEc2InstanceIpv4Addresses;

    public @Nullable List<InsightFiltersResourceAwsEc2InstanceIpv4Address> resourceAwsEc2InstanceIpv4Addresses() {
        if (resourceAwsEc2InstanceIpv4Addresses == null) return null;
        return resourceAwsEc2InstanceIpv4Addresses.getValue("InsightFilters.resourceAwsEc2InstanceIpv4Addresses");
    }

    /**
     * The IPv6 addresses associated with the instance. See Ip Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersResourceAwsEc2InstanceIpv6Address>> resourceAwsEc2InstanceIpv6Addresses;

    public @Nullable List<InsightFiltersResourceAwsEc2InstanceIpv6Address> resourceAwsEc2InstanceIpv6Addresses() {
        if (resourceAwsEc2InstanceIpv6Addresses == null) return null;
        return resourceAwsEc2InstanceIpv6Addresses.getValue("InsightFilters.resourceAwsEc2InstanceIpv6Addresses");
    }

    /**
     * The key name associated with the instance. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersResourceAwsEc2InstanceKeyName>> resourceAwsEc2InstanceKeyNames;

    public @Nullable List<InsightFiltersResourceAwsEc2InstanceKeyName> resourceAwsEc2InstanceKeyNames() {
        if (resourceAwsEc2InstanceKeyNames == null) return null;
        return resourceAwsEc2InstanceKeyNames.getValue("InsightFilters.resourceAwsEc2InstanceKeyNames");
    }

    /**
     * The date and time the instance was launched. See Date Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersResourceAwsEc2InstanceLaunchedAt>> resourceAwsEc2InstanceLaunchedAts;

    public @Nullable List<InsightFiltersResourceAwsEc2InstanceLaunchedAt> resourceAwsEc2InstanceLaunchedAts() {
        if (resourceAwsEc2InstanceLaunchedAts == null) return null;
        return resourceAwsEc2InstanceLaunchedAts.getValue("InsightFilters.resourceAwsEc2InstanceLaunchedAts");
    }

    /**
     * The identifier of the subnet that the instance was launched in. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersResourceAwsEc2InstanceSubnetId>> resourceAwsEc2InstanceSubnetIds;

    public @Nullable List<InsightFiltersResourceAwsEc2InstanceSubnetId> resourceAwsEc2InstanceSubnetIds() {
        if (resourceAwsEc2InstanceSubnetIds == null) return null;
        return resourceAwsEc2InstanceSubnetIds.getValue("InsightFilters.resourceAwsEc2InstanceSubnetIds");
    }

    /**
     * The instance type of the instance. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersResourceAwsEc2InstanceType>> resourceAwsEc2InstanceTypes;

    public @Nullable List<InsightFiltersResourceAwsEc2InstanceType> resourceAwsEc2InstanceTypes() {
        if (resourceAwsEc2InstanceTypes == null) return null;
        return resourceAwsEc2InstanceTypes.getValue("InsightFilters.resourceAwsEc2InstanceTypes");
    }

    /**
     * The identifier of the VPC that the instance was launched in. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersResourceAwsEc2InstanceVpcId>> resourceAwsEc2InstanceVpcIds;

    public @Nullable List<InsightFiltersResourceAwsEc2InstanceVpcId> resourceAwsEc2InstanceVpcIds() {
        if (resourceAwsEc2InstanceVpcIds == null) return null;
        return resourceAwsEc2InstanceVpcIds.getValue("InsightFilters.resourceAwsEc2InstanceVpcIds");
    }

    /**
     * The creation date/time of the IAM access key related to a finding. See Date Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersResourceAwsIamAccessKeyCreatedAt>> resourceAwsIamAccessKeyCreatedAts;

    public @Nullable List<InsightFiltersResourceAwsIamAccessKeyCreatedAt> resourceAwsIamAccessKeyCreatedAts() {
        if (resourceAwsIamAccessKeyCreatedAts == null) return null;
        return resourceAwsIamAccessKeyCreatedAts.getValue("InsightFilters.resourceAwsIamAccessKeyCreatedAts");
    }

    /**
     * The status of the IAM access key related to a finding. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersResourceAwsIamAccessKeyStatus>> resourceAwsIamAccessKeyStatuses;

    public @Nullable List<InsightFiltersResourceAwsIamAccessKeyStatus> resourceAwsIamAccessKeyStatuses() {
        if (resourceAwsIamAccessKeyStatuses == null) return null;
        return resourceAwsIamAccessKeyStatuses.getValue("InsightFilters.resourceAwsIamAccessKeyStatuses");
    }

    /**
     * The user associated with the IAM access key related to a finding. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersResourceAwsIamAccessKeyUserName>> resourceAwsIamAccessKeyUserNames;

    public @Nullable List<InsightFiltersResourceAwsIamAccessKeyUserName> resourceAwsIamAccessKeyUserNames() {
        if (resourceAwsIamAccessKeyUserNames == null) return null;
        return resourceAwsIamAccessKeyUserNames.getValue("InsightFilters.resourceAwsIamAccessKeyUserNames");
    }

    /**
     * The canonical user ID of the owner of the S3 bucket. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersResourceAwsS3BucketOwnerId>> resourceAwsS3BucketOwnerIds;

    public @Nullable List<InsightFiltersResourceAwsS3BucketOwnerId> resourceAwsS3BucketOwnerIds() {
        if (resourceAwsS3BucketOwnerIds == null) return null;
        return resourceAwsS3BucketOwnerIds.getValue("InsightFilters.resourceAwsS3BucketOwnerIds");
    }

    /**
     * The display name of the owner of the S3 bucket. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersResourceAwsS3BucketOwnerName>> resourceAwsS3BucketOwnerNames;

    public @Nullable List<InsightFiltersResourceAwsS3BucketOwnerName> resourceAwsS3BucketOwnerNames() {
        if (resourceAwsS3BucketOwnerNames == null) return null;
        return resourceAwsS3BucketOwnerNames.getValue("InsightFilters.resourceAwsS3BucketOwnerNames");
    }

    /**
     * The identifier of the image related to a finding. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersResourceContainerImageId>> resourceContainerImageIds;

    public @Nullable List<InsightFiltersResourceContainerImageId> resourceContainerImageIds() {
        if (resourceContainerImageIds == null) return null;
        return resourceContainerImageIds.getValue("InsightFilters.resourceContainerImageIds");
    }

    /**
     * The name of the image related to a finding. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersResourceContainerImageName>> resourceContainerImageNames;

    public @Nullable List<InsightFiltersResourceContainerImageName> resourceContainerImageNames() {
        if (resourceContainerImageNames == null) return null;
        return resourceContainerImageNames.getValue("InsightFilters.resourceContainerImageNames");
    }

    /**
     * The date/time that the container was started. See Date Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersResourceContainerLaunchedAt>> resourceContainerLaunchedAts;

    public @Nullable List<InsightFiltersResourceContainerLaunchedAt> resourceContainerLaunchedAts() {
        if (resourceContainerLaunchedAts == null) return null;
        return resourceContainerLaunchedAts.getValue("InsightFilters.resourceContainerLaunchedAts");
    }

    /**
     * The name of the container related to a finding. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersResourceContainerName>> resourceContainerNames;

    public @Nullable List<InsightFiltersResourceContainerName> resourceContainerNames() {
        if (resourceContainerNames == null) return null;
        return resourceContainerNames.getValue("InsightFilters.resourceContainerNames");
    }

    /**
     * The details of a resource that doesn&#39;t have a specific subfield for the resource type defined. See Map Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersResourceDetailsOther>> resourceDetailsOthers;

    public @Nullable List<InsightFiltersResourceDetailsOther> resourceDetailsOthers() {
        if (resourceDetailsOthers == null) return null;
        return resourceDetailsOthers.getValue("InsightFilters.resourceDetailsOthers");
    }

    /**
     * The canonical identifier for the given resource type. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersResourceId>> resourceIds;

    public @Nullable List<InsightFiltersResourceId> resourceIds() {
        if (resourceIds == null) return null;
        return resourceIds.getValue("InsightFilters.resourceIds");
    }

    /**
     * The canonical AWS partition name that the Region is assigned to. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersResourcePartition>> resourcePartitions;

    public @Nullable List<InsightFiltersResourcePartition> resourcePartitions() {
        if (resourcePartitions == null) return null;
        return resourcePartitions.getValue("InsightFilters.resourcePartitions");
    }

    /**
     * The canonical AWS external Region name where this resource is located. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersResourceRegion>> resourceRegions;

    public @Nullable List<InsightFiltersResourceRegion> resourceRegions() {
        if (resourceRegions == null) return null;
        return resourceRegions.getValue("InsightFilters.resourceRegions");
    }

    /**
     * A list of AWS tags associated with a resource at the time the finding was processed. See Map Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersResourceTag>> resourceTags;

    public @Nullable List<InsightFiltersResourceTag> resourceTags() {
        if (resourceTags == null) return null;
        return resourceTags.getValue("InsightFilters.resourceTags");
    }

    /**
     * Specifies the type of the resource that details are provided for. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersResourceType>> resourceTypes;

    public @Nullable List<InsightFiltersResourceType> resourceTypes() {
        if (resourceTypes == null) return null;
        return resourceTypes.getValue("InsightFilters.resourceTypes");
    }

    /**
     * The label of a finding&#39;s severity. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersSeverityLabel>> severityLabels;

    public @Nullable List<InsightFiltersSeverityLabel> severityLabels() {
        if (severityLabels == null) return null;
        return severityLabels.getValue("InsightFilters.severityLabels");
    }

    /**
     * A URL that links to a page about the current finding in the security-findings provider&#39;s solution. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersSourceUrl>> sourceUrls;

    public @Nullable List<InsightFiltersSourceUrl> sourceUrls() {
        if (sourceUrls == null) return null;
        return sourceUrls.getValue("InsightFilters.sourceUrls");
    }

    /**
     * The category of a threat intelligence indicator. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersThreatIntelIndicatorCategory>> threatIntelIndicatorCategories;

    public @Nullable List<InsightFiltersThreatIntelIndicatorCategory> threatIntelIndicatorCategories() {
        if (threatIntelIndicatorCategories == null) return null;
        return threatIntelIndicatorCategories.getValue("InsightFilters.threatIntelIndicatorCategories");
    }

    /**
     * The date/time of the last observation of a threat intelligence indicator. See Date Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersThreatIntelIndicatorLastObservedAt>> threatIntelIndicatorLastObservedAts;

    public @Nullable List<InsightFiltersThreatIntelIndicatorLastObservedAt> threatIntelIndicatorLastObservedAts() {
        if (threatIntelIndicatorLastObservedAts == null) return null;
        return threatIntelIndicatorLastObservedAts.getValue("InsightFilters.threatIntelIndicatorLastObservedAts");
    }

    /**
     * The URL for more details from the source of the threat intelligence. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersThreatIntelIndicatorSourceUrl>> threatIntelIndicatorSourceUrls;

    public @Nullable List<InsightFiltersThreatIntelIndicatorSourceUrl> threatIntelIndicatorSourceUrls() {
        if (threatIntelIndicatorSourceUrls == null) return null;
        return threatIntelIndicatorSourceUrls.getValue("InsightFilters.threatIntelIndicatorSourceUrls");
    }

    /**
     * The source of the threat intelligence. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersThreatIntelIndicatorSource>> threatIntelIndicatorSources;

    public @Nullable List<InsightFiltersThreatIntelIndicatorSource> threatIntelIndicatorSources() {
        if (threatIntelIndicatorSources == null) return null;
        return threatIntelIndicatorSources.getValue("InsightFilters.threatIntelIndicatorSources");
    }

    /**
     * The type of a threat intelligence indicator. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersThreatIntelIndicatorType>> threatIntelIndicatorTypes;

    public @Nullable List<InsightFiltersThreatIntelIndicatorType> threatIntelIndicatorTypes() {
        if (threatIntelIndicatorTypes == null) return null;
        return threatIntelIndicatorTypes.getValue("InsightFilters.threatIntelIndicatorTypes");
    }

    /**
     * The value of a threat intelligence indicator. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersThreatIntelIndicatorValue>> threatIntelIndicatorValues;

    public @Nullable List<InsightFiltersThreatIntelIndicatorValue> threatIntelIndicatorValues() {
        if (threatIntelIndicatorValues == null) return null;
        return threatIntelIndicatorValues.getValue("InsightFilters.threatIntelIndicatorValues");
    }

    /**
     * A finding&#39;s title. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersTitle>> titles;

    public @Nullable List<InsightFiltersTitle> titles() {
        if (titles == null) return null;
        return titles.getValue("InsightFilters.titles");
    }

    /**
     * A finding type in the format of `namespace/category/classifier` that classifies a finding. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersType>> types;

    public @Nullable List<InsightFiltersType> types() {
        if (types == null) return null;
        return types.getValue("InsightFilters.types");
    }

    /**
     * An ISO8601-formatted timestamp that indicates when the security-findings provider last updated the finding record. See Date Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersUpdatedAt>> updatedAts;

    public @Nullable List<InsightFiltersUpdatedAt> updatedAts() {
        if (updatedAts == null) return null;
        return updatedAts.getValue("InsightFilters.updatedAts");
    }

    /**
     * A list of name/value string pairs associated with the finding. These are custom, user-defined fields added to a finding. See Map Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersUserDefinedValue>> userDefinedValues;

    public @Nullable List<InsightFiltersUserDefinedValue> userDefinedValues() {
        if (userDefinedValues == null) return null;
        return userDefinedValues.getValue("InsightFilters.userDefinedValues");
    }

    /**
     * The veracity of a finding. See String Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersVerificationState>> verificationStates;

    public @Nullable List<InsightFiltersVerificationState> verificationStates() {
        if (verificationStates == null) return null;
        return verificationStates.getValue("InsightFilters.verificationStates");
    }

    /**
     * The status of the investigation into a finding. See Workflow Status Filter below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<InsightFiltersWorkflowStatus>> workflowStatuses;

    public @Nullable List<InsightFiltersWorkflowStatus> workflowStatuses() {
        if (workflowStatuses == null) return null;
        return workflowStatuses.getValue("InsightFilters.workflowStatuses");
    }

}
