// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.shield;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:shield/protectionGroup:ProtectionGroup")
public final class ProtectionGroup extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Defines how AWS Shield combines resource data for the group in order to detect, mitigate, and report events.
     * 
     */
    @PolicyResourceProperty(name="aggregation", flag="unknown_aggregation")
    private String value_aggregation;
    private boolean unknown_aggregation;
    public String aggregation() {
        if (!unknown_aggregation) return value_aggregation;
        throw new UndeferrableValueException("Value 'ProtectionGroup.aggregation' is not present");
    }

    /**
     * The Amazon Resource Names (ARNs) of the resources to include in the protection group. You must set this when you set `pattern` to ARBITRARY and you must not set it for any other `pattern` setting.
     * 
     */
    @PolicyResourceProperty(name="members", flag="unknown_members")
    private @Nullable List<String> value_members;
    private boolean unknown_members;
    public @Nullable List<String> members() {
        if (!unknown_members) return value_members;
        throw new UndeferrableValueException("Value 'ProtectionGroup.members' is not present");
    }

    /**
     * The criteria to use to choose the protected resources for inclusion in the group.
     * 
     */
    @PolicyResourceProperty(name="pattern", flag="unknown_pattern")
    private String value_pattern;
    private boolean unknown_pattern;
    public String pattern() {
        if (!unknown_pattern) return value_pattern;
        throw new UndeferrableValueException("Value 'ProtectionGroup.pattern' is not present");
    }

    /**
     * The ARN (Amazon Resource Name) of the protection group.
     * 
     */
    @PolicyResourceProperty(name="protectionGroupArn", flag="unknown_protectionGroupArn")
    private String value_protectionGroupArn;
    private boolean unknown_protectionGroupArn;
    public String protectionGroupArn() {
        if (!unknown_protectionGroupArn) return value_protectionGroupArn;
        throw new UndeferrableValueException("Value 'ProtectionGroup.protectionGroupArn' is not present");
    }

    /**
     * The name of the protection group.
     * 
     */
    @PolicyResourceProperty(name="protectionGroupId", flag="unknown_protectionGroupId")
    private String value_protectionGroupId;
    private boolean unknown_protectionGroupId;
    public String protectionGroupId() {
        if (!unknown_protectionGroupId) return value_protectionGroupId;
        throw new UndeferrableValueException("Value 'ProtectionGroup.protectionGroupId' is not present");
    }

    /**
     * The resource type to include in the protection group. You must set this when you set `pattern` to BY_RESOURCE_TYPE and you must not set it for any other `pattern` setting.
     * 
     */
    @PolicyResourceProperty(name="resourceType", flag="unknown_resourceType")
    private @Nullable String value_resourceType;
    private boolean unknown_resourceType;
    public @Nullable String resourceType() {
        if (!unknown_resourceType) return value_resourceType;
        throw new UndeferrableValueException("Value 'ProtectionGroup.resourceType' is not present");
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'ProtectionGroup.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'ProtectionGroup.tagsAll' is not present");
    }

}
