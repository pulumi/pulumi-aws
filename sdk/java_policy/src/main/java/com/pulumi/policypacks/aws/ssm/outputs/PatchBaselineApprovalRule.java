// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ssm.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.ssm.outputs.PatchBaselineApprovalRulePatchFilter;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class PatchBaselineApprovalRule {

    /**
     * Number of days after the release date of each patch matched by the rule the patch is marked as approved in the patch baseline. Valid Range: 0 to 360. Conflicts with `approve_until_date`.
     * 
     */
    private @Nullable UndeferrableValue<Integer> approveAfterDays;

    public @Nullable Integer approveAfterDays() {
        if (approveAfterDays == null) return null;
        return approveAfterDays.getValue("PatchBaselineApprovalRule.approveAfterDays");
    }

    /**
     * Cutoff date for auto approval of released patches. Any patches released on or before this date are installed automatically. Date is formatted as `YYYY-MM-DD`. Conflicts with `approve_after_days`
     * 
     */
    private @Nullable UndeferrableValue<String> approveUntilDate;

    public @Nullable String approveUntilDate() {
        if (approveUntilDate == null) return null;
        return approveUntilDate.getValue("PatchBaselineApprovalRule.approveUntilDate");
    }

    /**
     * Compliance level for patches approved by this rule. Valid values are `CRITICAL`, `HIGH`, `MEDIUM`, `LOW`, `INFORMATIONAL`, and `UNSPECIFIED`. The default value is `UNSPECIFIED`.
     * 
     */
    private @Nullable UndeferrableValue<String> complianceLevel;

    public @Nullable String complianceLevel() {
        if (complianceLevel == null) return null;
        return complianceLevel.getValue("PatchBaselineApprovalRule.complianceLevel");
    }

    /**
     * Boolean enabling the application of non-security updates. The default value is `false`. Valid for Linux instances only.
     * 
     */
    private @Nullable UndeferrableValue<Boolean> enableNonSecurity;

    public @Nullable Boolean enableNonSecurity() {
        if (enableNonSecurity == null) return null;
        return enableNonSecurity.getValue("PatchBaselineApprovalRule.enableNonSecurity");
    }

    /**
     * Patch filter group that defines the criteria for the rule. Up to 5 patch filters can be specified per approval rule using Key/Value pairs. Valid combinations of these Keys and the `operating_system` value can be found in the [SSM DescribePatchProperties API Reference](https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_DescribePatchProperties.html). Valid Values are exact values for the patch property given as the key, or a wildcard `*`, which matches all values. `PATCH_SET` defaults to `OS` if unspecified
     * 
     */
    private UndeferrableValue<List<PatchBaselineApprovalRulePatchFilter>> patchFilters;

    public List<PatchBaselineApprovalRulePatchFilter> patchFilters() {
        if (patchFilters == null) return null;
        return patchFilters.getValue("PatchBaselineApprovalRule.patchFilters");
    }

}
