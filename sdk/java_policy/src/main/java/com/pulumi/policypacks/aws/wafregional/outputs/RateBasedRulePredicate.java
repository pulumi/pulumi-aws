// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.wafregional.outputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.Boolean;
import java.lang.String;


public final class RateBasedRulePredicate {

    /**
     * A unique identifier for a predicate in the rule, such as Byte Match Set ID or IPSet ID.
     * 
     */
    private UndeferrableValue<String> dataId;

    public String dataId() {
        if (dataId == null) return null;
        return dataId.getValue("RateBasedRulePredicate.dataId");
    }

    /**
     * Set this to `false` if you want to allow, block, or count requests
     * based on the settings in the specified `ByteMatchSet`, `IPSet`, `SqlInjectionMatchSet`, `XssMatchSet`, or `SizeConstraintSet`.
     * For example, if an IPSet includes the IP address `192.0.2.44`, AWS WAF will allow or block requests based on that IP address.
     * If set to `true`, AWS WAF will allow, block, or count requests based on all IP addresses _except_ `192.0.2.44`.
     * 
     */
    private UndeferrableValue<Boolean> negated;

    public Boolean negated() {
        if (negated == null) return null;
        return negated.getValue("RateBasedRulePredicate.negated");
    }

    /**
     * The type of predicate in a rule. Valid values: `ByteMatch`, `GeoMatch`, `IPMatch`, `RegexMatch`, `SizeConstraint`, `SqlInjectionMatch`, or `XssMatch`.
     * 
     */
    private UndeferrableValue<String> type;

    public String type() {
        if (type == null) return null;
        return type.getValue("RateBasedRulePredicate.type");
    }

}
