// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.backup;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:backup/vault:Vault")
public final class VaultArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * A boolean that indicates that all recovery points stored in the vault are deleted so that the vault can be destroyed without error.
     * 
     */
    private UndeferrableValue<Boolean> forceDestroy;

    public Boolean forceDestroy() {
        if (forceDestroy == null) return null;
        return forceDestroy.getValue("VaultArgs.forceDestroy");
    }

    /**
     * The server-side encryption key that is used to protect your backups.
     * 
     */
    private UndeferrableValue<String> kmsKeyArn;

    public String kmsKeyArn() {
        if (kmsKeyArn == null) return null;
        return kmsKeyArn.getValue("VaultArgs.kmsKeyArn");
    }

    /**
     * Name of the backup vault to create.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("VaultArgs.name");
    }

    /**
     * Metadata that you can assign to help organize the resources that you create. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("VaultArgs.tags");
    }

}
