// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.apprunner;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.apprunner.outputs.DeploymentTimeouts;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:apprunner/deployment:Deployment")
public final class Deployment extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The unique ID of the operation associated with deployment.
     * 
     */
    @PolicyResourceProperty(name="operationId", flag="unknown_operationId")
    private String value_operationId;
    private boolean unknown_operationId;
    public String operationId() {
        if (!unknown_operationId) return value_operationId;
        throw new UndeferrableValueException("Value 'Deployment.operationId' is not present");
    }

    /**
     * The Amazon Resource Name (ARN) of the App Runner service to start the deployment for.
     * 
     */
    @PolicyResourceProperty(name="serviceArn", flag="unknown_serviceArn")
    private String value_serviceArn;
    private boolean unknown_serviceArn;
    public String serviceArn() {
        if (!unknown_serviceArn) return value_serviceArn;
        throw new UndeferrableValueException("Value 'Deployment.serviceArn' is not present");
    }

    /**
     * The current status of the App Runner service deployment.
     * 
     */
    @PolicyResourceProperty(name="status", flag="unknown_status")
    private String value_status;
    private boolean unknown_status;
    public String status() {
        if (!unknown_status) return value_status;
        throw new UndeferrableValueException("Value 'Deployment.status' is not present");
    }

    @PolicyResourceProperty(name="timeouts", flag="unknown_timeouts")
    private @Nullable DeploymentTimeouts value_timeouts;
    private boolean unknown_timeouts;
    public @Nullable DeploymentTimeouts timeouts() {
        if (!unknown_timeouts) return value_timeouts;
        throw new UndeferrableValueException("Value 'Deployment.timeouts' is not present");
    }

}
