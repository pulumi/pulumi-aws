// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ecr;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.ecr.outputs.RegistryScanningConfigurationRule;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ecr/registryScanningConfiguration:RegistryScanningConfiguration")
public final class RegistryScanningConfiguration extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The registry ID the scanning configuration applies to.
     * 
     */
    @PolicyResourceProperty(name="registryId", flag="unknown_registryId")
    private String value_registryId;
    private boolean unknown_registryId;
    public String registryId() {
        if (!unknown_registryId) return value_registryId;
        throw new UndeferrableValueException("Value 'RegistryScanningConfiguration.registryId' is not present");
    }

    /**
     * One or multiple blocks specifying scanning rules to determine which repository filters are used and at what frequency scanning will occur. See below for schema.
     * 
     */
    @PolicyResourceProperty(name="rules", flag="unknown_rules")
    private @Nullable List<RegistryScanningConfigurationRule> value_rules;
    private boolean unknown_rules;
    public @Nullable List<RegistryScanningConfigurationRule> rules() {
        if (!unknown_rules) return value_rules;
        throw new UndeferrableValueException("Value 'RegistryScanningConfiguration.rules' is not present");
    }

    /**
     * the scanning type to set for the registry. Can be either `ENHANCED` or `BASIC`.
     * 
     */
    @PolicyResourceProperty(name="scanType", flag="unknown_scanType")
    private String value_scanType;
    private boolean unknown_scanType;
    public String scanType() {
        if (!unknown_scanType) return value_scanType;
        throw new UndeferrableValueException("Value 'RegistryScanningConfiguration.scanType' is not present");
    }

}
