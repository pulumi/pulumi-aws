// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.licensemanager;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:licensemanager/licenseConfiguration:LicenseConfiguration")
public final class LicenseConfigurationArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Description of the license configuration.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("LicenseConfigurationArgs.description");
    }

    /**
     * Number of licenses managed by the license configuration.
     * 
     */
    private UndeferrableValue<Integer> licenseCount;

    public Integer licenseCount() {
        if (licenseCount == null) return null;
        return licenseCount.getValue("LicenseConfigurationArgs.licenseCount");
    }

    /**
     * Sets the number of available licenses as a hard limit.
     * 
     */
    private UndeferrableValue<Boolean> licenseCountHardLimit;

    public Boolean licenseCountHardLimit() {
        if (licenseCountHardLimit == null) return null;
        return licenseCountHardLimit.getValue("LicenseConfigurationArgs.licenseCountHardLimit");
    }

    /**
     * Dimension to use to track license inventory. Specify either `vCPU`, `Instance`, `Core` or `Socket`.
     * 
     */
    private UndeferrableValue<String> licenseCountingType;

    public String licenseCountingType() {
        if (licenseCountingType == null) return null;
        return licenseCountingType.getValue("LicenseConfigurationArgs.licenseCountingType");
    }

    /**
     * Array of configured License Manager rules.
     * 
     */
    private UndeferrableValue<List<String>> licenseRules;

    public List<String> licenseRules() {
        if (licenseRules == null) return null;
        return licenseRules.getValue("LicenseConfigurationArgs.licenseRules");
    }

    /**
     * Name of the license configuration.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("LicenseConfigurationArgs.name");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("LicenseConfigurationArgs.tags");
    }

}
