// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.kms;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:kms/replicaKey:ReplicaKey")
public final class ReplicaKeyArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * A flag to indicate whether to bypass the key policy lockout safety check.
     * Setting this value to true increases the risk that the KMS key becomes unmanageable. Do not set this value to true indiscriminately.
     * For more information, refer to the scenario in the [Default Key Policy](https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default-allow-root-enable-iam) section in the _AWS Key Management Service Developer Guide_.
     * The default value is `false`.
     * 
     */
    private UndeferrableValue<Boolean> bypassPolicyLockoutSafetyCheck;

    public Boolean bypassPolicyLockoutSafetyCheck() {
        if (bypassPolicyLockoutSafetyCheck == null) return null;
        return bypassPolicyLockoutSafetyCheck.getValue("ReplicaKeyArgs.bypassPolicyLockoutSafetyCheck");
    }

    /**
     * The waiting period, specified in number of days. After the waiting period ends, AWS KMS deletes the KMS key.
     * If you specify a value, it must be between `7` and `30`, inclusive. If you do not specify a value, it defaults to `30`.
     * 
     */
    private UndeferrableValue<Integer> deletionWindowInDays;

    public Integer deletionWindowInDays() {
        if (deletionWindowInDays == null) return null;
        return deletionWindowInDays.getValue("ReplicaKeyArgs.deletionWindowInDays");
    }

    /**
     * A description of the KMS key.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("ReplicaKeyArgs.description");
    }

    /**
     * Specifies whether the replica key is enabled. Disabled KMS keys cannot be used in cryptographic operations. The default value is `true`.
     * 
     */
    private UndeferrableValue<Boolean> enabled;

    public Boolean enabled() {
        if (enabled == null) return null;
        return enabled.getValue("ReplicaKeyArgs.enabled");
    }

    /**
     * The key policy to attach to the KMS key. If you do not specify a key policy, AWS KMS attaches the [default key policy](https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default) to the KMS key.
     * 
     */
    private UndeferrableValue<String> policy;

    public String policy() {
        if (policy == null) return null;
        return policy.getValue("ReplicaKeyArgs.policy");
    }

    /**
     * The ARN of the multi-Region primary key to replicate. The primary key must be in a different AWS Region of the same AWS Partition. You can create only one replica of a given primary key in each AWS Region.
     * 
     */
    private UndeferrableValue<String> primaryKeyArn;

    public String primaryKeyArn() {
        if (primaryKeyArn == null) return null;
        return primaryKeyArn.getValue("ReplicaKeyArgs.primaryKeyArn");
    }

    /**
     * A map of tags to assign to the replica key. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("ReplicaKeyArgs.tags");
    }

}
