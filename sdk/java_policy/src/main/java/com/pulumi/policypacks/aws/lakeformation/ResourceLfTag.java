// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.lakeformation;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.lakeformation.outputs.ResourceLfTagDatabase;
import com.pulumi.policypacks.aws.lakeformation.outputs.ResourceLfTagLfTag;
import com.pulumi.policypacks.aws.lakeformation.outputs.ResourceLfTagTable;
import com.pulumi.policypacks.aws.lakeformation.outputs.ResourceLfTagTableWithColumns;
import com.pulumi.policypacks.aws.lakeformation.outputs.ResourceLfTagTimeouts;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:lakeformation/resourceLfTag:ResourceLfTag")
public final class ResourceLfTag extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment.
     * 
     */
    @PolicyResourceProperty(name="catalogId", flag="unknown_catalogId")
    private @Nullable String value_catalogId;
    private boolean unknown_catalogId;
    public @Nullable String catalogId() {
        if (!unknown_catalogId) return value_catalogId;
        throw new UndeferrableValueException("Value 'ResourceLfTag.catalogId' is not present");
    }

    /**
     * Configuration block for a database resource. See Database for more details.
     * 
     */
    @PolicyResourceProperty(name="database", flag="unknown_database")
    private @Nullable ResourceLfTagDatabase value_database;
    private boolean unknown_database;
    public @Nullable ResourceLfTagDatabase database() {
        if (!unknown_database) return value_database;
        throw new UndeferrableValueException("Value 'ResourceLfTag.database' is not present");
    }

    /**
     * Set of LF-tags to attach to the resource. See LF Tag for more details.
     * 
     * Exactly one of the following is required:
     * 
     */
    @PolicyResourceProperty(name="lfTag", flag="unknown_lfTag")
    private @Nullable ResourceLfTagLfTag value_lfTag;
    private boolean unknown_lfTag;
    public @Nullable ResourceLfTagLfTag lfTag() {
        if (!unknown_lfTag) return value_lfTag;
        throw new UndeferrableValueException("Value 'ResourceLfTag.lfTag' is not present");
    }

    /**
     * Configuration block for a table resource. See Table for more details.
     * 
     */
    @PolicyResourceProperty(name="table", flag="unknown_table")
    private @Nullable ResourceLfTagTable value_table;
    private boolean unknown_table;
    public @Nullable ResourceLfTagTable table() {
        if (!unknown_table) return value_table;
        throw new UndeferrableValueException("Value 'ResourceLfTag.table' is not present");
    }

    /**
     * Configuration block for a table with columns resource. See Table With Columns for more details.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="tableWithColumns", flag="unknown_tableWithColumns")
    private @Nullable ResourceLfTagTableWithColumns value_tableWithColumns;
    private boolean unknown_tableWithColumns;
    public @Nullable ResourceLfTagTableWithColumns tableWithColumns() {
        if (!unknown_tableWithColumns) return value_tableWithColumns;
        throw new UndeferrableValueException("Value 'ResourceLfTag.tableWithColumns' is not present");
    }

    @PolicyResourceProperty(name="timeouts", flag="unknown_timeouts")
    private @Nullable ResourceLfTagTimeouts value_timeouts;
    private boolean unknown_timeouts;
    public @Nullable ResourceLfTagTimeouts timeouts() {
        if (!unknown_timeouts) return value_timeouts;
        throw new UndeferrableValueException("Value 'ResourceLfTag.timeouts' is not present");
    }

}
