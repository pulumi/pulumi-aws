// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.alb.inputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


public final class ListenerDefaultActionAuthenticateCognitoArgs {

    /**
     * Query parameters to include in the redirect request to the authorization endpoint. Max: 10. See below.
     * 
     */
    private UndeferrableValue<Map<String,String>> authenticationRequestExtraParams;

    public Map<String,String> authenticationRequestExtraParams() {
        if (authenticationRequestExtraParams == null) return null;
        return authenticationRequestExtraParams.getValue("ListenerDefaultActionAuthenticateCognitoArgs.authenticationRequestExtraParams");
    }

    /**
     * Behavior if the user is not authenticated. Valid values are `deny`, `allow` and `authenticate`.
     * 
     */
    private UndeferrableValue<String> onUnauthenticatedRequest;

    public String onUnauthenticatedRequest() {
        if (onUnauthenticatedRequest == null) return null;
        return onUnauthenticatedRequest.getValue("ListenerDefaultActionAuthenticateCognitoArgs.onUnauthenticatedRequest");
    }

    /**
     * Set of user claims to be requested from the IdP.
     * 
     */
    private UndeferrableValue<String> scope;

    public String scope() {
        if (scope == null) return null;
        return scope.getValue("ListenerDefaultActionAuthenticateCognitoArgs.scope");
    }

    /**
     * Name of the cookie used to maintain session information.
     * 
     */
    private UndeferrableValue<String> sessionCookieName;

    public String sessionCookieName() {
        if (sessionCookieName == null) return null;
        return sessionCookieName.getValue("ListenerDefaultActionAuthenticateCognitoArgs.sessionCookieName");
    }

    /**
     * Maximum duration of the authentication session, in seconds.
     * 
     */
    private UndeferrableValue<Integer> sessionTimeout;

    public Integer sessionTimeout() {
        if (sessionTimeout == null) return null;
        return sessionTimeout.getValue("ListenerDefaultActionAuthenticateCognitoArgs.sessionTimeout");
    }

    /**
     * ARN of the Cognito user pool.
     * 
     */
    private UndeferrableValue<String> userPoolArn;

    public String userPoolArn() {
        if (userPoolArn == null) return null;
        return userPoolArn.getValue("ListenerDefaultActionAuthenticateCognitoArgs.userPoolArn");
    }

    /**
     * ID of the Cognito user pool client.
     * 
     */
    private UndeferrableValue<String> userPoolClientId;

    public String userPoolClientId() {
        if (userPoolClientId == null) return null;
        return userPoolClientId.getValue("ListenerDefaultActionAuthenticateCognitoArgs.userPoolClientId");
    }

    /**
     * Domain prefix or fully-qualified domain name of the Cognito user pool.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> userPoolDomain;

    public String userPoolDomain() {
        if (userPoolDomain == null) return null;
        return userPoolDomain.getValue("ListenerDefaultActionAuthenticateCognitoArgs.userPoolDomain");
    }

}
