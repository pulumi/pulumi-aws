// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.finspace;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:finspace/kxScalingGroup:KxScalingGroup")
public final class KxScalingGroupArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The availability zone identifiers for the requested regions.
     * 
     */
    private UndeferrableValue<String> availabilityZoneId;

    public String availabilityZoneId() {
        if (availabilityZoneId == null) return null;
        return availabilityZoneId.getValue("KxScalingGroupArgs.availabilityZoneId");
    }

    /**
     * A unique identifier for the kdb environment, where you want to create the scaling group.
     * 
     */
    private UndeferrableValue<String> environmentId;

    public String environmentId() {
        if (environmentId == null) return null;
        return environmentId.getValue("KxScalingGroupArgs.environmentId");
    }

    /**
     * The memory and CPU capabilities of the scaling group host on which FinSpace Managed kdb clusters will be placed.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> hostType;

    public String hostType() {
        if (hostType == null) return null;
        return hostType.getValue("KxScalingGroupArgs.hostType");
    }

    /**
     * Unique name for the scaling group that you want to create.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("KxScalingGroupArgs.name");
    }

    /**
     * Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level. You can add up to 50 tags to a scaling group.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("KxScalingGroupArgs.tags");
    }

}
