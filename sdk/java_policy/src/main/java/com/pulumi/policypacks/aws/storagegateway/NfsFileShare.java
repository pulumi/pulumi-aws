// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.storagegateway;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.storagegateway.NfsFileShareCacheAttributes;
import com.pulumi.policypacks.aws.storagegateway.NfsFileShareNfsFileShareDefaults;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;


@PolicyResourceType(type="aws:storagegateway/nfsFileShare:NfsFileShare")
public final class NfsFileShare extends com.pulumi.resources.PolicyResource {

    /**
     * Amazon Resource Name (ARN) of the NFS File Share.
     * 
     */
    public String arn;



    /**
     * The Amazon Resource Name (ARN) of the storage used for audit logs.
     * 
     */
    public String auditDestinationArn;



    /**
     * The region of the S3 bucket used by the file share. Required when specifying `vpc_endpoint_dns_name`.
     * 
     */
    public String bucketRegion;



    /**
     * Refresh cache information. see Cache Attributes for more details.
     * 
     */
    public NfsFileShareCacheAttributes cacheAttributes;



    /**
     * The list of clients that are allowed to access the file gateway. The list must contain either valid IP addresses or valid CIDR blocks. Set to `[&#34;0.0.0.0/0&#34;]` to not limit access. Minimum 1 item. Maximum 100 items.
     * 
     */
    public List<String> clientLists;



    /**
     * The default [storage class](https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_CreateNFSFileShare.html#StorageGateway-CreateNFSFileShare-request-DefaultStorageClass) for objects put into an Amazon S3 bucket by the file gateway. Defaults to `S3_STANDARD`.
     * 
     */
    public String defaultStorageClass;



    /**
     * The name of the file share. Must be set if an S3 prefix name is set in `location_arn`.
     * 
     */
    public String fileShareName;



    /**
     * ID of the NFS File Share.
     * 
     */
    public String fileshareId;



    /**
     * Amazon Resource Name (ARN) of the file gateway.
     * 
     */
    public String gatewayArn;



    /**
     * Boolean value that enables guessing of the MIME type for uploaded objects based on file extensions. Defaults to `true`.
     * 
     */
    public Boolean guessMimeTypeEnabled;



    /**
     * Boolean value if `true` to use Amazon S3 server side encryption with your own AWS KMS key, or `false` to use a key managed by Amazon S3. Defaults to `false`.
     * 
     */
    public Boolean kmsEncrypted;



    /**
     * Amazon Resource Name (ARN) for KMS key used for Amazon S3 server side encryption. This value can only be set when `kms_encrypted` is true.
     * 
     */
    public String kmsKeyArn;



    /**
     * The ARN of the backed storage used for storing file data.
     * 
     */
    public String locationArn;



    /**
     * Nested argument with file share default values. More information below. see NFS File Share Defaults for more details.
     * 
     */
    public NfsFileShareNfsFileShareDefaults nfsFileShareDefaults;



    /**
     * The notification policy of the file share. For more information see the [AWS Documentation](https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_CreateNFSFileShare.html#StorageGateway-CreateNFSFileShare-request-NotificationPolicy). Default value is `{}`.
     * 
     */
    public String notificationPolicy;



    /**
     * Access Control List permission for S3 objects. Defaults to `private`.
     * 
     */
    public String objectAcl;



    /**
     * File share path used by the NFS client to identify the mount point.
     * 
     */
    public String path;



    /**
     * Boolean to indicate write status of file share. File share does not accept writes if `true`. Defaults to `false`.
     * 
     */
    public Boolean readOnly;



    /**
     * Boolean who pays the cost of the request and the data download from the Amazon S3 bucket. Set this value to `true` if you want the requester to pay instead of the bucket owner. Defaults to `false`.
     * 
     */
    public Boolean requesterPays;



    /**
     * The ARN of the AWS Identity and Access Management (IAM) role that a file gateway assumes when it accesses the underlying storage.
     * 
     */
    public String roleArn;



    /**
     * Maps a user to anonymous user. Defaults to `RootSquash`. Valid values: `RootSquash` (only root is mapped to anonymous user), `NoSquash` (no one is mapped to anonymous user), `AllSquash` (everyone is mapped to anonymous user)
     * 
     */
    public String squash;



    /**
     * Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



    /**
     * The DNS name of the VPC endpoint for S3 PrivateLink.
     * 
     */
    public String vpcEndpointDnsName;



}
