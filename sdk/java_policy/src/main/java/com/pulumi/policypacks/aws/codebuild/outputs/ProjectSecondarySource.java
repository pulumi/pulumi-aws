// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.codebuild.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.codebuild.outputs.ProjectSecondarySourceAuth;
import com.pulumi.policypacks.aws.codebuild.outputs.ProjectSecondarySourceBuildStatusConfig;
import com.pulumi.policypacks.aws.codebuild.outputs.ProjectSecondarySourceGitSubmodulesConfig;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class ProjectSecondarySource {

    /**
     * Information about the strategy CodeBuild should use when authenticating with the source code host.
     * Detailed below.
     * 
     */
    @PolicyResourceProperty(name="auth", flag="unknown_auth")
    private @Nullable ProjectSecondarySourceAuth value_auth;
    private boolean unknown_auth;
    public @Nullable ProjectSecondarySourceAuth auth() {
        if (!unknown_auth) return value_auth;
        throw new UndeferrableValueException("Value 'ProjectSecondarySource.auth' is not present");
    }

    /**
     * Configuration block that contains information that defines how the build project
     * reports the build status to the source provider. This option is only used when the source provider is GitHub, GitHub
     * Enterprise, GitLab, GitLab Self Managed, or Bitbucket. `build_status_config` blocks are documented below.
     * 
     */
    @PolicyResourceProperty(name="buildStatusConfig", flag="unknown_buildStatusConfig")
    private @Nullable ProjectSecondarySourceBuildStatusConfig value_buildStatusConfig;
    private boolean unknown_buildStatusConfig;
    public @Nullable ProjectSecondarySourceBuildStatusConfig buildStatusConfig() {
        if (!unknown_buildStatusConfig) return value_buildStatusConfig;
        throw new UndeferrableValueException("Value 'ProjectSecondarySource.buildStatusConfig' is not present");
    }

    /**
     * The build spec declaration to use for this build project&#39;s related builds. This must be set
     * when `type` is `NO_SOURCE`. It can either be a path to a file residing in the repository to be built or a local file
     * path leveraging the `file()` built-in.
     * 
     */
    @PolicyResourceProperty(name="buildspec", flag="unknown_buildspec")
    private @Nullable String value_buildspec;
    private boolean unknown_buildspec;
    public @Nullable String buildspec() {
        if (!unknown_buildspec) return value_buildspec;
        throw new UndeferrableValueException("Value 'ProjectSecondarySource.buildspec' is not present");
    }

    /**
     * Truncate git history to this many commits. Use `0` for a `Full` checkout which you need
     * to run commands like `git branch --show-current`.
     * See [AWS CodePipeline User Guide: Tutorial: Use full clone with a GitHub pipeline source](https://docs.aws.amazon.com/codepipeline/latest/userguide/tutorials-github-gitclone.html)
     * for details.
     * 
     */
    @PolicyResourceProperty(name="gitCloneDepth", flag="unknown_gitCloneDepth")
    private @Nullable Integer value_gitCloneDepth;
    private boolean unknown_gitCloneDepth;
    public @Nullable Integer gitCloneDepth() {
        if (!unknown_gitCloneDepth) return value_gitCloneDepth;
        throw new UndeferrableValueException("Value 'ProjectSecondarySource.gitCloneDepth' is not present");
    }

    /**
     * Configuration block. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="gitSubmodulesConfig", flag="unknown_gitSubmodulesConfig")
    private @Nullable ProjectSecondarySourceGitSubmodulesConfig value_gitSubmodulesConfig;
    private boolean unknown_gitSubmodulesConfig;
    public @Nullable ProjectSecondarySourceGitSubmodulesConfig gitSubmodulesConfig() {
        if (!unknown_gitSubmodulesConfig) return value_gitSubmodulesConfig;
        throw new UndeferrableValueException("Value 'ProjectSecondarySource.gitSubmodulesConfig' is not present");
    }

    /**
     * Ignore SSL warnings when connecting to source control.
     * 
     */
    @PolicyResourceProperty(name="insecureSsl", flag="unknown_insecureSsl")
    private @Nullable Boolean value_insecureSsl;
    private boolean unknown_insecureSsl;
    public @Nullable Boolean insecureSsl() {
        if (!unknown_insecureSsl) return value_insecureSsl;
        throw new UndeferrableValueException("Value 'ProjectSecondarySource.insecureSsl' is not present");
    }

    /**
     * Location of the source code from git or s3.
     * 
     */
    @PolicyResourceProperty(name="location", flag="unknown_location")
    private @Nullable String value_location;
    private boolean unknown_location;
    public @Nullable String location() {
        if (!unknown_location) return value_location;
        throw new UndeferrableValueException("Value 'ProjectSecondarySource.location' is not present");
    }

    /**
     * Whether to report the status of a build&#39;s start and finish to your source provider.
     * This option is valid only when your source provider is GitHub, GitHub Enterprise, GitLab, GitLab Self Managed, or
     * Bitbucket.
     * 
     */
    @PolicyResourceProperty(name="reportBuildStatus", flag="unknown_reportBuildStatus")
    private @Nullable Boolean value_reportBuildStatus;
    private boolean unknown_reportBuildStatus;
    public @Nullable Boolean reportBuildStatus() {
        if (!unknown_reportBuildStatus) return value_reportBuildStatus;
        throw new UndeferrableValueException("Value 'ProjectSecondarySource.reportBuildStatus' is not present");
    }

    /**
     * An identifier for this project source. The identifier can only contain alphanumeric
     * characters and underscores, and must be less than 128 characters in length.
     * 
     */
    @PolicyResourceProperty(name="sourceIdentifier", flag="unknown_sourceIdentifier")
    private String value_sourceIdentifier;
    private boolean unknown_sourceIdentifier;
    public String sourceIdentifier() {
        if (!unknown_sourceIdentifier) return value_sourceIdentifier;
        throw new UndeferrableValueException("Value 'ProjectSecondarySource.sourceIdentifier' is not present");
    }

    /**
     * Type of repository that contains the source code to be built. Valid values: `BITBUCKET`,
     * `CODECOMMIT`, `CODEPIPELINE`, `GITHUB`, `GITHUB_ENTERPRISE`, `GITLAB`, `GITLAB_SELF_MANAGED`, `NO_SOURCE`, `S3`.
     * 
     */
    @PolicyResourceProperty(name="type", flag="unknown_type")
    private String value_type;
    private boolean unknown_type;
    public String type() {
        if (!unknown_type) return value_type;
        throw new UndeferrableValueException("Value 'ProjectSecondarySource.type' is not present");
    }

}
