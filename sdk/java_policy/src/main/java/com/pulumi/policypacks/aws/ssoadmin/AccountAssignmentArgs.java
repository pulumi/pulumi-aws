// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ssoadmin;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ssoadmin/accountAssignment:AccountAssignment")
public final class AccountAssignmentArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The Amazon Resource Name (ARN) of the SSO Instance.
     * 
     */
    @PolicyResourceProperty(name="instanceArn", flag="unknown_instanceArn")
    private String value_instanceArn;
    private boolean unknown_instanceArn;
    public String instanceArn() {
        if (!unknown_instanceArn) return value_instanceArn;
        throw new UndeferrableValueException("Value 'AccountAssignmentArgs.instanceArn' is not present");
    }

    /**
     * The Amazon Resource Name (ARN) of the Permission Set that the admin wants to grant the principal access to.
     * 
     */
    @PolicyResourceProperty(name="permissionSetArn", flag="unknown_permissionSetArn")
    private String value_permissionSetArn;
    private boolean unknown_permissionSetArn;
    public String permissionSetArn() {
        if (!unknown_permissionSetArn) return value_permissionSetArn;
        throw new UndeferrableValueException("Value 'AccountAssignmentArgs.permissionSetArn' is not present");
    }

    /**
     * An identifier for an object in SSO, such as a user or group. PrincipalIds are GUIDs (For example, `f81d4fae-7dec-11d0-a765-00a0c91e6bf6`).
     * 
     */
    @PolicyResourceProperty(name="principalId", flag="unknown_principalId")
    private String value_principalId;
    private boolean unknown_principalId;
    public String principalId() {
        if (!unknown_principalId) return value_principalId;
        throw new UndeferrableValueException("Value 'AccountAssignmentArgs.principalId' is not present");
    }

    /**
     * The entity type for which the assignment will be created. Valid values: `USER`, `GROUP`.
     * 
     */
    @PolicyResourceProperty(name="principalType", flag="unknown_principalType")
    private String value_principalType;
    private boolean unknown_principalType;
    public String principalType() {
        if (!unknown_principalType) return value_principalType;
        throw new UndeferrableValueException("Value 'AccountAssignmentArgs.principalType' is not present");
    }

    /**
     * An AWS account identifier, typically a 10-12 digit string.
     * 
     */
    @PolicyResourceProperty(name="targetId", flag="unknown_targetId")
    private String value_targetId;
    private boolean unknown_targetId;
    public String targetId() {
        if (!unknown_targetId) return value_targetId;
        throw new UndeferrableValueException("Value 'AccountAssignmentArgs.targetId' is not present");
    }

    /**
     * The entity type for which the assignment will be created. Valid values: `AWS_ACCOUNT`.
     * 
     */
    @PolicyResourceProperty(name="targetType", flag="unknown_targetType")
    private String value_targetType;
    private boolean unknown_targetType;
    public String targetType() {
        if (!unknown_targetType) return value_targetType;
        throw new UndeferrableValueException("Value 'AccountAssignmentArgs.targetType' is not present");
    }

}
