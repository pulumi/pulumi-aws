// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.wafv2;

import com.pulumi.policypacks.aws.wafv2.RuleGroupRuleAction;
import com.pulumi.policypacks.aws.wafv2.RuleGroupRuleCaptchaConfig;
import com.pulumi.policypacks.aws.wafv2.RuleGroupRuleRuleLabel;
import com.pulumi.policypacks.aws.wafv2.RuleGroupRuleStatement;
import com.pulumi.policypacks.aws.wafv2.RuleGroupRuleVisibilityConfig;
import java.lang.Integer;
import java.lang.String;
import java.util.List;


public final class RuleGroupRule {

    /**
     * The action that AWS WAF should take on a web request when it matches the rule&#39;s statement. Settings at the `aws.wafv2.WebAcl` level can override the rule action setting. See Action below for details.
     * 
     */
    public RuleGroupRuleAction action;



    /**
     * Specifies how AWS WAF should handle CAPTCHA evaluations. See Captcha Configuration below for details.
     * 
     */
    public RuleGroupRuleCaptchaConfig captchaConfig;



    /**
     * A friendly name of the rule.
     * 
     */
    public String name;



    /**
     * If you define more than one Rule in a WebACL, AWS WAF evaluates each request against the `rules` in order based on the value of `priority`. AWS WAF processes rules with lower priority first.
     * 
     */
    public Integer priority;



    /**
     * Labels to apply to web requests that match the rule match statement. See Rule Label below for details.
     * 
     */
    public List<RuleGroupRuleRuleLabel> ruleLabels;



    /**
     * The AWS WAF processing statement for the rule, for example `byte_match_statement` or `geo_match_statement`. See Statement below for details.
     * 
     */
    public RuleGroupRuleStatement statement;



    /**
     * Defines and enables Amazon CloudWatch metrics and web request sample collection. See Visibility Configuration below for details.
     * 
     */
    public RuleGroupRuleVisibilityConfig visibilityConfig;



}
