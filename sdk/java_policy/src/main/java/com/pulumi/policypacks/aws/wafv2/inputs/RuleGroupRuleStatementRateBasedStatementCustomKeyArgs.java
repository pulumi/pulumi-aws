// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.wafv2.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.wafv2.inputs.RuleGroupRuleStatementRateBasedStatementCustomKeyCookieArgs;
import com.pulumi.policypacks.aws.wafv2.inputs.RuleGroupRuleStatementRateBasedStatementCustomKeyForwardedIpArgs;
import com.pulumi.policypacks.aws.wafv2.inputs.RuleGroupRuleStatementRateBasedStatementCustomKeyHeaderArgs;
import com.pulumi.policypacks.aws.wafv2.inputs.RuleGroupRuleStatementRateBasedStatementCustomKeyHttpMethodArgs;
import com.pulumi.policypacks.aws.wafv2.inputs.RuleGroupRuleStatementRateBasedStatementCustomKeyIpArgs;
import com.pulumi.policypacks.aws.wafv2.inputs.RuleGroupRuleStatementRateBasedStatementCustomKeyJa3FingerprintArgs;
import com.pulumi.policypacks.aws.wafv2.inputs.RuleGroupRuleStatementRateBasedStatementCustomKeyJa4FingerprintArgs;
import com.pulumi.policypacks.aws.wafv2.inputs.RuleGroupRuleStatementRateBasedStatementCustomKeyLabelNamespaceArgs;
import com.pulumi.policypacks.aws.wafv2.inputs.RuleGroupRuleStatementRateBasedStatementCustomKeyQueryArgumentArgs;
import com.pulumi.policypacks.aws.wafv2.inputs.RuleGroupRuleStatementRateBasedStatementCustomKeyQueryStringArgs;
import com.pulumi.policypacks.aws.wafv2.inputs.RuleGroupRuleStatementRateBasedStatementCustomKeyUriPathArgs;
import javax.annotation.Nullable;


public final class RuleGroupRuleStatementRateBasedStatementCustomKeyArgs {

    /**
     * (Optional) Use the value of a cookie in the request as an aggregate key. See RateLimit `cookie` below for details.
     * 
     */
    @PolicyResourceProperty(name="cookie", flag="unknown_cookie")
    private RuleGroupRuleStatementRateBasedStatementCustomKeyCookieArgs value_cookie;
    private boolean unknown_cookie;
    public RuleGroupRuleStatementRateBasedStatementCustomKeyCookieArgs cookie() {
        if (!unknown_cookie) return value_cookie;
        throw new UndeferrableValueException("Value 'RuleGroupRuleStatementRateBasedStatementCustomKeyArgs.cookie' is not present");
    }

    /**
     * (Optional) Use the first IP address in an HTTP header as an aggregate key. See `forwarded_ip` below for details.
     * 
     */
    @PolicyResourceProperty(name="forwardedIp", flag="unknown_forwardedIp")
    private RuleGroupRuleStatementRateBasedStatementCustomKeyForwardedIpArgs value_forwardedIp;
    private boolean unknown_forwardedIp;
    public RuleGroupRuleStatementRateBasedStatementCustomKeyForwardedIpArgs forwardedIp() {
        if (!unknown_forwardedIp) return value_forwardedIp;
        throw new UndeferrableValueException("Value 'RuleGroupRuleStatementRateBasedStatementCustomKeyArgs.forwardedIp' is not present");
    }

    /**
     * (Optional) Use the value of a header in the request as an aggregate key. See RateLimit `header` below for details.
     * 
     */
    @PolicyResourceProperty(name="header", flag="unknown_header")
    private RuleGroupRuleStatementRateBasedStatementCustomKeyHeaderArgs value_header;
    private boolean unknown_header;
    public RuleGroupRuleStatementRateBasedStatementCustomKeyHeaderArgs header() {
        if (!unknown_header) return value_header;
        throw new UndeferrableValueException("Value 'RuleGroupRuleStatementRateBasedStatementCustomKeyArgs.header' is not present");
    }

    /**
     * (Optional) Use the request&#39;s HTTP method as an aggregate key. See RateLimit `http_method` below for details.
     * 
     */
    @PolicyResourceProperty(name="httpMethod", flag="unknown_httpMethod")
    private RuleGroupRuleStatementRateBasedStatementCustomKeyHttpMethodArgs value_httpMethod;
    private boolean unknown_httpMethod;
    public RuleGroupRuleStatementRateBasedStatementCustomKeyHttpMethodArgs httpMethod() {
        if (!unknown_httpMethod) return value_httpMethod;
        throw new UndeferrableValueException("Value 'RuleGroupRuleStatementRateBasedStatementCustomKeyArgs.httpMethod' is not present");
    }

    /**
     * (Optional) Use the request&#39;s originating IP address as an aggregate key. See `RateLimit ip` below for details.
     * 
     */
    @PolicyResourceProperty(name="ip", flag="unknown_ip")
    private RuleGroupRuleStatementRateBasedStatementCustomKeyIpArgs value_ip;
    private boolean unknown_ip;
    public RuleGroupRuleStatementRateBasedStatementCustomKeyIpArgs ip() {
        if (!unknown_ip) return value_ip;
        throw new UndeferrableValueException("Value 'RuleGroupRuleStatementRateBasedStatementCustomKeyArgs.ip' is not present");
    }

    /**
     * (Optional) Use the JA3 fingerprint in the request as an aggregate key. See `RateLimit ip` below for details.
     * 
     */
    @PolicyResourceProperty(name="ja3Fingerprint", flag="unknown_ja3Fingerprint")
    private RuleGroupRuleStatementRateBasedStatementCustomKeyJa3FingerprintArgs value_ja3Fingerprint;
    private boolean unknown_ja3Fingerprint;
    public RuleGroupRuleStatementRateBasedStatementCustomKeyJa3FingerprintArgs ja3Fingerprint() {
        if (!unknown_ja3Fingerprint) return value_ja3Fingerprint;
        throw new UndeferrableValueException("Value 'RuleGroupRuleStatementRateBasedStatementCustomKeyArgs.ja3Fingerprint' is not present");
    }

    /**
     * (Optional) Use the JA3 fingerprint in the request as an aggregate key. See `RateLimit ip` below for details.
     * 
     */
    @PolicyResourceProperty(name="ja4Fingerprint", flag="unknown_ja4Fingerprint")
    private RuleGroupRuleStatementRateBasedStatementCustomKeyJa4FingerprintArgs value_ja4Fingerprint;
    private boolean unknown_ja4Fingerprint;
    public RuleGroupRuleStatementRateBasedStatementCustomKeyJa4FingerprintArgs ja4Fingerprint() {
        if (!unknown_ja4Fingerprint) return value_ja4Fingerprint;
        throw new UndeferrableValueException("Value 'RuleGroupRuleStatementRateBasedStatementCustomKeyArgs.ja4Fingerprint' is not present");
    }

    /**
     * (Optional) Use the specified label namespace as an aggregate key. See RateLimit `label_namespace` below for details.
     * 
     */
    @PolicyResourceProperty(name="labelNamespace", flag="unknown_labelNamespace")
    private RuleGroupRuleStatementRateBasedStatementCustomKeyLabelNamespaceArgs value_labelNamespace;
    private boolean unknown_labelNamespace;
    public RuleGroupRuleStatementRateBasedStatementCustomKeyLabelNamespaceArgs labelNamespace() {
        if (!unknown_labelNamespace) return value_labelNamespace;
        throw new UndeferrableValueException("Value 'RuleGroupRuleStatementRateBasedStatementCustomKeyArgs.labelNamespace' is not present");
    }

    /**
     * (Optional) Use the specified query argument as an aggregate key. See RateLimit `query_argument` below for details.
     * 
     */
    @PolicyResourceProperty(name="queryArgument", flag="unknown_queryArgument")
    private RuleGroupRuleStatementRateBasedStatementCustomKeyQueryArgumentArgs value_queryArgument;
    private boolean unknown_queryArgument;
    public RuleGroupRuleStatementRateBasedStatementCustomKeyQueryArgumentArgs queryArgument() {
        if (!unknown_queryArgument) return value_queryArgument;
        throw new UndeferrableValueException("Value 'RuleGroupRuleStatementRateBasedStatementCustomKeyArgs.queryArgument' is not present");
    }

    /**
     * (Optional) Use the request&#39;s query string as an aggregate key. See RateLimit `query_string` below for details.
     * 
     */
    @PolicyResourceProperty(name="queryString", flag="unknown_queryString")
    private RuleGroupRuleStatementRateBasedStatementCustomKeyQueryStringArgs value_queryString;
    private boolean unknown_queryString;
    public RuleGroupRuleStatementRateBasedStatementCustomKeyQueryStringArgs queryString() {
        if (!unknown_queryString) return value_queryString;
        throw new UndeferrableValueException("Value 'RuleGroupRuleStatementRateBasedStatementCustomKeyArgs.queryString' is not present");
    }

    /**
     * (Optional) Use the request&#39;s URI path as an aggregate key. See RateLimit `uri_path` below for details.
     * 
     */
    @PolicyResourceProperty(name="uriPath", flag="unknown_uriPath")
    private RuleGroupRuleStatementRateBasedStatementCustomKeyUriPathArgs value_uriPath;
    private boolean unknown_uriPath;
    public RuleGroupRuleStatementRateBasedStatementCustomKeyUriPathArgs uriPath() {
        if (!unknown_uriPath) return value_uriPath;
        throw new UndeferrableValueException("Value 'RuleGroupRuleStatementRateBasedStatementCustomKeyArgs.uriPath' is not present");
    }

}
