// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.networkfirewall;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.networkfirewall.RuleGroupEncryptionConfiguration;
import com.pulumi.policypacks.aws.networkfirewall.RuleGroupRuleGroup;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;


@PolicyResourceType(type="aws:networkfirewall/ruleGroup:RuleGroup")
public final class RuleGroup extends com.pulumi.resources.PolicyResource {

    /**
     * The Amazon Resource Name (ARN) that identifies the rule group.
     * 
     */
    public String arn;



    /**
     * The maximum number of operating resources that this rule group can use. For a stateless rule group, the capacity required is the sum of the capacity requirements of the individual rules. For a stateful rule group, the minimum capacity required is the number of individual rules.
     * 
     */
    public Integer capacity;



    /**
     * A friendly description of the rule group.
     * 
     */
    public String description;



    /**
     * KMS encryption configuration settings. See Encryption Configuration below for details.
     * 
     */
    public RuleGroupEncryptionConfiguration encryptionConfiguration;



    /**
     * A friendly name of the rule group.
     * 
     */
    public String name;



    /**
     * A configuration block that defines the rule group rules. Required unless `rules` is specified. See Rule Group below for details.
     * 
     */
    public RuleGroupRuleGroup ruleGroup;



    /**
     * The stateful rule group rules specifications in Suricata file format, with one rule per line. Use this to import your existing Suricata compatible rule groups. Required unless `rule_group` is specified.
     * 
     */
    public String rules;



    /**
     * A map of key:value pairs to associate with the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



    /**
     * Whether the rule group is stateless (containing stateless rules) or stateful (containing stateful rules). Valid values include: `STATEFUL` or `STATELESS`.
     * 
     */
    public String type;



    /**
     * A string token used when updating the rule group.
     * 
     */
    public String updateToken;



}
