// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.cloudwatch;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:cloudwatch/logAccountPolicy:LogAccountPolicy")
public final class LogAccountPolicyArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Text of the account policy. Refer to the [AWS docs](https://docs.aws.amazon.com/cli/latest/reference/logs/put-account-policy.html) for more information.
     * 
     */
    @PolicyResourceProperty(name="policyDocument", flag="unknown_policyDocument")
    private String value_policyDocument;
    private boolean unknown_policyDocument;
    public String policyDocument() {
        if (!unknown_policyDocument) return value_policyDocument;
        throw new UndeferrableValueException("Value 'LogAccountPolicyArgs.policyDocument' is not present");
    }

    /**
     * Name of the account policy.
     * 
     */
    @PolicyResourceProperty(name="policyName", flag="unknown_policyName")
    private String value_policyName;
    private boolean unknown_policyName;
    public String policyName() {
        if (!unknown_policyName) return value_policyName;
        throw new UndeferrableValueException("Value 'LogAccountPolicyArgs.policyName' is not present");
    }

    /**
     * Type of account policy. One of `DATA_PROTECTION_POLICY`, `SUBSCRIPTION_FILTER_POLICY`, `FIELD_INDEX_POLICY` or `TRANSFORMER_POLICY`. You can have one account policy per type in an account.
     * 
     */
    @PolicyResourceProperty(name="policyType", flag="unknown_policyType")
    private String value_policyType;
    private boolean unknown_policyType;
    public String policyType() {
        if (!unknown_policyType) return value_policyType;
        throw new UndeferrableValueException("Value 'LogAccountPolicyArgs.policyType' is not present");
    }

    /**
     * Currently defaults to and only accepts the value: `ALL`.
     * 
     */
    @PolicyResourceProperty(name="scope", flag="unknown_scope")
    private String value_scope;
    private boolean unknown_scope;
    public String scope() {
        if (!unknown_scope) return value_scope;
        throw new UndeferrableValueException("Value 'LogAccountPolicyArgs.scope' is not present");
    }

    /**
     * Criteria for applying a subscription filter policy to a selection of log groups. The only allowable criteria selector is `LogGroupName NOT IN []`.
     * 
     */
    @PolicyResourceProperty(name="selectionCriteria", flag="unknown_selectionCriteria")
    private String value_selectionCriteria;
    private boolean unknown_selectionCriteria;
    public String selectionCriteria() {
        if (!unknown_selectionCriteria) return value_selectionCriteria;
        throw new UndeferrableValueException("Value 'LogAccountPolicyArgs.selectionCriteria' is not present");
    }

}
