// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.directconnect;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Integer;
import java.lang.String;


@PolicyResourceType(type="aws:directconnect/bgpPeer:BgpPeer")
public final class BgpPeer extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The address family for the BGP peer. ` ipv4  ` or `ipv6`.
     * 
     */
    @PolicyResourceProperty(name="addressFamily", flag="unknown_addressFamily")
    private String value_addressFamily;
    private boolean unknown_addressFamily;
    public String addressFamily() {
        if (!unknown_addressFamily) return value_addressFamily;
        throw new UndeferrableValueException("Value 'BgpPeer.addressFamily' is not present");
    }

    /**
     * The IPv4 CIDR address to use to send traffic to Amazon.
     * Required for IPv4 BGP peers on public virtual interfaces.
     * 
     */
    @PolicyResourceProperty(name="amazonAddress", flag="unknown_amazonAddress")
    private String value_amazonAddress;
    private boolean unknown_amazonAddress;
    public String amazonAddress() {
        if (!unknown_amazonAddress) return value_amazonAddress;
        throw new UndeferrableValueException("Value 'BgpPeer.amazonAddress' is not present");
    }

    /**
     * The Direct Connect endpoint on which the BGP peer terminates.
     * 
     */
    @PolicyResourceProperty(name="awsDevice", flag="unknown_awsDevice")
    private String value_awsDevice;
    private boolean unknown_awsDevice;
    public String awsDevice() {
        if (!unknown_awsDevice) return value_awsDevice;
        throw new UndeferrableValueException("Value 'BgpPeer.awsDevice' is not present");
    }

    /**
     * The autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.
     * 
     */
    @PolicyResourceProperty(name="bgpAsn", flag="unknown_bgpAsn")
    private Integer value_bgpAsn;
    private boolean unknown_bgpAsn;
    public Integer bgpAsn() {
        if (!unknown_bgpAsn) return value_bgpAsn;
        throw new UndeferrableValueException("Value 'BgpPeer.bgpAsn' is not present");
    }

    /**
     * The authentication key for BGP configuration.
     * 
     */
    @PolicyResourceProperty(name="bgpAuthKey", flag="unknown_bgpAuthKey")
    private String value_bgpAuthKey;
    private boolean unknown_bgpAuthKey;
    public String bgpAuthKey() {
        if (!unknown_bgpAuthKey) return value_bgpAuthKey;
        throw new UndeferrableValueException("Value 'BgpPeer.bgpAuthKey' is not present");
    }

    /**
     * The ID of the BGP peer.
     * 
     */
    @PolicyResourceProperty(name="bgpPeerId", flag="unknown_bgpPeerId")
    private String value_bgpPeerId;
    private boolean unknown_bgpPeerId;
    public String bgpPeerId() {
        if (!unknown_bgpPeerId) return value_bgpPeerId;
        throw new UndeferrableValueException("Value 'BgpPeer.bgpPeerId' is not present");
    }

    /**
     * The Up/Down state of the BGP peer.
     * 
     */
    @PolicyResourceProperty(name="bgpStatus", flag="unknown_bgpStatus")
    private String value_bgpStatus;
    private boolean unknown_bgpStatus;
    public String bgpStatus() {
        if (!unknown_bgpStatus) return value_bgpStatus;
        throw new UndeferrableValueException("Value 'BgpPeer.bgpStatus' is not present");
    }

    /**
     * The IPv4 CIDR destination address to which Amazon should send traffic.
     * Required for IPv4 BGP peers on public virtual interfaces.
     * 
     */
    @PolicyResourceProperty(name="customerAddress", flag="unknown_customerAddress")
    private String value_customerAddress;
    private boolean unknown_customerAddress;
    public String customerAddress() {
        if (!unknown_customerAddress) return value_customerAddress;
        throw new UndeferrableValueException("Value 'BgpPeer.customerAddress' is not present");
    }

    /**
     * The ID of the Direct Connect virtual interface on which to create the BGP peer.
     * 
     */
    @PolicyResourceProperty(name="virtualInterfaceId", flag="unknown_virtualInterfaceId")
    private String value_virtualInterfaceId;
    private boolean unknown_virtualInterfaceId;
    public String virtualInterfaceId() {
        if (!unknown_virtualInterfaceId) return value_virtualInterfaceId;
        throw new UndeferrableValueException("Value 'BgpPeer.virtualInterfaceId' is not present");
    }

}
