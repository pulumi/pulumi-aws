// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appautoscaling;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.appautoscaling.outputs.ScheduledActionScalableTargetAction;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:appautoscaling/scheduledAction:ScheduledAction")
public final class ScheduledAction extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * ARN of the scheduled action.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'ScheduledAction.arn' is not present");
    }

    /**
     * Date and time for the scheduled action to end in RFC 3339 format. The timezone is not affected by the setting of `timezone`.
     * 
     */
    @PolicyResourceProperty(name="endTime", flag="unknown_endTime")
    private @Nullable String value_endTime;
    private boolean unknown_endTime;
    public @Nullable String endTime() {
        if (!unknown_endTime) return value_endTime;
        throw new UndeferrableValueException("Value 'ScheduledAction.endTime' is not present");
    }

    /**
     * Name of the scheduled action.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'ScheduledAction.name' is not present");
    }

    /**
     * Identifier of the resource associated with the scheduled action. Documentation can be found in the `ResourceId` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PutScheduledAction.html)
     * 
     */
    @PolicyResourceProperty(name="resourceId", flag="unknown_resourceId")
    private String value_resourceId;
    private boolean unknown_resourceId;
    public String resourceId() {
        if (!unknown_resourceId) return value_resourceId;
        throw new UndeferrableValueException("Value 'ScheduledAction.resourceId' is not present");
    }

    /**
     * Scalable dimension. Documentation can be found in the `ScalableDimension` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PutScheduledAction.html) Example: ecs:service:DesiredCount
     * 
     */
    @PolicyResourceProperty(name="scalableDimension", flag="unknown_scalableDimension")
    private String value_scalableDimension;
    private boolean unknown_scalableDimension;
    public String scalableDimension() {
        if (!unknown_scalableDimension) return value_scalableDimension;
        throw new UndeferrableValueException("Value 'ScheduledAction.scalableDimension' is not present");
    }

    /**
     * New minimum and maximum capacity. You can set both values or just one. See below
     * 
     */
    @PolicyResourceProperty(name="scalableTargetAction", flag="unknown_scalableTargetAction")
    private ScheduledActionScalableTargetAction value_scalableTargetAction;
    private boolean unknown_scalableTargetAction;
    public ScheduledActionScalableTargetAction scalableTargetAction() {
        if (!unknown_scalableTargetAction) return value_scalableTargetAction;
        throw new UndeferrableValueException("Value 'ScheduledAction.scalableTargetAction' is not present");
    }

    /**
     * Schedule for this action. The following formats are supported: At expressions - at(yyyy-mm-ddThh:mm:ss), Rate expressions - rate(valueunit), Cron expressions - cron(fields). Times for at expressions and cron expressions are evaluated using the time zone configured in `timezone`. Documentation can be found in the `Timezone` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PutScheduledAction.html)
     * 
     */
    @PolicyResourceProperty(name="schedule", flag="unknown_schedule")
    private String value_schedule;
    private boolean unknown_schedule;
    public String schedule() {
        if (!unknown_schedule) return value_schedule;
        throw new UndeferrableValueException("Value 'ScheduledAction.schedule' is not present");
    }

    /**
     * Namespace of the AWS service. Documentation can be found in the `ServiceNamespace` parameter at: [AWS Application Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/application/APIReference/API_PutScheduledAction.html) Example: ecs
     * 
     */
    @PolicyResourceProperty(name="serviceNamespace", flag="unknown_serviceNamespace")
    private String value_serviceNamespace;
    private boolean unknown_serviceNamespace;
    public String serviceNamespace() {
        if (!unknown_serviceNamespace) return value_serviceNamespace;
        throw new UndeferrableValueException("Value 'ScheduledAction.serviceNamespace' is not present");
    }

    /**
     * Date and time for the scheduled action to start in RFC 3339 format. The timezone is not affected by the setting of `timezone`.
     * 
     */
    @PolicyResourceProperty(name="startTime", flag="unknown_startTime")
    private @Nullable String value_startTime;
    private boolean unknown_startTime;
    public @Nullable String startTime() {
        if (!unknown_startTime) return value_startTime;
        throw new UndeferrableValueException("Value 'ScheduledAction.startTime' is not present");
    }

    /**
     * Time zone used when setting a scheduled action by using an at or cron expression. Does not affect timezone for `start_time` and `end_time`. Valid values are the [canonical names of the IANA time zones supported by Joda-Time](https://www.joda.org/joda-time/timezones.html), such as `Etc/GMT+9` or `Pacific/Tahiti`. Default is `UTC`.
     * 
     */
    @PolicyResourceProperty(name="timezone", flag="unknown_timezone")
    private @Nullable String value_timezone;
    private boolean unknown_timezone;
    public @Nullable String timezone() {
        if (!unknown_timezone) return value_timezone;
        throw new UndeferrableValueException("Value 'ScheduledAction.timezone' is not present");
    }

}
