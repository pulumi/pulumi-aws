// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2transitgateway;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ec2transitgateway/connect:Connect")
public final class Connect extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The tunnel protocol. Valid values: `gre`. Default is `gre`.
     * 
     */
    private @Nullable UndeferrableValue<String> protocol;

    public @Nullable String protocol() {
        if (protocol == null) return null;
        return protocol.getValue("Connect.protocol");
    }

    /**
     * Key-value tags for the EC2 Transit Gateway Connect. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private @Nullable UndeferrableValue<Map<String,String>> tags;

    public @Nullable Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("Connect.tags");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    private UndeferrableValue<Map<String,String>> tagsAll;

    public Map<String,String> tagsAll() {
        if (tagsAll == null) return null;
        return tagsAll.getValue("Connect.tagsAll");
    }

    /**
     * Boolean whether the Connect should be associated with the EC2 Transit Gateway association default route table. This cannot be configured or perform drift detection with Resource Access Manager shared EC2 Transit Gateways. Default value: `true`.
     * 
     */
    private @Nullable UndeferrableValue<Boolean> transitGatewayDefaultRouteTableAssociation;

    public @Nullable Boolean transitGatewayDefaultRouteTableAssociation() {
        if (transitGatewayDefaultRouteTableAssociation == null) return null;
        return transitGatewayDefaultRouteTableAssociation.getValue("Connect.transitGatewayDefaultRouteTableAssociation");
    }

    /**
     * Boolean whether the Connect should propagate routes with the EC2 Transit Gateway propagation default route table. This cannot be configured or perform drift detection with Resource Access Manager shared EC2 Transit Gateways. Default value: `true`.
     * 
     */
    private @Nullable UndeferrableValue<Boolean> transitGatewayDefaultRouteTablePropagation;

    public @Nullable Boolean transitGatewayDefaultRouteTablePropagation() {
        if (transitGatewayDefaultRouteTablePropagation == null) return null;
        return transitGatewayDefaultRouteTablePropagation.getValue("Connect.transitGatewayDefaultRouteTablePropagation");
    }

    /**
     * Identifier of EC2 Transit Gateway.
     * 
     */
    private UndeferrableValue<String> transitGatewayId;

    public String transitGatewayId() {
        if (transitGatewayId == null) return null;
        return transitGatewayId.getValue("Connect.transitGatewayId");
    }

    /**
     * The underlaying VPC attachment
     * 
     */
    private UndeferrableValue<String> transportAttachmentId;

    public String transportAttachmentId() {
        if (transportAttachmentId == null) return null;
        return transportAttachmentId.getValue("Connect.transportAttachmentId");
    }

}
