// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.secretsmanager.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class SecretRotationRotationRulesArgs {

    /**
     * Specifies the number of days between automatic scheduled rotations of the secret. Either `automatically_after_days` or `schedule_expression` must be specified.
     * 
     */
    @PolicyResourceProperty(name="automaticallyAfterDays", flag="unknown_automaticallyAfterDays")
    private Integer value_automaticallyAfterDays;
    private boolean unknown_automaticallyAfterDays;
    public Integer automaticallyAfterDays() {
        if (!unknown_automaticallyAfterDays) return value_automaticallyAfterDays;
        throw new UndeferrableValueException("Value 'SecretRotationRotationRulesArgs.automaticallyAfterDays' is not present");
    }

    /**
     * The length of the rotation window in hours. For example, `3h` for a three hour window.
     * 
     */
    @PolicyResourceProperty(name="duration", flag="unknown_duration")
    private String value_duration;
    private boolean unknown_duration;
    public String duration() {
        if (!unknown_duration) return value_duration;
        throw new UndeferrableValueException("Value 'SecretRotationRotationRulesArgs.duration' is not present");
    }

    /**
     * A `cron()` or `rate()` expression that defines the schedule for rotating your secret. Either `automatically_after_days` or `schedule_expression` must be specified.
     * 
     */
    @PolicyResourceProperty(name="scheduleExpression", flag="unknown_scheduleExpression")
    private String value_scheduleExpression;
    private boolean unknown_scheduleExpression;
    public String scheduleExpression() {
        if (!unknown_scheduleExpression) return value_scheduleExpression;
        throw new UndeferrableValueException("Value 'SecretRotationRotationRulesArgs.scheduleExpression' is not present");
    }

}
