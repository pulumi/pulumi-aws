// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.workspaces;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.workspaces.inputs.ConnectionAliasTimeoutsArgs;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:workspaces/connectionAlias:ConnectionAlias")
public final class ConnectionAliasArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The connection string specified for the connection alias. The connection string must be in the form of a fully qualified domain name (FQDN), such as www.example.com.
     * 
     */
    @PolicyResourceProperty(name="connectionString", flag="unknown_connectionString")
    private String value_connectionString;
    private boolean unknown_connectionString;
    public String connectionString() {
        if (!unknown_connectionString) return value_connectionString;
        throw new UndeferrableValueException("Value 'ConnectionAliasArgs.connectionString' is not present");
    }

    /**
     * A map of tags assigned to the WorkSpaces Connection Alias. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'ConnectionAliasArgs.tags' is not present");
    }

    @PolicyResourceProperty(name="timeouts", flag="unknown_timeouts")
    private ConnectionAliasTimeoutsArgs value_timeouts;
    private boolean unknown_timeouts;
    public ConnectionAliasTimeoutsArgs timeouts() {
        if (!unknown_timeouts) return value_timeouts;
        throw new UndeferrableValueException("Value 'ConnectionAliasArgs.timeouts' is not present");
    }

}
