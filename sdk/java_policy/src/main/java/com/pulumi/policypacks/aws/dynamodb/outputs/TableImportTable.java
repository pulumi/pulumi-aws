// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.dynamodb.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.dynamodb.outputs.TableImportTableInputFormatOptions;
import com.pulumi.policypacks.aws.dynamodb.outputs.TableImportTableS3BucketSource;
import java.lang.String;
import javax.annotation.Nullable;


public final class TableImportTable {

    /**
     * Type of compression to be used on the input coming from the imported table.
     * Valid values are `GZIP`, `ZSTD` and `NONE`.
     * 
     */
    private @Nullable UndeferrableValue<String> inputCompressionType;

    public @Nullable String inputCompressionType() {
        if (inputCompressionType == null) return null;
        return inputCompressionType.getValue("TableImportTable.inputCompressionType");
    }

    /**
     * The format of the source data.
     * Valid values are `CSV`, `DYNAMODB_JSON`, and `ION`.
     * 
     */
    private UndeferrableValue<String> inputFormat;

    public String inputFormat() {
        if (inputFormat == null) return null;
        return inputFormat.getValue("TableImportTable.inputFormat");
    }

    /**
     * Describe the format options for the data that was imported into the target table.
     * There is one value, `csv`.
     * See below.
     * 
     */
    private @Nullable UndeferrableValue<TableImportTableInputFormatOptions> inputFormatOptions;

    public @Nullable TableImportTableInputFormatOptions inputFormatOptions() {
        if (inputFormatOptions == null) return null;
        return inputFormatOptions.getValue("TableImportTable.inputFormatOptions");
    }

    /**
     * Values for the S3 bucket the source file is imported from.
     * See below.
     * 
     */
    private UndeferrableValue<TableImportTableS3BucketSource> s3BucketSource;

    public TableImportTableS3BucketSource s3BucketSource() {
        if (s3BucketSource == null) return null;
        return s3BucketSource.getValue("TableImportTable.s3BucketSource");
    }

}
