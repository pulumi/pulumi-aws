// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.guardduty;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:guardduty/member:Member")
public final class MemberArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * AWS account ID for member account.
     * 
     */
    private UndeferrableValue<String> accountId;

    public String accountId() {
        if (accountId == null) return null;
        return accountId.getValue("MemberArgs.accountId");
    }

    /**
     * The detector ID of the GuardDuty account where you want to create member accounts.
     * 
     */
    private UndeferrableValue<String> detectorId;

    public String detectorId() {
        if (detectorId == null) return null;
        return detectorId.getValue("MemberArgs.detectorId");
    }

    /**
     * Boolean whether an email notification is sent to the accounts. Defaults to `false`.
     * 
     */
    private UndeferrableValue<Boolean> disableEmailNotification;

    public Boolean disableEmailNotification() {
        if (disableEmailNotification == null) return null;
        return disableEmailNotification.getValue("MemberArgs.disableEmailNotification");
    }

    /**
     * Email address for member account.
     * 
     */
    private UndeferrableValue<String> email;

    public String email() {
        if (email == null) return null;
        return email.getValue("MemberArgs.email");
    }

    /**
     * Message for invitation.
     * 
     */
    private UndeferrableValue<String> invitationMessage;

    public String invitationMessage() {
        if (invitationMessage == null) return null;
        return invitationMessage.getValue("MemberArgs.invitationMessage");
    }

    /**
     * Boolean whether to invite the account to GuardDuty as a member. Defaults to `false`. To detect if an invitation needs to be (re-)sent, the this provider state value is `true` based on a `relationship_status` of `Disabled`, `Enabled`, `Invited`, or `EmailVerificationInProgress`.
     * 
     */
    private UndeferrableValue<Boolean> invite;

    public Boolean invite() {
        if (invite == null) return null;
        return invite.getValue("MemberArgs.invite");
    }

}
