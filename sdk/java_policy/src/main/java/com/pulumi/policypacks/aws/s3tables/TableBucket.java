// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.s3tables;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.s3tables.outputs.TableBucketMaintenanceConfiguration;
import java.lang.String;


@PolicyResourceType(type="aws:s3tables/tableBucket:TableBucket")
public final class TableBucket extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * ARN of the table bucket.
     * 
     */
    private UndeferrableValue<String> arn;

    public String arn() {
        if (arn == null) return null;
        return arn.getValue("TableBucket.arn");
    }

    /**
     * Date and time when the bucket was created.
     * 
     */
    private UndeferrableValue<String> createdAt;

    public String createdAt() {
        if (createdAt == null) return null;
        return createdAt.getValue("TableBucket.createdAt");
    }

    /**
     * A single table bucket maintenance configuration object.
     * See `maintenance_configuration` below.
     * 
     */
    private UndeferrableValue<TableBucketMaintenanceConfiguration> maintenanceConfiguration;

    public TableBucketMaintenanceConfiguration maintenanceConfiguration() {
        if (maintenanceConfiguration == null) return null;
        return maintenanceConfiguration.getValue("TableBucket.maintenanceConfiguration");
    }

    /**
     * Name of the table bucket.
     * Must be between 3 and 63 characters in length.
     * Can consist of lowercase letters, numbers, and hyphens, and must begin and end with a lowercase letter or number.
     * A full list of bucket naming rules can be found in the [S3 Tables documentation](https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-tables-buckets-naming.html#table-buckets-naming-rules).
     * 
     * The following argument is optional:
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("TableBucket.name");
    }

    /**
     * Account ID of the account that owns the table bucket.
     * 
     */
    private UndeferrableValue<String> ownerAccountId;

    public String ownerAccountId() {
        if (ownerAccountId == null) return null;
        return ownerAccountId.getValue("TableBucket.ownerAccountId");
    }

}
