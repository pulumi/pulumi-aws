// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.apigatewayv2;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.apigatewayv2.inputs.RouteRequestParameterArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:apigatewayv2/route:Route")
public final class RouteArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * API identifier.
     * 
     */
    private UndeferrableValue<String> apiId;

    public String apiId() {
        if (apiId == null) return null;
        return apiId.getValue("RouteArgs.apiId");
    }

    /**
     * Boolean whether an API key is required for the route. Defaults to `false`. Supported only for WebSocket APIs.
     * 
     */
    private UndeferrableValue<Boolean> apiKeyRequired;

    public Boolean apiKeyRequired() {
        if (apiKeyRequired == null) return null;
        return apiKeyRequired.getValue("RouteArgs.apiKeyRequired");
    }

    /**
     * Authorization scopes supported by this route. The scopes are used with a JWT authorizer to authorize the method invocation.
     * 
     */
    private UndeferrableValue<List<String>> authorizationScopes;

    public List<String> authorizationScopes() {
        if (authorizationScopes == null) return null;
        return authorizationScopes.getValue("RouteArgs.authorizationScopes");
    }

    /**
     * Authorization type for the route.
     * For WebSocket APIs, valid values are `NONE` for open access, `AWS_IAM` for using AWS IAM permissions, and `CUSTOM` for using a Lambda authorizer.
     * For HTTP APIs, valid values are `NONE` for open access, `JWT` for using JSON Web Tokens, `AWS_IAM` for using AWS IAM permissions, and `CUSTOM` for using a Lambda authorizer.
     * Defaults to `NONE`.
     * 
     */
    private UndeferrableValue<String> authorizationType;

    public String authorizationType() {
        if (authorizationType == null) return null;
        return authorizationType.getValue("RouteArgs.authorizationType");
    }

    /**
     * Identifier of the `aws.apigatewayv2.Authorizer` resource to be associated with this route.
     * 
     */
    private UndeferrableValue<String> authorizerId;

    public String authorizerId() {
        if (authorizerId == null) return null;
        return authorizerId.getValue("RouteArgs.authorizerId");
    }

    /**
     * The [model selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-model-selection-expressions) for the route. Supported only for WebSocket APIs.
     * 
     */
    private UndeferrableValue<String> modelSelectionExpression;

    public String modelSelectionExpression() {
        if (modelSelectionExpression == null) return null;
        return modelSelectionExpression.getValue("RouteArgs.modelSelectionExpression");
    }

    /**
     * Operation name for the route. Must be between 1 and 64 characters in length.
     * 
     */
    private UndeferrableValue<String> operationName;

    public String operationName() {
        if (operationName == null) return null;
        return operationName.getValue("RouteArgs.operationName");
    }

    /**
     * Request models for the route. Supported only for WebSocket APIs.
     * 
     */
    private UndeferrableValue<Map<String,String>> requestModels;

    public Map<String,String> requestModels() {
        if (requestModels == null) return null;
        return requestModels.getValue("RouteArgs.requestModels");
    }

    /**
     * Request parameters for the route. Supported only for WebSocket APIs.
     * 
     */
    private UndeferrableValue<List<RouteRequestParameterArgs>> requestParameters;

    public List<RouteRequestParameterArgs> requestParameters() {
        if (requestParameters == null) return null;
        return requestParameters.getValue("RouteArgs.requestParameters");
    }

    /**
     * Route key for the route. For HTTP APIs, the route key can be either `$default`, or a combination of an HTTP method and resource path, for example, `GET /pets`.
     * 
     */
    private UndeferrableValue<String> routeKey;

    public String routeKey() {
        if (routeKey == null) return null;
        return routeKey.getValue("RouteArgs.routeKey");
    }

    /**
     * The [route response selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-route-response-selection-expressions) for the route. Supported only for WebSocket APIs.
     * 
     */
    private UndeferrableValue<String> routeResponseSelectionExpression;

    public String routeResponseSelectionExpression() {
        if (routeResponseSelectionExpression == null) return null;
        return routeResponseSelectionExpression.getValue("RouteArgs.routeResponseSelectionExpression");
    }

    /**
     * Target for the route, of the form `integrations/`*`IntegrationID`*, where *`IntegrationID`* is the identifier of an `aws.apigatewayv2.Integration` resource.
     * 
     */
    private UndeferrableValue<String> target;

    public String target() {
        if (target == null) return null;
        return target.getValue("RouteArgs.target");
    }

}
