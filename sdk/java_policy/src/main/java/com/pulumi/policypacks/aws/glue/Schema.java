// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.glue;

import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;


@PolicyResourceType(type="aws:glue/schema:Schema")
public final class Schema extends com.pulumi.resources.PolicyResource {

    /**
     * Amazon Resource Name (ARN) of the schema.
     * 
     */
    public String arn;



    /**
     * The compatibility mode of the schema. Values values are: `NONE`, `DISABLED`, `BACKWARD`, `BACKWARD_ALL`, `FORWARD`, `FORWARD_ALL`, `FULL`, and `FULL_ALL`.
     * 
     */
    public String compatibility;



    /**
     * The data format of the schema definition. Valid values are `AVRO`, `JSON` and `PROTOBUF`.
     * 
     */
    public String dataFormat;



    /**
     * A description of the schema.
     * 
     */
    public String description;



    /**
     * The latest version of the schema associated with the returned schema definition.
     * 
     */
    public Integer latestSchemaVersion;



    /**
     * The next version of the schema associated with the returned schema definition.
     * 
     */
    public Integer nextSchemaVersion;



    /**
     * The ARN of the Glue Registry to create the schema in.
     * 
     */
    public String registryArn;



    /**
     * The name of the Glue Registry.
     * 
     */
    public String registryName;



    /**
     * The version number of the checkpoint (the last time the compatibility mode was changed).
     * 
     */
    public Integer schemaCheckpoint;



    /**
     * The schema definition using the `data_format` setting for `schema_name`.
     * 
     */
    public String schemaDefinition;



    /**
     * The Name of the schema.
     * 
     */
    public String schemaName;



    /**
     * Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



}
