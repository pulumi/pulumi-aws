// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.evidently.inputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.String;
import javax.annotation.Nullable;


public final class LaunchMetricMonitorMetricDefinitionArgs {

    /**
     * Specifies the entity, such as a user or session, that does an action that causes a metric value to be recorded. An example is `userDetails.userID`.
     * 
     */
    private UndeferrableValue<String> entityIdKey;

    public String entityIdKey() {
        if (entityIdKey == null) return null;
        return entityIdKey.getValue("LaunchMetricMonitorMetricDefinitionArgs.entityIdKey");
    }

    /**
     * Specifies The EventBridge event pattern that defines how the metric is recorded.
     * 
     */
    private UndeferrableValue<String> eventPattern;

    public String eventPattern() {
        if (eventPattern == null) return null;
        return eventPattern.getValue("LaunchMetricMonitorMetricDefinitionArgs.eventPattern");
    }

    /**
     * Specifies the name for the metric.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("LaunchMetricMonitorMetricDefinitionArgs.name");
    }

    /**
     * Specifies a label for the units that the metric is measuring.
     * 
     */
    private UndeferrableValue<String> unitLabel;

    public String unitLabel() {
        if (unitLabel == null) return null;
        return unitLabel.getValue("LaunchMetricMonitorMetricDefinitionArgs.unitLabel");
    }

    /**
     * Specifies the value that is tracked to produce the metric.
     * 
     */
    private UndeferrableValue<String> valueKey;

    public String valueKey() {
        if (valueKey == null) return null;
        return valueKey.getValue("LaunchMetricMonitorMetricDefinitionArgs.valueKey");
    }

}
