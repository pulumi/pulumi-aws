// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.lb.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.Boolean;
import java.lang.Integer;
import javax.annotation.Nullable;


public final class TargetGroupTargetHealthState {

    /**
     * Indicates whether the load balancer terminates connections to unhealthy targets. Possible values are `true` or `false`. Default: `true`.
     * 
     */
    @PolicyResourceProperty(name="enableUnhealthyConnectionTermination", flag="unknown_enableUnhealthyConnectionTermination")
    private Boolean value_enableUnhealthyConnectionTermination;
    private boolean unknown_enableUnhealthyConnectionTermination;
    public Boolean enableUnhealthyConnectionTermination() {
        if (!unknown_enableUnhealthyConnectionTermination) return value_enableUnhealthyConnectionTermination;
        throw new UndeferrableValueException("Value 'TargetGroupTargetHealthState.enableUnhealthyConnectionTermination' is not present");
    }

    /**
     * Indicates the time to wait for in-flight requests to complete when a target becomes unhealthy. The range is `0-360000`. This value has to be set only if `enable_unhealthy_connection_termination` is set to false. Default: `0`.
     * 
     */
    @PolicyResourceProperty(name="unhealthyDrainingInterval", flag="unknown_unhealthyDrainingInterval")
    private @Nullable Integer value_unhealthyDrainingInterval;
    private boolean unknown_unhealthyDrainingInterval;
    public @Nullable Integer unhealthyDrainingInterval() {
        if (!unknown_unhealthyDrainingInterval) return value_unhealthyDrainingInterval;
        throw new UndeferrableValueException("Value 'TargetGroupTargetHealthState.unhealthyDrainingInterval' is not present");
    }

}
