// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.iam;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:iam/group:Group")
public final class Group extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The ARN assigned by AWS for this group.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'Group.arn' is not present");
    }

    /**
     * The group&#39;s name. The name must consist of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: `=,.{@literal @}-_.`. Group names are not distinguished by case. For example, you cannot create groups named both &#34;ADMINS&#34; and &#34;admins&#34;.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'Group.name' is not present");
    }

    /**
     * Path in which to create the group.
     * 
     */
    @PolicyResourceProperty(name="path", flag="unknown_path")
    private @Nullable String value_path;
    private boolean unknown_path;
    public @Nullable String path() {
        if (!unknown_path) return value_path;
        throw new UndeferrableValueException("Value 'Group.path' is not present");
    }

    /**
     * The [unique ID][1] assigned by AWS.
     * 
     */
    @PolicyResourceProperty(name="uniqueId", flag="unknown_uniqueId")
    private String value_uniqueId;
    private boolean unknown_uniqueId;
    public String uniqueId() {
        if (!unknown_uniqueId) return value_uniqueId;
        throw new UndeferrableValueException("Value 'Group.uniqueId' is not present");
    }

}
