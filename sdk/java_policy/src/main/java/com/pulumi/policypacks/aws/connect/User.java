// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.connect;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.connect.outputs.UserIdentityInfo;
import com.pulumi.policypacks.aws.connect.outputs.UserPhoneConfig;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:connect/user:User")
public final class User extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The Amazon Resource Name (ARN) of the user.
     * 
     */
    private UndeferrableValue<String> arn;

    public String arn() {
        if (arn == null) return null;
        return arn.getValue("User.arn");
    }

    /**
     * The identifier of the user account in the directory used for identity management. If Amazon Connect cannot access the directory, you can specify this identifier to authenticate users. If you include the identifier, we assume that Amazon Connect cannot access the directory. Otherwise, the identity information is used to authenticate users from your directory. This parameter is required if you are using an existing directory for identity management in Amazon Connect when Amazon Connect cannot access your directory to authenticate users. If you are using SAML for identity management and include this parameter, an error is returned.
     * 
     */
    private UndeferrableValue<String> directoryUserId;

    public String directoryUserId() {
        if (directoryUserId == null) return null;
        return directoryUserId.getValue("User.directoryUserId");
    }

    /**
     * The identifier of the hierarchy group for the user.
     * 
     */
    private @Nullable UndeferrableValue<String> hierarchyGroupId;

    public @Nullable String hierarchyGroupId() {
        if (hierarchyGroupId == null) return null;
        return hierarchyGroupId.getValue("User.hierarchyGroupId");
    }

    /**
     * A block that contains information about the identity of the user. Documented below.
     * 
     */
    private @Nullable UndeferrableValue<UserIdentityInfo> identityInfo;

    public @Nullable UserIdentityInfo identityInfo() {
        if (identityInfo == null) return null;
        return identityInfo.getValue("User.identityInfo");
    }

    /**
     * Specifies the identifier of the hosting Amazon Connect Instance.
     * 
     */
    private UndeferrableValue<String> instanceId;

    public String instanceId() {
        if (instanceId == null) return null;
        return instanceId.getValue("User.instanceId");
    }

    /**
     * The user name for the account. For instances not using SAML for identity management, the user name can include up to 20 characters. If you are using SAML for identity management, the user name can include up to 64 characters from `[a-zA-Z0-9_-.\{@literal @}]+`.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("User.name");
    }

    /**
     * The password for the user account. A password is required if you are using Amazon Connect for identity management. Otherwise, it is an error to include a password.
     * 
     */
    private @Nullable UndeferrableValue<String> password;

    public @Nullable String password() {
        if (password == null) return null;
        return password.getValue("User.password");
    }

    /**
     * A block that contains information about the phone settings for the user. Documented below.
     * 
     */
    private UndeferrableValue<UserPhoneConfig> phoneConfig;

    public UserPhoneConfig phoneConfig() {
        if (phoneConfig == null) return null;
        return phoneConfig.getValue("User.phoneConfig");
    }

    /**
     * The identifier of the routing profile for the user.
     * 
     */
    private UndeferrableValue<String> routingProfileId;

    public String routingProfileId() {
        if (routingProfileId == null) return null;
        return routingProfileId.getValue("User.routingProfileId");
    }

    /**
     * A list of identifiers for the security profiles for the user. Specify a minimum of 1 and maximum of 10 security profile ids. For more information, see [Best Practices for Security Profiles](https://docs.aws.amazon.com/connect/latest/adminguide/security-profile-best-practices.html) in the Amazon Connect Administrator Guide.
     * 
     */
    private UndeferrableValue<List<String>> securityProfileIds;

    public List<String> securityProfileIds() {
        if (securityProfileIds == null) return null;
        return securityProfileIds.getValue("User.securityProfileIds");
    }

    /**
     * Tags to apply to the user. If configured with a provider
     * `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private @Nullable UndeferrableValue<Map<String,String>> tags;

    public @Nullable Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("User.tags");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    private UndeferrableValue<Map<String,String>> tagsAll;

    public Map<String,String> tagsAll() {
        if (tagsAll == null) return null;
        return tagsAll.getValue("User.tagsAll");
    }

    /**
     * The identifier for the user.
     * 
     */
    private UndeferrableValue<String> userId;

    public String userId() {
        if (userId == null) return null;
        return userId.getValue("User.userId");
    }

}
