// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ssm.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigArgs {

    /**
     * An Amazon Resource Name (ARN) for a Simple Notification Service (SNS) topic. Run Command pushes notifications about command status changes to this topic.
     * 
     */
    @PolicyResourceProperty(name="notificationArn", flag="unknown_notificationArn")
    private String value_notificationArn;
    private boolean unknown_notificationArn;
    public String notificationArn() {
        if (!unknown_notificationArn) return value_notificationArn;
        throw new UndeferrableValueException("Value 'MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigArgs.notificationArn' is not present");
    }

    /**
     * The different events for which you can receive notifications. Valid values: `All`, `InProgress`, `Success`, `TimedOut`, `Cancelled`, and `Failed`
     * 
     */
    @PolicyResourceProperty(name="notificationEvents", flag="unknown_notificationEvents")
    private List<String> value_notificationEvents;
    private boolean unknown_notificationEvents;
    public List<String> notificationEvents() {
        if (!unknown_notificationEvents) return value_notificationEvents;
        throw new UndeferrableValueException("Value 'MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigArgs.notificationEvents' is not present");
    }

    /**
     * When specified with `Command`, receive notification when the status of a command changes. When specified with `Invocation`, for commands sent to multiple instances, receive notification on a per-instance basis when the status of a command changes. Valid values: `Command` and `Invocation`
     * 
     */
    @PolicyResourceProperty(name="notificationType", flag="unknown_notificationType")
    private String value_notificationType;
    private boolean unknown_notificationType;
    public String notificationType() {
        if (!unknown_notificationType) return value_notificationType;
        throw new UndeferrableValueException("Value 'MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfigArgs.notificationType' is not present");
    }

}
