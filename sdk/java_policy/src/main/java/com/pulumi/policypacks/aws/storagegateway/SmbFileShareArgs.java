// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.storagegateway;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.storagegateway.inputs.SmbFileShareCacheAttributesArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:storagegateway/smbFileShare:SmbFileShare")
public final class SmbFileShareArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The files and folders on this share will only be visible to users with read access. Default value is `false`.
     * 
     */
    private UndeferrableValue<Boolean> accessBasedEnumeration;

    public Boolean accessBasedEnumeration() {
        if (accessBasedEnumeration == null) return null;
        return accessBasedEnumeration.getValue("SmbFileShareArgs.accessBasedEnumeration");
    }

    /**
     * A list of users in the Active Directory that have admin access to the file share. Only valid if `authentication` is set to `ActiveDirectory`.
     * 
     */
    private UndeferrableValue<List<String>> adminUserLists;

    public List<String> adminUserLists() {
        if (adminUserLists == null) return null;
        return adminUserLists.getValue("SmbFileShareArgs.adminUserLists");
    }

    /**
     * The Amazon Resource Name (ARN) of the CloudWatch Log Group used for the audit logs.
     * 
     */
    private UndeferrableValue<String> auditDestinationArn;

    public String auditDestinationArn() {
        if (auditDestinationArn == null) return null;
        return auditDestinationArn.getValue("SmbFileShareArgs.auditDestinationArn");
    }

    /**
     * The authentication method that users use to access the file share. Defaults to `ActiveDirectory`. Valid values: `ActiveDirectory`, `GuestAccess`.
     * 
     */
    private UndeferrableValue<String> authentication;

    public String authentication() {
        if (authentication == null) return null;
        return authentication.getValue("SmbFileShareArgs.authentication");
    }

    /**
     * The region of the S3 buck used by the file share. Required when specifying a `vpc_endpoint_dns_name`.
     * 
     */
    private UndeferrableValue<String> bucketRegion;

    public String bucketRegion() {
        if (bucketRegion == null) return null;
        return bucketRegion.getValue("SmbFileShareArgs.bucketRegion");
    }

    /**
     * Refresh cache information. see `cache_attributes` Block for more details.
     * 
     * **Note:** If you have previously included a `cache_attributes` block in your configuration, removing it will not reset the refresh cache value and the previous value will remain. You must explicitly set a new value to change it.
     * 
     */
    private UndeferrableValue<SmbFileShareCacheAttributesArgs> cacheAttributes;

    public SmbFileShareCacheAttributesArgs cacheAttributes() {
        if (cacheAttributes == null) return null;
        return cacheAttributes.getValue("SmbFileShareArgs.cacheAttributes");
    }

    /**
     * The case of an object name in an Amazon S3 bucket. For `ClientSpecified`, the client determines the case sensitivity. For `CaseSensitive`, the gateway determines the case sensitivity. The default value is `ClientSpecified`.
     * 
     */
    private UndeferrableValue<String> caseSensitivity;

    public String caseSensitivity() {
        if (caseSensitivity == null) return null;
        return caseSensitivity.getValue("SmbFileShareArgs.caseSensitivity");
    }

    /**
     * The default [storage class](https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_CreateNFSFileShare.html#StorageGateway-CreateNFSFileShare-request-DefaultStorageClass) for objects put into an Amazon S3 bucket by the file gateway. Defaults to `S3_STANDARD`.
     * 
     */
    private UndeferrableValue<String> defaultStorageClass;

    public String defaultStorageClass() {
        if (defaultStorageClass == null) return null;
        return defaultStorageClass.getValue("SmbFileShareArgs.defaultStorageClass");
    }

    /**
     * The name of the file share. Must be set if an S3 prefix name is set in `location_arn`.
     * 
     */
    private UndeferrableValue<String> fileShareName;

    public String fileShareName() {
        if (fileShareName == null) return null;
        return fileShareName.getValue("SmbFileShareArgs.fileShareName");
    }

    /**
     * Amazon Resource Name (ARN) of the file gateway.
     * 
     */
    private UndeferrableValue<String> gatewayArn;

    public String gatewayArn() {
        if (gatewayArn == null) return null;
        return gatewayArn.getValue("SmbFileShareArgs.gatewayArn");
    }

    /**
     * Boolean value that enables guessing of the MIME type for uploaded objects based on file extensions. Defaults to `true`.
     * 
     */
    private UndeferrableValue<Boolean> guessMimeTypeEnabled;

    public Boolean guessMimeTypeEnabled() {
        if (guessMimeTypeEnabled == null) return null;
        return guessMimeTypeEnabled.getValue("SmbFileShareArgs.guessMimeTypeEnabled");
    }

    /**
     * A list of users in the Active Directory that are not allowed to access the file share. Only valid if `authentication` is set to `ActiveDirectory`.
     * 
     */
    private UndeferrableValue<List<String>> invalidUserLists;

    public List<String> invalidUserLists() {
        if (invalidUserLists == null) return null;
        return invalidUserLists.getValue("SmbFileShareArgs.invalidUserLists");
    }

    /**
     * Boolean value if `true` to use Amazon S3 server side encryption with your own AWS KMS key, or `false` to use a key managed by Amazon S3. Defaults to `false`.
     * 
     */
    private UndeferrableValue<Boolean> kmsEncrypted;

    public Boolean kmsEncrypted() {
        if (kmsEncrypted == null) return null;
        return kmsEncrypted.getValue("SmbFileShareArgs.kmsEncrypted");
    }

    /**
     * Amazon Resource Name (ARN) for KMS key used for Amazon S3 server side encryption. This value can only be set when `kms_encrypted` is true.
     * 
     */
    private UndeferrableValue<String> kmsKeyArn;

    public String kmsKeyArn() {
        if (kmsKeyArn == null) return null;
        return kmsKeyArn.getValue("SmbFileShareArgs.kmsKeyArn");
    }

    /**
     * The ARN of the backed storage used for storing file data.
     * 
     */
    private UndeferrableValue<String> locationArn;

    public String locationArn() {
        if (locationArn == null) return null;
        return locationArn.getValue("SmbFileShareArgs.locationArn");
    }

    /**
     * The notification policy of the file share. For more information see the [AWS Documentation](https://docs.aws.amazon.com/storagegateway/latest/APIReference/API_CreateNFSFileShare.html#StorageGateway-CreateNFSFileShare-request-NotificationPolicy). Default value is `{}`.
     * 
     */
    private UndeferrableValue<String> notificationPolicy;

    public String notificationPolicy() {
        if (notificationPolicy == null) return null;
        return notificationPolicy.getValue("SmbFileShareArgs.notificationPolicy");
    }

    /**
     * Access Control List permission for S3 objects. Defaults to `private`.
     * 
     */
    private UndeferrableValue<String> objectAcl;

    public String objectAcl() {
        if (objectAcl == null) return null;
        return objectAcl.getValue("SmbFileShareArgs.objectAcl");
    }

    /**
     * Boolean to indicate Opportunistic lock (oplock) status. Defaults to `true`.
     * 
     */
    private UndeferrableValue<Boolean> oplocksEnabled;

    public Boolean oplocksEnabled() {
        if (oplocksEnabled == null) return null;
        return oplocksEnabled.getValue("SmbFileShareArgs.oplocksEnabled");
    }

    /**
     * Boolean to indicate write status of file share. File share does not accept writes if `true`. Defaults to `false`.
     * 
     */
    private UndeferrableValue<Boolean> readOnly;

    public Boolean readOnly() {
        if (readOnly == null) return null;
        return readOnly.getValue("SmbFileShareArgs.readOnly");
    }

    /**
     * Boolean who pays the cost of the request and the data download from the Amazon S3 bucket. Set this value to `true` if you want the requester to pay instead of the bucket owner. Defaults to `false`.
     * 
     */
    private UndeferrableValue<Boolean> requesterPays;

    public Boolean requesterPays() {
        if (requesterPays == null) return null;
        return requesterPays.getValue("SmbFileShareArgs.requesterPays");
    }

    /**
     * The ARN of the AWS Identity and Access Management (IAM) role that a file gateway assumes when it accesses the underlying storage.
     * 
     */
    private UndeferrableValue<String> roleArn;

    public String roleArn() {
        if (roleArn == null) return null;
        return roleArn.getValue("SmbFileShareArgs.roleArn");
    }

    /**
     * Set this value to `true` to enable ACL (access control list) on the SMB fileshare. Set it to `false` to map file and directory permissions to the POSIX permissions. This setting applies only to `ActiveDirectory` authentication type.
     * 
     */
    private UndeferrableValue<Boolean> smbAclEnabled;

    public Boolean smbAclEnabled() {
        if (smbAclEnabled == null) return null;
        return smbAclEnabled.getValue("SmbFileShareArgs.smbAclEnabled");
    }

    /**
     * Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("SmbFileShareArgs.tags");
    }

    /**
     * A list of users in the Active Directory that are allowed to access the file share. If you need to specify an Active directory group, add &#39;{@literal @}&#39; before the name of the group. It will be set on Allowed group in AWS console. Only valid if `authentication` is set to `ActiveDirectory`.
     * 
     */
    private UndeferrableValue<List<String>> validUserLists;

    public List<String> validUserLists() {
        if (validUserLists == null) return null;
        return validUserLists.getValue("SmbFileShareArgs.validUserLists");
    }

    /**
     * The DNS name of the VPC endpoint for S3 private link.
     * 
     */
    private UndeferrableValue<String> vpcEndpointDnsName;

    public String vpcEndpointDnsName() {
        if (vpcEndpointDnsName == null) return null;
        return vpcEndpointDnsName.getValue("SmbFileShareArgs.vpcEndpointDnsName");
    }

}
