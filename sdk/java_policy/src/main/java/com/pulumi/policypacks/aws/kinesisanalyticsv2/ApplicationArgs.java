// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.kinesisanalyticsv2;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.kinesisanalyticsv2.inputs.ApplicationApplicationConfigurationArgs;
import com.pulumi.policypacks.aws.kinesisanalyticsv2.inputs.ApplicationCloudwatchLoggingOptionsArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:kinesisanalyticsv2/application:Application")
public final class ApplicationArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The application&#39;s configuration
     * 
     */
    @PolicyResourceProperty(name="applicationConfiguration", flag="unknown_applicationConfiguration")
    private ApplicationApplicationConfigurationArgs value_applicationConfiguration;
    private boolean unknown_applicationConfiguration;
    public ApplicationApplicationConfigurationArgs applicationConfiguration() {
        if (!unknown_applicationConfiguration) return value_applicationConfiguration;
        throw new UndeferrableValueException("Value 'ApplicationArgs.applicationConfiguration' is not present");
    }

    /**
     * The application&#39;s mode. Valid values are `STREAMING`, `INTERACTIVE`.
     * 
     */
    @PolicyResourceProperty(name="applicationMode", flag="unknown_applicationMode")
    private String value_applicationMode;
    private boolean unknown_applicationMode;
    public String applicationMode() {
        if (!unknown_applicationMode) return value_applicationMode;
        throw new UndeferrableValueException("Value 'ApplicationArgs.applicationMode' is not present");
    }

    /**
     * A CloudWatch log stream to monitor application configuration errors.
     * 
     */
    @PolicyResourceProperty(name="cloudwatchLoggingOptions", flag="unknown_cloudwatchLoggingOptions")
    private ApplicationCloudwatchLoggingOptionsArgs value_cloudwatchLoggingOptions;
    private boolean unknown_cloudwatchLoggingOptions;
    public ApplicationCloudwatchLoggingOptionsArgs cloudwatchLoggingOptions() {
        if (!unknown_cloudwatchLoggingOptions) return value_cloudwatchLoggingOptions;
        throw new UndeferrableValueException("Value 'ApplicationArgs.cloudwatchLoggingOptions' is not present");
    }

    /**
     * A summary description of the application.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private String value_description;
    private boolean unknown_description;
    public String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'ApplicationArgs.description' is not present");
    }

    /**
     * Whether to force stop an unresponsive Flink-based application.
     * 
     */
    @PolicyResourceProperty(name="forceStop", flag="unknown_forceStop")
    private Boolean value_forceStop;
    private boolean unknown_forceStop;
    public Boolean forceStop() {
        if (!unknown_forceStop) return value_forceStop;
        throw new UndeferrableValueException("Value 'ApplicationArgs.forceStop' is not present");
    }

    /**
     * The name of the application.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'ApplicationArgs.name' is not present");
    }

    /**
     * The runtime environment for the application. Valid values: `SQL-1_0`, `FLINK-1_6`, `FLINK-1_8`, `FLINK-1_11`, `FLINK-1_13`, `FLINK-1_15`, `FLINK-1_18`, `FLINK-1_19`.
     * 
     */
    @PolicyResourceProperty(name="runtimeEnvironment", flag="unknown_runtimeEnvironment")
    private String value_runtimeEnvironment;
    private boolean unknown_runtimeEnvironment;
    public String runtimeEnvironment() {
        if (!unknown_runtimeEnvironment) return value_runtimeEnvironment;
        throw new UndeferrableValueException("Value 'ApplicationArgs.runtimeEnvironment' is not present");
    }

    /**
     * The ARN of the IAM role used by the application to access Kinesis data streams, Kinesis Data Firehose delivery streams, Amazon S3 objects, and other external resources.
     * 
     */
    @PolicyResourceProperty(name="serviceExecutionRole", flag="unknown_serviceExecutionRole")
    private String value_serviceExecutionRole;
    private boolean unknown_serviceExecutionRole;
    public String serviceExecutionRole() {
        if (!unknown_serviceExecutionRole) return value_serviceExecutionRole;
        throw new UndeferrableValueException("Value 'ApplicationArgs.serviceExecutionRole' is not present");
    }

    /**
     * Whether to start or stop the application.
     * 
     */
    @PolicyResourceProperty(name="startApplication", flag="unknown_startApplication")
    private Boolean value_startApplication;
    private boolean unknown_startApplication;
    public Boolean startApplication() {
        if (!unknown_startApplication) return value_startApplication;
        throw new UndeferrableValueException("Value 'ApplicationArgs.startApplication' is not present");
    }

    /**
     * A map of tags to assign to the application. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'ApplicationArgs.tags' is not present");
    }

}
