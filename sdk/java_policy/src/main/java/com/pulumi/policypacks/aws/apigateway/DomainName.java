// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.apigateway;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.apigateway.DomainNameEndpointConfiguration;
import com.pulumi.policypacks.aws.apigateway.DomainNameMutualTlsAuthentication;
import java.lang.String;
import java.util.Map;


@PolicyResourceType(type="aws:apigateway/domainName:DomainName")
public final class DomainName extends com.pulumi.resources.PolicyResource {

    /**
     * ARN of domain name.
     * 
     */
    public String arn;



    /**
     * ARN for an AWS-managed certificate. AWS Certificate Manager is the only supported source. Used when an edge-optimized domain name is desired. Conflicts with `certificate_name`, `certificate_body`, `certificate_chain`, `certificate_private_key`, `regional_certificate_arn`, and `regional_certificate_name`.
     * 
     */
    public String certificateArn;



    /**
     * Certificate issued for the domain name being registered, in PEM format. Only valid for `EDGE` endpoint configuration type. Conflicts with `certificate_arn`, `regional_certificate_arn`, and `regional_certificate_name`.
     * 
     */
    public String certificateBody;



    /**
     * Certificate for the CA that issued the certificate, along with any intermediate CA certificates required to create an unbroken chain to a certificate trusted by the intended API clients. Only valid for `EDGE` endpoint configuration type. Conflicts with `certificate_arn`, `regional_certificate_arn`, and `regional_certificate_name`.
     * 
     */
    public String certificateChain;



    /**
     * Unique name to use when registering this certificate as an IAM server certificate. Conflicts with `certificate_arn`, `regional_certificate_arn`, and `regional_certificate_name`. Required if `certificate_arn` is not set.
     * 
     */
    public String certificateName;



    /**
     * Private key associated with the domain certificate given in `certificate_body`. Only valid for `EDGE` endpoint configuration type. Conflicts with `certificate_arn`, `regional_certificate_arn`, and `regional_certificate_name`.
     * 
     */
    public String certificatePrivateKey;



    /**
     * Upload date associated with the domain certificate.
     * 
     */
    public String certificateUploadDate;



    /**
     * Hostname created by Cloudfront to represent the distribution that implements this domain name mapping.
     * 
     */
    public String cloudfrontDomainName;



    /**
     * For convenience, the hosted zone ID (`Z2FDTNDATAQYW2`) that can be used to create a Route53 alias record for the distribution.
     * 
     */
    public String cloudfrontZoneId;



    /**
     * Fully-qualified domain name to register.
     * 
     */
    public String domainName;



    /**
     * The identifier for the domain name resource. Supported only for private custom domain names.
     * 
     */
    public String domainNameId;



    /**
     * Configuration block defining API endpoint information including type. See below.
     * 
     */
    public DomainNameEndpointConfiguration endpointConfiguration;



    /**
     * Mutual TLS authentication configuration for the domain name. See below.
     * 
     */
    public DomainNameMutualTlsAuthentication mutualTlsAuthentication;



    /**
     * ARN of the AWS-issued certificate used to validate custom domain ownership (when `certificate_arn` is issued via an ACM Private CA or `mutual_tls_authentication` is configured with an ACM-imported certificate.)
     * 
     */
    public String ownershipVerificationCertificateArn;



    /**
     * A stringified JSON policy document that applies to the execute-api service for this DomainName regardless of the caller and Method configuration. Supported only for private custom domain names.
     * 
     */
    public String policy;



    /**
     * ARN for an AWS-managed certificate. AWS Certificate Manager is the only supported source. Used when a regional domain name is desired. Conflicts with `certificate_arn`, `certificate_name`, `certificate_body`, `certificate_chain`, and `certificate_private_key`.
     * 
     * When uploading a certificate, the following arguments are supported:
     * 
     */
    public String regionalCertificateArn;



    /**
     * User-friendly name of the certificate that will be used by regional endpoint for this domain name. Conflicts with `certificate_arn`, `certificate_name`, `certificate_body`, `certificate_chain`, and `certificate_private_key`.
     * 
     */
    public String regionalCertificateName;



    /**
     * Hostname for the custom domain&#39;s regional endpoint.
     * 
     */
    public String regionalDomainName;



    /**
     * Hosted zone ID that can be used to create a Route53 alias record for the regional endpoint.
     * 
     */
    public String regionalZoneId;



    /**
     * Transport Layer Security (TLS) version + cipher suite for this DomainName. Valid values are `TLS_1_0` and `TLS_1_2`. Must be configured to perform drift detection.
     * 
     */
    public String securityPolicy;



    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     * When referencing an AWS-managed certificate, the following arguments are supported:
     * 
     */
    public Map<String,String> tags;



    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



}
