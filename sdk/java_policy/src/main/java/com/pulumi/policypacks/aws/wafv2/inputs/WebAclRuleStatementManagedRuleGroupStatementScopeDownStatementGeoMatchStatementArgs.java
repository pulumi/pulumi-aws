// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.wafv2.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.wafv2.inputs.WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementForwardedIpConfigArgs;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementArgs {

    /**
     * Array of two-character country codes, for example, [ &#34;US&#34;, &#34;CN&#34; ], from the alpha-2 country ISO codes of the `ISO 3166` international standard. See the [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_GeoMatchStatement.html) for valid values.
     * 
     */
    @PolicyResourceProperty(name="countryCodes", flag="unknown_countryCodes")
    private List<String> value_countryCodes;
    private boolean unknown_countryCodes;
    public List<String> countryCodes() {
        if (!unknown_countryCodes) return value_countryCodes;
        throw new UndeferrableValueException("Value 'WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementArgs.countryCodes' is not present");
    }

    /**
     * Configuration for inspecting IP addresses in an HTTP header that you specify, instead of using the IP address that&#39;s reported by the web request origin. See `forwarded_ip_config` below for details.
     * 
     */
    @PolicyResourceProperty(name="forwardedIpConfig", flag="unknown_forwardedIpConfig")
    private WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementForwardedIpConfigArgs value_forwardedIpConfig;
    private boolean unknown_forwardedIpConfig;
    public WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementForwardedIpConfigArgs forwardedIpConfig() {
        if (!unknown_forwardedIpConfig) return value_forwardedIpConfig;
        throw new UndeferrableValueException("Value 'WebAclRuleStatementManagedRuleGroupStatementScopeDownStatementGeoMatchStatementArgs.forwardedIpConfig' is not present");
    }

}
