// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.athena;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.athena.inputs.WorkgroupConfigurationArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:athena/workgroup:Workgroup")
public final class WorkgroupArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Configuration block with various settings for the workgroup. Documented below.
     * 
     */
    private UndeferrableValue<WorkgroupConfigurationArgs> configuration;

    public WorkgroupConfigurationArgs configuration() {
        if (configuration == null) return null;
        return configuration.getValue("WorkgroupArgs.configuration");
    }

    /**
     * Description of the workgroup.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("WorkgroupArgs.description");
    }

    /**
     * Option to delete the workgroup and its contents even if the workgroup contains any named queries.
     * 
     */
    private UndeferrableValue<Boolean> forceDestroy;

    public Boolean forceDestroy() {
        if (forceDestroy == null) return null;
        return forceDestroy.getValue("WorkgroupArgs.forceDestroy");
    }

    /**
     * Name of the workgroup.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("WorkgroupArgs.name");
    }

    /**
     * State of the workgroup. Valid values are `DISABLED` or `ENABLED`. Defaults to `ENABLED`.
     * 
     */
    private UndeferrableValue<String> state;

    public String state() {
        if (state == null) return null;
        return state.getValue("WorkgroupArgs.state");
    }

    /**
     * Key-value map of resource tags for the workgroup. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("WorkgroupArgs.tags");
    }

}
