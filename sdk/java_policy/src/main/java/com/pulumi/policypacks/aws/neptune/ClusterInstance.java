// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.neptune;

import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;


@PolicyResourceType(type="aws:neptune/clusterInstance:ClusterInstance")
public final class ClusterInstance extends com.pulumi.resources.PolicyResource {

    /**
     * The hostname of the instance. See also `endpoint` and `port`.
     * 
     */
    public String address;



    /**
     * Specifies whether any instance modifications
     * are applied immediately, or during the next maintenance window. Default is`false`.
     * 
     */
    public Boolean applyImmediately;



    /**
     * Amazon Resource Name (ARN) of neptune instance
     * 
     */
    public String arn;



    /**
     * Indicates that minor engine upgrades will be applied automatically to the instance during the maintenance window. Default is `true`.
     * 
     */
    public Boolean autoMinorVersionUpgrade;



    /**
     * The EC2 Availability Zone that the neptune instance is created in.
     * 
     */
    public String availabilityZone;



    /**
     * The identifier of the `aws.neptune.Cluster` in which to launch this instance.
     * 
     */
    public String clusterIdentifier;



    /**
     * The region-unique, immutable identifier for the neptune instance.
     * 
     */
    public String dbiResourceId;



    /**
     * The connection endpoint in `address:port` format.
     * 
     */
    public String endpoint;



    /**
     * The name of the database engine to be used for the neptune instance. Defaults to `neptune`. Valid Values: `neptune`.
     * 
     */
    public String engine;



    /**
     * The neptune engine version. Currently configuring this argumnet has no effect.
     * 
     */
    public String engineVersion;



    /**
     * The identifier for the neptune instance, if omitted, this provider will assign a random, unique identifier.
     * 
     */
    public String identifier;



    /**
     * Creates a unique identifier beginning with the specified prefix. Conflicts with `identifier`.
     * 
     */
    public String identifierPrefix;



    /**
     * The instance class to use.
     * 
     */
    public String instanceClass;



    /**
     * The ARN for the KMS encryption key if one is set to the neptune cluster.
     * 
     */
    public String kmsKeyArn;



    /**
     * The name of the neptune parameter group to associate with this instance.
     * 
     */
    public String neptuneParameterGroupName;



    /**
     * A subnet group to associate with this neptune instance. **NOTE:** This must match the `neptune_subnet_group_name` of the attached `aws.neptune.Cluster`.
     * 
     */
    public String neptuneSubnetGroupName;



    /**
     * The port on which the DB accepts connections. Defaults to `8182`.
     * 
     */
    public Integer port;



    /**
     * The daily time range during which automated backups are created if automated backups are enabled. Eg: &#34;04:00-09:00&#34;
     * 
     */
    public String preferredBackupWindow;



    /**
     * The window to perform maintenance in.
     * Syntax: &#34;ddd:hh24:mi-ddd:hh24:mi&#34;. Eg: &#34;Mon:00:00-Mon:03:00&#34;.
     * 
     */
    public String preferredMaintenanceWindow;



    /**
     * Default 0. Failover Priority setting on instance level. The reader who has lower tier has higher priority to get promoter to writer.
     * 
     */
    public Integer promotionTier;



    /**
     * Bool to control if instance is publicly accessible. Default is `false`.
     * 
     */
    public Boolean publiclyAccessible;



    /**
     * Determines whether a final DB snapshot is created before the DB instance is deleted.
     * 
     */
    public Boolean skipFinalSnapshot;



    /**
     * Specifies whether the neptune cluster is encrypted.
     * 
     */
    public Boolean storageEncrypted;



    /**
     * Storage type associated with the cluster `standard/iopt1`.
     * 
     */
    public String storageType;



    /**
     * A map of tags to assign to the instance. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



    /**
     * Boolean indicating if this instance is writable. `False` indicates this instance is a read replica.
     * 
     */
    public Boolean writer;



}
