// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.keyspaces.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.keyspaces.outputs.TableSchemaDefinitionClusteringKey;
import com.pulumi.policypacks.aws.keyspaces.outputs.TableSchemaDefinitionColumn;
import com.pulumi.policypacks.aws.keyspaces.outputs.TableSchemaDefinitionPartitionKey;
import com.pulumi.policypacks.aws.keyspaces.outputs.TableSchemaDefinitionStaticColumn;
import java.util.List;
import javax.annotation.Nullable;


public final class TableSchemaDefinition {

    /**
     * The columns that are part of the clustering key of the table.
     * 
     */
    private @Nullable UndeferrableValue<List<TableSchemaDefinitionClusteringKey>> clusteringKeys;

    public @Nullable List<TableSchemaDefinitionClusteringKey> clusteringKeys() {
        if (clusteringKeys == null) return null;
        return clusteringKeys.getValue("TableSchemaDefinition.clusteringKeys");
    }

    /**
     * The regular columns of the table.
     * 
     */
    private UndeferrableValue<List<TableSchemaDefinitionColumn>> columns;

    public List<TableSchemaDefinitionColumn> columns() {
        if (columns == null) return null;
        return columns.getValue("TableSchemaDefinition.columns");
    }

    /**
     * The columns that are part of the partition key of the table .
     * 
     */
    private UndeferrableValue<List<TableSchemaDefinitionPartitionKey>> partitionKeys;

    public List<TableSchemaDefinitionPartitionKey> partitionKeys() {
        if (partitionKeys == null) return null;
        return partitionKeys.getValue("TableSchemaDefinition.partitionKeys");
    }

    /**
     * The columns that have been defined as `STATIC`. Static columns store values that are shared by all rows in the same partition.
     * 
     */
    private @Nullable UndeferrableValue<List<TableSchemaDefinitionStaticColumn>> staticColumns;

    public @Nullable List<TableSchemaDefinitionStaticColumn> staticColumns() {
        if (staticColumns == null) return null;
        return staticColumns.getValue("TableSchemaDefinition.staticColumns");
    }

}
