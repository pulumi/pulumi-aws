// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.codedeploy;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.codedeploy.DeploymentGroupAlarmConfiguration;
import com.pulumi.policypacks.aws.codedeploy.DeploymentGroupAutoRollbackConfiguration;
import com.pulumi.policypacks.aws.codedeploy.DeploymentGroupBlueGreenDeploymentConfig;
import com.pulumi.policypacks.aws.codedeploy.DeploymentGroupDeploymentStyle;
import com.pulumi.policypacks.aws.codedeploy.DeploymentGroupEc2TagFilter;
import com.pulumi.policypacks.aws.codedeploy.DeploymentGroupEc2TagSet;
import com.pulumi.policypacks.aws.codedeploy.DeploymentGroupEcsService;
import com.pulumi.policypacks.aws.codedeploy.DeploymentGroupLoadBalancerInfo;
import com.pulumi.policypacks.aws.codedeploy.DeploymentGroupOnPremisesInstanceTagFilter;
import com.pulumi.policypacks.aws.codedeploy.DeploymentGroupTriggerConfiguration;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;


@PolicyResourceType(type="aws:codedeploy/deploymentGroup:DeploymentGroup")
public final class DeploymentGroup extends com.pulumi.resources.PolicyResource {

    /**
     * Configuration block of alarms associated with the deployment group (documented below).
     * 
     */
    public DeploymentGroupAlarmConfiguration alarmConfiguration;



    /**
     * The name of the application.
     * 
     */
    public String appName;



    /**
     * The ARN of the CodeDeploy deployment group.
     * 
     */
    public String arn;



    /**
     * Configuration block of the automatic rollback configuration associated with the deployment group (documented below).
     * 
     */
    public DeploymentGroupAutoRollbackConfiguration autoRollbackConfiguration;



    /**
     * Autoscaling groups associated with the deployment group.
     * 
     */
    public List<String> autoscalingGroups;



    /**
     * Configuration block of the blue/green deployment options for a deployment group (documented below).
     * 
     */
    public DeploymentGroupBlueGreenDeploymentConfig blueGreenDeploymentConfig;



    /**
     * The destination platform type for the deployment.
     * 
     */
    public String computePlatform;



    /**
     * The name of the group&#39;s deployment config. The default is &#34;CodeDeployDefault.OneAtATime&#34;.
     * 
     */
    public String deploymentConfigName;



    /**
     * The ID of the CodeDeploy deployment group.
     * 
     */
    public String deploymentGroupId;



    /**
     * The name of the deployment group.
     * 
     */
    public String deploymentGroupName;



    /**
     * Configuration block of the type of deployment, either in-place or blue/green, you want to run and whether to route deployment traffic behind a load balancer (documented below).
     * 
     */
    public DeploymentGroupDeploymentStyle deploymentStyle;



    /**
     * Tag filters associated with the deployment group. See the AWS docs for details.
     * 
     */
    public List<DeploymentGroupEc2TagFilter> ec2TagFilters;



    /**
     * Configuration block(s) of Tag filters associated with the deployment group, which are also referred to as tag groups (documented below). See the AWS docs for details.
     * 
     */
    public List<DeploymentGroupEc2TagSet> ec2TagSets;



    /**
     * Configuration block(s) of the ECS services for a deployment group (documented below).
     * 
     */
    public DeploymentGroupEcsService ecsService;



    /**
     * Single configuration block of the load balancer to use in a blue/green deployment (documented below).
     * 
     */
    public DeploymentGroupLoadBalancerInfo loadBalancerInfo;



    /**
     * On premise tag filters associated with the group. See the AWS docs for details.
     * 
     */
    public List<DeploymentGroupOnPremisesInstanceTagFilter> onPremisesInstanceTagFilters;



    /**
     * Configuration block of Indicates what happens when new Amazon EC2 instances are launched mid-deployment and do not receive the deployed application revision. Valid values are `UPDATE` and `IGNORE`. Defaults to `UPDATE`.
     * 
     */
    public String outdatedInstancesStrategy;



    /**
     * The service role ARN that allows deployments.
     * 
     */
    public String serviceRoleArn;



    /**
     * Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



    /**
     * Indicates whether the deployment group was configured to have CodeDeploy install a termination hook into an Auto Scaling group.
     * 
     */
    public Boolean terminationHookEnabled;



    /**
     * Configuration block(s) of the triggers for the deployment group (documented below).
     * 
     */
    public List<DeploymentGroupTriggerConfiguration> triggerConfigurations;



}
