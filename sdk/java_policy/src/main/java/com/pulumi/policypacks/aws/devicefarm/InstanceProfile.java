// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.devicefarm;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:devicefarm/instanceProfile:InstanceProfile")
public final class InstanceProfile extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The Amazon Resource Name of this instance profile.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'InstanceProfile.arn' is not present");
    }

    /**
     * The description of the instance profile.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private @Nullable String value_description;
    private boolean unknown_description;
    public @Nullable String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'InstanceProfile.description' is not present");
    }

    /**
     * An array of strings that specifies the list of app packages that should not be cleaned up from the device after a test run.
     * 
     */
    @PolicyResourceProperty(name="excludeAppPackagesFromCleanups", flag="unknown_excludeAppPackagesFromCleanups")
    private @Nullable List<String> value_excludeAppPackagesFromCleanups;
    private boolean unknown_excludeAppPackagesFromCleanups;
    public @Nullable List<String> excludeAppPackagesFromCleanups() {
        if (!unknown_excludeAppPackagesFromCleanups) return value_excludeAppPackagesFromCleanups;
        throw new UndeferrableValueException("Value 'InstanceProfile.excludeAppPackagesFromCleanups' is not present");
    }

    /**
     * The name for the instance profile.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'InstanceProfile.name' is not present");
    }

    /**
     * When set to `true`, Device Farm removes app packages after a test run. The default value is `false` for private devices.
     * 
     */
    @PolicyResourceProperty(name="packageCleanup", flag="unknown_packageCleanup")
    private @Nullable Boolean value_packageCleanup;
    private boolean unknown_packageCleanup;
    public @Nullable Boolean packageCleanup() {
        if (!unknown_packageCleanup) return value_packageCleanup;
        throw new UndeferrableValueException("Value 'InstanceProfile.packageCleanup' is not present");
    }

    /**
     * When set to `true`, Device Farm reboots the instance after a test run. The default value is `true`.
     * 
     */
    @PolicyResourceProperty(name="rebootAfterUse", flag="unknown_rebootAfterUse")
    private @Nullable Boolean value_rebootAfterUse;
    private boolean unknown_rebootAfterUse;
    public @Nullable Boolean rebootAfterUse() {
        if (!unknown_rebootAfterUse) return value_rebootAfterUse;
        throw new UndeferrableValueException("Value 'InstanceProfile.rebootAfterUse' is not present");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'InstanceProfile.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'InstanceProfile.tagsAll' is not present");
    }

}
