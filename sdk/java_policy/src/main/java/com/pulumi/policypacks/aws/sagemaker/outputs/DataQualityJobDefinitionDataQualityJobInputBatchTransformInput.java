// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.sagemaker.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.sagemaker.outputs.DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormat;
import java.lang.String;
import javax.annotation.Nullable;


public final class DataQualityJobDefinitionDataQualityJobInputBatchTransformInput {

    /**
     * The Amazon S3 location being used to capture the data.
     * 
     */
    private UndeferrableValue<String> dataCapturedDestinationS3Uri;

    public String dataCapturedDestinationS3Uri() {
        if (dataCapturedDestinationS3Uri == null) return null;
        return dataCapturedDestinationS3Uri.getValue("DataQualityJobDefinitionDataQualityJobInputBatchTransformInput.dataCapturedDestinationS3Uri");
    }

    /**
     * The dataset format for your batch transform job. Fields are documented below.
     * 
     */
    private UndeferrableValue<DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormat> datasetFormat;

    public DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormat datasetFormat() {
        if (datasetFormat == null) return null;
        return datasetFormat.getValue("DataQualityJobDefinitionDataQualityJobInputBatchTransformInput.datasetFormat");
    }

    /**
     * Path to the filesystem where the batch transform data is available to the container. Defaults to `/opt/ml/processing/input`.
     * 
     */
    private @Nullable UndeferrableValue<String> localPath;

    public @Nullable String localPath() {
        if (localPath == null) return null;
        return localPath.getValue("DataQualityJobDefinitionDataQualityJobInputBatchTransformInput.localPath");
    }

    /**
     * Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defaults to `FullyReplicated`. Valid values are `FullyReplicated` or `ShardedByS3Key`
     * 
     */
    private @Nullable UndeferrableValue<String> s3DataDistributionType;

    public @Nullable String s3DataDistributionType() {
        if (s3DataDistributionType == null) return null;
        return s3DataDistributionType.getValue("DataQualityJobDefinitionDataQualityJobInputBatchTransformInput.s3DataDistributionType");
    }

    /**
     * Whether the `Pipe` or `File` is used as the input mode for transferring data for the monitoring job. `Pipe` mode is recommended for large datasets. `File` mode is useful for small files that fit in memory. Defaults to `File`.  Valid values are `Pipe` or `File`
     * 
     */
    private @Nullable UndeferrableValue<String> s3InputMode;

    public @Nullable String s3InputMode() {
        if (s3InputMode == null) return null;
        return s3InputMode.getValue("DataQualityJobDefinitionDataQualityJobInputBatchTransformInput.s3InputMode");
    }

}
