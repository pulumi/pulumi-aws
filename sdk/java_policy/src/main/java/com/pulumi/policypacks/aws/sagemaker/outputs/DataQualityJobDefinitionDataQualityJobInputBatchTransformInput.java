// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.sagemaker.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.sagemaker.outputs.DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormat;
import java.lang.String;
import javax.annotation.Nullable;


public final class DataQualityJobDefinitionDataQualityJobInputBatchTransformInput {

    /**
     * The Amazon S3 location being used to capture the data.
     * 
     */
    @PolicyResourceProperty(name="dataCapturedDestinationS3Uri", flag="unknown_dataCapturedDestinationS3Uri")
    private String value_dataCapturedDestinationS3Uri;
    private boolean unknown_dataCapturedDestinationS3Uri;
    public String dataCapturedDestinationS3Uri() {
        if (!unknown_dataCapturedDestinationS3Uri) return value_dataCapturedDestinationS3Uri;
        throw new UndeferrableValueException("Value 'DataQualityJobDefinitionDataQualityJobInputBatchTransformInput.dataCapturedDestinationS3Uri' is not present");
    }

    /**
     * The dataset format for your batch transform job. Fields are documented below.
     * 
     */
    @PolicyResourceProperty(name="datasetFormat", flag="unknown_datasetFormat")
    private DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormat value_datasetFormat;
    private boolean unknown_datasetFormat;
    public DataQualityJobDefinitionDataQualityJobInputBatchTransformInputDatasetFormat datasetFormat() {
        if (!unknown_datasetFormat) return value_datasetFormat;
        throw new UndeferrableValueException("Value 'DataQualityJobDefinitionDataQualityJobInputBatchTransformInput.datasetFormat' is not present");
    }

    /**
     * Path to the filesystem where the batch transform data is available to the container. Defaults to `/opt/ml/processing/input`.
     * 
     */
    @PolicyResourceProperty(name="localPath", flag="unknown_localPath")
    private @Nullable String value_localPath;
    private boolean unknown_localPath;
    public @Nullable String localPath() {
        if (!unknown_localPath) return value_localPath;
        throw new UndeferrableValueException("Value 'DataQualityJobDefinitionDataQualityJobInputBatchTransformInput.localPath' is not present");
    }

    /**
     * Whether input data distributed in Amazon S3 is fully replicated or sharded by an S3 key. Defaults to `FullyReplicated`. Valid values are `FullyReplicated` or `ShardedByS3Key`
     * 
     */
    @PolicyResourceProperty(name="s3DataDistributionType", flag="unknown_s3DataDistributionType")
    private @Nullable String value_s3DataDistributionType;
    private boolean unknown_s3DataDistributionType;
    public @Nullable String s3DataDistributionType() {
        if (!unknown_s3DataDistributionType) return value_s3DataDistributionType;
        throw new UndeferrableValueException("Value 'DataQualityJobDefinitionDataQualityJobInputBatchTransformInput.s3DataDistributionType' is not present");
    }

    /**
     * Whether the `Pipe` or `File` is used as the input mode for transferring data for the monitoring job. `Pipe` mode is recommended for large datasets. `File` mode is useful for small files that fit in memory. Defaults to `File`.  Valid values are `Pipe` or `File`
     * 
     */
    @PolicyResourceProperty(name="s3InputMode", flag="unknown_s3InputMode")
    private @Nullable String value_s3InputMode;
    private boolean unknown_s3InputMode;
    public @Nullable String s3InputMode() {
        if (!unknown_s3InputMode) return value_s3InputMode;
        throw new UndeferrableValueException("Value 'DataQualityJobDefinitionDataQualityJobInputBatchTransformInput.s3InputMode' is not present");
    }

}
