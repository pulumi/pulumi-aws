// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.globalaccelerator;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.globalaccelerator.outputs.EndpointGroupEndpointConfiguration;
import com.pulumi.policypacks.aws.globalaccelerator.outputs.EndpointGroupPortOverride;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:globalaccelerator/endpointGroup:EndpointGroup")
public final class EndpointGroup extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The Amazon Resource Name (ARN) of the endpoint group.
     * 
     */
    private UndeferrableValue<String> arn;

    public String arn() {
        if (arn == null) return null;
        return arn.getValue("EndpointGroup.arn");
    }

    /**
     * The list of endpoint objects. Fields documented below.
     * 
     */
    private @Nullable UndeferrableValue<List<EndpointGroupEndpointConfiguration>> endpointConfigurations;

    public @Nullable List<EndpointGroupEndpointConfiguration> endpointConfigurations() {
        if (endpointConfigurations == null) return null;
        return endpointConfigurations.getValue("EndpointGroup.endpointConfigurations");
    }

    /**
     * The name of the AWS Region where the endpoint group is located.
     * 
     */
    private UndeferrableValue<String> endpointGroupRegion;

    public String endpointGroupRegion() {
        if (endpointGroupRegion == null) return null;
        return endpointGroupRegion.getValue("EndpointGroup.endpointGroupRegion");
    }

    /**
     * The time—10 seconds or 30 seconds—between each health check for an endpoint. The default value is 30.
     * 
     */
    private @Nullable UndeferrableValue<Integer> healthCheckIntervalSeconds;

    public @Nullable Integer healthCheckIntervalSeconds() {
        if (healthCheckIntervalSeconds == null) return null;
        return healthCheckIntervalSeconds.getValue("EndpointGroup.healthCheckIntervalSeconds");
    }

    /**
     * If the protocol is HTTP/S, then this specifies the path that is the destination for health check targets. The default value is slash (`/`). the provider will only perform drift detection of its value when present in a configuration.
     * 
     */
    private UndeferrableValue<String> healthCheckPath;

    public String healthCheckPath() {
        if (healthCheckPath == null) return null;
        return healthCheckPath.getValue("EndpointGroup.healthCheckPath");
    }

    /**
     * The port that AWS Global Accelerator uses to check the health of endpoints that are part of this endpoint group. The default port is the listener port that this endpoint group is associated with. If listener port is a list of ports, Global Accelerator uses the first port in the list.
     * the provider will only perform drift detection of its value when present in a configuration.
     * 
     */
    private UndeferrableValue<Integer> healthCheckPort;

    public Integer healthCheckPort() {
        if (healthCheckPort == null) return null;
        return healthCheckPort.getValue("EndpointGroup.healthCheckPort");
    }

    /**
     * The protocol that AWS Global Accelerator uses to check the health of endpoints that are part of this endpoint group. The default value is TCP.
     * 
     */
    private @Nullable UndeferrableValue<String> healthCheckProtocol;

    public @Nullable String healthCheckProtocol() {
        if (healthCheckProtocol == null) return null;
        return healthCheckProtocol.getValue("EndpointGroup.healthCheckProtocol");
    }

    /**
     * The Amazon Resource Name (ARN) of the listener.
     * 
     */
    private UndeferrableValue<String> listenerArn;

    public String listenerArn() {
        if (listenerArn == null) return null;
        return listenerArn.getValue("EndpointGroup.listenerArn");
    }

    /**
     * Override specific listener ports used to route traffic to endpoints that are part of this endpoint group. Fields documented below.
     * 
     */
    private @Nullable UndeferrableValue<List<EndpointGroupPortOverride>> portOverrides;

    public @Nullable List<EndpointGroupPortOverride> portOverrides() {
        if (portOverrides == null) return null;
        return portOverrides.getValue("EndpointGroup.portOverrides");
    }

    /**
     * The number of consecutive health checks required to set the state of a healthy endpoint to unhealthy, or to set an unhealthy endpoint to healthy. The default value is 3.
     * 
     */
    private @Nullable UndeferrableValue<Integer> thresholdCount;

    public @Nullable Integer thresholdCount() {
        if (thresholdCount == null) return null;
        return thresholdCount.getValue("EndpointGroup.thresholdCount");
    }

    /**
     * The percentage of traffic to send to an AWS Region. Additional traffic is distributed to other endpoint groups for this listener. The default value is 100.
     * 
     */
    private @Nullable UndeferrableValue<Double> trafficDialPercentage;

    public @Nullable Double trafficDialPercentage() {
        if (trafficDialPercentage == null) return null;
        return trafficDialPercentage.getValue("EndpointGroup.trafficDialPercentage");
    }

}
