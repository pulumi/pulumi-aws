// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appconfig;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:appconfig/deployment:Deployment")
public final class DeploymentArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Application ID. Must be between 4 and 7 characters in length.
     * 
     */
    private UndeferrableValue<String> applicationId;

    public String applicationId() {
        if (applicationId == null) return null;
        return applicationId.getValue("DeploymentArgs.applicationId");
    }

    /**
     * Configuration profile ID. Must be between 4 and 7 characters in length.
     * 
     */
    private UndeferrableValue<String> configurationProfileId;

    public String configurationProfileId() {
        if (configurationProfileId == null) return null;
        return configurationProfileId.getValue("DeploymentArgs.configurationProfileId");
    }

    /**
     * Configuration version to deploy. Can be at most 1024 characters.
     * 
     */
    private UndeferrableValue<String> configurationVersion;

    public String configurationVersion() {
        if (configurationVersion == null) return null;
        return configurationVersion.getValue("DeploymentArgs.configurationVersion");
    }

    /**
     * Deployment strategy ID or name of a predefined deployment strategy. See [Predefined Deployment Strategies](https://docs.aws.amazon.com/appconfig/latest/userguide/appconfig-creating-deployment-strategy.html#appconfig-creating-deployment-strategy-predefined) for more details.
     * 
     */
    private UndeferrableValue<String> deploymentStrategyId;

    public String deploymentStrategyId() {
        if (deploymentStrategyId == null) return null;
        return deploymentStrategyId.getValue("DeploymentArgs.deploymentStrategyId");
    }

    /**
     * Description of the deployment. Can be at most 1024 characters.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("DeploymentArgs.description");
    }

    /**
     * Environment ID. Must be between 4 and 7 characters in length.
     * 
     */
    private UndeferrableValue<String> environmentId;

    public String environmentId() {
        if (environmentId == null) return null;
        return environmentId.getValue("DeploymentArgs.environmentId");
    }

    /**
     * The KMS key identifier (key ID, key alias, or key ARN). AppConfig uses this to encrypt the configuration data using a customer managed key.
     * 
     */
    private UndeferrableValue<String> kmsKeyIdentifier;

    public String kmsKeyIdentifier() {
        if (kmsKeyIdentifier == null) return null;
        return kmsKeyIdentifier.getValue("DeploymentArgs.kmsKeyIdentifier");
    }

    /**
     * Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("DeploymentArgs.tags");
    }

}
