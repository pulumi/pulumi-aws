// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appflow.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfig {

    /**
     * Determines the level of granularity that&#39;s included in the prefix. Valid values are `YEAR`, `MONTH`, `DAY`, `HOUR`, and `MINUTE`.
     * 
     */
    @PolicyResourceProperty(name="prefixFormat", flag="unknown_prefixFormat")
    private @Nullable String value_prefixFormat;
    private boolean unknown_prefixFormat;
    public @Nullable String prefixFormat() {
        if (!unknown_prefixFormat) return value_prefixFormat;
        throw new UndeferrableValueException("Value 'FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfig.prefixFormat' is not present");
    }

    /**
     * Determines whether the destination file path includes either or both of the selected elements. Valid values are `EXECUTION_ID` and `SCHEMA_VERSION`
     * 
     */
    @PolicyResourceProperty(name="prefixHierarchies", flag="unknown_prefixHierarchies")
    private @Nullable List<String> value_prefixHierarchies;
    private boolean unknown_prefixHierarchies;
    public @Nullable List<String> prefixHierarchies() {
        if (!unknown_prefixHierarchies) return value_prefixHierarchies;
        throw new UndeferrableValueException("Value 'FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfig.prefixHierarchies' is not present");
    }

    /**
     * Determines the format of the prefix, and whether it applies to the file name, file path, or both. Valid values are `FILENAME`, `PATH`, and `PATH_AND_FILENAME`.
     * 
     */
    @PolicyResourceProperty(name="prefixType", flag="unknown_prefixType")
    private @Nullable String value_prefixType;
    private boolean unknown_prefixType;
    public @Nullable String prefixType() {
        if (!unknown_prefixType) return value_prefixType;
        throw new UndeferrableValueException("Value 'FlowDestinationFlowConfigDestinationConnectorPropertiesS3S3OutputFormatConfigPrefixConfig.prefixType' is not present");
    }

}
