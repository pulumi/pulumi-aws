// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.medialive.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class ChannelEncoderSettingsAudioDescriptionCodecSettingsAc3Settings {

    /**
     * Average bitrate in bits/second.
     * 
     */
    @PolicyResourceProperty(name="bitrate", flag="unknown_bitrate")
    private @Nullable Double value_bitrate;
    private boolean unknown_bitrate;
    public @Nullable Double bitrate() {
        if (!unknown_bitrate) return value_bitrate;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsAudioDescriptionCodecSettingsAc3Settings.bitrate' is not present");
    }

    /**
     * Specifies the bitstream mode (bsmod) for the emitted AC-3 stream.
     * 
     */
    @PolicyResourceProperty(name="bitstreamMode", flag="unknown_bitstreamMode")
    private @Nullable String value_bitstreamMode;
    private boolean unknown_bitstreamMode;
    public @Nullable String bitstreamMode() {
        if (!unknown_bitstreamMode) return value_bitstreamMode;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsAudioDescriptionCodecSettingsAc3Settings.bitstreamMode' is not present");
    }

    /**
     * Dolby Digital coding mode.
     * 
     */
    @PolicyResourceProperty(name="codingMode", flag="unknown_codingMode")
    private @Nullable String value_codingMode;
    private boolean unknown_codingMode;
    public @Nullable String codingMode() {
        if (!unknown_codingMode) return value_codingMode;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsAudioDescriptionCodecSettingsAc3Settings.codingMode' is not present");
    }

    /**
     * Sets the dialnorm of the output.
     * 
     */
    @PolicyResourceProperty(name="dialnorm", flag="unknown_dialnorm")
    private @Nullable Integer value_dialnorm;
    private boolean unknown_dialnorm;
    public @Nullable Integer dialnorm() {
        if (!unknown_dialnorm) return value_dialnorm;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsAudioDescriptionCodecSettingsAc3Settings.dialnorm' is not present");
    }

    /**
     * If set to filmStandard, adds dynamic range compression signaling to the output bitstream as defined in the Dolby Digital specification.
     * 
     */
    @PolicyResourceProperty(name="drcProfile", flag="unknown_drcProfile")
    private @Nullable String value_drcProfile;
    private boolean unknown_drcProfile;
    public @Nullable String drcProfile() {
        if (!unknown_drcProfile) return value_drcProfile;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsAudioDescriptionCodecSettingsAc3Settings.drcProfile' is not present");
    }

    /**
     * When set to enabled, applies a 120Hz lowpass filter to the LFE channel prior to encoding.
     * 
     */
    @PolicyResourceProperty(name="lfeFilter", flag="unknown_lfeFilter")
    private @Nullable String value_lfeFilter;
    private boolean unknown_lfeFilter;
    public @Nullable String lfeFilter() {
        if (!unknown_lfeFilter) return value_lfeFilter;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsAudioDescriptionCodecSettingsAc3Settings.lfeFilter' is not present");
    }

    /**
     * Metadata control.
     * 
     */
    @PolicyResourceProperty(name="metadataControl", flag="unknown_metadataControl")
    private @Nullable String value_metadataControl;
    private boolean unknown_metadataControl;
    public @Nullable String metadataControl() {
        if (!unknown_metadataControl) return value_metadataControl;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsAudioDescriptionCodecSettingsAc3Settings.metadataControl' is not present");
    }

}
