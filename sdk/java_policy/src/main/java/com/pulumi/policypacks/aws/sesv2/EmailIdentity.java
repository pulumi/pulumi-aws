// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.sesv2;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.sesv2.outputs.EmailIdentityDkimSigningAttributes;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:sesv2/emailIdentity:EmailIdentity")
public final class EmailIdentity extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * ARN of the Email Identity.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'EmailIdentity.arn' is not present");
    }

    /**
     * The configuration set to use by default when sending from this identity. Note that any configuration set defined in the email sending request takes precedence.
     * 
     */
    @PolicyResourceProperty(name="configurationSetName", flag="unknown_configurationSetName")
    private @Nullable String value_configurationSetName;
    private boolean unknown_configurationSetName;
    public @Nullable String configurationSetName() {
        if (!unknown_configurationSetName) return value_configurationSetName;
        throw new UndeferrableValueException("Value 'EmailIdentity.configurationSetName' is not present");
    }

    /**
     * The configuration of the DKIM authentication settings for an email domain identity.
     * 
     */
    @PolicyResourceProperty(name="dkimSigningAttributes", flag="unknown_dkimSigningAttributes")
    private EmailIdentityDkimSigningAttributes value_dkimSigningAttributes;
    private boolean unknown_dkimSigningAttributes;
    public EmailIdentityDkimSigningAttributes dkimSigningAttributes() {
        if (!unknown_dkimSigningAttributes) return value_dkimSigningAttributes;
        throw new UndeferrableValueException("Value 'EmailIdentity.dkimSigningAttributes' is not present");
    }

    /**
     * The email address or domain to verify.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="emailIdentity", flag="unknown_emailIdentity")
    private String value_emailIdentity;
    private boolean unknown_emailIdentity;
    public String emailIdentity() {
        if (!unknown_emailIdentity) return value_emailIdentity;
        throw new UndeferrableValueException("Value 'EmailIdentity.emailIdentity' is not present");
    }

    /**
     * The email identity type. Valid values: `EMAIL_ADDRESS`, `DOMAIN`.
     * 
     */
    @PolicyResourceProperty(name="identityType", flag="unknown_identityType")
    private String value_identityType;
    private boolean unknown_identityType;
    public String identityType() {
        if (!unknown_identityType) return value_identityType;
        throw new UndeferrableValueException("Value 'EmailIdentity.identityType' is not present");
    }

    /**
     * Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'EmailIdentity.tags' is not present");
    }

    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'EmailIdentity.tagsAll' is not present");
    }

    /**
     * Specifies whether or not the identity is verified.
     * 
     */
    @PolicyResourceProperty(name="verifiedForSendingStatus", flag="unknown_verifiedForSendingStatus")
    private Boolean value_verifiedForSendingStatus;
    private boolean unknown_verifiedForSendingStatus;
    public Boolean verifiedForSendingStatus() {
        if (!unknown_verifiedForSendingStatus) return value_verifiedForSendingStatus;
        throw new UndeferrableValueException("Value 'EmailIdentity.verifiedForSendingStatus' is not present");
    }

}
