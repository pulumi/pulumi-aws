// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.efs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:efs/mountTarget:MountTarget")
public final class MountTargetArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The ID of the file system for which the mount target is intended.
     * 
     */
    private UndeferrableValue<String> fileSystemId;

    public String fileSystemId() {
        if (fileSystemId == null) return null;
        return fileSystemId.getValue("MountTargetArgs.fileSystemId");
    }

    /**
     * The address (within the address range of the specified subnet) at
     * which the file system may be mounted via the mount target.
     * 
     */
    private UndeferrableValue<String> ipAddress;

    public String ipAddress() {
        if (ipAddress == null) return null;
        return ipAddress.getValue("MountTargetArgs.ipAddress");
    }

    /**
     * A list of up to 5 VPC security group IDs (that must
     * be for the same VPC as subnet specified) in effect for the mount target.
     * 
     */
    private UndeferrableValue<List<String>> securityGroups;

    public List<String> securityGroups() {
        if (securityGroups == null) return null;
        return securityGroups.getValue("MountTargetArgs.securityGroups");
    }

    /**
     * The ID of the subnet to add the mount target in.
     * 
     */
    private UndeferrableValue<String> subnetId;

    public String subnetId() {
        if (subnetId == null) return null;
        return subnetId.getValue("MountTargetArgs.subnetId");
    }

}
