// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.alb.outputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.Boolean;
import java.lang.Integer;
import javax.annotation.Nullable;


public final class TargetGroupTargetHealthState {

    /**
     * Indicates whether the load balancer terminates connections to unhealthy targets. Possible values are `true` or `false`. Default: `true`.
     * 
     */
    private UndeferrableValue<Boolean> enableUnhealthyConnectionTermination;

    public Boolean enableUnhealthyConnectionTermination() {
        if (enableUnhealthyConnectionTermination == null) return null;
        return enableUnhealthyConnectionTermination.getValue("TargetGroupTargetHealthState.enableUnhealthyConnectionTermination");
    }

    /**
     * Indicates the time to wait for in-flight requests to complete when a target becomes unhealthy. The range is `0-360000`. This value has to be set only if `enable_unhealthy_connection_termination` is set to false. Default: `0`.
     * 
     */
    private @Nullable UndeferrableValue<Integer> unhealthyDrainingInterval;

    public @Nullable Integer unhealthyDrainingInterval() {
        if (unhealthyDrainingInterval == null) return null;
        return unhealthyDrainingInterval.getValue("TargetGroupTargetHealthState.unhealthyDrainingInterval");
    }

}
