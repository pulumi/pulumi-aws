// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.cognito;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.cognito.inputs.IdentityPoolCognitoIdentityProviderArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:cognito/identityPool:IdentityPool")
public final class IdentityPoolArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Enables or disables the classic / basic authentication flow. Default is `false`.
     * 
     */
    private UndeferrableValue<Boolean> allowClassicFlow;

    public Boolean allowClassicFlow() {
        if (allowClassicFlow == null) return null;
        return allowClassicFlow.getValue("IdentityPoolArgs.allowClassicFlow");
    }

    /**
     * Whether the identity pool supports unauthenticated logins or not.
     * 
     */
    private UndeferrableValue<Boolean> allowUnauthenticatedIdentities;

    public Boolean allowUnauthenticatedIdentities() {
        if (allowUnauthenticatedIdentities == null) return null;
        return allowUnauthenticatedIdentities.getValue("IdentityPoolArgs.allowUnauthenticatedIdentities");
    }

    /**
     * An array of Amazon Cognito Identity user pools and their client IDs.
     * 
     */
    private UndeferrableValue<List<IdentityPoolCognitoIdentityProviderArgs>> cognitoIdentityProviders;

    public List<IdentityPoolCognitoIdentityProviderArgs> cognitoIdentityProviders() {
        if (cognitoIdentityProviders == null) return null;
        return cognitoIdentityProviders.getValue("IdentityPoolArgs.cognitoIdentityProviders");
    }

    /**
     * The &#34;domain&#34; by which Cognito will refer to your users. This name acts as a placeholder that allows your
     * backend and the Cognito service to communicate about the developer provider.
     * 
     */
    private UndeferrableValue<String> developerProviderName;

    public String developerProviderName() {
        if (developerProviderName == null) return null;
        return developerProviderName.getValue("IdentityPoolArgs.developerProviderName");
    }

    /**
     * The Cognito Identity Pool name.
     * 
     */
    private UndeferrableValue<String> identityPoolName;

    public String identityPoolName() {
        if (identityPoolName == null) return null;
        return identityPoolName.getValue("IdentityPoolArgs.identityPoolName");
    }

    /**
     * Set of OpendID Connect provider ARNs.
     * 
     */
    private UndeferrableValue<List<String>> openidConnectProviderArns;

    public List<String> openidConnectProviderArns() {
        if (openidConnectProviderArns == null) return null;
        return openidConnectProviderArns.getValue("IdentityPoolArgs.openidConnectProviderArns");
    }

    /**
     * An array of Amazon Resource Names (ARNs) of the SAML provider for your identity.
     * 
     */
    private UndeferrableValue<List<String>> samlProviderArns;

    public List<String> samlProviderArns() {
        if (samlProviderArns == null) return null;
        return samlProviderArns.getValue("IdentityPoolArgs.samlProviderArns");
    }

    /**
     * Key-Value pairs mapping provider names to provider app IDs.
     * 
     */
    private UndeferrableValue<Map<String,String>> supportedLoginProviders;

    public Map<String,String> supportedLoginProviders() {
        if (supportedLoginProviders == null) return null;
        return supportedLoginProviders.getValue("IdentityPoolArgs.supportedLoginProviders");
    }

    /**
     * A map of tags to assign to the Identity Pool. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("IdentityPoolArgs.tags");
    }

}
