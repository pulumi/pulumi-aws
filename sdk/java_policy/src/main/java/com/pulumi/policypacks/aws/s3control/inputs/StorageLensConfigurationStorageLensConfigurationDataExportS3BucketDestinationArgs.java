// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.s3control.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.s3control.inputs.StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionArgs;
import java.lang.String;
import javax.annotation.Nullable;


public final class StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationArgs {

    /**
     * The account ID of the owner of the S3 Storage Lens metrics export bucket.
     * 
     */
    @PolicyResourceProperty(name="accountId", flag="unknown_accountId")
    private String value_accountId;
    private boolean unknown_accountId;
    public String accountId() {
        if (!unknown_accountId) return value_accountId;
        throw new UndeferrableValueException("Value 'StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationArgs.accountId' is not present");
    }

    /**
     * The Amazon Resource Name (ARN) of the bucket.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationArgs.arn' is not present");
    }

    /**
     * Encryption of the metrics exports in this bucket. See Encryption below for more details.
     * 
     */
    @PolicyResourceProperty(name="encryption", flag="unknown_encryption")
    private StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionArgs value_encryption;
    private boolean unknown_encryption;
    public StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationEncryptionArgs encryption() {
        if (!unknown_encryption) return value_encryption;
        throw new UndeferrableValueException("Value 'StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationArgs.encryption' is not present");
    }

    /**
     * The export format. Valid values: `CSV`, `Parquet`.
     * 
     */
    @PolicyResourceProperty(name="format", flag="unknown_format")
    private String value_format;
    private boolean unknown_format;
    public String format() {
        if (!unknown_format) return value_format;
        throw new UndeferrableValueException("Value 'StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationArgs.format' is not present");
    }

    /**
     * The schema version of the export file. Valid values: `V_1`.
     * 
     */
    @PolicyResourceProperty(name="outputSchemaVersion", flag="unknown_outputSchemaVersion")
    private String value_outputSchemaVersion;
    private boolean unknown_outputSchemaVersion;
    public String outputSchemaVersion() {
        if (!unknown_outputSchemaVersion) return value_outputSchemaVersion;
        throw new UndeferrableValueException("Value 'StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationArgs.outputSchemaVersion' is not present");
    }

    /**
     * The prefix of the destination bucket where the metrics export will be delivered.
     * 
     */
    @PolicyResourceProperty(name="prefix", flag="unknown_prefix")
    private String value_prefix;
    private boolean unknown_prefix;
    public String prefix() {
        if (!unknown_prefix) return value_prefix;
        throw new UndeferrableValueException("Value 'StorageLensConfigurationStorageLensConfigurationDataExportS3BucketDestinationArgs.prefix' is not present");
    }

}
