// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.applicationinsights;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:applicationinsights/application:Application")
public final class Application extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * ARN of the Application.
     * 
     */
    private UndeferrableValue<String> arn;

    public String arn() {
        if (arn == null) return null;
        return arn.getValue("Application.arn");
    }

    /**
     * Indicates whether Application Insights automatically configures unmonitored resources in the resource group.
     * 
     */
    private @Nullable UndeferrableValue<Boolean> autoConfigEnabled;

    public @Nullable Boolean autoConfigEnabled() {
        if (autoConfigEnabled == null) return null;
        return autoConfigEnabled.getValue("Application.autoConfigEnabled");
    }

    /**
     * Configures all of the resources in the resource group by applying the recommended configurations.
     * 
     */
    private @Nullable UndeferrableValue<Boolean> autoCreate;

    public @Nullable Boolean autoCreate() {
        if (autoCreate == null) return null;
        return autoCreate.getValue("Application.autoCreate");
    }

    /**
     * Indicates whether Application Insights can listen to CloudWatch events for the application resources, such as instance terminated, failed deployment, and others.
     * 
     */
    private @Nullable UndeferrableValue<Boolean> cweMonitorEnabled;

    public @Nullable Boolean cweMonitorEnabled() {
        if (cweMonitorEnabled == null) return null;
        return cweMonitorEnabled.getValue("Application.cweMonitorEnabled");
    }

    /**
     * Application Insights can create applications based on a resource group or on an account. To create an account-based application using all of the resources in the account, set this parameter to `ACCOUNT_BASED`.
     * 
     */
    private @Nullable UndeferrableValue<String> groupingType;

    public @Nullable String groupingType() {
        if (groupingType == null) return null;
        return groupingType.getValue("Application.groupingType");
    }

    /**
     * When set to `true`, creates opsItems for any problems detected on an application.
     * 
     */
    private @Nullable UndeferrableValue<Boolean> opsCenterEnabled;

    public @Nullable Boolean opsCenterEnabled() {
        if (opsCenterEnabled == null) return null;
        return opsCenterEnabled.getValue("Application.opsCenterEnabled");
    }

    /**
     * SNS topic provided to Application Insights that is associated to the created opsItem. Allows you to receive notifications for updates to the opsItem.
     * 
     */
    private @Nullable UndeferrableValue<String> opsItemSnsTopicArn;

    public @Nullable String opsItemSnsTopicArn() {
        if (opsItemSnsTopicArn == null) return null;
        return opsItemSnsTopicArn.getValue("Application.opsItemSnsTopicArn");
    }

    /**
     * Name of the resource group.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> resourceGroupName;

    public String resourceGroupName() {
        if (resourceGroupName == null) return null;
        return resourceGroupName.getValue("Application.resourceGroupName");
    }

    /**
     * Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private @Nullable UndeferrableValue<Map<String,String>> tags;

    public @Nullable Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("Application.tags");
    }

    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    private UndeferrableValue<Map<String,String>> tagsAll;

    public Map<String,String> tagsAll() {
        if (tagsAll == null) return null;
        return tagsAll.getValue("Application.tagsAll");
    }

}
