// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.applicationinsights;

import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;


@PolicyResourceType(type="aws:applicationinsights/application:Application")
public final class Application extends com.pulumi.resources.PolicyResource {

    /**
     * ARN of the Application.
     * 
     */
    public String arn;



    /**
     * Indicates whether Application Insights automatically configures unmonitored resources in the resource group.
     * 
     */
    public Boolean autoConfigEnabled;



    /**
     * Configures all of the resources in the resource group by applying the recommended configurations.
     * 
     */
    public Boolean autoCreate;



    /**
     * Indicates whether Application Insights can listen to CloudWatch events for the application resources, such as instance terminated, failed deployment, and others.
     * 
     */
    public Boolean cweMonitorEnabled;



    /**
     * Application Insights can create applications based on a resource group or on an account. To create an account-based application using all of the resources in the account, set this parameter to `ACCOUNT_BASED`.
     * 
     */
    public String groupingType;



    /**
     * When set to `true`, creates opsItems for any problems detected on an application.
     * 
     */
    public Boolean opsCenterEnabled;



    /**
     * SNS topic provided to Application Insights that is associated to the created opsItem. Allows you to receive notifications for updates to the opsItem.
     * 
     */
    public String opsItemSnsTopicArn;



    /**
     * Name of the resource group.
     * 
     * The following arguments are optional:
     * 
     */
    public String resourceGroupName;



    /**
     * Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



}
