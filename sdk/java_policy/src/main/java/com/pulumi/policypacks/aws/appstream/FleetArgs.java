// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appstream;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.appstream.inputs.FleetComputeCapacityArgs;
import com.pulumi.policypacks.aws.appstream.inputs.FleetDomainJoinInfoArgs;
import com.pulumi.policypacks.aws.appstream.inputs.FleetVpcConfigArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:appstream/fleet:Fleet")
public final class FleetArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Configuration block for the desired capacity of the fleet. See below.
     * 
     */
    @PolicyResourceProperty(name="computeCapacity", flag="unknown_computeCapacity")
    private FleetComputeCapacityArgs value_computeCapacity;
    private boolean unknown_computeCapacity;
    public FleetComputeCapacityArgs computeCapacity() {
        if (!unknown_computeCapacity) return value_computeCapacity;
        throw new UndeferrableValueException("Value 'FleetArgs.computeCapacity' is not present");
    }

    /**
     * Description to display.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private String value_description;
    private boolean unknown_description;
    public String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'FleetArgs.description' is not present");
    }

    /**
     * Amount of time that a streaming session remains active after users disconnect.
     * 
     */
    @PolicyResourceProperty(name="disconnectTimeoutInSeconds", flag="unknown_disconnectTimeoutInSeconds")
    private Integer value_disconnectTimeoutInSeconds;
    private boolean unknown_disconnectTimeoutInSeconds;
    public Integer disconnectTimeoutInSeconds() {
        if (!unknown_disconnectTimeoutInSeconds) return value_disconnectTimeoutInSeconds;
        throw new UndeferrableValueException("Value 'FleetArgs.disconnectTimeoutInSeconds' is not present");
    }

    /**
     * Human-readable friendly name for the AppStream fleet.
     * 
     */
    @PolicyResourceProperty(name="displayName", flag="unknown_displayName")
    private String value_displayName;
    private boolean unknown_displayName;
    public String displayName() {
        if (!unknown_displayName) return value_displayName;
        throw new UndeferrableValueException("Value 'FleetArgs.displayName' is not present");
    }

    /**
     * Configuration block for the name of the directory and organizational unit (OU) to use to join the fleet to a Microsoft Active Directory domain. See below.
     * 
     */
    @PolicyResourceProperty(name="domainJoinInfo", flag="unknown_domainJoinInfo")
    private FleetDomainJoinInfoArgs value_domainJoinInfo;
    private boolean unknown_domainJoinInfo;
    public FleetDomainJoinInfoArgs domainJoinInfo() {
        if (!unknown_domainJoinInfo) return value_domainJoinInfo;
        throw new UndeferrableValueException("Value 'FleetArgs.domainJoinInfo' is not present");
    }

    /**
     * Enables or disables default internet access for the fleet.
     * 
     */
    @PolicyResourceProperty(name="enableDefaultInternetAccess", flag="unknown_enableDefaultInternetAccess")
    private Boolean value_enableDefaultInternetAccess;
    private boolean unknown_enableDefaultInternetAccess;
    public Boolean enableDefaultInternetAccess() {
        if (!unknown_enableDefaultInternetAccess) return value_enableDefaultInternetAccess;
        throw new UndeferrableValueException("Value 'FleetArgs.enableDefaultInternetAccess' is not present");
    }

    /**
     * Fleet type. Valid values are: `ON_DEMAND`, `ALWAYS_ON`
     * 
     */
    @PolicyResourceProperty(name="fleetType", flag="unknown_fleetType")
    private String value_fleetType;
    private boolean unknown_fleetType;
    public String fleetType() {
        if (!unknown_fleetType) return value_fleetType;
        throw new UndeferrableValueException("Value 'FleetArgs.fleetType' is not present");
    }

    /**
     * ARN of the IAM role to apply to the fleet.
     * 
     */
    @PolicyResourceProperty(name="iamRoleArn", flag="unknown_iamRoleArn")
    private String value_iamRoleArn;
    private boolean unknown_iamRoleArn;
    public String iamRoleArn() {
        if (!unknown_iamRoleArn) return value_iamRoleArn;
        throw new UndeferrableValueException("Value 'FleetArgs.iamRoleArn' is not present");
    }

    /**
     * Amount of time that users can be idle (inactive) before they are disconnected from their streaming session and the `disconnect_timeout_in_seconds` time interval begins. Defaults to `0`. Valid value is between `60` and ` 3600  `seconds.
     * 
     */
    @PolicyResourceProperty(name="idleDisconnectTimeoutInSeconds", flag="unknown_idleDisconnectTimeoutInSeconds")
    private Integer value_idleDisconnectTimeoutInSeconds;
    private boolean unknown_idleDisconnectTimeoutInSeconds;
    public Integer idleDisconnectTimeoutInSeconds() {
        if (!unknown_idleDisconnectTimeoutInSeconds) return value_idleDisconnectTimeoutInSeconds;
        throw new UndeferrableValueException("Value 'FleetArgs.idleDisconnectTimeoutInSeconds' is not present");
    }

    /**
     * ARN of the public, private, or shared image to use.
     * 
     */
    @PolicyResourceProperty(name="imageArn", flag="unknown_imageArn")
    private String value_imageArn;
    private boolean unknown_imageArn;
    public String imageArn() {
        if (!unknown_imageArn) return value_imageArn;
        throw new UndeferrableValueException("Value 'FleetArgs.imageArn' is not present");
    }

    /**
     * Name of the image used to create the fleet.
     * 
     */
    @PolicyResourceProperty(name="imageName", flag="unknown_imageName")
    private String value_imageName;
    private boolean unknown_imageName;
    public String imageName() {
        if (!unknown_imageName) return value_imageName;
        throw new UndeferrableValueException("Value 'FleetArgs.imageName' is not present");
    }

    /**
     * Instance type to use when launching fleet instances.
     * 
     */
    @PolicyResourceProperty(name="instanceType", flag="unknown_instanceType")
    private String value_instanceType;
    private boolean unknown_instanceType;
    public String instanceType() {
        if (!unknown_instanceType) return value_instanceType;
        throw new UndeferrableValueException("Value 'FleetArgs.instanceType' is not present");
    }

    /**
     * The maximum number of user sessions on an instance. This only applies to multi-session fleets.
     * 
     */
    @PolicyResourceProperty(name="maxSessionsPerInstance", flag="unknown_maxSessionsPerInstance")
    private Integer value_maxSessionsPerInstance;
    private boolean unknown_maxSessionsPerInstance;
    public Integer maxSessionsPerInstance() {
        if (!unknown_maxSessionsPerInstance) return value_maxSessionsPerInstance;
        throw new UndeferrableValueException("Value 'FleetArgs.maxSessionsPerInstance' is not present");
    }

    /**
     * Maximum amount of time that a streaming session can remain active, in seconds.
     * 
     */
    @PolicyResourceProperty(name="maxUserDurationInSeconds", flag="unknown_maxUserDurationInSeconds")
    private Integer value_maxUserDurationInSeconds;
    private boolean unknown_maxUserDurationInSeconds;
    public Integer maxUserDurationInSeconds() {
        if (!unknown_maxUserDurationInSeconds) return value_maxUserDurationInSeconds;
        throw new UndeferrableValueException("Value 'FleetArgs.maxUserDurationInSeconds' is not present");
    }

    /**
     * Unique name for the fleet.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'FleetArgs.name' is not present");
    }

    /**
     * AppStream 2.0 view that is displayed to your users when they stream from the fleet. When `APP` is specified, only the windows of applications opened by users display. When `DESKTOP` is specified, the standard desktop that is provided by the operating system displays. If not specified, defaults to `APP`.
     * 
     */
    @PolicyResourceProperty(name="streamView", flag="unknown_streamView")
    private String value_streamView;
    private boolean unknown_streamView;
    public String streamView() {
        if (!unknown_streamView) return value_streamView;
        throw new UndeferrableValueException("Value 'FleetArgs.streamView' is not present");
    }

    /**
     * Map of tags to attach to AppStream instances.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'FleetArgs.tags' is not present");
    }

    /**
     * Configuration block for the VPC configuration for the image builder. See below.
     * 
     */
    @PolicyResourceProperty(name="vpcConfig", flag="unknown_vpcConfig")
    private FleetVpcConfigArgs value_vpcConfig;
    private boolean unknown_vpcConfig;
    public FleetVpcConfigArgs vpcConfig() {
        if (!unknown_vpcConfig) return value_vpcConfig;
        throw new UndeferrableValueException("Value 'FleetArgs.vpcConfig' is not present");
    }

}
