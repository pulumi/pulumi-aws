// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.medialive.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.medialive.inputs.ChannelEncoderSettingsAudioDescriptionArgs;
import com.pulumi.policypacks.aws.medialive.inputs.ChannelEncoderSettingsAvailBlankingArgs;
import com.pulumi.policypacks.aws.medialive.inputs.ChannelEncoderSettingsCaptionDescriptionArgs;
import com.pulumi.policypacks.aws.medialive.inputs.ChannelEncoderSettingsGlobalConfigurationArgs;
import com.pulumi.policypacks.aws.medialive.inputs.ChannelEncoderSettingsMotionGraphicsConfigurationArgs;
import com.pulumi.policypacks.aws.medialive.inputs.ChannelEncoderSettingsNielsenConfigurationArgs;
import com.pulumi.policypacks.aws.medialive.inputs.ChannelEncoderSettingsOutputGroupArgs;
import com.pulumi.policypacks.aws.medialive.inputs.ChannelEncoderSettingsTimecodeConfigArgs;
import com.pulumi.policypacks.aws.medialive.inputs.ChannelEncoderSettingsVideoDescriptionArgs;
import java.util.List;
import javax.annotation.Nullable;


public final class ChannelEncoderSettingsArgs {

    /**
     * Audio descriptions for the channel. See Audio Descriptions for more details.
     * 
     */
    @PolicyResourceProperty(name="audioDescriptions", flag="unknown_audioDescriptions")
    private List<ChannelEncoderSettingsAudioDescriptionArgs> value_audioDescriptions;
    private boolean unknown_audioDescriptions;
    public List<ChannelEncoderSettingsAudioDescriptionArgs> audioDescriptions() {
        if (!unknown_audioDescriptions) return value_audioDescriptions;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsArgs.audioDescriptions' is not present");
    }

    /**
     * Settings for ad avail blanking. See Avail Blanking for more details.
     * 
     */
    @PolicyResourceProperty(name="availBlanking", flag="unknown_availBlanking")
    private ChannelEncoderSettingsAvailBlankingArgs value_availBlanking;
    private boolean unknown_availBlanking;
    public ChannelEncoderSettingsAvailBlankingArgs availBlanking() {
        if (!unknown_availBlanking) return value_availBlanking;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsArgs.availBlanking' is not present");
    }

    /**
     * Caption Descriptions. See Caption Descriptions for more details.
     * 
     */
    @PolicyResourceProperty(name="captionDescriptions", flag="unknown_captionDescriptions")
    private List<ChannelEncoderSettingsCaptionDescriptionArgs> value_captionDescriptions;
    private boolean unknown_captionDescriptions;
    public List<ChannelEncoderSettingsCaptionDescriptionArgs> captionDescriptions() {
        if (!unknown_captionDescriptions) return value_captionDescriptions;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsArgs.captionDescriptions' is not present");
    }

    /**
     * Configuration settings that apply to the event as a whole. See Global Configuration for more details.
     * 
     */
    @PolicyResourceProperty(name="globalConfiguration", flag="unknown_globalConfiguration")
    private ChannelEncoderSettingsGlobalConfigurationArgs value_globalConfiguration;
    private boolean unknown_globalConfiguration;
    public ChannelEncoderSettingsGlobalConfigurationArgs globalConfiguration() {
        if (!unknown_globalConfiguration) return value_globalConfiguration;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsArgs.globalConfiguration' is not present");
    }

    /**
     * Settings for motion graphics. See Motion Graphics Configuration for more details.
     * 
     */
    @PolicyResourceProperty(name="motionGraphicsConfiguration", flag="unknown_motionGraphicsConfiguration")
    private ChannelEncoderSettingsMotionGraphicsConfigurationArgs value_motionGraphicsConfiguration;
    private boolean unknown_motionGraphicsConfiguration;
    public ChannelEncoderSettingsMotionGraphicsConfigurationArgs motionGraphicsConfiguration() {
        if (!unknown_motionGraphicsConfiguration) return value_motionGraphicsConfiguration;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsArgs.motionGraphicsConfiguration' is not present");
    }

    /**
     * Nielsen configuration settings. See Nielsen Configuration for more details.
     * 
     */
    @PolicyResourceProperty(name="nielsenConfiguration", flag="unknown_nielsenConfiguration")
    private ChannelEncoderSettingsNielsenConfigurationArgs value_nielsenConfiguration;
    private boolean unknown_nielsenConfiguration;
    public ChannelEncoderSettingsNielsenConfigurationArgs nielsenConfiguration() {
        if (!unknown_nielsenConfiguration) return value_nielsenConfiguration;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsArgs.nielsenConfiguration' is not present");
    }

    /**
     * Output groups for the channel. See Output Groups for more details.
     * 
     */
    @PolicyResourceProperty(name="outputGroups", flag="unknown_outputGroups")
    private List<ChannelEncoderSettingsOutputGroupArgs> value_outputGroups;
    private boolean unknown_outputGroups;
    public List<ChannelEncoderSettingsOutputGroupArgs> outputGroups() {
        if (!unknown_outputGroups) return value_outputGroups;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsArgs.outputGroups' is not present");
    }

    /**
     * Contains settings used to acquire and adjust timecode information from inputs. See Timecode Config for more details.
     * 
     */
    @PolicyResourceProperty(name="timecodeConfig", flag="unknown_timecodeConfig")
    private ChannelEncoderSettingsTimecodeConfigArgs value_timecodeConfig;
    private boolean unknown_timecodeConfig;
    public ChannelEncoderSettingsTimecodeConfigArgs timecodeConfig() {
        if (!unknown_timecodeConfig) return value_timecodeConfig;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsArgs.timecodeConfig' is not present");
    }

    /**
     * Video Descriptions. See Video Descriptions for more details.
     * 
     */
    @PolicyResourceProperty(name="videoDescriptions", flag="unknown_videoDescriptions")
    private List<ChannelEncoderSettingsVideoDescriptionArgs> value_videoDescriptions;
    private boolean unknown_videoDescriptions;
    public List<ChannelEncoderSettingsVideoDescriptionArgs> videoDescriptions() {
        if (!unknown_videoDescriptions) return value_videoDescriptions;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsArgs.videoDescriptions' is not present");
    }

}
