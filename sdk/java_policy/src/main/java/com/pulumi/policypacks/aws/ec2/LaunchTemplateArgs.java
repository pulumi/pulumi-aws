// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.ec2.inputs.LaunchTemplateBlockDeviceMappingArgs;
import com.pulumi.policypacks.aws.ec2.inputs.LaunchTemplateCapacityReservationSpecificationArgs;
import com.pulumi.policypacks.aws.ec2.inputs.LaunchTemplateCpuOptionsArgs;
import com.pulumi.policypacks.aws.ec2.inputs.LaunchTemplateCreditSpecificationArgs;
import com.pulumi.policypacks.aws.ec2.inputs.LaunchTemplateElasticGpuSpecificationArgs;
import com.pulumi.policypacks.aws.ec2.inputs.LaunchTemplateElasticInferenceAcceleratorArgs;
import com.pulumi.policypacks.aws.ec2.inputs.LaunchTemplateEnclaveOptionsArgs;
import com.pulumi.policypacks.aws.ec2.inputs.LaunchTemplateHibernationOptionsArgs;
import com.pulumi.policypacks.aws.ec2.inputs.LaunchTemplateIamInstanceProfileArgs;
import com.pulumi.policypacks.aws.ec2.inputs.LaunchTemplateInstanceMarketOptionsArgs;
import com.pulumi.policypacks.aws.ec2.inputs.LaunchTemplateInstanceRequirementsArgs;
import com.pulumi.policypacks.aws.ec2.inputs.LaunchTemplateLicenseSpecificationArgs;
import com.pulumi.policypacks.aws.ec2.inputs.LaunchTemplateMaintenanceOptionsArgs;
import com.pulumi.policypacks.aws.ec2.inputs.LaunchTemplateMetadataOptionsArgs;
import com.pulumi.policypacks.aws.ec2.inputs.LaunchTemplateMonitoringArgs;
import com.pulumi.policypacks.aws.ec2.inputs.LaunchTemplateNetworkInterfaceArgs;
import com.pulumi.policypacks.aws.ec2.inputs.LaunchTemplatePlacementArgs;
import com.pulumi.policypacks.aws.ec2.inputs.LaunchTemplatePrivateDnsNameOptionsArgs;
import com.pulumi.policypacks.aws.ec2.inputs.LaunchTemplateTagSpecificationArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ec2/launchTemplate:LaunchTemplate")
public final class LaunchTemplateArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Specify volumes to attach to the instance besides the volumes specified by the AMI.
     * See Block Devices below for details.
     * 
     */
    private UndeferrableValue<List<LaunchTemplateBlockDeviceMappingArgs>> blockDeviceMappings;

    public List<LaunchTemplateBlockDeviceMappingArgs> blockDeviceMappings() {
        if (blockDeviceMappings == null) return null;
        return blockDeviceMappings.getValue("LaunchTemplateArgs.blockDeviceMappings");
    }

    /**
     * Targeting for EC2 capacity reservations. See Capacity Reservation Specification below for more details.
     * 
     */
    private UndeferrableValue<LaunchTemplateCapacityReservationSpecificationArgs> capacityReservationSpecification;

    public LaunchTemplateCapacityReservationSpecificationArgs capacityReservationSpecification() {
        if (capacityReservationSpecification == null) return null;
        return capacityReservationSpecification.getValue("LaunchTemplateArgs.capacityReservationSpecification");
    }

    /**
     * The CPU options for the instance. See CPU Options below for more details.
     * 
     */
    private UndeferrableValue<LaunchTemplateCpuOptionsArgs> cpuOptions;

    public LaunchTemplateCpuOptionsArgs cpuOptions() {
        if (cpuOptions == null) return null;
        return cpuOptions.getValue("LaunchTemplateArgs.cpuOptions");
    }

    /**
     * Customize the credit specification of the instance. See Credit
     * Specification below for more details.
     * 
     */
    private UndeferrableValue<LaunchTemplateCreditSpecificationArgs> creditSpecification;

    public LaunchTemplateCreditSpecificationArgs creditSpecification() {
        if (creditSpecification == null) return null;
        return creditSpecification.getValue("LaunchTemplateArgs.creditSpecification");
    }

    /**
     * Default Version of the launch template.
     * 
     */
    private UndeferrableValue<Integer> defaultVersion;

    public Integer defaultVersion() {
        if (defaultVersion == null) return null;
        return defaultVersion.getValue("LaunchTemplateArgs.defaultVersion");
    }

    /**
     * Description of the launch template.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("LaunchTemplateArgs.description");
    }

    /**
     * If true, enables [EC2 Instance Stop Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-stop-protection.html).
     * 
     */
    private UndeferrableValue<Boolean> disableApiStop;

    public Boolean disableApiStop() {
        if (disableApiStop == null) return null;
        return disableApiStop.getValue("LaunchTemplateArgs.disableApiStop");
    }

    /**
     * If `true`, enables [EC2 Instance
     * Termination Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_ChangingDisableAPITermination.html)
     * 
     */
    private UndeferrableValue<Boolean> disableApiTermination;

    public Boolean disableApiTermination() {
        if (disableApiTermination == null) return null;
        return disableApiTermination.getValue("LaunchTemplateArgs.disableApiTermination");
    }

    /**
     * If `true`, the launched EC2 instance will be EBS-optimized.
     * 
     */
    private UndeferrableValue<String> ebsOptimized;

    public String ebsOptimized() {
        if (ebsOptimized == null) return null;
        return ebsOptimized.getValue("LaunchTemplateArgs.ebsOptimized");
    }

    /**
     * **DEPRECATED** The elastic GPU to attach to the instance. See Elastic GPU
     * below for more details.
     * 
     * @deprecated
     * elastic_gpu_specifications is deprecated. AWS no longer supports the Elastic Graphics service.
     * 
     */
    @Deprecated /* elastic_gpu_specifications is deprecated. AWS no longer supports the Elastic Graphics service. */
    private UndeferrableValue<List<LaunchTemplateElasticGpuSpecificationArgs>> elasticGpuSpecifications;

    public List<LaunchTemplateElasticGpuSpecificationArgs> elasticGpuSpecifications() {
        if (elasticGpuSpecifications == null) return null;
        return elasticGpuSpecifications.getValue("LaunchTemplateArgs.elasticGpuSpecifications");
    }

    /**
     * **DEPRECATED** Configuration block containing an Elastic Inference Accelerator to attach to the instance. See Elastic Inference Accelerator below for more details.
     * 
     * @deprecated
     * elastic_inference_accelerator is deprecated. AWS no longer supports the Elastic Inference service.
     * 
     */
    @Deprecated /* elastic_inference_accelerator is deprecated. AWS no longer supports the Elastic Inference service. */
    private UndeferrableValue<LaunchTemplateElasticInferenceAcceleratorArgs> elasticInferenceAccelerator;

    public LaunchTemplateElasticInferenceAcceleratorArgs elasticInferenceAccelerator() {
        if (elasticInferenceAccelerator == null) return null;
        return elasticInferenceAccelerator.getValue("LaunchTemplateArgs.elasticInferenceAccelerator");
    }

    /**
     * Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.
     * 
     */
    private UndeferrableValue<LaunchTemplateEnclaveOptionsArgs> enclaveOptions;

    public LaunchTemplateEnclaveOptionsArgs enclaveOptions() {
        if (enclaveOptions == null) return null;
        return enclaveOptions.getValue("LaunchTemplateArgs.enclaveOptions");
    }

    /**
     * The hibernation options for the instance. See Hibernation Options below for more details.
     * 
     */
    private UndeferrableValue<LaunchTemplateHibernationOptionsArgs> hibernationOptions;

    public LaunchTemplateHibernationOptionsArgs hibernationOptions() {
        if (hibernationOptions == null) return null;
        return hibernationOptions.getValue("LaunchTemplateArgs.hibernationOptions");
    }

    /**
     * The IAM Instance Profile to launch the instance with. See Instance Profile
     * below for more details.
     * 
     */
    private UndeferrableValue<LaunchTemplateIamInstanceProfileArgs> iamInstanceProfile;

    public LaunchTemplateIamInstanceProfileArgs iamInstanceProfile() {
        if (iamInstanceProfile == null) return null;
        return iamInstanceProfile.getValue("LaunchTemplateArgs.iamInstanceProfile");
    }

    /**
     * The AMI from which to launch the instance or use a Systems Manager parameter convention e.g. `resolve:ssm:parameter-name`. See [docs](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/create-launch-template.html#use-an-ssm-parameter-instead-of-an-ami-id) for more details.
     * 
     */
    private UndeferrableValue<String> imageId;

    public String imageId() {
        if (imageId == null) return null;
        return imageId.getValue("LaunchTemplateArgs.imageId");
    }

    /**
     * Shutdown behavior for the instance. Can be `stop` or `terminate`.
     * (Default: `stop`).
     * 
     */
    private UndeferrableValue<String> instanceInitiatedShutdownBehavior;

    public String instanceInitiatedShutdownBehavior() {
        if (instanceInitiatedShutdownBehavior == null) return null;
        return instanceInitiatedShutdownBehavior.getValue("LaunchTemplateArgs.instanceInitiatedShutdownBehavior");
    }

    /**
     * The market (purchasing) option for the instance. See Market Options
     * below for details.
     * 
     */
    private UndeferrableValue<LaunchTemplateInstanceMarketOptionsArgs> instanceMarketOptions;

    public LaunchTemplateInstanceMarketOptionsArgs instanceMarketOptions() {
        if (instanceMarketOptions == null) return null;
        return instanceMarketOptions.getValue("LaunchTemplateArgs.instanceMarketOptions");
    }

    /**
     * The attribute requirements for the type of instance. If present then `instance_type` cannot be present.
     * 
     */
    private UndeferrableValue<LaunchTemplateInstanceRequirementsArgs> instanceRequirements;

    public LaunchTemplateInstanceRequirementsArgs instanceRequirements() {
        if (instanceRequirements == null) return null;
        return instanceRequirements.getValue("LaunchTemplateArgs.instanceRequirements");
    }

    /**
     * The type of the instance. If present then `instance_requirements` cannot be present.
     * 
     */
    private UndeferrableValue<String> instanceType;

    public String instanceType() {
        if (instanceType == null) return null;
        return instanceType.getValue("LaunchTemplateArgs.instanceType");
    }

    /**
     * The kernel ID.
     * 
     */
    private UndeferrableValue<String> kernelId;

    public String kernelId() {
        if (kernelId == null) return null;
        return kernelId.getValue("LaunchTemplateArgs.kernelId");
    }

    /**
     * The key name to use for the instance.
     * 
     */
    private UndeferrableValue<String> keyName;

    public String keyName() {
        if (keyName == null) return null;
        return keyName.getValue("LaunchTemplateArgs.keyName");
    }

    /**
     * A list of license specifications to associate with. See License Specification below for more details.
     * 
     */
    private UndeferrableValue<List<LaunchTemplateLicenseSpecificationArgs>> licenseSpecifications;

    public List<LaunchTemplateLicenseSpecificationArgs> licenseSpecifications() {
        if (licenseSpecifications == null) return null;
        return licenseSpecifications.getValue("LaunchTemplateArgs.licenseSpecifications");
    }

    /**
     * The maintenance options for the instance. See Maintenance Options below for more details.
     * 
     */
    private UndeferrableValue<LaunchTemplateMaintenanceOptionsArgs> maintenanceOptions;

    public LaunchTemplateMaintenanceOptionsArgs maintenanceOptions() {
        if (maintenanceOptions == null) return null;
        return maintenanceOptions.getValue("LaunchTemplateArgs.maintenanceOptions");
    }

    /**
     * Customize the metadata options for the instance. See Metadata Options below for more details.
     * 
     */
    private UndeferrableValue<LaunchTemplateMetadataOptionsArgs> metadataOptions;

    public LaunchTemplateMetadataOptionsArgs metadataOptions() {
        if (metadataOptions == null) return null;
        return metadataOptions.getValue("LaunchTemplateArgs.metadataOptions");
    }

    /**
     * The monitoring option for the instance. See Monitoring below for more details.
     * 
     */
    private UndeferrableValue<LaunchTemplateMonitoringArgs> monitoring;

    public LaunchTemplateMonitoringArgs monitoring() {
        if (monitoring == null) return null;
        return monitoring.getValue("LaunchTemplateArgs.monitoring");
    }

    /**
     * The name of the launch template. If you leave this blank, the provider will auto-generate a unique name.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("LaunchTemplateArgs.name");
    }

    /**
     * Creates a unique name beginning with the specified prefix. Conflicts with `name`.
     * 
     */
    private UndeferrableValue<String> namePrefix;

    public String namePrefix() {
        if (namePrefix == null) return null;
        return namePrefix.getValue("LaunchTemplateArgs.namePrefix");
    }

    /**
     * Customize network interfaces to be attached at instance boot time. See Network
     * Interfaces below for more details.
     * 
     */
    private UndeferrableValue<List<LaunchTemplateNetworkInterfaceArgs>> networkInterfaces;

    public List<LaunchTemplateNetworkInterfaceArgs> networkInterfaces() {
        if (networkInterfaces == null) return null;
        return networkInterfaces.getValue("LaunchTemplateArgs.networkInterfaces");
    }

    /**
     * The placement of the instance. See Placement below for more details.
     * 
     */
    private UndeferrableValue<LaunchTemplatePlacementArgs> placement;

    public LaunchTemplatePlacementArgs placement() {
        if (placement == null) return null;
        return placement.getValue("LaunchTemplateArgs.placement");
    }

    /**
     * The options for the instance hostname. The default values are inherited from the subnet. See Private DNS Name Options below for more details.
     * 
     */
    private UndeferrableValue<LaunchTemplatePrivateDnsNameOptionsArgs> privateDnsNameOptions;

    public LaunchTemplatePrivateDnsNameOptionsArgs privateDnsNameOptions() {
        if (privateDnsNameOptions == null) return null;
        return privateDnsNameOptions.getValue("LaunchTemplateArgs.privateDnsNameOptions");
    }

    /**
     * The ID of the RAM disk.
     * 
     */
    private UndeferrableValue<String> ramDiskId;

    public String ramDiskId() {
        if (ramDiskId == null) return null;
        return ramDiskId.getValue("LaunchTemplateArgs.ramDiskId");
    }

    /**
     * A list of security group names to associate with. If you are creating Instances in a VPC, use
     * `vpc_security_group_ids` instead.
     * 
     */
    private UndeferrableValue<List<String>> securityGroupNames;

    public List<String> securityGroupNames() {
        if (securityGroupNames == null) return null;
        return securityGroupNames.getValue("LaunchTemplateArgs.securityGroupNames");
    }

    /**
     * The tags to apply to the resources during launch. See Tag Specifications below for more details. Default tags are currently not propagated to ASG created resources so you may wish to inject your default tags into this variable against the relevant child resource types created.
     * 
     */
    private UndeferrableValue<List<LaunchTemplateTagSpecificationArgs>> tagSpecifications;

    public List<LaunchTemplateTagSpecificationArgs> tagSpecifications() {
        if (tagSpecifications == null) return null;
        return tagSpecifications.getValue("LaunchTemplateArgs.tagSpecifications");
    }

    /**
     * A map of tags to assign to the launch template. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("LaunchTemplateArgs.tags");
    }

    /**
     * Whether to update Default Version each update. Conflicts with `default_version`.
     * 
     */
    private UndeferrableValue<Boolean> updateDefaultVersion;

    public Boolean updateDefaultVersion() {
        if (updateDefaultVersion == null) return null;
        return updateDefaultVersion.getValue("LaunchTemplateArgs.updateDefaultVersion");
    }

    /**
     * The base64-encoded user data to provide when launching the instance.
     * 
     */
    private UndeferrableValue<String> userData;

    public String userData() {
        if (userData == null) return null;
        return userData.getValue("LaunchTemplateArgs.userData");
    }

    /**
     * A list of security group IDs to associate with. Conflicts with `network_interfaces.security_groups`
     * 
     */
    private UndeferrableValue<List<String>> vpcSecurityGroupIds;

    public List<String> vpcSecurityGroupIds() {
        if (vpcSecurityGroupIds == null) return null;
        return vpcSecurityGroupIds.getValue("LaunchTemplateArgs.vpcSecurityGroupIds");
    }

}
