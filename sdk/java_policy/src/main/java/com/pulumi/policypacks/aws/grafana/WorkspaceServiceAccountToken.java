// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.grafana;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Integer;
import java.lang.String;


@PolicyResourceType(type="aws:grafana/workspaceServiceAccountToken:WorkspaceServiceAccountToken")
public final class WorkspaceServiceAccountToken extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Specifies when the service account token was created.
     * 
     */
    @PolicyResourceProperty(name="createdAt", flag="unknown_createdAt")
    private String value_createdAt;
    private boolean unknown_createdAt;
    public String createdAt() {
        if (!unknown_createdAt) return value_createdAt;
        throw new UndeferrableValueException("Value 'WorkspaceServiceAccountToken.createdAt' is not present");
    }

    /**
     * Specifies when the service account token will expire.
     * 
     */
    @PolicyResourceProperty(name="expiresAt", flag="unknown_expiresAt")
    private String value_expiresAt;
    private boolean unknown_expiresAt;
    public String expiresAt() {
        if (!unknown_expiresAt) return value_expiresAt;
        throw new UndeferrableValueException("Value 'WorkspaceServiceAccountToken.expiresAt' is not present");
    }

    /**
     * The key for the service account token. Used when making calls to the Grafana HTTP APIs to authenticate and authorize the requests.
     * 
     */
    @PolicyResourceProperty(name="key", flag="unknown_key")
    private String value_key;
    private boolean unknown_key;
    public String key() {
        if (!unknown_key) return value_key;
        throw new UndeferrableValueException("Value 'WorkspaceServiceAccountToken.key' is not present");
    }

    /**
     * A name for the token to create. The name must be unique within the workspace.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'WorkspaceServiceAccountToken.name' is not present");
    }

    /**
     * Sets how long the token will be valid, in seconds. You can set the time up to 30 days in the future.
     * 
     */
    @PolicyResourceProperty(name="secondsToLive", flag="unknown_secondsToLive")
    private Integer value_secondsToLive;
    private boolean unknown_secondsToLive;
    public Integer secondsToLive() {
        if (!unknown_secondsToLive) return value_secondsToLive;
        throw new UndeferrableValueException("Value 'WorkspaceServiceAccountToken.secondsToLive' is not present");
    }

    /**
     * The ID of the service account for which to create a token.
     * 
     */
    @PolicyResourceProperty(name="serviceAccountId", flag="unknown_serviceAccountId")
    private String value_serviceAccountId;
    private boolean unknown_serviceAccountId;
    public String serviceAccountId() {
        if (!unknown_serviceAccountId) return value_serviceAccountId;
        throw new UndeferrableValueException("Value 'WorkspaceServiceAccountToken.serviceAccountId' is not present");
    }

    /**
     * Identifier of the service account token in the given Grafana workspace.
     * 
     */
    @PolicyResourceProperty(name="serviceAccountTokenId", flag="unknown_serviceAccountTokenId")
    private String value_serviceAccountTokenId;
    private boolean unknown_serviceAccountTokenId;
    public String serviceAccountTokenId() {
        if (!unknown_serviceAccountTokenId) return value_serviceAccountTokenId;
        throw new UndeferrableValueException("Value 'WorkspaceServiceAccountToken.serviceAccountTokenId' is not present");
    }

    /**
     * The Grafana workspace with which the service account token is associated.
     * 
     */
    @PolicyResourceProperty(name="workspaceId", flag="unknown_workspaceId")
    private String value_workspaceId;
    private boolean unknown_workspaceId;
    public String workspaceId() {
        if (!unknown_workspaceId) return value_workspaceId;
        throw new UndeferrableValueException("Value 'WorkspaceServiceAccountToken.workspaceId' is not present");
    }

}
