// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.licensemanager;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.List;


@PolicyResourceType(type="aws:licensemanager/licenseGrant:LicenseGrant")
public final class LicenseGrant extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * A list of the allowed operations for the grant. This is a subset of the allowed operations on the license.
     * 
     */
    @PolicyResourceProperty(name="allowedOperations", flag="unknown_allowedOperations")
    private List<String> value_allowedOperations;
    private boolean unknown_allowedOperations;
    public List<String> allowedOperations() {
        if (!unknown_allowedOperations) return value_allowedOperations;
        throw new UndeferrableValueException("Value 'LicenseGrant.allowedOperations' is not present");
    }

    /**
     * The grant ARN.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'LicenseGrant.arn' is not present");
    }

    /**
     * The home region for the license.
     * 
     */
    @PolicyResourceProperty(name="homeRegion", flag="unknown_homeRegion")
    private String value_homeRegion;
    private boolean unknown_homeRegion;
    public String homeRegion() {
        if (!unknown_homeRegion) return value_homeRegion;
        throw new UndeferrableValueException("Value 'LicenseGrant.homeRegion' is not present");
    }

    /**
     * The ARN of the license to grant.
     * 
     */
    @PolicyResourceProperty(name="licenseArn", flag="unknown_licenseArn")
    private String value_licenseArn;
    private boolean unknown_licenseArn;
    public String licenseArn() {
        if (!unknown_licenseArn) return value_licenseArn;
        throw new UndeferrableValueException("Value 'LicenseGrant.licenseArn' is not present");
    }

    /**
     * The Name of the grant.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'LicenseGrant.name' is not present");
    }

    /**
     * The parent ARN.
     * 
     */
    @PolicyResourceProperty(name="parentArn", flag="unknown_parentArn")
    private String value_parentArn;
    private boolean unknown_parentArn;
    public String parentArn() {
        if (!unknown_parentArn) return value_parentArn;
        throw new UndeferrableValueException("Value 'LicenseGrant.parentArn' is not present");
    }

    /**
     * The target account for the grant in the form of the ARN for an account principal of the root user.
     * 
     */
    @PolicyResourceProperty(name="principal", flag="unknown_principal")
    private String value_principal;
    private boolean unknown_principal;
    public String principal() {
        if (!unknown_principal) return value_principal;
        throw new UndeferrableValueException("Value 'LicenseGrant.principal' is not present");
    }

    /**
     * The grant status.
     * 
     */
    @PolicyResourceProperty(name="status", flag="unknown_status")
    private String value_status;
    private boolean unknown_status;
    public String status() {
        if (!unknown_status) return value_status;
        throw new UndeferrableValueException("Value 'LicenseGrant.status' is not present");
    }

    /**
     * The grant version.
     * 
     */
    @PolicyResourceProperty(name="version", flag="unknown_version")
    private String value_version;
    private boolean unknown_version;
    public String version() {
        if (!unknown_version) return value_version;
        throw new UndeferrableValueException("Value 'LicenseGrant.version' is not present");
    }

}
