// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2clientvpn;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ec2clientvpn/authorizationRule:AuthorizationRule")
public final class AuthorizationRuleArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The ID of the group to which the authorization rule grants access. One of `access_group_id` or `authorize_all_groups` must be set.
     * 
     */
    @PolicyResourceProperty(name="accessGroupId", flag="unknown_accessGroupId")
    private String value_accessGroupId;
    private boolean unknown_accessGroupId;
    public String accessGroupId() {
        if (!unknown_accessGroupId) return value_accessGroupId;
        throw new UndeferrableValueException("Value 'AuthorizationRuleArgs.accessGroupId' is not present");
    }

    /**
     * Indicates whether the authorization rule grants access to all clients. One of `access_group_id` or `authorize_all_groups` must be set.
     * 
     */
    @PolicyResourceProperty(name="authorizeAllGroups", flag="unknown_authorizeAllGroups")
    private Boolean value_authorizeAllGroups;
    private boolean unknown_authorizeAllGroups;
    public Boolean authorizeAllGroups() {
        if (!unknown_authorizeAllGroups) return value_authorizeAllGroups;
        throw new UndeferrableValueException("Value 'AuthorizationRuleArgs.authorizeAllGroups' is not present");
    }

    /**
     * The ID of the Client VPN endpoint.
     * 
     */
    @PolicyResourceProperty(name="clientVpnEndpointId", flag="unknown_clientVpnEndpointId")
    private String value_clientVpnEndpointId;
    private boolean unknown_clientVpnEndpointId;
    public String clientVpnEndpointId() {
        if (!unknown_clientVpnEndpointId) return value_clientVpnEndpointId;
        throw new UndeferrableValueException("Value 'AuthorizationRuleArgs.clientVpnEndpointId' is not present");
    }

    /**
     * A brief description of the authorization rule.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private String value_description;
    private boolean unknown_description;
    public String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'AuthorizationRuleArgs.description' is not present");
    }

    /**
     * The IPv4 address range, in CIDR notation, of the network to which the authorization rule applies.
     * 
     */
    @PolicyResourceProperty(name="targetNetworkCidr", flag="unknown_targetNetworkCidr")
    private String value_targetNetworkCidr;
    private boolean unknown_targetNetworkCidr;
    public String targetNetworkCidr() {
        if (!unknown_targetNetworkCidr) return value_targetNetworkCidr;
        throw new UndeferrableValueException("Value 'AuthorizationRuleArgs.targetNetworkCidr' is not present");
    }

}
