// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appconfig;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.appconfig.outputs.EventIntegrationEventFilter;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:appconfig/eventIntegration:EventIntegration")
public final class EventIntegration extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * ARN of the Event Integration.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'EventIntegration.arn' is not present");
    }

    /**
     * Description of the Event Integration.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private @Nullable String value_description;
    private boolean unknown_description;
    public @Nullable String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'EventIntegration.description' is not present");
    }

    /**
     * Block that defines the configuration information for the event filter. The Event Filter block is documented below.
     * 
     */
    @PolicyResourceProperty(name="eventFilter", flag="unknown_eventFilter")
    private EventIntegrationEventFilter value_eventFilter;
    private boolean unknown_eventFilter;
    public EventIntegrationEventFilter eventFilter() {
        if (!unknown_eventFilter) return value_eventFilter;
        throw new UndeferrableValueException("Value 'EventIntegration.eventFilter' is not present");
    }

    /**
     * EventBridge bus.
     * 
     */
    @PolicyResourceProperty(name="eventbridgeBus", flag="unknown_eventbridgeBus")
    private String value_eventbridgeBus;
    private boolean unknown_eventbridgeBus;
    public String eventbridgeBus() {
        if (!unknown_eventbridgeBus) return value_eventbridgeBus;
        throw new UndeferrableValueException("Value 'EventIntegration.eventbridgeBus' is not present");
    }

    /**
     * Name of the Event Integration.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'EventIntegration.name' is not present");
    }

    /**
     * Tags to apply to the Event Integration. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'EventIntegration.tags' is not present");
    }

    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'EventIntegration.tagsAll' is not present");
    }

}
