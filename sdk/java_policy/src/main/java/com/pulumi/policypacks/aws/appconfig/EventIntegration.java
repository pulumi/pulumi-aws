// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appconfig;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.appconfig.outputs.EventIntegrationEventFilter;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:appconfig/eventIntegration:EventIntegration")
public final class EventIntegration extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * ARN of the Event Integration.
     * 
     */
    private UndeferrableValue<String> arn;

    public String arn() {
        if (arn == null) return null;
        return arn.getValue("EventIntegration.arn");
    }

    /**
     * Description of the Event Integration.
     * 
     */
    private @Nullable UndeferrableValue<String> description;

    public @Nullable String description() {
        if (description == null) return null;
        return description.getValue("EventIntegration.description");
    }

    /**
     * Block that defines the configuration information for the event filter. The Event Filter block is documented below.
     * 
     */
    private UndeferrableValue<EventIntegrationEventFilter> eventFilter;

    public EventIntegrationEventFilter eventFilter() {
        if (eventFilter == null) return null;
        return eventFilter.getValue("EventIntegration.eventFilter");
    }

    /**
     * EventBridge bus.
     * 
     */
    private UndeferrableValue<String> eventbridgeBus;

    public String eventbridgeBus() {
        if (eventbridgeBus == null) return null;
        return eventbridgeBus.getValue("EventIntegration.eventbridgeBus");
    }

    /**
     * Name of the Event Integration.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("EventIntegration.name");
    }

    /**
     * Tags to apply to the Event Integration. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private @Nullable UndeferrableValue<Map<String,String>> tags;

    public @Nullable Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("EventIntegration.tags");
    }

    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    private UndeferrableValue<Map<String,String>> tagsAll;

    public Map<String,String> tagsAll() {
        if (tagsAll == null) return null;
        return tagsAll.getValue("EventIntegration.tagsAll");
    }

}
