// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.auditmanager;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.auditmanager.inputs.AssessmentAssessmentReportsDestinationArgs;
import com.pulumi.policypacks.aws.auditmanager.inputs.AssessmentRoleArgs;
import com.pulumi.policypacks.aws.auditmanager.inputs.AssessmentScopeArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:auditmanager/assessment:Assessment")
public final class AssessmentArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Assessment report storage destination configuration. See `assessment_reports_destination` below.
     * 
     */
    private UndeferrableValue<AssessmentAssessmentReportsDestinationArgs> assessmentReportsDestination;

    public AssessmentAssessmentReportsDestinationArgs assessmentReportsDestination() {
        if (assessmentReportsDestination == null) return null;
        return assessmentReportsDestination.getValue("AssessmentArgs.assessmentReportsDestination");
    }

    /**
     * Description of the assessment.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("AssessmentArgs.description");
    }

    /**
     * Unique identifier of the framework the assessment will be created from.
     * 
     */
    private UndeferrableValue<String> frameworkId;

    public String frameworkId() {
        if (frameworkId == null) return null;
        return frameworkId.getValue("AssessmentArgs.frameworkId");
    }

    /**
     * Name of the assessment.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("AssessmentArgs.name");
    }

    /**
     * List of roles for the assessment. See `roles` below.
     * 
     */
    private UndeferrableValue<List<AssessmentRoleArgs>> roles;

    public List<AssessmentRoleArgs> roles() {
        if (roles == null) return null;
        return roles.getValue("AssessmentArgs.roles");
    }

    /**
     * Amazon Web Services accounts and services that are in scope for the assessment. See `scope` below.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<AssessmentScopeArgs> scope;

    public AssessmentScopeArgs scope() {
        if (scope == null) return null;
        return scope.getValue("AssessmentArgs.scope");
    }

    /**
     * A map of tags to assign to the assessment. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("AssessmentArgs.tags");
    }

}
