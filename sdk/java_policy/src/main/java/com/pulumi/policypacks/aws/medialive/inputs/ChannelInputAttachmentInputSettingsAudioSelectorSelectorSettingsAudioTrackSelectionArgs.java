// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.medialive.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.medialive.inputs.ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsAudioTrackSelectionDolbyEDecodeArgs;
import com.pulumi.policypacks.aws.medialive.inputs.ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsAudioTrackSelectionTrackArgs;
import java.util.List;
import javax.annotation.Nullable;


public final class ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsAudioTrackSelectionArgs {

    /**
     * Configure decoding options for Dolby E streams - these should be Dolby E frames carried in PCM streams tagged with SMPTE-337. See Dolby E Decode for more details.
     * 
     */
    @PolicyResourceProperty(name="dolbyEDecode", flag="unknown_dolbyEDecode")
    private ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsAudioTrackSelectionDolbyEDecodeArgs value_dolbyEDecode;
    private boolean unknown_dolbyEDecode;
    public ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsAudioTrackSelectionDolbyEDecodeArgs dolbyEDecode() {
        if (!unknown_dolbyEDecode) return value_dolbyEDecode;
        throw new UndeferrableValueException("Value 'ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsAudioTrackSelectionArgs.dolbyEDecode' is not present");
    }

    /**
     * Selects one or more unique audio tracks from within a source. See Audio Tracks for more details.
     * 
     */
    @PolicyResourceProperty(name="tracks", flag="unknown_tracks")
    private List<ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsAudioTrackSelectionTrackArgs> value_tracks;
    private boolean unknown_tracks;
    public List<ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsAudioTrackSelectionTrackArgs> tracks() {
        if (!unknown_tracks) return value_tracks;
        throw new UndeferrableValueException("Value 'ChannelInputAttachmentInputSettingsAudioSelectorSelectorSettingsAudioTrackSelectionArgs.tracks' is not present");
    }

}
