// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.s3.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.Integer;
import javax.annotation.Nullable;


public final class BucketLifecycleConfigurationV2RuleNoncurrentVersionExpiration {

    /**
     * Number of noncurrent versions Amazon S3 will retain. Must be a non-zero positive integer.
     * 
     */
    @PolicyResourceProperty(name="newerNoncurrentVersions", flag="unknown_newerNoncurrentVersions")
    private @Nullable Integer value_newerNoncurrentVersions;
    private boolean unknown_newerNoncurrentVersions;
    public @Nullable Integer newerNoncurrentVersions() {
        if (!unknown_newerNoncurrentVersions) return value_newerNoncurrentVersions;
        throw new UndeferrableValueException("Value 'BucketLifecycleConfigurationV2RuleNoncurrentVersionExpiration.newerNoncurrentVersions' is not present");
    }

    /**
     * Number of days an object is noncurrent before Amazon S3 can perform the associated action. Must be a positive integer.
     * 
     */
    @PolicyResourceProperty(name="noncurrentDays", flag="unknown_noncurrentDays")
    private Integer value_noncurrentDays;
    private boolean unknown_noncurrentDays;
    public Integer noncurrentDays() {
        if (!unknown_noncurrentDays) return value_noncurrentDays;
        throw new UndeferrableValueException("Value 'BucketLifecycleConfigurationV2RuleNoncurrentVersionExpiration.noncurrentDays' is not present");
    }

}
