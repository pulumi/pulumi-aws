// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.costexplorer;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:costexplorer/anomalyMonitor:AnomalyMonitor")
public final class AnomalyMonitorArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The dimensions to evaluate. Valid values: `SERVICE`.
     * 
     */
    private UndeferrableValue<String> monitorDimension;

    public String monitorDimension() {
        if (monitorDimension == null) return null;
        return monitorDimension.getValue("AnomalyMonitorArgs.monitorDimension");
    }

    /**
     * A valid JSON representation for the [Expression](https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_Expression.html) object.
     * 
     */
    private UndeferrableValue<String> monitorSpecification;

    public String monitorSpecification() {
        if (monitorSpecification == null) return null;
        return monitorSpecification.getValue("AnomalyMonitorArgs.monitorSpecification");
    }

    /**
     * The possible type values. Valid values: `DIMENSIONAL` | `CUSTOM`.
     * 
     */
    private UndeferrableValue<String> monitorType;

    public String monitorType() {
        if (monitorType == null) return null;
        return monitorType.getValue("AnomalyMonitorArgs.monitorType");
    }

    /**
     * The name of the monitor.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("AnomalyMonitorArgs.name");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("AnomalyMonitorArgs.tags");
    }

}
