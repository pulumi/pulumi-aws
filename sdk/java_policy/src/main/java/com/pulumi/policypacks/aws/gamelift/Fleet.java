// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.gamelift;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.gamelift.outputs.FleetCertificateConfiguration;
import com.pulumi.policypacks.aws.gamelift.outputs.FleetEc2InboundPermission;
import com.pulumi.policypacks.aws.gamelift.outputs.FleetResourceCreationLimitPolicy;
import com.pulumi.policypacks.aws.gamelift.outputs.FleetRuntimeConfiguration;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:gamelift/fleet:Fleet")
public final class Fleet extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Fleet ARN.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'Fleet.arn' is not present");
    }

    /**
     * Build ARN.
     * 
     */
    @PolicyResourceProperty(name="buildArn", flag="unknown_buildArn")
    private String value_buildArn;
    private boolean unknown_buildArn;
    public String buildArn() {
        if (!unknown_buildArn) return value_buildArn;
        throw new UndeferrableValueException("Value 'Fleet.buildArn' is not present");
    }

    /**
     * ID of the GameLift Build to be deployed on the fleet.
     * 
     */
    @PolicyResourceProperty(name="buildId", flag="unknown_buildId")
    private @Nullable String value_buildId;
    private boolean unknown_buildId;
    public @Nullable String buildId() {
        if (!unknown_buildId) return value_buildId;
        throw new UndeferrableValueException("Value 'Fleet.buildId' is not present");
    }

    /**
     * Prompts GameLift to generate a TLS/SSL certificate for the fleet. See certificate_configuration.
     * 
     */
    @PolicyResourceProperty(name="certificateConfiguration", flag="unknown_certificateConfiguration")
    private FleetCertificateConfiguration value_certificateConfiguration;
    private boolean unknown_certificateConfiguration;
    public FleetCertificateConfiguration certificateConfiguration() {
        if (!unknown_certificateConfiguration) return value_certificateConfiguration;
        throw new UndeferrableValueException("Value 'Fleet.certificateConfiguration' is not present");
    }

    /**
     * Human-readable description of the fleet.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private @Nullable String value_description;
    private boolean unknown_description;
    public @Nullable String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'Fleet.description' is not present");
    }

    /**
     * Range of IP addresses and port settings that permit inbound traffic to access server processes running on the fleet. See below.
     * 
     */
    @PolicyResourceProperty(name="ec2InboundPermissions", flag="unknown_ec2InboundPermissions")
    private List<FleetEc2InboundPermission> value_ec2InboundPermissions;
    private boolean unknown_ec2InboundPermissions;
    public List<FleetEc2InboundPermission> ec2InboundPermissions() {
        if (!unknown_ec2InboundPermissions) return value_ec2InboundPermissions;
        throw new UndeferrableValueException("Value 'Fleet.ec2InboundPermissions' is not present");
    }

    /**
     * Name of an EC2 instance typeE.g., `t2.micro`
     * 
     */
    @PolicyResourceProperty(name="ec2InstanceType", flag="unknown_ec2InstanceType")
    private String value_ec2InstanceType;
    private boolean unknown_ec2InstanceType;
    public String ec2InstanceType() {
        if (!unknown_ec2InstanceType) return value_ec2InstanceType;
        throw new UndeferrableValueException("Value 'Fleet.ec2InstanceType' is not present");
    }

    /**
     * Type of fleet. This value must be `ON_DEMAND` or `SPOT`. Defaults to `ON_DEMAND`.
     * 
     */
    @PolicyResourceProperty(name="fleetType", flag="unknown_fleetType")
    private @Nullable String value_fleetType;
    private boolean unknown_fleetType;
    public @Nullable String fleetType() {
        if (!unknown_fleetType) return value_fleetType;
        throw new UndeferrableValueException("Value 'Fleet.fleetType' is not present");
    }

    /**
     * ARN of an IAM role that instances in the fleet can assume.
     * 
     */
    @PolicyResourceProperty(name="instanceRoleArn", flag="unknown_instanceRoleArn")
    private @Nullable String value_instanceRoleArn;
    private boolean unknown_instanceRoleArn;
    public @Nullable String instanceRoleArn() {
        if (!unknown_instanceRoleArn) return value_instanceRoleArn;
        throw new UndeferrableValueException("Value 'Fleet.instanceRoleArn' is not present");
    }

    @PolicyResourceProperty(name="logPaths", flag="unknown_logPaths")
    private List<String> value_logPaths;
    private boolean unknown_logPaths;
    public List<String> logPaths() {
        if (!unknown_logPaths) return value_logPaths;
        throw new UndeferrableValueException("Value 'Fleet.logPaths' is not present");
    }

    /**
     * List of names of metric groups to add this fleet to. A metric group tracks metrics across all fleets in the group. Defaults to `default`.
     * 
     */
    @PolicyResourceProperty(name="metricGroups", flag="unknown_metricGroups")
    private List<String> value_metricGroups;
    private boolean unknown_metricGroups;
    public List<String> metricGroups() {
        if (!unknown_metricGroups) return value_metricGroups;
        throw new UndeferrableValueException("Value 'Fleet.metricGroups' is not present");
    }

    /**
     * The name of the fleet.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'Fleet.name' is not present");
    }

    /**
     * Game session protection policy to apply to all instances in this fleetE.g., `FullProtection`. Defaults to `NoProtection`.
     * 
     */
    @PolicyResourceProperty(name="newGameSessionProtectionPolicy", flag="unknown_newGameSessionProtectionPolicy")
    private @Nullable String value_newGameSessionProtectionPolicy;
    private boolean unknown_newGameSessionProtectionPolicy;
    public @Nullable String newGameSessionProtectionPolicy() {
        if (!unknown_newGameSessionProtectionPolicy) return value_newGameSessionProtectionPolicy;
        throw new UndeferrableValueException("Value 'Fleet.newGameSessionProtectionPolicy' is not present");
    }

    /**
     * Operating system of the fleet&#39;s computing resources.
     * 
     */
    @PolicyResourceProperty(name="operatingSystem", flag="unknown_operatingSystem")
    private String value_operatingSystem;
    private boolean unknown_operatingSystem;
    public String operatingSystem() {
        if (!unknown_operatingSystem) return value_operatingSystem;
        throw new UndeferrableValueException("Value 'Fleet.operatingSystem' is not present");
    }

    /**
     * Policy that limits the number of game sessions an individual player can create over a span of time for this fleet. See below.
     * 
     */
    @PolicyResourceProperty(name="resourceCreationLimitPolicy", flag="unknown_resourceCreationLimitPolicy")
    private @Nullable FleetResourceCreationLimitPolicy value_resourceCreationLimitPolicy;
    private boolean unknown_resourceCreationLimitPolicy;
    public @Nullable FleetResourceCreationLimitPolicy resourceCreationLimitPolicy() {
        if (!unknown_resourceCreationLimitPolicy) return value_resourceCreationLimitPolicy;
        throw new UndeferrableValueException("Value 'Fleet.resourceCreationLimitPolicy' is not present");
    }

    /**
     * Instructions for launching server processes on each instance in the fleet. See below.
     * 
     */
    @PolicyResourceProperty(name="runtimeConfiguration", flag="unknown_runtimeConfiguration")
    private @Nullable FleetRuntimeConfiguration value_runtimeConfiguration;
    private boolean unknown_runtimeConfiguration;
    public @Nullable FleetRuntimeConfiguration runtimeConfiguration() {
        if (!unknown_runtimeConfiguration) return value_runtimeConfiguration;
        throw new UndeferrableValueException("Value 'Fleet.runtimeConfiguration' is not present");
    }

    /**
     * Script ARN.
     * 
     */
    @PolicyResourceProperty(name="scriptArn", flag="unknown_scriptArn")
    private String value_scriptArn;
    private boolean unknown_scriptArn;
    public String scriptArn() {
        if (!unknown_scriptArn) return value_scriptArn;
        throw new UndeferrableValueException("Value 'Fleet.scriptArn' is not present");
    }

    /**
     * ID of the GameLift Script to be deployed on the fleet.
     * 
     */
    @PolicyResourceProperty(name="scriptId", flag="unknown_scriptId")
    private @Nullable String value_scriptId;
    private boolean unknown_scriptId;
    public @Nullable String scriptId() {
        if (!unknown_scriptId) return value_scriptId;
        throw new UndeferrableValueException("Value 'Fleet.scriptId' is not present");
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'Fleet.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'Fleet.tagsAll' is not present");
    }

}
