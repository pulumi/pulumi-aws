// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ssm.outputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfig {

    /**
     * An Amazon Resource Name (ARN) for a Simple Notification Service (SNS) topic. Run Command pushes notifications about command status changes to this topic.
     * 
     */
    private @Nullable UndeferrableValue<String> notificationArn;

    public @Nullable String notificationArn() {
        if (notificationArn == null) return null;
        return notificationArn.getValue("MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfig.notificationArn");
    }

    /**
     * The different events for which you can receive notifications. Valid values: `All`, `InProgress`, `Success`, `TimedOut`, `Cancelled`, and `Failed`
     * 
     */
    private @Nullable UndeferrableValue<List<String>> notificationEvents;

    public @Nullable List<String> notificationEvents() {
        if (notificationEvents == null) return null;
        return notificationEvents.getValue("MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfig.notificationEvents");
    }

    /**
     * When specified with `Command`, receive notification when the status of a command changes. When specified with `Invocation`, for commands sent to multiple instances, receive notification on a per-instance basis when the status of a command changes. Valid values: `Command` and `Invocation`
     * 
     */
    private @Nullable UndeferrableValue<String> notificationType;

    public @Nullable String notificationType() {
        if (notificationType == null) return null;
        return notificationType.getValue("MaintenanceWindowTaskTaskInvocationParametersRunCommandParametersNotificationConfig.notificationType");
    }

}
