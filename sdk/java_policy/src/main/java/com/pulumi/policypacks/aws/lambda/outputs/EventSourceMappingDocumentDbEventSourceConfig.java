// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.lambda.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.String;
import javax.annotation.Nullable;


public final class EventSourceMappingDocumentDbEventSourceConfig {

    /**
     * The name of the collection to consume within the database. If you do not specify a collection, Lambda consumes all collections.
     * 
     */
    @PolicyResourceProperty(name="collectionName", flag="unknown_collectionName")
    private @Nullable String value_collectionName;
    private boolean unknown_collectionName;
    public @Nullable String collectionName() {
        if (!unknown_collectionName) return value_collectionName;
        throw new UndeferrableValueException("Value 'EventSourceMappingDocumentDbEventSourceConfig.collectionName' is not present");
    }

    /**
     * The name of the database to consume within the DocumentDB cluster.
     * 
     */
    @PolicyResourceProperty(name="databaseName", flag="unknown_databaseName")
    private String value_databaseName;
    private boolean unknown_databaseName;
    public String databaseName() {
        if (!unknown_databaseName) return value_databaseName;
        throw new UndeferrableValueException("Value 'EventSourceMappingDocumentDbEventSourceConfig.databaseName' is not present");
    }

    /**
     * Determines what DocumentDB sends to your event stream during document update operations. If set to `UpdateLookup`, DocumentDB sends a delta describing the changes, along with a copy of the entire document. Otherwise, DocumentDB sends only a partial document that contains the changes. Valid values: `UpdateLookup`, `Default`.
     * 
     */
    @PolicyResourceProperty(name="fullDocument", flag="unknown_fullDocument")
    private @Nullable String value_fullDocument;
    private boolean unknown_fullDocument;
    public @Nullable String fullDocument() {
        if (!unknown_fullDocument) return value_fullDocument;
        throw new UndeferrableValueException("Value 'EventSourceMappingDocumentDbEventSourceConfig.fullDocument' is not present");
    }

}
