// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2transitgateway;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ec2transitgateway/prefixListReference:PrefixListReference")
public final class PrefixListReference extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Indicates whether to drop traffic that matches the Prefix List. Defaults to `false`.
     * 
     */
    @PolicyResourceProperty(name="blackhole", flag="unknown_blackhole")
    private @Nullable Boolean value_blackhole;
    private boolean unknown_blackhole;
    public @Nullable Boolean blackhole() {
        if (!unknown_blackhole) return value_blackhole;
        throw new UndeferrableValueException("Value 'PrefixListReference.blackhole' is not present");
    }

    /**
     * Identifier of EC2 Prefix List.
     * 
     */
    @PolicyResourceProperty(name="prefixListId", flag="unknown_prefixListId")
    private String value_prefixListId;
    private boolean unknown_prefixListId;
    public String prefixListId() {
        if (!unknown_prefixListId) return value_prefixListId;
        throw new UndeferrableValueException("Value 'PrefixListReference.prefixListId' is not present");
    }

    @PolicyResourceProperty(name="prefixListOwnerId", flag="unknown_prefixListOwnerId")
    private String value_prefixListOwnerId;
    private boolean unknown_prefixListOwnerId;
    public String prefixListOwnerId() {
        if (!unknown_prefixListOwnerId) return value_prefixListOwnerId;
        throw new UndeferrableValueException("Value 'PrefixListReference.prefixListOwnerId' is not present");
    }

    /**
     * Identifier of EC2 Transit Gateway Attachment.
     * 
     */
    @PolicyResourceProperty(name="transitGatewayAttachmentId", flag="unknown_transitGatewayAttachmentId")
    private @Nullable String value_transitGatewayAttachmentId;
    private boolean unknown_transitGatewayAttachmentId;
    public @Nullable String transitGatewayAttachmentId() {
        if (!unknown_transitGatewayAttachmentId) return value_transitGatewayAttachmentId;
        throw new UndeferrableValueException("Value 'PrefixListReference.transitGatewayAttachmentId' is not present");
    }

    /**
     * Identifier of EC2 Transit Gateway Route Table.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="transitGatewayRouteTableId", flag="unknown_transitGatewayRouteTableId")
    private String value_transitGatewayRouteTableId;
    private boolean unknown_transitGatewayRouteTableId;
    public String transitGatewayRouteTableId() {
        if (!unknown_transitGatewayRouteTableId) return value_transitGatewayRouteTableId;
        throw new UndeferrableValueException("Value 'PrefixListReference.transitGatewayRouteTableId' is not present");
    }

}
