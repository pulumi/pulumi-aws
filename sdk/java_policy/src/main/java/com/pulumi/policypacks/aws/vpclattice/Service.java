// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.vpclattice;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.vpclattice.outputs.ServiceDnsEntry;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:vpclattice/service:Service")
public final class Service extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * ARN of the service.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'Service.arn' is not present");
    }

    /**
     * Type of IAM policy. Either `NONE` or `AWS_IAM`.
     * 
     */
    @PolicyResourceProperty(name="authType", flag="unknown_authType")
    private String value_authType;
    private boolean unknown_authType;
    public String authType() {
        if (!unknown_authType) return value_authType;
        throw new UndeferrableValueException("Value 'Service.authType' is not present");
    }

    /**
     * Amazon Resource Name (ARN) of the certificate.
     * 
     */
    @PolicyResourceProperty(name="certificateArn", flag="unknown_certificateArn")
    private @Nullable String value_certificateArn;
    private boolean unknown_certificateArn;
    public @Nullable String certificateArn() {
        if (!unknown_certificateArn) return value_certificateArn;
        throw new UndeferrableValueException("Value 'Service.certificateArn' is not present");
    }

    /**
     * Custom domain name of the service.
     * 
     */
    @PolicyResourceProperty(name="customDomainName", flag="unknown_customDomainName")
    private @Nullable String value_customDomainName;
    private boolean unknown_customDomainName;
    public @Nullable String customDomainName() {
        if (!unknown_customDomainName) return value_customDomainName;
        throw new UndeferrableValueException("Value 'Service.customDomainName' is not present");
    }

    /**
     * DNS name of the service.
     * 
     */
    @PolicyResourceProperty(name="dnsEntries", flag="unknown_dnsEntries")
    private List<ServiceDnsEntry> value_dnsEntries;
    private boolean unknown_dnsEntries;
    public List<ServiceDnsEntry> dnsEntries() {
        if (!unknown_dnsEntries) return value_dnsEntries;
        throw new UndeferrableValueException("Value 'Service.dnsEntries' is not present");
    }

    /**
     * Name of the service. The name must be unique within the account. The valid characters are a-z, 0-9, and hyphens (-). You can&#39;t use a hyphen as the first or last character, or immediately after another hyphen.Must be between 3 and 40 characters in length.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'Service.name' is not present");
    }

    /**
     * Status of the service.
     * 
     */
    @PolicyResourceProperty(name="status", flag="unknown_status")
    private String value_status;
    private boolean unknown_status;
    public String status() {
        if (!unknown_status) return value_status;
        throw new UndeferrableValueException("Value 'Service.status' is not present");
    }

    /**
     * Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'Service.tags' is not present");
    }

    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'Service.tagsAll' is not present");
    }

}
