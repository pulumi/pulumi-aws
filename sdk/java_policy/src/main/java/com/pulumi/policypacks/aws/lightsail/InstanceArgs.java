// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.lightsail;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.lightsail.inputs.InstanceAddOnArgs;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:lightsail/instance:Instance")
public final class InstanceArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The add-on configuration for the instance. Detailed below.
     * 
     */
    private UndeferrableValue<InstanceAddOnArgs> addOn;

    public InstanceAddOnArgs addOn() {
        if (addOn == null) return null;
        return addOn.getValue("InstanceArgs.addOn");
    }

    /**
     * The Availability Zone in which to create your instance. A
     * list of available zones can be obtained using the AWS CLI command:
     * [`aws lightsail get-regions --include-availability-zones`](https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lightsail/get-regions.html).
     * 
     */
    private UndeferrableValue<String> availabilityZone;

    public String availabilityZone() {
        if (availabilityZone == null) return null;
        return availabilityZone.getValue("InstanceArgs.availabilityZone");
    }

    /**
     * The ID for a virtual private server image. A list of available
     * blueprint IDs can be obtained using the AWS CLI command:
     * [`aws lightsail get-blueprints`](https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lightsail/get-blueprints.html).
     * 
     */
    private UndeferrableValue<String> blueprintId;

    public String blueprintId() {
        if (blueprintId == null) return null;
        return blueprintId.getValue("InstanceArgs.blueprintId");
    }

    /**
     * The bundle of specification information. A list of available
     * bundle IDs can be obtained using the AWS CLI command:
     * [`aws lightsail get-bundles`](https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lightsail/get-bundles.html).
     * 
     */
    private UndeferrableValue<String> bundleId;

    public String bundleId() {
        if (bundleId == null) return null;
        return bundleId.getValue("InstanceArgs.bundleId");
    }

    /**
     * The IP address type of the Lightsail Instance. Valid Values: `dualstack`,  `ipv4`, and `ipv6`.
     * 
     */
    private UndeferrableValue<String> ipAddressType;

    public String ipAddressType() {
        if (ipAddressType == null) return null;
        return ipAddressType.getValue("InstanceArgs.ipAddressType");
    }

    /**
     * The name of your key pair. Created in the
     * Lightsail console (cannot use `aws.ec2.KeyPair` at this time)
     * 
     */
    private UndeferrableValue<String> keyPairName;

    public String keyPairName() {
        if (keyPairName == null) return null;
        return keyPairName.getValue("InstanceArgs.keyPairName");
    }

    /**
     * The name of the Lightsail Instance. Names must be unique within each AWS Region in your Lightsail account.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("InstanceArgs.name");
    }

    /**
     * A map of tags to assign to the resource. To create a key-only tag, use an empty string as the value. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("InstanceArgs.tags");
    }

    /**
     * Single lined launch script as a string to configure server with additional user data
     * 
     */
    private UndeferrableValue<String> userData;

    public String userData() {
        if (userData == null) return null;
        return userData.getValue("InstanceArgs.userData");
    }

}
