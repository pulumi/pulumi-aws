// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.connect;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.connect.inputs.QueueOutboundCallerConfigArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:connect/queue:Queue")
public final class QueueArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Specifies the description of the Queue.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("QueueArgs.description");
    }

    /**
     * Specifies the identifier of the Hours of Operation.
     * 
     */
    private UndeferrableValue<String> hoursOfOperationId;

    public String hoursOfOperationId() {
        if (hoursOfOperationId == null) return null;
        return hoursOfOperationId.getValue("QueueArgs.hoursOfOperationId");
    }

    /**
     * Specifies the identifier of the hosting Amazon Connect Instance.
     * 
     */
    private UndeferrableValue<String> instanceId;

    public String instanceId() {
        if (instanceId == null) return null;
        return instanceId.getValue("QueueArgs.instanceId");
    }

    /**
     * Specifies the maximum number of contacts that can be in the queue before it is considered full. Minimum value of 0.
     * 
     */
    private UndeferrableValue<Integer> maxContacts;

    public Integer maxContacts() {
        if (maxContacts == null) return null;
        return maxContacts.getValue("QueueArgs.maxContacts");
    }

    /**
     * Specifies the name of the Queue.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("QueueArgs.name");
    }

    /**
     * A block that defines the outbound caller ID name, number, and outbound whisper flow. The Outbound Caller Config block is documented below.
     * 
     */
    private UndeferrableValue<QueueOutboundCallerConfigArgs> outboundCallerConfig;

    public QueueOutboundCallerConfigArgs outboundCallerConfig() {
        if (outboundCallerConfig == null) return null;
        return outboundCallerConfig.getValue("QueueArgs.outboundCallerConfig");
    }

    /**
     * Specifies a list of quick connects ids that determine the quick connects available to agents who are working the queue.
     * 
     */
    private UndeferrableValue<List<String>> quickConnectIds;

    public List<String> quickConnectIds() {
        if (quickConnectIds == null) return null;
        return quickConnectIds.getValue("QueueArgs.quickConnectIds");
    }

    /**
     * Specifies the description of the Queue. Valid values are `ENABLED`, `DISABLED`.
     * 
     */
    private UndeferrableValue<String> status;

    public String status() {
        if (status == null) return null;
        return status.getValue("QueueArgs.status");
    }

    /**
     * Tags to apply to the Queue. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("QueueArgs.tags");
    }

}
