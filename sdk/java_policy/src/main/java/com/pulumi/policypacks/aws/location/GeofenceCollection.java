// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.location;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:location/geofenceCollection:GeofenceCollection")
public final class GeofenceCollection extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The Amazon Resource Name (ARN) for the geofence collection resource. Used when you need to specify a resource across all AWS.
     * 
     */
    @PolicyResourceProperty(name="collectionArn", flag="unknown_collectionArn")
    private String value_collectionArn;
    private boolean unknown_collectionArn;
    public String collectionArn() {
        if (!unknown_collectionArn) return value_collectionArn;
        throw new UndeferrableValueException("Value 'GeofenceCollection.collectionArn' is not present");
    }

    /**
     * The name of the geofence collection.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="collectionName", flag="unknown_collectionName")
    private String value_collectionName;
    private boolean unknown_collectionName;
    public String collectionName() {
        if (!unknown_collectionName) return value_collectionName;
        throw new UndeferrableValueException("Value 'GeofenceCollection.collectionName' is not present");
    }

    /**
     * The timestamp for when the geofence collection resource was created in ISO 8601 format.
     * 
     */
    @PolicyResourceProperty(name="createTime", flag="unknown_createTime")
    private String value_createTime;
    private boolean unknown_createTime;
    public String createTime() {
        if (!unknown_createTime) return value_createTime;
        throw new UndeferrableValueException("Value 'GeofenceCollection.createTime' is not present");
    }

    /**
     * The optional description for the geofence collection.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private @Nullable String value_description;
    private boolean unknown_description;
    public @Nullable String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'GeofenceCollection.description' is not present");
    }

    /**
     * A key identifier for an AWS KMS customer managed key assigned to the Amazon Location resource.
     * 
     */
    @PolicyResourceProperty(name="kmsKeyId", flag="unknown_kmsKeyId")
    private @Nullable String value_kmsKeyId;
    private boolean unknown_kmsKeyId;
    public @Nullable String kmsKeyId() {
        if (!unknown_kmsKeyId) return value_kmsKeyId;
        throw new UndeferrableValueException("Value 'GeofenceCollection.kmsKeyId' is not present");
    }

    /**
     * Key-value tags for the geofence collection. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'GeofenceCollection.tags' is not present");
    }

    /**
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'GeofenceCollection.tagsAll' is not present");
    }

    /**
     * The timestamp for when the geofence collection resource was last updated in ISO 8601 format.
     * 
     */
    @PolicyResourceProperty(name="updateTime", flag="unknown_updateTime")
    private String value_updateTime;
    private boolean unknown_updateTime;
    public String updateTime() {
        if (!unknown_updateTime) return value_updateTime;
        throw new UndeferrableValueException("Value 'GeofenceCollection.updateTime' is not present");
    }

}
