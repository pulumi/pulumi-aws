// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.backup;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.backup.inputs.SelectionConditionArgs;
import com.pulumi.policypacks.aws.backup.inputs.SelectionSelectionTagArgs;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:backup/selection:Selection")
public final class SelectionArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Condition-based filters used to specify sets of resources for a backup plan. See below for details.
     * 
     */
    @PolicyResourceProperty(name="conditions", flag="unknown_conditions")
    private List<SelectionConditionArgs> value_conditions;
    private boolean unknown_conditions;
    public List<SelectionConditionArgs> conditions() {
        if (!unknown_conditions) return value_conditions;
        throw new UndeferrableValueException("Value 'SelectionArgs.conditions' is not present");
    }

    /**
     * The ARN of the IAM role that AWS Backup uses to authenticate when restoring and backing up the target resource. See the [AWS Backup Developer Guide](https://docs.aws.amazon.com/aws-backup/latest/devguide/access-control.html#managed-policies) for additional information about using AWS managed policies or creating custom policies attached to the IAM role.
     * 
     */
    @PolicyResourceProperty(name="iamRoleArn", flag="unknown_iamRoleArn")
    private String value_iamRoleArn;
    private boolean unknown_iamRoleArn;
    public String iamRoleArn() {
        if (!unknown_iamRoleArn) return value_iamRoleArn;
        throw new UndeferrableValueException("Value 'SelectionArgs.iamRoleArn' is not present");
    }

    /**
     * The display name of a resource selection document.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'SelectionArgs.name' is not present");
    }

    /**
     * An array of strings that either contain Amazon Resource Names (ARNs) or match patterns of resources to exclude from a backup plan.
     * 
     */
    @PolicyResourceProperty(name="notResources", flag="unknown_notResources")
    private List<String> value_notResources;
    private boolean unknown_notResources;
    public List<String> notResources() {
        if (!unknown_notResources) return value_notResources;
        throw new UndeferrableValueException("Value 'SelectionArgs.notResources' is not present");
    }

    /**
     * The backup plan ID to be associated with the selection of resources.
     * 
     */
    @PolicyResourceProperty(name="planId", flag="unknown_planId")
    private String value_planId;
    private boolean unknown_planId;
    public String planId() {
        if (!unknown_planId) return value_planId;
        throw new UndeferrableValueException("Value 'SelectionArgs.planId' is not present");
    }

    /**
     * An array of strings that either contain Amazon Resource Names (ARNs) or match patterns of resources to assign to a backup plan.
     * 
     */
    @PolicyResourceProperty(name="resources", flag="unknown_resources")
    private List<String> value_resources;
    private boolean unknown_resources;
    public List<String> resources() {
        if (!unknown_resources) return value_resources;
        throw new UndeferrableValueException("Value 'SelectionArgs.resources' is not present");
    }

    /**
     * Tag-based conditions used to specify a set of resources to assign to a backup plan. See below for details.
     * 
     */
    @PolicyResourceProperty(name="selectionTags", flag="unknown_selectionTags")
    private List<SelectionSelectionTagArgs> value_selectionTags;
    private boolean unknown_selectionTags;
    public List<SelectionSelectionTagArgs> selectionTags() {
        if (!unknown_selectionTags) return value_selectionTags;
        throw new UndeferrableValueException("Value 'SelectionArgs.selectionTags' is not present");
    }

}
