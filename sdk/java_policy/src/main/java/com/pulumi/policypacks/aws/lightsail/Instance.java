// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.lightsail;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.lightsail.outputs.InstanceAddOn;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:lightsail/instance:Instance")
public final class Instance extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The add-on configuration for the instance. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="addOn", flag="unknown_addOn")
    private @Nullable InstanceAddOn value_addOn;
    private boolean unknown_addOn;
    public @Nullable InstanceAddOn addOn() {
        if (!unknown_addOn) return value_addOn;
        throw new UndeferrableValueException("Value 'Instance.addOn' is not present");
    }

    /**
     * The ARN of the Lightsail instance (matches `id`).
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'Instance.arn' is not present");
    }

    /**
     * The Availability Zone in which to create your instance. A
     * list of available zones can be obtained using the AWS CLI command:
     * [`aws lightsail get-regions --include-availability-zones`](https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lightsail/get-regions.html).
     * 
     */
    @PolicyResourceProperty(name="availabilityZone", flag="unknown_availabilityZone")
    private String value_availabilityZone;
    private boolean unknown_availabilityZone;
    public String availabilityZone() {
        if (!unknown_availabilityZone) return value_availabilityZone;
        throw new UndeferrableValueException("Value 'Instance.availabilityZone' is not present");
    }

    /**
     * The ID for a virtual private server image. A list of available
     * blueprint IDs can be obtained using the AWS CLI command:
     * [`aws lightsail get-blueprints`](https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lightsail/get-blueprints.html).
     * 
     */
    @PolicyResourceProperty(name="blueprintId", flag="unknown_blueprintId")
    private String value_blueprintId;
    private boolean unknown_blueprintId;
    public String blueprintId() {
        if (!unknown_blueprintId) return value_blueprintId;
        throw new UndeferrableValueException("Value 'Instance.blueprintId' is not present");
    }

    /**
     * The bundle of specification information. A list of available
     * bundle IDs can be obtained using the AWS CLI command:
     * [`aws lightsail get-bundles`](https://awscli.amazonaws.com/v2/documentation/api/latest/reference/lightsail/get-bundles.html).
     * 
     */
    @PolicyResourceProperty(name="bundleId", flag="unknown_bundleId")
    private String value_bundleId;
    private boolean unknown_bundleId;
    public String bundleId() {
        if (!unknown_bundleId) return value_bundleId;
        throw new UndeferrableValueException("Value 'Instance.bundleId' is not present");
    }

    /**
     * The number of vCPUs the instance has.
     * 
     */
    @PolicyResourceProperty(name="cpuCount", flag="unknown_cpuCount")
    private Integer value_cpuCount;
    private boolean unknown_cpuCount;
    public Integer cpuCount() {
        if (!unknown_cpuCount) return value_cpuCount;
        throw new UndeferrableValueException("Value 'Instance.cpuCount' is not present");
    }

    /**
     * The timestamp when the instance was created.
     * 
     */
    @PolicyResourceProperty(name="createdAt", flag="unknown_createdAt")
    private String value_createdAt;
    private boolean unknown_createdAt;
    public String createdAt() {
        if (!unknown_createdAt) return value_createdAt;
        throw new UndeferrableValueException("Value 'Instance.createdAt' is not present");
    }

    /**
     * The IP address type of the Lightsail Instance. Valid Values: `dualstack`,  `ipv4`, and `ipv6`.
     * 
     */
    @PolicyResourceProperty(name="ipAddressType", flag="unknown_ipAddressType")
    private @Nullable String value_ipAddressType;
    private boolean unknown_ipAddressType;
    public @Nullable String ipAddressType() {
        if (!unknown_ipAddressType) return value_ipAddressType;
        throw new UndeferrableValueException("Value 'Instance.ipAddressType' is not present");
    }

    /**
     * List of IPv6 addresses for the Lightsail instance.
     * 
     */
    @PolicyResourceProperty(name="ipv6Addresses", flag="unknown_ipv6Addresses")
    private List<String> value_ipv6Addresses;
    private boolean unknown_ipv6Addresses;
    public List<String> ipv6Addresses() {
        if (!unknown_ipv6Addresses) return value_ipv6Addresses;
        throw new UndeferrableValueException("Value 'Instance.ipv6Addresses' is not present");
    }

    /**
     * A Boolean value indicating whether this instance has a static IP assigned to it.
     * 
     */
    @PolicyResourceProperty(name="isStaticIp", flag="unknown_isStaticIp")
    private Boolean value_isStaticIp;
    private boolean unknown_isStaticIp;
    public Boolean isStaticIp() {
        if (!unknown_isStaticIp) return value_isStaticIp;
        throw new UndeferrableValueException("Value 'Instance.isStaticIp' is not present");
    }

    /**
     * The name of your key pair. Created in the
     * Lightsail console (cannot use `aws.ec2.KeyPair` at this time)
     * 
     */
    @PolicyResourceProperty(name="keyPairName", flag="unknown_keyPairName")
    private @Nullable String value_keyPairName;
    private boolean unknown_keyPairName;
    public @Nullable String keyPairName() {
        if (!unknown_keyPairName) return value_keyPairName;
        throw new UndeferrableValueException("Value 'Instance.keyPairName' is not present");
    }

    /**
     * The name of the Lightsail Instance. Names must be unique within each AWS Region in your Lightsail account.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'Instance.name' is not present");
    }

    /**
     * The private IP address of the instance.
     * 
     */
    @PolicyResourceProperty(name="privateIpAddress", flag="unknown_privateIpAddress")
    private String value_privateIpAddress;
    private boolean unknown_privateIpAddress;
    public String privateIpAddress() {
        if (!unknown_privateIpAddress) return value_privateIpAddress;
        throw new UndeferrableValueException("Value 'Instance.privateIpAddress' is not present");
    }

    /**
     * The public IP address of the instance.
     * 
     */
    @PolicyResourceProperty(name="publicIpAddress", flag="unknown_publicIpAddress")
    private String value_publicIpAddress;
    private boolean unknown_publicIpAddress;
    public String publicIpAddress() {
        if (!unknown_publicIpAddress) return value_publicIpAddress;
        throw new UndeferrableValueException("Value 'Instance.publicIpAddress' is not present");
    }

    /**
     * The amount of RAM in GB on the instance (e.g., 1.0).
     * 
     */
    @PolicyResourceProperty(name="ramSize", flag="unknown_ramSize")
    private Double value_ramSize;
    private boolean unknown_ramSize;
    public Double ramSize() {
        if (!unknown_ramSize) return value_ramSize;
        throw new UndeferrableValueException("Value 'Instance.ramSize' is not present");
    }

    /**
     * A map of tags to assign to the resource. To create a key-only tag, use an empty string as the value. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'Instance.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'Instance.tagsAll' is not present");
    }

    /**
     * Single lined launch script as a string to configure server with additional user data
     * 
     */
    @PolicyResourceProperty(name="userData", flag="unknown_userData")
    private @Nullable String value_userData;
    private boolean unknown_userData;
    public @Nullable String userData() {
        if (!unknown_userData) return value_userData;
        throw new UndeferrableValueException("Value 'Instance.userData' is not present");
    }

    /**
     * The user name for connecting to the instance (e.g., ec2-user).
     * 
     */
    @PolicyResourceProperty(name="username", flag="unknown_username")
    private String value_username;
    private boolean unknown_username;
    public String username() {
        if (!unknown_username) return value_username;
        throw new UndeferrableValueException("Value 'Instance.username' is not present");
    }

}
