// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.networkmanager;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;


@PolicyResourceType(type="aws:networkmanager/attachmentAccepter:AttachmentAccepter")
public final class AttachmentAccepter extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The ID of the attachment.
     * 
     */
    private UndeferrableValue<String> attachmentId;

    public String attachmentId() {
        if (attachmentId == null) return null;
        return attachmentId.getValue("AttachmentAccepter.attachmentId");
    }

    /**
     * The policy rule number associated with the attachment.
     * 
     */
    private UndeferrableValue<Integer> attachmentPolicyRuleNumber;

    public Integer attachmentPolicyRuleNumber() {
        if (attachmentPolicyRuleNumber == null) return null;
        return attachmentPolicyRuleNumber.getValue("AttachmentAccepter.attachmentPolicyRuleNumber");
    }

    /**
     * The type of attachment. Valid values can be found in the [AWS Documentation](https://docs.aws.amazon.com/networkmanager/latest/APIReference/API_ListAttachments.html#API_ListAttachments_RequestSyntax)
     * 
     */
    private UndeferrableValue<String> attachmentType;

    public String attachmentType() {
        if (attachmentType == null) return null;
        return attachmentType.getValue("AttachmentAccepter.attachmentType");
    }

    /**
     * The ARN of a core network.
     * 
     */
    private UndeferrableValue<String> coreNetworkArn;

    public String coreNetworkArn() {
        if (coreNetworkArn == null) return null;
        return coreNetworkArn.getValue("AttachmentAccepter.coreNetworkArn");
    }

    /**
     * The id of a core network.
     * 
     */
    private UndeferrableValue<String> coreNetworkId;

    public String coreNetworkId() {
        if (coreNetworkId == null) return null;
        return coreNetworkId.getValue("AttachmentAccepter.coreNetworkId");
    }

    /**
     * The Region where the edge is located. This is returned for all attachment types except a Direct Connect gateway attachment, which instead returns `edge_locations`.
     * 
     */
    private UndeferrableValue<String> edgeLocation;

    public String edgeLocation() {
        if (edgeLocation == null) return null;
        return edgeLocation.getValue("AttachmentAccepter.edgeLocation");
    }

    /**
     * The edge locations that the Direct Connect gateway is associated with. This is returned only for Direct Connect gateway attachments. All other attachment types return `edge_location`
     * 
     */
    private UndeferrableValue<List<String>> edgeLocations;

    public List<String> edgeLocations() {
        if (edgeLocations == null) return null;
        return edgeLocations.getValue("AttachmentAccepter.edgeLocations");
    }

    /**
     * The ID of the attachment account owner.
     * 
     */
    private UndeferrableValue<String> ownerAccountId;

    public String ownerAccountId() {
        if (ownerAccountId == null) return null;
        return ownerAccountId.getValue("AttachmentAccepter.ownerAccountId");
    }

    /**
     * The attachment resource ARN.
     * 
     */
    private UndeferrableValue<String> resourceArn;

    public String resourceArn() {
        if (resourceArn == null) return null;
        return resourceArn.getValue("AttachmentAccepter.resourceArn");
    }

    /**
     * The name of the segment attachment.
     * 
     */
    private UndeferrableValue<String> segmentName;

    public String segmentName() {
        if (segmentName == null) return null;
        return segmentName.getValue("AttachmentAccepter.segmentName");
    }

    /**
     * The state of the attachment.
     * 
     */
    private UndeferrableValue<String> state;

    public String state() {
        if (state == null) return null;
        return state.getValue("AttachmentAccepter.state");
    }

}
