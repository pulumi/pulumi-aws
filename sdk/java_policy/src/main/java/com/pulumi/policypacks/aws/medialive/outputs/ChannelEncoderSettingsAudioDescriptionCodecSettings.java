// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.medialive.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.medialive.outputs.ChannelEncoderSettingsAudioDescriptionCodecSettingsAacSettings;
import com.pulumi.policypacks.aws.medialive.outputs.ChannelEncoderSettingsAudioDescriptionCodecSettingsAc3Settings;
import com.pulumi.policypacks.aws.medialive.outputs.ChannelEncoderSettingsAudioDescriptionCodecSettingsEac3AtmosSettings;
import com.pulumi.policypacks.aws.medialive.outputs.ChannelEncoderSettingsAudioDescriptionCodecSettingsEac3Settings;
import com.pulumi.policypacks.aws.medialive.outputs.ChannelEncoderSettingsAudioDescriptionCodecSettingsMp2Settings;
import com.pulumi.policypacks.aws.medialive.outputs.ChannelEncoderSettingsAudioDescriptionCodecSettingsPassThroughSettings;
import com.pulumi.policypacks.aws.medialive.outputs.ChannelEncoderSettingsAudioDescriptionCodecSettingsWavSettings;
import javax.annotation.Nullable;


public final class ChannelEncoderSettingsAudioDescriptionCodecSettings {

    /**
     * Aac Settings. See AAC Settings for more details.
     * 
     */
    private @Nullable UndeferrableValue<ChannelEncoderSettingsAudioDescriptionCodecSettingsAacSettings> aacSettings;

    public @Nullable ChannelEncoderSettingsAudioDescriptionCodecSettingsAacSettings aacSettings() {
        if (aacSettings == null) return null;
        return aacSettings.getValue("ChannelEncoderSettingsAudioDescriptionCodecSettings.aacSettings");
    }

    /**
     * Ac3 Settings. See AC3 Settings for more details.
     * 
     */
    private @Nullable UndeferrableValue<ChannelEncoderSettingsAudioDescriptionCodecSettingsAc3Settings> ac3Settings;

    public @Nullable ChannelEncoderSettingsAudioDescriptionCodecSettingsAc3Settings ac3Settings() {
        if (ac3Settings == null) return null;
        return ac3Settings.getValue("ChannelEncoderSettingsAudioDescriptionCodecSettings.ac3Settings");
    }

    /**
     * Eac3 Atmos Settings. See EAC3 Atmos Settings
     * 
     */
    private @Nullable UndeferrableValue<ChannelEncoderSettingsAudioDescriptionCodecSettingsEac3AtmosSettings> eac3AtmosSettings;

    public @Nullable ChannelEncoderSettingsAudioDescriptionCodecSettingsEac3AtmosSettings eac3AtmosSettings() {
        if (eac3AtmosSettings == null) return null;
        return eac3AtmosSettings.getValue("ChannelEncoderSettingsAudioDescriptionCodecSettings.eac3AtmosSettings");
    }

    /**
     * Eac3 Settings. See EAC3 Settings
     * 
     */
    private @Nullable UndeferrableValue<ChannelEncoderSettingsAudioDescriptionCodecSettingsEac3Settings> eac3Settings;

    public @Nullable ChannelEncoderSettingsAudioDescriptionCodecSettingsEac3Settings eac3Settings() {
        if (eac3Settings == null) return null;
        return eac3Settings.getValue("ChannelEncoderSettingsAudioDescriptionCodecSettings.eac3Settings");
    }

    private @Nullable UndeferrableValue<ChannelEncoderSettingsAudioDescriptionCodecSettingsMp2Settings> mp2Settings;

    public @Nullable ChannelEncoderSettingsAudioDescriptionCodecSettingsMp2Settings mp2Settings() {
        if (mp2Settings == null) return null;
        return mp2Settings.getValue("ChannelEncoderSettingsAudioDescriptionCodecSettings.mp2Settings");
    }

    private @Nullable UndeferrableValue<ChannelEncoderSettingsAudioDescriptionCodecSettingsPassThroughSettings> passThroughSettings;

    public @Nullable ChannelEncoderSettingsAudioDescriptionCodecSettingsPassThroughSettings passThroughSettings() {
        if (passThroughSettings == null) return null;
        return passThroughSettings.getValue("ChannelEncoderSettingsAudioDescriptionCodecSettings.passThroughSettings");
    }

    private @Nullable UndeferrableValue<ChannelEncoderSettingsAudioDescriptionCodecSettingsWavSettings> wavSettings;

    public @Nullable ChannelEncoderSettingsAudioDescriptionCodecSettingsWavSettings wavSettings() {
        if (wavSettings == null) return null;
        return wavSettings.getValue("ChannelEncoderSettingsAudioDescriptionCodecSettings.wavSettings");
    }

}
