// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.customerprofiles.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.customerprofiles.outputs.DomainRuleBasedMatchingAttributeTypesSelector;
import com.pulumi.policypacks.aws.customerprofiles.outputs.DomainRuleBasedMatchingConflictResolution;
import com.pulumi.policypacks.aws.customerprofiles.outputs.DomainRuleBasedMatchingExportingConfig;
import com.pulumi.policypacks.aws.customerprofiles.outputs.DomainRuleBasedMatchingMatchingRule;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class DomainRuleBasedMatching {

    /**
     * A block that configures information about the `AttributeTypesSelector` where the rule-based identity resolution uses to match profiles. Documented below.
     * 
     */
    private @Nullable UndeferrableValue<DomainRuleBasedMatchingAttributeTypesSelector> attributeTypesSelector;

    public @Nullable DomainRuleBasedMatchingAttributeTypesSelector attributeTypesSelector() {
        if (attributeTypesSelector == null) return null;
        return attributeTypesSelector.getValue("DomainRuleBasedMatching.attributeTypesSelector");
    }

    /**
     * A block that specifies how the auto-merging process should resolve conflicts between different profiles. Documented below.
     * 
     */
    private @Nullable UndeferrableValue<DomainRuleBasedMatchingConflictResolution> conflictResolution;

    public @Nullable DomainRuleBasedMatchingConflictResolution conflictResolution() {
        if (conflictResolution == null) return null;
        return conflictResolution.getValue("DomainRuleBasedMatching.conflictResolution");
    }

    /**
     * The flag that enables the rule-based matching process of duplicate profiles.
     * 
     */
    private UndeferrableValue<Boolean> enabled;

    public Boolean enabled() {
        if (enabled == null) return null;
        return enabled.getValue("DomainRuleBasedMatching.enabled");
    }

    /**
     * A block that specifies the configuration for exporting Identity Resolution results. Documented below.
     * 
     */
    private @Nullable UndeferrableValue<DomainRuleBasedMatchingExportingConfig> exportingConfig;

    public @Nullable DomainRuleBasedMatchingExportingConfig exportingConfig() {
        if (exportingConfig == null) return null;
        return exportingConfig.getValue("DomainRuleBasedMatching.exportingConfig");
    }

    /**
     * A block that configures how the rule-based matching process should match profiles. You can have up to 15 `rule` in the `natching_rules`. Documented below.
     * 
     */
    private @Nullable UndeferrableValue<List<DomainRuleBasedMatchingMatchingRule>> matchingRules;

    public @Nullable List<DomainRuleBasedMatchingMatchingRule> matchingRules() {
        if (matchingRules == null) return null;
        return matchingRules.getValue("DomainRuleBasedMatching.matchingRules");
    }

    /**
     * Indicates the maximum allowed rule level for matching.
     * 
     */
    private @Nullable UndeferrableValue<Integer> maxAllowedRuleLevelForMatching;

    public @Nullable Integer maxAllowedRuleLevelForMatching() {
        if (maxAllowedRuleLevelForMatching == null) return null;
        return maxAllowedRuleLevelForMatching.getValue("DomainRuleBasedMatching.maxAllowedRuleLevelForMatching");
    }

    /**
     * Indicates the maximum allowed rule level for merging.
     * 
     */
    private @Nullable UndeferrableValue<Integer> maxAllowedRuleLevelForMerging;

    public @Nullable Integer maxAllowedRuleLevelForMerging() {
        if (maxAllowedRuleLevelForMerging == null) return null;
        return maxAllowedRuleLevelForMerging.getValue("DomainRuleBasedMatching.maxAllowedRuleLevelForMerging");
    }

    private @Nullable UndeferrableValue<String> status;

    public @Nullable String status() {
        if (status == null) return null;
        return status.getValue("DomainRuleBasedMatching.status");
    }

}
