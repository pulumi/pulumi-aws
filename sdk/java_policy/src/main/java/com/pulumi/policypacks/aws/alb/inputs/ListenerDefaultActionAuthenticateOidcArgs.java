// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.alb.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


public final class ListenerDefaultActionAuthenticateOidcArgs {

    /**
     * Query parameters to include in the redirect request to the authorization endpoint. Max: 10.
     * 
     */
    @PolicyResourceProperty(name="authenticationRequestExtraParams", flag="unknown_authenticationRequestExtraParams")
    private Map<String,String> value_authenticationRequestExtraParams;
    private boolean unknown_authenticationRequestExtraParams;
    public Map<String,String> authenticationRequestExtraParams() {
        if (!unknown_authenticationRequestExtraParams) return value_authenticationRequestExtraParams;
        throw new UndeferrableValueException("Value 'ListenerDefaultActionAuthenticateOidcArgs.authenticationRequestExtraParams' is not present");
    }

    /**
     * Authorization endpoint of the IdP.
     * 
     */
    @PolicyResourceProperty(name="authorizationEndpoint", flag="unknown_authorizationEndpoint")
    private String value_authorizationEndpoint;
    private boolean unknown_authorizationEndpoint;
    public String authorizationEndpoint() {
        if (!unknown_authorizationEndpoint) return value_authorizationEndpoint;
        throw new UndeferrableValueException("Value 'ListenerDefaultActionAuthenticateOidcArgs.authorizationEndpoint' is not present");
    }

    /**
     * OAuth 2.0 client identifier.
     * 
     */
    @PolicyResourceProperty(name="clientId", flag="unknown_clientId")
    private String value_clientId;
    private boolean unknown_clientId;
    public String clientId() {
        if (!unknown_clientId) return value_clientId;
        throw new UndeferrableValueException("Value 'ListenerDefaultActionAuthenticateOidcArgs.clientId' is not present");
    }

    /**
     * OAuth 2.0 client secret.
     * 
     */
    @PolicyResourceProperty(name="clientSecret", flag="unknown_clientSecret")
    private String value_clientSecret;
    private boolean unknown_clientSecret;
    public String clientSecret() {
        if (!unknown_clientSecret) return value_clientSecret;
        throw new UndeferrableValueException("Value 'ListenerDefaultActionAuthenticateOidcArgs.clientSecret' is not present");
    }

    /**
     * OIDC issuer identifier of the IdP.
     * 
     */
    @PolicyResourceProperty(name="issuer", flag="unknown_issuer")
    private String value_issuer;
    private boolean unknown_issuer;
    public String issuer() {
        if (!unknown_issuer) return value_issuer;
        throw new UndeferrableValueException("Value 'ListenerDefaultActionAuthenticateOidcArgs.issuer' is not present");
    }

    /**
     * Behavior if the user is not authenticated. Valid values: `deny`, `allow` and `authenticate`
     * 
     */
    @PolicyResourceProperty(name="onUnauthenticatedRequest", flag="unknown_onUnauthenticatedRequest")
    private String value_onUnauthenticatedRequest;
    private boolean unknown_onUnauthenticatedRequest;
    public String onUnauthenticatedRequest() {
        if (!unknown_onUnauthenticatedRequest) return value_onUnauthenticatedRequest;
        throw new UndeferrableValueException("Value 'ListenerDefaultActionAuthenticateOidcArgs.onUnauthenticatedRequest' is not present");
    }

    /**
     * Set of user claims to be requested from the IdP.
     * 
     */
    @PolicyResourceProperty(name="scope", flag="unknown_scope")
    private String value_scope;
    private boolean unknown_scope;
    public String scope() {
        if (!unknown_scope) return value_scope;
        throw new UndeferrableValueException("Value 'ListenerDefaultActionAuthenticateOidcArgs.scope' is not present");
    }

    /**
     * Name of the cookie used to maintain session information.
     * 
     */
    @PolicyResourceProperty(name="sessionCookieName", flag="unknown_sessionCookieName")
    private String value_sessionCookieName;
    private boolean unknown_sessionCookieName;
    public String sessionCookieName() {
        if (!unknown_sessionCookieName) return value_sessionCookieName;
        throw new UndeferrableValueException("Value 'ListenerDefaultActionAuthenticateOidcArgs.sessionCookieName' is not present");
    }

    /**
     * Maximum duration of the authentication session, in seconds.
     * 
     */
    @PolicyResourceProperty(name="sessionTimeout", flag="unknown_sessionTimeout")
    private Integer value_sessionTimeout;
    private boolean unknown_sessionTimeout;
    public Integer sessionTimeout() {
        if (!unknown_sessionTimeout) return value_sessionTimeout;
        throw new UndeferrableValueException("Value 'ListenerDefaultActionAuthenticateOidcArgs.sessionTimeout' is not present");
    }

    /**
     * Token endpoint of the IdP.
     * 
     */
    @PolicyResourceProperty(name="tokenEndpoint", flag="unknown_tokenEndpoint")
    private String value_tokenEndpoint;
    private boolean unknown_tokenEndpoint;
    public String tokenEndpoint() {
        if (!unknown_tokenEndpoint) return value_tokenEndpoint;
        throw new UndeferrableValueException("Value 'ListenerDefaultActionAuthenticateOidcArgs.tokenEndpoint' is not present");
    }

    /**
     * User info endpoint of the IdP.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="userInfoEndpoint", flag="unknown_userInfoEndpoint")
    private String value_userInfoEndpoint;
    private boolean unknown_userInfoEndpoint;
    public String userInfoEndpoint() {
        if (!unknown_userInfoEndpoint) return value_userInfoEndpoint;
        throw new UndeferrableValueException("Value 'ListenerDefaultActionAuthenticateOidcArgs.userInfoEndpoint' is not present");
    }

}
