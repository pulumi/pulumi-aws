// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.lb.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.String;
import javax.annotation.Nullable;


public final class LoadBalancerSubnetMappingArgs {

    /**
     * Allocation ID of the Elastic IP address for an internet-facing load balancer.
     * 
     */
    @PolicyResourceProperty(name="allocationId", flag="unknown_allocationId")
    private String value_allocationId;
    private boolean unknown_allocationId;
    public String allocationId() {
        if (!unknown_allocationId) return value_allocationId;
        throw new UndeferrableValueException("Value 'LoadBalancerSubnetMappingArgs.allocationId' is not present");
    }

    /**
     * IPv6 address. You associate IPv6 CIDR blocks with your VPC and choose the subnets where you launch both internet-facing and internal Application Load Balancers or Network Load Balancers.
     * 
     */
    @PolicyResourceProperty(name="ipv6Address", flag="unknown_ipv6Address")
    private String value_ipv6Address;
    private boolean unknown_ipv6Address;
    public String ipv6Address() {
        if (!unknown_ipv6Address) return value_ipv6Address;
        throw new UndeferrableValueException("Value 'LoadBalancerSubnetMappingArgs.ipv6Address' is not present");
    }

    @PolicyResourceProperty(name="outpostId", flag="unknown_outpostId")
    private String value_outpostId;
    private boolean unknown_outpostId;
    public String outpostId() {
        if (!unknown_outpostId) return value_outpostId;
        throw new UndeferrableValueException("Value 'LoadBalancerSubnetMappingArgs.outpostId' is not present");
    }

    /**
     * Private IPv4 address for an internal load balancer.
     * 
     */
    @PolicyResourceProperty(name="privateIpv4Address", flag="unknown_privateIpv4Address")
    private String value_privateIpv4Address;
    private boolean unknown_privateIpv4Address;
    public String privateIpv4Address() {
        if (!unknown_privateIpv4Address) return value_privateIpv4Address;
        throw new UndeferrableValueException("Value 'LoadBalancerSubnetMappingArgs.privateIpv4Address' is not present");
    }

    /**
     * ID of the subnet of which to attach to the load balancer. You can specify only one subnet per Availability Zone.
     * 
     */
    @PolicyResourceProperty(name="subnetId", flag="unknown_subnetId")
    private String value_subnetId;
    private boolean unknown_subnetId;
    public String subnetId() {
        if (!unknown_subnetId) return value_subnetId;
        throw new UndeferrableValueException("Value 'LoadBalancerSubnetMappingArgs.subnetId' is not present");
    }

}
