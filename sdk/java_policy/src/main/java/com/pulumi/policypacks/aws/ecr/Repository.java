// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ecr;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.ecr.RepositoryEncryptionConfiguration;
import com.pulumi.policypacks.aws.ecr.RepositoryImageScanningConfiguration;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;


@PolicyResourceType(type="aws:ecr/repository:Repository")
public final class Repository extends com.pulumi.resources.PolicyResource {

    /**
     * Full ARN of the repository.
     * 
     */
    public String arn;



    /**
     * Encryption configuration for the repository. See below for schema.
     * 
     */
    public List<RepositoryEncryptionConfiguration> encryptionConfigurations;



    /**
     * If `true`, will delete the repository even if it contains images.
     * Defaults to `false`.
     * 
     */
    public Boolean forceDelete;



    /**
     * Configuration block that defines image scanning configuration for the repository. By default, image scanning must be manually triggered. See the [ECR User Guide](https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-scanning.html) for more information about image scanning.
     * 
     */
    public RepositoryImageScanningConfiguration imageScanningConfiguration;



    /**
     * The tag mutability setting for the repository. Must be one of: `MUTABLE` or `IMMUTABLE`. Defaults to `MUTABLE`.
     * 
     */
    public String imageTagMutability;



    /**
     * Name of the repository.
     * 
     */
    public String name;



    /**
     * The registry ID where the repository was created.
     * 
     */
    public String registryId;



    /**
     * The URL of the repository (in the form `aws_account_id.dkr.ecr.region.amazonaws.com/repositoryName`).
     * 
     */
    public String repositoryUrl;



    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



}
