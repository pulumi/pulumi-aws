// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.ec2.outputs.ManagedPrefixListEntry;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ec2/managedPrefixList:ManagedPrefixList")
public final class ManagedPrefixList extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Address family (`IPv4` or `IPv6`) of this prefix list.
     * 
     */
    @PolicyResourceProperty(name="addressFamily", flag="unknown_addressFamily")
    private String value_addressFamily;
    private boolean unknown_addressFamily;
    public String addressFamily() {
        if (!unknown_addressFamily) return value_addressFamily;
        throw new UndeferrableValueException("Value 'ManagedPrefixList.addressFamily' is not present");
    }

    /**
     * ARN of the prefix list.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'ManagedPrefixList.arn' is not present");
    }

    /**
     * Configuration block for prefix list entry. Detailed below. Different entries may have overlapping CIDR blocks, but a particular CIDR should not be duplicated.
     * 
     */
    @PolicyResourceProperty(name="entries", flag="unknown_entries")
    private List<ManagedPrefixListEntry> value_entries;
    private boolean unknown_entries;
    public List<ManagedPrefixListEntry> entries() {
        if (!unknown_entries) return value_entries;
        throw new UndeferrableValueException("Value 'ManagedPrefixList.entries' is not present");
    }

    /**
     * Maximum number of entries that this prefix list can contain.
     * 
     */
    @PolicyResourceProperty(name="maxEntries", flag="unknown_maxEntries")
    private Integer value_maxEntries;
    private boolean unknown_maxEntries;
    public Integer maxEntries() {
        if (!unknown_maxEntries) return value_maxEntries;
        throw new UndeferrableValueException("Value 'ManagedPrefixList.maxEntries' is not present");
    }

    /**
     * Name of this resource. The name must not start with `com.amazonaws`.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'ManagedPrefixList.name' is not present");
    }

    /**
     * ID of the AWS account that owns this prefix list.
     * 
     */
    @PolicyResourceProperty(name="ownerId", flag="unknown_ownerId")
    private String value_ownerId;
    private boolean unknown_ownerId;
    public String ownerId() {
        if (!unknown_ownerId) return value_ownerId;
        throw new UndeferrableValueException("Value 'ManagedPrefixList.ownerId' is not present");
    }

    /**
     * Map of tags to assign to this resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'ManagedPrefixList.tags' is not present");
    }

    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'ManagedPrefixList.tagsAll' is not present");
    }

    /**
     * Latest version of this prefix list.
     * 
     */
    @PolicyResourceProperty(name="version", flag="unknown_version")
    private Integer value_version;
    private boolean unknown_version;
    public Integer version() {
        if (!unknown_version) return value_version;
        throw new UndeferrableValueException("Value 'ManagedPrefixList.version' is not present");
    }

}
