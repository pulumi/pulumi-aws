// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.lex;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.lex.inputs.SlotTypeEnumerationValueArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:lex/slotType:SlotType")
public final class SlotTypeArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Determines if a new slot type version is created when the initial resource is created and on each
     * update. Defaults to `false`.
     * 
     */
    @PolicyResourceProperty(name="createVersion", flag="unknown_createVersion")
    private Boolean value_createVersion;
    private boolean unknown_createVersion;
    public Boolean createVersion() {
        if (!unknown_createVersion) return value_createVersion;
        throw new UndeferrableValueException("Value 'SlotTypeArgs.createVersion' is not present");
    }

    /**
     * A description of the slot type. Must be less than or equal to 200 characters in length.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private String value_description;
    private boolean unknown_description;
    public String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'SlotTypeArgs.description' is not present");
    }

    /**
     * A list of EnumerationValue objects that defines the values that
     * the slot type can take. Each value can have a list of synonyms, which are additional values that help
     * train the machine learning model about the values that it resolves for a slot. Attributes are
     * documented under enumeration_value.
     * 
     */
    @PolicyResourceProperty(name="enumerationValues", flag="unknown_enumerationValues")
    private List<SlotTypeEnumerationValueArgs> value_enumerationValues;
    private boolean unknown_enumerationValues;
    public List<SlotTypeEnumerationValueArgs> enumerationValues() {
        if (!unknown_enumerationValues) return value_enumerationValues;
        throw new UndeferrableValueException("Value 'SlotTypeArgs.enumerationValues' is not present");
    }

    /**
     * The name of the slot type. The name is not case sensitive. Must be less than or equal to 100 characters in length.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'SlotTypeArgs.name' is not present");
    }

    /**
     * Determines the slot resolution strategy that Amazon Lex
     * uses to return slot type values. `ORIGINAL_VALUE` returns the value entered by the user if the user
     * value is similar to the slot value. `TOP_RESOLUTION` returns the first value in the resolution list
     * if there is a resolution list for the slot, otherwise null is returned. Defaults to `ORIGINAL_VALUE`.
     * 
     */
    @PolicyResourceProperty(name="valueSelectionStrategy", flag="unknown_valueSelectionStrategy")
    private String value_valueSelectionStrategy;
    private boolean unknown_valueSelectionStrategy;
    public String valueSelectionStrategy() {
        if (!unknown_valueSelectionStrategy) return value_valueSelectionStrategy;
        throw new UndeferrableValueException("Value 'SlotTypeArgs.valueSelectionStrategy' is not present");
    }

}
