// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.sns;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:sns/smsPreferences:SmsPreferences")
public final class SmsPreferencesArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * A string, such as your business brand, that is displayed as the sender on the receiving device.
     * 
     */
    @PolicyResourceProperty(name="defaultSenderId", flag="unknown_defaultSenderId")
    private String value_defaultSenderId;
    private boolean unknown_defaultSenderId;
    public String defaultSenderId() {
        if (!unknown_defaultSenderId) return value_defaultSenderId;
        throw new UndeferrableValueException("Value 'SmsPreferencesArgs.defaultSenderId' is not present");
    }

    /**
     * The type of SMS message that you will send by default. Possible values are: Promotional, Transactional
     * 
     */
    @PolicyResourceProperty(name="defaultSmsType", flag="unknown_defaultSmsType")
    private String value_defaultSmsType;
    private boolean unknown_defaultSmsType;
    public String defaultSmsType() {
        if (!unknown_defaultSmsType) return value_defaultSmsType;
        throw new UndeferrableValueException("Value 'SmsPreferencesArgs.defaultSmsType' is not present");
    }

    /**
     * The ARN of the IAM role that allows Amazon SNS to write logs about SMS deliveries in CloudWatch Logs.
     * 
     */
    @PolicyResourceProperty(name="deliveryStatusIamRoleArn", flag="unknown_deliveryStatusIamRoleArn")
    private String value_deliveryStatusIamRoleArn;
    private boolean unknown_deliveryStatusIamRoleArn;
    public String deliveryStatusIamRoleArn() {
        if (!unknown_deliveryStatusIamRoleArn) return value_deliveryStatusIamRoleArn;
        throw new UndeferrableValueException("Value 'SmsPreferencesArgs.deliveryStatusIamRoleArn' is not present");
    }

    /**
     * The percentage of successful SMS deliveries for which Amazon SNS will write logs in CloudWatch Logs. The value must be between 0 and 100.
     * 
     */
    @PolicyResourceProperty(name="deliveryStatusSuccessSamplingRate", flag="unknown_deliveryStatusSuccessSamplingRate")
    private String value_deliveryStatusSuccessSamplingRate;
    private boolean unknown_deliveryStatusSuccessSamplingRate;
    public String deliveryStatusSuccessSamplingRate() {
        if (!unknown_deliveryStatusSuccessSamplingRate) return value_deliveryStatusSuccessSamplingRate;
        throw new UndeferrableValueException("Value 'SmsPreferencesArgs.deliveryStatusSuccessSamplingRate' is not present");
    }

    /**
     * The maximum amount in USD that you are willing to spend each month to send SMS messages.
     * 
     */
    @PolicyResourceProperty(name="monthlySpendLimit", flag="unknown_monthlySpendLimit")
    private Integer value_monthlySpendLimit;
    private boolean unknown_monthlySpendLimit;
    public Integer monthlySpendLimit() {
        if (!unknown_monthlySpendLimit) return value_monthlySpendLimit;
        throw new UndeferrableValueException("Value 'SmsPreferencesArgs.monthlySpendLimit' is not present");
    }

    /**
     * The name of the Amazon S3 bucket to receive daily SMS usage reports from Amazon SNS.
     * 
     */
    @PolicyResourceProperty(name="usageReportS3Bucket", flag="unknown_usageReportS3Bucket")
    private String value_usageReportS3Bucket;
    private boolean unknown_usageReportS3Bucket;
    public String usageReportS3Bucket() {
        if (!unknown_usageReportS3Bucket) return value_usageReportS3Bucket;
        throw new UndeferrableValueException("Value 'SmsPreferencesArgs.usageReportS3Bucket' is not present");
    }

}
