// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.lambda;

import com.pulumi.asset.Archive;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.lambda.FunctionDeadLetterConfig;
import com.pulumi.policypacks.aws.lambda.FunctionEnvironment;
import com.pulumi.policypacks.aws.lambda.FunctionEphemeralStorage;
import com.pulumi.policypacks.aws.lambda.FunctionFileSystemConfig;
import com.pulumi.policypacks.aws.lambda.FunctionImageConfig;
import com.pulumi.policypacks.aws.lambda.FunctionLoggingConfig;
import com.pulumi.policypacks.aws.lambda.FunctionSnapStart;
import com.pulumi.policypacks.aws.lambda.FunctionTracingConfig;
import com.pulumi.policypacks.aws.lambda.FunctionVpcConfig;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;


@PolicyResourceType(type="aws:lambda/function:Function")
public final class Function extends com.pulumi.resources.PolicyResource {

    /**
     * Instruction set architecture for your Lambda function. Valid values are `[&#34;x86_64&#34;]` and `[&#34;arm64&#34;]`. Default is `[&#34;x86_64&#34;]`. Removing this attribute, function&#39;s architecture stay the same.
     * 
     */
    public List<String> architectures;



    /**
     * Amazon Resource Name (ARN) identifying your Lambda Function.
     * 
     */
    public String arn;



    /**
     * Path to the function&#39;s deployment package within the local filesystem. Exactly one of `filename`, `image_uri`, or `s3_bucket` must be specified.
     * 
     */
    public Archive code;



    /**
     * Base64-encoded representation of raw SHA-256 sum of the zip file.
     * 
     */
    public String codeSha256;



    /**
     * To enable code signing for this function, specify the ARN of a code-signing configuration. A code-signing configuration includes a set of signing profiles, which define the trusted publishers for this function.
     * 
     */
    public String codeSigningConfigArn;



    /**
     * Configuration block. Detailed below.
     * 
     */
    public FunctionDeadLetterConfig deadLetterConfig;



    /**
     * Description of what your Lambda Function does.
     * 
     */
    public String description;



    /**
     * Configuration block. Detailed below.
     * 
     */
    public FunctionEnvironment environment;



    /**
     * The amount of Ephemeral storage(`/tmp`) to allocate for the Lambda Function in MB. This parameter is used to expand the total amount of Ephemeral storage available, beyond the default amount of `512`MB. Detailed below.
     * 
     */
    public FunctionEphemeralStorage ephemeralStorage;



    /**
     * Configuration block. Detailed below.
     * 
     */
    public FunctionFileSystemConfig fileSystemConfig;



    /**
     * Function [entrypoint](https://docs.aws.amazon.com/lambda/latest/dg/walkthrough-custom-events-create-test-function.html) in your code.
     * 
     */
    public String handler;



    /**
     * Configuration block. Detailed below.
     * 
     */
    public FunctionImageConfig imageConfig;



    /**
     * ECR image URI containing the function&#39;s deployment package. Exactly one of `filename`, `image_uri`,  or `s3_bucket` must be specified.
     * 
     */
    public String imageUri;



    /**
     * ARN to be used for invoking Lambda Function from API Gateway - to be used in `aws.apigateway.Integration`&#39;s `uri`.
     * 
     */
    public String invokeArn;



    /**
     * Amazon Resource Name (ARN) of the AWS Key Management Service (KMS) key that is used to encrypt environment variables. If this configuration is not provided when environment variables are in use, AWS Lambda uses a default service key. If this configuration is provided when environment variables are not in use, the AWS Lambda API does not save this configuration and the provider will show a perpetual difference of adding the key. To fix the perpetual difference, remove this configuration.
     * 
     */
    public String kmsKeyArn;



    /**
     * Date this resource was last modified.
     * 
     */
    public String lastModified;



    /**
     * List of Lambda Layer Version ARNs (maximum of 5) to attach to your Lambda Function. See [Lambda Layers](https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html)
     * 
     */
    public List<String> layers;



    /**
     * Configuration block used to specify advanced logging settings. Detailed below.
     * 
     */
    public FunctionLoggingConfig loggingConfig;



    /**
     * Amount of memory in MB your Lambda Function can use at runtime. Defaults to `128`. See [Limits](https://docs.aws.amazon.com/lambda/latest/dg/limits.html)
     * 
     */
    public Integer memorySize;



    /**
     * Unique name for your Lambda Function.
     * 
     */
    public String name;



    /**
     * Lambda deployment package type. Valid values are `Zip` and `Image`. Defaults to `Zip`.
     * 
     */
    public String packageType;



    /**
     * Whether to publish creation/change as new Lambda Function Version. Defaults to `false`.
     * 
     */
    public Boolean publish;



    /**
     * ARN identifying your Lambda Function Version (if versioning is enabled via `publish = true`).
     * 
     */
    public String qualifiedArn;



    /**
     * Qualified ARN (ARN with lambda version number) to be used for invoking Lambda Function from API Gateway - to be used in `aws.apigateway.Integration`&#39;s `uri`.
     * 
     */
    public String qualifiedInvokeArn;



    /**
     * Whether to replace the security groups on the function&#39;s VPC configuration prior to destruction.
     * Removing these security group associations prior to function destruction can speed up security group deletion times of AWS&#39;s internal cleanup operations.
     * By default, the security groups will be replaced with the `default` security group in the function&#39;s configured VPC.
     * Set the `replacement_security_group_ids` attribute to use a custom list of security groups for replacement.
     * 
     */
    public Boolean replaceSecurityGroupsOnDestroy;



    /**
     * List of security group IDs to assign to the function&#39;s VPC configuration prior to destruction.
     * `replace_security_groups_on_destroy` must be set to `true` to use this attribute.
     * 
     */
    public List<String> replacementSecurityGroupIds;



    /**
     * Amount of reserved concurrent executions for this lambda function. A value of `0` disables lambda from being triggered and `-1` removes any concurrency limitations. Defaults to Unreserved Concurrency Limits `-1`. See [Managing Concurrency](https://docs.aws.amazon.com/lambda/latest/dg/concurrent-executions.html)
     * 
     */
    public Integer reservedConcurrentExecutions;



    /**
     * Amazon Resource Name (ARN) of the function&#39;s execution role. The role provides the function&#39;s identity and access to AWS services and resources.
     * 
     * The following arguments are optional:
     * 
     */
    public String role;



    /**
     * Identifier of the function&#39;s runtime. See [Runtimes](https://docs.aws.amazon.com/lambda/latest/dg/API_CreateFunction.html#SSS-CreateFunction-request-Runtime) for valid values.
     * 
     */
    public String runtime;



    /**
     * S3 bucket location containing the function&#39;s deployment package. This bucket must reside in the same AWS region where you are creating the Lambda function. Exactly one of `filename`, `image_uri`, or `s3_bucket` must be specified. When `s3_bucket` is set, `s3_key` is required.
     * 
     */
    public String s3Bucket;



    /**
     * S3 key of an object containing the function&#39;s deployment package. When `s3_bucket` is set, `s3_key` is required.
     * 
     */
    public String s3Key;



    /**
     * Object version containing the function&#39;s deployment package. Conflicts with `filename` and `image_uri`.
     * 
     */
    public String s3ObjectVersion;



    /**
     * ARN of the signing job.
     * 
     */
    public String signingJobArn;



    /**
     * ARN of the signing profile version.
     * 
     */
    public String signingProfileVersionArn;



    /**
     * Set to true if you do not wish the function to be deleted at destroy time, and instead just remove the function from the Pulumi state.
     * 
     */
    public Boolean skipDestroy;



    /**
     * Snap start settings block. Detailed below.
     * 
     */
    public FunctionSnapStart snapStart;



    /**
     * Virtual attribute used to trigger replacement when source code changes. Must be set to a base64-encoded SHA256 hash of the package file specified with either `filename` or `s3_key`.
     * 
     */
    public String sourceCodeHash;



    /**
     * Size in bytes of the function .zip file.
     * 
     */
    public Integer sourceCodeSize;



    /**
     * Map of tags to assign to the object. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



    /**
     * Amount of time your Lambda Function has to run in seconds. Defaults to `3`. See [Limits](https://docs.aws.amazon.com/lambda/latest/dg/limits.html).
     * 
     */
    public Integer timeout;



    /**
     * Configuration block. Detailed below.
     * 
     */
    public FunctionTracingConfig tracingConfig;



    /**
     * Latest published version of your Lambda Function.
     * 
     */
    public String version;



    /**
     * Configuration block. Detailed below.
     * 
     */
    public FunctionVpcConfig vpcConfig;



}
