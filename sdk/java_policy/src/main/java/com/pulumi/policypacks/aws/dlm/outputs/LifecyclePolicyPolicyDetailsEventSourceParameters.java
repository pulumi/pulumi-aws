// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.dlm.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.String;
import java.util.List;


public final class LifecyclePolicyPolicyDetailsEventSourceParameters {

    /**
     * The snapshot description that can trigger the policy. The description pattern is specified using a regular expression. The policy runs only if a snapshot with a description that matches the specified pattern is shared with your account.
     * 
     */
    @PolicyResourceProperty(name="descriptionRegex", flag="unknown_descriptionRegex")
    private String value_descriptionRegex;
    private boolean unknown_descriptionRegex;
    public String descriptionRegex() {
        if (!unknown_descriptionRegex) return value_descriptionRegex;
        throw new UndeferrableValueException("Value 'LifecyclePolicyPolicyDetailsEventSourceParameters.descriptionRegex' is not present");
    }

    /**
     * The type of event. Currently, only `shareSnapshot` events are supported.
     * 
     */
    @PolicyResourceProperty(name="eventType", flag="unknown_eventType")
    private String value_eventType;
    private boolean unknown_eventType;
    public String eventType() {
        if (!unknown_eventType) return value_eventType;
        throw new UndeferrableValueException("Value 'LifecyclePolicyPolicyDetailsEventSourceParameters.eventType' is not present");
    }

    /**
     * The IDs of the AWS accounts that can trigger policy by sharing snapshots with your account. The policy only runs if one of the specified AWS accounts shares a snapshot with your account.
     * 
     */
    @PolicyResourceProperty(name="snapshotOwners", flag="unknown_snapshotOwners")
    private List<String> value_snapshotOwners;
    private boolean unknown_snapshotOwners;
    public List<String> snapshotOwners() {
        if (!unknown_snapshotOwners) return value_snapshotOwners;
        throw new UndeferrableValueException("Value 'LifecyclePolicyPolicyDetailsEventSourceParameters.snapshotOwners' is not present");
    }

}
