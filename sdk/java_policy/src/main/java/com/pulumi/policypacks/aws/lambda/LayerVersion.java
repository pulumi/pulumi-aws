// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.lambda;

import com.pulumi.asset.Archive;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;


@PolicyResourceType(type="aws:lambda/layerVersion:LayerVersion")
public final class LayerVersion extends com.pulumi.resources.PolicyResource {

    /**
     * ARN of the Lambda Layer with version.
     * 
     */
    public String arn;



    /**
     * Path to the function&#39;s deployment package within the local filesystem. If defined, The `s3_`-prefixed options cannot be used.
     * 
     */
    public Archive code;



    /**
     * Base64-encoded representation of raw SHA-256 sum of the zip file.
     * 
     */
    public String codeSha256;



    /**
     * List of [Architectures](https://docs.aws.amazon.com/lambda/latest/dg/API_PublishLayerVersion.html#SSS-PublishLayerVersion-request-CompatibleArchitectures) this layer is compatible with. Currently `x86_64` and `arm64` can be specified.
     * 
     */
    public List<String> compatibleArchitectures;



    /**
     * List of [Runtimes](https://docs.aws.amazon.com/lambda/latest/dg/API_PublishLayerVersion.html#SSS-PublishLayerVersion-request-CompatibleRuntimes) this layer is compatible with. Up to 15 runtimes can be specified.
     * 
     */
    public List<String> compatibleRuntimes;



    /**
     * Date this resource was created.
     * 
     */
    public String createdDate;



    /**
     * Description of what your Lambda Layer does.
     * 
     */
    public String description;



    /**
     * ARN of the Lambda Layer without version.
     * 
     */
    public String layerArn;



    /**
     * Unique name for your Lambda Layer
     * 
     * The following arguments are optional:
     * 
     */
    public String layerName;



    /**
     * License info for your Lambda Layer. See [License Info](https://docs.aws.amazon.com/lambda/latest/dg/API_PublishLayerVersion.html#SSS-PublishLayerVersion-request-LicenseInfo).
     * 
     */
    public String licenseInfo;



    /**
     * S3 bucket location containing the function&#39;s deployment package. Conflicts with `filename`. This bucket must reside in the same AWS region where you are creating the Lambda function.
     * 
     */
    public String s3Bucket;



    /**
     * S3 key of an object containing the function&#39;s deployment package. Conflicts with `filename`.
     * 
     */
    public String s3Key;



    /**
     * Object version containing the function&#39;s deployment package. Conflicts with `filename`.
     * 
     */
    public String s3ObjectVersion;



    /**
     * ARN of a signing job.
     * 
     */
    public String signingJobArn;



    /**
     * ARN for a signing profile version.
     * 
     */
    public String signingProfileVersionArn;



    /**
     * Whether to retain the old version of a previously deployed Lambda Layer. Default is `false`. When this is not set to `true`, changing any of `compatible_architectures`, `compatible_runtimes`, `description`, `filename`, `layer_name`, `license_info`, `s3_bucket`, `s3_key`, `s3_object_version`, or `source_code_hash` forces deletion of the existing layer version and creation of a new layer version.
     * 
     */
    public Boolean skipDestroy;



    /**
     * Virtual attribute used to trigger replacement when source code changes. Must be set to a base64-encoded SHA256 hash of the package file specified with either `filename` or `s3_key`.
     * 
     */
    public String sourceCodeHash;



    /**
     * Size in bytes of the function .zip file.
     * 
     */
    public Integer sourceCodeSize;



    /**
     * Lambda Layer version.
     * 
     */
    public String version;



}
