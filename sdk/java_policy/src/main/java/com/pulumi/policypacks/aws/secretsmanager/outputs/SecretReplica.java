// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.secretsmanager.outputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.String;
import javax.annotation.Nullable;


public final class SecretReplica {

    /**
     * ARN, Key ID, or Alias of the AWS KMS key within the region secret is replicated to. If one is not specified, then Secrets Manager defaults to using the AWS account&#39;s default KMS key (`aws/secretsmanager`) in the region or creates one for use if non-existent.
     * 
     */
    private @Nullable UndeferrableValue<String> kmsKeyId;

    public @Nullable String kmsKeyId() {
        if (kmsKeyId == null) return null;
        return kmsKeyId.getValue("SecretReplica.kmsKeyId");
    }

    /**
     * Date that you last accessed the secret in the Region.
     * 
     */
    private @Nullable UndeferrableValue<String> lastAccessedDate;

    public @Nullable String lastAccessedDate() {
        if (lastAccessedDate == null) return null;
        return lastAccessedDate.getValue("SecretReplica.lastAccessedDate");
    }

    /**
     * Region for replicating the secret.
     * 
     */
    private UndeferrableValue<String> region;

    public String region() {
        if (region == null) return null;
        return region.getValue("SecretReplica.region");
    }

    /**
     * Status can be `InProgress`, `Failed`, or `InSync`.
     * 
     */
    private @Nullable UndeferrableValue<String> status;

    public @Nullable String status() {
        if (status == null) return null;
        return status.getValue("SecretReplica.status");
    }

    /**
     * Message such as `Replication succeeded` or `Secret with this name already exists in this region`.
     * 
     */
    private @Nullable UndeferrableValue<String> statusMessage;

    public @Nullable String statusMessage() {
        if (statusMessage == null) return null;
        return statusMessage.getValue("SecretReplica.statusMessage");
    }

}
