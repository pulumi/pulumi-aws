// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.inspector2;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;


@PolicyResourceType(type="aws:inspector2/memberAssociation:MemberAssociation")
public final class MemberAssociation extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * ID of the account to associate
     * 
     */
    @PolicyResourceProperty(name="accountId", flag="unknown_accountId")
    private String value_accountId;
    private boolean unknown_accountId;
    public String accountId() {
        if (!unknown_accountId) return value_accountId;
        throw new UndeferrableValueException("Value 'MemberAssociation.accountId' is not present");
    }

    /**
     * Account ID of the delegated administrator account
     * 
     */
    @PolicyResourceProperty(name="delegatedAdminAccountId", flag="unknown_delegatedAdminAccountId")
    private String value_delegatedAdminAccountId;
    private boolean unknown_delegatedAdminAccountId;
    public String delegatedAdminAccountId() {
        if (!unknown_delegatedAdminAccountId) return value_delegatedAdminAccountId;
        throw new UndeferrableValueException("Value 'MemberAssociation.delegatedAdminAccountId' is not present");
    }

    /**
     * Status of the member relationship
     * 
     */
    @PolicyResourceProperty(name="relationshipStatus", flag="unknown_relationshipStatus")
    private String value_relationshipStatus;
    private boolean unknown_relationshipStatus;
    public String relationshipStatus() {
        if (!unknown_relationshipStatus) return value_relationshipStatus;
        throw new UndeferrableValueException("Value 'MemberAssociation.relationshipStatus' is not present");
    }

    /**
     * Date and time of the last update of the relationship
     * 
     */
    @PolicyResourceProperty(name="updatedAt", flag="unknown_updatedAt")
    private String value_updatedAt;
    private boolean unknown_updatedAt;
    public String updatedAt() {
        if (!unknown_updatedAt) return value_updatedAt;
        throw new UndeferrableValueException("Value 'MemberAssociation.updatedAt' is not present");
    }

}
