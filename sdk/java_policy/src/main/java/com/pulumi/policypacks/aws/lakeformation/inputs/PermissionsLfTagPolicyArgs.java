// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.lakeformation.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.lakeformation.inputs.PermissionsLfTagPolicyExpressionArgs;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class PermissionsLfTagPolicyArgs {

    /**
     * Identifier for the Data Catalog. By default, it is the account ID of the caller.
     * 
     */
    @PolicyResourceProperty(name="catalogId", flag="unknown_catalogId")
    private String value_catalogId;
    private boolean unknown_catalogId;
    public String catalogId() {
        if (!unknown_catalogId) return value_catalogId;
        throw new UndeferrableValueException("Value 'PermissionsLfTagPolicyArgs.catalogId' is not present");
    }

    /**
     * A list of tag conditions that apply to the resource&#39;s tag policy. Configuration block for tag conditions that apply to the policy. See `expression` below.
     * 
     * The following argument is optional:
     * 
     */
    @PolicyResourceProperty(name="expressions", flag="unknown_expressions")
    private List<PermissionsLfTagPolicyExpressionArgs> value_expressions;
    private boolean unknown_expressions;
    public List<PermissionsLfTagPolicyExpressionArgs> expressions() {
        if (!unknown_expressions) return value_expressions;
        throw new UndeferrableValueException("Value 'PermissionsLfTagPolicyArgs.expressions' is not present");
    }

    /**
     * The resource type for which the tag policy applies. Valid values are `DATABASE` and `TABLE`.
     * 
     */
    @PolicyResourceProperty(name="resourceType", flag="unknown_resourceType")
    private String value_resourceType;
    private boolean unknown_resourceType;
    public String resourceType() {
        if (!unknown_resourceType) return value_resourceType;
        throw new UndeferrableValueException("Value 'PermissionsLfTagPolicyArgs.resourceType' is not present");
    }

}
