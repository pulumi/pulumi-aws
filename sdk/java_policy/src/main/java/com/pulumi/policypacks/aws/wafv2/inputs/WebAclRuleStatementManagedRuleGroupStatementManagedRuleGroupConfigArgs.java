// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.wafv2.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.wafv2.inputs.WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAcfpRuleSetArgs;
import com.pulumi.policypacks.aws.wafv2.inputs.WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetArgs;
import com.pulumi.policypacks.aws.wafv2.inputs.WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesBotControlRuleSetArgs;
import com.pulumi.policypacks.aws.wafv2.inputs.WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigPasswordFieldArgs;
import com.pulumi.policypacks.aws.wafv2.inputs.WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigUsernameFieldArgs;
import java.lang.String;
import javax.annotation.Nullable;


public final class WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigArgs {

    /**
     * Additional configuration for using the Account Creation Fraud Prevention managed rule group. Use this to specify information such as the registration page of your application and the type of content to accept or reject from the client.
     * 
     */
    @PolicyResourceProperty(name="awsManagedRulesAcfpRuleSet", flag="unknown_awsManagedRulesAcfpRuleSet")
    private WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAcfpRuleSetArgs value_awsManagedRulesAcfpRuleSet;
    private boolean unknown_awsManagedRulesAcfpRuleSet;
    public WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAcfpRuleSetArgs awsManagedRulesAcfpRuleSet() {
        if (!unknown_awsManagedRulesAcfpRuleSet) return value_awsManagedRulesAcfpRuleSet;
        throw new UndeferrableValueException("Value 'WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigArgs.awsManagedRulesAcfpRuleSet' is not present");
    }

    /**
     * Additional configuration for using the Account Takeover Protection managed rule group. Use this to specify information such as the sign-in page of your application and the type of content to accept or reject from the client.
     * 
     */
    @PolicyResourceProperty(name="awsManagedRulesAtpRuleSet", flag="unknown_awsManagedRulesAtpRuleSet")
    private WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetArgs value_awsManagedRulesAtpRuleSet;
    private boolean unknown_awsManagedRulesAtpRuleSet;
    public WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesAtpRuleSetArgs awsManagedRulesAtpRuleSet() {
        if (!unknown_awsManagedRulesAtpRuleSet) return value_awsManagedRulesAtpRuleSet;
        throw new UndeferrableValueException("Value 'WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigArgs.awsManagedRulesAtpRuleSet' is not present");
    }

    /**
     * Additional configuration for using the Bot Control managed rule group. Use this to specify the inspection level that you want to use. See `aws_managed_rules_bot_control_rule_set` for more details
     * 
     */
    @PolicyResourceProperty(name="awsManagedRulesBotControlRuleSet", flag="unknown_awsManagedRulesBotControlRuleSet")
    private WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesBotControlRuleSetArgs value_awsManagedRulesBotControlRuleSet;
    private boolean unknown_awsManagedRulesBotControlRuleSet;
    public WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigAwsManagedRulesBotControlRuleSetArgs awsManagedRulesBotControlRuleSet() {
        if (!unknown_awsManagedRulesBotControlRuleSet) return value_awsManagedRulesBotControlRuleSet;
        throw new UndeferrableValueException("Value 'WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigArgs.awsManagedRulesBotControlRuleSet' is not present");
    }

    /**
     * The path of the login endpoint for your application.
     * 
     */
    @PolicyResourceProperty(name="loginPath", flag="unknown_loginPath")
    private String value_loginPath;
    private boolean unknown_loginPath;
    public String loginPath() {
        if (!unknown_loginPath) return value_loginPath;
        throw new UndeferrableValueException("Value 'WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigArgs.loginPath' is not present");
    }

    /**
     * Details about your login page password field. See `password_field` for more details.
     * 
     */
    @PolicyResourceProperty(name="passwordField", flag="unknown_passwordField")
    private WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigPasswordFieldArgs value_passwordField;
    private boolean unknown_passwordField;
    public WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigPasswordFieldArgs passwordField() {
        if (!unknown_passwordField) return value_passwordField;
        throw new UndeferrableValueException("Value 'WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigArgs.passwordField' is not present");
    }

    /**
     * The payload type for your login endpoint, either JSON or form encoded.
     * 
     */
    @PolicyResourceProperty(name="payloadType", flag="unknown_payloadType")
    private String value_payloadType;
    private boolean unknown_payloadType;
    public String payloadType() {
        if (!unknown_payloadType) return value_payloadType;
        throw new UndeferrableValueException("Value 'WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigArgs.payloadType' is not present");
    }

    /**
     * Details about your login page username field. See `username_field` for more details.
     * 
     */
    @PolicyResourceProperty(name="usernameField", flag="unknown_usernameField")
    private WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigUsernameFieldArgs value_usernameField;
    private boolean unknown_usernameField;
    public WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigUsernameFieldArgs usernameField() {
        if (!unknown_usernameField) return value_usernameField;
        throw new UndeferrableValueException("Value 'WebAclRuleStatementManagedRuleGroupStatementManagedRuleGroupConfigArgs.usernameField' is not present");
    }

}
