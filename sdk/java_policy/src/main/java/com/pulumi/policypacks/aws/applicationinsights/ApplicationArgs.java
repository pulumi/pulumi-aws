// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.applicationinsights;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:applicationinsights/application:Application")
public final class ApplicationArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Indicates whether Application Insights automatically configures unmonitored resources in the resource group.
     * 
     */
    private UndeferrableValue<Boolean> autoConfigEnabled;

    public Boolean autoConfigEnabled() {
        if (autoConfigEnabled == null) return null;
        return autoConfigEnabled.getValue("ApplicationArgs.autoConfigEnabled");
    }

    /**
     * Configures all of the resources in the resource group by applying the recommended configurations.
     * 
     */
    private UndeferrableValue<Boolean> autoCreate;

    public Boolean autoCreate() {
        if (autoCreate == null) return null;
        return autoCreate.getValue("ApplicationArgs.autoCreate");
    }

    /**
     * Indicates whether Application Insights can listen to CloudWatch events for the application resources, such as instance terminated, failed deployment, and others.
     * 
     */
    private UndeferrableValue<Boolean> cweMonitorEnabled;

    public Boolean cweMonitorEnabled() {
        if (cweMonitorEnabled == null) return null;
        return cweMonitorEnabled.getValue("ApplicationArgs.cweMonitorEnabled");
    }

    /**
     * Application Insights can create applications based on a resource group or on an account. To create an account-based application using all of the resources in the account, set this parameter to `ACCOUNT_BASED`.
     * 
     */
    private UndeferrableValue<String> groupingType;

    public String groupingType() {
        if (groupingType == null) return null;
        return groupingType.getValue("ApplicationArgs.groupingType");
    }

    /**
     * When set to `true`, creates opsItems for any problems detected on an application.
     * 
     */
    private UndeferrableValue<Boolean> opsCenterEnabled;

    public Boolean opsCenterEnabled() {
        if (opsCenterEnabled == null) return null;
        return opsCenterEnabled.getValue("ApplicationArgs.opsCenterEnabled");
    }

    /**
     * SNS topic provided to Application Insights that is associated to the created opsItem. Allows you to receive notifications for updates to the opsItem.
     * 
     */
    private UndeferrableValue<String> opsItemSnsTopicArn;

    public String opsItemSnsTopicArn() {
        if (opsItemSnsTopicArn == null) return null;
        return opsItemSnsTopicArn.getValue("ApplicationArgs.opsItemSnsTopicArn");
    }

    /**
     * Name of the resource group.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> resourceGroupName;

    public String resourceGroupName() {
        if (resourceGroupName == null) return null;
        return resourceGroupName.getValue("ApplicationArgs.resourceGroupName");
    }

    /**
     * Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("ApplicationArgs.tags");
    }

}
