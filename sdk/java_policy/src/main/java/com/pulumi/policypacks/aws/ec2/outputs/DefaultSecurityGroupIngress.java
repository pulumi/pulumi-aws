// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class DefaultSecurityGroupIngress {

    /**
     * List of CIDR blocks.
     * 
     */
    @PolicyResourceProperty(name="cidrBlocks", flag="unknown_cidrBlocks")
    private @Nullable List<String> value_cidrBlocks;
    private boolean unknown_cidrBlocks;
    public @Nullable List<String> cidrBlocks() {
        if (!unknown_cidrBlocks) return value_cidrBlocks;
        throw new UndeferrableValueException("Value 'DefaultSecurityGroupIngress.cidrBlocks' is not present");
    }

    /**
     * Description of the security group.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private @Nullable String value_description;
    private boolean unknown_description;
    public @Nullable String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'DefaultSecurityGroupIngress.description' is not present");
    }

    /**
     * Start port (or ICMP type number if protocol is `icmp`)
     * 
     */
    @PolicyResourceProperty(name="fromPort", flag="unknown_fromPort")
    private Integer value_fromPort;
    private boolean unknown_fromPort;
    public Integer fromPort() {
        if (!unknown_fromPort) return value_fromPort;
        throw new UndeferrableValueException("Value 'DefaultSecurityGroupIngress.fromPort' is not present");
    }

    /**
     * List of IPv6 CIDR blocks.
     * 
     */
    @PolicyResourceProperty(name="ipv6CidrBlocks", flag="unknown_ipv6CidrBlocks")
    private @Nullable List<String> value_ipv6CidrBlocks;
    private boolean unknown_ipv6CidrBlocks;
    public @Nullable List<String> ipv6CidrBlocks() {
        if (!unknown_ipv6CidrBlocks) return value_ipv6CidrBlocks;
        throw new UndeferrableValueException("Value 'DefaultSecurityGroupIngress.ipv6CidrBlocks' is not present");
    }

    /**
     * List of prefix list IDs (for allowing access to VPC endpoints)
     * 
     */
    @PolicyResourceProperty(name="prefixListIds", flag="unknown_prefixListIds")
    private @Nullable List<String> value_prefixListIds;
    private boolean unknown_prefixListIds;
    public @Nullable List<String> prefixListIds() {
        if (!unknown_prefixListIds) return value_prefixListIds;
        throw new UndeferrableValueException("Value 'DefaultSecurityGroupIngress.prefixListIds' is not present");
    }

    /**
     * Protocol. If you select a protocol of &#34;-1&#34; (semantically equivalent to `all`, which is not a valid value here), you must specify a `from_port` and `to_port` equal to `0`. If not `icmp`, `tcp`, `udp`, or `-1` use the [protocol number](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
     * 
     */
    @PolicyResourceProperty(name="protocol", flag="unknown_protocol")
    private String value_protocol;
    private boolean unknown_protocol;
    public String protocol() {
        if (!unknown_protocol) return value_protocol;
        throw new UndeferrableValueException("Value 'DefaultSecurityGroupIngress.protocol' is not present");
    }

    /**
     * List of security groups. A group name can be used relative to the default VPC. Otherwise, group ID.
     * 
     */
    @PolicyResourceProperty(name="securityGroups", flag="unknown_securityGroups")
    private @Nullable List<String> value_securityGroups;
    private boolean unknown_securityGroups;
    public @Nullable List<String> securityGroups() {
        if (!unknown_securityGroups) return value_securityGroups;
        throw new UndeferrableValueException("Value 'DefaultSecurityGroupIngress.securityGroups' is not present");
    }

    /**
     * Whether the security group itself will be added as a source to this egress rule.
     * 
     */
    @PolicyResourceProperty(name="self", flag="unknown_self")
    private @Nullable Boolean value_self;
    private boolean unknown_self;
    public @Nullable Boolean self() {
        if (!unknown_self) return value_self;
        throw new UndeferrableValueException("Value 'DefaultSecurityGroupIngress.self' is not present");
    }

    /**
     * End range port (or ICMP code if protocol is `icmp`).
     * 
     */
    @PolicyResourceProperty(name="toPort", flag="unknown_toPort")
    private Integer value_toPort;
    private boolean unknown_toPort;
    public Integer toPort() {
        if (!unknown_toPort) return value_toPort;
        throw new UndeferrableValueException("Value 'DefaultSecurityGroupIngress.toPort' is not present");
    }

}
