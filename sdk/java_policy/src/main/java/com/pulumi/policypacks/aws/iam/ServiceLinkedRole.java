// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.iam;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:iam/serviceLinkedRole:ServiceLinkedRole")
public final class ServiceLinkedRole extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The Amazon Resource Name (ARN) specifying the role.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'ServiceLinkedRole.arn' is not present");
    }

    /**
     * The AWS service to which this role is attached. You use a string similar to a URL but without the `http://` in front. For example: `elasticbeanstalk.amazonaws.com`. To find the full list of services that support service-linked roles, check [the docs](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-services-that-work-with-iam.html).
     * 
     */
    @PolicyResourceProperty(name="awsServiceName", flag="unknown_awsServiceName")
    private String value_awsServiceName;
    private boolean unknown_awsServiceName;
    public String awsServiceName() {
        if (!unknown_awsServiceName) return value_awsServiceName;
        throw new UndeferrableValueException("Value 'ServiceLinkedRole.awsServiceName' is not present");
    }

    /**
     * The creation date of the IAM role.
     * 
     */
    @PolicyResourceProperty(name="createDate", flag="unknown_createDate")
    private String value_createDate;
    private boolean unknown_createDate;
    public String createDate() {
        if (!unknown_createDate) return value_createDate;
        throw new UndeferrableValueException("Value 'ServiceLinkedRole.createDate' is not present");
    }

    /**
     * Additional string appended to the role name. Not all AWS services support custom suffixes.
     * 
     */
    @PolicyResourceProperty(name="customSuffix", flag="unknown_customSuffix")
    private @Nullable String value_customSuffix;
    private boolean unknown_customSuffix;
    public @Nullable String customSuffix() {
        if (!unknown_customSuffix) return value_customSuffix;
        throw new UndeferrableValueException("Value 'ServiceLinkedRole.customSuffix' is not present");
    }

    /**
     * The description of the role.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private @Nullable String value_description;
    private boolean unknown_description;
    public @Nullable String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'ServiceLinkedRole.description' is not present");
    }

    /**
     * The name of the role.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'ServiceLinkedRole.name' is not present");
    }

    /**
     * The path of the role.
     * 
     */
    @PolicyResourceProperty(name="path", flag="unknown_path")
    private String value_path;
    private boolean unknown_path;
    public String path() {
        if (!unknown_path) return value_path;
        throw new UndeferrableValueException("Value 'ServiceLinkedRole.path' is not present");
    }

    /**
     * Key-value mapping of tags for the IAM role. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'ServiceLinkedRole.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'ServiceLinkedRole.tagsAll' is not present");
    }

    /**
     * The stable and unique string identifying the role.
     * 
     */
    @PolicyResourceProperty(name="uniqueId", flag="unknown_uniqueId")
    private String value_uniqueId;
    private boolean unknown_uniqueId;
    public String uniqueId() {
        if (!unknown_uniqueId) return value_uniqueId;
        throw new UndeferrableValueException("Value 'ServiceLinkedRole.uniqueId' is not present");
    }

}
