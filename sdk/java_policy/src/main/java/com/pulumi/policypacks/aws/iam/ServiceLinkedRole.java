// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.iam;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:iam/serviceLinkedRole:ServiceLinkedRole")
public final class ServiceLinkedRole extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The Amazon Resource Name (ARN) specifying the role.
     * 
     */
    private UndeferrableValue<String> arn;

    public String arn() {
        if (arn == null) return null;
        return arn.getValue("ServiceLinkedRole.arn");
    }

    /**
     * The AWS service to which this role is attached. You use a string similar to a URL but without the `http://` in front. For example: `elasticbeanstalk.amazonaws.com`. To find the full list of services that support service-linked roles, check [the docs](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-services-that-work-with-iam.html).
     * 
     */
    private UndeferrableValue<String> awsServiceName;

    public String awsServiceName() {
        if (awsServiceName == null) return null;
        return awsServiceName.getValue("ServiceLinkedRole.awsServiceName");
    }

    /**
     * The creation date of the IAM role.
     * 
     */
    private UndeferrableValue<String> createDate;

    public String createDate() {
        if (createDate == null) return null;
        return createDate.getValue("ServiceLinkedRole.createDate");
    }

    /**
     * Additional string appended to the role name. Not all AWS services support custom suffixes.
     * 
     */
    private @Nullable UndeferrableValue<String> customSuffix;

    public @Nullable String customSuffix() {
        if (customSuffix == null) return null;
        return customSuffix.getValue("ServiceLinkedRole.customSuffix");
    }

    /**
     * The description of the role.
     * 
     */
    private @Nullable UndeferrableValue<String> description;

    public @Nullable String description() {
        if (description == null) return null;
        return description.getValue("ServiceLinkedRole.description");
    }

    /**
     * The name of the role.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("ServiceLinkedRole.name");
    }

    /**
     * The path of the role.
     * 
     */
    private UndeferrableValue<String> path;

    public String path() {
        if (path == null) return null;
        return path.getValue("ServiceLinkedRole.path");
    }

    /**
     * Key-value mapping of tags for the IAM role. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private @Nullable UndeferrableValue<Map<String,String>> tags;

    public @Nullable Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("ServiceLinkedRole.tags");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    private UndeferrableValue<Map<String,String>> tagsAll;

    public Map<String,String> tagsAll() {
        if (tagsAll == null) return null;
        return tagsAll.getValue("ServiceLinkedRole.tagsAll");
    }

    /**
     * The stable and unique string identifying the role.
     * 
     */
    private UndeferrableValue<String> uniqueId;

    public String uniqueId() {
        if (uniqueId == null) return null;
        return uniqueId.getValue("ServiceLinkedRole.uniqueId");
    }

}
