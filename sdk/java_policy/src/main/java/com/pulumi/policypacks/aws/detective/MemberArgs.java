// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.detective;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:detective/member:Member")
public final class MemberArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * AWS account ID for the account.
     * 
     */
    private UndeferrableValue<String> accountId;

    public String accountId() {
        if (accountId == null) return null;
        return accountId.getValue("MemberArgs.accountId");
    }

    /**
     * If set to true, then the root user of the invited account will _not_ receive an email notification. This notification is in addition to an alert that the root user receives in AWS Personal Health Dashboard. By default, this is set to `false`.
     * 
     */
    private UndeferrableValue<Boolean> disableEmailNotification;

    public Boolean disableEmailNotification() {
        if (disableEmailNotification == null) return null;
        return disableEmailNotification.getValue("MemberArgs.disableEmailNotification");
    }

    /**
     * Email address for the account.
     * 
     */
    private UndeferrableValue<String> emailAddress;

    public String emailAddress() {
        if (emailAddress == null) return null;
        return emailAddress.getValue("MemberArgs.emailAddress");
    }

    /**
     * ARN of the behavior graph to invite the member accounts to contribute their data to.
     * 
     */
    private UndeferrableValue<String> graphArn;

    public String graphArn() {
        if (graphArn == null) return null;
        return graphArn.getValue("MemberArgs.graphArn");
    }

    /**
     * A custom message to include in the invitation. Amazon Detective adds this message to the standard content that it sends for an invitation.
     * 
     */
    private UndeferrableValue<String> message;

    public String message() {
        if (message == null) return null;
        return message.getValue("MemberArgs.message");
    }

}
