// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.bedrock;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.bedrock.outputs.AgentAgentActionGroupActionGroupExecutor;
import com.pulumi.policypacks.aws.bedrock.outputs.AgentAgentActionGroupApiSchema;
import com.pulumi.policypacks.aws.bedrock.outputs.AgentAgentActionGroupFunctionSchema;
import com.pulumi.policypacks.aws.bedrock.outputs.AgentAgentActionGroupTimeouts;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:bedrock/agentAgentActionGroup:AgentAgentActionGroup")
public final class AgentAgentActionGroup extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * ARN of the Lambda function containing the business logic that is carried out upon invoking the action or custom control method for handling the information elicited from the user. See `action_group_executor` Block for details.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="actionGroupExecutor", flag="unknown_actionGroupExecutor")
    private @Nullable AgentAgentActionGroupActionGroupExecutor value_actionGroupExecutor;
    private boolean unknown_actionGroupExecutor;
    public @Nullable AgentAgentActionGroupActionGroupExecutor actionGroupExecutor() {
        if (!unknown_actionGroupExecutor) return value_actionGroupExecutor;
        throw new UndeferrableValueException("Value 'AgentAgentActionGroup.actionGroupExecutor' is not present");
    }

    /**
     * Unique identifier of the action group.
     * 
     */
    @PolicyResourceProperty(name="actionGroupId", flag="unknown_actionGroupId")
    private String value_actionGroupId;
    private boolean unknown_actionGroupId;
    public String actionGroupId() {
        if (!unknown_actionGroupId) return value_actionGroupId;
        throw new UndeferrableValueException("Value 'AgentAgentActionGroup.actionGroupId' is not present");
    }

    /**
     * Name of the action group.
     * 
     */
    @PolicyResourceProperty(name="actionGroupName", flag="unknown_actionGroupName")
    private String value_actionGroupName;
    private boolean unknown_actionGroupName;
    public String actionGroupName() {
        if (!unknown_actionGroupName) return value_actionGroupName;
        throw new UndeferrableValueException("Value 'AgentAgentActionGroup.actionGroupName' is not present");
    }

    /**
     * Whether the action group is available for the agent to invoke or not when sending an [InvokeAgent](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html) request. Valid values: `ENABLED`, `DISABLED`.
     * 
     */
    @PolicyResourceProperty(name="actionGroupState", flag="unknown_actionGroupState")
    private String value_actionGroupState;
    private boolean unknown_actionGroupState;
    public String actionGroupState() {
        if (!unknown_actionGroupState) return value_actionGroupState;
        throw new UndeferrableValueException("Value 'AgentAgentActionGroup.actionGroupState' is not present");
    }

    /**
     * The unique identifier of the agent for which to create the action group.
     * 
     */
    @PolicyResourceProperty(name="agentId", flag="unknown_agentId")
    private String value_agentId;
    private boolean unknown_agentId;
    public String agentId() {
        if (!unknown_agentId) return value_agentId;
        throw new UndeferrableValueException("Value 'AgentAgentActionGroup.agentId' is not present");
    }

    /**
     * Version of the agent for which to create the action group. Valid values: `DRAFT`.
     * 
     */
    @PolicyResourceProperty(name="agentVersion", flag="unknown_agentVersion")
    private String value_agentVersion;
    private boolean unknown_agentVersion;
    public String agentVersion() {
        if (!unknown_agentVersion) return value_agentVersion;
        throw new UndeferrableValueException("Value 'AgentAgentActionGroup.agentVersion' is not present");
    }

    /**
     * Either details about the S3 object containing the OpenAPI schema for the action group or the JSON or YAML-formatted payload defining the schema. For more information, see [Action group OpenAPI schemas](https://docs.aws.amazon.com/bedrock/latest/userguide/agents-api-schema.html). See `api_schema` Block for details.
     * 
     */
    @PolicyResourceProperty(name="apiSchema", flag="unknown_apiSchema")
    private @Nullable AgentAgentActionGroupApiSchema value_apiSchema;
    private boolean unknown_apiSchema;
    public @Nullable AgentAgentActionGroupApiSchema apiSchema() {
        if (!unknown_apiSchema) return value_apiSchema;
        throw new UndeferrableValueException("Value 'AgentAgentActionGroup.apiSchema' is not present");
    }

    /**
     * Description of the action group.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private @Nullable String value_description;
    private boolean unknown_description;
    public @Nullable String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'AgentAgentActionGroup.description' is not present");
    }

    /**
     * Describes the function schema for the action group.
     * Each function represents an action in an action group.
     * See `function_schema` Block for details.
     * 
     */
    @PolicyResourceProperty(name="functionSchema", flag="unknown_functionSchema")
    private @Nullable AgentAgentActionGroupFunctionSchema value_functionSchema;
    private boolean unknown_functionSchema;
    public @Nullable AgentAgentActionGroupFunctionSchema functionSchema() {
        if (!unknown_functionSchema) return value_functionSchema;
        throw new UndeferrableValueException("Value 'AgentAgentActionGroup.functionSchema' is not present");
    }

    /**
     * To allow your agent to request the user for additional information when trying to complete a task, set this argument to `AMAZON.UserInput`. You must leave the `description`, `api_schema`, and `action_group_executor` arguments blank for this action group. Valid values: `AMAZON.UserInput`.
     * 
     */
    @PolicyResourceProperty(name="parentActionGroupSignature", flag="unknown_parentActionGroupSignature")
    private @Nullable String value_parentActionGroupSignature;
    private boolean unknown_parentActionGroupSignature;
    public @Nullable String parentActionGroupSignature() {
        if (!unknown_parentActionGroupSignature) return value_parentActionGroupSignature;
        throw new UndeferrableValueException("Value 'AgentAgentActionGroup.parentActionGroupSignature' is not present");
    }

    /**
     * Whether or not to prepare the agent after creation or modification. Defaults to `true`.
     * 
     */
    @PolicyResourceProperty(name="prepareAgent", flag="unknown_prepareAgent")
    private Boolean value_prepareAgent;
    private boolean unknown_prepareAgent;
    public Boolean prepareAgent() {
        if (!unknown_prepareAgent) return value_prepareAgent;
        throw new UndeferrableValueException("Value 'AgentAgentActionGroup.prepareAgent' is not present");
    }

    /**
     * Whether the in-use check is skipped when deleting the action group.
     * 
     */
    @PolicyResourceProperty(name="skipResourceInUseCheck", flag="unknown_skipResourceInUseCheck")
    private Boolean value_skipResourceInUseCheck;
    private boolean unknown_skipResourceInUseCheck;
    public Boolean skipResourceInUseCheck() {
        if (!unknown_skipResourceInUseCheck) return value_skipResourceInUseCheck;
        throw new UndeferrableValueException("Value 'AgentAgentActionGroup.skipResourceInUseCheck' is not present");
    }

    @PolicyResourceProperty(name="timeouts", flag="unknown_timeouts")
    private @Nullable AgentAgentActionGroupTimeouts value_timeouts;
    private boolean unknown_timeouts;
    public @Nullable AgentAgentActionGroupTimeouts timeouts() {
        if (!unknown_timeouts) return value_timeouts;
        throw new UndeferrableValueException("Value 'AgentAgentActionGroup.timeouts' is not present");
    }

}
