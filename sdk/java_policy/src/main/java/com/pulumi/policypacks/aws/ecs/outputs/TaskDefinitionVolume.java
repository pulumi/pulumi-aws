// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ecs.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.ecs.outputs.TaskDefinitionVolumeDockerVolumeConfiguration;
import com.pulumi.policypacks.aws.ecs.outputs.TaskDefinitionVolumeEfsVolumeConfiguration;
import com.pulumi.policypacks.aws.ecs.outputs.TaskDefinitionVolumeFsxWindowsFileServerVolumeConfiguration;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;


public final class TaskDefinitionVolume {

    /**
     * Whether the volume should be configured at launch time. This is used to create Amazon EBS volumes for standalone tasks or tasks created as part of a service. Each task definition revision may only have one volume configured at launch in the volume configuration.
     * 
     */
    @PolicyResourceProperty(name="configureAtLaunch", flag="unknown_configureAtLaunch")
    private @Nullable Boolean value_configureAtLaunch;
    private boolean unknown_configureAtLaunch;
    public @Nullable Boolean configureAtLaunch() {
        if (!unknown_configureAtLaunch) return value_configureAtLaunch;
        throw new UndeferrableValueException("Value 'TaskDefinitionVolume.configureAtLaunch' is not present");
    }

    /**
     * Configuration block to configure a docker volume. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="dockerVolumeConfiguration", flag="unknown_dockerVolumeConfiguration")
    private @Nullable TaskDefinitionVolumeDockerVolumeConfiguration value_dockerVolumeConfiguration;
    private boolean unknown_dockerVolumeConfiguration;
    public @Nullable TaskDefinitionVolumeDockerVolumeConfiguration dockerVolumeConfiguration() {
        if (!unknown_dockerVolumeConfiguration) return value_dockerVolumeConfiguration;
        throw new UndeferrableValueException("Value 'TaskDefinitionVolume.dockerVolumeConfiguration' is not present");
    }

    /**
     * Configuration block for an EFS volume. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="efsVolumeConfiguration", flag="unknown_efsVolumeConfiguration")
    private @Nullable TaskDefinitionVolumeEfsVolumeConfiguration value_efsVolumeConfiguration;
    private boolean unknown_efsVolumeConfiguration;
    public @Nullable TaskDefinitionVolumeEfsVolumeConfiguration efsVolumeConfiguration() {
        if (!unknown_efsVolumeConfiguration) return value_efsVolumeConfiguration;
        throw new UndeferrableValueException("Value 'TaskDefinitionVolume.efsVolumeConfiguration' is not present");
    }

    /**
     * Configuration block for an FSX Windows File Server volume. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="fsxWindowsFileServerVolumeConfiguration", flag="unknown_fsxWindowsFileServerVolumeConfiguration")
    private @Nullable TaskDefinitionVolumeFsxWindowsFileServerVolumeConfiguration value_fsxWindowsFileServerVolumeConfiguration;
    private boolean unknown_fsxWindowsFileServerVolumeConfiguration;
    public @Nullable TaskDefinitionVolumeFsxWindowsFileServerVolumeConfiguration fsxWindowsFileServerVolumeConfiguration() {
        if (!unknown_fsxWindowsFileServerVolumeConfiguration) return value_fsxWindowsFileServerVolumeConfiguration;
        throw new UndeferrableValueException("Value 'TaskDefinitionVolume.fsxWindowsFileServerVolumeConfiguration' is not present");
    }

    /**
     * Path on the host container instance that is presented to the container. If not set, ECS will create a nonpersistent data volume that starts empty and is deleted after the task has finished.
     * 
     */
    @PolicyResourceProperty(name="hostPath", flag="unknown_hostPath")
    private @Nullable String value_hostPath;
    private boolean unknown_hostPath;
    public @Nullable String hostPath() {
        if (!unknown_hostPath) return value_hostPath;
        throw new UndeferrableValueException("Value 'TaskDefinitionVolume.hostPath' is not present");
    }

    /**
     * Name of the volume. This name is referenced in the `sourceVolume`
     * parameter of container definition in the `mountPoints` section.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'TaskDefinitionVolume.name' is not present");
    }

}
