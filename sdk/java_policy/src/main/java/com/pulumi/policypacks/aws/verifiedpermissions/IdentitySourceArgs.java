// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.verifiedpermissions;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.verifiedpermissions.inputs.IdentitySourceConfigurationArgs;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:verifiedpermissions/identitySource:IdentitySource")
public final class IdentitySourceArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Specifies the details required to communicate with the identity provider (IdP) associated with this identity source. See Configuration below.
     * 
     */
    @PolicyResourceProperty(name="configuration", flag="unknown_configuration")
    private IdentitySourceConfigurationArgs value_configuration;
    private boolean unknown_configuration;
    public IdentitySourceConfigurationArgs configuration() {
        if (!unknown_configuration) return value_configuration;
        throw new UndeferrableValueException("Value 'IdentitySourceArgs.configuration' is not present");
    }

    /**
     * Specifies the ID of the policy store in which you want to store this identity source.
     * 
     */
    @PolicyResourceProperty(name="policyStoreId", flag="unknown_policyStoreId")
    private String value_policyStoreId;
    private boolean unknown_policyStoreId;
    public String policyStoreId() {
        if (!unknown_policyStoreId) return value_policyStoreId;
        throw new UndeferrableValueException("Value 'IdentitySourceArgs.policyStoreId' is not present");
    }

    /**
     * Specifies the namespace and data type of the principals generated for identities authenticated by the new identity source.
     * 
     */
    @PolicyResourceProperty(name="principalEntityType", flag="unknown_principalEntityType")
    private String value_principalEntityType;
    private boolean unknown_principalEntityType;
    public String principalEntityType() {
        if (!unknown_principalEntityType) return value_principalEntityType;
        throw new UndeferrableValueException("Value 'IdentitySourceArgs.principalEntityType' is not present");
    }

}
