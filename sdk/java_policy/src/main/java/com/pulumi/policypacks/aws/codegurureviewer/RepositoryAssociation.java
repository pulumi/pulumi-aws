// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.codegurureviewer;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.codegurureviewer.outputs.RepositoryAssociationKmsKeyDetails;
import com.pulumi.policypacks.aws.codegurureviewer.outputs.RepositoryAssociationRepository;
import com.pulumi.policypacks.aws.codegurureviewer.outputs.RepositoryAssociationS3RepositoryDetail;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:codegurureviewer/repositoryAssociation:RepositoryAssociation")
public final class RepositoryAssociation extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The Amazon Resource Name (ARN) identifying the repository association.
     * 
     */
    private UndeferrableValue<String> arn;

    public String arn() {
        if (arn == null) return null;
        return arn.getValue("RepositoryAssociation.arn");
    }

    /**
     * The ID of the repository association.
     * 
     */
    private UndeferrableValue<String> associationId;

    public String associationId() {
        if (associationId == null) return null;
        return associationId.getValue("RepositoryAssociation.associationId");
    }

    /**
     * The Amazon Resource Name (ARN) of an AWS CodeStar Connections connection.
     * 
     */
    private UndeferrableValue<String> connectionArn;

    public String connectionArn() {
        if (connectionArn == null) return null;
        return connectionArn.getValue("RepositoryAssociation.connectionArn");
    }

    /**
     * An object describing the KMS key to asssociate. Block is documented below.
     * 
     */
    private @Nullable UndeferrableValue<RepositoryAssociationKmsKeyDetails> kmsKeyDetails;

    public @Nullable RepositoryAssociationKmsKeyDetails kmsKeyDetails() {
        if (kmsKeyDetails == null) return null;
        return kmsKeyDetails.getValue("RepositoryAssociation.kmsKeyDetails");
    }

    /**
     * The name of the repository.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("RepositoryAssociation.name");
    }

    /**
     * The owner of the repository.
     * 
     */
    private UndeferrableValue<String> owner;

    public String owner() {
        if (owner == null) return null;
        return owner.getValue("RepositoryAssociation.owner");
    }

    /**
     * The provider type of the repository association.
     * 
     */
    private UndeferrableValue<String> providerType;

    public String providerType() {
        if (providerType == null) return null;
        return providerType.getValue("RepositoryAssociation.providerType");
    }

    /**
     * An object describing the repository to associate. Valid values: `bitbucket`, `codecommit`, `github_enterprise_server`, or `s3_bucket`. Block is documented below. Note: for repositories that leverage CodeStar connections (ex. `bitbucket`, `github_enterprise_server`) the connection must be in `Available` status prior to creating this resource.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<RepositoryAssociationRepository> repository;

    public RepositoryAssociationRepository repository() {
        if (repository == null) return null;
        return repository.getValue("RepositoryAssociation.repository");
    }

    private UndeferrableValue<List<RepositoryAssociationS3RepositoryDetail>> s3RepositoryDetails;

    public List<RepositoryAssociationS3RepositoryDetail> s3RepositoryDetails() {
        if (s3RepositoryDetails == null) return null;
        return s3RepositoryDetails.getValue("RepositoryAssociation.s3RepositoryDetails");
    }

    /**
     * The state of the repository association.
     * 
     */
    private UndeferrableValue<String> state;

    public String state() {
        if (state == null) return null;
        return state.getValue("RepositoryAssociation.state");
    }

    /**
     * A description of why the repository association is in the current state.
     * 
     */
    private UndeferrableValue<String> stateReason;

    public String stateReason() {
        if (stateReason == null) return null;
        return stateReason.getValue("RepositoryAssociation.stateReason");
    }

    private @Nullable UndeferrableValue<Map<String,String>> tags;

    public @Nullable Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("RepositoryAssociation.tags");
    }

    /**
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    private UndeferrableValue<Map<String,String>> tagsAll;

    public Map<String,String> tagsAll() {
        if (tagsAll == null) return null;
        return tagsAll.getValue("RepositoryAssociation.tagsAll");
    }

}
