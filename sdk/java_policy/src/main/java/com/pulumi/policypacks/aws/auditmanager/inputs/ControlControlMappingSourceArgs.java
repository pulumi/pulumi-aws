// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.auditmanager.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.auditmanager.inputs.ControlControlMappingSourceSourceKeywordArgs;
import java.lang.String;
import javax.annotation.Nullable;


public final class ControlControlMappingSourceArgs {

    /**
     * Description of the source.
     * 
     */
    @PolicyResourceProperty(name="sourceDescription", flag="unknown_sourceDescription")
    private String value_sourceDescription;
    private boolean unknown_sourceDescription;
    public String sourceDescription() {
        if (!unknown_sourceDescription) return value_sourceDescription;
        throw new UndeferrableValueException("Value 'ControlControlMappingSourceArgs.sourceDescription' is not present");
    }

    /**
     * Frequency of evidence collection. Valid values are `DAILY`, `WEEKLY`, or `MONTHLY`.
     * 
     */
    @PolicyResourceProperty(name="sourceFrequency", flag="unknown_sourceFrequency")
    private String value_sourceFrequency;
    private boolean unknown_sourceFrequency;
    public String sourceFrequency() {
        if (!unknown_sourceFrequency) return value_sourceFrequency;
        throw new UndeferrableValueException("Value 'ControlControlMappingSourceArgs.sourceFrequency' is not present");
    }

    @PolicyResourceProperty(name="sourceId", flag="unknown_sourceId")
    private String value_sourceId;
    private boolean unknown_sourceId;
    public String sourceId() {
        if (!unknown_sourceId) return value_sourceId;
        throw new UndeferrableValueException("Value 'ControlControlMappingSourceArgs.sourceId' is not present");
    }

    /**
     * The keyword to search for in CloudTrail logs, Config rules, Security Hub checks, and Amazon Web Services API names. See `source_keyword` below.
     * 
     */
    @PolicyResourceProperty(name="sourceKeyword", flag="unknown_sourceKeyword")
    private ControlControlMappingSourceSourceKeywordArgs value_sourceKeyword;
    private boolean unknown_sourceKeyword;
    public ControlControlMappingSourceSourceKeywordArgs sourceKeyword() {
        if (!unknown_sourceKeyword) return value_sourceKeyword;
        throw new UndeferrableValueException("Value 'ControlControlMappingSourceArgs.sourceKeyword' is not present");
    }

    /**
     * Name of the source.
     * 
     */
    @PolicyResourceProperty(name="sourceName", flag="unknown_sourceName")
    private String value_sourceName;
    private boolean unknown_sourceName;
    public String sourceName() {
        if (!unknown_sourceName) return value_sourceName;
        throw new UndeferrableValueException("Value 'ControlControlMappingSourceArgs.sourceName' is not present");
    }

    /**
     * The setup option for the data source. This option reflects if the evidence collection is automated or manual. Valid values are `System_Controls_Mapping` (automated) and `Procedural_Controls_Mapping` (manual).
     * 
     */
    @PolicyResourceProperty(name="sourceSetUpOption", flag="unknown_sourceSetUpOption")
    private String value_sourceSetUpOption;
    private boolean unknown_sourceSetUpOption;
    public String sourceSetUpOption() {
        if (!unknown_sourceSetUpOption) return value_sourceSetUpOption;
        throw new UndeferrableValueException("Value 'ControlControlMappingSourceArgs.sourceSetUpOption' is not present");
    }

    /**
     * Type of data source for evidence collection. If `source_set_up_option` is manual, the only valid value is `MANUAL`. If `source_set_up_option` is automated, valid values are `AWS_Cloudtrail`, `AWS_Config`, `AWS_Security_Hub`, or `AWS_API_Call`.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="sourceType", flag="unknown_sourceType")
    private String value_sourceType;
    private boolean unknown_sourceType;
    public String sourceType() {
        if (!unknown_sourceType) return value_sourceType;
        throw new UndeferrableValueException("Value 'ControlControlMappingSourceArgs.sourceType' is not present");
    }

    /**
     * Instructions for troubleshooting the control.
     * 
     */
    @PolicyResourceProperty(name="troubleshootingText", flag="unknown_troubleshootingText")
    private String value_troubleshootingText;
    private boolean unknown_troubleshootingText;
    public String troubleshootingText() {
        if (!unknown_troubleshootingText) return value_troubleshootingText;
        throw new UndeferrableValueException("Value 'ControlControlMappingSourceArgs.troubleshootingText' is not present");
    }

}
