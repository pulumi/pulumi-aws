// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.mediaconvert;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.mediaconvert.inputs.QueueReservationPlanSettingsArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:mediaconvert/queue:Queue")
public final class QueueArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The maximum number of jobs your queue can process concurrently. For on-demand queues, the value you enter is constrained by your service quotas for Maximum concurrent jobs, per on-demand queue and Maximum concurrent jobs, per account. For reserved queues, specify the number of jobs you can process concurrently in your reservation plan instead.
     * 
     */
    private UndeferrableValue<Integer> concurrentJobs;

    public Integer concurrentJobs() {
        if (concurrentJobs == null) return null;
        return concurrentJobs.getValue("QueueArgs.concurrentJobs");
    }

    /**
     * A description of the queue
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("QueueArgs.description");
    }

    /**
     * A unique identifier describing the queue
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("QueueArgs.name");
    }

    /**
     * Specifies whether the pricing plan for the queue is on-demand or reserved. Valid values are `ON_DEMAND` or `RESERVED`. Default to `ON_DEMAND`.
     * 
     */
    private UndeferrableValue<String> pricingPlan;

    public String pricingPlan() {
        if (pricingPlan == null) return null;
        return pricingPlan.getValue("QueueArgs.pricingPlan");
    }

    /**
     * A detail pricing plan of the  reserved queue. See below.
     * 
     */
    private UndeferrableValue<QueueReservationPlanSettingsArgs> reservationPlanSettings;

    public QueueReservationPlanSettingsArgs reservationPlanSettings() {
        if (reservationPlanSettings == null) return null;
        return reservationPlanSettings.getValue("QueueArgs.reservationPlanSettings");
    }

    /**
     * A status of the queue. Valid values are `ACTIVE` or `RESERVED`. Default to `PAUSED`.
     * 
     */
    private UndeferrableValue<String> status;

    public String status() {
        if (status == null) return null;
        return status.getValue("QueueArgs.status");
    }

    /**
     * A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("QueueArgs.tags");
    }

}
