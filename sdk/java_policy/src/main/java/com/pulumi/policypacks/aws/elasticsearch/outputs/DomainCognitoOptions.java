// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.elasticsearch.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;


public final class DomainCognitoOptions {

    /**
     * Whether Amazon Cognito authentication with Kibana is enabled or not.
     * 
     */
    @PolicyResourceProperty(name="enabled", flag="unknown_enabled")
    private @Nullable Boolean value_enabled;
    private boolean unknown_enabled;
    public @Nullable Boolean enabled() {
        if (!unknown_enabled) return value_enabled;
        throw new UndeferrableValueException("Value 'DomainCognitoOptions.enabled' is not present");
    }

    /**
     * ID of the Cognito Identity Pool to use.
     * 
     */
    @PolicyResourceProperty(name="identityPoolId", flag="unknown_identityPoolId")
    private String value_identityPoolId;
    private boolean unknown_identityPoolId;
    public String identityPoolId() {
        if (!unknown_identityPoolId) return value_identityPoolId;
        throw new UndeferrableValueException("Value 'DomainCognitoOptions.identityPoolId' is not present");
    }

    /**
     * ARN of the IAM role that has the AmazonESCognitoAccess policy attached.
     * 
     */
    @PolicyResourceProperty(name="roleArn", flag="unknown_roleArn")
    private String value_roleArn;
    private boolean unknown_roleArn;
    public String roleArn() {
        if (!unknown_roleArn) return value_roleArn;
        throw new UndeferrableValueException("Value 'DomainCognitoOptions.roleArn' is not present");
    }

    /**
     * ID of the Cognito User Pool to use.
     * 
     */
    @PolicyResourceProperty(name="userPoolId", flag="unknown_userPoolId")
    private String value_userPoolId;
    private boolean unknown_userPoolId;
    public String userPoolId() {
        if (!unknown_userPoolId) return value_userPoolId;
        throw new UndeferrableValueException("Value 'DomainCognitoOptions.userPoolId' is not present");
    }

}
