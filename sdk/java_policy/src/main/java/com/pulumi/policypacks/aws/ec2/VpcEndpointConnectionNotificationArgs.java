// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ec2/vpcEndpointConnectionNotification:VpcEndpointConnectionNotification")
public final class VpcEndpointConnectionNotificationArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * One or more endpoint [events](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVpcEndpointConnectionNotification.html#API_CreateVpcEndpointConnectionNotification_RequestParameters) for which to receive notifications.
     * 
     * &gt; **NOTE:** One of `vpc_endpoint_service_id` or `vpc_endpoint_id` must be specified.
     * 
     */
    @PolicyResourceProperty(name="connectionEvents", flag="unknown_connectionEvents")
    private List<String> value_connectionEvents;
    private boolean unknown_connectionEvents;
    public List<String> connectionEvents() {
        if (!unknown_connectionEvents) return value_connectionEvents;
        throw new UndeferrableValueException("Value 'VpcEndpointConnectionNotificationArgs.connectionEvents' is not present");
    }

    /**
     * The ARN of the SNS topic for the notifications.
     * 
     */
    @PolicyResourceProperty(name="connectionNotificationArn", flag="unknown_connectionNotificationArn")
    private String value_connectionNotificationArn;
    private boolean unknown_connectionNotificationArn;
    public String connectionNotificationArn() {
        if (!unknown_connectionNotificationArn) return value_connectionNotificationArn;
        throw new UndeferrableValueException("Value 'VpcEndpointConnectionNotificationArgs.connectionNotificationArn' is not present");
    }

    /**
     * The ID of the VPC Endpoint to receive notifications for.
     * 
     */
    @PolicyResourceProperty(name="vpcEndpointId", flag="unknown_vpcEndpointId")
    private String value_vpcEndpointId;
    private boolean unknown_vpcEndpointId;
    public String vpcEndpointId() {
        if (!unknown_vpcEndpointId) return value_vpcEndpointId;
        throw new UndeferrableValueException("Value 'VpcEndpointConnectionNotificationArgs.vpcEndpointId' is not present");
    }

    /**
     * The ID of the VPC Endpoint Service to receive notifications for.
     * 
     */
    @PolicyResourceProperty(name="vpcEndpointServiceId", flag="unknown_vpcEndpointServiceId")
    private String value_vpcEndpointServiceId;
    private boolean unknown_vpcEndpointServiceId;
    public String vpcEndpointServiceId() {
        if (!unknown_vpcEndpointServiceId) return value_vpcEndpointServiceId;
        throw new UndeferrableValueException("Value 'VpcEndpointConnectionNotificationArgs.vpcEndpointServiceId' is not present");
    }

}
