// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.cleanrooms;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.cleanrooms.inputs.MembershipDefaultResultConfigurationArgs;
import com.pulumi.policypacks.aws.cleanrooms.inputs.MembershipPaymentConfigurationArgs;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:cleanrooms/membership:Membership")
public final class MembershipArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The ID of the collaboration to which the member was invited.
     * 
     */
    @PolicyResourceProperty(name="collaborationId", flag="unknown_collaborationId")
    private String value_collaborationId;
    private boolean unknown_collaborationId;
    public String collaborationId() {
        if (!unknown_collaborationId) return value_collaborationId;
        throw new UndeferrableValueException("Value 'MembershipArgs.collaborationId' is not present");
    }

    /**
     * The default configuration for a query result.
     * 
     */
    @PolicyResourceProperty(name="defaultResultConfiguration", flag="unknown_defaultResultConfiguration")
    private MembershipDefaultResultConfigurationArgs value_defaultResultConfiguration;
    private boolean unknown_defaultResultConfiguration;
    public MembershipDefaultResultConfigurationArgs defaultResultConfiguration() {
        if (!unknown_defaultResultConfiguration) return value_defaultResultConfiguration;
        throw new UndeferrableValueException("Value 'MembershipArgs.defaultResultConfiguration' is not present");
    }

    @PolicyResourceProperty(name="paymentConfiguration", flag="unknown_paymentConfiguration")
    private MembershipPaymentConfigurationArgs value_paymentConfiguration;
    private boolean unknown_paymentConfiguration;
    public MembershipPaymentConfigurationArgs paymentConfiguration() {
        if (!unknown_paymentConfiguration) return value_paymentConfiguration;
        throw new UndeferrableValueException("Value 'MembershipArgs.paymentConfiguration' is not present");
    }

    /**
     * An indicator as to whether query logging has been enabled or disabled for the membership.
     * 
     */
    @PolicyResourceProperty(name="queryLogStatus", flag="unknown_queryLogStatus")
    private String value_queryLogStatus;
    private boolean unknown_queryLogStatus;
    public String queryLogStatus() {
        if (!unknown_queryLogStatus) return value_queryLogStatus;
        throw new UndeferrableValueException("Value 'MembershipArgs.queryLogStatus' is not present");
    }

    /**
     * Key value pairs which tag the membership.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'MembershipArgs.tags' is not present");
    }

}
