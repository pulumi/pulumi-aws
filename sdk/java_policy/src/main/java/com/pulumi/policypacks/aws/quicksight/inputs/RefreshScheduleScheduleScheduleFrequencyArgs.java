// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.quicksight.inputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.quicksight.inputs.RefreshScheduleScheduleScheduleFrequencyRefreshOnDayArgs;
import java.lang.String;
import javax.annotation.Nullable;


public final class RefreshScheduleScheduleScheduleFrequencyArgs {

    /**
     * The interval between scheduled refreshes. Valid values are `MINUTE15`, `MINUTE30`, `HOURLY`, `DAILY`, `WEEKLY` and `MONTHLY`.
     * 
     */
    private UndeferrableValue<String> interval;

    public String interval() {
        if (interval == null) return null;
        return interval.getValue("RefreshScheduleScheduleScheduleFrequencyArgs.interval");
    }

    /**
     * The [refresh on entity](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_ScheduleRefreshOnEntity.html) configuration for weekly or monthly schedules. See refresh_on_day.
     * 
     */
    private UndeferrableValue<RefreshScheduleScheduleScheduleFrequencyRefreshOnDayArgs> refreshOnDay;

    public RefreshScheduleScheduleScheduleFrequencyRefreshOnDayArgs refreshOnDay() {
        if (refreshOnDay == null) return null;
        return refreshOnDay.getValue("RefreshScheduleScheduleScheduleFrequencyArgs.refreshOnDay");
    }

    /**
     * The time of day that you want the dataset to refresh. This value is expressed in `HH:MM` format. This field is not required for schedules that refresh hourly.
     * 
     */
    private UndeferrableValue<String> timeOfTheDay;

    public String timeOfTheDay() {
        if (timeOfTheDay == null) return null;
        return timeOfTheDay.getValue("RefreshScheduleScheduleScheduleFrequencyArgs.timeOfTheDay");
    }

    /**
     * The timezone that you want the refresh schedule to use.
     * 
     */
    private UndeferrableValue<String> timezone;

    public String timezone() {
        if (timezone == null) return null;
        return timezone.getValue("RefreshScheduleScheduleScheduleFrequencyArgs.timezone");
    }

}
