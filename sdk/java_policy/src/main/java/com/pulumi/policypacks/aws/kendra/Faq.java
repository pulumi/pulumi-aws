// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.kendra;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.kendra.outputs.FaqS3Path;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:kendra/faq:Faq")
public final class Faq extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * ARN of the FAQ.
     * 
     */
    private UndeferrableValue<String> arn;

    public String arn() {
        if (arn == null) return null;
        return arn.getValue("Faq.arn");
    }

    /**
     * The Unix datetime that the FAQ was created.
     * 
     */
    private UndeferrableValue<String> createdAt;

    public String createdAt() {
        if (createdAt == null) return null;
        return createdAt.getValue("Faq.createdAt");
    }

    private @Nullable UndeferrableValue<String> description;

    public @Nullable String description() {
        if (description == null) return null;
        return description.getValue("Faq.description");
    }

    /**
     * When the Status field value is `FAILED`, this contains a message that explains why.
     * 
     */
    private UndeferrableValue<String> errorMessage;

    public String errorMessage() {
        if (errorMessage == null) return null;
        return errorMessage.getValue("Faq.errorMessage");
    }

    /**
     * The identifier of the FAQ.
     * 
     */
    private UndeferrableValue<String> faqId;

    public String faqId() {
        if (faqId == null) return null;
        return faqId.getValue("Faq.faqId");
    }

    private @Nullable UndeferrableValue<String> fileFormat;

    public @Nullable String fileFormat() {
        if (fileFormat == null) return null;
        return fileFormat.getValue("Faq.fileFormat");
    }

    /**
     * The identifier of the index for a FAQ.
     * 
     */
    private UndeferrableValue<String> indexId;

    public String indexId() {
        if (indexId == null) return null;
        return indexId.getValue("Faq.indexId");
    }

    private UndeferrableValue<String> languageCode;

    public String languageCode() {
        if (languageCode == null) return null;
        return languageCode.getValue("Faq.languageCode");
    }

    /**
     * The name that should be associated with the FAQ.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("Faq.name");
    }

    /**
     * The Amazon Resource Name (ARN) of a role with permission to access the S3 bucket that contains the FAQs. For more information, see [IAM Roles for Amazon Kendra](https://docs.aws.amazon.com/kendra/latest/dg/iam-roles.html).
     * 
     */
    private UndeferrableValue<String> roleArn;

    public String roleArn() {
        if (roleArn == null) return null;
        return roleArn.getValue("Faq.roleArn");
    }

    /**
     * The S3 location of the FAQ input data. Detailed below.
     * 
     */
    private UndeferrableValue<FaqS3Path> s3Path;

    public FaqS3Path s3Path() {
        if (s3Path == null) return null;
        return s3Path.getValue("Faq.s3Path");
    }

    /**
     * The status of the FAQ. It is ready to use when the status is ACTIVE.
     * 
     */
    private UndeferrableValue<String> status;

    public String status() {
        if (status == null) return null;
        return status.getValue("Faq.status");
    }

    private @Nullable UndeferrableValue<Map<String,String>> tags;

    public @Nullable Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("Faq.tags");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    private UndeferrableValue<Map<String,String>> tagsAll;

    public Map<String,String> tagsAll() {
        if (tagsAll == null) return null;
        return tagsAll.getValue("Faq.tagsAll");
    }

    /**
     * The date and time that the FAQ was last updated.
     * 
     */
    private UndeferrableValue<String> updatedAt;

    public String updatedAt() {
        if (updatedAt == null) return null;
        return updatedAt.getValue("Faq.updatedAt");
    }

}
