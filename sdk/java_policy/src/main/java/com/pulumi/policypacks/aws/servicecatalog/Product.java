// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.servicecatalog;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.servicecatalog.outputs.ProductProvisioningArtifactParameters;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:servicecatalog/product:Product")
public final class Product extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). Default value is `en`.
     * 
     */
    private @Nullable UndeferrableValue<String> acceptLanguage;

    public @Nullable String acceptLanguage() {
        if (acceptLanguage == null) return null;
        return acceptLanguage.getValue("Product.acceptLanguage");
    }

    /**
     * ARN of the product.
     * 
     */
    private UndeferrableValue<String> arn;

    public String arn() {
        if (arn == null) return null;
        return arn.getValue("Product.arn");
    }

    /**
     * Time when the product was created.
     * 
     */
    private UndeferrableValue<String> createdTime;

    public String createdTime() {
        if (createdTime == null) return null;
        return createdTime.getValue("Product.createdTime");
    }

    /**
     * Description of the product.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("Product.description");
    }

    /**
     * Distributor (i.e., vendor) of the product.
     * 
     */
    private UndeferrableValue<String> distributor;

    public String distributor() {
        if (distributor == null) return null;
        return distributor.getValue("Product.distributor");
    }

    /**
     * Whether the product has a default path. If the product does not have a default path, call `ListLaunchPaths` to disambiguate between paths.  Otherwise, `ListLaunchPaths` is not required, and the output of ProductViewSummary can be used directly with `DescribeProvisioningParameters`.
     * 
     */
    private UndeferrableValue<Boolean> hasDefaultPath;

    public Boolean hasDefaultPath() {
        if (hasDefaultPath == null) return null;
        return hasDefaultPath.getValue("Product.hasDefaultPath");
    }

    /**
     * Name of the product.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("Product.name");
    }

    /**
     * Owner of the product.
     * 
     */
    private UndeferrableValue<String> owner;

    public String owner() {
        if (owner == null) return null;
        return owner.getValue("Product.owner");
    }

    /**
     * Configuration block for provisioning artifact (i.e., version) parameters. See `provisioning_artifact_parameters` Block for details.
     * 
     */
    private UndeferrableValue<ProductProvisioningArtifactParameters> provisioningArtifactParameters;

    public ProductProvisioningArtifactParameters provisioningArtifactParameters() {
        if (provisioningArtifactParameters == null) return null;
        return provisioningArtifactParameters.getValue("Product.provisioningArtifactParameters");
    }

    /**
     * Status of the product.
     * 
     */
    private UndeferrableValue<String> status;

    public String status() {
        if (status == null) return null;
        return status.getValue("Product.status");
    }

    /**
     * Support information about the product.
     * 
     */
    private UndeferrableValue<String> supportDescription;

    public String supportDescription() {
        if (supportDescription == null) return null;
        return supportDescription.getValue("Product.supportDescription");
    }

    /**
     * Contact email for product support.
     * 
     */
    private UndeferrableValue<String> supportEmail;

    public String supportEmail() {
        if (supportEmail == null) return null;
        return supportEmail.getValue("Product.supportEmail");
    }

    /**
     * Contact URL for product support.
     * 
     */
    private UndeferrableValue<String> supportUrl;

    public String supportUrl() {
        if (supportUrl == null) return null;
        return supportUrl.getValue("Product.supportUrl");
    }

    /**
     * Tags to apply to the product. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private @Nullable UndeferrableValue<Map<String,String>> tags;

    public @Nullable Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("Product.tags");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    private UndeferrableValue<Map<String,String>> tagsAll;

    public Map<String,String> tagsAll() {
        if (tagsAll == null) return null;
        return tagsAll.getValue("Product.tagsAll");
    }

    /**
     * Type of product. See [AWS Docs](https://docs.aws.amazon.com/servicecatalog/latest/dg/API_CreateProduct.html#API_CreateProduct_RequestSyntax) for valid list of values.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> type;

    public String type() {
        if (type == null) return null;
        return type.getValue("Product.type");
    }

}
