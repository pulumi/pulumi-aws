// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.servicecatalog;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.servicecatalog.inputs.ProductProvisioningArtifactParametersArgs;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:servicecatalog/product:Product")
public final class ProductArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). Default value is `en`.
     * 
     */
    private UndeferrableValue<String> acceptLanguage;

    public String acceptLanguage() {
        if (acceptLanguage == null) return null;
        return acceptLanguage.getValue("ProductArgs.acceptLanguage");
    }

    /**
     * Description of the product.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("ProductArgs.description");
    }

    /**
     * Distributor (i.e., vendor) of the product.
     * 
     */
    private UndeferrableValue<String> distributor;

    public String distributor() {
        if (distributor == null) return null;
        return distributor.getValue("ProductArgs.distributor");
    }

    /**
     * Name of the product.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("ProductArgs.name");
    }

    /**
     * Owner of the product.
     * 
     */
    private UndeferrableValue<String> owner;

    public String owner() {
        if (owner == null) return null;
        return owner.getValue("ProductArgs.owner");
    }

    /**
     * Configuration block for provisioning artifact (i.e., version) parameters. See `provisioning_artifact_parameters` Block for details.
     * 
     */
    private UndeferrableValue<ProductProvisioningArtifactParametersArgs> provisioningArtifactParameters;

    public ProductProvisioningArtifactParametersArgs provisioningArtifactParameters() {
        if (provisioningArtifactParameters == null) return null;
        return provisioningArtifactParameters.getValue("ProductArgs.provisioningArtifactParameters");
    }

    /**
     * Support information about the product.
     * 
     */
    private UndeferrableValue<String> supportDescription;

    public String supportDescription() {
        if (supportDescription == null) return null;
        return supportDescription.getValue("ProductArgs.supportDescription");
    }

    /**
     * Contact email for product support.
     * 
     */
    private UndeferrableValue<String> supportEmail;

    public String supportEmail() {
        if (supportEmail == null) return null;
        return supportEmail.getValue("ProductArgs.supportEmail");
    }

    /**
     * Contact URL for product support.
     * 
     */
    private UndeferrableValue<String> supportUrl;

    public String supportUrl() {
        if (supportUrl == null) return null;
        return supportUrl.getValue("ProductArgs.supportUrl");
    }

    /**
     * Tags to apply to the product. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("ProductArgs.tags");
    }

    /**
     * Type of product. See [AWS Docs](https://docs.aws.amazon.com/servicecatalog/latest/dg/API_CreateProduct.html#API_CreateProduct_RequestSyntax) for valid list of values.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> type;

    public String type() {
        if (type == null) return null;
        return type.getValue("ProductArgs.type");
    }

}
