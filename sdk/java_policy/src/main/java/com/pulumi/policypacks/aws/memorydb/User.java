// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.memorydb;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.memorydb.outputs.UserAuthenticationMode;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:memorydb/user:User")
public final class User extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Access permissions string used for this user.
     * 
     */
    @PolicyResourceProperty(name="accessString", flag="unknown_accessString")
    private String value_accessString;
    private boolean unknown_accessString;
    public String accessString() {
        if (!unknown_accessString) return value_accessString;
        throw new UndeferrableValueException("Value 'User.accessString' is not present");
    }

    /**
     * ARN of the user.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'User.arn' is not present");
    }

    /**
     * Denotes the user&#39;s authentication properties. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="authenticationMode", flag="unknown_authenticationMode")
    private UserAuthenticationMode value_authenticationMode;
    private boolean unknown_authenticationMode;
    public UserAuthenticationMode authenticationMode() {
        if (!unknown_authenticationMode) return value_authenticationMode;
        throw new UndeferrableValueException("Value 'User.authenticationMode' is not present");
    }

    /**
     * Minimum engine version supported for the user.
     * 
     */
    @PolicyResourceProperty(name="minimumEngineVersion", flag="unknown_minimumEngineVersion")
    private String value_minimumEngineVersion;
    private boolean unknown_minimumEngineVersion;
    public String minimumEngineVersion() {
        if (!unknown_minimumEngineVersion) return value_minimumEngineVersion;
        throw new UndeferrableValueException("Value 'User.minimumEngineVersion' is not present");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'User.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'User.tagsAll' is not present");
    }

    /**
     * Name of the MemoryDB user. Up to 40 characters.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="userName", flag="unknown_userName")
    private String value_userName;
    private boolean unknown_userName;
    public String userName() {
        if (!unknown_userName) return value_userName;
        throw new UndeferrableValueException("Value 'User.userName' is not present");
    }

}
