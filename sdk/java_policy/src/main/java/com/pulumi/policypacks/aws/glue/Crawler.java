// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.glue;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.glue.CrawlerCatalogTarget;
import com.pulumi.policypacks.aws.glue.CrawlerDeltaTarget;
import com.pulumi.policypacks.aws.glue.CrawlerDynamodbTarget;
import com.pulumi.policypacks.aws.glue.CrawlerHudiTarget;
import com.pulumi.policypacks.aws.glue.CrawlerIcebergTarget;
import com.pulumi.policypacks.aws.glue.CrawlerJdbcTarget;
import com.pulumi.policypacks.aws.glue.CrawlerLakeFormationConfiguration;
import com.pulumi.policypacks.aws.glue.CrawlerLineageConfiguration;
import com.pulumi.policypacks.aws.glue.CrawlerMongodbTarget;
import com.pulumi.policypacks.aws.glue.CrawlerRecrawlPolicy;
import com.pulumi.policypacks.aws.glue.CrawlerS3Target;
import com.pulumi.policypacks.aws.glue.CrawlerSchemaChangePolicy;
import java.lang.String;
import java.util.List;
import java.util.Map;


@PolicyResourceType(type="aws:glue/crawler:Crawler")
public final class Crawler extends com.pulumi.resources.PolicyResource {

    /**
     * The ARN of the crawler
     * 
     */
    public String arn;



    /**
     * List of nested AWS Glue Data Catalog target arguments. See Catalog Target below.
     * 
     */
    public List<CrawlerCatalogTarget> catalogTargets;



    /**
     * List of custom classifiers. By default, all AWS classifiers are included in a crawl, but these custom classifiers always override the default classifiers for a given classification.
     * 
     */
    public List<String> classifiers;



    /**
     * JSON string of configuration information. For more details see [Setting Crawler Configuration Options](https://docs.aws.amazon.com/glue/latest/dg/crawler-configuration.html).
     * 
     */
    public String configuration;



    /**
     * Glue database where results are written.
     * 
     */
    public String databaseName;



    /**
     * List of nested Delta Lake target arguments. See Delta Target below.
     * 
     */
    public List<CrawlerDeltaTarget> deltaTargets;



    /**
     * Description of the crawler.
     * 
     */
    public String description;



    /**
     * List of nested DynamoDB target arguments. See Dynamodb Target below.
     * 
     */
    public List<CrawlerDynamodbTarget> dynamodbTargets;



    /**
     * List of nested Hudi target arguments. See Iceberg Target below.
     * 
     */
    public List<CrawlerHudiTarget> hudiTargets;



    /**
     * List of nested Iceberg target arguments. See Iceberg Target below.
     * 
     */
    public List<CrawlerIcebergTarget> icebergTargets;



    /**
     * List of nested JDBC target arguments. See JDBC Target below.
     * 
     */
    public List<CrawlerJdbcTarget> jdbcTargets;



    /**
     * Specifies Lake Formation configuration settings for the crawler. See Lake Formation Configuration below.
     * 
     */
    public CrawlerLakeFormationConfiguration lakeFormationConfiguration;



    /**
     * Specifies data lineage configuration settings for the crawler. See Lineage Configuration below.
     * 
     */
    public CrawlerLineageConfiguration lineageConfiguration;



    /**
     * List of nested MongoDB target arguments. See MongoDB Target below.
     * 
     */
    public List<CrawlerMongodbTarget> mongodbTargets;



    /**
     * Name of the crawler.
     * 
     */
    public String name;



    /**
     * A policy that specifies whether to crawl the entire dataset again, or to crawl only folders that were added since the last crawler run.. See Recrawl Policy below.
     * 
     */
    public CrawlerRecrawlPolicy recrawlPolicy;



    /**
     * The IAM role friendly name (including path without leading slash), or ARN of an IAM role, used by the crawler to access other resources.
     * 
     */
    public String role;



    /**
     * List of nested Amazon S3 target arguments. See S3 Target below.
     * 
     */
    public List<CrawlerS3Target> s3Targets;



    /**
     * A cron expression used to specify the schedule. For more information, see [Time-Based Schedules for Jobs and Crawlers](https://docs.aws.amazon.com/glue/latest/dg/monitor-data-warehouse-schedule.html). For example, to run something every day at 12:15 UTC, you would specify: `cron(15 12 * * ? *)`.
     * 
     */
    public String schedule;



    /**
     * Policy for the crawler&#39;s update and deletion behavior. See Schema Change Policy below.
     * 
     */
    public CrawlerSchemaChangePolicy schemaChangePolicy;



    /**
     * The name of Security Configuration to be used by the crawler
     * 
     */
    public String securityConfiguration;



    /**
     * The table prefix used for catalog tables that are created.
     * 
     */
    public String tablePrefix;



    /**
     * Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



}
