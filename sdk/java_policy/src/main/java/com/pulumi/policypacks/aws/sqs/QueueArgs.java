// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.sqs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:sqs/queue:Queue")
public final class QueueArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Enables content-based deduplication for FIFO queues. For more information, see the [related documentation](http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html#FIFO-queues-exactly-once-processing).
     * 
     */
    private UndeferrableValue<Boolean> contentBasedDeduplication;

    public Boolean contentBasedDeduplication() {
        if (contentBasedDeduplication == null) return null;
        return contentBasedDeduplication.getValue("QueueArgs.contentBasedDeduplication");
    }

    /**
     * Specifies whether message deduplication occurs at the message group or queue level. Valid values are `messageGroup` and `queue` (default).
     * 
     */
    private UndeferrableValue<String> deduplicationScope;

    public String deduplicationScope() {
        if (deduplicationScope == null) return null;
        return deduplicationScope.getValue("QueueArgs.deduplicationScope");
    }

    /**
     * Time in seconds that the delivery of all messages in the queue will be delayed. An integer from 0 to 900 (15 minutes). The default for this attribute is 0 seconds.
     * 
     */
    private UndeferrableValue<Integer> delaySeconds;

    public Integer delaySeconds() {
        if (delaySeconds == null) return null;
        return delaySeconds.getValue("QueueArgs.delaySeconds");
    }

    /**
     * Boolean designating a FIFO queue. If not set, it defaults to `false` making it standard.
     * 
     */
    private UndeferrableValue<Boolean> fifoQueue;

    public Boolean fifoQueue() {
        if (fifoQueue == null) return null;
        return fifoQueue.getValue("QueueArgs.fifoQueue");
    }

    /**
     * Specifies whether the FIFO queue throughput quota applies to the entire queue or per message group. Valid values are `perQueue` (default) and `perMessageGroupId`.
     * 
     */
    private UndeferrableValue<String> fifoThroughputLimit;

    public String fifoThroughputLimit() {
        if (fifoThroughputLimit == null) return null;
        return fifoThroughputLimit.getValue("QueueArgs.fifoThroughputLimit");
    }

    /**
     * Length of time, in seconds, for which Amazon SQS can reuse a data key to encrypt or decrypt messages before calling AWS KMS again. An integer representing seconds, between 60 seconds (1 minute) and 86,400 seconds (24 hours). The default is 300 (5 minutes).
     * 
     */
    private UndeferrableValue<Integer> kmsDataKeyReusePeriodSeconds;

    public Integer kmsDataKeyReusePeriodSeconds() {
        if (kmsDataKeyReusePeriodSeconds == null) return null;
        return kmsDataKeyReusePeriodSeconds.getValue("QueueArgs.kmsDataKeyReusePeriodSeconds");
    }

    /**
     * ID of an AWS-managed customer master key (CMK) for Amazon SQS or a custom CMK. For more information, see [Key Terms](http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-server-side-encryption.html#sqs-sse-key-terms).
     * 
     */
    private UndeferrableValue<String> kmsMasterKeyId;

    public String kmsMasterKeyId() {
        if (kmsMasterKeyId == null) return null;
        return kmsMasterKeyId.getValue("QueueArgs.kmsMasterKeyId");
    }

    /**
     * Limit of how many bytes a message can contain before Amazon SQS rejects it. An integer from 1024 bytes (1 KiB) up to 262144 bytes (256 KiB). The default for this attribute is 262144 (256 KiB).
     * 
     */
    private UndeferrableValue<Integer> maxMessageSize;

    public Integer maxMessageSize() {
        if (maxMessageSize == null) return null;
        return maxMessageSize.getValue("QueueArgs.maxMessageSize");
    }

    /**
     * Number of seconds Amazon SQS retains a message. Integer representing seconds, from 60 (1 minute) to 1209600 (14 days). The default for this attribute is 345600 (4 days).
     * 
     */
    private UndeferrableValue<Integer> messageRetentionSeconds;

    public Integer messageRetentionSeconds() {
        if (messageRetentionSeconds == null) return null;
        return messageRetentionSeconds.getValue("QueueArgs.messageRetentionSeconds");
    }

    /**
     * Name of the queue. Queue names must be made up of only uppercase and lowercase ASCII letters, numbers, underscores, and hyphens, and must be between 1 and 80 characters long. For a FIFO (first-in-first-out) queue, the name must end with the `.fifo` suffix. If omitted, the provider will assign a random, unique name. Conflicts with `name_prefix`.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("QueueArgs.name");
    }

    /**
     * Creates a unique name beginning with the specified prefix. Conflicts with `name`.
     * 
     */
    private UndeferrableValue<String> namePrefix;

    public String namePrefix() {
        if (namePrefix == null) return null;
        return namePrefix.getValue("QueueArgs.namePrefix");
    }

    /**
     * JSON policy for the SQS queue. For more information about building AWS IAM policy documents see the AWS IAM Policy Document Guide. The provider will only perform drift detection of its value when present in a configuration. It is preferred to use the `aws.sqs.QueuePolicy` resource instead.
     * 
     */
    private UndeferrableValue<String> policy;

    public String policy() {
        if (policy == null) return null;
        return policy.getValue("QueueArgs.policy");
    }

    /**
     * Time for which a ReceiveMessage call will wait for a message to arrive (long polling) before returning. An integer from 0 to 20 (seconds). The default for this attribute is 0, meaning that the call will return immediately.
     * 
     */
    private UndeferrableValue<Integer> receiveWaitTimeSeconds;

    public Integer receiveWaitTimeSeconds() {
        if (receiveWaitTimeSeconds == null) return null;
        return receiveWaitTimeSeconds.getValue("QueueArgs.receiveWaitTimeSeconds");
    }

    /**
     * JSON policy to set up the Dead Letter Queue redrive permission, see [AWS docs](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/SQSDeadLetterQueue.html). The provider will only perform drift detection of its value when present in a configuration. It is preferred to use the `aws.sqs.RedriveAllowPolicy` resource instead.
     * 
     */
    private UndeferrableValue<String> redriveAllowPolicy;

    public String redriveAllowPolicy() {
        if (redriveAllowPolicy == null) return null;
        return redriveAllowPolicy.getValue("QueueArgs.redriveAllowPolicy");
    }

    /**
     * JSON policy to set up the Dead Letter Queue, see [AWS docs](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/SQSDeadLetterQueue.html). The provider will only perform drift detection of its value when present in a configuration. It is preferred to use the `aws.sqs.RedrivePolicy` resource instead. **Note:** when specifying `maxReceiveCount`, you must specify it as an integer (`5`), and not a string (`&#34;5&#34;`).
     * 
     */
    private UndeferrableValue<String> redrivePolicy;

    public String redrivePolicy() {
        if (redrivePolicy == null) return null;
        return redrivePolicy.getValue("QueueArgs.redrivePolicy");
    }

    /**
     * Boolean to enable server-side encryption (SSE) of message content with SQS-owned encryption keys. See [Encryption at rest](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-server-side-encryption.html). The provider will only perform drift detection of its value when present in a configuration.
     * 
     */
    private UndeferrableValue<Boolean> sqsManagedSseEnabled;

    public Boolean sqsManagedSseEnabled() {
        if (sqsManagedSseEnabled == null) return null;
        return sqsManagedSseEnabled.getValue("QueueArgs.sqsManagedSseEnabled");
    }

    /**
     * Map of tags to assign to the queue. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("QueueArgs.tags");
    }

    /**
     * Visibility timeout for the queue. An integer from 0 to 43200 (12 hours). The default for this attribute is 30. For more information about visibility timeout, see [AWS docs](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/AboutVT.html).
     * 
     */
    private UndeferrableValue<Integer> visibilityTimeoutSeconds;

    public Integer visibilityTimeoutSeconds() {
        if (visibilityTimeoutSeconds == null) return null;
        return visibilityTimeoutSeconds.getValue("QueueArgs.visibilityTimeoutSeconds");
    }

}
