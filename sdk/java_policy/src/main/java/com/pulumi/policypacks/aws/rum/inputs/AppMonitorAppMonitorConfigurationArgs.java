// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.rum.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class AppMonitorAppMonitorConfigurationArgs {

    /**
     * If you set this to `true`, RUM web client sets two cookies, a session cookie  and a user cookie. The cookies allow the RUM web client to collect data relating to the number of users an application has and the behavior of the application across a sequence of events. Cookies are stored in the top-level domain of the current page.
     * 
     */
    @PolicyResourceProperty(name="allowCookies", flag="unknown_allowCookies")
    private Boolean value_allowCookies;
    private boolean unknown_allowCookies;
    public Boolean allowCookies() {
        if (!unknown_allowCookies) return value_allowCookies;
        throw new UndeferrableValueException("Value 'AppMonitorAppMonitorConfigurationArgs.allowCookies' is not present");
    }

    /**
     * If you set this to `true`, RUM enables X-Ray tracing for the user sessions  that RUM samples. RUM adds an X-Ray trace header to allowed HTTP requests. It also records an X-Ray segment for allowed HTTP requests.
     * 
     */
    @PolicyResourceProperty(name="enableXray", flag="unknown_enableXray")
    private Boolean value_enableXray;
    private boolean unknown_enableXray;
    public Boolean enableXray() {
        if (!unknown_enableXray) return value_enableXray;
        throw new UndeferrableValueException("Value 'AppMonitorAppMonitorConfigurationArgs.enableXray' is not present");
    }

    /**
     * A list of URLs in your website or application to exclude from RUM data collection.
     * 
     */
    @PolicyResourceProperty(name="excludedPages", flag="unknown_excludedPages")
    private List<String> value_excludedPages;
    private boolean unknown_excludedPages;
    public List<String> excludedPages() {
        if (!unknown_excludedPages) return value_excludedPages;
        throw new UndeferrableValueException("Value 'AppMonitorAppMonitorConfigurationArgs.excludedPages' is not present");
    }

    /**
     * A list of pages in the CloudWatch RUM console that are to be displayed with a &#34;favorite&#34; icon.
     * 
     */
    @PolicyResourceProperty(name="favoritePages", flag="unknown_favoritePages")
    private List<String> value_favoritePages;
    private boolean unknown_favoritePages;
    public List<String> favoritePages() {
        if (!unknown_favoritePages) return value_favoritePages;
        throw new UndeferrableValueException("Value 'AppMonitorAppMonitorConfigurationArgs.favoritePages' is not present");
    }

    /**
     * The ARN of the guest IAM role that is attached to the Amazon Cognito identity pool that is used to authorize the sending of data to RUM.
     * 
     */
    @PolicyResourceProperty(name="guestRoleArn", flag="unknown_guestRoleArn")
    private String value_guestRoleArn;
    private boolean unknown_guestRoleArn;
    public String guestRoleArn() {
        if (!unknown_guestRoleArn) return value_guestRoleArn;
        throw new UndeferrableValueException("Value 'AppMonitorAppMonitorConfigurationArgs.guestRoleArn' is not present");
    }

    /**
     * The ID of the Amazon Cognito identity pool that is used to authorize the sending of data to RUM.
     * 
     */
    @PolicyResourceProperty(name="identityPoolId", flag="unknown_identityPoolId")
    private String value_identityPoolId;
    private boolean unknown_identityPoolId;
    public String identityPoolId() {
        if (!unknown_identityPoolId) return value_identityPoolId;
        throw new UndeferrableValueException("Value 'AppMonitorAppMonitorConfigurationArgs.identityPoolId' is not present");
    }

    /**
     * If this app monitor is to collect data from only certain pages in your application, this structure lists those pages.
     * 
     */
    @PolicyResourceProperty(name="includedPages", flag="unknown_includedPages")
    private List<String> value_includedPages;
    private boolean unknown_includedPages;
    public List<String> includedPages() {
        if (!unknown_includedPages) return value_includedPages;
        throw new UndeferrableValueException("Value 'AppMonitorAppMonitorConfigurationArgs.includedPages' is not present");
    }

    /**
     * Specifies the percentage of user sessions to use for RUM data collection. Choosing a higher percentage gives you more data but also incurs more costs. The number you specify is the percentage of user sessions that will be used. Default value is `0.1`.
     * 
     */
    @PolicyResourceProperty(name="sessionSampleRate", flag="unknown_sessionSampleRate")
    private Double value_sessionSampleRate;
    private boolean unknown_sessionSampleRate;
    public Double sessionSampleRate() {
        if (!unknown_sessionSampleRate) return value_sessionSampleRate;
        throw new UndeferrableValueException("Value 'AppMonitorAppMonitorConfigurationArgs.sessionSampleRate' is not present");
    }

    /**
     * An array that lists the types of telemetry data that this app monitor is to collect. Valid values are `errors`, `performance`, and `http`.
     * 
     */
    @PolicyResourceProperty(name="telemetries", flag="unknown_telemetries")
    private List<String> value_telemetries;
    private boolean unknown_telemetries;
    public List<String> telemetries() {
        if (!unknown_telemetries) return value_telemetries;
        throw new UndeferrableValueException("Value 'AppMonitorAppMonitorConfigurationArgs.telemetries' is not present");
    }

}
