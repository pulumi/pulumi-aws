// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.verifiedpermissions.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.verifiedpermissions.outputs.IdentitySourceConfigurationOpenIdConnectConfigurationTokenSelectionAccessTokenOnly;
import com.pulumi.policypacks.aws.verifiedpermissions.outputs.IdentitySourceConfigurationOpenIdConnectConfigurationTokenSelectionIdentityTokenOnly;
import javax.annotation.Nullable;


public final class IdentitySourceConfigurationOpenIdConnectConfigurationTokenSelection {

    /**
     * The OIDC configuration for processing access tokens. See Access Token Only below.
     * 
     */
    @PolicyResourceProperty(name="accessTokenOnly", flag="unknown_accessTokenOnly")
    private @Nullable IdentitySourceConfigurationOpenIdConnectConfigurationTokenSelectionAccessTokenOnly value_accessTokenOnly;
    private boolean unknown_accessTokenOnly;
    public @Nullable IdentitySourceConfigurationOpenIdConnectConfigurationTokenSelectionAccessTokenOnly accessTokenOnly() {
        if (!unknown_accessTokenOnly) return value_accessTokenOnly;
        throw new UndeferrableValueException("Value 'IdentitySourceConfigurationOpenIdConnectConfigurationTokenSelection.accessTokenOnly' is not present");
    }

    /**
     * The OIDC configuration for processing identity (ID) tokens. See Identity Token Only below.
     * 
     */
    @PolicyResourceProperty(name="identityTokenOnly", flag="unknown_identityTokenOnly")
    private @Nullable IdentitySourceConfigurationOpenIdConnectConfigurationTokenSelectionIdentityTokenOnly value_identityTokenOnly;
    private boolean unknown_identityTokenOnly;
    public @Nullable IdentitySourceConfigurationOpenIdConnectConfigurationTokenSelectionIdentityTokenOnly identityTokenOnly() {
        if (!unknown_identityTokenOnly) return value_identityTokenOnly;
        throw new UndeferrableValueException("Value 'IdentitySourceConfigurationOpenIdConnectConfigurationTokenSelection.identityTokenOnly' is not present");
    }

}
