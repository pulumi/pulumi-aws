// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.servicecatalog;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:servicecatalog/provisioningArtifact:ProvisioningArtifact")
public final class ProvisioningArtifact extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Language code. Valid values: `en` (English), `jp` (Japanese), `zh` (Chinese). The default value is `en`.
     * 
     */
    @PolicyResourceProperty(name="acceptLanguage", flag="unknown_acceptLanguage")
    private @Nullable String value_acceptLanguage;
    private boolean unknown_acceptLanguage;
    public @Nullable String acceptLanguage() {
        if (!unknown_acceptLanguage) return value_acceptLanguage;
        throw new UndeferrableValueException("Value 'ProvisioningArtifact.acceptLanguage' is not present");
    }

    /**
     * Whether the product version is active. Inactive provisioning artifacts are invisible to end users. End users cannot launch or update a provisioned product from an inactive provisioning artifact. Default is `true`.
     * 
     */
    @PolicyResourceProperty(name="active", flag="unknown_active")
    private @Nullable Boolean value_active;
    private boolean unknown_active;
    public @Nullable Boolean active() {
        if (!unknown_active) return value_active;
        throw new UndeferrableValueException("Value 'ProvisioningArtifact.active' is not present");
    }

    /**
     * Time when the provisioning artifact was created.
     * 
     */
    @PolicyResourceProperty(name="createdTime", flag="unknown_createdTime")
    private String value_createdTime;
    private boolean unknown_createdTime;
    public String createdTime() {
        if (!unknown_createdTime) return value_createdTime;
        throw new UndeferrableValueException("Value 'ProvisioningArtifact.createdTime' is not present");
    }

    /**
     * Description of the provisioning artifact (i.e., version), including how it differs from the previous provisioning artifact.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private String value_description;
    private boolean unknown_description;
    public String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'ProvisioningArtifact.description' is not present");
    }

    /**
     * Whether AWS Service Catalog stops validating the specified provisioning artifact template even if it is invalid.
     * 
     */
    @PolicyResourceProperty(name="disableTemplateValidation", flag="unknown_disableTemplateValidation")
    private @Nullable Boolean value_disableTemplateValidation;
    private boolean unknown_disableTemplateValidation;
    public @Nullable Boolean disableTemplateValidation() {
        if (!unknown_disableTemplateValidation) return value_disableTemplateValidation;
        throw new UndeferrableValueException("Value 'ProvisioningArtifact.disableTemplateValidation' is not present");
    }

    /**
     * Information set by the administrator to provide guidance to end users about which provisioning artifacts to use. Valid values are `DEFAULT` and `DEPRECATED`. The default is `DEFAULT`. Users are able to make updates to a provisioned product of a deprecated version but cannot launch new provisioned products using a deprecated version.
     * 
     */
    @PolicyResourceProperty(name="guidance", flag="unknown_guidance")
    private @Nullable String value_guidance;
    private boolean unknown_guidance;
    public @Nullable String guidance() {
        if (!unknown_guidance) return value_guidance;
        throw new UndeferrableValueException("Value 'ProvisioningArtifact.guidance' is not present");
    }

    /**
     * Name of the provisioning artifact (for example, `v1`, `v2beta`). No spaces are allowed.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'ProvisioningArtifact.name' is not present");
    }

    /**
     * Identifier of the product.
     * 
     */
    @PolicyResourceProperty(name="productId", flag="unknown_productId")
    private String value_productId;
    private boolean unknown_productId;
    public String productId() {
        if (!unknown_productId) return value_productId;
        throw new UndeferrableValueException("Value 'ProvisioningArtifact.productId' is not present");
    }

    /**
     * Provisioning artifact identifier.
     * 
     */
    @PolicyResourceProperty(name="provisioningArtifactId", flag="unknown_provisioningArtifactId")
    private String value_provisioningArtifactId;
    private boolean unknown_provisioningArtifactId;
    public String provisioningArtifactId() {
        if (!unknown_provisioningArtifactId) return value_provisioningArtifactId;
        throw new UndeferrableValueException("Value 'ProvisioningArtifact.provisioningArtifactId' is not present");
    }

    /**
     * Template source as the physical ID of the resource that contains the template. Currently only supports CloudFormation stack ARN. Specify the physical ID as `arn:[partition]:cloudformation:[region]:[account ID]:stack/[stack name]/[resource ID]`.
     * 
     */
    @PolicyResourceProperty(name="templatePhysicalId", flag="unknown_templatePhysicalId")
    private @Nullable String value_templatePhysicalId;
    private boolean unknown_templatePhysicalId;
    public @Nullable String templatePhysicalId() {
        if (!unknown_templatePhysicalId) return value_templatePhysicalId;
        throw new UndeferrableValueException("Value 'ProvisioningArtifact.templatePhysicalId' is not present");
    }

    /**
     * Template source as URL of the CloudFormation template in Amazon S3.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="templateUrl", flag="unknown_templateUrl")
    private @Nullable String value_templateUrl;
    private boolean unknown_templateUrl;
    public @Nullable String templateUrl() {
        if (!unknown_templateUrl) return value_templateUrl;
        throw new UndeferrableValueException("Value 'ProvisioningArtifact.templateUrl' is not present");
    }

    /**
     * Type of provisioning artifact. See [AWS Docs](https://docs.aws.amazon.com/servicecatalog/latest/dg/API_ProvisioningArtifactProperties.html) for valid list of values.
     * 
     */
    @PolicyResourceProperty(name="type", flag="unknown_type")
    private @Nullable String value_type;
    private boolean unknown_type;
    public @Nullable String type() {
        if (!unknown_type) return value_type;
        throw new UndeferrableValueException("Value 'ProvisioningArtifact.type' is not present");
    }

}
