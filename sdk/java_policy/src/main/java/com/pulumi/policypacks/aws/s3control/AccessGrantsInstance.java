// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.s3control;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:s3control/accessGrantsInstance:AccessGrantsInstance")
public final class AccessGrantsInstance extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Amazon Resource Name (ARN) of the S3 Access Grants instance.
     * 
     */
    @PolicyResourceProperty(name="accessGrantsInstanceArn", flag="unknown_accessGrantsInstanceArn")
    private String value_accessGrantsInstanceArn;
    private boolean unknown_accessGrantsInstanceArn;
    public String accessGrantsInstanceArn() {
        if (!unknown_accessGrantsInstanceArn) return value_accessGrantsInstanceArn;
        throw new UndeferrableValueException("Value 'AccessGrantsInstance.accessGrantsInstanceArn' is not present");
    }

    /**
     * Unique ID of the S3 Access Grants instance.
     * 
     */
    @PolicyResourceProperty(name="accessGrantsInstanceId", flag="unknown_accessGrantsInstanceId")
    private String value_accessGrantsInstanceId;
    private boolean unknown_accessGrantsInstanceId;
    public String accessGrantsInstanceId() {
        if (!unknown_accessGrantsInstanceId) return value_accessGrantsInstanceId;
        throw new UndeferrableValueException("Value 'AccessGrantsInstance.accessGrantsInstanceId' is not present");
    }

    @PolicyResourceProperty(name="accountId", flag="unknown_accountId")
    private String value_accountId;
    private boolean unknown_accountId;
    public String accountId() {
        if (!unknown_accountId) return value_accountId;
        throw new UndeferrableValueException("Value 'AccessGrantsInstance.accountId' is not present");
    }

    /**
     * The ARN of the AWS IAM Identity Center instance application; a subresource of the original Identity Center instance.
     * 
     */
    @PolicyResourceProperty(name="identityCenterApplicationArn", flag="unknown_identityCenterApplicationArn")
    private String value_identityCenterApplicationArn;
    private boolean unknown_identityCenterApplicationArn;
    public String identityCenterApplicationArn() {
        if (!unknown_identityCenterApplicationArn) return value_identityCenterApplicationArn;
        throw new UndeferrableValueException("Value 'AccessGrantsInstance.identityCenterApplicationArn' is not present");
    }

    /**
     * The ARN of the AWS IAM Identity Center instance associated with the S3 Access Grants instance.
     * 
     */
    @PolicyResourceProperty(name="identityCenterArn", flag="unknown_identityCenterArn")
    private @Nullable String value_identityCenterArn;
    private boolean unknown_identityCenterArn;
    public @Nullable String identityCenterArn() {
        if (!unknown_identityCenterArn) return value_identityCenterArn;
        throw new UndeferrableValueException("Value 'AccessGrantsInstance.identityCenterArn' is not present");
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'AccessGrantsInstance.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'AccessGrantsInstance.tagsAll' is not present");
    }

}
