// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.elasticbeanstalk;

import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;


@PolicyResourceType(type="aws:elasticbeanstalk/applicationVersion:ApplicationVersion")
public final class ApplicationVersion extends com.pulumi.resources.PolicyResource {

    /**
     * Name of the Beanstalk Application the version is associated with.
     * 
     */
    public String application;



    /**
     * ARN assigned by AWS for this Elastic Beanstalk Application.
     * 
     */
    public String arn;



    /**
     * S3 bucket that contains the Application Version source bundle.
     * 
     */
    public String bucket;



    /**
     * Short description of the Application Version.
     * 
     */
    public String description;



    /**
     * On delete, force an Application Version to be deleted when it may be in use by multiple Elastic Beanstalk Environments.
     * 
     */
    public Boolean forceDelete;



    /**
     * S3 object that is the Application Version source bundle.
     * 
     */
    public String key;



    /**
     * Unique name for the this Application Version.
     * 
     * The following arguments are optional:
     * 
     */
    public String name;



    /**
     * Pre-processes and validates the environment manifest (env.yaml ) and configuration files (*.config files in the .ebextensions folder) in the source bundle. Validating configuration files can identify issues prior to deploying the application version to an environment. You must turn processing on for application versions that you create using AWS CodeBuild or AWS CodeCommit. For application versions built from a source bundle in Amazon S3, processing is optional. It validates Elastic Beanstalk configuration files. It doesn’t validate your application’s configuration files, like proxy server or Docker configuration.
     * 
     */
    public Boolean process;



    /**
     * Key-value map of tags for the Elastic Beanstalk Application Version. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



}
