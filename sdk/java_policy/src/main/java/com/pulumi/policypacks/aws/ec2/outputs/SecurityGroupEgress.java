// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2.outputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class SecurityGroupEgress {

    /**
     * List of CIDR blocks.
     * 
     */
    private @Nullable UndeferrableValue<List<String>> cidrBlocks;

    public @Nullable List<String> cidrBlocks() {
        if (cidrBlocks == null) return null;
        return cidrBlocks.getValue("SecurityGroupEgress.cidrBlocks");
    }

    /**
     * Description of this egress rule.
     * 
     */
    private @Nullable UndeferrableValue<String> description;

    public @Nullable String description() {
        if (description == null) return null;
        return description.getValue("SecurityGroupEgress.description");
    }

    /**
     * Start port (or ICMP type number if protocol is `icmp`)
     * 
     */
    private UndeferrableValue<Integer> fromPort;

    public Integer fromPort() {
        if (fromPort == null) return null;
        return fromPort.getValue("SecurityGroupEgress.fromPort");
    }

    /**
     * List of IPv6 CIDR blocks.
     * 
     */
    private @Nullable UndeferrableValue<List<String>> ipv6CidrBlocks;

    public @Nullable List<String> ipv6CidrBlocks() {
        if (ipv6CidrBlocks == null) return null;
        return ipv6CidrBlocks.getValue("SecurityGroupEgress.ipv6CidrBlocks");
    }

    /**
     * List of Prefix List IDs.
     * 
     */
    private @Nullable UndeferrableValue<List<String>> prefixListIds;

    public @Nullable List<String> prefixListIds() {
        if (prefixListIds == null) return null;
        return prefixListIds.getValue("SecurityGroupEgress.prefixListIds");
    }

    /**
     * Protocol. If you select a protocol of `-1` (semantically equivalent to `all`, which is not a valid value here), you must specify a `from_port` and `to_port` equal to 0. The supported values are defined in the `IpProtocol` argument in the [IpPermission](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_IpPermission.html) API reference.
     * 
     */
    private UndeferrableValue<String> protocol;

    public String protocol() {
        if (protocol == null) return null;
        return protocol.getValue("SecurityGroupEgress.protocol");
    }

    /**
     * List of security groups. A group name can be used relative to the default VPC. Otherwise, group ID.
     * 
     */
    private @Nullable UndeferrableValue<List<String>> securityGroups;

    public @Nullable List<String> securityGroups() {
        if (securityGroups == null) return null;
        return securityGroups.getValue("SecurityGroupEgress.securityGroups");
    }

    /**
     * Whether the security group itself will be added as a source to this egress rule.
     * 
     */
    private @Nullable UndeferrableValue<Boolean> self;

    public @Nullable Boolean self() {
        if (self == null) return null;
        return self.getValue("SecurityGroupEgress.self");
    }

    /**
     * End range port (or ICMP code if protocol is `icmp`).
     * 
     * The following arguments are optional:
     * 
     * &gt; **Note** Although `cidr_blocks`, `ipv6_cidr_blocks`, `prefix_list_ids`, and `security_groups` are all marked as optional, you _must_ provide one of them in order to configure the destination of the traffic.
     * 
     */
    private UndeferrableValue<Integer> toPort;

    public Integer toPort() {
        if (toPort == null) return null;
        return toPort.getValue("SecurityGroupEgress.toPort");
    }

}
