// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.bedrock;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.bedrock.inputs.AgentAgentGuardrailConfigurationArgs;
import com.pulumi.policypacks.aws.bedrock.inputs.AgentAgentMemoryConfigurationArgs;
import com.pulumi.policypacks.aws.bedrock.inputs.AgentAgentPromptOverrideConfigurationArgs;
import com.pulumi.policypacks.aws.bedrock.inputs.AgentAgentTimeoutsArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:bedrock/agentAgent:AgentAgent")
public final class AgentAgentArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Agents collaboration role. Valid values: `SUPERVISOR`, `SUPERVISOR_ROUTER`, `DISABLED`.
     * 
     */
    private UndeferrableValue<String> agentCollaboration;

    public String agentCollaboration() {
        if (agentCollaboration == null) return null;
        return agentCollaboration.getValue("AgentAgentArgs.agentCollaboration");
    }

    /**
     * Name of the agent.
     * 
     */
    private UndeferrableValue<String> agentName;

    public String agentName() {
        if (agentName == null) return null;
        return agentName.getValue("AgentAgentArgs.agentName");
    }

    /**
     * ARN of the IAM role with permissions to invoke API operations on the agent.
     * 
     */
    private UndeferrableValue<String> agentResourceRoleArn;

    public String agentResourceRoleArn() {
        if (agentResourceRoleArn == null) return null;
        return agentResourceRoleArn.getValue("AgentAgentArgs.agentResourceRoleArn");
    }

    /**
     * ARN of the AWS KMS key that encrypts the agent.
     * 
     */
    private UndeferrableValue<String> customerEncryptionKeyArn;

    public String customerEncryptionKeyArn() {
        if (customerEncryptionKeyArn == null) return null;
        return customerEncryptionKeyArn.getValue("AgentAgentArgs.customerEncryptionKeyArn");
    }

    /**
     * Description of the agent.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("AgentAgentArgs.description");
    }

    /**
     * Foundation model used for orchestration by the agent.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> foundationModel;

    public String foundationModel() {
        if (foundationModel == null) return null;
        return foundationModel.getValue("AgentAgentArgs.foundationModel");
    }

    /**
     * Details about the guardrail associated with the agent. See `guardrail_configuration` Block for details.
     * 
     */
    private UndeferrableValue<List<AgentAgentGuardrailConfigurationArgs>> guardrailConfigurations;

    public List<AgentAgentGuardrailConfigurationArgs> guardrailConfigurations() {
        if (guardrailConfigurations == null) return null;
        return guardrailConfigurations.getValue("AgentAgentArgs.guardrailConfigurations");
    }

    /**
     * Number of seconds for which Amazon Bedrock keeps information about a user&#39;s conversation with the agent. A user interaction remains active for the amount of time specified. If no conversation occurs during this time, the session expires and Amazon Bedrock deletes any data provided before the timeout.
     * 
     */
    private UndeferrableValue<Integer> idleSessionTtlInSeconds;

    public Integer idleSessionTtlInSeconds() {
        if (idleSessionTtlInSeconds == null) return null;
        return idleSessionTtlInSeconds.getValue("AgentAgentArgs.idleSessionTtlInSeconds");
    }

    /**
     * Instructions that tell the agent what it should do and how it should interact with users. The valid range is 40 - 8000 characters.
     * 
     */
    private UndeferrableValue<String> instruction;

    public String instruction() {
        if (instruction == null) return null;
        return instruction.getValue("AgentAgentArgs.instruction");
    }

    /**
     * Configurations for the agent&#39;s ability to retain the conversational context.
     * 
     */
    private UndeferrableValue<List<AgentAgentMemoryConfigurationArgs>> memoryConfigurations;

    public List<AgentAgentMemoryConfigurationArgs> memoryConfigurations() {
        if (memoryConfigurations == null) return null;
        return memoryConfigurations.getValue("AgentAgentArgs.memoryConfigurations");
    }

    /**
     * Whether to prepare the agent after creation or modification. Defaults to `true`.
     * 
     */
    private UndeferrableValue<Boolean> prepareAgent;

    public Boolean prepareAgent() {
        if (prepareAgent == null) return null;
        return prepareAgent.getValue("AgentAgentArgs.prepareAgent");
    }

    /**
     * Configurations to override prompt templates in different parts of an agent sequence. For more information, see [Advanced prompts](https://docs.aws.amazon.com/bedrock/latest/userguide/advanced-prompts.html). See `prompt_override_configuration` Block for details.
     * 
     */
    private UndeferrableValue<List<AgentAgentPromptOverrideConfigurationArgs>> promptOverrideConfigurations;

    public List<AgentAgentPromptOverrideConfigurationArgs> promptOverrideConfigurations() {
        if (promptOverrideConfigurations == null) return null;
        return promptOverrideConfigurations.getValue("AgentAgentArgs.promptOverrideConfigurations");
    }

    /**
     * Whether the in-use check is skipped when deleting the agent.
     * 
     */
    private UndeferrableValue<Boolean> skipResourceInUseCheck;

    public Boolean skipResourceInUseCheck() {
        if (skipResourceInUseCheck == null) return null;
        return skipResourceInUseCheck.getValue("AgentAgentArgs.skipResourceInUseCheck");
    }

    /**
     * Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("AgentAgentArgs.tags");
    }

    private UndeferrableValue<AgentAgentTimeoutsArgs> timeouts;

    public AgentAgentTimeoutsArgs timeouts() {
        if (timeouts == null) return null;
        return timeouts.getValue("AgentAgentArgs.timeouts");
    }

}
