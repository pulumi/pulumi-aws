// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.storagegateway;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.storagegateway.outputs.FileSystemAssociationCacheAttributes;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:storagegateway/fileSystemAssociation:FileSystemAssociation")
public final class FileSystemAssociation extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Amazon Resource Name (ARN) of the newly created file system association.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'FileSystemAssociation.arn' is not present");
    }

    /**
     * The Amazon Resource Name (ARN) of the storage used for the audit logs.
     * 
     */
    @PolicyResourceProperty(name="auditDestinationArn", flag="unknown_auditDestinationArn")
    private @Nullable String value_auditDestinationArn;
    private boolean unknown_auditDestinationArn;
    public @Nullable String auditDestinationArn() {
        if (!unknown_auditDestinationArn) return value_auditDestinationArn;
        throw new UndeferrableValueException("Value 'FileSystemAssociation.auditDestinationArn' is not present");
    }

    /**
     * Refresh cache information. see Cache Attributes for more details.
     * 
     */
    @PolicyResourceProperty(name="cacheAttributes", flag="unknown_cacheAttributes")
    private @Nullable FileSystemAssociationCacheAttributes value_cacheAttributes;
    private boolean unknown_cacheAttributes;
    public @Nullable FileSystemAssociationCacheAttributes cacheAttributes() {
        if (!unknown_cacheAttributes) return value_cacheAttributes;
        throw new UndeferrableValueException("Value 'FileSystemAssociation.cacheAttributes' is not present");
    }

    /**
     * The Amazon Resource Name (ARN) of the gateway.
     * 
     */
    @PolicyResourceProperty(name="gatewayArn", flag="unknown_gatewayArn")
    private String value_gatewayArn;
    private boolean unknown_gatewayArn;
    public String gatewayArn() {
        if (!unknown_gatewayArn) return value_gatewayArn;
        throw new UndeferrableValueException("Value 'FileSystemAssociation.gatewayArn' is not present");
    }

    /**
     * The Amazon Resource Name (ARN) of the Amazon FSx file system to associate with the FSx File Gateway.
     * 
     */
    @PolicyResourceProperty(name="locationArn", flag="unknown_locationArn")
    private String value_locationArn;
    private boolean unknown_locationArn;
    public String locationArn() {
        if (!unknown_locationArn) return value_locationArn;
        throw new UndeferrableValueException("Value 'FileSystemAssociation.locationArn' is not present");
    }

    /**
     * The password of the user credential.
     * 
     */
    @PolicyResourceProperty(name="password", flag="unknown_password")
    private String value_password;
    private boolean unknown_password;
    public String password() {
        if (!unknown_password) return value_password;
        throw new UndeferrableValueException("Value 'FileSystemAssociation.password' is not present");
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'FileSystemAssociation.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'FileSystemAssociation.tagsAll' is not present");
    }

    /**
     * The user name of the user credential that has permission to access the root share of the Amazon FSx file system. The user account must belong to the Amazon FSx delegated admin user group.
     * 
     */
    @PolicyResourceProperty(name="username", flag="unknown_username")
    private String value_username;
    private boolean unknown_username;
    public String username() {
        if (!unknown_username) return value_username;
        throw new UndeferrableValueException("Value 'FileSystemAssociation.username' is not present");
    }

}
