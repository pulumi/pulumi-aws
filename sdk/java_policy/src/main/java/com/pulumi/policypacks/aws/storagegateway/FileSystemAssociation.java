// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.storagegateway;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.storagegateway.outputs.FileSystemAssociationCacheAttributes;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:storagegateway/fileSystemAssociation:FileSystemAssociation")
public final class FileSystemAssociation extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Amazon Resource Name (ARN) of the newly created file system association.
     * 
     */
    private UndeferrableValue<String> arn;

    public String arn() {
        if (arn == null) return null;
        return arn.getValue("FileSystemAssociation.arn");
    }

    /**
     * The Amazon Resource Name (ARN) of the storage used for the audit logs.
     * 
     */
    private @Nullable UndeferrableValue<String> auditDestinationArn;

    public @Nullable String auditDestinationArn() {
        if (auditDestinationArn == null) return null;
        return auditDestinationArn.getValue("FileSystemAssociation.auditDestinationArn");
    }

    /**
     * Refresh cache information. see Cache Attributes for more details.
     * 
     */
    private @Nullable UndeferrableValue<FileSystemAssociationCacheAttributes> cacheAttributes;

    public @Nullable FileSystemAssociationCacheAttributes cacheAttributes() {
        if (cacheAttributes == null) return null;
        return cacheAttributes.getValue("FileSystemAssociation.cacheAttributes");
    }

    /**
     * The Amazon Resource Name (ARN) of the gateway.
     * 
     */
    private UndeferrableValue<String> gatewayArn;

    public String gatewayArn() {
        if (gatewayArn == null) return null;
        return gatewayArn.getValue("FileSystemAssociation.gatewayArn");
    }

    /**
     * The Amazon Resource Name (ARN) of the Amazon FSx file system to associate with the FSx File Gateway.
     * 
     */
    private UndeferrableValue<String> locationArn;

    public String locationArn() {
        if (locationArn == null) return null;
        return locationArn.getValue("FileSystemAssociation.locationArn");
    }

    /**
     * The password of the user credential.
     * 
     */
    private UndeferrableValue<String> password;

    public String password() {
        if (password == null) return null;
        return password.getValue("FileSystemAssociation.password");
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private @Nullable UndeferrableValue<Map<String,String>> tags;

    public @Nullable Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("FileSystemAssociation.tags");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    private UndeferrableValue<Map<String,String>> tagsAll;

    public Map<String,String> tagsAll() {
        if (tagsAll == null) return null;
        return tagsAll.getValue("FileSystemAssociation.tagsAll");
    }

    /**
     * The user name of the user credential that has permission to access the root share of the Amazon FSx file system. The user account must belong to the Amazon FSx delegated admin user group.
     * 
     */
    private UndeferrableValue<String> username;

    public String username() {
        if (username == null) return null;
        return username.getValue("FileSystemAssociation.username");
    }

}
