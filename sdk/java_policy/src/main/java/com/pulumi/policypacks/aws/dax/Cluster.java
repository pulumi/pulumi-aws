// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.dax;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.dax.ClusterNode;
import com.pulumi.policypacks.aws.dax.ClusterServerSideEncryption;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;


@PolicyResourceType(type="aws:dax/cluster:Cluster")
public final class Cluster extends com.pulumi.resources.PolicyResource {

    /**
     * The ARN of the DAX cluster
     * 
     */
    public String arn;



    /**
     * List of Availability Zones in which the
     * nodes will be created
     * 
     */
    public List<String> availabilityZones;



    /**
     * The DNS name of the DAX cluster without the port appended
     * 
     */
    public String clusterAddress;



    /**
     * The type of encryption the
     * cluster&#39;s endpoint should support. Valid values are: `NONE` and `TLS`.
     * Default value is `NONE`.
     * 
     */
    public String clusterEndpointEncryptionType;



    /**
     * Group identifier. DAX converts this name to
     * lowercase
     * 
     */
    public String clusterName;



    /**
     * The configuration endpoint for this DAX cluster,
     * consisting of a DNS name and a port number
     * 
     */
    public String configurationEndpoint;



    /**
     * Description for the cluster
     * 
     */
    public String description;



    /**
     * A valid Amazon Resource Name (ARN) that identifies
     * an IAM role. At runtime, DAX will assume this role and use the role&#39;s
     * permissions to access DynamoDB on your behalf
     * 
     */
    public String iamRoleArn;



    /**
     * Specifies the weekly time range for when
     * maintenance on the cluster is performed. The format is `ddd:hh24:mi-ddd:hh24:mi`
     * (24H Clock UTC). The minimum maintenance window is a 60 minute period. Example:
     * `sun:05:00-sun:09:00`
     * 
     */
    public String maintenanceWindow;



    /**
     * The compute and memory capacity of the nodes. See
     * [Nodes](http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DAX.concepts.cluster.html#DAX.concepts.nodes) for supported node types
     * 
     */
    public String nodeType;



    /**
     * List of node objects including `id`, `address`, `port` and
     * `availability_zone`. Referenceable e.g., as
     * `${aws_dax_cluster.test.nodes.0.address}`
     * 
     */
    public List<ClusterNode> nodes;



    /**
     * An Amazon Resource Name (ARN) of an
     * SNS topic to send DAX notifications to. Example:
     * `arn:aws:sns:us-east-1:012345678999:my_sns_topic`
     * 
     */
    public String notificationTopicArn;



    /**
     * Name of the parameter group to associate
     * with this DAX cluster
     * 
     */
    public String parameterGroupName;



    /**
     * The port used by the configuration endpoint
     * 
     */
    public Integer port;



    /**
     * The number of nodes in the DAX cluster. A
     * replication factor of 1 will create a single-node cluster, without any read
     * replicas
     * 
     */
    public Integer replicationFactor;



    /**
     * One or more VPC security groups associated
     * with the cluster
     * 
     */
    public List<String> securityGroupIds;



    /**
     * Encrypt at rest options
     * 
     */
    public ClusterServerSideEncryption serverSideEncryption;



    /**
     * Name of the subnet group to be used for the
     * cluster
     * 
     */
    public String subnetGroupName;



    /**
     * A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



}
