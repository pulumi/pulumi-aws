// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.bedrock;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.bedrock.inputs.AgentAgentAliasRoutingConfigurationArgs;
import com.pulumi.policypacks.aws.bedrock.inputs.AgentAgentAliasTimeoutsArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:bedrock/agentAgentAlias:AgentAgentAlias")
public final class AgentAgentAliasArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Name of the alias.
     * 
     */
    @PolicyResourceProperty(name="agentAliasName", flag="unknown_agentAliasName")
    private String value_agentAliasName;
    private boolean unknown_agentAliasName;
    public String agentAliasName() {
        if (!unknown_agentAliasName) return value_agentAliasName;
        throw new UndeferrableValueException("Value 'AgentAgentAliasArgs.agentAliasName' is not present");
    }

    /**
     * Identifier of the agent to create an alias for.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="agentId", flag="unknown_agentId")
    private String value_agentId;
    private boolean unknown_agentId;
    public String agentId() {
        if (!unknown_agentId) return value_agentId;
        throw new UndeferrableValueException("Value 'AgentAgentAliasArgs.agentId' is not present");
    }

    /**
     * Description of the alias.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private String value_description;
    private boolean unknown_description;
    public String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'AgentAgentAliasArgs.description' is not present");
    }

    /**
     * Details about the routing configuration of the alias. See `routing_configuration` Block for details.
     * 
     */
    @PolicyResourceProperty(name="routingConfigurations", flag="unknown_routingConfigurations")
    private List<AgentAgentAliasRoutingConfigurationArgs> value_routingConfigurations;
    private boolean unknown_routingConfigurations;
    public List<AgentAgentAliasRoutingConfigurationArgs> routingConfigurations() {
        if (!unknown_routingConfigurations) return value_routingConfigurations;
        throw new UndeferrableValueException("Value 'AgentAgentAliasArgs.routingConfigurations' is not present");
    }

    /**
     * Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'AgentAgentAliasArgs.tags' is not present");
    }

    @PolicyResourceProperty(name="timeouts", flag="unknown_timeouts")
    private AgentAgentAliasTimeoutsArgs value_timeouts;
    private boolean unknown_timeouts;
    public AgentAgentAliasTimeoutsArgs timeouts() {
        if (!unknown_timeouts) return value_timeouts;
        throw new UndeferrableValueException("Value 'AgentAgentAliasArgs.timeouts' is not present");
    }

}
