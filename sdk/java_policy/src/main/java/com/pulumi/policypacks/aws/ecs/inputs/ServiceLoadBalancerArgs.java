// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ecs.inputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class ServiceLoadBalancerArgs {

    /**
     * Name of the container to associate with the load balancer (as it appears in a container definition).
     * 
     */
    private UndeferrableValue<String> containerName;

    public String containerName() {
        if (containerName == null) return null;
        return containerName.getValue("ServiceLoadBalancerArgs.containerName");
    }

    /**
     * Port on the container to associate with the load balancer.
     * 
     * &gt; **Version note:** Multiple `load_balancer` configuration block support was added in version 2.22.0 of the provider. This allows configuration of [ECS service support for multiple target groups](https://aws.amazon.com/about-aws/whats-new/2019/07/amazon-ecs-services-now-support-multiple-load-balancer-target-groups/).
     * 
     */
    private UndeferrableValue<Integer> containerPort;

    public Integer containerPort() {
        if (containerPort == null) return null;
        return containerPort.getValue("ServiceLoadBalancerArgs.containerPort");
    }

    /**
     * Name of the ELB (Classic) to associate with the service.
     * 
     */
    private UndeferrableValue<String> elbName;

    public String elbName() {
        if (elbName == null) return null;
        return elbName.getValue("ServiceLoadBalancerArgs.elbName");
    }

    /**
     * ARN of the Load Balancer target group to associate with the service.
     * 
     */
    private UndeferrableValue<String> targetGroupArn;

    public String targetGroupArn() {
        if (targetGroupArn == null) return null;
        return targetGroupArn.getValue("ServiceLoadBalancerArgs.targetGroupArn");
    }

}
