// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.kinesis;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.kinesis.outputs.AnalyticsApplicationCloudwatchLoggingOptions;
import com.pulumi.policypacks.aws.kinesis.outputs.AnalyticsApplicationInputs;
import com.pulumi.policypacks.aws.kinesis.outputs.AnalyticsApplicationOutput;
import com.pulumi.policypacks.aws.kinesis.outputs.AnalyticsApplicationReferenceDataSources;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:kinesis/analyticsApplication:AnalyticsApplication")
public final class AnalyticsApplication extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The ARN of the Kinesis Analytics Appliation.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'AnalyticsApplication.arn' is not present");
    }

    /**
     * The CloudWatch log stream options to monitor application errors.
     * See CloudWatch Logging Options below for more details.
     * 
     */
    @PolicyResourceProperty(name="cloudwatchLoggingOptions", flag="unknown_cloudwatchLoggingOptions")
    private @Nullable AnalyticsApplicationCloudwatchLoggingOptions value_cloudwatchLoggingOptions;
    private boolean unknown_cloudwatchLoggingOptions;
    public @Nullable AnalyticsApplicationCloudwatchLoggingOptions cloudwatchLoggingOptions() {
        if (!unknown_cloudwatchLoggingOptions) return value_cloudwatchLoggingOptions;
        throw new UndeferrableValueException("Value 'AnalyticsApplication.cloudwatchLoggingOptions' is not present");
    }

    /**
     * SQL Code to transform input data, and generate output.
     * 
     */
    @PolicyResourceProperty(name="code", flag="unknown_code")
    private @Nullable String value_code;
    private boolean unknown_code;
    public @Nullable String code() {
        if (!unknown_code) return value_code;
        throw new UndeferrableValueException("Value 'AnalyticsApplication.code' is not present");
    }

    /**
     * The Timestamp when the application version was created.
     * 
     */
    @PolicyResourceProperty(name="createTimestamp", flag="unknown_createTimestamp")
    private String value_createTimestamp;
    private boolean unknown_createTimestamp;
    public String createTimestamp() {
        if (!unknown_createTimestamp) return value_createTimestamp;
        throw new UndeferrableValueException("Value 'AnalyticsApplication.createTimestamp' is not present");
    }

    /**
     * Description of the application.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private @Nullable String value_description;
    private boolean unknown_description;
    public @Nullable String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'AnalyticsApplication.description' is not present");
    }

    /**
     * Input configuration of the application. See Inputs below for more details.
     * 
     */
    @PolicyResourceProperty(name="inputs", flag="unknown_inputs")
    private @Nullable AnalyticsApplicationInputs value_inputs;
    private boolean unknown_inputs;
    public @Nullable AnalyticsApplicationInputs inputs() {
        if (!unknown_inputs) return value_inputs;
        throw new UndeferrableValueException("Value 'AnalyticsApplication.inputs' is not present");
    }

    /**
     * The Timestamp when the application was last updated.
     * 
     */
    @PolicyResourceProperty(name="lastUpdateTimestamp", flag="unknown_lastUpdateTimestamp")
    private String value_lastUpdateTimestamp;
    private boolean unknown_lastUpdateTimestamp;
    public String lastUpdateTimestamp() {
        if (!unknown_lastUpdateTimestamp) return value_lastUpdateTimestamp;
        throw new UndeferrableValueException("Value 'AnalyticsApplication.lastUpdateTimestamp' is not present");
    }

    /**
     * Name of the Kinesis Analytics Application.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'AnalyticsApplication.name' is not present");
    }

    /**
     * Output destination configuration of the application. See Outputs below for more details.
     * 
     */
    @PolicyResourceProperty(name="outputs", flag="unknown_outputs")
    private @Nullable List<AnalyticsApplicationOutput> value_outputs;
    private boolean unknown_outputs;
    public @Nullable List<AnalyticsApplicationOutput> outputs() {
        if (!unknown_outputs) return value_outputs;
        throw new UndeferrableValueException("Value 'AnalyticsApplication.outputs' is not present");
    }

    /**
     * An S3 Reference Data Source for the application.
     * See Reference Data Sources below for more details.
     * 
     */
    @PolicyResourceProperty(name="referenceDataSources", flag="unknown_referenceDataSources")
    private @Nullable AnalyticsApplicationReferenceDataSources value_referenceDataSources;
    private boolean unknown_referenceDataSources;
    public @Nullable AnalyticsApplicationReferenceDataSources referenceDataSources() {
        if (!unknown_referenceDataSources) return value_referenceDataSources;
        throw new UndeferrableValueException("Value 'AnalyticsApplication.referenceDataSources' is not present");
    }

    /**
     * Whether to start or stop the Kinesis Analytics Application. To start an application, an input with a defined `starting_position` must be configured.
     * To modify an application&#39;s starting position, first stop the application by setting `start_application = false`, then update `starting_position` and set `start_application = true`.
     * 
     */
    @PolicyResourceProperty(name="startApplication", flag="unknown_startApplication")
    private @Nullable Boolean value_startApplication;
    private boolean unknown_startApplication;
    public @Nullable Boolean startApplication() {
        if (!unknown_startApplication) return value_startApplication;
        throw new UndeferrableValueException("Value 'AnalyticsApplication.startApplication' is not present");
    }

    /**
     * The Status of the application.
     * 
     */
    @PolicyResourceProperty(name="status", flag="unknown_status")
    private String value_status;
    private boolean unknown_status;
    public String status() {
        if (!unknown_status) return value_status;
        throw new UndeferrableValueException("Value 'AnalyticsApplication.status' is not present");
    }

    /**
     * Key-value map of tags for the Kinesis Analytics Application. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'AnalyticsApplication.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'AnalyticsApplication.tagsAll' is not present");
    }

    /**
     * The Version of the application.
     * 
     */
    @PolicyResourceProperty(name="version", flag="unknown_version")
    private Integer value_version;
    private boolean unknown_version;
    public Integer version() {
        if (!unknown_version) return value_version;
        throw new UndeferrableValueException("Value 'AnalyticsApplication.version' is not present");
    }

}
