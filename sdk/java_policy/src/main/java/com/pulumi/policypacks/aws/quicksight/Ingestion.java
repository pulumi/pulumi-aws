// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.quicksight;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;


@PolicyResourceType(type="aws:quicksight/ingestion:Ingestion")
public final class Ingestion extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * ARN of the Ingestion.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'Ingestion.arn' is not present");
    }

    /**
     * AWS account ID.
     * 
     */
    @PolicyResourceProperty(name="awsAccountId", flag="unknown_awsAccountId")
    private String value_awsAccountId;
    private boolean unknown_awsAccountId;
    public String awsAccountId() {
        if (!unknown_awsAccountId) return value_awsAccountId;
        throw new UndeferrableValueException("Value 'Ingestion.awsAccountId' is not present");
    }

    /**
     * ID of the dataset used in the ingestion.
     * 
     */
    @PolicyResourceProperty(name="dataSetId", flag="unknown_dataSetId")
    private String value_dataSetId;
    private boolean unknown_dataSetId;
    public String dataSetId() {
        if (!unknown_dataSetId) return value_dataSetId;
        throw new UndeferrableValueException("Value 'Ingestion.dataSetId' is not present");
    }

    /**
     * ID for the ingestion.
     * 
     */
    @PolicyResourceProperty(name="ingestionId", flag="unknown_ingestionId")
    private String value_ingestionId;
    private boolean unknown_ingestionId;
    public String ingestionId() {
        if (!unknown_ingestionId) return value_ingestionId;
        throw new UndeferrableValueException("Value 'Ingestion.ingestionId' is not present");
    }

    /**
     * Ingestion status.
     * 
     */
    @PolicyResourceProperty(name="ingestionStatus", flag="unknown_ingestionStatus")
    private String value_ingestionStatus;
    private boolean unknown_ingestionStatus;
    public String ingestionStatus() {
        if (!unknown_ingestionStatus) return value_ingestionStatus;
        throw new UndeferrableValueException("Value 'Ingestion.ingestionStatus' is not present");
    }

    /**
     * Type of ingestion to be created. Valid values are `INCREMENTAL_REFRESH` and `FULL_REFRESH`.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="ingestionType", flag="unknown_ingestionType")
    private String value_ingestionType;
    private boolean unknown_ingestionType;
    public String ingestionType() {
        if (!unknown_ingestionType) return value_ingestionType;
        throw new UndeferrableValueException("Value 'Ingestion.ingestionType' is not present");
    }

}
