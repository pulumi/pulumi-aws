// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.dynamodb;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:dynamodb/tableReplica:TableReplica")
public final class TableReplica extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * ARN of the table replica.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'TableReplica.arn' is not present");
    }

    /**
     * Whether deletion protection is enabled (true) or disabled (false) on the table replica.
     * 
     */
    @PolicyResourceProperty(name="deletionProtectionEnabled", flag="unknown_deletionProtectionEnabled")
    private Boolean value_deletionProtectionEnabled;
    private boolean unknown_deletionProtectionEnabled;
    public Boolean deletionProtectionEnabled() {
        if (!unknown_deletionProtectionEnabled) return value_deletionProtectionEnabled;
        throw new UndeferrableValueException("Value 'TableReplica.deletionProtectionEnabled' is not present");
    }

    /**
     * ARN of the _main_ or global table which this resource will replicate.
     * 
     * Optional arguments:
     * 
     */
    @PolicyResourceProperty(name="globalTableArn", flag="unknown_globalTableArn")
    private String value_globalTableArn;
    private boolean unknown_globalTableArn;
    public String globalTableArn() {
        if (!unknown_globalTableArn) return value_globalTableArn;
        throw new UndeferrableValueException("Value 'TableReplica.globalTableArn' is not present");
    }

    /**
     * ARN of the CMK that should be used for the AWS KMS encryption. This argument should only be used if the key is different from the default KMS-managed DynamoDB key, `alias/aws/dynamodb`. **Note:** This attribute will _not_ be populated with the ARN of _default_ keys.
     * 
     */
    @PolicyResourceProperty(name="kmsKeyArn", flag="unknown_kmsKeyArn")
    private String value_kmsKeyArn;
    private boolean unknown_kmsKeyArn;
    public String kmsKeyArn() {
        if (!unknown_kmsKeyArn) return value_kmsKeyArn;
        throw new UndeferrableValueException("Value 'TableReplica.kmsKeyArn' is not present");
    }

    /**
     * Whether to enable Point In Time Recovery for the table replica. Default is `false`.
     * 
     */
    @PolicyResourceProperty(name="pointInTimeRecovery", flag="unknown_pointInTimeRecovery")
    private @Nullable Boolean value_pointInTimeRecovery;
    private boolean unknown_pointInTimeRecovery;
    public @Nullable Boolean pointInTimeRecovery() {
        if (!unknown_pointInTimeRecovery) return value_pointInTimeRecovery;
        throw new UndeferrableValueException("Value 'TableReplica.pointInTimeRecovery' is not present");
    }

    /**
     * Storage class of the table replica. Valid values are `STANDARD` and `STANDARD_INFREQUENT_ACCESS`. If not used, the table replica will use the same class as the global table.
     * 
     */
    @PolicyResourceProperty(name="tableClassOverride", flag="unknown_tableClassOverride")
    private @Nullable String value_tableClassOverride;
    private boolean unknown_tableClassOverride;
    public @Nullable String tableClassOverride() {
        if (!unknown_tableClassOverride) return value_tableClassOverride;
        throw new UndeferrableValueException("Value 'TableReplica.tableClassOverride' is not present");
    }

    /**
     * Map of tags to populate on the created table. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'TableReplica.tags' is not present");
    }

    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'TableReplica.tagsAll' is not present");
    }

}
