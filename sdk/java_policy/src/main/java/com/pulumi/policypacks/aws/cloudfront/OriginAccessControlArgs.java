// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.cloudfront;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:cloudfront/originAccessControl:OriginAccessControl")
public final class OriginAccessControlArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The description of the Origin Access Control. Defaults to &#34;Managed by Pulumi&#34; if omitted.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("OriginAccessControlArgs.description");
    }

    /**
     * A name that identifies the Origin Access Control.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("OriginAccessControlArgs.name");
    }

    /**
     * The type of origin that this Origin Access Control is for. Valid values are `lambda`, `mediapackagev2`, `mediastore`, and `s3`.
     * 
     */
    private UndeferrableValue<String> originAccessControlOriginType;

    public String originAccessControlOriginType() {
        if (originAccessControlOriginType == null) return null;
        return originAccessControlOriginType.getValue("OriginAccessControlArgs.originAccessControlOriginType");
    }

    /**
     * Specifies which requests CloudFront signs. Specify `always` for the most common use case. Allowed values: `always`, `never`, and `no-override`.
     * 
     */
    private UndeferrableValue<String> signingBehavior;

    public String signingBehavior() {
        if (signingBehavior == null) return null;
        return signingBehavior.getValue("OriginAccessControlArgs.signingBehavior");
    }

    /**
     * Determines how CloudFront signs (authenticates) requests. The only valid value is `sigv4`.
     * 
     */
    private UndeferrableValue<String> signingProtocol;

    public String signingProtocol() {
        if (signingProtocol == null) return null;
        return signingProtocol.getValue("OriginAccessControlArgs.signingProtocol");
    }

}
