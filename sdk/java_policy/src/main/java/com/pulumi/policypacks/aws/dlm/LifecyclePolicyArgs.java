// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.dlm;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.dlm.inputs.LifecyclePolicyPolicyDetailsArgs;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:dlm/lifecyclePolicy:LifecyclePolicy")
public final class LifecyclePolicyArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * A description for the DLM lifecycle policy.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("LifecyclePolicyArgs.description");
    }

    /**
     * The ARN of an IAM role that is able to be assumed by the DLM service.
     * 
     */
    private UndeferrableValue<String> executionRoleArn;

    public String executionRoleArn() {
        if (executionRoleArn == null) return null;
        return executionRoleArn.getValue("LifecyclePolicyArgs.executionRoleArn");
    }

    /**
     * See the `policy_details` configuration block. Max of 1.
     * 
     */
    private UndeferrableValue<LifecyclePolicyPolicyDetailsArgs> policyDetails;

    public LifecyclePolicyPolicyDetailsArgs policyDetails() {
        if (policyDetails == null) return null;
        return policyDetails.getValue("LifecyclePolicyArgs.policyDetails");
    }

    /**
     * Whether the lifecycle policy should be enabled or disabled. `ENABLED` or `DISABLED` are valid values. Defaults to `ENABLED`.
     * 
     */
    private UndeferrableValue<String> state;

    public String state() {
        if (state == null) return null;
        return state.getValue("LifecyclePolicyArgs.state");
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("LifecyclePolicyArgs.tags");
    }

}
