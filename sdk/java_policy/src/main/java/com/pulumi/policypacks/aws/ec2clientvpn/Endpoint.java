// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2clientvpn;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.ec2clientvpn.EndpointAuthenticationOption;
import com.pulumi.policypacks.aws.ec2clientvpn.EndpointClientConnectOptions;
import com.pulumi.policypacks.aws.ec2clientvpn.EndpointClientLoginBannerOptions;
import com.pulumi.policypacks.aws.ec2clientvpn.EndpointConnectionLogOptions;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;


@PolicyResourceType(type="aws:ec2clientvpn/endpoint:Endpoint")
public final class Endpoint extends com.pulumi.resources.PolicyResource {

    /**
     * The ARN of the Client VPN endpoint.
     * 
     */
    public String arn;



    /**
     * Information about the authentication method to be used to authenticate clients.
     * 
     */
    public List<EndpointAuthenticationOption> authenticationOptions;



    /**
     * The IPv4 address range, in CIDR notation, from which to assign client IP addresses. The address range cannot overlap with the local CIDR of the VPC in which the associated subnet is located, or the routes that you add manually. The address range cannot be changed after the Client VPN endpoint has been created. The CIDR block should be /22 or greater.
     * 
     */
    public String clientCidrBlock;



    /**
     * The options for managing connection authorization for new client connections.
     * 
     */
    public EndpointClientConnectOptions clientConnectOptions;



    /**
     * Options for enabling a customizable text banner that will be displayed on AWS provided clients when a VPN session is established.
     * 
     */
    public EndpointClientLoginBannerOptions clientLoginBannerOptions;



    /**
     * Information about the client connection logging options.
     * 
     */
    public EndpointConnectionLogOptions connectionLogOptions;



    /**
     * A brief description of the Client VPN endpoint.
     * 
     */
    public String description;



    /**
     * Indicates whether the client VPN session is disconnected after the maximum `session_timeout_hours` is reached. If `true`, users are prompted to reconnect client VPN. If `false`, client VPN attempts to reconnect automatically. The default value is `false`.
     * 
     */
    public Boolean disconnectOnSessionTimeout;



    /**
     * The DNS name to be used by clients when establishing their VPN session.
     * 
     */
    public String dnsName;



    /**
     * Information about the DNS servers to be used for DNS resolution. A Client VPN endpoint can have up to two DNS servers. If no DNS server is specified, the DNS address of the connecting device is used.
     * 
     */
    public List<String> dnsServers;



    /**
     * The IDs of one or more security groups to apply to the target network. You must also specify the ID of the VPC that contains the security groups.
     * 
     */
    public List<String> securityGroupIds;



    /**
     * Specify whether to enable the self-service portal for the Client VPN endpoint. Values can be `enabled` or `disabled`. Default value is `disabled`.
     * 
     */
    public String selfServicePortal;



    /**
     * The URL of the self-service portal.
     * 
     */
    public String selfServicePortalUrl;



    /**
     * The ARN of the ACM server certificate.
     * 
     */
    public String serverCertificateArn;



    /**
     * The maximum session duration is a trigger by which end-users are required to re-authenticate prior to establishing a VPN session. Default value is `24` - Valid values: `8 | 10 | 12 | 24`
     * 
     */
    public Integer sessionTimeoutHours;



    /**
     * Indicates whether split-tunnel is enabled on VPN endpoint. Default value is `false`.
     * 
     */
    public Boolean splitTunnel;



    /**
     * A mapping of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



    /**
     * The transport protocol to be used by the VPN session. Default value is `udp`.
     * 
     */
    public String transportProtocol;



    /**
     * The ID of the VPC to associate with the Client VPN endpoint. If no security group IDs are specified in the request, the default security group for the VPC is applied.
     * 
     */
    public String vpcId;



    /**
     * The port number for the Client VPN endpoint. Valid values are `443` and `1194`. Default value is `443`.
     * 
     */
    public Integer vpnPort;



}
