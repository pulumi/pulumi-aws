// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.licensemanager;

import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;


@PolicyResourceType(type="aws:licensemanager/licenseConfiguration:LicenseConfiguration")
public final class LicenseConfiguration extends com.pulumi.resources.PolicyResource {

    /**
     * The license configuration ARN.
     * 
     */
    public String arn;



    /**
     * Description of the license configuration.
     * 
     */
    public String description;



    /**
     * Number of licenses managed by the license configuration.
     * 
     */
    public Integer licenseCount;



    /**
     * Sets the number of available licenses as a hard limit.
     * 
     */
    public Boolean licenseCountHardLimit;



    /**
     * Dimension to use to track license inventory. Specify either `vCPU`, `Instance`, `Core` or `Socket`.
     * 
     */
    public String licenseCountingType;



    /**
     * Array of configured License Manager rules.
     * 
     */
    public List<String> licenseRules;



    /**
     * Name of the license configuration.
     * 
     */
    public String name;



    /**
     * Account ID of the owner of the license configuration.
     * 
     */
    public String ownerAccountId;



    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



}
