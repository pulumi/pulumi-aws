// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.sagemaker.inputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.sagemaker.inputs.ModelPrimaryContainerModelDataSourceS3DataSourceModelAccessConfigArgs;
import java.lang.String;
import javax.annotation.Nullable;


public final class ModelPrimaryContainerModelDataSourceS3DataSourceArgs {

    /**
     * How the model data is prepared. Allowed values are: `None` and `Gzip`.
     * 
     */
    private UndeferrableValue<String> compressionType;

    public String compressionType() {
        if (compressionType == null) return null;
        return compressionType.getValue("ModelPrimaryContainerModelDataSourceS3DataSourceArgs.compressionType");
    }

    /**
     * Specifies the access configuration file for the ML model. You can explicitly accept the model end-user license agreement (EULA) within the [`model_access_config` configuration block]. see Model Access Config.
     * 
     */
    private UndeferrableValue<ModelPrimaryContainerModelDataSourceS3DataSourceModelAccessConfigArgs> modelAccessConfig;

    public ModelPrimaryContainerModelDataSourceS3DataSourceModelAccessConfigArgs modelAccessConfig() {
        if (modelAccessConfig == null) return null;
        return modelAccessConfig.getValue("ModelPrimaryContainerModelDataSourceS3DataSourceArgs.modelAccessConfig");
    }

    /**
     * The type of model data to deploy. Allowed values are: `S3Object` and `S3Prefix`.
     * 
     */
    private UndeferrableValue<String> s3DataType;

    public String s3DataType() {
        if (s3DataType == null) return null;
        return s3DataType.getValue("ModelPrimaryContainerModelDataSourceS3DataSourceArgs.s3DataType");
    }

    /**
     * The S3 path of model data to deploy.
     * 
     */
    private UndeferrableValue<String> s3Uri;

    public String s3Uri() {
        if (s3Uri == null) return null;
        return s3Uri.getValue("ModelPrimaryContainerModelDataSourceS3DataSourceArgs.s3Uri");
    }

}
