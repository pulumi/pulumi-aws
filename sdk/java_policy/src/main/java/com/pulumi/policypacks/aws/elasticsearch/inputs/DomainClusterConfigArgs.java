// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.elasticsearch.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.elasticsearch.inputs.DomainClusterConfigColdStorageOptionsArgs;
import com.pulumi.policypacks.aws.elasticsearch.inputs.DomainClusterConfigZoneAwarenessConfigArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class DomainClusterConfigArgs {

    /**
     * Configuration block containing cold storage configuration. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="coldStorageOptions", flag="unknown_coldStorageOptions")
    private DomainClusterConfigColdStorageOptionsArgs value_coldStorageOptions;
    private boolean unknown_coldStorageOptions;
    public DomainClusterConfigColdStorageOptionsArgs coldStorageOptions() {
        if (!unknown_coldStorageOptions) return value_coldStorageOptions;
        throw new UndeferrableValueException("Value 'DomainClusterConfigArgs.coldStorageOptions' is not present");
    }

    /**
     * Number of dedicated main nodes in the cluster.
     * 
     */
    @PolicyResourceProperty(name="dedicatedMasterCount", flag="unknown_dedicatedMasterCount")
    private Integer value_dedicatedMasterCount;
    private boolean unknown_dedicatedMasterCount;
    public Integer dedicatedMasterCount() {
        if (!unknown_dedicatedMasterCount) return value_dedicatedMasterCount;
        throw new UndeferrableValueException("Value 'DomainClusterConfigArgs.dedicatedMasterCount' is not present");
    }

    /**
     * Whether dedicated main nodes are enabled for the cluster.
     * 
     */
    @PolicyResourceProperty(name="dedicatedMasterEnabled", flag="unknown_dedicatedMasterEnabled")
    private Boolean value_dedicatedMasterEnabled;
    private boolean unknown_dedicatedMasterEnabled;
    public Boolean dedicatedMasterEnabled() {
        if (!unknown_dedicatedMasterEnabled) return value_dedicatedMasterEnabled;
        throw new UndeferrableValueException("Value 'DomainClusterConfigArgs.dedicatedMasterEnabled' is not present");
    }

    /**
     * Instance type of the dedicated main nodes in the cluster.
     * 
     */
    @PolicyResourceProperty(name="dedicatedMasterType", flag="unknown_dedicatedMasterType")
    private String value_dedicatedMasterType;
    private boolean unknown_dedicatedMasterType;
    public String dedicatedMasterType() {
        if (!unknown_dedicatedMasterType) return value_dedicatedMasterType;
        throw new UndeferrableValueException("Value 'DomainClusterConfigArgs.dedicatedMasterType' is not present");
    }

    /**
     * Number of instances in the cluster.
     * 
     */
    @PolicyResourceProperty(name="instanceCount", flag="unknown_instanceCount")
    private Integer value_instanceCount;
    private boolean unknown_instanceCount;
    public Integer instanceCount() {
        if (!unknown_instanceCount) return value_instanceCount;
        throw new UndeferrableValueException("Value 'DomainClusterConfigArgs.instanceCount' is not present");
    }

    /**
     * Instance type of data nodes in the cluster.
     * 
     */
    @PolicyResourceProperty(name="instanceType", flag="unknown_instanceType")
    private String value_instanceType;
    private boolean unknown_instanceType;
    public String instanceType() {
        if (!unknown_instanceType) return value_instanceType;
        throw new UndeferrableValueException("Value 'DomainClusterConfigArgs.instanceType' is not present");
    }

    /**
     * Number of warm nodes in the cluster. Valid values are between `2` and `150`. `warm_count` can be only and must be set when `warm_enabled` is set to `true`.
     * 
     */
    @PolicyResourceProperty(name="warmCount", flag="unknown_warmCount")
    private Integer value_warmCount;
    private boolean unknown_warmCount;
    public Integer warmCount() {
        if (!unknown_warmCount) return value_warmCount;
        throw new UndeferrableValueException("Value 'DomainClusterConfigArgs.warmCount' is not present");
    }

    /**
     * Whether to enable warm storage.
     * 
     */
    @PolicyResourceProperty(name="warmEnabled", flag="unknown_warmEnabled")
    private Boolean value_warmEnabled;
    private boolean unknown_warmEnabled;
    public Boolean warmEnabled() {
        if (!unknown_warmEnabled) return value_warmEnabled;
        throw new UndeferrableValueException("Value 'DomainClusterConfigArgs.warmEnabled' is not present");
    }

    /**
     * Instance type for the Elasticsearch cluster&#39;s warm nodes. Valid values are `ultrawarm1.medium.elasticsearch`, `ultrawarm1.large.elasticsearch` and `ultrawarm1.xlarge.elasticsearch`. `warm_type` can be only and must be set when `warm_enabled` is set to `true`.
     * 
     */
    @PolicyResourceProperty(name="warmType", flag="unknown_warmType")
    private String value_warmType;
    private boolean unknown_warmType;
    public String warmType() {
        if (!unknown_warmType) return value_warmType;
        throw new UndeferrableValueException("Value 'DomainClusterConfigArgs.warmType' is not present");
    }

    /**
     * Configuration block containing zone awareness settings. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="zoneAwarenessConfig", flag="unknown_zoneAwarenessConfig")
    private DomainClusterConfigZoneAwarenessConfigArgs value_zoneAwarenessConfig;
    private boolean unknown_zoneAwarenessConfig;
    public DomainClusterConfigZoneAwarenessConfigArgs zoneAwarenessConfig() {
        if (!unknown_zoneAwarenessConfig) return value_zoneAwarenessConfig;
        throw new UndeferrableValueException("Value 'DomainClusterConfigArgs.zoneAwarenessConfig' is not present");
    }

    /**
     * Whether zone awareness is enabled, set to `true` for multi-az deployment. To enable awareness with three Availability Zones, the `availability_zone_count` within the `zone_awareness_config` must be set to `3`.
     * 
     */
    @PolicyResourceProperty(name="zoneAwarenessEnabled", flag="unknown_zoneAwarenessEnabled")
    private Boolean value_zoneAwarenessEnabled;
    private boolean unknown_zoneAwarenessEnabled;
    public Boolean zoneAwarenessEnabled() {
        if (!unknown_zoneAwarenessEnabled) return value_zoneAwarenessEnabled;
        throw new UndeferrableValueException("Value 'DomainClusterConfigArgs.zoneAwarenessEnabled' is not present");
    }

}
