// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.connect.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.connect.inputs.QuickConnectQuickConnectConfigPhoneConfigArgs;
import com.pulumi.policypacks.aws.connect.inputs.QuickConnectQuickConnectConfigQueueConfigArgs;
import com.pulumi.policypacks.aws.connect.inputs.QuickConnectQuickConnectConfigUserConfigArgs;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class QuickConnectQuickConnectConfigArgs {

    /**
     * Specifies the phone configuration of the Quick Connect. This is required only if `quick_connect_type` is `PHONE_NUMBER`. The `phone_config` block is documented below.
     * 
     */
    @PolicyResourceProperty(name="phoneConfigs", flag="unknown_phoneConfigs")
    private List<QuickConnectQuickConnectConfigPhoneConfigArgs> value_phoneConfigs;
    private boolean unknown_phoneConfigs;
    public List<QuickConnectQuickConnectConfigPhoneConfigArgs> phoneConfigs() {
        if (!unknown_phoneConfigs) return value_phoneConfigs;
        throw new UndeferrableValueException("Value 'QuickConnectQuickConnectConfigArgs.phoneConfigs' is not present");
    }

    /**
     * Specifies the queue configuration of the Quick Connect. This is required only if `quick_connect_type` is `QUEUE`. The `queue_config` block is documented below.
     * 
     */
    @PolicyResourceProperty(name="queueConfigs", flag="unknown_queueConfigs")
    private List<QuickConnectQuickConnectConfigQueueConfigArgs> value_queueConfigs;
    private boolean unknown_queueConfigs;
    public List<QuickConnectQuickConnectConfigQueueConfigArgs> queueConfigs() {
        if (!unknown_queueConfigs) return value_queueConfigs;
        throw new UndeferrableValueException("Value 'QuickConnectQuickConnectConfigArgs.queueConfigs' is not present");
    }

    /**
     * Specifies the configuration type of the quick connect. valid values are `PHONE_NUMBER`, `QUEUE`, `USER`.
     * 
     */
    @PolicyResourceProperty(name="quickConnectType", flag="unknown_quickConnectType")
    private String value_quickConnectType;
    private boolean unknown_quickConnectType;
    public String quickConnectType() {
        if (!unknown_quickConnectType) return value_quickConnectType;
        throw new UndeferrableValueException("Value 'QuickConnectQuickConnectConfigArgs.quickConnectType' is not present");
    }

    /**
     * Specifies the user configuration of the Quick Connect. This is required only if `quick_connect_type` is `USER`. The `user_config` block is documented below.
     * 
     */
    @PolicyResourceProperty(name="userConfigs", flag="unknown_userConfigs")
    private List<QuickConnectQuickConnectConfigUserConfigArgs> value_userConfigs;
    private boolean unknown_userConfigs;
    public List<QuickConnectQuickConnectConfigUserConfigArgs> userConfigs() {
        if (!unknown_userConfigs) return value_userConfigs;
        throw new UndeferrableValueException("Value 'QuickConnectQuickConnectConfigArgs.userConfigs' is not present");
    }

}
