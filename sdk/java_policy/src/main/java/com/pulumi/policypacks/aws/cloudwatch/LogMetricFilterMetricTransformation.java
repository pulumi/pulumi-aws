// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.cloudwatch;

import java.lang.String;
import java.util.Map;


public final class LogMetricFilterMetricTransformation {

    /**
     * The value to emit when a filter pattern does not match a log event. Conflicts with `dimensions`.
     * 
     */
    public String defaultValue;



    /**
     * Map of fields to use as dimensions for the metric. Up to 3 dimensions are allowed. Conflicts with `default_value`.
     * 
     */
    public Map<String,String> dimensions;



    /**
     * The name of the CloudWatch metric to which the monitored log information should be published (e.g., `ErrorCount`)
     * 
     */
    public String name;



    /**
     * The destination namespace of the CloudWatch metric.
     * 
     */
    public String namespace;



    /**
     * The unit to assign to the metric. If you omit this, the unit is set as `None`.
     * 
     */
    public String unit;



    /**
     * What to publish to the metric. For example, if you&#39;re counting the occurrences of a particular term like &#34;Error&#34;, the value will be &#34;1&#34; for each occurrence. If you&#39;re counting the bytes transferred the published value will be the value in the log event.
     * 
     */
    public String value;



}
