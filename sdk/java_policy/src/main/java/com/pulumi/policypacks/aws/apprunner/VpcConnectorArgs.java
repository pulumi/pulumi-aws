// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.apprunner;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:apprunner/vpcConnector:VpcConnector")
public final class VpcConnectorArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * List of IDs of security groups that App Runner should use for access to AWS resources under the specified subnets. If not specified, App Runner uses the default security group of the Amazon VPC. The default security group allows all outbound traffic.
     * 
     */
    private UndeferrableValue<List<String>> securityGroups;

    public List<String> securityGroups() {
        if (securityGroups == null) return null;
        return securityGroups.getValue("VpcConnectorArgs.securityGroups");
    }

    /**
     * List of IDs of subnets that App Runner should use when it associates your service with a custom Amazon VPC. Specify IDs of subnets of a single Amazon VPC. App Runner determines the Amazon VPC from the subnets you specify.
     * 
     */
    private UndeferrableValue<List<String>> subnets;

    public List<String> subnets() {
        if (subnets == null) return null;
        return subnets.getValue("VpcConnectorArgs.subnets");
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("VpcConnectorArgs.tags");
    }

    /**
     * Name for the VPC connector.
     * 
     */
    private UndeferrableValue<String> vpcConnectorName;

    public String vpcConnectorName() {
        if (vpcConnectorName == null) return null;
        return vpcConnectorName.getValue("VpcConnectorArgs.vpcConnectorName");
    }

}
