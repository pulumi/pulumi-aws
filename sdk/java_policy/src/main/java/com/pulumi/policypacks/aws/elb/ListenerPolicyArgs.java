// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.elb;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:elb/listenerPolicy:ListenerPolicy")
public final class ListenerPolicyArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The load balancer to attach the policy to.
     * 
     */
    private UndeferrableValue<String> loadBalancerName;

    public String loadBalancerName() {
        if (loadBalancerName == null) return null;
        return loadBalancerName.getValue("ListenerPolicyArgs.loadBalancerName");
    }

    /**
     * The load balancer listener port to apply the policy to.
     * 
     */
    private UndeferrableValue<Integer> loadBalancerPort;

    public Integer loadBalancerPort() {
        if (loadBalancerPort == null) return null;
        return loadBalancerPort.getValue("ListenerPolicyArgs.loadBalancerPort");
    }

    /**
     * List of Policy Names to apply to the backend server.
     * 
     */
    private UndeferrableValue<List<String>> policyNames;

    public List<String> policyNames() {
        if (policyNames == null) return null;
        return policyNames.getValue("ListenerPolicyArgs.policyNames");
    }

    /**
     * Map of arbitrary keys and values that, when changed, will trigger an update.
     * 
     */
    private UndeferrableValue<Map<String,String>> triggers;

    public Map<String,String> triggers() {
        if (triggers == null) return null;
        return triggers.getValue("ListenerPolicyArgs.triggers");
    }

}
