// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.vpclattice;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:vpclattice/authPolicy:AuthPolicy")
public final class AuthPolicyArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The auth policy. The policy string in JSON must not contain newlines or blank lines.
     * 
     */
    @PolicyResourceProperty(name="policy", flag="unknown_policy")
    private String value_policy;
    private boolean unknown_policy;
    public String policy() {
        if (!unknown_policy) return value_policy;
        throw new UndeferrableValueException("Value 'AuthPolicyArgs.policy' is not present");
    }

    /**
     * The ID or Amazon Resource Name (ARN) of the service network or service for which the policy is created.
     * 
     */
    @PolicyResourceProperty(name="resourceIdentifier", flag="unknown_resourceIdentifier")
    private String value_resourceIdentifier;
    private boolean unknown_resourceIdentifier;
    public String resourceIdentifier() {
        if (!unknown_resourceIdentifier) return value_resourceIdentifier;
        throw new UndeferrableValueException("Value 'AuthPolicyArgs.resourceIdentifier' is not present");
    }

    /**
     * The state of the auth policy. The auth policy is only active when the auth type is set to `AWS_IAM`. If you provide a policy, then authentication and authorization decisions are made based on this policy and the client&#39;s IAM policy. If the Auth type is `NONE`, then, any auth policy you provide will remain inactive.
     * 
     */
    @PolicyResourceProperty(name="state", flag="unknown_state")
    private String value_state;
    private boolean unknown_state;
    public String state() {
        if (!unknown_state) return value_state;
        throw new UndeferrableValueException("Value 'AuthPolicyArgs.state' is not present");
    }

}
