// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.wafv2;

import com.pulumi.policypacks.aws.wafv2.WebAclRuleStatementAndStatement;
import com.pulumi.policypacks.aws.wafv2.WebAclRuleStatementByteMatchStatement;
import com.pulumi.policypacks.aws.wafv2.WebAclRuleStatementGeoMatchStatement;
import com.pulumi.policypacks.aws.wafv2.WebAclRuleStatementIpSetReferenceStatement;
import com.pulumi.policypacks.aws.wafv2.WebAclRuleStatementLabelMatchStatement;
import com.pulumi.policypacks.aws.wafv2.WebAclRuleStatementManagedRuleGroupStatement;
import com.pulumi.policypacks.aws.wafv2.WebAclRuleStatementNotStatement;
import com.pulumi.policypacks.aws.wafv2.WebAclRuleStatementOrStatement;
import com.pulumi.policypacks.aws.wafv2.WebAclRuleStatementRateBasedStatement;
import com.pulumi.policypacks.aws.wafv2.WebAclRuleStatementRegexMatchStatement;
import com.pulumi.policypacks.aws.wafv2.WebAclRuleStatementRegexPatternSetReferenceStatement;
import com.pulumi.policypacks.aws.wafv2.WebAclRuleStatementRuleGroupReferenceStatement;
import com.pulumi.policypacks.aws.wafv2.WebAclRuleStatementSizeConstraintStatement;
import com.pulumi.policypacks.aws.wafv2.WebAclRuleStatementSqliMatchStatement;
import com.pulumi.policypacks.aws.wafv2.WebAclRuleStatementXssMatchStatement;


public final class WebAclRuleStatement {

    /**
     * Logical rule statement used to combine other rule statements with AND logic. See `and_statement` below for details.
     * 
     */
    public WebAclRuleStatementAndStatement andStatement;



    /**
     * Rule statement that defines a string match search for AWS WAF to apply to web requests. See `byte_match_statement` below for details.
     * 
     */
    public WebAclRuleStatementByteMatchStatement byteMatchStatement;



    /**
     * Rule statement used to identify web requests based on country of origin. See `geo_match_statement` below for details.
     * 
     */
    public WebAclRuleStatementGeoMatchStatement geoMatchStatement;



    /**
     * Rule statement used to detect web requests coming from particular IP addresses or address ranges. See `ip_set_reference_statement` below for details.
     * 
     */
    public WebAclRuleStatementIpSetReferenceStatement ipSetReferenceStatement;



    /**
     * Rule statement that defines a string match search against labels that have been added to the web request by rules that have already run in the web ACL. See `label_match_statement` below for details.
     * 
     */
    public WebAclRuleStatementLabelMatchStatement labelMatchStatement;



    /**
     * Rule statement used to run the rules that are defined in a managed rule group.  This statement can not be nested. See `managed_rule_group_statement` below for details.
     * 
     */
    public WebAclRuleStatementManagedRuleGroupStatement managedRuleGroupStatement;



    /**
     * Logical rule statement used to negate the results of another rule statement. See `not_statement` below for details.
     * 
     */
    public WebAclRuleStatementNotStatement notStatement;



    /**
     * Logical rule statement used to combine other rule statements with OR logic. See `or_statement` below for details.
     * 
     */
    public WebAclRuleStatementOrStatement orStatement;



    /**
     * Rate-based rule tracks the rate of requests for each originating `IP address`, and triggers the rule action when the rate exceeds a limit that you specify on the number of requests in any `5-minute` time span. This statement can not be nested. See `rate_based_statement` below for details.
     * 
     */
    public WebAclRuleStatementRateBasedStatement rateBasedStatement;



    /**
     * Rule statement used to search web request components for a match against a single regular expression. See `regex_match_statement` below for details.
     * 
     */
    public WebAclRuleStatementRegexMatchStatement regexMatchStatement;



    /**
     * Rule statement used to search web request components for matches with regular expressions. See `regex_pattern_set_reference_statement` below for details.
     * 
     */
    public WebAclRuleStatementRegexPatternSetReferenceStatement regexPatternSetReferenceStatement;



    /**
     * Rule statement used to run the rules that are defined in an WAFv2 Rule Group. See `rule_group_reference_statement` below for details.
     * 
     */
    public WebAclRuleStatementRuleGroupReferenceStatement ruleGroupReferenceStatement;



    /**
     * Rule statement that compares a number of bytes against the size of a request component, using a comparison operator, such as greater than (&gt;) or less than (&lt;). See `size_constraint_statement` below for more details.
     * 
     */
    public WebAclRuleStatementSizeConstraintStatement sizeConstraintStatement;



    /**
     * An SQL injection match condition identifies the part of web requests, such as the URI or the query string, that you want AWS WAF to inspect. See `sqli_match_statement` below for details.
     * 
     */
    public WebAclRuleStatementSqliMatchStatement sqliMatchStatement;



    /**
     * Rule statement that defines a cross-site scripting (XSS) match search for AWS WAF to apply to web requests. See `xss_match_statement` below for details.
     * 
     */
    public WebAclRuleStatementXssMatchStatement xssMatchStatement;



}
