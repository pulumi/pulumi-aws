// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.pipes.outputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class PipeTargetParametersRedshiftDataParameters {

    /**
     * The name of the database. Required when authenticating using temporary credentials.
     * 
     */
    private UndeferrableValue<String> database;

    public String database() {
        if (database == null) return null;
        return database.getValue("PipeTargetParametersRedshiftDataParameters.database");
    }

    /**
     * The database user name. Required when authenticating using temporary credentials.
     * 
     */
    private @Nullable UndeferrableValue<String> dbUser;

    public @Nullable String dbUser() {
        if (dbUser == null) return null;
        return dbUser.getValue("PipeTargetParametersRedshiftDataParameters.dbUser");
    }

    /**
     * The name or ARN of the secret that enables access to the database. Required when authenticating using Secrets Manager.
     * 
     */
    private @Nullable UndeferrableValue<String> secretManagerArn;

    public @Nullable String secretManagerArn() {
        if (secretManagerArn == null) return null;
        return secretManagerArn.getValue("PipeTargetParametersRedshiftDataParameters.secretManagerArn");
    }

    /**
     * List of SQL statements text to run, each of maximum length of 100,000.
     * 
     */
    private UndeferrableValue<List<String>> sqls;

    public List<String> sqls() {
        if (sqls == null) return null;
        return sqls.getValue("PipeTargetParametersRedshiftDataParameters.sqls");
    }

    /**
     * The name of the SQL statement. You can name the SQL statement when you create it to identify the query.
     * 
     */
    private @Nullable UndeferrableValue<String> statementName;

    public @Nullable String statementName() {
        if (statementName == null) return null;
        return statementName.getValue("PipeTargetParametersRedshiftDataParameters.statementName");
    }

    /**
     * Indicates whether to send an event back to EventBridge after the SQL statement runs.
     * 
     */
    private @Nullable UndeferrableValue<Boolean> withEvent;

    public @Nullable Boolean withEvent() {
        if (withEvent == null) return null;
        return withEvent.getValue("PipeTargetParametersRedshiftDataParameters.withEvent");
    }

}
