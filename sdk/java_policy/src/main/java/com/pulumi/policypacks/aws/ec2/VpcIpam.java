// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.ec2.outputs.VpcIpamOperatingRegion;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ec2/vpcIpam:VpcIpam")
public final class VpcIpam extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Amazon Resource Name (ARN) of IPAM
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'VpcIpam.arn' is not present");
    }

    /**
     * Enables you to quickly delete an IPAM, private scopes, pools in private scopes, and any allocations in the pools in private scopes.
     * 
     */
    @PolicyResourceProperty(name="cascade", flag="unknown_cascade")
    private @Nullable Boolean value_cascade;
    private boolean unknown_cascade;
    public @Nullable Boolean cascade() {
        if (!unknown_cascade) return value_cascade;
        throw new UndeferrableValueException("Value 'VpcIpam.cascade' is not present");
    }

    /**
     * The IPAM&#39;s default resource discovery association ID.
     * 
     */
    @PolicyResourceProperty(name="defaultResourceDiscoveryAssociationId", flag="unknown_defaultResourceDiscoveryAssociationId")
    private String value_defaultResourceDiscoveryAssociationId;
    private boolean unknown_defaultResourceDiscoveryAssociationId;
    public String defaultResourceDiscoveryAssociationId() {
        if (!unknown_defaultResourceDiscoveryAssociationId) return value_defaultResourceDiscoveryAssociationId;
        throw new UndeferrableValueException("Value 'VpcIpam.defaultResourceDiscoveryAssociationId' is not present");
    }

    /**
     * The IPAM&#39;s default resource discovery ID.
     * 
     */
    @PolicyResourceProperty(name="defaultResourceDiscoveryId", flag="unknown_defaultResourceDiscoveryId")
    private String value_defaultResourceDiscoveryId;
    private boolean unknown_defaultResourceDiscoveryId;
    public String defaultResourceDiscoveryId() {
        if (!unknown_defaultResourceDiscoveryId) return value_defaultResourceDiscoveryId;
        throw new UndeferrableValueException("Value 'VpcIpam.defaultResourceDiscoveryId' is not present");
    }

    /**
     * A description for the IPAM.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private @Nullable String value_description;
    private boolean unknown_description;
    public @Nullable String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'VpcIpam.description' is not present");
    }

    /**
     * Enable this option to use your own GUA ranges as private IPv6 addresses. Default: `false`.
     * 
     */
    @PolicyResourceProperty(name="enablePrivateGua", flag="unknown_enablePrivateGua")
    private @Nullable Boolean value_enablePrivateGua;
    private boolean unknown_enablePrivateGua;
    public @Nullable Boolean enablePrivateGua() {
        if (!unknown_enablePrivateGua) return value_enablePrivateGua;
        throw new UndeferrableValueException("Value 'VpcIpam.enablePrivateGua' is not present");
    }

    /**
     * Determines which locales can be chosen when you create pools. Locale is the Region where you want to make an IPAM pool available for allocations. You can only create pools with locales that match the operating Regions of the IPAM. You can only create VPCs from a pool whose locale matches the VPC&#39;s Region. You specify a region using the region_name parameter. You **must** set your provider block region as an operating_region.
     * 
     */
    @PolicyResourceProperty(name="operatingRegions", flag="unknown_operatingRegions")
    private List<VpcIpamOperatingRegion> value_operatingRegions;
    private boolean unknown_operatingRegions;
    public List<VpcIpamOperatingRegion> operatingRegions() {
        if (!unknown_operatingRegions) return value_operatingRegions;
        throw new UndeferrableValueException("Value 'VpcIpam.operatingRegions' is not present");
    }

    /**
     * The ID of the IPAM&#39;s private scope. A scope is a top-level container in IPAM. Each scope represents an IP-independent network. Scopes enable you to represent networks where you have overlapping IP space. When you create an IPAM, IPAM automatically creates two scopes: public and private. The private scope is intended for private IP space. The public scope is intended for all internet-routable IP space.
     * 
     */
    @PolicyResourceProperty(name="privateDefaultScopeId", flag="unknown_privateDefaultScopeId")
    private String value_privateDefaultScopeId;
    private boolean unknown_privateDefaultScopeId;
    public String privateDefaultScopeId() {
        if (!unknown_privateDefaultScopeId) return value_privateDefaultScopeId;
        throw new UndeferrableValueException("Value 'VpcIpam.privateDefaultScopeId' is not present");
    }

    /**
     * The ID of the IPAM&#39;s public scope. A scope is a top-level container in IPAM. Each scope represents an IP-independent network. Scopes enable you to represent networks where you have overlapping IP space. When you create an IPAM, IPAM automatically creates two scopes: public and private. The private scope is intended for private
     * IP space. The public scope is intended for all internet-routable IP space.
     * 
     */
    @PolicyResourceProperty(name="publicDefaultScopeId", flag="unknown_publicDefaultScopeId")
    private String value_publicDefaultScopeId;
    private boolean unknown_publicDefaultScopeId;
    public String publicDefaultScopeId() {
        if (!unknown_publicDefaultScopeId) return value_publicDefaultScopeId;
        throw new UndeferrableValueException("Value 'VpcIpam.publicDefaultScopeId' is not present");
    }

    /**
     * The number of scopes in the IPAM.
     * 
     */
    @PolicyResourceProperty(name="scopeCount", flag="unknown_scopeCount")
    private Integer value_scopeCount;
    private boolean unknown_scopeCount;
    public Integer scopeCount() {
        if (!unknown_scopeCount) return value_scopeCount;
        throw new UndeferrableValueException("Value 'VpcIpam.scopeCount' is not present");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'VpcIpam.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'VpcIpam.tagsAll' is not present");
    }

    /**
     * specifies the IPAM tier. Valid options include `free` and `advanced`. Default is `advanced`.
     * 
     */
    @PolicyResourceProperty(name="tier", flag="unknown_tier")
    private @Nullable String value_tier;
    private boolean unknown_tier;
    public @Nullable String tier() {
        if (!unknown_tier) return value_tier;
        throw new UndeferrableValueException("Value 'VpcIpam.tier' is not present");
    }

}
