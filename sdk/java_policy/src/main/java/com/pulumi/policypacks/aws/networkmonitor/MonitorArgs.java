// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.networkmonitor;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:networkmonitor/monitor:Monitor")
public final class MonitorArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The time, in seconds, that metrics are aggregated and sent to Amazon CloudWatch. Valid values are either 30 or 60.
     * 
     */
    private UndeferrableValue<Integer> aggregationPeriod;

    public Integer aggregationPeriod() {
        if (aggregationPeriod == null) return null;
        return aggregationPeriod.getValue("MonitorArgs.aggregationPeriod");
    }

    /**
     * The name of the monitor.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> monitorName;

    public String monitorName() {
        if (monitorName == null) return null;
        return monitorName.getValue("MonitorArgs.monitorName");
    }

    /**
     * Key-value tags for the monitor. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("MonitorArgs.tags");
    }

}
