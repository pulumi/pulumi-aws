// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.lex;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.lex.outputs.SlotTypeEnumerationValue;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:lex/slotType:SlotType")
public final class SlotType extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Checksum identifying the version of the slot type that was created. The checksum is
     * not included as an argument because the resource will add it automatically when updating the slot type.
     * 
     */
    @PolicyResourceProperty(name="checksum", flag="unknown_checksum")
    private String value_checksum;
    private boolean unknown_checksum;
    public String checksum() {
        if (!unknown_checksum) return value_checksum;
        throw new UndeferrableValueException("Value 'SlotType.checksum' is not present");
    }

    /**
     * Determines if a new slot type version is created when the initial resource is created and on each
     * update. Defaults to `false`.
     * 
     */
    @PolicyResourceProperty(name="createVersion", flag="unknown_createVersion")
    private @Nullable Boolean value_createVersion;
    private boolean unknown_createVersion;
    public @Nullable Boolean createVersion() {
        if (!unknown_createVersion) return value_createVersion;
        throw new UndeferrableValueException("Value 'SlotType.createVersion' is not present");
    }

    /**
     * The date when the slot type version was created.
     * 
     */
    @PolicyResourceProperty(name="createdDate", flag="unknown_createdDate")
    private String value_createdDate;
    private boolean unknown_createdDate;
    public String createdDate() {
        if (!unknown_createdDate) return value_createdDate;
        throw new UndeferrableValueException("Value 'SlotType.createdDate' is not present");
    }

    /**
     * A description of the slot type. Must be less than or equal to 200 characters in length.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private @Nullable String value_description;
    private boolean unknown_description;
    public @Nullable String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'SlotType.description' is not present");
    }

    /**
     * A list of EnumerationValue objects that defines the values that
     * the slot type can take. Each value can have a list of synonyms, which are additional values that help
     * train the machine learning model about the values that it resolves for a slot. Attributes are
     * documented under enumeration_value.
     * 
     */
    @PolicyResourceProperty(name="enumerationValues", flag="unknown_enumerationValues")
    private List<SlotTypeEnumerationValue> value_enumerationValues;
    private boolean unknown_enumerationValues;
    public List<SlotTypeEnumerationValue> enumerationValues() {
        if (!unknown_enumerationValues) return value_enumerationValues;
        throw new UndeferrableValueException("Value 'SlotType.enumerationValues' is not present");
    }

    /**
     * The date when the `$LATEST` version of this slot type was updated.
     * 
     */
    @PolicyResourceProperty(name="lastUpdatedDate", flag="unknown_lastUpdatedDate")
    private String value_lastUpdatedDate;
    private boolean unknown_lastUpdatedDate;
    public String lastUpdatedDate() {
        if (!unknown_lastUpdatedDate) return value_lastUpdatedDate;
        throw new UndeferrableValueException("Value 'SlotType.lastUpdatedDate' is not present");
    }

    /**
     * The name of the slot type. The name is not case sensitive. Must be less than or equal to 100 characters in length.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'SlotType.name' is not present");
    }

    /**
     * Determines the slot resolution strategy that Amazon Lex
     * uses to return slot type values. `ORIGINAL_VALUE` returns the value entered by the user if the user
     * value is similar to the slot value. `TOP_RESOLUTION` returns the first value in the resolution list
     * if there is a resolution list for the slot, otherwise null is returned. Defaults to `ORIGINAL_VALUE`.
     * 
     */
    @PolicyResourceProperty(name="valueSelectionStrategy", flag="unknown_valueSelectionStrategy")
    private @Nullable String value_valueSelectionStrategy;
    private boolean unknown_valueSelectionStrategy;
    public @Nullable String valueSelectionStrategy() {
        if (!unknown_valueSelectionStrategy) return value_valueSelectionStrategy;
        throw new UndeferrableValueException("Value 'SlotType.valueSelectionStrategy' is not present");
    }

    /**
     * The version of the slot type.
     * 
     */
    @PolicyResourceProperty(name="version", flag="unknown_version")
    private String value_version;
    private boolean unknown_version;
    public String version() {
        if (!unknown_version) return value_version;
        throw new UndeferrableValueException("Value 'SlotType.version' is not present");
    }

}
