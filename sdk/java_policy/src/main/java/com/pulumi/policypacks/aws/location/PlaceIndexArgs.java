// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.location;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.location.inputs.PlaceIndexDataSourceConfigurationArgs;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:location/placeIndex:PlaceIndex")
public final class PlaceIndexArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Specifies the geospatial data provider for the new place index.
     * 
     */
    @PolicyResourceProperty(name="dataSource", flag="unknown_dataSource")
    private String value_dataSource;
    private boolean unknown_dataSource;
    public String dataSource() {
        if (!unknown_dataSource) return value_dataSource;
        throw new UndeferrableValueException("Value 'PlaceIndexArgs.dataSource' is not present");
    }

    /**
     * Configuration block with the data storage option chosen for requesting Places. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="dataSourceConfiguration", flag="unknown_dataSourceConfiguration")
    private PlaceIndexDataSourceConfigurationArgs value_dataSourceConfiguration;
    private boolean unknown_dataSourceConfiguration;
    public PlaceIndexDataSourceConfigurationArgs dataSourceConfiguration() {
        if (!unknown_dataSourceConfiguration) return value_dataSourceConfiguration;
        throw new UndeferrableValueException("Value 'PlaceIndexArgs.dataSourceConfiguration' is not present");
    }

    /**
     * The optional description for the place index resource.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private String value_description;
    private boolean unknown_description;
    public String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'PlaceIndexArgs.description' is not present");
    }

    /**
     * The name of the place index resource.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="indexName", flag="unknown_indexName")
    private String value_indexName;
    private boolean unknown_indexName;
    public String indexName() {
        if (!unknown_indexName) return value_indexName;
        throw new UndeferrableValueException("Value 'PlaceIndexArgs.indexName' is not present");
    }

    /**
     * Key-value tags for the place index. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'PlaceIndexArgs.tags' is not present");
    }

}
