// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.qbusiness;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.qbusiness.outputs.ApplicationAttachmentsConfiguration;
import com.pulumi.policypacks.aws.qbusiness.outputs.ApplicationEncryptionConfiguration;
import com.pulumi.policypacks.aws.qbusiness.outputs.ApplicationTimeouts;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:qbusiness/application:Application")
public final class Application extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * ARN of the Q Business application.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'Application.arn' is not present");
    }

    /**
     * Information about whether file upload functionality is activated or deactivated for your end user. See `attachments_configuration` below.
     * 
     */
    @PolicyResourceProperty(name="attachmentsConfiguration", flag="unknown_attachmentsConfiguration")
    private @Nullable ApplicationAttachmentsConfiguration value_attachmentsConfiguration;
    private boolean unknown_attachmentsConfiguration;
    public @Nullable ApplicationAttachmentsConfiguration attachmentsConfiguration() {
        if (!unknown_attachmentsConfiguration) return value_attachmentsConfiguration;
        throw new UndeferrableValueException("Value 'Application.attachmentsConfiguration' is not present");
    }

    /**
     * Description of the Amazon Q application.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private @Nullable String value_description;
    private boolean unknown_description;
    public @Nullable String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'Application.description' is not present");
    }

    /**
     * Name of the Amazon Q application.
     * 
     */
    @PolicyResourceProperty(name="displayName", flag="unknown_displayName")
    private String value_displayName;
    private boolean unknown_displayName;
    public String displayName() {
        if (!unknown_displayName) return value_displayName;
        throw new UndeferrableValueException("Value 'Application.displayName' is not present");
    }

    /**
     * Information about encryption configuration. See `encryption_configuration` below.
     * 
     */
    @PolicyResourceProperty(name="encryptionConfiguration", flag="unknown_encryptionConfiguration")
    private @Nullable ApplicationEncryptionConfiguration value_encryptionConfiguration;
    private boolean unknown_encryptionConfiguration;
    public @Nullable ApplicationEncryptionConfiguration encryptionConfiguration() {
        if (!unknown_encryptionConfiguration) return value_encryptionConfiguration;
        throw new UndeferrableValueException("Value 'Application.encryptionConfiguration' is not present");
    }

    /**
     * ARN of an IAM role with permissions to access your Amazon CloudWatch logs and metrics.
     * 
     */
    @PolicyResourceProperty(name="iamServiceRoleArn", flag="unknown_iamServiceRoleArn")
    private String value_iamServiceRoleArn;
    private boolean unknown_iamServiceRoleArn;
    public String iamServiceRoleArn() {
        if (!unknown_iamServiceRoleArn) return value_iamServiceRoleArn;
        throw new UndeferrableValueException("Value 'Application.iamServiceRoleArn' is not present");
    }

    /**
     * ARN of the AWS IAM Identity Center application attached to your Amazon Q Business application.
     * 
     */
    @PolicyResourceProperty(name="identityCenterApplicationArn", flag="unknown_identityCenterApplicationArn")
    private String value_identityCenterApplicationArn;
    private boolean unknown_identityCenterApplicationArn;
    public String identityCenterApplicationArn() {
        if (!unknown_identityCenterApplicationArn) return value_identityCenterApplicationArn;
        throw new UndeferrableValueException("Value 'Application.identityCenterApplicationArn' is not present");
    }

    /**
     * ARN of the IAM Identity Center instance you are either creating for — or connecting to — your Amazon Q Business application.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="identityCenterInstanceArn", flag="unknown_identityCenterInstanceArn")
    private String value_identityCenterInstanceArn;
    private boolean unknown_identityCenterInstanceArn;
    public String identityCenterInstanceArn() {
        if (!unknown_identityCenterInstanceArn) return value_identityCenterInstanceArn;
        throw new UndeferrableValueException("Value 'Application.identityCenterInstanceArn' is not present");
    }

    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'Application.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'Application.tagsAll' is not present");
    }

    @PolicyResourceProperty(name="timeouts", flag="unknown_timeouts")
    private @Nullable ApplicationTimeouts value_timeouts;
    private boolean unknown_timeouts;
    public @Nullable ApplicationTimeouts timeouts() {
        if (!unknown_timeouts) return value_timeouts;
        throw new UndeferrableValueException("Value 'Application.timeouts' is not present");
    }

}
