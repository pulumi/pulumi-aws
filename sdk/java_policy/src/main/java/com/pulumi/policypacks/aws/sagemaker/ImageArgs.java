// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.sagemaker;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:sagemaker/image:Image")
public final class ImageArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The description of the image.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("ImageArgs.description");
    }

    /**
     * The display name of the image. When the image is added to a domain (must be unique to the domain).
     * 
     */
    private UndeferrableValue<String> displayName;

    public String displayName() {
        if (displayName == null) return null;
        return displayName.getValue("ImageArgs.displayName");
    }

    /**
     * The name of the image. Must be unique to your account.
     * 
     */
    private UndeferrableValue<String> imageName;

    public String imageName() {
        if (imageName == null) return null;
        return imageName.getValue("ImageArgs.imageName");
    }

    /**
     * The Amazon Resource Name (ARN) of an IAM role that enables Amazon SageMaker AI to perform tasks on your behalf.
     * 
     */
    private UndeferrableValue<String> roleArn;

    public String roleArn() {
        if (roleArn == null) return null;
        return roleArn.getValue("ImageArgs.roleArn");
    }

    /**
     * A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("ImageArgs.tags");
    }

}
