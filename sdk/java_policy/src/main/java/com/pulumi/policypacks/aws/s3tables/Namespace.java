// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.s3tables;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;


@PolicyResourceType(type="aws:s3tables/namespace:Namespace")
public final class Namespace extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Date and time when the namespace was created.
     * 
     */
    @PolicyResourceProperty(name="createdAt", flag="unknown_createdAt")
    private String value_createdAt;
    private boolean unknown_createdAt;
    public String createdAt() {
        if (!unknown_createdAt) return value_createdAt;
        throw new UndeferrableValueException("Value 'Namespace.createdAt' is not present");
    }

    /**
     * Account ID of the account that created the namespace.
     * 
     */
    @PolicyResourceProperty(name="createdBy", flag="unknown_createdBy")
    private String value_createdBy;
    private boolean unknown_createdBy;
    public String createdBy() {
        if (!unknown_createdBy) return value_createdBy;
        throw new UndeferrableValueException("Value 'Namespace.createdBy' is not present");
    }

    /**
     * Name of the namespace.
     * Must be between 1 and 255 characters in length.
     * Can consist of lowercase letters, numbers, and underscores, and must begin and end with a lowercase letter or number.
     * 
     */
    @PolicyResourceProperty(name="namespace", flag="unknown_namespace")
    private String value_namespace;
    private boolean unknown_namespace;
    public String namespace() {
        if (!unknown_namespace) return value_namespace;
        throw new UndeferrableValueException("Value 'Namespace.namespace' is not present");
    }

    /**
     * Account ID of the account that owns the namespace.
     * 
     */
    @PolicyResourceProperty(name="ownerAccountId", flag="unknown_ownerAccountId")
    private String value_ownerAccountId;
    private boolean unknown_ownerAccountId;
    public String ownerAccountId() {
        if (!unknown_ownerAccountId) return value_ownerAccountId;
        throw new UndeferrableValueException("Value 'Namespace.ownerAccountId' is not present");
    }

    /**
     * ARN referencing the Table Bucket that contains this Namespace.
     * 
     */
    @PolicyResourceProperty(name="tableBucketArn", flag="unknown_tableBucketArn")
    private String value_tableBucketArn;
    private boolean unknown_tableBucketArn;
    public String tableBucketArn() {
        if (!unknown_tableBucketArn) return value_tableBucketArn;
        throw new UndeferrableValueException("Value 'Namespace.tableBucketArn' is not present");
    }

}
