// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.dms;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:dms/certificate:Certificate")
public final class Certificate extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The Amazon Resource Name (ARN) for the certificate.
     * 
     */
    private UndeferrableValue<String> certificateArn;

    public String certificateArn() {
        if (certificateArn == null) return null;
        return certificateArn.getValue("Certificate.certificateArn");
    }

    /**
     * The certificate identifier.
     * 
     * - Must contain from 1 to 255 alphanumeric characters and hyphens.
     * 
     */
    private UndeferrableValue<String> certificateId;

    public String certificateId() {
        if (certificateId == null) return null;
        return certificateId.getValue("Certificate.certificateId");
    }

    /**
     * The contents of the .pem X.509 certificate file for the certificate. Either `certificate_pem` or `certificate_wallet` must be set.
     * 
     */
    private @Nullable UndeferrableValue<String> certificatePem;

    public @Nullable String certificatePem() {
        if (certificatePem == null) return null;
        return certificatePem.getValue("Certificate.certificatePem");
    }

    /**
     * The contents of the Oracle Wallet certificate for use with SSL, provided as a base64-encoded String. Either `certificate_pem` or `certificate_wallet` must be set.
     * 
     */
    private @Nullable UndeferrableValue<String> certificateWallet;

    public @Nullable String certificateWallet() {
        if (certificateWallet == null) return null;
        return certificateWallet.getValue("Certificate.certificateWallet");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private @Nullable UndeferrableValue<Map<String,String>> tags;

    public @Nullable Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("Certificate.tags");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    private UndeferrableValue<Map<String,String>> tagsAll;

    public Map<String,String> tagsAll() {
        if (tagsAll == null) return null;
        return tagsAll.getValue("Certificate.tagsAll");
    }

}
