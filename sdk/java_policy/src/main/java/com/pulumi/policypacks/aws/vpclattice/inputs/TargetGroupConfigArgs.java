// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.vpclattice.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.vpclattice.inputs.TargetGroupConfigHealthCheckArgs;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class TargetGroupConfigArgs {

    /**
     * The health check configuration.
     * 
     */
    @PolicyResourceProperty(name="healthCheck", flag="unknown_healthCheck")
    private TargetGroupConfigHealthCheckArgs value_healthCheck;
    private boolean unknown_healthCheck;
    public TargetGroupConfigHealthCheckArgs healthCheck() {
        if (!unknown_healthCheck) return value_healthCheck;
        throw new UndeferrableValueException("Value 'TargetGroupConfigArgs.healthCheck' is not present");
    }

    /**
     * The type of IP address used for the target group. Valid values: `IPV4` | `IPV6`.
     * 
     */
    @PolicyResourceProperty(name="ipAddressType", flag="unknown_ipAddressType")
    private String value_ipAddressType;
    private boolean unknown_ipAddressType;
    public String ipAddressType() {
        if (!unknown_ipAddressType) return value_ipAddressType;
        throw new UndeferrableValueException("Value 'TargetGroupConfigArgs.ipAddressType' is not present");
    }

    /**
     * The version of the event structure that the Lambda function receives. Supported only if `type` is `LAMBDA`. Valid Values are `V1` | `V2`.
     * 
     */
    @PolicyResourceProperty(name="lambdaEventStructureVersion", flag="unknown_lambdaEventStructureVersion")
    private String value_lambdaEventStructureVersion;
    private boolean unknown_lambdaEventStructureVersion;
    public String lambdaEventStructureVersion() {
        if (!unknown_lambdaEventStructureVersion) return value_lambdaEventStructureVersion;
        throw new UndeferrableValueException("Value 'TargetGroupConfigArgs.lambdaEventStructureVersion' is not present");
    }

    /**
     * The port on which the targets are listening.
     * 
     */
    @PolicyResourceProperty(name="port", flag="unknown_port")
    private Integer value_port;
    private boolean unknown_port;
    public Integer port() {
        if (!unknown_port) return value_port;
        throw new UndeferrableValueException("Value 'TargetGroupConfigArgs.port' is not present");
    }

    /**
     * The protocol to use for routing traffic to the targets. Valid Values are `HTTP` | `HTTPS`.
     * 
     */
    @PolicyResourceProperty(name="protocol", flag="unknown_protocol")
    private String value_protocol;
    private boolean unknown_protocol;
    public String protocol() {
        if (!unknown_protocol) return value_protocol;
        throw new UndeferrableValueException("Value 'TargetGroupConfigArgs.protocol' is not present");
    }

    /**
     * The protocol version. Valid Values are `HTTP1` | `HTTP2` | `GRPC`. Default value is `HTTP1`.
     * 
     */
    @PolicyResourceProperty(name="protocolVersion", flag="unknown_protocolVersion")
    private String value_protocolVersion;
    private boolean unknown_protocolVersion;
    public String protocolVersion() {
        if (!unknown_protocolVersion) return value_protocolVersion;
        throw new UndeferrableValueException("Value 'TargetGroupConfigArgs.protocolVersion' is not present");
    }

    /**
     * The ID of the VPC.
     * 
     */
    @PolicyResourceProperty(name="vpcIdentifier", flag="unknown_vpcIdentifier")
    private String value_vpcIdentifier;
    private boolean unknown_vpcIdentifier;
    public String vpcIdentifier() {
        if (!unknown_vpcIdentifier) return value_vpcIdentifier;
        throw new UndeferrableValueException("Value 'TargetGroupConfigArgs.vpcIdentifier' is not present");
    }

}
