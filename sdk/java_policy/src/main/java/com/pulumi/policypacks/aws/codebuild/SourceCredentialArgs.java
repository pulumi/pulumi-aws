// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.codebuild;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:codebuild/sourceCredential:SourceCredential")
public final class SourceCredentialArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The type of authentication used to connect to a GitHub, GitHub Enterprise, or Bitbucket
     * repository. Valid values are `BASIC_AUTH`,
     * `PERSONAL_ACCESS_TOKEN`, `CODECONNECTIONS`, and `SECRETS_MANAGER`. An OAUTH connection is not supported by the API.
     * 
     */
    @PolicyResourceProperty(name="authType", flag="unknown_authType")
    private String value_authType;
    private boolean unknown_authType;
    public String authType() {
        if (!unknown_authType) return value_authType;
        throw new UndeferrableValueException("Value 'SourceCredentialArgs.authType' is not present");
    }

    /**
     * The source provider used for this project.
     * 
     */
    @PolicyResourceProperty(name="serverType", flag="unknown_serverType")
    private String value_serverType;
    private boolean unknown_serverType;
    public String serverType() {
        if (!unknown_serverType) return value_serverType;
        throw new UndeferrableValueException("Value 'SourceCredentialArgs.serverType' is not present");
    }

    /**
     * For a GitHub and GitHub Enterprise, this is the personal access token. For Bitbucket, this is the
     * app password. When using an AWS CodeStar connection (`auth_type = &#34;CODECONNECTIONS&#34;)`, this is an AWS CodeStar
     * Connection ARN.
     * 
     */
    @PolicyResourceProperty(name="token", flag="unknown_token")
    private String value_token;
    private boolean unknown_token;
    public String token() {
        if (!unknown_token) return value_token;
        throw new UndeferrableValueException("Value 'SourceCredentialArgs.token' is not present");
    }

    /**
     * The Bitbucket username when the authType is `BASIC_AUTH`. This parameter is not valid for
     * other types of source providers or connections.
     * 
     */
    @PolicyResourceProperty(name="userName", flag="unknown_userName")
    private String value_userName;
    private boolean unknown_userName;
    public String userName() {
        if (!unknown_userName) return value_userName;
        throw new UndeferrableValueException("Value 'SourceCredentialArgs.userName' is not present");
    }

}
