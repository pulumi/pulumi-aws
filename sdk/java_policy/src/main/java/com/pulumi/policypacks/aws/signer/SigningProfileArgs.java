// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.signer;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.signer.inputs.SigningProfileSignatureValidityPeriodArgs;
import com.pulumi.policypacks.aws.signer.inputs.SigningProfileSigningMaterialArgs;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:signer/signingProfile:SigningProfile")
public final class SigningProfileArgs extends com.pulumi.resources.PolicyResourceInput {

    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'SigningProfileArgs.name' is not present");
    }

    @PolicyResourceProperty(name="namePrefix", flag="unknown_namePrefix")
    private String value_namePrefix;
    private boolean unknown_namePrefix;
    public String namePrefix() {
        if (!unknown_namePrefix) return value_namePrefix;
        throw new UndeferrableValueException("Value 'SigningProfileArgs.namePrefix' is not present");
    }

    /**
     * The ID of the platform that is used by the target signing profile.
     * 
     */
    @PolicyResourceProperty(name="platformId", flag="unknown_platformId")
    private String value_platformId;
    private boolean unknown_platformId;
    public String platformId() {
        if (!unknown_platformId) return value_platformId;
        throw new UndeferrableValueException("Value 'SigningProfileArgs.platformId' is not present");
    }

    /**
     * The validity period for a signing job. See `signature_validity_period` Block below for details.
     * 
     */
    @PolicyResourceProperty(name="signatureValidityPeriod", flag="unknown_signatureValidityPeriod")
    private SigningProfileSignatureValidityPeriodArgs value_signatureValidityPeriod;
    private boolean unknown_signatureValidityPeriod;
    public SigningProfileSignatureValidityPeriodArgs signatureValidityPeriod() {
        if (!unknown_signatureValidityPeriod) return value_signatureValidityPeriod;
        throw new UndeferrableValueException("Value 'SigningProfileArgs.signatureValidityPeriod' is not present");
    }

    /**
     * The AWS Certificate Manager certificate that will be used to sign code with the new signing profile. See `signing_material` Block below for details.
     * 
     */
    @PolicyResourceProperty(name="signingMaterial", flag="unknown_signingMaterial")
    private SigningProfileSigningMaterialArgs value_signingMaterial;
    private boolean unknown_signingMaterial;
    public SigningProfileSigningMaterialArgs signingMaterial() {
        if (!unknown_signingMaterial) return value_signingMaterial;
        throw new UndeferrableValueException("Value 'SigningProfileArgs.signingMaterial' is not present");
    }

    /**
     * A list of tags associated with the signing profile. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'SigningProfileArgs.tags' is not present");
    }

}
