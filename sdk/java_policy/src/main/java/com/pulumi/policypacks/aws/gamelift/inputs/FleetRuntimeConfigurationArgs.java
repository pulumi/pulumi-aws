// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.gamelift.inputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.gamelift.inputs.FleetRuntimeConfigurationServerProcessArgs;
import java.lang.Integer;
import java.util.List;
import javax.annotation.Nullable;


public final class FleetRuntimeConfigurationArgs {

    /**
     * Maximum amount of time (in seconds) that a game session can remain in status `ACTIVATING`.
     * 
     */
    private UndeferrableValue<Integer> gameSessionActivationTimeoutSeconds;

    public Integer gameSessionActivationTimeoutSeconds() {
        if (gameSessionActivationTimeoutSeconds == null) return null;
        return gameSessionActivationTimeoutSeconds.getValue("FleetRuntimeConfigurationArgs.gameSessionActivationTimeoutSeconds");
    }

    /**
     * Maximum number of game sessions with status `ACTIVATING` to allow on an instance simultaneously.
     * 
     */
    private UndeferrableValue<Integer> maxConcurrentGameSessionActivations;

    public Integer maxConcurrentGameSessionActivations() {
        if (maxConcurrentGameSessionActivations == null) return null;
        return maxConcurrentGameSessionActivations.getValue("FleetRuntimeConfigurationArgs.maxConcurrentGameSessionActivations");
    }

    /**
     * Collection of server process configurations that describe which server processes to run on each instance in a fleet. See below.
     * 
     */
    private UndeferrableValue<List<FleetRuntimeConfigurationServerProcessArgs>> serverProcesses;

    public List<FleetRuntimeConfigurationServerProcessArgs> serverProcesses() {
        if (serverProcesses == null) return null;
        return serverProcesses.getValue("FleetRuntimeConfigurationArgs.serverProcesses");
    }

}
