// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.opsworks.outputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class CustomLayerCloudwatchConfigurationLogStream {

    /**
     * Specifies the max number of log events in a batch, up to `10000`. The default value is `1000`.
     * 
     */
    private @Nullable UndeferrableValue<Integer> batchCount;

    public @Nullable Integer batchCount() {
        if (batchCount == null) return null;
        return batchCount.getValue("CustomLayerCloudwatchConfigurationLogStream.batchCount");
    }

    /**
     * Specifies the maximum size of log events in a batch, in bytes, up to `1048576` bytes. The default value is `32768` bytes.
     * 
     */
    private @Nullable UndeferrableValue<Integer> batchSize;

    public @Nullable Integer batchSize() {
        if (batchSize == null) return null;
        return batchSize.getValue("CustomLayerCloudwatchConfigurationLogStream.batchSize");
    }

    /**
     * Specifies the time duration for the batching of log events. The minimum value is `5000` and default value is `5000`.
     * 
     */
    private @Nullable UndeferrableValue<Integer> bufferDuration;

    public @Nullable Integer bufferDuration() {
        if (bufferDuration == null) return null;
        return bufferDuration.getValue("CustomLayerCloudwatchConfigurationLogStream.bufferDuration");
    }

    /**
     * Specifies how the timestamp is extracted from logs. For more information, see the CloudWatch Logs Agent Reference (https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/AgentReference.html).
     * 
     */
    private @Nullable UndeferrableValue<String> datetimeFormat;

    public @Nullable String datetimeFormat() {
        if (datetimeFormat == null) return null;
        return datetimeFormat.getValue("CustomLayerCloudwatchConfigurationLogStream.datetimeFormat");
    }

    /**
     * Specifies the encoding of the log file so that the file can be read correctly. The default is `utf_8`.
     * 
     */
    private @Nullable UndeferrableValue<String> encoding;

    public @Nullable String encoding() {
        if (encoding == null) return null;
        return encoding.getValue("CustomLayerCloudwatchConfigurationLogStream.encoding");
    }

    /**
     * Specifies log files that you want to push to CloudWatch Logs. File can point to a specific file or multiple files (by using wild card characters such as /var/log/system.log*).
     * 
     */
    private UndeferrableValue<String> file;

    public String file() {
        if (file == null) return null;
        return file.getValue("CustomLayerCloudwatchConfigurationLogStream.file");
    }

    /**
     * Specifies the range of lines for identifying a file. The valid values are one number, or two dash-delimited numbers, such as `1`, `2-5`. The default value is `1`.
     * 
     */
    private @Nullable UndeferrableValue<String> fileFingerprintLines;

    public @Nullable String fileFingerprintLines() {
        if (fileFingerprintLines == null) return null;
        return fileFingerprintLines.getValue("CustomLayerCloudwatchConfigurationLogStream.fileFingerprintLines");
    }

    /**
     * Specifies where to start to read data (`start_of_file` or `end_of_file`). The default is `start_of_file`.
     * 
     */
    private @Nullable UndeferrableValue<String> initialPosition;

    public @Nullable String initialPosition() {
        if (initialPosition == null) return null;
        return initialPosition.getValue("CustomLayerCloudwatchConfigurationLogStream.initialPosition");
    }

    /**
     * Specifies the destination log group. A log group is created automatically if it doesn&#39;t already exist.
     * 
     */
    private UndeferrableValue<String> logGroupName;

    public String logGroupName() {
        if (logGroupName == null) return null;
        return logGroupName.getValue("CustomLayerCloudwatchConfigurationLogStream.logGroupName");
    }

    /**
     * Specifies the pattern for identifying the start of a log message.
     * 
     */
    private @Nullable UndeferrableValue<String> multilineStartPattern;

    public @Nullable String multilineStartPattern() {
        if (multilineStartPattern == null) return null;
        return multilineStartPattern.getValue("CustomLayerCloudwatchConfigurationLogStream.multilineStartPattern");
    }

    /**
     * Specifies the time zone of log event time stamps.
     * 
     */
    private @Nullable UndeferrableValue<String> timeZone;

    public @Nullable String timeZone() {
        if (timeZone == null) return null;
        return timeZone.getValue("CustomLayerCloudwatchConfigurationLogStream.timeZone");
    }

}
