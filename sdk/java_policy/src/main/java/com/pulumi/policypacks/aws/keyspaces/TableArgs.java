// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.keyspaces;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.keyspaces.inputs.TableCapacitySpecificationArgs;
import com.pulumi.policypacks.aws.keyspaces.inputs.TableClientSideTimestampsArgs;
import com.pulumi.policypacks.aws.keyspaces.inputs.TableCommentArgs;
import com.pulumi.policypacks.aws.keyspaces.inputs.TableEncryptionSpecificationArgs;
import com.pulumi.policypacks.aws.keyspaces.inputs.TablePointInTimeRecoveryArgs;
import com.pulumi.policypacks.aws.keyspaces.inputs.TableSchemaDefinitionArgs;
import com.pulumi.policypacks.aws.keyspaces.inputs.TableTtlArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:keyspaces/table:Table")
public final class TableArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Specifies the read/write throughput capacity mode for the table.
     * 
     */
    @PolicyResourceProperty(name="capacitySpecification", flag="unknown_capacitySpecification")
    private TableCapacitySpecificationArgs value_capacitySpecification;
    private boolean unknown_capacitySpecification;
    public TableCapacitySpecificationArgs capacitySpecification() {
        if (!unknown_capacitySpecification) return value_capacitySpecification;
        throw new UndeferrableValueException("Value 'TableArgs.capacitySpecification' is not present");
    }

    /**
     * Enables client-side timestamps for the table. By default, the setting is disabled.
     * 
     */
    @PolicyResourceProperty(name="clientSideTimestamps", flag="unknown_clientSideTimestamps")
    private TableClientSideTimestampsArgs value_clientSideTimestamps;
    private boolean unknown_clientSideTimestamps;
    public TableClientSideTimestampsArgs clientSideTimestamps() {
        if (!unknown_clientSideTimestamps) return value_clientSideTimestamps;
        throw new UndeferrableValueException("Value 'TableArgs.clientSideTimestamps' is not present");
    }

    /**
     * A description of the table.
     * 
     */
    @PolicyResourceProperty(name="comment", flag="unknown_comment")
    private TableCommentArgs value_comment;
    private boolean unknown_comment;
    public TableCommentArgs comment() {
        if (!unknown_comment) return value_comment;
        throw new UndeferrableValueException("Value 'TableArgs.comment' is not present");
    }

    /**
     * The default Time to Live setting in seconds for the table. More information can be found in the [Developer Guide](https://docs.aws.amazon.com/keyspaces/latest/devguide/TTL-how-it-works.html#ttl-howitworks_default_ttl).
     * 
     */
    @PolicyResourceProperty(name="defaultTimeToLive", flag="unknown_defaultTimeToLive")
    private Integer value_defaultTimeToLive;
    private boolean unknown_defaultTimeToLive;
    public Integer defaultTimeToLive() {
        if (!unknown_defaultTimeToLive) return value_defaultTimeToLive;
        throw new UndeferrableValueException("Value 'TableArgs.defaultTimeToLive' is not present");
    }

    /**
     * Specifies how the encryption key for encryption at rest is managed for the table. More information can be found in the [Developer Guide](https://docs.aws.amazon.com/keyspaces/latest/devguide/EncryptionAtRest.html).
     * 
     */
    @PolicyResourceProperty(name="encryptionSpecification", flag="unknown_encryptionSpecification")
    private TableEncryptionSpecificationArgs value_encryptionSpecification;
    private boolean unknown_encryptionSpecification;
    public TableEncryptionSpecificationArgs encryptionSpecification() {
        if (!unknown_encryptionSpecification) return value_encryptionSpecification;
        throw new UndeferrableValueException("Value 'TableArgs.encryptionSpecification' is not present");
    }

    /**
     * The name of the keyspace that the table is going to be created in.
     * 
     */
    @PolicyResourceProperty(name="keyspaceName", flag="unknown_keyspaceName")
    private String value_keyspaceName;
    private boolean unknown_keyspaceName;
    public String keyspaceName() {
        if (!unknown_keyspaceName) return value_keyspaceName;
        throw new UndeferrableValueException("Value 'TableArgs.keyspaceName' is not present");
    }

    /**
     * Specifies if point-in-time recovery is enabled or disabled for the table. More information can be found in the [Developer Guide](https://docs.aws.amazon.com/keyspaces/latest/devguide/PointInTimeRecovery.html).
     * 
     */
    @PolicyResourceProperty(name="pointInTimeRecovery", flag="unknown_pointInTimeRecovery")
    private TablePointInTimeRecoveryArgs value_pointInTimeRecovery;
    private boolean unknown_pointInTimeRecovery;
    public TablePointInTimeRecoveryArgs pointInTimeRecovery() {
        if (!unknown_pointInTimeRecovery) return value_pointInTimeRecovery;
        throw new UndeferrableValueException("Value 'TableArgs.pointInTimeRecovery' is not present");
    }

    /**
     * Describes the schema of the table.
     * 
     */
    @PolicyResourceProperty(name="schemaDefinition", flag="unknown_schemaDefinition")
    private TableSchemaDefinitionArgs value_schemaDefinition;
    private boolean unknown_schemaDefinition;
    public TableSchemaDefinitionArgs schemaDefinition() {
        if (!unknown_schemaDefinition) return value_schemaDefinition;
        throw new UndeferrableValueException("Value 'TableArgs.schemaDefinition' is not present");
    }

    /**
     * The name of the table.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="tableName", flag="unknown_tableName")
    private String value_tableName;
    private boolean unknown_tableName;
    public String tableName() {
        if (!unknown_tableName) return value_tableName;
        throw new UndeferrableValueException("Value 'TableArgs.tableName' is not present");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'TableArgs.tags' is not present");
    }

    /**
     * Enables Time to Live custom settings for the table. More information can be found in the [Developer Guide](https://docs.aws.amazon.com/keyspaces/latest/devguide/TTL.html).
     * 
     */
    @PolicyResourceProperty(name="ttl", flag="unknown_ttl")
    private TableTtlArgs value_ttl;
    private boolean unknown_ttl;
    public TableTtlArgs ttl() {
        if (!unknown_ttl) return value_ttl;
        throw new UndeferrableValueException("Value 'TableArgs.ttl' is not present");
    }

}
