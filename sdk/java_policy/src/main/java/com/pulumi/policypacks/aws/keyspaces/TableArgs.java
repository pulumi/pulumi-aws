// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.keyspaces;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.keyspaces.inputs.TableCapacitySpecificationArgs;
import com.pulumi.policypacks.aws.keyspaces.inputs.TableClientSideTimestampsArgs;
import com.pulumi.policypacks.aws.keyspaces.inputs.TableCommentArgs;
import com.pulumi.policypacks.aws.keyspaces.inputs.TableEncryptionSpecificationArgs;
import com.pulumi.policypacks.aws.keyspaces.inputs.TablePointInTimeRecoveryArgs;
import com.pulumi.policypacks.aws.keyspaces.inputs.TableSchemaDefinitionArgs;
import com.pulumi.policypacks.aws.keyspaces.inputs.TableTtlArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:keyspaces/table:Table")
public final class TableArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Specifies the read/write throughput capacity mode for the table.
     * 
     */
    private UndeferrableValue<TableCapacitySpecificationArgs> capacitySpecification;

    public TableCapacitySpecificationArgs capacitySpecification() {
        if (capacitySpecification == null) return null;
        return capacitySpecification.getValue("TableArgs.capacitySpecification");
    }

    /**
     * Enables client-side timestamps for the table. By default, the setting is disabled.
     * 
     */
    private UndeferrableValue<TableClientSideTimestampsArgs> clientSideTimestamps;

    public TableClientSideTimestampsArgs clientSideTimestamps() {
        if (clientSideTimestamps == null) return null;
        return clientSideTimestamps.getValue("TableArgs.clientSideTimestamps");
    }

    /**
     * A description of the table.
     * 
     */
    private UndeferrableValue<TableCommentArgs> comment;

    public TableCommentArgs comment() {
        if (comment == null) return null;
        return comment.getValue("TableArgs.comment");
    }

    /**
     * The default Time to Live setting in seconds for the table. More information can be found in the [Developer Guide](https://docs.aws.amazon.com/keyspaces/latest/devguide/TTL-how-it-works.html#ttl-howitworks_default_ttl).
     * 
     */
    private UndeferrableValue<Integer> defaultTimeToLive;

    public Integer defaultTimeToLive() {
        if (defaultTimeToLive == null) return null;
        return defaultTimeToLive.getValue("TableArgs.defaultTimeToLive");
    }

    /**
     * Specifies how the encryption key for encryption at rest is managed for the table. More information can be found in the [Developer Guide](https://docs.aws.amazon.com/keyspaces/latest/devguide/EncryptionAtRest.html).
     * 
     */
    private UndeferrableValue<TableEncryptionSpecificationArgs> encryptionSpecification;

    public TableEncryptionSpecificationArgs encryptionSpecification() {
        if (encryptionSpecification == null) return null;
        return encryptionSpecification.getValue("TableArgs.encryptionSpecification");
    }

    /**
     * The name of the keyspace that the table is going to be created in.
     * 
     */
    private UndeferrableValue<String> keyspaceName;

    public String keyspaceName() {
        if (keyspaceName == null) return null;
        return keyspaceName.getValue("TableArgs.keyspaceName");
    }

    /**
     * Specifies if point-in-time recovery is enabled or disabled for the table. More information can be found in the [Developer Guide](https://docs.aws.amazon.com/keyspaces/latest/devguide/PointInTimeRecovery.html).
     * 
     */
    private UndeferrableValue<TablePointInTimeRecoveryArgs> pointInTimeRecovery;

    public TablePointInTimeRecoveryArgs pointInTimeRecovery() {
        if (pointInTimeRecovery == null) return null;
        return pointInTimeRecovery.getValue("TableArgs.pointInTimeRecovery");
    }

    /**
     * Describes the schema of the table.
     * 
     */
    private UndeferrableValue<TableSchemaDefinitionArgs> schemaDefinition;

    public TableSchemaDefinitionArgs schemaDefinition() {
        if (schemaDefinition == null) return null;
        return schemaDefinition.getValue("TableArgs.schemaDefinition");
    }

    /**
     * The name of the table.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> tableName;

    public String tableName() {
        if (tableName == null) return null;
        return tableName.getValue("TableArgs.tableName");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("TableArgs.tags");
    }

    /**
     * Enables Time to Live custom settings for the table. More information can be found in the [Developer Guide](https://docs.aws.amazon.com/keyspaces/latest/devguide/TTL.html).
     * 
     */
    private UndeferrableValue<TableTtlArgs> ttl;

    public TableTtlArgs ttl() {
        if (ttl == null) return null;
        return ttl.getValue("TableArgs.ttl");
    }

}
