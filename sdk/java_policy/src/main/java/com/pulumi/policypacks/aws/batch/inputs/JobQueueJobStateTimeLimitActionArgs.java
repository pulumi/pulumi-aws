// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.batch.inputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.Integer;
import java.lang.String;


public final class JobQueueJobStateTimeLimitActionArgs {

    /**
     * The action to take when a job is at the head of the job queue in the specified state for the specified period of time. Valid values include `&#34;CANCEL&#34;`
     * 
     */
    private UndeferrableValue<String> action;

    public String action() {
        if (action == null) return null;
        return action.getValue("JobQueueJobStateTimeLimitActionArgs.action");
    }

    /**
     * The approximate amount of time, in seconds, that must pass with the job in the specified state before the action is taken. Valid values include integers between `600` &amp; `86400`
     * 
     */
    private UndeferrableValue<Integer> maxTimeSeconds;

    public Integer maxTimeSeconds() {
        if (maxTimeSeconds == null) return null;
        return maxTimeSeconds.getValue("JobQueueJobStateTimeLimitActionArgs.maxTimeSeconds");
    }

    /**
     * The reason to log for the action being taken.
     * 
     */
    private UndeferrableValue<String> reason;

    public String reason() {
        if (reason == null) return null;
        return reason.getValue("JobQueueJobStateTimeLimitActionArgs.reason");
    }

    /**
     * The state of the job needed to trigger the action. Valid values include `&#34;RUNNABLE&#34;`.
     * 
     */
    private UndeferrableValue<String> state;

    public String state() {
        if (state == null) return null;
        return state.getValue("JobQueueJobStateTimeLimitActionArgs.state");
    }

}
