// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.apigatewayv2.outputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class ApiCorsConfiguration {

    /**
     * Whether credentials are included in the CORS request.
     * 
     */
    private @Nullable UndeferrableValue<Boolean> allowCredentials;

    public @Nullable Boolean allowCredentials() {
        if (allowCredentials == null) return null;
        return allowCredentials.getValue("ApiCorsConfiguration.allowCredentials");
    }

    /**
     * Set of allowed HTTP headers.
     * 
     */
    private @Nullable UndeferrableValue<List<String>> allowHeaders;

    public @Nullable List<String> allowHeaders() {
        if (allowHeaders == null) return null;
        return allowHeaders.getValue("ApiCorsConfiguration.allowHeaders");
    }

    /**
     * Set of allowed HTTP methods.
     * 
     */
    private @Nullable UndeferrableValue<List<String>> allowMethods;

    public @Nullable List<String> allowMethods() {
        if (allowMethods == null) return null;
        return allowMethods.getValue("ApiCorsConfiguration.allowMethods");
    }

    /**
     * Set of allowed origins.
     * 
     */
    private @Nullable UndeferrableValue<List<String>> allowOrigins;

    public @Nullable List<String> allowOrigins() {
        if (allowOrigins == null) return null;
        return allowOrigins.getValue("ApiCorsConfiguration.allowOrigins");
    }

    /**
     * Set of exposed HTTP headers.
     * 
     */
    private @Nullable UndeferrableValue<List<String>> exposeHeaders;

    public @Nullable List<String> exposeHeaders() {
        if (exposeHeaders == null) return null;
        return exposeHeaders.getValue("ApiCorsConfiguration.exposeHeaders");
    }

    /**
     * Number of seconds that the browser should cache preflight request results.
     * 
     */
    private @Nullable UndeferrableValue<Integer> maxAge;

    public @Nullable Integer maxAge() {
        if (maxAge == null) return null;
        return maxAge.getValue("ApiCorsConfiguration.maxAge");
    }

}
