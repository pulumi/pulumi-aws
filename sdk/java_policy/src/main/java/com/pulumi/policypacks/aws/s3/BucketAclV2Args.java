// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.s3;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.s3.inputs.BucketAclV2AccessControlPolicyArgs;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:s3/bucketAclV2:BucketAclV2")
public final class BucketAclV2Args extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Configuration block that sets the ACL permissions for an object per grantee. See below.
     * 
     */
    private UndeferrableValue<BucketAclV2AccessControlPolicyArgs> accessControlPolicy;

    public BucketAclV2AccessControlPolicyArgs accessControlPolicy() {
        if (accessControlPolicy == null) return null;
        return accessControlPolicy.getValue("BucketAclV2Args.accessControlPolicy");
    }

    /**
     * Specifies the Canned ACL to apply to the bucket. Valid values: `private`, `public-read`, `public-read-write`, `aws-exec-read`, `authenticated-read`, `bucket-owner-read`, `bucket-owner-full-control`, `log-delivery-write`. Full details are available on the [AWS documentation](https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl).
     * 
     */
    private UndeferrableValue<String> acl;

    public String acl() {
        if (acl == null) return null;
        return acl.getValue("BucketAclV2Args.acl");
    }

    /**
     * Bucket to which to apply the ACL.
     * 
     */
    private UndeferrableValue<String> bucket;

    public String bucket() {
        if (bucket == null) return null;
        return bucket.getValue("BucketAclV2Args.bucket");
    }

    /**
     * Account ID of the expected bucket owner.
     * 
     */
    private UndeferrableValue<String> expectedBucketOwner;

    public String expectedBucketOwner() {
        if (expectedBucketOwner == null) return null;
        return expectedBucketOwner.getValue("BucketAclV2Args.expectedBucketOwner");
    }

}
