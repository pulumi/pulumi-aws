// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.sagemaker;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.sagemaker.inputs.EndpointConfigurationAsyncInferenceConfigArgs;
import com.pulumi.policypacks.aws.sagemaker.inputs.EndpointConfigurationDataCaptureConfigArgs;
import com.pulumi.policypacks.aws.sagemaker.inputs.EndpointConfigurationProductionVariantArgs;
import com.pulumi.policypacks.aws.sagemaker.inputs.EndpointConfigurationShadowProductionVariantArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:sagemaker/endpointConfiguration:EndpointConfiguration")
public final class EndpointConfigurationArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Specifies configuration for how an endpoint performs asynchronous inference.
     * 
     */
    private UndeferrableValue<EndpointConfigurationAsyncInferenceConfigArgs> asyncInferenceConfig;

    public EndpointConfigurationAsyncInferenceConfigArgs asyncInferenceConfig() {
        if (asyncInferenceConfig == null) return null;
        return asyncInferenceConfig.getValue("EndpointConfigurationArgs.asyncInferenceConfig");
    }

    /**
     * Specifies the parameters to capture input/output of SageMaker AI models endpoints. Fields are documented below.
     * 
     */
    private UndeferrableValue<EndpointConfigurationDataCaptureConfigArgs> dataCaptureConfig;

    public EndpointConfigurationDataCaptureConfigArgs dataCaptureConfig() {
        if (dataCaptureConfig == null) return null;
        return dataCaptureConfig.getValue("EndpointConfigurationArgs.dataCaptureConfig");
    }

    /**
     * Amazon Resource Name (ARN) of a AWS Key Management Service key that Amazon SageMaker AI uses to encrypt data on the storage volume attached to the ML compute instance that hosts the endpoint.
     * 
     */
    private UndeferrableValue<String> kmsKeyArn;

    public String kmsKeyArn() {
        if (kmsKeyArn == null) return null;
        return kmsKeyArn.getValue("EndpointConfigurationArgs.kmsKeyArn");
    }

    /**
     * The name of the endpoint configuration. If omitted, this provider will assign a random, unique name. Conflicts with `name_prefix`.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("EndpointConfigurationArgs.name");
    }

    /**
     * Creates a unique endpoint configuration name beginning with the specified prefix. Conflicts with `name`.
     * 
     */
    private UndeferrableValue<String> namePrefix;

    public String namePrefix() {
        if (namePrefix == null) return null;
        return namePrefix.getValue("EndpointConfigurationArgs.namePrefix");
    }

    /**
     * An list of ProductionVariant objects, one for each model that you want to host at this endpoint. Fields are documented below.
     * 
     */
    private UndeferrableValue<List<EndpointConfigurationProductionVariantArgs>> productionVariants;

    public List<EndpointConfigurationProductionVariantArgs> productionVariants() {
        if (productionVariants == null) return null;
        return productionVariants.getValue("EndpointConfigurationArgs.productionVariants");
    }

    /**
     * Array of ProductionVariant objects. There is one for each model that you want to host at this endpoint in shadow mode with production traffic replicated from the model specified on ProductionVariants. If you use this field, you can only specify one variant for ProductionVariants and one variant for ShadowProductionVariants. Fields are documented below.
     * 
     */
    private UndeferrableValue<List<EndpointConfigurationShadowProductionVariantArgs>> shadowProductionVariants;

    public List<EndpointConfigurationShadowProductionVariantArgs> shadowProductionVariants() {
        if (shadowProductionVariants == null) return null;
        return shadowProductionVariants.getValue("EndpointConfigurationArgs.shadowProductionVariants");
    }

    /**
     * A mapping of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("EndpointConfigurationArgs.tags");
    }

}
