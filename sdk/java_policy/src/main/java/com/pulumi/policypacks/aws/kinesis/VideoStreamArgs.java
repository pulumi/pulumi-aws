// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.kinesis;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:kinesis/videoStream:VideoStream")
public final class VideoStreamArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The number of hours that you want to retain the data in the stream. Kinesis Video Streams retains the data in a data store that is associated with the stream. The default value is `0`, indicating that the stream does not persist data.
     * 
     */
    @PolicyResourceProperty(name="dataRetentionInHours", flag="unknown_dataRetentionInHours")
    private Integer value_dataRetentionInHours;
    private boolean unknown_dataRetentionInHours;
    public Integer dataRetentionInHours() {
        if (!unknown_dataRetentionInHours) return value_dataRetentionInHours;
        throw new UndeferrableValueException("Value 'VideoStreamArgs.dataRetentionInHours' is not present");
    }

    /**
     * The name of the device that is writing to the stream. **In the current implementation, Kinesis Video Streams does not use this name.**
     * 
     */
    @PolicyResourceProperty(name="deviceName", flag="unknown_deviceName")
    private String value_deviceName;
    private boolean unknown_deviceName;
    public String deviceName() {
        if (!unknown_deviceName) return value_deviceName;
        throw new UndeferrableValueException("Value 'VideoStreamArgs.deviceName' is not present");
    }

    /**
     * The ID of the AWS Key Management Service (AWS KMS) key that you want Kinesis Video Streams to use to encrypt stream data. If no key ID is specified, the default, Kinesis Video-managed key (`aws/kinesisvideo`) is used.
     * 
     */
    @PolicyResourceProperty(name="kmsKeyId", flag="unknown_kmsKeyId")
    private String value_kmsKeyId;
    private boolean unknown_kmsKeyId;
    public String kmsKeyId() {
        if (!unknown_kmsKeyId) return value_kmsKeyId;
        throw new UndeferrableValueException("Value 'VideoStreamArgs.kmsKeyId' is not present");
    }

    /**
     * The media type of the stream. Consumers of the stream can use this information when processing the stream. For more information about media types, see [Media Types](http://www.iana.org/assignments/media-types/media-types.xhtml). If you choose to specify the MediaType, see [Naming Requirements](https://tools.ietf.org/html/rfc6838#section-4.2) for guidelines.
     * 
     */
    @PolicyResourceProperty(name="mediaType", flag="unknown_mediaType")
    private String value_mediaType;
    private boolean unknown_mediaType;
    public String mediaType() {
        if (!unknown_mediaType) return value_mediaType;
        throw new UndeferrableValueException("Value 'VideoStreamArgs.mediaType' is not present");
    }

    /**
     * A name to identify the stream. This is unique to the
     * AWS account and region the Stream is created in.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'VideoStreamArgs.name' is not present");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'VideoStreamArgs.tags' is not present");
    }

}
