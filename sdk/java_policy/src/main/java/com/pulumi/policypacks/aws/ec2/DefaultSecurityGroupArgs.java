// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.ec2.inputs.DefaultSecurityGroupEgressArgs;
import com.pulumi.policypacks.aws.ec2.inputs.DefaultSecurityGroupIngressArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ec2/defaultSecurityGroup:DefaultSecurityGroup")
public final class DefaultSecurityGroupArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Configuration block. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="egress", flag="unknown_egress")
    private List<DefaultSecurityGroupEgressArgs> value_egress;
    private boolean unknown_egress;
    public List<DefaultSecurityGroupEgressArgs> egress() {
        if (!unknown_egress) return value_egress;
        throw new UndeferrableValueException("Value 'DefaultSecurityGroupArgs.egress' is not present");
    }

    /**
     * Configuration block. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="ingress", flag="unknown_ingress")
    private List<DefaultSecurityGroupIngressArgs> value_ingress;
    private boolean unknown_ingress;
    public List<DefaultSecurityGroupIngressArgs> ingress() {
        if (!unknown_ingress) return value_ingress;
        throw new UndeferrableValueException("Value 'DefaultSecurityGroupArgs.ingress' is not present");
    }

    @PolicyResourceProperty(name="revokeRulesOnDelete", flag="unknown_revokeRulesOnDelete")
    private Boolean value_revokeRulesOnDelete;
    private boolean unknown_revokeRulesOnDelete;
    public Boolean revokeRulesOnDelete() {
        if (!unknown_revokeRulesOnDelete) return value_revokeRulesOnDelete;
        throw new UndeferrableValueException("Value 'DefaultSecurityGroupArgs.revokeRulesOnDelete' is not present");
    }

    /**
     * Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'DefaultSecurityGroupArgs.tags' is not present");
    }

    /**
     * VPC ID. **Note that changing the `vpc_id` will _not_ restore any default security group rules that were modified, added, or removed.** It will be left in its current state.
     * 
     */
    @PolicyResourceProperty(name="vpcId", flag="unknown_vpcId")
    private String value_vpcId;
    private boolean unknown_vpcId;
    public String vpcId() {
        if (!unknown_vpcId) return value_vpcId;
        throw new UndeferrableValueException("Value 'DefaultSecurityGroupArgs.vpcId' is not present");
    }

}
