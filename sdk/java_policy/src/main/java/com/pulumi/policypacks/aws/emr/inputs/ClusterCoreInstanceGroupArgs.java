// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.emr.inputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.emr.inputs.ClusterCoreInstanceGroupEbsConfigArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class ClusterCoreInstanceGroupArgs {

    /**
     * String containing the [EMR Auto Scaling Policy](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-automatic-scaling.html) JSON.
     * 
     */
    private UndeferrableValue<String> autoscalingPolicy;

    public String autoscalingPolicy() {
        if (autoscalingPolicy == null) return null;
        return autoscalingPolicy.getValue("ClusterCoreInstanceGroupArgs.autoscalingPolicy");
    }

    /**
     * Bid price for each EC2 instance in the instance group, expressed in USD. By setting this attribute, the instance group is being declared as a Spot Instance, and will implicitly create a Spot request. Leave this blank to use On-Demand Instances.
     * 
     */
    private UndeferrableValue<String> bidPrice;

    public String bidPrice() {
        if (bidPrice == null) return null;
        return bidPrice.getValue("ClusterCoreInstanceGroupArgs.bidPrice");
    }

    /**
     * Configuration block(s) for EBS volumes attached to each instance in the instance group. Detailed below.
     * 
     */
    private UndeferrableValue<List<ClusterCoreInstanceGroupEbsConfigArgs>> ebsConfigs;

    public List<ClusterCoreInstanceGroupEbsConfigArgs> ebsConfigs() {
        if (ebsConfigs == null) return null;
        return ebsConfigs.getValue("ClusterCoreInstanceGroupArgs.ebsConfigs");
    }

    /**
     * Core node type Instance Group ID, if using Instance Group for this node type.
     * 
     */
    private UndeferrableValue<String> id;

    public String id() {
        if (id == null) return null;
        return id.getValue("ClusterCoreInstanceGroupArgs.id");
    }

    /**
     * Target number of instances for the instance group. Must be at least 1. Defaults to 1.
     * 
     */
    private UndeferrableValue<Integer> instanceCount;

    public Integer instanceCount() {
        if (instanceCount == null) return null;
        return instanceCount.getValue("ClusterCoreInstanceGroupArgs.instanceCount");
    }

    /**
     * EC2 instance type for all instances in the instance group.
     * 
     */
    private UndeferrableValue<String> instanceType;

    public String instanceType() {
        if (instanceType == null) return null;
        return instanceType.getValue("ClusterCoreInstanceGroupArgs.instanceType");
    }

    /**
     * Friendly name given to the instance group.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("ClusterCoreInstanceGroupArgs.name");
    }

}
