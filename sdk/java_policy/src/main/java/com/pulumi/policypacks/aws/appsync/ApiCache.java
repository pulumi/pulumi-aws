// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appsync;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:appsync/apiCache:ApiCache")
public final class ApiCache extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Caching behavior. Valid values are `FULL_REQUEST_CACHING` and `PER_RESOLVER_CACHING`.
     * 
     */
    @PolicyResourceProperty(name="apiCachingBehavior", flag="unknown_apiCachingBehavior")
    private String value_apiCachingBehavior;
    private boolean unknown_apiCachingBehavior;
    public String apiCachingBehavior() {
        if (!unknown_apiCachingBehavior) return value_apiCachingBehavior;
        throw new UndeferrableValueException("Value 'ApiCache.apiCachingBehavior' is not present");
    }

    /**
     * GraphQL API ID.
     * 
     */
    @PolicyResourceProperty(name="apiId", flag="unknown_apiId")
    private String value_apiId;
    private boolean unknown_apiId;
    public String apiId() {
        if (!unknown_apiId) return value_apiId;
        throw new UndeferrableValueException("Value 'ApiCache.apiId' is not present");
    }

    /**
     * At-rest encryption flag for cache. You cannot update this setting after creation.
     * 
     */
    @PolicyResourceProperty(name="atRestEncryptionEnabled", flag="unknown_atRestEncryptionEnabled")
    private @Nullable Boolean value_atRestEncryptionEnabled;
    private boolean unknown_atRestEncryptionEnabled;
    public @Nullable Boolean atRestEncryptionEnabled() {
        if (!unknown_atRestEncryptionEnabled) return value_atRestEncryptionEnabled;
        throw new UndeferrableValueException("Value 'ApiCache.atRestEncryptionEnabled' is not present");
    }

    /**
     * Transit encryption flag when connecting to cache. You cannot update this setting after creation.
     * 
     */
    @PolicyResourceProperty(name="transitEncryptionEnabled", flag="unknown_transitEncryptionEnabled")
    private @Nullable Boolean value_transitEncryptionEnabled;
    private boolean unknown_transitEncryptionEnabled;
    public @Nullable Boolean transitEncryptionEnabled() {
        if (!unknown_transitEncryptionEnabled) return value_transitEncryptionEnabled;
        throw new UndeferrableValueException("Value 'ApiCache.transitEncryptionEnabled' is not present");
    }

    /**
     * TTL in seconds for cache entries.
     * 
     */
    @PolicyResourceProperty(name="ttl", flag="unknown_ttl")
    private Integer value_ttl;
    private boolean unknown_ttl;
    public Integer ttl() {
        if (!unknown_ttl) return value_ttl;
        throw new UndeferrableValueException("Value 'ApiCache.ttl' is not present");
    }

    /**
     * Cache instance type. Valid values are `SMALL`, `MEDIUM`, `LARGE`, `XLARGE`, `LARGE_2X`, `LARGE_4X`, `LARGE_8X`, `LARGE_12X`, `T2_SMALL`, `T2_MEDIUM`, `R4_LARGE`, `R4_XLARGE`, `R4_2XLARGE`, `R4_4XLARGE`, `R4_8XLARGE`.
     * 
     */
    @PolicyResourceProperty(name="type", flag="unknown_type")
    private String value_type;
    private boolean unknown_type;
    public String type() {
        if (!unknown_type) return value_type;
        throw new UndeferrableValueException("Value 'ApiCache.type' is not present");
    }

}
