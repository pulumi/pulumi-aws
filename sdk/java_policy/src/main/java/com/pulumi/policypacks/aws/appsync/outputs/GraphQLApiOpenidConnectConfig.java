// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appsync.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class GraphQLApiOpenidConnectConfig {

    /**
     * Number of milliseconds a token is valid after being authenticated.
     * 
     */
    @PolicyResourceProperty(name="authTtl", flag="unknown_authTtl")
    private @Nullable Integer value_authTtl;
    private boolean unknown_authTtl;
    public @Nullable Integer authTtl() {
        if (!unknown_authTtl) return value_authTtl;
        throw new UndeferrableValueException("Value 'GraphQLApiOpenidConnectConfig.authTtl' is not present");
    }

    /**
     * Client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers at a time.
     * 
     */
    @PolicyResourceProperty(name="clientId", flag="unknown_clientId")
    private @Nullable String value_clientId;
    private boolean unknown_clientId;
    public @Nullable String clientId() {
        if (!unknown_clientId) return value_clientId;
        throw new UndeferrableValueException("Value 'GraphQLApiOpenidConnectConfig.clientId' is not present");
    }

    /**
     * Number of milliseconds a token is valid after being issued to a user.
     * 
     */
    @PolicyResourceProperty(name="iatTtl", flag="unknown_iatTtl")
    private @Nullable Integer value_iatTtl;
    private boolean unknown_iatTtl;
    public @Nullable Integer iatTtl() {
        if (!unknown_iatTtl) return value_iatTtl;
        throw new UndeferrableValueException("Value 'GraphQLApiOpenidConnectConfig.iatTtl' is not present");
    }

    /**
     * Issuer for the OpenID Connect configuration. The issuer returned by discovery MUST exactly match the value of iss in the ID Token.
     * 
     */
    @PolicyResourceProperty(name="issuer", flag="unknown_issuer")
    private String value_issuer;
    private boolean unknown_issuer;
    public String issuer() {
        if (!unknown_issuer) return value_issuer;
        throw new UndeferrableValueException("Value 'GraphQLApiOpenidConnectConfig.issuer' is not present");
    }

}
