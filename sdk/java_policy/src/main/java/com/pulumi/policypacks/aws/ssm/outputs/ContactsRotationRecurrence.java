// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ssm.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.ssm.outputs.ContactsRotationRecurrenceDailySetting;
import com.pulumi.policypacks.aws.ssm.outputs.ContactsRotationRecurrenceMonthlySetting;
import com.pulumi.policypacks.aws.ssm.outputs.ContactsRotationRecurrenceShiftCoverage;
import com.pulumi.policypacks.aws.ssm.outputs.ContactsRotationRecurrenceWeeklySetting;
import java.lang.Integer;
import java.util.List;
import javax.annotation.Nullable;


public final class ContactsRotationRecurrence {

    private @Nullable UndeferrableValue<List<ContactsRotationRecurrenceDailySetting>> dailySettings;

    public @Nullable List<ContactsRotationRecurrenceDailySetting> dailySettings() {
        if (dailySettings == null) return null;
        return dailySettings.getValue("ContactsRotationRecurrence.dailySettings");
    }

    /**
     * (Optional) Information about on-call rotations that recur monthly. See Monthly Settings for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<ContactsRotationRecurrenceMonthlySetting>> monthlySettings;

    public @Nullable List<ContactsRotationRecurrenceMonthlySetting> monthlySettings() {
        if (monthlySettings == null) return null;
        return monthlySettings.getValue("ContactsRotationRecurrence.monthlySettings");
    }

    /**
     * (Required) The number of contacts, or shift team members designated to be on call concurrently during a shift.
     * 
     */
    private UndeferrableValue<Integer> numberOfOnCalls;

    public Integer numberOfOnCalls() {
        if (numberOfOnCalls == null) return null;
        return numberOfOnCalls.getValue("ContactsRotationRecurrence.numberOfOnCalls");
    }

    /**
     * (Required) The number of days, weeks, or months a single rotation lasts.
     * 
     */
    private UndeferrableValue<Integer> recurrenceMultiplier;

    public Integer recurrenceMultiplier() {
        if (recurrenceMultiplier == null) return null;
        return recurrenceMultiplier.getValue("ContactsRotationRecurrence.recurrenceMultiplier");
    }

    /**
     * (Optional) Information about the days of the week that the on-call rotation coverage includes. See Shift Coverages for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<ContactsRotationRecurrenceShiftCoverage>> shiftCoverages;

    public @Nullable List<ContactsRotationRecurrenceShiftCoverage> shiftCoverages() {
        if (shiftCoverages == null) return null;
        return shiftCoverages.getValue("ContactsRotationRecurrence.shiftCoverages");
    }

    /**
     * (Optional) Information about on-call rotations that recur weekly. See Weekly Settings for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<ContactsRotationRecurrenceWeeklySetting>> weeklySettings;

    public @Nullable List<ContactsRotationRecurrenceWeeklySetting> weeklySettings() {
        if (weeklySettings == null) return null;
        return weeklySettings.getValue("ContactsRotationRecurrence.weeklySettings");
    }

}
