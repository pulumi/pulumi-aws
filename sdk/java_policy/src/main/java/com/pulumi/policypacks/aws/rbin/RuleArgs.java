// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.rbin;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.rbin.inputs.RuleLockConfigurationArgs;
import com.pulumi.policypacks.aws.rbin.inputs.RuleResourceTagArgs;
import com.pulumi.policypacks.aws.rbin.inputs.RuleRetentionPeriodArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:rbin/rule:Rule")
public final class RuleArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The retention rule description.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private String value_description;
    private boolean unknown_description;
    public String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'RuleArgs.description' is not present");
    }

    /**
     * Information about the retention rule lock configuration. See `lock_configuration` below.
     * 
     */
    @PolicyResourceProperty(name="lockConfiguration", flag="unknown_lockConfiguration")
    private RuleLockConfigurationArgs value_lockConfiguration;
    private boolean unknown_lockConfiguration;
    public RuleLockConfigurationArgs lockConfiguration() {
        if (!unknown_lockConfiguration) return value_lockConfiguration;
        throw new UndeferrableValueException("Value 'RuleArgs.lockConfiguration' is not present");
    }

    /**
     * Specifies the resource tags to use to identify resources that are to be retained by a tag-level retention rule. See `resource_tags` below.
     * 
     */
    @PolicyResourceProperty(name="resourceTags", flag="unknown_resourceTags")
    private List<RuleResourceTagArgs> value_resourceTags;
    private boolean unknown_resourceTags;
    public List<RuleResourceTagArgs> resourceTags() {
        if (!unknown_resourceTags) return value_resourceTags;
        throw new UndeferrableValueException("Value 'RuleArgs.resourceTags' is not present");
    }

    /**
     * The resource type to be retained by the retention rule. Valid values are `EBS_SNAPSHOT` and `EC2_IMAGE`.
     * 
     */
    @PolicyResourceProperty(name="resourceType", flag="unknown_resourceType")
    private String value_resourceType;
    private boolean unknown_resourceType;
    public String resourceType() {
        if (!unknown_resourceType) return value_resourceType;
        throw new UndeferrableValueException("Value 'RuleArgs.resourceType' is not present");
    }

    /**
     * Information about the retention period for which the retention rule is to retain resources. See `retention_period` below.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="retentionPeriod", flag="unknown_retentionPeriod")
    private RuleRetentionPeriodArgs value_retentionPeriod;
    private boolean unknown_retentionPeriod;
    public RuleRetentionPeriodArgs retentionPeriod() {
        if (!unknown_retentionPeriod) return value_retentionPeriod;
        throw new UndeferrableValueException("Value 'RuleArgs.retentionPeriod' is not present");
    }

    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'RuleArgs.tags' is not present");
    }

}
