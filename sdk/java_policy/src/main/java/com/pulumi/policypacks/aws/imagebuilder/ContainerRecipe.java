// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.imagebuilder;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.imagebuilder.ContainerRecipeComponent;
import com.pulumi.policypacks.aws.imagebuilder.ContainerRecipeInstanceConfiguration;
import com.pulumi.policypacks.aws.imagebuilder.ContainerRecipeTargetRepository;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;


@PolicyResourceType(type="aws:imagebuilder/containerRecipe:ContainerRecipe")
public final class ContainerRecipe extends com.pulumi.resources.PolicyResource {

    /**
     * (Required) Amazon Resource Name (ARN) of the container recipe.
     * 
     */
    public String arn;



    /**
     * Ordered configuration block(s) with components for the container recipe. Detailed below.
     * 
     */
    public List<ContainerRecipeComponent> components;



    /**
     * The type of the container to create. Valid values: `DOCKER`.
     * 
     */
    public String containerType;



    /**
     * Date the container recipe was created.
     * 
     */
    public String dateCreated;



    /**
     * The description of the container recipe.
     * 
     */
    public String description;



    /**
     * The Dockerfile template used to build the image as an inline data blob.
     * 
     */
    public String dockerfileTemplateData;



    /**
     * The Amazon S3 URI for the Dockerfile that will be used to build the container image.
     * 
     */
    public String dockerfileTemplateUri;



    /**
     * A flag that indicates if the target container is encrypted.
     * 
     */
    public Boolean encrypted;



    /**
     * Configuration block used to configure an instance for building and testing container images. Detailed below.
     * 
     */
    public ContainerRecipeInstanceConfiguration instanceConfiguration;



    /**
     * The KMS key used to encrypt the container image.
     * 
     */
    public String kmsKeyId;



    /**
     * The name of the container recipe.
     * 
     */
    public String name;



    /**
     * Owner of the container recipe.
     * 
     */
    public String owner;



    /**
     * The base image for the container recipe.
     * 
     */
    public String parentImage;



    /**
     * Platform of the container recipe.
     * 
     */
    public String platform;



    /**
     * Specifies the operating system platform when you use a custom base image.
     * 
     */
    public String platformOverride;



    /**
     * Key-value map of resource tags for the container recipe. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



    /**
     * The destination repository for the container image. Detailed below.
     * 
     */
    public ContainerRecipeTargetRepository targetRepository;



    /**
     * Version of the container recipe.
     * 
     * The following attributes are optional:
     * 
     */
    public String version;



    /**
     * The working directory to be used during build and test workflows.
     * 
     */
    public String workingDirectory;



}
