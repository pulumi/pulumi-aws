// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.apigateway;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:apigateway/method:Method")
public final class MethodArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Specify if the method requires an API key
     * 
     */
    private UndeferrableValue<Boolean> apiKeyRequired;

    public Boolean apiKeyRequired() {
        if (apiKeyRequired == null) return null;
        return apiKeyRequired.getValue("MethodArgs.apiKeyRequired");
    }

    /**
     * Type of authorization used for the method (`NONE`, `CUSTOM`, `AWS_IAM`, `COGNITO_USER_POOLS`)
     * 
     */
    private UndeferrableValue<String> authorization;

    public String authorization() {
        if (authorization == null) return null;
        return authorization.getValue("MethodArgs.authorization");
    }

    /**
     * Authorization scopes used when the authorization is `COGNITO_USER_POOLS`
     * 
     */
    private UndeferrableValue<List<String>> authorizationScopes;

    public List<String> authorizationScopes() {
        if (authorizationScopes == null) return null;
        return authorizationScopes.getValue("MethodArgs.authorizationScopes");
    }

    /**
     * Authorizer id to be used when the authorization is `CUSTOM` or `COGNITO_USER_POOLS`
     * 
     */
    private UndeferrableValue<String> authorizerId;

    public String authorizerId() {
        if (authorizerId == null) return null;
        return authorizerId.getValue("MethodArgs.authorizerId");
    }

    /**
     * HTTP Method (`GET`, `POST`, `PUT`, `DELETE`, `HEAD`, `OPTIONS`, `ANY`)
     * 
     */
    private UndeferrableValue<String> httpMethod;

    public String httpMethod() {
        if (httpMethod == null) return null;
        return httpMethod.getValue("MethodArgs.httpMethod");
    }

    /**
     * Function name that will be given to the method when generating an SDK through API Gateway. If omitted, API Gateway will generate a function name based on the resource path and HTTP verb.
     * 
     */
    private UndeferrableValue<String> operationName;

    public String operationName() {
        if (operationName == null) return null;
        return operationName.getValue("MethodArgs.operationName");
    }

    /**
     * Map of the API models used for the request&#39;s content type
     * where key is the content type (e.g., `application/json`)
     * and value is either `Error`, `Empty` (built-in models) or `aws.apigateway.Model`&#39;s `name`.
     * 
     */
    private UndeferrableValue<Map<String,String>> requestModels;

    public Map<String,String> requestModels() {
        if (requestModels == null) return null;
        return requestModels.getValue("MethodArgs.requestModels");
    }

    /**
     * Map of request parameters (from the path, query string and headers) that should be passed to the integration. The boolean value indicates whether the parameter is required (`true`) or optional (`false`).
     * For example: `request_parameters = {&#34;method.request.header.X-Some-Header&#34; = true &#34;method.request.querystring.some-query-param&#34; = true}` would define that the header `X-Some-Header` and the query string `some-query-param` must be provided in the request.
     * 
     */
    private UndeferrableValue<Map<String,Boolean>> requestParameters;

    public Map<String,Boolean> requestParameters() {
        if (requestParameters == null) return null;
        return requestParameters.getValue("MethodArgs.requestParameters");
    }

    /**
     * ID of a `aws.apigateway.RequestValidator`
     * 
     */
    private UndeferrableValue<String> requestValidatorId;

    public String requestValidatorId() {
        if (requestValidatorId == null) return null;
        return requestValidatorId.getValue("MethodArgs.requestValidatorId");
    }

    /**
     * API resource ID
     * 
     */
    private UndeferrableValue<String> resourceId;

    public String resourceId() {
        if (resourceId == null) return null;
        return resourceId.getValue("MethodArgs.resourceId");
    }

    /**
     * ID of the associated REST API
     * 
     */
    private UndeferrableValue<String> restApi;

    public String restApi() {
        if (restApi == null) return null;
        return restApi.getValue("MethodArgs.restApi");
    }

}
