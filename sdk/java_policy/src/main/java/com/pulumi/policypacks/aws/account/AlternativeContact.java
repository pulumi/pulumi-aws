// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.account;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:account/alternativeContact:AlternativeContact")
public final class AlternativeContact extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * ID of the target account when managing member accounts. Will manage current user&#39;s account by default if omitted.
     * 
     */
    @PolicyResourceProperty(name="accountId", flag="unknown_accountId")
    private @Nullable String value_accountId;
    private boolean unknown_accountId;
    public @Nullable String accountId() {
        if (!unknown_accountId) return value_accountId;
        throw new UndeferrableValueException("Value 'AlternativeContact.accountId' is not present");
    }

    /**
     * Type of the alternate contact. Allowed values are: `BILLING`, `OPERATIONS`, `SECURITY`.
     * 
     */
    @PolicyResourceProperty(name="alternateContactType", flag="unknown_alternateContactType")
    private String value_alternateContactType;
    private boolean unknown_alternateContactType;
    public String alternateContactType() {
        if (!unknown_alternateContactType) return value_alternateContactType;
        throw new UndeferrableValueException("Value 'AlternativeContact.alternateContactType' is not present");
    }

    /**
     * An email address for the alternate contact.
     * 
     */
    @PolicyResourceProperty(name="emailAddress", flag="unknown_emailAddress")
    private String value_emailAddress;
    private boolean unknown_emailAddress;
    public String emailAddress() {
        if (!unknown_emailAddress) return value_emailAddress;
        throw new UndeferrableValueException("Value 'AlternativeContact.emailAddress' is not present");
    }

    /**
     * Name of the alternate contact.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'AlternativeContact.name' is not present");
    }

    /**
     * Phone number for the alternate contact.
     * 
     */
    @PolicyResourceProperty(name="phoneNumber", flag="unknown_phoneNumber")
    private String value_phoneNumber;
    private boolean unknown_phoneNumber;
    public String phoneNumber() {
        if (!unknown_phoneNumber) return value_phoneNumber;
        throw new UndeferrableValueException("Value 'AlternativeContact.phoneNumber' is not present");
    }

    /**
     * Title for the alternate contact.
     * 
     */
    @PolicyResourceProperty(name="title", flag="unknown_title")
    private String value_title;
    private boolean unknown_title;
    public String title() {
        if (!unknown_title) return value_title;
        throw new UndeferrableValueException("Value 'AlternativeContact.title' is not present");
    }

}
