// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.budgets;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.budgets.outputs.BudgetActionActionThreshold;
import com.pulumi.policypacks.aws.budgets.outputs.BudgetActionDefinition;
import com.pulumi.policypacks.aws.budgets.outputs.BudgetActionSubscriber;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:budgets/budgetAction:BudgetAction")
public final class BudgetAction extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The ID of the target account for budget. Will use current user&#39;s account_id by default if omitted.
     * 
     */
    @PolicyResourceProperty(name="accountId", flag="unknown_accountId")
    private String value_accountId;
    private boolean unknown_accountId;
    public String accountId() {
        if (!unknown_accountId) return value_accountId;
        throw new UndeferrableValueException("Value 'BudgetAction.accountId' is not present");
    }

    /**
     * The id of the budget action.
     * 
     */
    @PolicyResourceProperty(name="actionId", flag="unknown_actionId")
    private String value_actionId;
    private boolean unknown_actionId;
    public String actionId() {
        if (!unknown_actionId) return value_actionId;
        throw new UndeferrableValueException("Value 'BudgetAction.actionId' is not present");
    }

    /**
     * The trigger threshold of the action. See Action Threshold.
     * 
     */
    @PolicyResourceProperty(name="actionThreshold", flag="unknown_actionThreshold")
    private BudgetActionActionThreshold value_actionThreshold;
    private boolean unknown_actionThreshold;
    public BudgetActionActionThreshold actionThreshold() {
        if (!unknown_actionThreshold) return value_actionThreshold;
        throw new UndeferrableValueException("Value 'BudgetAction.actionThreshold' is not present");
    }

    /**
     * The type of action. This defines the type of tasks that can be carried out by this action. This field also determines the format for definition. Valid values are `APPLY_IAM_POLICY`, `APPLY_SCP_POLICY`, and `RUN_SSM_DOCUMENTS`.
     * 
     */
    @PolicyResourceProperty(name="actionType", flag="unknown_actionType")
    private String value_actionType;
    private boolean unknown_actionType;
    public String actionType() {
        if (!unknown_actionType) return value_actionType;
        throw new UndeferrableValueException("Value 'BudgetAction.actionType' is not present");
    }

    /**
     * This specifies if the action needs manual or automatic approval. Valid values are `AUTOMATIC` and `MANUAL`.
     * 
     */
    @PolicyResourceProperty(name="approvalModel", flag="unknown_approvalModel")
    private String value_approvalModel;
    private boolean unknown_approvalModel;
    public String approvalModel() {
        if (!unknown_approvalModel) return value_approvalModel;
        throw new UndeferrableValueException("Value 'BudgetAction.approvalModel' is not present");
    }

    /**
     * The ARN of the budget action.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'BudgetAction.arn' is not present");
    }

    /**
     * The name of a budget.
     * 
     */
    @PolicyResourceProperty(name="budgetName", flag="unknown_budgetName")
    private String value_budgetName;
    private boolean unknown_budgetName;
    public String budgetName() {
        if (!unknown_budgetName) return value_budgetName;
        throw new UndeferrableValueException("Value 'BudgetAction.budgetName' is not present");
    }

    /**
     * Specifies all of the type-specific parameters. See Definition.
     * 
     */
    @PolicyResourceProperty(name="definition", flag="unknown_definition")
    private BudgetActionDefinition value_definition;
    private boolean unknown_definition;
    public BudgetActionDefinition definition() {
        if (!unknown_definition) return value_definition;
        throw new UndeferrableValueException("Value 'BudgetAction.definition' is not present");
    }

    /**
     * The role passed for action execution and reversion. Roles and actions must be in the same account.
     * 
     */
    @PolicyResourceProperty(name="executionRoleArn", flag="unknown_executionRoleArn")
    private String value_executionRoleArn;
    private boolean unknown_executionRoleArn;
    public String executionRoleArn() {
        if (!unknown_executionRoleArn) return value_executionRoleArn;
        throw new UndeferrableValueException("Value 'BudgetAction.executionRoleArn' is not present");
    }

    /**
     * The type of a notification. Valid values are `ACTUAL` or `FORECASTED`.
     * 
     */
    @PolicyResourceProperty(name="notificationType", flag="unknown_notificationType")
    private String value_notificationType;
    private boolean unknown_notificationType;
    public String notificationType() {
        if (!unknown_notificationType) return value_notificationType;
        throw new UndeferrableValueException("Value 'BudgetAction.notificationType' is not present");
    }

    /**
     * The status of the budget action.
     * 
     */
    @PolicyResourceProperty(name="status", flag="unknown_status")
    private String value_status;
    private boolean unknown_status;
    public String status() {
        if (!unknown_status) return value_status;
        throw new UndeferrableValueException("Value 'BudgetAction.status' is not present");
    }

    /**
     * A list of subscribers. See Subscriber.
     * 
     */
    @PolicyResourceProperty(name="subscribers", flag="unknown_subscribers")
    private List<BudgetActionSubscriber> value_subscribers;
    private boolean unknown_subscribers;
    public List<BudgetActionSubscriber> subscribers() {
        if (!unknown_subscribers) return value_subscribers;
        throw new UndeferrableValueException("Value 'BudgetAction.subscribers' is not present");
    }

    /**
     * Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'BudgetAction.tags' is not present");
    }

    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'BudgetAction.tagsAll' is not present");
    }

}
