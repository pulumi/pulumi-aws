// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.s3.inputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.s3.inputs.BucketV2ReplicationConfigurationRuleDestinationArgs;
import com.pulumi.policypacks.aws.s3.inputs.BucketV2ReplicationConfigurationRuleFilterArgs;
import com.pulumi.policypacks.aws.s3.inputs.BucketV2ReplicationConfigurationRuleSourceSelectionCriteriaArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class BucketV2ReplicationConfigurationRuleArgs {

    /**
     * Whether delete markers are replicated. The only valid value is `Enabled`. To disable, omit this argument. This argument is only valid with V2 replication configurations (i.e., when `filter` is used).
     * 
     */
    private UndeferrableValue<String> deleteMarkerReplicationStatus;

    public String deleteMarkerReplicationStatus() {
        if (deleteMarkerReplicationStatus == null) return null;
        return deleteMarkerReplicationStatus.getValue("BucketV2ReplicationConfigurationRuleArgs.deleteMarkerReplicationStatus");
    }

    /**
     * Specifies the destination for the rule (documented below).
     * 
     */
    private UndeferrableValue<List<BucketV2ReplicationConfigurationRuleDestinationArgs>> destinations;

    public List<BucketV2ReplicationConfigurationRuleDestinationArgs> destinations() {
        if (destinations == null) return null;
        return destinations.getValue("BucketV2ReplicationConfigurationRuleArgs.destinations");
    }

    /**
     * Filter that identifies subset of objects to which the replication rule applies (documented below).
     * 
     */
    private UndeferrableValue<List<BucketV2ReplicationConfigurationRuleFilterArgs>> filters;

    public List<BucketV2ReplicationConfigurationRuleFilterArgs> filters() {
        if (filters == null) return null;
        return filters.getValue("BucketV2ReplicationConfigurationRuleArgs.filters");
    }

    /**
     * Unique identifier for the rule. Must be less than or equal to 255 characters in length.
     * 
     */
    private UndeferrableValue<String> id;

    public String id() {
        if (id == null) return null;
        return id.getValue("BucketV2ReplicationConfigurationRuleArgs.id");
    }

    /**
     * Object keyname prefix identifying one or more objects to which the rule applies. Must be less than or equal to 1024 characters in length.
     * 
     */
    private UndeferrableValue<String> prefix;

    public String prefix() {
        if (prefix == null) return null;
        return prefix.getValue("BucketV2ReplicationConfigurationRuleArgs.prefix");
    }

    /**
     * Priority associated with the rule. Priority should only be set if `filter` is configured. If not provided, defaults to `0`. Priority must be unique between multiple rules.
     * 
     */
    private UndeferrableValue<Integer> priority;

    public Integer priority() {
        if (priority == null) return null;
        return priority.getValue("BucketV2ReplicationConfigurationRuleArgs.priority");
    }

    /**
     * Specifies special object selection criteria (documented below).
     * 
     */
    private UndeferrableValue<List<BucketV2ReplicationConfigurationRuleSourceSelectionCriteriaArgs>> sourceSelectionCriterias;

    public List<BucketV2ReplicationConfigurationRuleSourceSelectionCriteriaArgs> sourceSelectionCriterias() {
        if (sourceSelectionCriterias == null) return null;
        return sourceSelectionCriterias.getValue("BucketV2ReplicationConfigurationRuleArgs.sourceSelectionCriterias");
    }

    /**
     * Status of the rule. Either `Enabled` or `Disabled`. The rule is ignored if status is not Enabled.
     * 
     */
    private UndeferrableValue<String> status;

    public String status() {
        if (status == null) return null;
        return status.getValue("BucketV2ReplicationConfigurationRuleArgs.status");
    }

}
