// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appflow.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.appflow.outputs.FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnector;
import com.pulumi.policypacks.aws.appflow.outputs.FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfiles;
import com.pulumi.policypacks.aws.appflow.outputs.FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridge;
import com.pulumi.policypacks.aws.appflow.outputs.FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycode;
import com.pulumi.policypacks.aws.appflow.outputs.FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetrics;
import com.pulumi.policypacks.aws.appflow.outputs.FlowDestinationFlowConfigDestinationConnectorPropertiesMarketo;
import com.pulumi.policypacks.aws.appflow.outputs.FlowDestinationFlowConfigDestinationConnectorPropertiesRedshift;
import com.pulumi.policypacks.aws.appflow.outputs.FlowDestinationFlowConfigDestinationConnectorPropertiesS3;
import com.pulumi.policypacks.aws.appflow.outputs.FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforce;
import com.pulumi.policypacks.aws.appflow.outputs.FlowDestinationFlowConfigDestinationConnectorPropertiesSapoData;
import com.pulumi.policypacks.aws.appflow.outputs.FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflake;
import com.pulumi.policypacks.aws.appflow.outputs.FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolver;
import com.pulumi.policypacks.aws.appflow.outputs.FlowDestinationFlowConfigDestinationConnectorPropertiesZendesk;
import javax.annotation.Nullable;


public final class FlowDestinationFlowConfigDestinationConnectorProperties {

    /**
     * Properties that are required to query the custom Connector. See Custom Connector Destination Properties for more details.
     * 
     */
    @PolicyResourceProperty(name="customConnector", flag="unknown_customConnector")
    private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnector value_customConnector;
    private boolean unknown_customConnector;
    public @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesCustomConnector customConnector() {
        if (!unknown_customConnector) return value_customConnector;
        throw new UndeferrableValueException("Value 'FlowDestinationFlowConfigDestinationConnectorProperties.customConnector' is not present");
    }

    /**
     * Properties that are required to query Amazon Connect Customer Profiles. See Customer Profiles Destination Properties for more details.
     * 
     */
    @PolicyResourceProperty(name="customerProfiles", flag="unknown_customerProfiles")
    private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfiles value_customerProfiles;
    private boolean unknown_customerProfiles;
    public @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesCustomerProfiles customerProfiles() {
        if (!unknown_customerProfiles) return value_customerProfiles;
        throw new UndeferrableValueException("Value 'FlowDestinationFlowConfigDestinationConnectorProperties.customerProfiles' is not present");
    }

    /**
     * Properties that are required to query Amazon EventBridge. See Generic Destination Properties for more details.
     * 
     */
    @PolicyResourceProperty(name="eventBridge", flag="unknown_eventBridge")
    private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridge value_eventBridge;
    private boolean unknown_eventBridge;
    public @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesEventBridge eventBridge() {
        if (!unknown_eventBridge) return value_eventBridge;
        throw new UndeferrableValueException("Value 'FlowDestinationFlowConfigDestinationConnectorProperties.eventBridge' is not present");
    }

    /**
     * Properties that are required to query Amazon Honeycode. See Generic Destination Properties for more details.
     * 
     */
    @PolicyResourceProperty(name="honeycode", flag="unknown_honeycode")
    private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycode value_honeycode;
    private boolean unknown_honeycode;
    public @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesHoneycode honeycode() {
        if (!unknown_honeycode) return value_honeycode;
        throw new UndeferrableValueException("Value 'FlowDestinationFlowConfigDestinationConnectorProperties.honeycode' is not present");
    }

    @PolicyResourceProperty(name="lookoutMetrics", flag="unknown_lookoutMetrics")
    private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetrics value_lookoutMetrics;
    private boolean unknown_lookoutMetrics;
    public @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesLookoutMetrics lookoutMetrics() {
        if (!unknown_lookoutMetrics) return value_lookoutMetrics;
        throw new UndeferrableValueException("Value 'FlowDestinationFlowConfigDestinationConnectorProperties.lookoutMetrics' is not present");
    }

    /**
     * Properties that are required to query Marketo. See Generic Destination Properties for more details.
     * 
     */
    @PolicyResourceProperty(name="marketo", flag="unknown_marketo")
    private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesMarketo value_marketo;
    private boolean unknown_marketo;
    public @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesMarketo marketo() {
        if (!unknown_marketo) return value_marketo;
        throw new UndeferrableValueException("Value 'FlowDestinationFlowConfigDestinationConnectorProperties.marketo' is not present");
    }

    /**
     * Properties that are required to query Amazon Redshift. See Redshift Destination Properties for more details.
     * 
     */
    @PolicyResourceProperty(name="redshift", flag="unknown_redshift")
    private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesRedshift value_redshift;
    private boolean unknown_redshift;
    public @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesRedshift redshift() {
        if (!unknown_redshift) return value_redshift;
        throw new UndeferrableValueException("Value 'FlowDestinationFlowConfigDestinationConnectorProperties.redshift' is not present");
    }

    /**
     * Properties that are required to query Amazon S3. See S3 Destination Properties for more details.
     * 
     */
    @PolicyResourceProperty(name="s3", flag="unknown_s3")
    private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesS3 value_s3;
    private boolean unknown_s3;
    public @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesS3 s3() {
        if (!unknown_s3) return value_s3;
        throw new UndeferrableValueException("Value 'FlowDestinationFlowConfigDestinationConnectorProperties.s3' is not present");
    }

    /**
     * Properties that are required to query Salesforce. See Salesforce Destination Properties for more details.
     * 
     */
    @PolicyResourceProperty(name="salesforce", flag="unknown_salesforce")
    private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforce value_salesforce;
    private boolean unknown_salesforce;
    public @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesSalesforce salesforce() {
        if (!unknown_salesforce) return value_salesforce;
        throw new UndeferrableValueException("Value 'FlowDestinationFlowConfigDestinationConnectorProperties.salesforce' is not present");
    }

    /**
     * Properties that are required to query SAPOData. See SAPOData Destination Properties for more details.
     * 
     */
    @PolicyResourceProperty(name="sapoData", flag="unknown_sapoData")
    private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesSapoData value_sapoData;
    private boolean unknown_sapoData;
    public @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesSapoData sapoData() {
        if (!unknown_sapoData) return value_sapoData;
        throw new UndeferrableValueException("Value 'FlowDestinationFlowConfigDestinationConnectorProperties.sapoData' is not present");
    }

    /**
     * Properties that are required to query Snowflake. See Snowflake Destination Properties for more details.
     * 
     */
    @PolicyResourceProperty(name="snowflake", flag="unknown_snowflake")
    private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflake value_snowflake;
    private boolean unknown_snowflake;
    public @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesSnowflake snowflake() {
        if (!unknown_snowflake) return value_snowflake;
        throw new UndeferrableValueException("Value 'FlowDestinationFlowConfigDestinationConnectorProperties.snowflake' is not present");
    }

    /**
     * Properties that are required to query Upsolver. See Upsolver Destination Properties for more details.
     * 
     */
    @PolicyResourceProperty(name="upsolver", flag="unknown_upsolver")
    private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolver value_upsolver;
    private boolean unknown_upsolver;
    public @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesUpsolver upsolver() {
        if (!unknown_upsolver) return value_upsolver;
        throw new UndeferrableValueException("Value 'FlowDestinationFlowConfigDestinationConnectorProperties.upsolver' is not present");
    }

    /**
     * Properties that are required to query Zendesk. See Zendesk Destination Properties for more details.
     * 
     */
    @PolicyResourceProperty(name="zendesk", flag="unknown_zendesk")
    private @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesZendesk value_zendesk;
    private boolean unknown_zendesk;
    public @Nullable FlowDestinationFlowConfigDestinationConnectorPropertiesZendesk zendesk() {
        if (!unknown_zendesk) return value_zendesk;
        throw new UndeferrableValueException("Value 'FlowDestinationFlowConfigDestinationConnectorProperties.zendesk' is not present");
    }

}
