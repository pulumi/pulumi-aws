// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.inputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class ProviderAssumeRoleWithWebIdentityArgs {

    /**
     * The duration, between 15 minutes and 12 hours, of the role session. Valid time units are ns, us (or Âµs), ms, s, h, or m.
     * 
     */
    private UndeferrableValue<String> duration;

    public String duration() {
        if (duration == null) return null;
        return duration.getValue("ProviderAssumeRoleWithWebIdentityArgs.duration");
    }

    /**
     * IAM Policy JSON describing further restricting permissions for the IAM Role being assumed.
     * 
     */
    private UndeferrableValue<String> policy;

    public String policy() {
        if (policy == null) return null;
        return policy.getValue("ProviderAssumeRoleWithWebIdentityArgs.policy");
    }

    /**
     * Amazon Resource Names (ARNs) of IAM Policies describing further restricting permissions for the IAM Role being assumed.
     * 
     */
    private UndeferrableValue<List<String>> policyArns;

    public List<String> policyArns() {
        if (policyArns == null) return null;
        return policyArns.getValue("ProviderAssumeRoleWithWebIdentityArgs.policyArns");
    }

    /**
     * Amazon Resource Name (ARN) of an IAM Role to assume prior to making API calls.
     * 
     */
    private UndeferrableValue<String> roleArn;

    public String roleArn() {
        if (roleArn == null) return null;
        return roleArn.getValue("ProviderAssumeRoleWithWebIdentityArgs.roleArn");
    }

    /**
     * An identifier for the assumed role session.
     * 
     */
    private UndeferrableValue<String> sessionName;

    public String sessionName() {
        if (sessionName == null) return null;
        return sessionName.getValue("ProviderAssumeRoleWithWebIdentityArgs.sessionName");
    }

    private UndeferrableValue<String> webIdentityToken;

    public String webIdentityToken() {
        if (webIdentityToken == null) return null;
        return webIdentityToken.getValue("ProviderAssumeRoleWithWebIdentityArgs.webIdentityToken");
    }

    private UndeferrableValue<String> webIdentityTokenFile;

    public String webIdentityTokenFile() {
        if (webIdentityTokenFile == null) return null;
        return webIdentityTokenFile.getValue("ProviderAssumeRoleWithWebIdentityArgs.webIdentityTokenFile");
    }

}
