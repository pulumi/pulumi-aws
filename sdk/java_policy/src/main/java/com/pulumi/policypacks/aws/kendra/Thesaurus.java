// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.kendra;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.kendra.outputs.ThesaurusSourceS3Path;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:kendra/thesaurus:Thesaurus")
public final class Thesaurus extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * ARN of the thesaurus.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'Thesaurus.arn' is not present");
    }

    @PolicyResourceProperty(name="description", flag="unknown_description")
    private @Nullable String value_description;
    private boolean unknown_description;
    public @Nullable String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'Thesaurus.description' is not present");
    }

    /**
     * The identifier of the index for a thesaurus.
     * 
     */
    @PolicyResourceProperty(name="indexId", flag="unknown_indexId")
    private String value_indexId;
    private boolean unknown_indexId;
    public String indexId() {
        if (!unknown_indexId) return value_indexId;
        throw new UndeferrableValueException("Value 'Thesaurus.indexId' is not present");
    }

    /**
     * The name for the thesaurus.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'Thesaurus.name' is not present");
    }

    /**
     * The IAM (Identity and Access Management) role used to access the thesaurus file in S3.
     * 
     */
    @PolicyResourceProperty(name="roleArn", flag="unknown_roleArn")
    private String value_roleArn;
    private boolean unknown_roleArn;
    public String roleArn() {
        if (!unknown_roleArn) return value_roleArn;
        throw new UndeferrableValueException("Value 'Thesaurus.roleArn' is not present");
    }

    /**
     * The S3 path where your thesaurus file sits in S3. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="sourceS3Path", flag="unknown_sourceS3Path")
    private ThesaurusSourceS3Path value_sourceS3Path;
    private boolean unknown_sourceS3Path;
    public ThesaurusSourceS3Path sourceS3Path() {
        if (!unknown_sourceS3Path) return value_sourceS3Path;
        throw new UndeferrableValueException("Value 'Thesaurus.sourceS3Path' is not present");
    }

    /**
     * The current status of the thesaurus.
     * 
     */
    @PolicyResourceProperty(name="status", flag="unknown_status")
    private String value_status;
    private boolean unknown_status;
    public String status() {
        if (!unknown_status) return value_status;
        throw new UndeferrableValueException("Value 'Thesaurus.status' is not present");
    }

    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'Thesaurus.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'Thesaurus.tagsAll' is not present");
    }

    @PolicyResourceProperty(name="thesaurusId", flag="unknown_thesaurusId")
    private String value_thesaurusId;
    private boolean unknown_thesaurusId;
    public String thesaurusId() {
        if (!unknown_thesaurusId) return value_thesaurusId;
        throw new UndeferrableValueException("Value 'Thesaurus.thesaurusId' is not present");
    }

}
