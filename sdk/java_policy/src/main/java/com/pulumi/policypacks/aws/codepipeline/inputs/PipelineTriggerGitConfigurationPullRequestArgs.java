// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.codepipeline.inputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.codepipeline.inputs.PipelineTriggerGitConfigurationPullRequestBranchesArgs;
import com.pulumi.policypacks.aws.codepipeline.inputs.PipelineTriggerGitConfigurationPullRequestFilePathsArgs;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class PipelineTriggerGitConfigurationPullRequestArgs {

    /**
     * The field that specifies to filter on branches for the pull request trigger configuration. A `branches` block is documented below.
     * 
     */
    private UndeferrableValue<PipelineTriggerGitConfigurationPullRequestBranchesArgs> branches;

    public PipelineTriggerGitConfigurationPullRequestBranchesArgs branches() {
        if (branches == null) return null;
        return branches.getValue("PipelineTriggerGitConfigurationPullRequestArgs.branches");
    }

    /**
     * A list that specifies which pull request events to filter on (opened, updated, closed) for the trigger configuration. Possible values are `OPEN`, ` UPDATED  ` and `CLOSED`.
     * 
     */
    private UndeferrableValue<List<String>> events;

    public List<String> events() {
        if (events == null) return null;
        return events.getValue("PipelineTriggerGitConfigurationPullRequestArgs.events");
    }

    /**
     * The field that specifies to filter on file paths for the pull request trigger configuration. A `file_paths` block is documented below.
     * 
     */
    private UndeferrableValue<PipelineTriggerGitConfigurationPullRequestFilePathsArgs> filePaths;

    public PipelineTriggerGitConfigurationPullRequestFilePathsArgs filePaths() {
        if (filePaths == null) return null;
        return filePaths.getValue("PipelineTriggerGitConfigurationPullRequestArgs.filePaths");
    }

}
