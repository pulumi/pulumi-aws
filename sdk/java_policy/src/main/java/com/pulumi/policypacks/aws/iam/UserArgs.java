// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.iam;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:iam/user:User")
public final class UserArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * When destroying this user, destroy even if it
     * has non-provider-managed IAM access keys, login profile or MFA devices. Without `force_destroy`
     * a user with non-provider-managed access keys and login profile will fail to be destroyed.
     * 
     */
    private UndeferrableValue<Boolean> forceDestroy;

    public Boolean forceDestroy() {
        if (forceDestroy == null) return null;
        return forceDestroy.getValue("UserArgs.forceDestroy");
    }

    /**
     * The user&#39;s name. The name must consist of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: `=,.{@literal @}-_.`. User names are not distinguished by case. For example, you cannot create users named both &#34;TESTUSER&#34; and &#34;testuser&#34;.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("UserArgs.name");
    }

    /**
     * Path in which to create the user.
     * 
     */
    private UndeferrableValue<String> path;

    public String path() {
        if (path == null) return null;
        return path.getValue("UserArgs.path");
    }

    /**
     * The ARN of the policy that is used to set the permissions boundary for the user.
     * 
     */
    private UndeferrableValue<String> permissionsBoundary;

    public String permissionsBoundary() {
        if (permissionsBoundary == null) return null;
        return permissionsBoundary.getValue("UserArgs.permissionsBoundary");
    }

    /**
     * Key-value mapping of tags for the IAM user. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("UserArgs.tags");
    }

}
