// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.vpc;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:vpc/securityGroupIngressRule:SecurityGroupIngressRule")
public final class SecurityGroupIngressRuleArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The source IPv4 CIDR range.
     * 
     */
    private UndeferrableValue<String> cidrIpv4;

    public String cidrIpv4() {
        if (cidrIpv4 == null) return null;
        return cidrIpv4.getValue("SecurityGroupIngressRuleArgs.cidrIpv4");
    }

    /**
     * The source IPv6 CIDR range.
     * 
     */
    private UndeferrableValue<String> cidrIpv6;

    public String cidrIpv6() {
        if (cidrIpv6 == null) return null;
        return cidrIpv6.getValue("SecurityGroupIngressRuleArgs.cidrIpv6");
    }

    /**
     * The security group rule description.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("SecurityGroupIngressRuleArgs.description");
    }

    /**
     * The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type.
     * 
     */
    private UndeferrableValue<Integer> fromPort;

    public Integer fromPort() {
        if (fromPort == null) return null;
        return fromPort.getValue("SecurityGroupIngressRuleArgs.fromPort");
    }

    /**
     * The IP protocol name or number. Use `-1` to specify all protocols. Note that if `ip_protocol` is set to `-1`, it translates to all protocols, all port ranges, and `from_port` and `to_port` values should not be defined.
     * 
     */
    private UndeferrableValue<String> ipProtocol;

    public String ipProtocol() {
        if (ipProtocol == null) return null;
        return ipProtocol.getValue("SecurityGroupIngressRuleArgs.ipProtocol");
    }

    /**
     * The ID of the source prefix list.
     * 
     */
    private UndeferrableValue<String> prefixListId;

    public String prefixListId() {
        if (prefixListId == null) return null;
        return prefixListId.getValue("SecurityGroupIngressRuleArgs.prefixListId");
    }

    /**
     * The source security group that is referenced in the rule.
     * 
     */
    private UndeferrableValue<String> referencedSecurityGroupId;

    public String referencedSecurityGroupId() {
        if (referencedSecurityGroupId == null) return null;
        return referencedSecurityGroupId.getValue("SecurityGroupIngressRuleArgs.referencedSecurityGroupId");
    }

    /**
     * The ID of the security group.
     * 
     */
    private UndeferrableValue<String> securityGroupId;

    public String securityGroupId() {
        if (securityGroupId == null) return null;
        return securityGroupId.getValue("SecurityGroupIngressRuleArgs.securityGroupId");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("SecurityGroupIngressRuleArgs.tags");
    }

    /**
     * The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code.
     * 
     */
    private UndeferrableValue<Integer> toPort;

    public Integer toPort() {
        if (toPort == null) return null;
        return toPort.getValue("SecurityGroupIngressRuleArgs.toPort");
    }

}
