// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.macie;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:macie/customDataIdentifier:CustomDataIdentifier")
public final class CustomDataIdentifierArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * A custom description of the custom data identifier. The description can contain as many as 512 characters.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("CustomDataIdentifierArgs.description");
    }

    /**
     * An array that lists specific character sequences (ignore words) to exclude from the results. If the text matched by the regular expression is the same as any string in this array, Amazon Macie ignores it. The array can contain as many as 10 ignore words. Each ignore word can contain 4 - 90 characters. Ignore words are case sensitive.
     * 
     */
    private UndeferrableValue<List<String>> ignoreWords;

    public List<String> ignoreWords() {
        if (ignoreWords == null) return null;
        return ignoreWords.getValue("CustomDataIdentifierArgs.ignoreWords");
    }

    /**
     * An array that lists specific character sequences (keywords), one of which must be within proximity (`maximum_match_distance`) of the regular expression to match. The array can contain as many as 50 keywords. Each keyword can contain 3 - 90 characters. Keywords aren&#39;t case sensitive.
     * 
     */
    private UndeferrableValue<List<String>> keywords;

    public List<String> keywords() {
        if (keywords == null) return null;
        return keywords.getValue("CustomDataIdentifierArgs.keywords");
    }

    /**
     * The maximum number of characters that can exist between text that matches the regex pattern and the character sequences specified by the keywords array. Macie includes or excludes a result based on the proximity of a keyword to text that matches the regex pattern. The distance can be 1 - 300 characters. The default value is 50.
     * 
     */
    private UndeferrableValue<Integer> maximumMatchDistance;

    public Integer maximumMatchDistance() {
        if (maximumMatchDistance == null) return null;
        return maximumMatchDistance.getValue("CustomDataIdentifierArgs.maximumMatchDistance");
    }

    /**
     * A custom name for the custom data identifier. The name can contain as many as 128 characters. If omitted, the provider will assign a random, unique name. Conflicts with `name_prefix`.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("CustomDataIdentifierArgs.name");
    }

    /**
     * Creates a unique name beginning with the specified prefix. Conflicts with `name`.
     * 
     */
    private UndeferrableValue<String> namePrefix;

    public String namePrefix() {
        if (namePrefix == null) return null;
        return namePrefix.getValue("CustomDataIdentifierArgs.namePrefix");
    }

    /**
     * The regular expression (regex) that defines the pattern to match. The expression can contain as many as 512 characters.
     * 
     */
    private UndeferrableValue<String> regex;

    public String regex() {
        if (regex == null) return null;
        return regex.getValue("CustomDataIdentifierArgs.regex");
    }

    /**
     * Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("CustomDataIdentifierArgs.tags");
    }

}
