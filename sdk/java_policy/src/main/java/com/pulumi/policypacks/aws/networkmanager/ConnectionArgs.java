// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.networkmanager;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:networkmanager/connection:Connection")
public final class ConnectionArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The ID of the second device in the connection.
     * 
     */
    private UndeferrableValue<String> connectedDeviceId;

    public String connectedDeviceId() {
        if (connectedDeviceId == null) return null;
        return connectedDeviceId.getValue("ConnectionArgs.connectedDeviceId");
    }

    /**
     * The ID of the link for the second device.
     * 
     */
    private UndeferrableValue<String> connectedLinkId;

    public String connectedLinkId() {
        if (connectedLinkId == null) return null;
        return connectedLinkId.getValue("ConnectionArgs.connectedLinkId");
    }

    /**
     * A description of the connection.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("ConnectionArgs.description");
    }

    /**
     * The ID of the first device in the connection.
     * 
     */
    private UndeferrableValue<String> deviceId;

    public String deviceId() {
        if (deviceId == null) return null;
        return deviceId.getValue("ConnectionArgs.deviceId");
    }

    /**
     * The ID of the global network.
     * 
     */
    private UndeferrableValue<String> globalNetworkId;

    public String globalNetworkId() {
        if (globalNetworkId == null) return null;
        return globalNetworkId.getValue("ConnectionArgs.globalNetworkId");
    }

    /**
     * The ID of the link for the first device.
     * 
     */
    private UndeferrableValue<String> linkId;

    public String linkId() {
        if (linkId == null) return null;
        return linkId.getValue("ConnectionArgs.linkId");
    }

    /**
     * Key-value tags for the connection. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("ConnectionArgs.tags");
    }

}
