// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ssm;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.ssm.outputs.QuicksetupConfigurationManagerConfigurationDefinition;
import com.pulumi.policypacks.aws.ssm.outputs.QuicksetupConfigurationManagerStatusSummary;
import com.pulumi.policypacks.aws.ssm.outputs.QuicksetupConfigurationManagerTimeouts;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ssm/quicksetupConfigurationManager:QuicksetupConfigurationManager")
public final class QuicksetupConfigurationManager extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Definition of the Quick Setup configuration that the configuration manager deploys. See `configuration_definition` below.
     * 
     */
    private @Nullable UndeferrableValue<QuicksetupConfigurationManagerConfigurationDefinition> configurationDefinition;

    public @Nullable QuicksetupConfigurationManagerConfigurationDefinition configurationDefinition() {
        if (configurationDefinition == null) return null;
        return configurationDefinition.getValue("QuicksetupConfigurationManager.configurationDefinition");
    }

    /**
     * Description of the configuration manager.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("QuicksetupConfigurationManager.description");
    }

    /**
     * ARN of the Configuration Manager.
     * 
     */
    private UndeferrableValue<String> managerArn;

    public String managerArn() {
        if (managerArn == null) return null;
        return managerArn.getValue("QuicksetupConfigurationManager.managerArn");
    }

    /**
     * Configuration manager name.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("QuicksetupConfigurationManager.name");
    }

    /**
     * A summary of the state of the configuration manager. This includes deployment statuses, association statuses, drift statuses, health checks, and more. See `status_summaries` below.
     * 
     */
    private UndeferrableValue<List<QuicksetupConfigurationManagerStatusSummary>> statusSummaries;

    public List<QuicksetupConfigurationManagerStatusSummary> statusSummaries() {
        if (statusSummaries == null) return null;
        return statusSummaries.getValue("QuicksetupConfigurationManager.statusSummaries");
    }

    /**
     * Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private @Nullable UndeferrableValue<Map<String,String>> tags;

    public @Nullable Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("QuicksetupConfigurationManager.tags");
    }

    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    private UndeferrableValue<Map<String,String>> tagsAll;

    public Map<String,String> tagsAll() {
        if (tagsAll == null) return null;
        return tagsAll.getValue("QuicksetupConfigurationManager.tagsAll");
    }

    private @Nullable UndeferrableValue<QuicksetupConfigurationManagerTimeouts> timeouts;

    public @Nullable QuicksetupConfigurationManagerTimeouts timeouts() {
        if (timeouts == null) return null;
        return timeouts.getValue("QuicksetupConfigurationManager.timeouts");
    }

}
