// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.costexplorer;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.costexplorer.inputs.CostCategoryRuleArgs;
import com.pulumi.policypacks.aws.costexplorer.inputs.CostCategorySplitChargeRuleArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:costexplorer/costCategory:CostCategory")
public final class CostCategoryArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Default value for the cost category.
     * 
     */
    private UndeferrableValue<String> defaultValue;

    public String defaultValue() {
        if (defaultValue == null) return null;
        return defaultValue.getValue("CostCategoryArgs.defaultValue");
    }

    /**
     * The Cost Category&#39;s effective start date. It can only be a billing start date (first day of the month). If the date isn&#39;t provided, it&#39;s the first day of the current month. Dates can&#39;t be before the previous twelve months, or in the future. For example `2022-11-01T00:00:00Z`.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> effectiveStart;

    public String effectiveStart() {
        if (effectiveStart == null) return null;
        return effectiveStart.getValue("CostCategoryArgs.effectiveStart");
    }

    /**
     * Unique name for the Cost Category.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("CostCategoryArgs.name");
    }

    /**
     * Rule schema version in this particular Cost Category.
     * 
     */
    private UndeferrableValue<String> ruleVersion;

    public String ruleVersion() {
        if (ruleVersion == null) return null;
        return ruleVersion.getValue("CostCategoryArgs.ruleVersion");
    }

    /**
     * Configuration block for the Cost Category rules used to categorize costs. See below.
     * 
     */
    private UndeferrableValue<List<CostCategoryRuleArgs>> rules;

    public List<CostCategoryRuleArgs> rules() {
        if (rules == null) return null;
        return rules.getValue("CostCategoryArgs.rules");
    }

    /**
     * Configuration block for the split charge rules used to allocate your charges between your Cost Category values. See below.
     * 
     */
    private UndeferrableValue<List<CostCategorySplitChargeRuleArgs>> splitChargeRules;

    public List<CostCategorySplitChargeRuleArgs> splitChargeRules() {
        if (splitChargeRules == null) return null;
        return splitChargeRules.getValue("CostCategoryArgs.splitChargeRules");
    }

    /**
     * Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("CostCategoryArgs.tags");
    }

}
