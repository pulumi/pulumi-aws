// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.evidently;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.evidently.FeatureEvaluationRule;
import com.pulumi.policypacks.aws.evidently.FeatureVariation;
import java.lang.String;
import java.util.List;
import java.util.Map;


@PolicyResourceType(type="aws:evidently/feature:Feature")
public final class Feature extends com.pulumi.resources.PolicyResource {

    /**
     * The ARN of the feature.
     * 
     */
    public String arn;



    /**
     * The date and time that the feature is created.
     * 
     */
    public String createdTime;



    /**
     * The name of the variation to use as the default variation. The default variation is served to users who are not allocated to any ongoing launches or experiments of this feature. This variation must also be listed in the `variations` structure. If you omit `default_variation`, the first variation listed in the `variations` structure is used as the default variation.
     * 
     */
    public String defaultVariation;



    /**
     * Specifies the description of the feature.
     * 
     */
    public String description;



    /**
     * Specify users that should always be served a specific variation of a feature. Each user is specified by a key-value pair . For each key, specify a user by entering their user ID, account ID, or some other identifier. For the value, specify the name of the variation that they are to be served.
     * 
     */
    public Map<String,String> entityOverrides;



    /**
     * One or more blocks that define the evaluation rules for the feature. Detailed below
     * 
     */
    public List<FeatureEvaluationRule> evaluationRules;



    /**
     * Specify `ALL_RULES` to activate the traffic allocation specified by any ongoing launches or experiments. Specify `DEFAULT_VARIATION` to serve the default variation to all users instead.
     * 
     */
    public String evaluationStrategy;



    /**
     * The date and time that the feature was most recently updated.
     * 
     */
    public String lastUpdatedTime;



    /**
     * The name for the new feature. Minimum length of `1`. Maximum length of `127`.
     * 
     */
    public String name;



    /**
     * The name or ARN of the project that is to contain the new feature.
     * 
     */
    public String project;



    /**
     * The current state of the feature. Valid values are `AVAILABLE` and `UPDATING`.
     * 
     */
    public String status;



    /**
     * Tags to apply to the feature. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



    /**
     * Defines the type of value used to define the different feature variations. Valid Values: `STRING`, `LONG`, `DOUBLE`, `BOOLEAN`.
     * 
     */
    public String valueType;



    /**
     * One or more blocks that contain the configuration of the feature&#39;s different variations. Detailed below
     * 
     */
    public List<FeatureVariation> variations;



}
