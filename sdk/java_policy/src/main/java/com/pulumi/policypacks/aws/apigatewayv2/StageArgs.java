// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.apigatewayv2;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.apigatewayv2.inputs.StageAccessLogSettingsArgs;
import com.pulumi.policypacks.aws.apigatewayv2.inputs.StageDefaultRouteSettingsArgs;
import com.pulumi.policypacks.aws.apigatewayv2.inputs.StageRouteSettingArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:apigatewayv2/stage:Stage")
public final class StageArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Settings for logging access in this stage.
     * Use the `aws.apigateway.Account` resource to configure [permissions for CloudWatch Logging](https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-logging.html#set-up-access-logging-permissions).
     * 
     */
    private UndeferrableValue<StageAccessLogSettingsArgs> accessLogSettings;

    public StageAccessLogSettingsArgs accessLogSettings() {
        if (accessLogSettings == null) return null;
        return accessLogSettings.getValue("StageArgs.accessLogSettings");
    }

    /**
     * API identifier.
     * 
     */
    private UndeferrableValue<String> apiId;

    public String apiId() {
        if (apiId == null) return null;
        return apiId.getValue("StageArgs.apiId");
    }

    /**
     * Whether updates to an API automatically trigger a new deployment. Defaults to `false`. Applicable for HTTP APIs.
     * 
     */
    private UndeferrableValue<Boolean> autoDeploy;

    public Boolean autoDeploy() {
        if (autoDeploy == null) return null;
        return autoDeploy.getValue("StageArgs.autoDeploy");
    }

    /**
     * Identifier of a client certificate for the stage. Use the `aws.apigateway.ClientCertificate` resource to configure a client certificate.
     * Supported only for WebSocket APIs.
     * 
     */
    private UndeferrableValue<String> clientCertificateId;

    public String clientCertificateId() {
        if (clientCertificateId == null) return null;
        return clientCertificateId.getValue("StageArgs.clientCertificateId");
    }

    /**
     * Default route settings for the stage.
     * 
     */
    private UndeferrableValue<StageDefaultRouteSettingsArgs> defaultRouteSettings;

    public StageDefaultRouteSettingsArgs defaultRouteSettings() {
        if (defaultRouteSettings == null) return null;
        return defaultRouteSettings.getValue("StageArgs.defaultRouteSettings");
    }

    /**
     * Deployment identifier of the stage. Use the `aws.apigatewayv2.Deployment` resource to configure a deployment.
     * 
     */
    private UndeferrableValue<String> deploymentId;

    public String deploymentId() {
        if (deploymentId == null) return null;
        return deploymentId.getValue("StageArgs.deploymentId");
    }

    /**
     * Description for the stage. Must be less than or equal to 1024 characters in length.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("StageArgs.description");
    }

    /**
     * Name of the stage. Must be between 1 and 128 characters in length.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("StageArgs.name");
    }

    /**
     * Route settings for the stage.
     * 
     */
    private UndeferrableValue<List<StageRouteSettingArgs>> routeSettings;

    public List<StageRouteSettingArgs> routeSettings() {
        if (routeSettings == null) return null;
        return routeSettings.getValue("StageArgs.routeSettings");
    }

    /**
     * Map that defines the stage variables for the stage.
     * 
     */
    private UndeferrableValue<Map<String,String>> stageVariables;

    public Map<String,String> stageVariables() {
        if (stageVariables == null) return null;
        return stageVariables.getValue("StageArgs.stageVariables");
    }

    /**
     * Map of tags to assign to the stage. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("StageArgs.tags");
    }

}
