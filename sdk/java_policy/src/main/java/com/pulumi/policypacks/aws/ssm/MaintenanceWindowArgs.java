// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ssm;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ssm/maintenanceWindow:MaintenanceWindow")
public final class MaintenanceWindowArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Whether targets must be registered with the Maintenance Window before tasks can be defined for those targets.
     * 
     */
    private UndeferrableValue<Boolean> allowUnassociatedTargets;

    public Boolean allowUnassociatedTargets() {
        if (allowUnassociatedTargets == null) return null;
        return allowUnassociatedTargets.getValue("MaintenanceWindowArgs.allowUnassociatedTargets");
    }

    /**
     * The number of hours before the end of the Maintenance Window that Systems Manager stops scheduling new tasks for execution.
     * 
     */
    private UndeferrableValue<Integer> cutoff;

    public Integer cutoff() {
        if (cutoff == null) return null;
        return cutoff.getValue("MaintenanceWindowArgs.cutoff");
    }

    /**
     * A description for the maintenance window.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("MaintenanceWindowArgs.description");
    }

    /**
     * The duration of the Maintenance Window in hours.
     * 
     */
    private UndeferrableValue<Integer> duration;

    public Integer duration() {
        if (duration == null) return null;
        return duration.getValue("MaintenanceWindowArgs.duration");
    }

    /**
     * Whether the maintenance window is enabled. Default: `true`.
     * 
     */
    private UndeferrableValue<Boolean> enabled;

    public Boolean enabled() {
        if (enabled == null) return null;
        return enabled.getValue("MaintenanceWindowArgs.enabled");
    }

    /**
     * Timestamp in [ISO-8601 extended format](https://www.iso.org/iso-8601-date-and-time-format.html) when to no longer run the maintenance window.
     * 
     */
    private UndeferrableValue<String> endDate;

    public String endDate() {
        if (endDate == null) return null;
        return endDate.getValue("MaintenanceWindowArgs.endDate");
    }

    /**
     * The name of the maintenance window.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("MaintenanceWindowArgs.name");
    }

    /**
     * The schedule of the Maintenance Window in the form of a [cron or rate expression](https://docs.aws.amazon.com/systems-manager/latest/userguide/reference-cron-and-rate-expressions.html).
     * 
     */
    private UndeferrableValue<String> schedule;

    public String schedule() {
        if (schedule == null) return null;
        return schedule.getValue("MaintenanceWindowArgs.schedule");
    }

    /**
     * The number of days to wait after the date and time specified by a CRON expression before running the maintenance window. Valid range is `1` to `6`.
     * 
     */
    private UndeferrableValue<Integer> scheduleOffset;

    public Integer scheduleOffset() {
        if (scheduleOffset == null) return null;
        return scheduleOffset.getValue("MaintenanceWindowArgs.scheduleOffset");
    }

    /**
     * Timezone for schedule in [Internet Assigned Numbers Authority (IANA) Time Zone Database format](https://www.iana.org/time-zones). For example: `America/Los_Angeles`, `etc/UTC`, or `Asia/Seoul`.
     * 
     */
    private UndeferrableValue<String> scheduleTimezone;

    public String scheduleTimezone() {
        if (scheduleTimezone == null) return null;
        return scheduleTimezone.getValue("MaintenanceWindowArgs.scheduleTimezone");
    }

    /**
     * Timestamp in [ISO-8601 extended format](https://www.iso.org/iso-8601-date-and-time-format.html) when to begin the maintenance window.
     * 
     */
    private UndeferrableValue<String> startDate;

    public String startDate() {
        if (startDate == null) return null;
        return startDate.getValue("MaintenanceWindowArgs.startDate");
    }

    /**
     * A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("MaintenanceWindowArgs.tags");
    }

}
