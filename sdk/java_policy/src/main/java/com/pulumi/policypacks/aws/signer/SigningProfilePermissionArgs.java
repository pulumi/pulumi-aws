// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.signer;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:signer/signingProfilePermission:SigningProfilePermission")
public final class SigningProfilePermissionArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * An AWS Signer action permitted as part of cross-account permissions. Valid values: `signer:StartSigningJob`, `signer:GetSigningProfile`, `signer:RevokeSignature`, or `signer:SignPayload`.
     * 
     */
    private UndeferrableValue<String> action;

    public String action() {
        if (action == null) return null;
        return action.getValue("SigningProfilePermissionArgs.action");
    }

    /**
     * The AWS principal to be granted a cross-account permission.
     * 
     */
    private UndeferrableValue<String> principal;

    public String principal() {
        if (principal == null) return null;
        return principal.getValue("SigningProfilePermissionArgs.principal");
    }

    /**
     * Name of the signing profile to add the cross-account permissions.
     * 
     */
    private UndeferrableValue<String> profileName;

    public String profileName() {
        if (profileName == null) return null;
        return profileName.getValue("SigningProfilePermissionArgs.profileName");
    }

    /**
     * The signing profile version that a permission applies to.
     * 
     */
    private UndeferrableValue<String> profileVersion;

    public String profileVersion() {
        if (profileVersion == null) return null;
        return profileVersion.getValue("SigningProfilePermissionArgs.profileVersion");
    }

    /**
     * A unique statement identifier. By default generated by the provider.
     * 
     */
    private UndeferrableValue<String> statementId;

    public String statementId() {
        if (statementId == null) return null;
        return statementId.getValue("SigningProfilePermissionArgs.statementId");
    }

    /**
     * A statement identifier prefix. The provider will generate a unique suffix. Conflicts with `statement_id`.
     * 
     */
    private UndeferrableValue<String> statementIdPrefix;

    public String statementIdPrefix() {
        if (statementIdPrefix == null) return null;
        return statementIdPrefix.getValue("SigningProfilePermissionArgs.statementIdPrefix");
    }

}
