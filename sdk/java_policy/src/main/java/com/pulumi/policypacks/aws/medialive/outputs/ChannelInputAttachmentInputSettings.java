// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.medialive.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.medialive.outputs.ChannelInputAttachmentInputSettingsAudioSelector;
import com.pulumi.policypacks.aws.medialive.outputs.ChannelInputAttachmentInputSettingsCaptionSelector;
import com.pulumi.policypacks.aws.medialive.outputs.ChannelInputAttachmentInputSettingsNetworkInputSettings;
import com.pulumi.policypacks.aws.medialive.outputs.ChannelInputAttachmentInputSettingsVideoSelector;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class ChannelInputAttachmentInputSettings {

    /**
     * Used to select the audio stream to decode for inputs that have multiple. See Audio Selectors for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<ChannelInputAttachmentInputSettingsAudioSelector>> audioSelectors;

    public @Nullable List<ChannelInputAttachmentInputSettingsAudioSelector> audioSelectors() {
        if (audioSelectors == null) return null;
        return audioSelectors.getValue("ChannelInputAttachmentInputSettings.audioSelectors");
    }

    /**
     * Used to select the caption input to use for inputs that have multiple available. See Caption Selectors for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<ChannelInputAttachmentInputSettingsCaptionSelector>> captionSelectors;

    public @Nullable List<ChannelInputAttachmentInputSettingsCaptionSelector> captionSelectors() {
        if (captionSelectors == null) return null;
        return captionSelectors.getValue("ChannelInputAttachmentInputSettings.captionSelectors");
    }

    /**
     * Enable or disable the deblock filter when filtering.
     * 
     */
    private @Nullable UndeferrableValue<String> deblockFilter;

    public @Nullable String deblockFilter() {
        if (deblockFilter == null) return null;
        return deblockFilter.getValue("ChannelInputAttachmentInputSettings.deblockFilter");
    }

    /**
     * Enable or disable the denoise filter when filtering.
     * 
     */
    private @Nullable UndeferrableValue<String> denoiseFilter;

    public @Nullable String denoiseFilter() {
        if (denoiseFilter == null) return null;
        return denoiseFilter.getValue("ChannelInputAttachmentInputSettings.denoiseFilter");
    }

    /**
     * Adjusts the magnitude of filtering from 1 (minimal) to 5 (strongest).
     * 
     */
    private @Nullable UndeferrableValue<Integer> filterStrength;

    public @Nullable Integer filterStrength() {
        if (filterStrength == null) return null;
        return filterStrength.getValue("ChannelInputAttachmentInputSettings.filterStrength");
    }

    /**
     * Turns on the filter for the input.
     * 
     */
    private @Nullable UndeferrableValue<String> inputFilter;

    public @Nullable String inputFilter() {
        if (inputFilter == null) return null;
        return inputFilter.getValue("ChannelInputAttachmentInputSettings.inputFilter");
    }

    /**
     * Input settings. See Network Input Settings for more details.
     * 
     */
    private @Nullable UndeferrableValue<ChannelInputAttachmentInputSettingsNetworkInputSettings> networkInputSettings;

    public @Nullable ChannelInputAttachmentInputSettingsNetworkInputSettings networkInputSettings() {
        if (networkInputSettings == null) return null;
        return networkInputSettings.getValue("ChannelInputAttachmentInputSettings.networkInputSettings");
    }

    /**
     * PID from which to read SCTE-35 messages.
     * 
     */
    private @Nullable UndeferrableValue<Integer> scte35Pid;

    public @Nullable Integer scte35Pid() {
        if (scte35Pid == null) return null;
        return scte35Pid.getValue("ChannelInputAttachmentInputSettings.scte35Pid");
    }

    /**
     * Specifies whether to extract applicable ancillary data from a SMPTE-2038 source in the input.
     * 
     */
    private @Nullable UndeferrableValue<String> smpte2038DataPreference;

    public @Nullable String smpte2038DataPreference() {
        if (smpte2038DataPreference == null) return null;
        return smpte2038DataPreference.getValue("ChannelInputAttachmentInputSettings.smpte2038DataPreference");
    }

    /**
     * Loop input if it is a file.
     * 
     */
    private @Nullable UndeferrableValue<String> sourceEndBehavior;

    public @Nullable String sourceEndBehavior() {
        if (sourceEndBehavior == null) return null;
        return sourceEndBehavior.getValue("ChannelInputAttachmentInputSettings.sourceEndBehavior");
    }

    private @Nullable UndeferrableValue<ChannelInputAttachmentInputSettingsVideoSelector> videoSelector;

    public @Nullable ChannelInputAttachmentInputSettingsVideoSelector videoSelector() {
        if (videoSelector == null) return null;
        return videoSelector.getValue("ChannelInputAttachmentInputSettings.videoSelector");
    }

}
