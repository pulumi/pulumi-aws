// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.elasticache;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:elasticache/userGroup:UserGroup")
public final class UserGroup extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The ARN that identifies the user group.
     * 
     */
    private UndeferrableValue<String> arn;

    public String arn() {
        if (arn == null) return null;
        return arn.getValue("UserGroup.arn");
    }

    /**
     * The current supported value are `redis`, `valkey` (case insensitive).
     * 
     */
    private UndeferrableValue<String> engine;

    public String engine() {
        if (engine == null) return null;
        return engine.getValue("UserGroup.engine");
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private @Nullable UndeferrableValue<Map<String,String>> tags;

    public @Nullable Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("UserGroup.tags");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    private UndeferrableValue<Map<String,String>> tagsAll;

    public Map<String,String> tagsAll() {
        if (tagsAll == null) return null;
        return tagsAll.getValue("UserGroup.tagsAll");
    }

    /**
     * The ID of the user group.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> userGroupId;

    public String userGroupId() {
        if (userGroupId == null) return null;
        return userGroupId.getValue("UserGroup.userGroupId");
    }

    /**
     * The list of user IDs that belong to the user group.
     * 
     */
    private @Nullable UndeferrableValue<List<String>> userIds;

    public @Nullable List<String> userIds() {
        if (userIds == null) return null;
        return userIds.getValue("UserGroup.userIds");
    }

}
