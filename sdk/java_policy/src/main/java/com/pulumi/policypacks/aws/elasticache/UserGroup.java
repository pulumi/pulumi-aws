// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.elasticache;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:elasticache/userGroup:UserGroup")
public final class UserGroup extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The ARN that identifies the user group.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'UserGroup.arn' is not present");
    }

    /**
     * The current supported value are `redis`, `valkey` (case insensitive).
     * 
     */
    @PolicyResourceProperty(name="engine", flag="unknown_engine")
    private String value_engine;
    private boolean unknown_engine;
    public String engine() {
        if (!unknown_engine) return value_engine;
        throw new UndeferrableValueException("Value 'UserGroup.engine' is not present");
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'UserGroup.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'UserGroup.tagsAll' is not present");
    }

    /**
     * The ID of the user group.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="userGroupId", flag="unknown_userGroupId")
    private String value_userGroupId;
    private boolean unknown_userGroupId;
    public String userGroupId() {
        if (!unknown_userGroupId) return value_userGroupId;
        throw new UndeferrableValueException("Value 'UserGroup.userGroupId' is not present");
    }

    /**
     * The list of user IDs that belong to the user group.
     * 
     */
    @PolicyResourceProperty(name="userIds", flag="unknown_userIds")
    private @Nullable List<String> value_userIds;
    private boolean unknown_userIds;
    public @Nullable List<String> userIds() {
        if (!unknown_userIds) return value_userIds;
        throw new UndeferrableValueException("Value 'UserGroup.userIds' is not present");
    }

}
