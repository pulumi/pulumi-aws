// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.quicksight;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.quicksight.inputs.ThemeConfigurationArgs;
import com.pulumi.policypacks.aws.quicksight.inputs.ThemePermissionArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:quicksight/theme:Theme")
public final class ThemeArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * AWS account ID.
     * 
     */
    private UndeferrableValue<String> awsAccountId;

    public String awsAccountId() {
        if (awsAccountId == null) return null;
        return awsAccountId.getValue("ThemeArgs.awsAccountId");
    }

    /**
     * The ID of the theme that a custom theme will inherit from. All themes inherit from one of the starting themes defined by Amazon QuickSight. For a list of the starting themes, use ListThemes or choose Themes from within an analysis.
     * 
     */
    private UndeferrableValue<String> baseThemeId;

    public String baseThemeId() {
        if (baseThemeId == null) return null;
        return baseThemeId.getValue("ThemeArgs.baseThemeId");
    }

    /**
     * The theme configuration, which contains the theme display properties. See configuration.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<ThemeConfigurationArgs> configuration;

    public ThemeConfigurationArgs configuration() {
        if (configuration == null) return null;
        return configuration.getValue("ThemeArgs.configuration");
    }

    /**
     * Display name of the theme.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("ThemeArgs.name");
    }

    /**
     * A set of resource permissions on the theme. Maximum of 64 items. See permissions.
     * 
     */
    private UndeferrableValue<List<ThemePermissionArgs>> permissions;

    public List<ThemePermissionArgs> permissions() {
        if (permissions == null) return null;
        return permissions.getValue("ThemeArgs.permissions");
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("ThemeArgs.tags");
    }

    /**
     * Identifier of the theme.
     * 
     */
    private UndeferrableValue<String> themeId;

    public String themeId() {
        if (themeId == null) return null;
        return themeId.getValue("ThemeArgs.themeId");
    }

    /**
     * A description of the current theme version being created/updated.
     * 
     */
    private UndeferrableValue<String> versionDescription;

    public String versionDescription() {
        if (versionDescription == null) return null;
        return versionDescription.getValue("ThemeArgs.versionDescription");
    }

}
