// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ecr;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ecr/pullThroughCacheRule:PullThroughCacheRule")
public final class PullThroughCacheRuleArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * ARN of the Secret which will be used to authenticate against the registry.
     * 
     */
    private UndeferrableValue<String> credentialArn;

    public String credentialArn() {
        if (credentialArn == null) return null;
        return credentialArn.getValue("PullThroughCacheRuleArgs.credentialArn");
    }

    /**
     * The ARN of the IAM role associated with the pull through cache rule. Must be specified if the upstream registry is a cross-account ECR private registry. See [AWS Document - Setting up permissions for cross-account ECR to ECR PTC](https://docs.aws.amazon.com/AmazonECR/latest/userguide/pull-through-cache-private.html).
     * 
     */
    private UndeferrableValue<String> customRoleArn;

    public String customRoleArn() {
        if (customRoleArn == null) return null;
        return customRoleArn.getValue("PullThroughCacheRuleArgs.customRoleArn");
    }

    /**
     * The repository name prefix to use when caching images from the source registry. Use `ROOT` as the prefix to apply a template to all repositories in your registry that don&#39;t have an associated pull through cache rule.
     * 
     */
    private UndeferrableValue<String> ecrRepositoryPrefix;

    public String ecrRepositoryPrefix() {
        if (ecrRepositoryPrefix == null) return null;
        return ecrRepositoryPrefix.getValue("PullThroughCacheRuleArgs.ecrRepositoryPrefix");
    }

    /**
     * The registry URL of the upstream registry to use as the source.
     * 
     */
    private UndeferrableValue<String> upstreamRegistryUrl;

    public String upstreamRegistryUrl() {
        if (upstreamRegistryUrl == null) return null;
        return upstreamRegistryUrl.getValue("PullThroughCacheRuleArgs.upstreamRegistryUrl");
    }

    /**
     * The upstream repository prefix associated with the pull through cache rule. Used if the upstream registry is an ECR private registry. If not specified, it&#39;s set to `ROOT`, which allows matching with any upstream repository. See [AWS Document - Customizing repository prefixes for ECR to ECR pull through cache](https://docs.aws.amazon.com/AmazonECR/latest/userguide/pull-through-cache-private-wildcards.html).
     * 
     */
    private UndeferrableValue<String> upstreamRepositoryPrefix;

    public String upstreamRepositoryPrefix() {
        if (upstreamRepositoryPrefix == null) return null;
        return upstreamRepositoryPrefix.getValue("PullThroughCacheRuleArgs.upstreamRepositoryPrefix");
    }

}
