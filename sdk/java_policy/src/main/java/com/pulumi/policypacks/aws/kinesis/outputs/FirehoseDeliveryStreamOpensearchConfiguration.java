// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.kinesis.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.kinesis.outputs.FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptions;
import com.pulumi.policypacks.aws.kinesis.outputs.FirehoseDeliveryStreamOpensearchConfigurationDocumentIdOptions;
import com.pulumi.policypacks.aws.kinesis.outputs.FirehoseDeliveryStreamOpensearchConfigurationProcessingConfiguration;
import com.pulumi.policypacks.aws.kinesis.outputs.FirehoseDeliveryStreamOpensearchConfigurationS3Configuration;
import com.pulumi.policypacks.aws.kinesis.outputs.FirehoseDeliveryStreamOpensearchConfigurationVpcConfig;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class FirehoseDeliveryStreamOpensearchConfiguration {

    /**
     * Buffer incoming data for the specified period of time, in seconds between 0 to 900, before delivering it to the destination.  The default value is 300s.
     * 
     */
    private @Nullable UndeferrableValue<Integer> bufferingInterval;

    public @Nullable Integer bufferingInterval() {
        if (bufferingInterval == null) return null;
        return bufferingInterval.getValue("FirehoseDeliveryStreamOpensearchConfiguration.bufferingInterval");
    }

    /**
     * Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
     * 
     */
    private @Nullable UndeferrableValue<Integer> bufferingSize;

    public @Nullable Integer bufferingSize() {
        if (bufferingSize == null) return null;
        return bufferingSize.getValue("FirehoseDeliveryStreamOpensearchConfiguration.bufferingSize");
    }

    /**
     * The CloudWatch Logging Options for the delivery stream. See `cloudwatch_logging_options` block below for details.
     * 
     */
    private @Nullable UndeferrableValue<FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptions> cloudwatchLoggingOptions;

    public @Nullable FirehoseDeliveryStreamOpensearchConfigurationCloudwatchLoggingOptions cloudwatchLoggingOptions() {
        if (cloudwatchLoggingOptions == null) return null;
        return cloudwatchLoggingOptions.getValue("FirehoseDeliveryStreamOpensearchConfiguration.cloudwatchLoggingOptions");
    }

    /**
     * The endpoint to use when communicating with the cluster. Conflicts with `domain_arn`.
     * 
     */
    private @Nullable UndeferrableValue<String> clusterEndpoint;

    public @Nullable String clusterEndpoint() {
        if (clusterEndpoint == null) return null;
        return clusterEndpoint.getValue("FirehoseDeliveryStreamOpensearchConfiguration.clusterEndpoint");
    }

    /**
     * The method for setting up document ID. See [`document_id_options` block] below for details.
     * 
     */
    private @Nullable UndeferrableValue<FirehoseDeliveryStreamOpensearchConfigurationDocumentIdOptions> documentIdOptions;

    public @Nullable FirehoseDeliveryStreamOpensearchConfigurationDocumentIdOptions documentIdOptions() {
        if (documentIdOptions == null) return null;
        return documentIdOptions.getValue("FirehoseDeliveryStreamOpensearchConfiguration.documentIdOptions");
    }

    /**
     * The ARN of the Amazon ES domain.  The pattern needs to be `arn:.*`.  Conflicts with `cluster_endpoint`.
     * 
     */
    private @Nullable UndeferrableValue<String> domainArn;

    public @Nullable String domainArn() {
        if (domainArn == null) return null;
        return domainArn.getValue("FirehoseDeliveryStreamOpensearchConfiguration.domainArn");
    }

    /**
     * The OpenSearch index name.
     * 
     */
    private UndeferrableValue<String> indexName;

    public String indexName() {
        if (indexName == null) return null;
        return indexName.getValue("FirehoseDeliveryStreamOpensearchConfiguration.indexName");
    }

    /**
     * The OpenSearch index rotation period.  Index rotation appends a timestamp to the IndexName to facilitate expiration of old data.  Valid values are `NoRotation`, `OneHour`, `OneDay`, `OneWeek`, and `OneMonth`.  The default value is `OneDay`.
     * 
     */
    private @Nullable UndeferrableValue<String> indexRotationPeriod;

    public @Nullable String indexRotationPeriod() {
        if (indexRotationPeriod == null) return null;
        return indexRotationPeriod.getValue("FirehoseDeliveryStreamOpensearchConfiguration.indexRotationPeriod");
    }

    /**
     * The data processing configuration. See `processing_configuration` block below for details.
     * 
     */
    private @Nullable UndeferrableValue<FirehoseDeliveryStreamOpensearchConfigurationProcessingConfiguration> processingConfiguration;

    public @Nullable FirehoseDeliveryStreamOpensearchConfigurationProcessingConfiguration processingConfiguration() {
        if (processingConfiguration == null) return null;
        return processingConfiguration.getValue("FirehoseDeliveryStreamOpensearchConfiguration.processingConfiguration");
    }

    /**
     * After an initial failure to deliver to Amazon OpenSearch, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
     * 
     */
    private @Nullable UndeferrableValue<Integer> retryDuration;

    public @Nullable Integer retryDuration() {
        if (retryDuration == null) return null;
        return retryDuration.getValue("FirehoseDeliveryStreamOpensearchConfiguration.retryDuration");
    }

    /**
     * The ARN of the IAM role to be assumed by Firehose for calling the Amazon ES Configuration API and for indexing documents.  The IAM role must have permission for `DescribeDomain`, `DescribeDomains`, and `DescribeDomainConfig`.  The pattern needs to be `arn:.*`.
     * 
     */
    private UndeferrableValue<String> roleArn;

    public String roleArn() {
        if (roleArn == null) return null;
        return roleArn.getValue("FirehoseDeliveryStreamOpensearchConfiguration.roleArn");
    }

    /**
     * Defines how documents should be delivered to Amazon S3.  Valid values are `FailedDocumentsOnly` and `AllDocuments`.  Default value is `FailedDocumentsOnly`.
     * 
     */
    private @Nullable UndeferrableValue<String> s3BackupMode;

    public @Nullable String s3BackupMode() {
        if (s3BackupMode == null) return null;
        return s3BackupMode.getValue("FirehoseDeliveryStreamOpensearchConfiguration.s3BackupMode");
    }

    /**
     * The S3 Configuration. See `s3_configuration` block below for details.
     * 
     */
    private UndeferrableValue<FirehoseDeliveryStreamOpensearchConfigurationS3Configuration> s3Configuration;

    public FirehoseDeliveryStreamOpensearchConfigurationS3Configuration s3Configuration() {
        if (s3Configuration == null) return null;
        return s3Configuration.getValue("FirehoseDeliveryStreamOpensearchConfiguration.s3Configuration");
    }

    /**
     * The Elasticsearch type name with maximum length of 100 characters. Types are deprecated in OpenSearch_1.1. TypeName must be empty.
     * 
     */
    private @Nullable UndeferrableValue<String> typeName;

    public @Nullable String typeName() {
        if (typeName == null) return null;
        return typeName.getValue("FirehoseDeliveryStreamOpensearchConfiguration.typeName");
    }

    /**
     * The VPC configuration for the delivery stream to connect to OpenSearch associated with the VPC. See `vpc_config` block below for details.
     * 
     */
    private @Nullable UndeferrableValue<FirehoseDeliveryStreamOpensearchConfigurationVpcConfig> vpcConfig;

    public @Nullable FirehoseDeliveryStreamOpensearchConfigurationVpcConfig vpcConfig() {
        if (vpcConfig == null) return null;
        return vpcConfig.getValue("FirehoseDeliveryStreamOpensearchConfiguration.vpcConfig");
    }

}
