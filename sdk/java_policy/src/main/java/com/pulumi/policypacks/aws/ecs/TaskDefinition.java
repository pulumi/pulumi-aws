// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ecs;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.ecs.TaskDefinitionEphemeralStorage;
import com.pulumi.policypacks.aws.ecs.TaskDefinitionInferenceAccelerator;
import com.pulumi.policypacks.aws.ecs.TaskDefinitionPlacementConstraint;
import com.pulumi.policypacks.aws.ecs.TaskDefinitionProxyConfiguration;
import com.pulumi.policypacks.aws.ecs.TaskDefinitionRuntimePlatform;
import com.pulumi.policypacks.aws.ecs.TaskDefinitionVolume;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;


@PolicyResourceType(type="aws:ecs/taskDefinition:TaskDefinition")
public final class TaskDefinition extends com.pulumi.resources.PolicyResource {

    /**
     * Full ARN of the Task Definition (including both `family` and `revision`).
     * 
     */
    public String arn;



    /**
     * ARN of the Task Definition with the trailing `revision` removed. This may be useful for situations where the latest task definition is always desired. If a revision isn&#39;t specified, the latest ACTIVE revision is used. See the [AWS documentation](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_StartTask.html#ECS-StartTask-request-taskDefinition) for details.
     * 
     */
    public String arnWithoutRevision;



    /**
     * A list of valid [container definitions](http://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ContainerDefinition.html) provided as a single valid JSON document. Please note that you should only provide values that are part of the container definition document. For a detailed description of what parameters are available, see the [Task Definition Parameters](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definition_parameters.html) section from the official [Developer Guide](https://docs.aws.amazon.com/AmazonECS/latest/developerguide).
     * 
     */
    public String containerDefinitions;



    /**
     * Number of cpu units used by the task. If the `requires_compatibilities` is `FARGATE` this field is required.
     * 
     */
    public String cpu;



    /**
     * Enables fault injection and allows for fault injection requests to be accepted from the task&#39;s containers. Default is `false`.
     * 
     * **Note:** Fault injection only works with tasks using the `awsvpc` or `host` network modes. Fault injection isn&#39;t available on Windows.
     * 
     */
    public Boolean enableFaultInjection;



    /**
     * The amount of ephemeral storage to allocate for the task. This parameter is used to expand the total amount of ephemeral storage available, beyond the default amount, for tasks hosted on AWS Fargate. See Ephemeral Storage.
     * 
     */
    public TaskDefinitionEphemeralStorage ephemeralStorage;



    /**
     * ARN of the task execution role that the Amazon ECS container agent and the Docker daemon can assume.
     * 
     */
    public String executionRoleArn;



    /**
     * A unique name for your task definition.
     * 
     * The following arguments are optional:
     * 
     */
    public String family;



    /**
     * Configuration block(s) with Inference Accelerators settings. Detailed below.
     * 
     */
    public List<TaskDefinitionInferenceAccelerator> inferenceAccelerators;



    /**
     * IPC resource namespace to be used for the containers in the task The valid values are `host`, `task`, and `none`.
     * 
     */
    public String ipcMode;



    /**
     * Amount (in MiB) of memory used by the task. If the `requires_compatibilities` is `FARGATE` this field is required.
     * 
     */
    public String memory;



    /**
     * Docker networking mode to use for the containers in the task. Valid values are `none`, `bridge`, `awsvpc`, and `host`.
     * 
     */
    public String networkMode;



    /**
     * Process namespace to use for the containers in the task. The valid values are `host` and `task`.
     * 
     */
    public String pidMode;



    /**
     * Configuration block for rules that are taken into consideration during task placement. Maximum number of `placement_constraints` is `10`. Detailed below.
     * 
     */
    public List<TaskDefinitionPlacementConstraint> placementConstraints;



    /**
     * Configuration block for the App Mesh proxy. Detailed below.
     * 
     */
    public TaskDefinitionProxyConfiguration proxyConfiguration;



    /**
     * Set of launch types required by the task. The valid values are `EC2` and `FARGATE`.
     * 
     */
    public List<String> requiresCompatibilities;



    /**
     * Revision of the task in a particular family.
     * 
     */
    public Integer revision;



    /**
     * Configuration block for runtime_platform that containers in your task may use.
     * 
     */
    public TaskDefinitionRuntimePlatform runtimePlatform;



    /**
     * Whether to retain the old revision when the resource is destroyed or replacement is necessary. Default is `false`.
     * 
     */
    public Boolean skipDestroy;



    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



    /**
     * ARN of IAM role that allows your Amazon ECS container task to make calls to other AWS services.
     * 
     */
    public String taskRoleArn;



    /**
     * Whether should track latest `ACTIVE` task definition on AWS or the one created with the resource stored in state. Default is `false`. Useful in the event the task definition is modified outside of this resource.
     * 
     */
    public Boolean trackLatest;



    /**
     * Configuration block for volumes that containers in your task may use. Detailed below.
     * 
     */
    public List<TaskDefinitionVolume> volumes;



}
