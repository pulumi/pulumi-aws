// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.iam;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:iam/samlProvider:SamlProvider")
public final class SamlProvider extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The ARN assigned by AWS for this provider.
     * 
     */
    private UndeferrableValue<String> arn;

    public String arn() {
        if (arn == null) return null;
        return arn.getValue("SamlProvider.arn");
    }

    /**
     * The name of the provider to create.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("SamlProvider.name");
    }

    /**
     * An XML document generated by an identity provider that supports SAML 2.0.
     * 
     */
    private UndeferrableValue<String> samlMetadataDocument;

    public String samlMetadataDocument() {
        if (samlMetadataDocument == null) return null;
        return samlMetadataDocument.getValue("SamlProvider.samlMetadataDocument");
    }

    /**
     * Map of resource tags for the IAM SAML provider. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private @Nullable UndeferrableValue<Map<String,String>> tags;

    public @Nullable Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("SamlProvider.tags");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    private UndeferrableValue<Map<String,String>> tagsAll;

    public Map<String,String> tagsAll() {
        if (tagsAll == null) return null;
        return tagsAll.getValue("SamlProvider.tagsAll");
    }

    /**
     * The expiration date and time for the SAML provider in RFC1123 format, e.g., `Mon, 02 Jan 2006 15:04:05 MST`.
     * 
     */
    private UndeferrableValue<String> validUntil;

    public String validUntil() {
        if (validUntil == null) return null;
        return validUntil.getValue("SamlProvider.validUntil");
    }

}
