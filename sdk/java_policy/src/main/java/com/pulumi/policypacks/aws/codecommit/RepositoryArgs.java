// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.codecommit;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:codecommit/repository:Repository")
public final class RepositoryArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The default branch of the repository. The branch specified here needs to exist.
     * 
     */
    private UndeferrableValue<String> defaultBranch;

    public String defaultBranch() {
        if (defaultBranch == null) return null;
        return defaultBranch.getValue("RepositoryArgs.defaultBranch");
    }

    /**
     * The description of the repository. This needs to be less than 1000 characters
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("RepositoryArgs.description");
    }

    /**
     * The ARN of the encryption key. If no key is specified, the default `aws/codecommit` Amazon Web Services managed key is used.
     * 
     */
    private UndeferrableValue<String> kmsKeyId;

    public String kmsKeyId() {
        if (kmsKeyId == null) return null;
        return kmsKeyId.getValue("RepositoryArgs.kmsKeyId");
    }

    /**
     * The name for the repository. This needs to be less than 100 characters.
     * 
     */
    private UndeferrableValue<String> repositoryName;

    public String repositoryName() {
        if (repositoryName == null) return null;
        return repositoryName.getValue("RepositoryArgs.repositoryName");
    }

    /**
     * Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("RepositoryArgs.tags");
    }

}
