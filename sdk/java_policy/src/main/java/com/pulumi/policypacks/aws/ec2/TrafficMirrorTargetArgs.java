// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ec2/trafficMirrorTarget:TrafficMirrorTarget")
public final class TrafficMirrorTargetArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * A description of the traffic mirror session.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private String value_description;
    private boolean unknown_description;
    public String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'TrafficMirrorTargetArgs.description' is not present");
    }

    /**
     * The VPC Endpoint Id of the Gateway Load Balancer that is associated with the target.
     * 
     */
    @PolicyResourceProperty(name="gatewayLoadBalancerEndpointId", flag="unknown_gatewayLoadBalancerEndpointId")
    private String value_gatewayLoadBalancerEndpointId;
    private boolean unknown_gatewayLoadBalancerEndpointId;
    public String gatewayLoadBalancerEndpointId() {
        if (!unknown_gatewayLoadBalancerEndpointId) return value_gatewayLoadBalancerEndpointId;
        throw new UndeferrableValueException("Value 'TrafficMirrorTargetArgs.gatewayLoadBalancerEndpointId' is not present");
    }

    /**
     * The network interface ID that is associated with the target.
     * 
     */
    @PolicyResourceProperty(name="networkInterfaceId", flag="unknown_networkInterfaceId")
    private String value_networkInterfaceId;
    private boolean unknown_networkInterfaceId;
    public String networkInterfaceId() {
        if (!unknown_networkInterfaceId) return value_networkInterfaceId;
        throw new UndeferrableValueException("Value 'TrafficMirrorTargetArgs.networkInterfaceId' is not present");
    }

    /**
     * The Amazon Resource Name (ARN) of the Network Load Balancer that is associated with the target.
     * 
     */
    @PolicyResourceProperty(name="networkLoadBalancerArn", flag="unknown_networkLoadBalancerArn")
    private String value_networkLoadBalancerArn;
    private boolean unknown_networkLoadBalancerArn;
    public String networkLoadBalancerArn() {
        if (!unknown_networkLoadBalancerArn) return value_networkLoadBalancerArn;
        throw new UndeferrableValueException("Value 'TrafficMirrorTargetArgs.networkLoadBalancerArn' is not present");
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     * **NOTE:** Either `network_interface_id` or `network_load_balancer_arn` should be specified and both should not be specified together
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'TrafficMirrorTargetArgs.tags' is not present");
    }

}
