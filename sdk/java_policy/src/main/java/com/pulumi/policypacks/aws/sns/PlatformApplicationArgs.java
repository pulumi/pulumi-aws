// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.sns;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:sns/platformApplication:PlatformApplication")
public final class PlatformApplicationArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The bundle identifier that&#39;s assigned to your iOS app. May only include alphanumeric characters, hyphens (-), and periods (.).
     * 
     */
    private UndeferrableValue<String> applePlatformBundleId;

    public String applePlatformBundleId() {
        if (applePlatformBundleId == null) return null;
        return applePlatformBundleId.getValue("PlatformApplicationArgs.applePlatformBundleId");
    }

    /**
     * The identifier that&#39;s assigned to your Apple developer account team. Must be 10 alphanumeric characters.
     * 
     */
    private UndeferrableValue<String> applePlatformTeamId;

    public String applePlatformTeamId() {
        if (applePlatformTeamId == null) return null;
        return applePlatformTeamId.getValue("PlatformApplicationArgs.applePlatformTeamId");
    }

    /**
     * The ARN of the SNS Topic triggered when a delivery to any of the platform endpoints associated with your platform application encounters a permanent failure.
     * 
     */
    private UndeferrableValue<String> eventDeliveryFailureTopicArn;

    public String eventDeliveryFailureTopicArn() {
        if (eventDeliveryFailureTopicArn == null) return null;
        return eventDeliveryFailureTopicArn.getValue("PlatformApplicationArgs.eventDeliveryFailureTopicArn");
    }

    /**
     * The ARN of the SNS Topic triggered when a new platform endpoint is added to your platform application.
     * 
     */
    private UndeferrableValue<String> eventEndpointCreatedTopicArn;

    public String eventEndpointCreatedTopicArn() {
        if (eventEndpointCreatedTopicArn == null) return null;
        return eventEndpointCreatedTopicArn.getValue("PlatformApplicationArgs.eventEndpointCreatedTopicArn");
    }

    /**
     * The ARN of the SNS Topic triggered when an existing platform endpoint is deleted from your platform application.
     * 
     */
    private UndeferrableValue<String> eventEndpointDeletedTopicArn;

    public String eventEndpointDeletedTopicArn() {
        if (eventEndpointDeletedTopicArn == null) return null;
        return eventEndpointDeletedTopicArn.getValue("PlatformApplicationArgs.eventEndpointDeletedTopicArn");
    }

    /**
     * The ARN of the SNS Topic triggered when an existing platform endpoint is changed from your platform application.
     * 
     */
    private UndeferrableValue<String> eventEndpointUpdatedTopicArn;

    public String eventEndpointUpdatedTopicArn() {
        if (eventEndpointUpdatedTopicArn == null) return null;
        return eventEndpointUpdatedTopicArn.getValue("PlatformApplicationArgs.eventEndpointUpdatedTopicArn");
    }

    /**
     * The IAM role ARN permitted to receive failure feedback for this application and give SNS write access to use CloudWatch logs on your behalf.
     * 
     */
    private UndeferrableValue<String> failureFeedbackRoleArn;

    public String failureFeedbackRoleArn() {
        if (failureFeedbackRoleArn == null) return null;
        return failureFeedbackRoleArn.getValue("PlatformApplicationArgs.failureFeedbackRoleArn");
    }

    /**
     * The friendly name for the SNS platform application
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("PlatformApplicationArgs.name");
    }

    /**
     * The platform that the app is registered with. See [Platform](http://docs.aws.amazon.com/sns/latest/dg/mobile-push-send-register.html) for supported platforms.
     * 
     */
    private UndeferrableValue<String> platform;

    public String platform() {
        if (platform == null) return null;
        return platform.getValue("PlatformApplicationArgs.platform");
    }

    /**
     * Application Platform credential. See [Credential](http://docs.aws.amazon.com/sns/latest/dg/mobile-push-send-register.html) for type of credential required for platform. The value of this attribute when stored into the state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources.
     * 
     */
    private UndeferrableValue<String> platformCredential;

    public String platformCredential() {
        if (platformCredential == null) return null;
        return platformCredential.getValue("PlatformApplicationArgs.platformCredential");
    }

    /**
     * Application Platform principal. See [Principal](http://docs.aws.amazon.com/sns/latest/api/API_CreatePlatformApplication.html) for type of principal required for platform. The value of this attribute when stored into the state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources.
     * 
     */
    private UndeferrableValue<String> platformPrincipal;

    public String platformPrincipal() {
        if (platformPrincipal == null) return null;
        return platformPrincipal.getValue("PlatformApplicationArgs.platformPrincipal");
    }

    /**
     * The IAM role ARN permitted to receive success feedback for this application and give SNS write access to use CloudWatch logs on your behalf.
     * 
     */
    private UndeferrableValue<String> successFeedbackRoleArn;

    public String successFeedbackRoleArn() {
        if (successFeedbackRoleArn == null) return null;
        return successFeedbackRoleArn.getValue("PlatformApplicationArgs.successFeedbackRoleArn");
    }

    /**
     * The sample rate percentage (0-100) of successfully delivered messages.
     * 
     * The following attributes are needed only when using APNS token credentials:
     * 
     */
    private UndeferrableValue<String> successFeedbackSampleRate;

    public String successFeedbackSampleRate() {
        if (successFeedbackSampleRate == null) return null;
        return successFeedbackSampleRate.getValue("PlatformApplicationArgs.successFeedbackSampleRate");
    }

}
