// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appmesh;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.appmesh.inputs.RouteSpecArgs;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:appmesh/route:Route")
public final class RouteArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Name of the service mesh in which to create the route. Must be between 1 and 255 characters in length.
     * 
     */
    private UndeferrableValue<String> meshName;

    public String meshName() {
        if (meshName == null) return null;
        return meshName.getValue("RouteArgs.meshName");
    }

    /**
     * AWS account ID of the service mesh&#39;s owner. Defaults to the account ID the AWS provider is currently connected to.
     * 
     */
    private UndeferrableValue<String> meshOwner;

    public String meshOwner() {
        if (meshOwner == null) return null;
        return meshOwner.getValue("RouteArgs.meshOwner");
    }

    /**
     * Name to use for the route. Must be between 1 and 255 characters in length.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("RouteArgs.name");
    }

    /**
     * Route specification to apply.
     * 
     */
    private UndeferrableValue<RouteSpecArgs> spec;

    public RouteSpecArgs spec() {
        if (spec == null) return null;
        return spec.getValue("RouteArgs.spec");
    }

    /**
     * Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("RouteArgs.tags");
    }

    /**
     * Name of the virtual router in which to create the route. Must be between 1 and 255 characters in length.
     * 
     */
    private UndeferrableValue<String> virtualRouterName;

    public String virtualRouterName() {
        if (virtualRouterName == null) return null;
        return virtualRouterName.getValue("RouteArgs.virtualRouterName");
    }

}
