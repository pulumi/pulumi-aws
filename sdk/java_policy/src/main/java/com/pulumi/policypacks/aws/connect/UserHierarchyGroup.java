// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.connect;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.connect.outputs.UserHierarchyGroupHierarchyPath;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:connect/userHierarchyGroup:UserHierarchyGroup")
public final class UserHierarchyGroup extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The Amazon Resource Name (ARN) of the hierarchy group.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'UserHierarchyGroup.arn' is not present");
    }

    /**
     * The identifier for the hierarchy group.
     * 
     */
    @PolicyResourceProperty(name="hierarchyGroupId", flag="unknown_hierarchyGroupId")
    private String value_hierarchyGroupId;
    private boolean unknown_hierarchyGroupId;
    public String hierarchyGroupId() {
        if (!unknown_hierarchyGroupId) return value_hierarchyGroupId;
        throw new UndeferrableValueException("Value 'UserHierarchyGroup.hierarchyGroupId' is not present");
    }

    /**
     * A block that contains information about the levels in the hierarchy group. The `hierarchy_path` block is documented below.
     * 
     */
    @PolicyResourceProperty(name="hierarchyPaths", flag="unknown_hierarchyPaths")
    private List<UserHierarchyGroupHierarchyPath> value_hierarchyPaths;
    private boolean unknown_hierarchyPaths;
    public List<UserHierarchyGroupHierarchyPath> hierarchyPaths() {
        if (!unknown_hierarchyPaths) return value_hierarchyPaths;
        throw new UndeferrableValueException("Value 'UserHierarchyGroup.hierarchyPaths' is not present");
    }

    /**
     * Specifies the identifier of the hosting Amazon Connect Instance.
     * 
     */
    @PolicyResourceProperty(name="instanceId", flag="unknown_instanceId")
    private String value_instanceId;
    private boolean unknown_instanceId;
    public String instanceId() {
        if (!unknown_instanceId) return value_instanceId;
        throw new UndeferrableValueException("Value 'UserHierarchyGroup.instanceId' is not present");
    }

    /**
     * The identifier of the level in the hierarchy group.
     * 
     */
    @PolicyResourceProperty(name="levelId", flag="unknown_levelId")
    private String value_levelId;
    private boolean unknown_levelId;
    public String levelId() {
        if (!unknown_levelId) return value_levelId;
        throw new UndeferrableValueException("Value 'UserHierarchyGroup.levelId' is not present");
    }

    /**
     * The name of the user hierarchy group. Must not be more than 100 characters.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'UserHierarchyGroup.name' is not present");
    }

    /**
     * The identifier for the parent hierarchy group. The user hierarchy is created at level one if the parent group ID is null.
     * 
     */
    @PolicyResourceProperty(name="parentGroupId", flag="unknown_parentGroupId")
    private @Nullable String value_parentGroupId;
    private boolean unknown_parentGroupId;
    public @Nullable String parentGroupId() {
        if (!unknown_parentGroupId) return value_parentGroupId;
        throw new UndeferrableValueException("Value 'UserHierarchyGroup.parentGroupId' is not present");
    }

    /**
     * Tags to apply to the hierarchy group. If configured with a provider
     * `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'UserHierarchyGroup.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'UserHierarchyGroup.tagsAll' is not present");
    }

}
