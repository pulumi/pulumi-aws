// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.connect;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.connect.outputs.UserHierarchyGroupHierarchyPath;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:connect/userHierarchyGroup:UserHierarchyGroup")
public final class UserHierarchyGroup extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The Amazon Resource Name (ARN) of the hierarchy group.
     * 
     */
    private UndeferrableValue<String> arn;

    public String arn() {
        if (arn == null) return null;
        return arn.getValue("UserHierarchyGroup.arn");
    }

    /**
     * The identifier for the hierarchy group.
     * 
     */
    private UndeferrableValue<String> hierarchyGroupId;

    public String hierarchyGroupId() {
        if (hierarchyGroupId == null) return null;
        return hierarchyGroupId.getValue("UserHierarchyGroup.hierarchyGroupId");
    }

    /**
     * A block that contains information about the levels in the hierarchy group. The `hierarchy_path` block is documented below.
     * 
     */
    private UndeferrableValue<List<UserHierarchyGroupHierarchyPath>> hierarchyPaths;

    public List<UserHierarchyGroupHierarchyPath> hierarchyPaths() {
        if (hierarchyPaths == null) return null;
        return hierarchyPaths.getValue("UserHierarchyGroup.hierarchyPaths");
    }

    /**
     * Specifies the identifier of the hosting Amazon Connect Instance.
     * 
     */
    private UndeferrableValue<String> instanceId;

    public String instanceId() {
        if (instanceId == null) return null;
        return instanceId.getValue("UserHierarchyGroup.instanceId");
    }

    /**
     * The identifier of the level in the hierarchy group.
     * 
     */
    private UndeferrableValue<String> levelId;

    public String levelId() {
        if (levelId == null) return null;
        return levelId.getValue("UserHierarchyGroup.levelId");
    }

    /**
     * The name of the user hierarchy group. Must not be more than 100 characters.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("UserHierarchyGroup.name");
    }

    /**
     * The identifier for the parent hierarchy group. The user hierarchy is created at level one if the parent group ID is null.
     * 
     */
    private @Nullable UndeferrableValue<String> parentGroupId;

    public @Nullable String parentGroupId() {
        if (parentGroupId == null) return null;
        return parentGroupId.getValue("UserHierarchyGroup.parentGroupId");
    }

    /**
     * Tags to apply to the hierarchy group. If configured with a provider
     * `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private @Nullable UndeferrableValue<Map<String,String>> tags;

    public @Nullable Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("UserHierarchyGroup.tags");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    private UndeferrableValue<Map<String,String>> tagsAll;

    public Map<String,String> tagsAll() {
        if (tagsAll == null) return null;
        return tagsAll.getValue("UserHierarchyGroup.tagsAll");
    }

}
