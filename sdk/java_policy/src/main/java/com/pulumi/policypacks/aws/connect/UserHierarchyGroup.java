// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.connect;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.connect.UserHierarchyGroupHierarchyPath;
import java.lang.String;
import java.util.List;
import java.util.Map;


@PolicyResourceType(type="aws:connect/userHierarchyGroup:UserHierarchyGroup")
public final class UserHierarchyGroup extends com.pulumi.resources.PolicyResource {

    /**
     * The Amazon Resource Name (ARN) of the hierarchy group.
     * 
     */
    public String arn;



    /**
     * The identifier for the hierarchy group.
     * 
     */
    public String hierarchyGroupId;



    /**
     * A block that contains information about the levels in the hierarchy group. The `hierarchy_path` block is documented below.
     * 
     */
    public List<UserHierarchyGroupHierarchyPath> hierarchyPaths;



    /**
     * Specifies the identifier of the hosting Amazon Connect Instance.
     * 
     */
    public String instanceId;



    /**
     * The identifier of the level in the hierarchy group.
     * 
     */
    public String levelId;



    /**
     * The name of the user hierarchy group. Must not be more than 100 characters.
     * 
     */
    public String name;



    /**
     * The identifier for the parent hierarchy group. The user hierarchy is created at level one if the parent group ID is null.
     * 
     */
    public String parentGroupId;



    /**
     * Tags to apply to the hierarchy group. If configured with a provider
     * `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



}
