// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.directconnect;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;


@PolicyResourceType(type="aws:directconnect/hostedConnection:HostedConnection")
public final class HostedConnection extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The Direct Connect endpoint on which the physical connection terminates.
     * 
     */
    private UndeferrableValue<String> awsDevice;

    public String awsDevice() {
        if (awsDevice == null) return null;
        return awsDevice.getValue("HostedConnection.awsDevice");
    }

    /**
     * The bandwidth of the connection. Valid values for dedicated connections: 1Gbps, 10Gbps. Valid values for hosted connections: 50Mbps, 100Mbps, 200Mbps, 300Mbps, 400Mbps, 500Mbps, 1Gbps, 2Gbps, 5Gbps, 10Gbps, and 25Gbps. Case sensitive. Refer to the AWS Direct Connection supported bandwidths for [Hosted Connections](https://docs.aws.amazon.com/directconnect/latest/UserGuide/hosted_connection.html).
     * 
     */
    private UndeferrableValue<String> bandwidth;

    public String bandwidth() {
        if (bandwidth == null) return null;
        return bandwidth.getValue("HostedConnection.bandwidth");
    }

    /**
     * The ID of the interconnect or LAG.
     * 
     */
    private UndeferrableValue<String> connectionId;

    public String connectionId() {
        if (connectionId == null) return null;
        return connectionId.getValue("HostedConnection.connectionId");
    }

    /**
     * Indicates whether the connection supports a secondary BGP peer in the same address family (IPv4/IPv6).
     * 
     */
    private UndeferrableValue<String> hasLogicalRedundancy;

    public String hasLogicalRedundancy() {
        if (hasLogicalRedundancy == null) return null;
        return hasLogicalRedundancy.getValue("HostedConnection.hasLogicalRedundancy");
    }

    /**
     * Boolean value representing if jumbo frames have been enabled for this connection.
     * 
     */
    private UndeferrableValue<Boolean> jumboFrameCapable;

    public Boolean jumboFrameCapable() {
        if (jumboFrameCapable == null) return null;
        return jumboFrameCapable.getValue("HostedConnection.jumboFrameCapable");
    }

    /**
     * The ID of the LAG.
     * 
     */
    private UndeferrableValue<String> lagId;

    public String lagId() {
        if (lagId == null) return null;
        return lagId.getValue("HostedConnection.lagId");
    }

    /**
     * The time of the most recent call to [DescribeLoa](https://docs.aws.amazon.com/directconnect/latest/APIReference/API_DescribeLoa.html) for this connection.
     * 
     */
    private UndeferrableValue<String> loaIssueTime;

    public String loaIssueTime() {
        if (loaIssueTime == null) return null;
        return loaIssueTime.getValue("HostedConnection.loaIssueTime");
    }

    /**
     * The location of the connection.
     * 
     */
    private UndeferrableValue<String> location;

    public String location() {
        if (location == null) return null;
        return location.getValue("HostedConnection.location");
    }

    /**
     * The name of the connection.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("HostedConnection.name");
    }

    /**
     * The ID of the AWS account of the customer for the connection.
     * 
     */
    private UndeferrableValue<String> ownerAccountId;

    public String ownerAccountId() {
        if (ownerAccountId == null) return null;
        return ownerAccountId.getValue("HostedConnection.ownerAccountId");
    }

    /**
     * The name of the AWS Direct Connect service provider associated with the connection.
     * 
     */
    private UndeferrableValue<String> partnerName;

    public String partnerName() {
        if (partnerName == null) return null;
        return partnerName.getValue("HostedConnection.partnerName");
    }

    /**
     * The name of the service provider associated with the connection.
     * 
     */
    private UndeferrableValue<String> providerName;

    public String providerName() {
        if (providerName == null) return null;
        return providerName.getValue("HostedConnection.providerName");
    }

    /**
     * The AWS Region where the connection is located.
     * 
     */
    private UndeferrableValue<String> region;

    public String region() {
        if (region == null) return null;
        return region.getValue("HostedConnection.region");
    }

    /**
     * The state of the connection. Possible values include: ordering, requested, pending, available, down, deleting, deleted, rejected, unknown. See [AllocateHostedConnection](https://docs.aws.amazon.com/directconnect/latest/APIReference/API_AllocateHostedConnection.html) for a description of each connection state.
     * 
     */
    private UndeferrableValue<String> state;

    public String state() {
        if (state == null) return null;
        return state.getValue("HostedConnection.state");
    }

    /**
     * The dedicated VLAN provisioned to the hosted connection.
     * 
     */
    private UndeferrableValue<Integer> vlan;

    public Integer vlan() {
        if (vlan == null) return null;
        return vlan.getValue("HostedConnection.vlan");
    }

}
