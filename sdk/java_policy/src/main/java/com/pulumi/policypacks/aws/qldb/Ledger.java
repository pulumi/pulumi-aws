// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.qldb;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:qldb/ledger:Ledger")
public final class Ledger extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The ARN of the QLDB Ledger
     * 
     */
    private UndeferrableValue<String> arn;

    public String arn() {
        if (arn == null) return null;
        return arn.getValue("Ledger.arn");
    }

    /**
     * The deletion protection for the QLDB Ledger instance. By default it is `true`. To delete this resource via the provider, this value must be configured to `false` and applied first before attempting deletion.
     * 
     */
    private @Nullable UndeferrableValue<Boolean> deletionProtection;

    public @Nullable Boolean deletionProtection() {
        if (deletionProtection == null) return null;
        return deletionProtection.getValue("Ledger.deletionProtection");
    }

    /**
     * The key in AWS Key Management Service (AWS KMS) to use for encryption of data at rest in the ledger. For more information, see the [AWS documentation](https://docs.aws.amazon.com/qldb/latest/developerguide/encryption-at-rest.html). Valid values are `&#34;AWS_OWNED_KMS_KEY&#34;` to use an AWS KMS key that is owned and managed by AWS on your behalf, or the ARN of a valid symmetric customer managed KMS key.
     * 
     */
    private UndeferrableValue<String> kmsKey;

    public String kmsKey() {
        if (kmsKey == null) return null;
        return kmsKey.getValue("Ledger.kmsKey");
    }

    /**
     * The friendly name for the QLDB Ledger instance. By default generated by the provider.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("Ledger.name");
    }

    /**
     * The permissions mode for the QLDB ledger instance. Specify either `ALLOW_ALL` or `STANDARD`.
     * 
     */
    private UndeferrableValue<String> permissionsMode;

    public String permissionsMode() {
        if (permissionsMode == null) return null;
        return permissionsMode.getValue("Ledger.permissionsMode");
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private @Nullable UndeferrableValue<Map<String,String>> tags;

    public @Nullable Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("Ledger.tags");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    private UndeferrableValue<Map<String,String>> tagsAll;

    public Map<String,String> tagsAll() {
        if (tagsAll == null) return null;
        return tagsAll.getValue("Ledger.tagsAll");
    }

}
