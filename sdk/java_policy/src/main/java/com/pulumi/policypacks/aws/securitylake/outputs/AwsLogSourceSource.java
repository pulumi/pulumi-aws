// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.securitylake.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class AwsLogSourceSource {

    /**
     * Specify the AWS account information where you want to enable Security Lake.
     * If not specified, uses all accounts included in the Security Lake.
     * 
     */
    @PolicyResourceProperty(name="accounts", flag="unknown_accounts")
    private @Nullable List<String> value_accounts;
    private boolean unknown_accounts;
    public @Nullable List<String> accounts() {
        if (!unknown_accounts) return value_accounts;
        throw new UndeferrableValueException("Value 'AwsLogSourceSource.accounts' is not present");
    }

    /**
     * Specify the Regions where you want to enable Security Lake.
     * 
     */
    @PolicyResourceProperty(name="regions", flag="unknown_regions")
    private List<String> value_regions;
    private boolean unknown_regions;
    public List<String> regions() {
        if (!unknown_regions) return value_regions;
        throw new UndeferrableValueException("Value 'AwsLogSourceSource.regions' is not present");
    }

    /**
     * The name for a AWS source. This must be a Regionally unique value. Valid values: `ROUTE53`, `VPC_FLOW`, `SH_FINDINGS`, `CLOUD_TRAIL_MGMT`, `LAMBDA_EXECUTION`, `S3_DATA`, `EKS_AUDIT`, `WAF`.
     * 
     */
    @PolicyResourceProperty(name="sourceName", flag="unknown_sourceName")
    private String value_sourceName;
    private boolean unknown_sourceName;
    public String sourceName() {
        if (!unknown_sourceName) return value_sourceName;
        throw new UndeferrableValueException("Value 'AwsLogSourceSource.sourceName' is not present");
    }

    /**
     * The version for a AWS source.
     * If not specified, the version will be the default.
     * This must be a Regionally unique value.
     * 
     */
    @PolicyResourceProperty(name="sourceVersion", flag="unknown_sourceVersion")
    private @Nullable String value_sourceVersion;
    private boolean unknown_sourceVersion;
    public @Nullable String sourceVersion() {
        if (!unknown_sourceVersion) return value_sourceVersion;
        throw new UndeferrableValueException("Value 'AwsLogSourceSource.sourceVersion' is not present");
    }

}
