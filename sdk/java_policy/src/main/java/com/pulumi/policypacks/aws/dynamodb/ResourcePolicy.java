// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.dynamodb;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.String;


@PolicyResourceType(type="aws:dynamodb/resourcePolicy:ResourcePolicy")
public final class ResourcePolicy extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Set this parameter to true to confirm that you want to remove your permissions to change the policy of this resource in the future.
     * 
     */
    @PolicyResourceProperty(name="confirmRemoveSelfResourceAccess", flag="unknown_confirmRemoveSelfResourceAccess")
    private Boolean value_confirmRemoveSelfResourceAccess;
    private boolean unknown_confirmRemoveSelfResourceAccess;
    public Boolean confirmRemoveSelfResourceAccess() {
        if (!unknown_confirmRemoveSelfResourceAccess) return value_confirmRemoveSelfResourceAccess;
        throw new UndeferrableValueException("Value 'ResourcePolicy.confirmRemoveSelfResourceAccess' is not present");
    }

    /**
     * n Amazon Web Services resource-based policy document in JSON format. The maximum size supported for a resource-based policy document is 20 KB. DynamoDB counts whitespaces when calculating the size of a policy against this limit. For a full list of all considerations that you should keep in mind while attaching a resource-based policy, see Resource-based policy considerations.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="policy", flag="unknown_policy")
    private String value_policy;
    private boolean unknown_policy;
    public String policy() {
        if (!unknown_policy) return value_policy;
        throw new UndeferrableValueException("Value 'ResourcePolicy.policy' is not present");
    }

    /**
     * The Amazon Resource Name (ARN) of the DynamoDB resource to which the policy will be attached. The resources you can specify include tables and streams. You can control index permissions using the base table&#39;s policy. To specify the same permission level for your table and its indexes, you can provide both the table and index Amazon Resource Name (ARN)s in the Resource field of a given Statement in your policy document. Alternatively, to specify different permissions for your table, indexes, or both, you can define multiple Statement fields in your policy document.
     * 
     */
    @PolicyResourceProperty(name="resourceArn", flag="unknown_resourceArn")
    private String value_resourceArn;
    private boolean unknown_resourceArn;
    public String resourceArn() {
        if (!unknown_resourceArn) return value_resourceArn;
        throw new UndeferrableValueException("Value 'ResourcePolicy.resourceArn' is not present");
    }

    /**
     * A unique string that represents the revision ID of the policy. If you are comparing revision IDs, make sure to always use string comparison logic.
     * 
     */
    @PolicyResourceProperty(name="revisionId", flag="unknown_revisionId")
    private String value_revisionId;
    private boolean unknown_revisionId;
    public String revisionId() {
        if (!unknown_revisionId) return value_revisionId;
        throw new UndeferrableValueException("Value 'ResourcePolicy.revisionId' is not present");
    }

}
