// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.redshift;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:redshift/snapshotSchedule:SnapshotSchedule")
public final class SnapshotScheduleArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The definition of the snapshot schedule. The definition is made up of schedule expressions, for example `cron(30 12 *)` or `rate(12 hours)`.
     * 
     */
    @PolicyResourceProperty(name="definitions", flag="unknown_definitions")
    private List<String> value_definitions;
    private boolean unknown_definitions;
    public List<String> definitions() {
        if (!unknown_definitions) return value_definitions;
        throw new UndeferrableValueException("Value 'SnapshotScheduleArgs.definitions' is not present");
    }

    /**
     * The description of the snapshot schedule.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private String value_description;
    private boolean unknown_description;
    public String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'SnapshotScheduleArgs.description' is not present");
    }

    /**
     * Whether to destroy all associated clusters with this snapshot schedule on deletion. Must be enabled and applied before attempting deletion.
     * 
     */
    @PolicyResourceProperty(name="forceDestroy", flag="unknown_forceDestroy")
    private Boolean value_forceDestroy;
    private boolean unknown_forceDestroy;
    public Boolean forceDestroy() {
        if (!unknown_forceDestroy) return value_forceDestroy;
        throw new UndeferrableValueException("Value 'SnapshotScheduleArgs.forceDestroy' is not present");
    }

    /**
     * The snapshot schedule identifier. If omitted, this provider will assign a random, unique identifier.
     * 
     */
    @PolicyResourceProperty(name="identifier", flag="unknown_identifier")
    private String value_identifier;
    private boolean unknown_identifier;
    public String identifier() {
        if (!unknown_identifier) return value_identifier;
        throw new UndeferrableValueException("Value 'SnapshotScheduleArgs.identifier' is not present");
    }

    /**
     * Creates a unique
     * identifier beginning with the specified prefix. Conflicts with `identifier`.
     * 
     */
    @PolicyResourceProperty(name="identifierPrefix", flag="unknown_identifierPrefix")
    private String value_identifierPrefix;
    private boolean unknown_identifierPrefix;
    public String identifierPrefix() {
        if (!unknown_identifierPrefix) return value_identifierPrefix;
        throw new UndeferrableValueException("Value 'SnapshotScheduleArgs.identifierPrefix' is not present");
    }

    /**
     * A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'SnapshotScheduleArgs.tags' is not present");
    }

}
