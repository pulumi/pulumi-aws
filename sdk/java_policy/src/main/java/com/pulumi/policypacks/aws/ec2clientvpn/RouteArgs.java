// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2clientvpn;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ec2clientvpn/route:Route")
public final class RouteArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The ID of the Client VPN endpoint.
     * 
     */
    @PolicyResourceProperty(name="clientVpnEndpointId", flag="unknown_clientVpnEndpointId")
    private String value_clientVpnEndpointId;
    private boolean unknown_clientVpnEndpointId;
    public String clientVpnEndpointId() {
        if (!unknown_clientVpnEndpointId) return value_clientVpnEndpointId;
        throw new UndeferrableValueException("Value 'RouteArgs.clientVpnEndpointId' is not present");
    }

    /**
     * A brief description of the route.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private String value_description;
    private boolean unknown_description;
    public String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'RouteArgs.description' is not present");
    }

    /**
     * The IPv4 address range, in CIDR notation, of the route destination.
     * 
     */
    @PolicyResourceProperty(name="destinationCidrBlock", flag="unknown_destinationCidrBlock")
    private String value_destinationCidrBlock;
    private boolean unknown_destinationCidrBlock;
    public String destinationCidrBlock() {
        if (!unknown_destinationCidrBlock) return value_destinationCidrBlock;
        throw new UndeferrableValueException("Value 'RouteArgs.destinationCidrBlock' is not present");
    }

    /**
     * The ID of the Subnet to route the traffic through. It must already be attached to the Client VPN.
     * 
     */
    @PolicyResourceProperty(name="targetVpcSubnetId", flag="unknown_targetVpcSubnetId")
    private String value_targetVpcSubnetId;
    private boolean unknown_targetVpcSubnetId;
    public String targetVpcSubnetId() {
        if (!unknown_targetVpcSubnetId) return value_targetVpcSubnetId;
        throw new UndeferrableValueException("Value 'RouteArgs.targetVpcSubnetId' is not present");
    }

}
