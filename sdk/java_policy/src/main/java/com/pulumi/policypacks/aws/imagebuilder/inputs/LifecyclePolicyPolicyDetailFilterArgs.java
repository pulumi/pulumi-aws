// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.imagebuilder.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class LifecyclePolicyPolicyDetailFilterArgs {

    /**
     * For age-based filters, this is the number of resources to keep on hand after the lifecycle DELETE action is applied. Impacted resources are only deleted if you have more than this number of resources. If you have fewer resources than this number, the impacted resource is not deleted.
     * 
     */
    @PolicyResourceProperty(name="retainAtLeast", flag="unknown_retainAtLeast")
    private Integer value_retainAtLeast;
    private boolean unknown_retainAtLeast;
    public Integer retainAtLeast() {
        if (!unknown_retainAtLeast) return value_retainAtLeast;
        throw new UndeferrableValueException("Value 'LifecyclePolicyPolicyDetailFilterArgs.retainAtLeast' is not present");
    }

    /**
     * Filter resources based on either age or count. Valid values: `AGE` or `COUNT`.
     * 
     */
    @PolicyResourceProperty(name="type", flag="unknown_type")
    private String value_type;
    private boolean unknown_type;
    public String type() {
        if (!unknown_type) return value_type;
        throw new UndeferrableValueException("Value 'LifecyclePolicyPolicyDetailFilterArgs.type' is not present");
    }

    /**
     * Defines the unit of time that the lifecycle policy uses to determine impacted resources. This is required for age-based rules. Valid values: `DAYS`, `WEEKS`, `MONTHS` or `YEARS`.
     * 
     */
    @PolicyResourceProperty(name="unit", flag="unknown_unit")
    private String value_unit;
    private boolean unknown_unit;
    public String unit() {
        if (!unknown_unit) return value_unit;
        throw new UndeferrableValueException("Value 'LifecyclePolicyPolicyDetailFilterArgs.unit' is not present");
    }

    /**
     * The number of units for the time period or for the count. For example, a value of 6 might refer to six months or six AMIs.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="value", flag="unknown_value")
    private Integer value_value;
    private boolean unknown_value;
    public Integer value() {
        if (!unknown_value) return value_value;
        throw new UndeferrableValueException("Value 'LifecyclePolicyPolicyDetailFilterArgs.value' is not present");
    }

}
