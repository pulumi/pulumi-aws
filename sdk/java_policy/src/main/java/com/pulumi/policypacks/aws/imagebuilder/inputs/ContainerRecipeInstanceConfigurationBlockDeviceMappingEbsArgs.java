// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.imagebuilder.inputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsArgs {

    /**
     * Whether to delete the volume on termination. Defaults to unset, which is the value inherited from the parent image.
     * 
     */
    private UndeferrableValue<String> deleteOnTermination;

    public String deleteOnTermination() {
        if (deleteOnTermination == null) return null;
        return deleteOnTermination.getValue("ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsArgs.deleteOnTermination");
    }

    /**
     * Whether to encrypt the volume. Defaults to unset, which is the value inherited from the parent image.
     * 
     */
    private UndeferrableValue<String> encrypted;

    public String encrypted() {
        if (encrypted == null) return null;
        return encrypted.getValue("ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsArgs.encrypted");
    }

    /**
     * Number of Input/Output (I/O) operations per second to provision for an `io1` or `io2` volume.
     * 
     */
    private UndeferrableValue<Integer> iops;

    public Integer iops() {
        if (iops == null) return null;
        return iops.getValue("ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsArgs.iops");
    }

    /**
     * Amazon Resource Name (ARN) of the Key Management Service (KMS) Key for encryption.
     * 
     */
    private UndeferrableValue<String> kmsKeyId;

    public String kmsKeyId() {
        if (kmsKeyId == null) return null;
        return kmsKeyId.getValue("ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsArgs.kmsKeyId");
    }

    /**
     * Identifier of the EC2 Volume Snapshot.
     * 
     */
    private UndeferrableValue<String> snapshotId;

    public String snapshotId() {
        if (snapshotId == null) return null;
        return snapshotId.getValue("ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsArgs.snapshotId");
    }

    /**
     * For GP3 volumes only. The throughput in MiB/s that the volume supports.
     * 
     */
    private UndeferrableValue<Integer> throughput;

    public Integer throughput() {
        if (throughput == null) return null;
        return throughput.getValue("ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsArgs.throughput");
    }

    /**
     * Size of the volume, in GiB.
     * 
     */
    private UndeferrableValue<Integer> volumeSize;

    public Integer volumeSize() {
        if (volumeSize == null) return null;
        return volumeSize.getValue("ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsArgs.volumeSize");
    }

    /**
     * Type of the volume. For example, `gp2` or `io2`.
     * 
     */
    private UndeferrableValue<String> volumeType;

    public String volumeType() {
        if (volumeType == null) return null;
        return volumeType.getValue("ContainerRecipeInstanceConfigurationBlockDeviceMappingEbsArgs.volumeType");
    }

}
