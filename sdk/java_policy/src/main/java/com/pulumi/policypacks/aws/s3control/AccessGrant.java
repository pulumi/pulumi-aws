// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.s3control;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.s3control.outputs.AccessGrantAccessGrantsLocationConfiguration;
import com.pulumi.policypacks.aws.s3control.outputs.AccessGrantGrantee;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:s3control/accessGrant:AccessGrant")
public final class AccessGrant extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Amazon Resource Name (ARN) of the S3 Access Grant.
     * 
     */
    @PolicyResourceProperty(name="accessGrantArn", flag="unknown_accessGrantArn")
    private String value_accessGrantArn;
    private boolean unknown_accessGrantArn;
    public String accessGrantArn() {
        if (!unknown_accessGrantArn) return value_accessGrantArn;
        throw new UndeferrableValueException("Value 'AccessGrant.accessGrantArn' is not present");
    }

    /**
     * Unique ID of the S3 Access Grant.
     * 
     */
    @PolicyResourceProperty(name="accessGrantId", flag="unknown_accessGrantId")
    private String value_accessGrantId;
    private boolean unknown_accessGrantId;
    public String accessGrantId() {
        if (!unknown_accessGrantId) return value_accessGrantId;
        throw new UndeferrableValueException("Value 'AccessGrant.accessGrantId' is not present");
    }

    /**
     * See Location Configuration below for more details.
     * 
     */
    @PolicyResourceProperty(name="accessGrantsLocationConfiguration", flag="unknown_accessGrantsLocationConfiguration")
    private @Nullable AccessGrantAccessGrantsLocationConfiguration value_accessGrantsLocationConfiguration;
    private boolean unknown_accessGrantsLocationConfiguration;
    public @Nullable AccessGrantAccessGrantsLocationConfiguration accessGrantsLocationConfiguration() {
        if (!unknown_accessGrantsLocationConfiguration) return value_accessGrantsLocationConfiguration;
        throw new UndeferrableValueException("Value 'AccessGrant.accessGrantsLocationConfiguration' is not present");
    }

    /**
     * The ID of the S3 Access Grants location to with the access grant is giving access.
     * 
     */
    @PolicyResourceProperty(name="accessGrantsLocationId", flag="unknown_accessGrantsLocationId")
    private String value_accessGrantsLocationId;
    private boolean unknown_accessGrantsLocationId;
    public String accessGrantsLocationId() {
        if (!unknown_accessGrantsLocationId) return value_accessGrantsLocationId;
        throw new UndeferrableValueException("Value 'AccessGrant.accessGrantsLocationId' is not present");
    }

    @PolicyResourceProperty(name="accountId", flag="unknown_accountId")
    private String value_accountId;
    private boolean unknown_accountId;
    public String accountId() {
        if (!unknown_accountId) return value_accountId;
        throw new UndeferrableValueException("Value 'AccessGrant.accountId' is not present");
    }

    /**
     * The access grant&#39;s scope.
     * 
     */
    @PolicyResourceProperty(name="grantScope", flag="unknown_grantScope")
    private String value_grantScope;
    private boolean unknown_grantScope;
    public String grantScope() {
        if (!unknown_grantScope) return value_grantScope;
        throw new UndeferrableValueException("Value 'AccessGrant.grantScope' is not present");
    }

    /**
     * See Grantee below for more details.
     * 
     */
    @PolicyResourceProperty(name="grantee", flag="unknown_grantee")
    private @Nullable AccessGrantGrantee value_grantee;
    private boolean unknown_grantee;
    public @Nullable AccessGrantGrantee grantee() {
        if (!unknown_grantee) return value_grantee;
        throw new UndeferrableValueException("Value 'AccessGrant.grantee' is not present");
    }

    /**
     * The access grant&#39;s level of access. Valid values: `READ`, `WRITE`, `READWRITE`.
     * 
     */
    @PolicyResourceProperty(name="permission", flag="unknown_permission")
    private String value_permission;
    private boolean unknown_permission;
    public String permission() {
        if (!unknown_permission) return value_permission;
        throw new UndeferrableValueException("Value 'AccessGrant.permission' is not present");
    }

    /**
     * If you are creating an access grant that grants access to only one object, set this to `Object`. Valid values: `Object`.
     * 
     */
    @PolicyResourceProperty(name="s3PrefixType", flag="unknown_s3PrefixType")
    private @Nullable String value_s3PrefixType;
    private boolean unknown_s3PrefixType;
    public @Nullable String s3PrefixType() {
        if (!unknown_s3PrefixType) return value_s3PrefixType;
        throw new UndeferrableValueException("Value 'AccessGrant.s3PrefixType' is not present");
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'AccessGrant.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'AccessGrant.tagsAll' is not present");
    }

}
