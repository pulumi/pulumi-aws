// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.glue;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:glue/workflow:Workflow")
public final class WorkflowArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * A map of default run properties for this workflow. These properties are passed to all jobs associated to the workflow.
     * 
     */
    private UndeferrableValue<Map<String,String>> defaultRunProperties;

    public Map<String,String> defaultRunProperties() {
        if (defaultRunProperties == null) return null;
        return defaultRunProperties.getValue("WorkflowArgs.defaultRunProperties");
    }

    /**
     * Description of the workflow.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("WorkflowArgs.description");
    }

    /**
     * Prevents exceeding the maximum number of concurrent runs of any of the component jobs. If you leave this parameter blank, there is no limit to the number of concurrent workflow runs.
     * 
     */
    private UndeferrableValue<Integer> maxConcurrentRuns;

    public Integer maxConcurrentRuns() {
        if (maxConcurrentRuns == null) return null;
        return maxConcurrentRuns.getValue("WorkflowArgs.maxConcurrentRuns");
    }

    /**
     * The name you assign to this workflow.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("WorkflowArgs.name");
    }

    /**
     * Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("WorkflowArgs.tags");
    }

}
