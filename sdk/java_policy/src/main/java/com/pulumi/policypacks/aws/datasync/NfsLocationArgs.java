// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.datasync;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.datasync.inputs.NfsLocationMountOptionsArgs;
import com.pulumi.policypacks.aws.datasync.inputs.NfsLocationOnPremConfigArgs;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:datasync/nfsLocation:NfsLocation")
public final class NfsLocationArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Configuration block containing mount options used by DataSync to access the NFS Server.
     * 
     */
    @PolicyResourceProperty(name="mountOptions", flag="unknown_mountOptions")
    private NfsLocationMountOptionsArgs value_mountOptions;
    private boolean unknown_mountOptions;
    public NfsLocationMountOptionsArgs mountOptions() {
        if (!unknown_mountOptions) return value_mountOptions;
        throw new UndeferrableValueException("Value 'NfsLocationArgs.mountOptions' is not present");
    }

    /**
     * Configuration block containing information for connecting to the NFS File System.
     * 
     */
    @PolicyResourceProperty(name="onPremConfig", flag="unknown_onPremConfig")
    private NfsLocationOnPremConfigArgs value_onPremConfig;
    private boolean unknown_onPremConfig;
    public NfsLocationOnPremConfigArgs onPremConfig() {
        if (!unknown_onPremConfig) return value_onPremConfig;
        throw new UndeferrableValueException("Value 'NfsLocationArgs.onPremConfig' is not present");
    }

    /**
     * Specifies the IP address or DNS name of the NFS server. The DataSync Agent(s) use this to mount the NFS server.
     * 
     */
    @PolicyResourceProperty(name="serverHostname", flag="unknown_serverHostname")
    private String value_serverHostname;
    private boolean unknown_serverHostname;
    public String serverHostname() {
        if (!unknown_serverHostname) return value_serverHostname;
        throw new UndeferrableValueException("Value 'NfsLocationArgs.serverHostname' is not present");
    }

    /**
     * Subdirectory to perform actions as source or destination. Should be exported by the NFS server.
     * 
     */
    @PolicyResourceProperty(name="subdirectory", flag="unknown_subdirectory")
    private String value_subdirectory;
    private boolean unknown_subdirectory;
    public String subdirectory() {
        if (!unknown_subdirectory) return value_subdirectory;
        throw new UndeferrableValueException("Value 'NfsLocationArgs.subdirectory' is not present");
    }

    /**
     * Key-value pairs of resource tags to assign to the DataSync Location. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'NfsLocationArgs.tags' is not present");
    }

}
