// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.directconnect;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:directconnect/gatewayAssociation:GatewayAssociation")
public final class GatewayAssociationArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * VPC prefixes (CIDRs) to advertise to the Direct Connect gateway. Defaults to the CIDR block of the VPC associated with the Virtual Gateway. To enable drift detection, must be configured.
     * 
     */
    @PolicyResourceProperty(name="allowedPrefixes", flag="unknown_allowedPrefixes")
    private List<String> value_allowedPrefixes;
    private boolean unknown_allowedPrefixes;
    public List<String> allowedPrefixes() {
        if (!unknown_allowedPrefixes) return value_allowedPrefixes;
        throw new UndeferrableValueException("Value 'GatewayAssociationArgs.allowedPrefixes' is not present");
    }

    /**
     * The ID of the VGW or transit gateway with which to associate the Direct Connect gateway.
     * Used for single account Direct Connect gateway associations.
     * 
     */
    @PolicyResourceProperty(name="associatedGatewayId", flag="unknown_associatedGatewayId")
    private String value_associatedGatewayId;
    private boolean unknown_associatedGatewayId;
    public String associatedGatewayId() {
        if (!unknown_associatedGatewayId) return value_associatedGatewayId;
        throw new UndeferrableValueException("Value 'GatewayAssociationArgs.associatedGatewayId' is not present");
    }

    /**
     * The ID of the AWS account that owns the VGW or transit gateway with which to associate the Direct Connect gateway.
     * Used for cross-account Direct Connect gateway associations.
     * 
     */
    @PolicyResourceProperty(name="associatedGatewayOwnerAccountId", flag="unknown_associatedGatewayOwnerAccountId")
    private String value_associatedGatewayOwnerAccountId;
    private boolean unknown_associatedGatewayOwnerAccountId;
    public String associatedGatewayOwnerAccountId() {
        if (!unknown_associatedGatewayOwnerAccountId) return value_associatedGatewayOwnerAccountId;
        throw new UndeferrableValueException("Value 'GatewayAssociationArgs.associatedGatewayOwnerAccountId' is not present");
    }

    /**
     * The ID of the Direct Connect gateway.
     * 
     */
    @PolicyResourceProperty(name="dxGatewayId", flag="unknown_dxGatewayId")
    private String value_dxGatewayId;
    private boolean unknown_dxGatewayId;
    public String dxGatewayId() {
        if (!unknown_dxGatewayId) return value_dxGatewayId;
        throw new UndeferrableValueException("Value 'GatewayAssociationArgs.dxGatewayId' is not present");
    }

    /**
     * The ID of the Direct Connect gateway association proposal.
     * Used for cross-account Direct Connect gateway associations.
     * 
     */
    @PolicyResourceProperty(name="proposalId", flag="unknown_proposalId")
    private String value_proposalId;
    private boolean unknown_proposalId;
    public String proposalId() {
        if (!unknown_proposalId) return value_proposalId;
        throw new UndeferrableValueException("Value 'GatewayAssociationArgs.proposalId' is not present");
    }

    /**
     * @deprecated
     * vpn_gateway_id is deprecated. Use associated_gateway_id instead.
     * 
     */
    @Deprecated /* vpn_gateway_id is deprecated. Use associated_gateway_id instead. */
    @PolicyResourceProperty(name="vpnGatewayId", flag="unknown_vpnGatewayId")
    private String value_vpnGatewayId;
    private boolean unknown_vpnGatewayId;
    public String vpnGatewayId() {
        if (!unknown_vpnGatewayId) return value_vpnGatewayId;
        throw new UndeferrableValueException("Value 'GatewayAssociationArgs.vpnGatewayId' is not present");
    }

}
