// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.elasticache;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.elasticache.GlobalReplicationGroupGlobalNodeGroup;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;


@PolicyResourceType(type="aws:elasticache/globalReplicationGroup:GlobalReplicationGroup")
public final class GlobalReplicationGroup extends com.pulumi.resources.PolicyResource {

    /**
     * The ARN of the ElastiCache Global Replication Group.
     * 
     */
    public String arn;



    /**
     * A flag that indicate whether the encryption at rest is enabled.
     * 
     */
    public Boolean atRestEncryptionEnabled;



    /**
     * A flag that indicate whether AuthToken (password) is enabled.
     * 
     */
    public Boolean authTokenEnabled;



    /**
     * Specifies whether read-only replicas will be automatically promoted to read/write primary if the existing primary fails.
     * When creating, by default the Global Replication Group inherits the automatic failover setting of the primary replication group.
     * 
     */
    public Boolean automaticFailoverEnabled;



    /**
     * The instance class used.
     * See AWS documentation for information on [supported node types](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html)
     * and [guidance on selecting node types](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/nodes-select-size.html).
     * When creating, by default the Global Replication Group inherits the node type of the primary replication group.
     * 
     */
    public String cacheNodeType;



    /**
     * Indicates whether the Global Datastore is cluster enabled.
     * 
     */
    public Boolean clusterEnabled;



    /**
     * The name of the cache engine to be used for the clusters in this global replication group.
     * 
     */
    public String engine;



    /**
     * Redis version to use for the Global Replication Group.
     * When creating, by default the Global Replication Group inherits the version of the primary replication group.
     * If a version is specified, the Global Replication Group and all member replication groups will be upgraded to this version.
     * Cannot be downgraded without replacing the Global Replication Group and all member replication groups.
     * When the version is 7 or higher, the major and minor version should be set, e.g., `7.2`.
     * When the version is 6, the major and minor version can be set, e.g., `6.2`,
     * or the minor version can be unspecified which will use the latest version at creation time, e.g., `6.x`.
     * The actual engine version used is returned in the attribute `engine_version_actual`, see Attribute Reference below.
     * 
     */
    public String engineVersion;



    /**
     * The full version number of the cache engine running on the members of this global replication group.
     * 
     */
    public String engineVersionActual;



    /**
     * Set of node groups (shards) on the global replication group.
     * Has the values:
     * 
     */
    public List<GlobalReplicationGroupGlobalNodeGroup> globalNodeGroups;



    /**
     * A user-created description for the global replication group.
     * 
     */
    public String globalReplicationGroupDescription;



    /**
     * The full ID of the global replication group.
     * 
     */
    public String globalReplicationGroupId;



    /**
     * The suffix name of a Global Datastore. If `global_replication_group_id_suffix` is changed, creates a new resource.
     * 
     */
    public String globalReplicationGroupIdSuffix;



    /**
     * The number of node groups (shards) on the global replication group.
     * 
     */
    public Integer numNodeGroups;



    /**
     * An ElastiCache Parameter Group to use for the Global Replication Group.
     * Required when upgrading a major engine version, but will be ignored if left configured after the upgrade is complete.
     * Specifying without a major version upgrade will fail.
     * Note that ElastiCache creates a copy of this parameter group for each member replication group.
     * 
     */
    public String parameterGroupName;



    /**
     * The ID of the primary cluster that accepts writes and will replicate updates to the secondary cluster. If `primary_replication_group_id` is changed, creates a new resource.
     * 
     */
    public String primaryReplicationGroupId;



    /**
     * A flag that indicates whether the encryption in transit is enabled.
     * 
     */
    public Boolean transitEncryptionEnabled;



}
