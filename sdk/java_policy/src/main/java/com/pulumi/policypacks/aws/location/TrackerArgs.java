// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.location;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:location/tracker:Tracker")
public final class TrackerArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The optional description for the tracker resource.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private String value_description;
    private boolean unknown_description;
    public String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'TrackerArgs.description' is not present");
    }

    /**
     * A key identifier for an AWS KMS customer managed key assigned to the Amazon Location resource.
     * 
     */
    @PolicyResourceProperty(name="kmsKeyId", flag="unknown_kmsKeyId")
    private String value_kmsKeyId;
    private boolean unknown_kmsKeyId;
    public String kmsKeyId() {
        if (!unknown_kmsKeyId) return value_kmsKeyId;
        throw new UndeferrableValueException("Value 'TrackerArgs.kmsKeyId' is not present");
    }

    /**
     * The position filtering method of the tracker resource. Valid values: `TimeBased`, `DistanceBased`, `AccuracyBased`. Default: `TimeBased`.
     * 
     */
    @PolicyResourceProperty(name="positionFiltering", flag="unknown_positionFiltering")
    private String value_positionFiltering;
    private boolean unknown_positionFiltering;
    public String positionFiltering() {
        if (!unknown_positionFiltering) return value_positionFiltering;
        throw new UndeferrableValueException("Value 'TrackerArgs.positionFiltering' is not present");
    }

    /**
     * Key-value tags for the tracker. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'TrackerArgs.tags' is not present");
    }

    /**
     * The name of the tracker resource.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="trackerName", flag="unknown_trackerName")
    private String value_trackerName;
    private boolean unknown_trackerName;
    public String trackerName() {
        if (!unknown_trackerName) return value_trackerName;
        throw new UndeferrableValueException("Value 'TrackerArgs.trackerName' is not present");
    }

}
