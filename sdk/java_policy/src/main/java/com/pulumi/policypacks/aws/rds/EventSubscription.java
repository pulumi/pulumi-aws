// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.rds;

import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;


@PolicyResourceType(type="aws:rds/eventSubscription:EventSubscription")
public final class EventSubscription extends com.pulumi.resources.PolicyResource {

    /**
     * The Amazon Resource Name of the RDS event notification subscription
     * 
     */
    public String arn;



    /**
     * The AWS customer account associated with the RDS event notification subscription
     * 
     */
    public String customerAwsId;



    /**
     * A boolean flag to enable/disable the subscription. Defaults to true.
     * 
     */
    public Boolean enabled;



    /**
     * A list of event categories for a SourceType that you want to subscribe to. See http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html or run `aws rds describe-event-categories`.
     * 
     */
    public List<String> eventCategories;



    /**
     * The name of the DB event subscription. By default generated by this provider.
     * 
     */
    public String name;



    /**
     * The name of the DB event subscription. Conflicts with `name`.
     * 
     */
    public String namePrefix;



    /**
     * The SNS topic to send events to.
     * 
     */
    public String snsTopic;



    /**
     * A list of identifiers of the event sources for which events will be returned. If not specified, then all sources are included in the response. If specified, a source_type must also be specified.
     * 
     */
    public List<String> sourceIds;



    /**
     * The type of source that will be generating the events. Valid options are `db-instance`, `db-security-group`, `db-parameter-group`, `db-snapshot`, `db-cluster`, `db-cluster-snapshot`, or `db-proxy`. If not set, all sources will be subscribed to.
     * 
     */
    public String sourceType;



    /**
     * A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



}
