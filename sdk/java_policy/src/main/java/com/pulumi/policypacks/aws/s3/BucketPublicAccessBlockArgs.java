// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.s3;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:s3/bucketPublicAccessBlock:BucketPublicAccessBlock")
public final class BucketPublicAccessBlockArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Whether Amazon S3 should block public ACLs for this bucket. Defaults to `false`. Enabling this setting does not affect existing policies or ACLs. When set to `true` causes the following behavior:
     * * PUT Bucket acl and PUT Object acl calls will fail if the specified ACL allows public access.
     * * PUT Object calls will fail if the request includes an object ACL.
     * 
     */
    @PolicyResourceProperty(name="blockPublicAcls", flag="unknown_blockPublicAcls")
    private Boolean value_blockPublicAcls;
    private boolean unknown_blockPublicAcls;
    public Boolean blockPublicAcls() {
        if (!unknown_blockPublicAcls) return value_blockPublicAcls;
        throw new UndeferrableValueException("Value 'BucketPublicAccessBlockArgs.blockPublicAcls' is not present");
    }

    /**
     * Whether Amazon S3 should block public bucket policies for this bucket. Defaults to `false`. Enabling this setting does not affect the existing bucket policy. When set to `true` causes Amazon S3 to:
     * * Reject calls to PUT Bucket policy if the specified bucket policy allows public access.
     * 
     */
    @PolicyResourceProperty(name="blockPublicPolicy", flag="unknown_blockPublicPolicy")
    private Boolean value_blockPublicPolicy;
    private boolean unknown_blockPublicPolicy;
    public Boolean blockPublicPolicy() {
        if (!unknown_blockPublicPolicy) return value_blockPublicPolicy;
        throw new UndeferrableValueException("Value 'BucketPublicAccessBlockArgs.blockPublicPolicy' is not present");
    }

    /**
     * S3 Bucket to which this Public Access Block configuration should be applied.
     * 
     */
    @PolicyResourceProperty(name="bucket", flag="unknown_bucket")
    private String value_bucket;
    private boolean unknown_bucket;
    public String bucket() {
        if (!unknown_bucket) return value_bucket;
        throw new UndeferrableValueException("Value 'BucketPublicAccessBlockArgs.bucket' is not present");
    }

    /**
     * Whether Amazon S3 should ignore public ACLs for this bucket. Defaults to `false`. Enabling this setting does not affect the persistence of any existing ACLs and doesn&#39;t prevent new public ACLs from being set. When set to `true` causes Amazon S3 to:
     * * Ignore public ACLs on this bucket and any objects that it contains.
     * 
     */
    @PolicyResourceProperty(name="ignorePublicAcls", flag="unknown_ignorePublicAcls")
    private Boolean value_ignorePublicAcls;
    private boolean unknown_ignorePublicAcls;
    public Boolean ignorePublicAcls() {
        if (!unknown_ignorePublicAcls) return value_ignorePublicAcls;
        throw new UndeferrableValueException("Value 'BucketPublicAccessBlockArgs.ignorePublicAcls' is not present");
    }

    /**
     * Whether Amazon S3 should restrict public bucket policies for this bucket. Defaults to `false`. Enabling this setting does not affect the previously stored bucket policy, except that public and cross-account access within the public bucket policy, including non-public delegation to specific accounts, is blocked. When set to `true`:
     * * Only the bucket owner and AWS Services can access this buckets if it has a public policy.
     * 
     */
    @PolicyResourceProperty(name="restrictPublicBuckets", flag="unknown_restrictPublicBuckets")
    private Boolean value_restrictPublicBuckets;
    private boolean unknown_restrictPublicBuckets;
    public Boolean restrictPublicBuckets() {
        if (!unknown_restrictPublicBuckets) return value_restrictPublicBuckets;
        throw new UndeferrableValueException("Value 'BucketPublicAccessBlockArgs.restrictPublicBuckets' is not present");
    }

}
