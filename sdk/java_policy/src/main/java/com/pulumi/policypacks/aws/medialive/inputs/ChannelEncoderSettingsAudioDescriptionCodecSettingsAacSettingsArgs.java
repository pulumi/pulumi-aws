// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.medialive.inputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.Double;
import java.lang.String;
import javax.annotation.Nullable;


public final class ChannelEncoderSettingsAudioDescriptionCodecSettingsAacSettingsArgs {

    /**
     * Average bitrate in bits/second.
     * 
     */
    private UndeferrableValue<Double> bitrate;

    public Double bitrate() {
        if (bitrate == null) return null;
        return bitrate.getValue("ChannelEncoderSettingsAudioDescriptionCodecSettingsAacSettingsArgs.bitrate");
    }

    /**
     * Mono, Stereo, or 5.1 channel layout.
     * 
     */
    private UndeferrableValue<String> codingMode;

    public String codingMode() {
        if (codingMode == null) return null;
        return codingMode.getValue("ChannelEncoderSettingsAudioDescriptionCodecSettingsAacSettingsArgs.codingMode");
    }

    /**
     * Set to &#34;broadcasterMixedAd&#34; when input contains pre-mixed main audio + AD (narration) as a stereo pair.
     * 
     */
    private UndeferrableValue<String> inputType;

    public String inputType() {
        if (inputType == null) return null;
        return inputType.getValue("ChannelEncoderSettingsAudioDescriptionCodecSettingsAacSettingsArgs.inputType");
    }

    /**
     * AAC profile.
     * 
     */
    private UndeferrableValue<String> profile;

    public String profile() {
        if (profile == null) return null;
        return profile.getValue("ChannelEncoderSettingsAudioDescriptionCodecSettingsAacSettingsArgs.profile");
    }

    /**
     * The rate control mode.
     * 
     */
    private UndeferrableValue<String> rateControlMode;

    public String rateControlMode() {
        if (rateControlMode == null) return null;
        return rateControlMode.getValue("ChannelEncoderSettingsAudioDescriptionCodecSettingsAacSettingsArgs.rateControlMode");
    }

    /**
     * Sets LATM/LOAS AAC output for raw containers.
     * 
     */
    private UndeferrableValue<String> rawFormat;

    public String rawFormat() {
        if (rawFormat == null) return null;
        return rawFormat.getValue("ChannelEncoderSettingsAudioDescriptionCodecSettingsAacSettingsArgs.rawFormat");
    }

    /**
     * Sample rate in Hz.
     * 
     */
    private UndeferrableValue<Double> sampleRate;

    public Double sampleRate() {
        if (sampleRate == null) return null;
        return sampleRate.getValue("ChannelEncoderSettingsAudioDescriptionCodecSettingsAacSettingsArgs.sampleRate");
    }

    /**
     * Use MPEG-2 AAC audio instead of MPEG-4 AAC audio for raw or MPEG-2 Transport Stream containers.
     * 
     */
    private UndeferrableValue<String> spec;

    public String spec() {
        if (spec == null) return null;
        return spec.getValue("ChannelEncoderSettingsAudioDescriptionCodecSettingsAacSettingsArgs.spec");
    }

    /**
     * VBR Quality Level - Only used if rateControlMode is VBR.
     * 
     */
    private UndeferrableValue<String> vbrQuality;

    public String vbrQuality() {
        if (vbrQuality == null) return null;
        return vbrQuality.getValue("ChannelEncoderSettingsAudioDescriptionCodecSettingsAacSettingsArgs.vbrQuality");
    }

}
