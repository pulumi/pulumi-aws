// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.codeartifact;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:codeartifact/domain:Domain")
public final class Domain extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The ARN of the Domain.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'Domain.arn' is not present");
    }

    /**
     * The total size of all assets in the domain.
     * 
     */
    @PolicyResourceProperty(name="assetSizeBytes", flag="unknown_assetSizeBytes")
    private String value_assetSizeBytes;
    private boolean unknown_assetSizeBytes;
    public String assetSizeBytes() {
        if (!unknown_assetSizeBytes) return value_assetSizeBytes;
        throw new UndeferrableValueException("Value 'Domain.assetSizeBytes' is not present");
    }

    /**
     * A timestamp that represents the date and time the domain was created in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).
     * 
     */
    @PolicyResourceProperty(name="createdTime", flag="unknown_createdTime")
    private String value_createdTime;
    private boolean unknown_createdTime;
    public String createdTime() {
        if (!unknown_createdTime) return value_createdTime;
        throw new UndeferrableValueException("Value 'Domain.createdTime' is not present");
    }

    /**
     * The name of the domain to create. All domain names in an AWS Region that are in the same AWS account must be unique. The domain name is used as the prefix in DNS hostnames. Do not use sensitive information in a domain name because it is publicly discoverable.
     * 
     */
    @PolicyResourceProperty(name="domain", flag="unknown_domain")
    private String value_domain;
    private boolean unknown_domain;
    public String domain() {
        if (!unknown_domain) return value_domain;
        throw new UndeferrableValueException("Value 'Domain.domain' is not present");
    }

    /**
     * The encryption key for the domain. This is used to encrypt content stored in a domain. The KMS Key Amazon Resource Name (ARN). The default aws/codeartifact AWS KMS master key is used if this element is absent.
     * 
     */
    @PolicyResourceProperty(name="encryptionKey", flag="unknown_encryptionKey")
    private String value_encryptionKey;
    private boolean unknown_encryptionKey;
    public String encryptionKey() {
        if (!unknown_encryptionKey) return value_encryptionKey;
        throw new UndeferrableValueException("Value 'Domain.encryptionKey' is not present");
    }

    /**
     * The AWS account ID that owns the domain.
     * 
     */
    @PolicyResourceProperty(name="owner", flag="unknown_owner")
    private String value_owner;
    private boolean unknown_owner;
    public String owner() {
        if (!unknown_owner) return value_owner;
        throw new UndeferrableValueException("Value 'Domain.owner' is not present");
    }

    /**
     * The number of repositories in the domain.
     * 
     */
    @PolicyResourceProperty(name="repositoryCount", flag="unknown_repositoryCount")
    private Integer value_repositoryCount;
    private boolean unknown_repositoryCount;
    public Integer repositoryCount() {
        if (!unknown_repositoryCount) return value_repositoryCount;
        throw new UndeferrableValueException("Value 'Domain.repositoryCount' is not present");
    }

    /**
     * The ARN of the Amazon S3 bucket that is used to store package assets in the domain.
     * 
     */
    @PolicyResourceProperty(name="s3BucketArn", flag="unknown_s3BucketArn")
    private String value_s3BucketArn;
    private boolean unknown_s3BucketArn;
    public String s3BucketArn() {
        if (!unknown_s3BucketArn) return value_s3BucketArn;
        throw new UndeferrableValueException("Value 'Domain.s3BucketArn' is not present");
    }

    /**
     * Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'Domain.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'Domain.tagsAll' is not present");
    }

}
