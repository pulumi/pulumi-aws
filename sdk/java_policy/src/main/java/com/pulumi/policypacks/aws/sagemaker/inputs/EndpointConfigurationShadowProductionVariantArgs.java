// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.sagemaker.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.sagemaker.inputs.EndpointConfigurationShadowProductionVariantCoreDumpConfigArgs;
import com.pulumi.policypacks.aws.sagemaker.inputs.EndpointConfigurationShadowProductionVariantManagedInstanceScalingArgs;
import com.pulumi.policypacks.aws.sagemaker.inputs.EndpointConfigurationShadowProductionVariantRoutingConfigArgs;
import com.pulumi.policypacks.aws.sagemaker.inputs.EndpointConfigurationShadowProductionVariantServerlessConfigArgs;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class EndpointConfigurationShadowProductionVariantArgs {

    /**
     * The size of the Elastic Inference (EI) instance to use for the production variant.
     * 
     */
    @PolicyResourceProperty(name="acceleratorType", flag="unknown_acceleratorType")
    private String value_acceleratorType;
    private boolean unknown_acceleratorType;
    public String acceleratorType() {
        if (!unknown_acceleratorType) return value_acceleratorType;
        throw new UndeferrableValueException("Value 'EndpointConfigurationShadowProductionVariantArgs.acceleratorType' is not present");
    }

    /**
     * The timeout value, in seconds, for your inference container to pass health check by SageMaker AI Hosting. For more information about health check, see [How Your Container Should Respond to Health Check (Ping) Requests](https://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms-inference-code.html#your-algorithms-inference-algo-ping-requests). Valid values between `60` and `3600`.
     * 
     */
    @PolicyResourceProperty(name="containerStartupHealthCheckTimeoutInSeconds", flag="unknown_containerStartupHealthCheckTimeoutInSeconds")
    private Integer value_containerStartupHealthCheckTimeoutInSeconds;
    private boolean unknown_containerStartupHealthCheckTimeoutInSeconds;
    public Integer containerStartupHealthCheckTimeoutInSeconds() {
        if (!unknown_containerStartupHealthCheckTimeoutInSeconds) return value_containerStartupHealthCheckTimeoutInSeconds;
        throw new UndeferrableValueException("Value 'EndpointConfigurationShadowProductionVariantArgs.containerStartupHealthCheckTimeoutInSeconds' is not present");
    }

    /**
     * Specifies configuration for a core dump from the model container when the process crashes. Fields are documented below.
     * 
     */
    @PolicyResourceProperty(name="coreDumpConfig", flag="unknown_coreDumpConfig")
    private EndpointConfigurationShadowProductionVariantCoreDumpConfigArgs value_coreDumpConfig;
    private boolean unknown_coreDumpConfig;
    public EndpointConfigurationShadowProductionVariantCoreDumpConfigArgs coreDumpConfig() {
        if (!unknown_coreDumpConfig) return value_coreDumpConfig;
        throw new UndeferrableValueException("Value 'EndpointConfigurationShadowProductionVariantArgs.coreDumpConfig' is not present");
    }

    /**
     * You can use this parameter to turn on native Amazon Web Services Systems Manager (SSM) access for a production variant behind an endpoint. By default, SSM access is disabled for all production variants behind an endpoints.
     * 
     */
    @PolicyResourceProperty(name="enableSsmAccess", flag="unknown_enableSsmAccess")
    private Boolean value_enableSsmAccess;
    private boolean unknown_enableSsmAccess;
    public Boolean enableSsmAccess() {
        if (!unknown_enableSsmAccess) return value_enableSsmAccess;
        throw new UndeferrableValueException("Value 'EndpointConfigurationShadowProductionVariantArgs.enableSsmAccess' is not present");
    }

    /**
     * Specifies an option from a collection of preconfigured Amazon Machine Image (AMI) images. Each image is configured by Amazon Web Services with a set of software and driver versions. Amazon Web Services optimizes these configurations for different machine learning workloads.
     * 
     */
    @PolicyResourceProperty(name="inferenceAmiVersion", flag="unknown_inferenceAmiVersion")
    private String value_inferenceAmiVersion;
    private boolean unknown_inferenceAmiVersion;
    public String inferenceAmiVersion() {
        if (!unknown_inferenceAmiVersion) return value_inferenceAmiVersion;
        throw new UndeferrableValueException("Value 'EndpointConfigurationShadowProductionVariantArgs.inferenceAmiVersion' is not present");
    }

    /**
     * Initial number of instances used for auto-scaling.
     * 
     */
    @PolicyResourceProperty(name="initialInstanceCount", flag="unknown_initialInstanceCount")
    private Integer value_initialInstanceCount;
    private boolean unknown_initialInstanceCount;
    public Integer initialInstanceCount() {
        if (!unknown_initialInstanceCount) return value_initialInstanceCount;
        throw new UndeferrableValueException("Value 'EndpointConfigurationShadowProductionVariantArgs.initialInstanceCount' is not present");
    }

    /**
     * Determines initial traffic distribution among all of the models that you specify in the endpoint configuration. If unspecified, it defaults to `1.0`.
     * 
     */
    @PolicyResourceProperty(name="initialVariantWeight", flag="unknown_initialVariantWeight")
    private Double value_initialVariantWeight;
    private boolean unknown_initialVariantWeight;
    public Double initialVariantWeight() {
        if (!unknown_initialVariantWeight) return value_initialVariantWeight;
        throw new UndeferrableValueException("Value 'EndpointConfigurationShadowProductionVariantArgs.initialVariantWeight' is not present");
    }

    /**
     * The type of instance to start.
     * 
     */
    @PolicyResourceProperty(name="instanceType", flag="unknown_instanceType")
    private String value_instanceType;
    private boolean unknown_instanceType;
    public String instanceType() {
        if (!unknown_instanceType) return value_instanceType;
        throw new UndeferrableValueException("Value 'EndpointConfigurationShadowProductionVariantArgs.instanceType' is not present");
    }

    /**
     * Settings that control the range in the number of instances that the endpoint provisions as it scales up or down to accommodate traffic.
     * 
     */
    @PolicyResourceProperty(name="managedInstanceScaling", flag="unknown_managedInstanceScaling")
    private EndpointConfigurationShadowProductionVariantManagedInstanceScalingArgs value_managedInstanceScaling;
    private boolean unknown_managedInstanceScaling;
    public EndpointConfigurationShadowProductionVariantManagedInstanceScalingArgs managedInstanceScaling() {
        if (!unknown_managedInstanceScaling) return value_managedInstanceScaling;
        throw new UndeferrableValueException("Value 'EndpointConfigurationShadowProductionVariantArgs.managedInstanceScaling' is not present");
    }

    /**
     * The timeout value, in seconds, to download and extract the model that you want to host from Amazon S3 to the individual inference instance associated with this production variant. Valid values between `60` and `3600`.
     * 
     */
    @PolicyResourceProperty(name="modelDataDownloadTimeoutInSeconds", flag="unknown_modelDataDownloadTimeoutInSeconds")
    private Integer value_modelDataDownloadTimeoutInSeconds;
    private boolean unknown_modelDataDownloadTimeoutInSeconds;
    public Integer modelDataDownloadTimeoutInSeconds() {
        if (!unknown_modelDataDownloadTimeoutInSeconds) return value_modelDataDownloadTimeoutInSeconds;
        throw new UndeferrableValueException("Value 'EndpointConfigurationShadowProductionVariantArgs.modelDataDownloadTimeoutInSeconds' is not present");
    }

    /**
     * The name of the model to use.
     * 
     */
    @PolicyResourceProperty(name="modelName", flag="unknown_modelName")
    private String value_modelName;
    private boolean unknown_modelName;
    public String modelName() {
        if (!unknown_modelName) return value_modelName;
        throw new UndeferrableValueException("Value 'EndpointConfigurationShadowProductionVariantArgs.modelName' is not present");
    }

    /**
     * Sets how the endpoint routes incoming traffic. See routing_config below.
     * 
     */
    @PolicyResourceProperty(name="routingConfigs", flag="unknown_routingConfigs")
    private List<EndpointConfigurationShadowProductionVariantRoutingConfigArgs> value_routingConfigs;
    private boolean unknown_routingConfigs;
    public List<EndpointConfigurationShadowProductionVariantRoutingConfigArgs> routingConfigs() {
        if (!unknown_routingConfigs) return value_routingConfigs;
        throw new UndeferrableValueException("Value 'EndpointConfigurationShadowProductionVariantArgs.routingConfigs' is not present");
    }

    /**
     * Specifies configuration for how an endpoint performs asynchronous inference.
     * 
     */
    @PolicyResourceProperty(name="serverlessConfig", flag="unknown_serverlessConfig")
    private EndpointConfigurationShadowProductionVariantServerlessConfigArgs value_serverlessConfig;
    private boolean unknown_serverlessConfig;
    public EndpointConfigurationShadowProductionVariantServerlessConfigArgs serverlessConfig() {
        if (!unknown_serverlessConfig) return value_serverlessConfig;
        throw new UndeferrableValueException("Value 'EndpointConfigurationShadowProductionVariantArgs.serverlessConfig' is not present");
    }

    /**
     * The name of the variant. If omitted, this provider will assign a random, unique name.
     * 
     */
    @PolicyResourceProperty(name="variantName", flag="unknown_variantName")
    private String value_variantName;
    private boolean unknown_variantName;
    public String variantName() {
        if (!unknown_variantName) return value_variantName;
        throw new UndeferrableValueException("Value 'EndpointConfigurationShadowProductionVariantArgs.variantName' is not present");
    }

    /**
     * The size, in GB, of the ML storage volume attached to individual inference instance associated with the production variant. Valid values between `1` and `512`.
     * 
     */
    @PolicyResourceProperty(name="volumeSizeInGb", flag="unknown_volumeSizeInGb")
    private Integer value_volumeSizeInGb;
    private boolean unknown_volumeSizeInGb;
    public Integer volumeSizeInGb() {
        if (!unknown_volumeSizeInGb) return value_volumeSizeInGb;
        throw new UndeferrableValueException("Value 'EndpointConfigurationShadowProductionVariantArgs.volumeSizeInGb' is not present");
    }

}
