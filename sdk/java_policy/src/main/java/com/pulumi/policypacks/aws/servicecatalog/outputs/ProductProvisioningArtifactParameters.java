// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.servicecatalog.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;


public final class ProductProvisioningArtifactParameters {

    /**
     * Description of the provisioning artifact (i.e., version), including how it differs from the previous provisioning artifact.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private @Nullable String value_description;
    private boolean unknown_description;
    public @Nullable String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'ProductProvisioningArtifactParameters.description' is not present");
    }

    /**
     * Whether AWS Service Catalog stops validating the specified provisioning artifact template even if it is invalid.
     * 
     */
    @PolicyResourceProperty(name="disableTemplateValidation", flag="unknown_disableTemplateValidation")
    private @Nullable Boolean value_disableTemplateValidation;
    private boolean unknown_disableTemplateValidation;
    public @Nullable Boolean disableTemplateValidation() {
        if (!unknown_disableTemplateValidation) return value_disableTemplateValidation;
        throw new UndeferrableValueException("Value 'ProductProvisioningArtifactParameters.disableTemplateValidation' is not present");
    }

    /**
     * Name of the provisioning artifact (for example, `v1`, `v2beta`). No spaces are allowed.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private @Nullable String value_name;
    private boolean unknown_name;
    public @Nullable String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'ProductProvisioningArtifactParameters.name' is not present");
    }

    /**
     * Template source as the physical ID of the resource that contains the template. Currently only supports CloudFormation stack ARN. Specify the physical ID as `arn:[partition]:cloudformation:[region]:[account ID]:stack/[stack name]/[resource ID]`.
     * 
     */
    @PolicyResourceProperty(name="templatePhysicalId", flag="unknown_templatePhysicalId")
    private @Nullable String value_templatePhysicalId;
    private boolean unknown_templatePhysicalId;
    public @Nullable String templatePhysicalId() {
        if (!unknown_templatePhysicalId) return value_templatePhysicalId;
        throw new UndeferrableValueException("Value 'ProductProvisioningArtifactParameters.templatePhysicalId' is not present");
    }

    /**
     * Template source as URL of the CloudFormation template in Amazon S3.
     * 
     */
    @PolicyResourceProperty(name="templateUrl", flag="unknown_templateUrl")
    private @Nullable String value_templateUrl;
    private boolean unknown_templateUrl;
    public @Nullable String templateUrl() {
        if (!unknown_templateUrl) return value_templateUrl;
        throw new UndeferrableValueException("Value 'ProductProvisioningArtifactParameters.templateUrl' is not present");
    }

    /**
     * Type of provisioning artifact. See [AWS Docs](https://docs.aws.amazon.com/servicecatalog/latest/dg/API_ProvisioningArtifactProperties.html) for valid list of values.
     * 
     */
    @PolicyResourceProperty(name="type", flag="unknown_type")
    private @Nullable String value_type;
    private boolean unknown_type;
    public @Nullable String type() {
        if (!unknown_type) return value_type;
        throw new UndeferrableValueException("Value 'ProductProvisioningArtifactParameters.type' is not present");
    }

}
