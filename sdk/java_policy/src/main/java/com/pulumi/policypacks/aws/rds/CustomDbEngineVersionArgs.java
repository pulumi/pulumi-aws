// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.rds;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:rds/customDbEngineVersion:CustomDbEngineVersion")
public final class CustomDbEngineVersionArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The name of the Amazon S3 bucket that contains the database installation files.
     * 
     */
    private UndeferrableValue<String> databaseInstallationFilesS3BucketName;

    public String databaseInstallationFilesS3BucketName() {
        if (databaseInstallationFilesS3BucketName == null) return null;
        return databaseInstallationFilesS3BucketName.getValue("CustomDbEngineVersionArgs.databaseInstallationFilesS3BucketName");
    }

    /**
     * The prefix for the Amazon S3 bucket that contains the database installation files.
     * 
     */
    private UndeferrableValue<String> databaseInstallationFilesS3Prefix;

    public String databaseInstallationFilesS3Prefix() {
        if (databaseInstallationFilesS3Prefix == null) return null;
        return databaseInstallationFilesS3Prefix.getValue("CustomDbEngineVersionArgs.databaseInstallationFilesS3Prefix");
    }

    /**
     * The description of the CEV.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("CustomDbEngineVersionArgs.description");
    }

    /**
     * The name of the database engine. Valid values are `custom-oracle*`, `custom-sqlserver*`.
     * 
     */
    private UndeferrableValue<String> engine;

    public String engine() {
        if (engine == null) return null;
        return engine.getValue("CustomDbEngineVersionArgs.engine");
    }

    /**
     * The version of the database engine.
     * 
     */
    private UndeferrableValue<String> engineVersion;

    public String engineVersion() {
        if (engineVersion == null) return null;
        return engineVersion.getValue("CustomDbEngineVersionArgs.engineVersion");
    }

    /**
     * The name of the manifest file within the local filesystem. Conflicts with `manifest`.
     * 
     */
    private UndeferrableValue<String> filename;

    public String filename() {
        if (filename == null) return null;
        return filename.getValue("CustomDbEngineVersionArgs.filename");
    }

    /**
     * The ARN of the AWS KMS key that is used to encrypt the database installation files. Required for RDS Custom for Oracle.
     * 
     */
    private UndeferrableValue<String> kmsKeyId;

    public String kmsKeyId() {
        if (kmsKeyId == null) return null;
        return kmsKeyId.getValue("CustomDbEngineVersionArgs.kmsKeyId");
    }

    /**
     * The manifest file, in JSON format, that contains the list of database installation files. Conflicts with `filename`.
     * 
     */
    private UndeferrableValue<String> manifest;

    public String manifest() {
        if (manifest == null) return null;
        return manifest.getValue("CustomDbEngineVersionArgs.manifest");
    }

    /**
     * Used to trigger updates. Must be set to a base64-encoded SHA256 hash of the manifest source specified with `filename`. The usual way to set this is filebase64sha256(&#34;manifest.json&#34;) where &#34;manifest.json&#34; is the local filename of the manifest source.
     * 
     */
    private UndeferrableValue<String> manifestHash;

    public String manifestHash() {
        if (manifestHash == null) return null;
        return manifestHash.getValue("CustomDbEngineVersionArgs.manifestHash");
    }

    /**
     * The ID of the AMI to create the CEV from. Required for RDS Custom for SQL Server. For RDS Custom for Oracle, you can specify an AMI ID that was used in a different Oracle CEV.
     * 
     */
    private UndeferrableValue<String> sourceImageId;

    public String sourceImageId() {
        if (sourceImageId == null) return null;
        return sourceImageId.getValue("CustomDbEngineVersionArgs.sourceImageId");
    }

    /**
     * The status of the CEV. Valid values are `available`, `inactive`, `inactive-except-restore`.
     * 
     */
    private UndeferrableValue<String> status;

    public String status() {
        if (status == null) return null;
        return status.getValue("CustomDbEngineVersionArgs.status");
    }

    /**
     * A mapping of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("CustomDbEngineVersionArgs.tags");
    }

}
