// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.cfg;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:cfg/organizationCustomRule:OrganizationCustomRule")
public final class OrganizationCustomRuleArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Description of the rule
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private String value_description;
    private boolean unknown_description;
    public String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'OrganizationCustomRuleArgs.description' is not present");
    }

    /**
     * List of AWS account identifiers to exclude from the rule
     * 
     */
    @PolicyResourceProperty(name="excludedAccounts", flag="unknown_excludedAccounts")
    private List<String> value_excludedAccounts;
    private boolean unknown_excludedAccounts;
    public List<String> excludedAccounts() {
        if (!unknown_excludedAccounts) return value_excludedAccounts;
        throw new UndeferrableValueException("Value 'OrganizationCustomRuleArgs.excludedAccounts' is not present");
    }

    /**
     * A string in JSON format that is passed to the AWS Config Rule Lambda Function
     * 
     */
    @PolicyResourceProperty(name="inputParameters", flag="unknown_inputParameters")
    private String value_inputParameters;
    private boolean unknown_inputParameters;
    public String inputParameters() {
        if (!unknown_inputParameters) return value_inputParameters;
        throw new UndeferrableValueException("Value 'OrganizationCustomRuleArgs.inputParameters' is not present");
    }

    /**
     * Amazon Resource Name (ARN) of the rule Lambda Function
     * 
     */
    @PolicyResourceProperty(name="lambdaFunctionArn", flag="unknown_lambdaFunctionArn")
    private String value_lambdaFunctionArn;
    private boolean unknown_lambdaFunctionArn;
    public String lambdaFunctionArn() {
        if (!unknown_lambdaFunctionArn) return value_lambdaFunctionArn;
        throw new UndeferrableValueException("Value 'OrganizationCustomRuleArgs.lambdaFunctionArn' is not present");
    }

    /**
     * The maximum frequency with which AWS Config runs evaluations for a rule, if the rule is triggered at a periodic frequency. Defaults to `TwentyFour_Hours` for periodic frequency triggered rules. Valid values: `One_Hour`, `Three_Hours`, `Six_Hours`, `Twelve_Hours`, or `TwentyFour_Hours`.
     * 
     */
    @PolicyResourceProperty(name="maximumExecutionFrequency", flag="unknown_maximumExecutionFrequency")
    private String value_maximumExecutionFrequency;
    private boolean unknown_maximumExecutionFrequency;
    public String maximumExecutionFrequency() {
        if (!unknown_maximumExecutionFrequency) return value_maximumExecutionFrequency;
        throw new UndeferrableValueException("Value 'OrganizationCustomRuleArgs.maximumExecutionFrequency' is not present");
    }

    /**
     * The name of the rule
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'OrganizationCustomRuleArgs.name' is not present");
    }

    /**
     * Identifier of the AWS resource to evaluate
     * 
     */
    @PolicyResourceProperty(name="resourceIdScope", flag="unknown_resourceIdScope")
    private String value_resourceIdScope;
    private boolean unknown_resourceIdScope;
    public String resourceIdScope() {
        if (!unknown_resourceIdScope) return value_resourceIdScope;
        throw new UndeferrableValueException("Value 'OrganizationCustomRuleArgs.resourceIdScope' is not present");
    }

    /**
     * List of types of AWS resources to evaluate
     * 
     */
    @PolicyResourceProperty(name="resourceTypesScopes", flag="unknown_resourceTypesScopes")
    private List<String> value_resourceTypesScopes;
    private boolean unknown_resourceTypesScopes;
    public List<String> resourceTypesScopes() {
        if (!unknown_resourceTypesScopes) return value_resourceTypesScopes;
        throw new UndeferrableValueException("Value 'OrganizationCustomRuleArgs.resourceTypesScopes' is not present");
    }

    /**
     * Tag key of AWS resources to evaluate
     * 
     */
    @PolicyResourceProperty(name="tagKeyScope", flag="unknown_tagKeyScope")
    private String value_tagKeyScope;
    private boolean unknown_tagKeyScope;
    public String tagKeyScope() {
        if (!unknown_tagKeyScope) return value_tagKeyScope;
        throw new UndeferrableValueException("Value 'OrganizationCustomRuleArgs.tagKeyScope' is not present");
    }

    /**
     * Tag value of AWS resources to evaluate
     * 
     */
    @PolicyResourceProperty(name="tagValueScope", flag="unknown_tagValueScope")
    private String value_tagValueScope;
    private boolean unknown_tagValueScope;
    public String tagValueScope() {
        if (!unknown_tagValueScope) return value_tagValueScope;
        throw new UndeferrableValueException("Value 'OrganizationCustomRuleArgs.tagValueScope' is not present");
    }

    /**
     * List of notification types that trigger AWS Config to run an evaluation for the rule. Valid values: `ConfigurationItemChangeNotification`, `OversizedConfigurationItemChangeNotification`, and `ScheduledNotification`
     * 
     */
    @PolicyResourceProperty(name="triggerTypes", flag="unknown_triggerTypes")
    private List<String> value_triggerTypes;
    private boolean unknown_triggerTypes;
    public List<String> triggerTypes() {
        if (!unknown_triggerTypes) return value_triggerTypes;
        throw new UndeferrableValueException("Value 'OrganizationCustomRuleArgs.triggerTypes' is not present");
    }

}
