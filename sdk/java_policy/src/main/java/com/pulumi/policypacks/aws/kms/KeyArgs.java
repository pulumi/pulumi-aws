// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.kms;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:kms/key:Key")
public final class KeyArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * A flag to indicate whether to bypass the key policy lockout safety check.
     * Setting this value to true increases the risk that the KMS key becomes unmanageable. Do not set this value to true indiscriminately.
     * For more information, refer to the scenario in the [Default Key Policy](https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default-allow-root-enable-iam) section in the _AWS Key Management Service Developer Guide_.
     * The default value is `false`.
     * 
     */
    private UndeferrableValue<Boolean> bypassPolicyLockoutSafetyCheck;

    public Boolean bypassPolicyLockoutSafetyCheck() {
        if (bypassPolicyLockoutSafetyCheck == null) return null;
        return bypassPolicyLockoutSafetyCheck.getValue("KeyArgs.bypassPolicyLockoutSafetyCheck");
    }

    /**
     * ID of the KMS [Custom Key Store](https://docs.aws.amazon.com/kms/latest/developerguide/create-cmk-keystore.html) where the key will be stored instead of KMS (eg CloudHSM).
     * 
     */
    private UndeferrableValue<String> customKeyStoreId;

    public String customKeyStoreId() {
        if (customKeyStoreId == null) return null;
        return customKeyStoreId.getValue("KeyArgs.customKeyStoreId");
    }

    /**
     * Specifies whether the key contains a symmetric key or an asymmetric key pair and the encryption algorithms or signing algorithms that the key supports.
     * Valid values: `SYMMETRIC_DEFAULT`,  `RSA_2048`, `RSA_3072`, `RSA_4096`, `HMAC_256`, `ECC_NIST_P256`, `ECC_NIST_P384`, `ECC_NIST_P521`, or `ECC_SECG_P256K1`. Defaults to `SYMMETRIC_DEFAULT`. For help with choosing a key spec, see the [AWS KMS Developer Guide](https://docs.aws.amazon.com/kms/latest/developerguide/symm-asymm-choose.html).
     * 
     */
    private UndeferrableValue<String> customerMasterKeySpec;

    public String customerMasterKeySpec() {
        if (customerMasterKeySpec == null) return null;
        return customerMasterKeySpec.getValue("KeyArgs.customerMasterKeySpec");
    }

    /**
     * The waiting period, specified in number of days. After the waiting period ends, AWS KMS deletes the KMS key.
     * If you specify a value, it must be between `7` and `30`, inclusive. If you do not specify a value, it defaults to `30`.
     * If the KMS key is a multi-Region primary key with replicas, the waiting period begins when the last of its replica keys is deleted. Otherwise, the waiting period begins immediately.
     * 
     */
    private UndeferrableValue<Integer> deletionWindowInDays;

    public Integer deletionWindowInDays() {
        if (deletionWindowInDays == null) return null;
        return deletionWindowInDays.getValue("KeyArgs.deletionWindowInDays");
    }

    /**
     * The description of the key as viewed in AWS console.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("KeyArgs.description");
    }

    /**
     * Specifies whether [key rotation](http://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html) is enabled. Defaults to `false`.
     * 
     */
    private UndeferrableValue<Boolean> enableKeyRotation;

    public Boolean enableKeyRotation() {
        if (enableKeyRotation == null) return null;
        return enableKeyRotation.getValue("KeyArgs.enableKeyRotation");
    }

    /**
     * Specifies whether the key is enabled. Defaults to `true`.
     * 
     */
    private UndeferrableValue<Boolean> isEnabled;

    public Boolean isEnabled() {
        if (isEnabled == null) return null;
        return isEnabled.getValue("KeyArgs.isEnabled");
    }

    /**
     * Specifies the intended use of the key. Valid values: `ENCRYPT_DECRYPT`, `SIGN_VERIFY`, or `GENERATE_VERIFY_MAC`.
     * Defaults to `ENCRYPT_DECRYPT`.
     * 
     */
    private UndeferrableValue<String> keyUsage;

    public String keyUsage() {
        if (keyUsage == null) return null;
        return keyUsage.getValue("KeyArgs.keyUsage");
    }

    /**
     * Indicates whether the KMS key is a multi-Region (`true`) or regional (`false`) key. Defaults to `false`.
     * 
     */
    private UndeferrableValue<Boolean> multiRegion;

    public Boolean multiRegion() {
        if (multiRegion == null) return null;
        return multiRegion.getValue("KeyArgs.multiRegion");
    }

    /**
     * A valid policy JSON document. Although this is a key policy, not an IAM policy, an `aws.iam.getPolicyDocument`, in the form that designates a principal, can be used.
     * 
     * &gt; **NOTE:** Note: All KMS keys must have a key policy. If a key policy is not specified, AWS gives the KMS key a [default key policy](https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default) that gives all principals in the owning account unlimited access to all KMS operations for the key. This default key policy effectively delegates all access control to IAM policies and KMS grants.
     * 
     */
    private UndeferrableValue<String> policy;

    public String policy() {
        if (policy == null) return null;
        return policy.getValue("KeyArgs.policy");
    }

    /**
     * Custom period of time between each rotation date. Must be a number between 90 and 2560 (inclusive).
     * 
     */
    private UndeferrableValue<Integer> rotationPeriodInDays;

    public Integer rotationPeriodInDays() {
        if (rotationPeriodInDays == null) return null;
        return rotationPeriodInDays.getValue("KeyArgs.rotationPeriodInDays");
    }

    /**
     * A map of tags to assign to the object. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("KeyArgs.tags");
    }

    /**
     * Identifies the external key that serves as key material for the KMS key in an external key store.
     * 
     */
    private UndeferrableValue<String> xksKeyId;

    public String xksKeyId() {
        if (xksKeyId == null) return null;
        return xksKeyId.getValue("KeyArgs.xksKeyId");
    }

}
