// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.vpclattice;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.vpclattice.inputs.ServiceNetworkResourceAssociationTimeoutsArgs;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:vpclattice/serviceNetworkResourceAssociation:ServiceNetworkResourceAssociation")
public final class ServiceNetworkResourceAssociationArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Identifier of Resource Configuration to associate to the Service Network.
     * 
     */
    @PolicyResourceProperty(name="resourceConfigurationIdentifier", flag="unknown_resourceConfigurationIdentifier")
    private String value_resourceConfigurationIdentifier;
    private boolean unknown_resourceConfigurationIdentifier;
    public String resourceConfigurationIdentifier() {
        if (!unknown_resourceConfigurationIdentifier) return value_resourceConfigurationIdentifier;
        throw new UndeferrableValueException("Value 'ServiceNetworkResourceAssociationArgs.resourceConfigurationIdentifier' is not present");
    }

    /**
     * Identifier of the Service Network to associate the Resource to.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="serviceNetworkIdentifier", flag="unknown_serviceNetworkIdentifier")
    private String value_serviceNetworkIdentifier;
    private boolean unknown_serviceNetworkIdentifier;
    public String serviceNetworkIdentifier() {
        if (!unknown_serviceNetworkIdentifier) return value_serviceNetworkIdentifier;
        throw new UndeferrableValueException("Value 'ServiceNetworkResourceAssociationArgs.serviceNetworkIdentifier' is not present");
    }

    /**
     * Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'ServiceNetworkResourceAssociationArgs.tags' is not present");
    }

    @PolicyResourceProperty(name="timeouts", flag="unknown_timeouts")
    private ServiceNetworkResourceAssociationTimeoutsArgs value_timeouts;
    private boolean unknown_timeouts;
    public ServiceNetworkResourceAssociationTimeoutsArgs timeouts() {
        if (!unknown_timeouts) return value_timeouts;
        throw new UndeferrableValueException("Value 'ServiceNetworkResourceAssociationArgs.timeouts' is not present");
    }

}
