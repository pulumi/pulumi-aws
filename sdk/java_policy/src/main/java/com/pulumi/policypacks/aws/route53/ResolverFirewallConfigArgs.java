// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.route53;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:route53/resolverFirewallConfig:ResolverFirewallConfig")
public final class ResolverFirewallConfigArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Determines how Route 53 Resolver handles queries during failures, for example when all traffic that is sent to DNS Firewall fails to receive a reply. By default, fail open is disabled, which means the failure mode is closed. This approach favors security over availability. DNS Firewall blocks queries that it is unable to evaluate properly. If you enable this option, the failure mode is open. This approach favors availability over security. DNS Firewall allows queries to proceed if it is unable to properly evaluate them. Valid values: `ENABLED`, `DISABLED`.
     * 
     */
    @PolicyResourceProperty(name="firewallFailOpen", flag="unknown_firewallFailOpen")
    private String value_firewallFailOpen;
    private boolean unknown_firewallFailOpen;
    public String firewallFailOpen() {
        if (!unknown_firewallFailOpen) return value_firewallFailOpen;
        throw new UndeferrableValueException("Value 'ResolverFirewallConfigArgs.firewallFailOpen' is not present");
    }

    /**
     * The ID of the VPC that the configuration is for.
     * 
     */
    @PolicyResourceProperty(name="resourceId", flag="unknown_resourceId")
    private String value_resourceId;
    private boolean unknown_resourceId;
    public String resourceId() {
        if (!unknown_resourceId) return value_resourceId;
        throw new UndeferrableValueException("Value 'ResolverFirewallConfigArgs.resourceId' is not present");
    }

}
