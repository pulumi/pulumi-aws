// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.costexplorer.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.costexplorer.inputs.AnomalySubscriptionThresholdExpressionAndArgs;
import com.pulumi.policypacks.aws.costexplorer.inputs.AnomalySubscriptionThresholdExpressionCostCategoryArgs;
import com.pulumi.policypacks.aws.costexplorer.inputs.AnomalySubscriptionThresholdExpressionDimensionArgs;
import com.pulumi.policypacks.aws.costexplorer.inputs.AnomalySubscriptionThresholdExpressionNotArgs;
import com.pulumi.policypacks.aws.costexplorer.inputs.AnomalySubscriptionThresholdExpressionOrArgs;
import com.pulumi.policypacks.aws.costexplorer.inputs.AnomalySubscriptionThresholdExpressionTagsArgs;
import java.util.List;
import javax.annotation.Nullable;


public final class AnomalySubscriptionThresholdExpressionArgs {

    /**
     * Return results that match both Dimension objects.
     * 
     */
    @PolicyResourceProperty(name="ands", flag="unknown_ands")
    private List<AnomalySubscriptionThresholdExpressionAndArgs> value_ands;
    private boolean unknown_ands;
    public List<AnomalySubscriptionThresholdExpressionAndArgs> ands() {
        if (!unknown_ands) return value_ands;
        throw new UndeferrableValueException("Value 'AnomalySubscriptionThresholdExpressionArgs.ands' is not present");
    }

    /**
     * Configuration block for the filter that&#39;s based on  values. See Cost Category below.
     * 
     */
    @PolicyResourceProperty(name="costCategory", flag="unknown_costCategory")
    private AnomalySubscriptionThresholdExpressionCostCategoryArgs value_costCategory;
    private boolean unknown_costCategory;
    public AnomalySubscriptionThresholdExpressionCostCategoryArgs costCategory() {
        if (!unknown_costCategory) return value_costCategory;
        throw new UndeferrableValueException("Value 'AnomalySubscriptionThresholdExpressionArgs.costCategory' is not present");
    }

    /**
     * Configuration block for the specific Dimension to use for.
     * 
     */
    @PolicyResourceProperty(name="dimension", flag="unknown_dimension")
    private AnomalySubscriptionThresholdExpressionDimensionArgs value_dimension;
    private boolean unknown_dimension;
    public AnomalySubscriptionThresholdExpressionDimensionArgs dimension() {
        if (!unknown_dimension) return value_dimension;
        throw new UndeferrableValueException("Value 'AnomalySubscriptionThresholdExpressionArgs.dimension' is not present");
    }

    /**
     * Return results that do not match the Dimension object.
     * 
     */
    @PolicyResourceProperty(name="not", flag="unknown_not")
    private AnomalySubscriptionThresholdExpressionNotArgs value_not;
    private boolean unknown_not;
    public AnomalySubscriptionThresholdExpressionNotArgs not() {
        if (!unknown_not) return value_not;
        throw new UndeferrableValueException("Value 'AnomalySubscriptionThresholdExpressionArgs.not' is not present");
    }

    /**
     * Return results that match either Dimension object.
     * 
     */
    @PolicyResourceProperty(name="ors", flag="unknown_ors")
    private List<AnomalySubscriptionThresholdExpressionOrArgs> value_ors;
    private boolean unknown_ors;
    public List<AnomalySubscriptionThresholdExpressionOrArgs> ors() {
        if (!unknown_ors) return value_ors;
        throw new UndeferrableValueException("Value 'AnomalySubscriptionThresholdExpressionArgs.ors' is not present");
    }

    /**
     * Configuration block for the specific Tag to use for. See Tags below.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private AnomalySubscriptionThresholdExpressionTagsArgs value_tags;
    private boolean unknown_tags;
    public AnomalySubscriptionThresholdExpressionTagsArgs tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'AnomalySubscriptionThresholdExpressionArgs.tags' is not present");
    }

}
