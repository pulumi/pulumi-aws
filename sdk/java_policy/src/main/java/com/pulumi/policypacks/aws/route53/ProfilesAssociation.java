// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.route53;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.route53.outputs.ProfilesAssociationTimeouts;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:route53/profilesAssociation:ProfilesAssociation")
public final class ProfilesAssociation extends com.pulumi.resources.PolicyResourceOutput {

    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'ProfilesAssociation.arn' is not present");
    }

    /**
     * Name of the Profile Association. Must match a regex of `(?!^[0-9]+$)([a-zA-Z0-9\\-_&#39; &#39;]+)`.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'ProfilesAssociation.name' is not present");
    }

    @PolicyResourceProperty(name="ownerId", flag="unknown_ownerId")
    private String value_ownerId;
    private boolean unknown_ownerId;
    public String ownerId() {
        if (!unknown_ownerId) return value_ownerId;
        throw new UndeferrableValueException("Value 'ProfilesAssociation.ownerId' is not present");
    }

    /**
     * ID of the profile associated with the VPC.
     * 
     */
    @PolicyResourceProperty(name="profileId", flag="unknown_profileId")
    private String value_profileId;
    private boolean unknown_profileId;
    public String profileId() {
        if (!unknown_profileId) return value_profileId;
        throw new UndeferrableValueException("Value 'ProfilesAssociation.profileId' is not present");
    }

    /**
     * Resource ID of the VPC the profile to be associated with.
     * 
     */
    @PolicyResourceProperty(name="resourceId", flag="unknown_resourceId")
    private String value_resourceId;
    private boolean unknown_resourceId;
    public String resourceId() {
        if (!unknown_resourceId) return value_resourceId;
        throw new UndeferrableValueException("Value 'ProfilesAssociation.resourceId' is not present");
    }

    /**
     * Status of the Profile Association.
     * 
     */
    @PolicyResourceProperty(name="status", flag="unknown_status")
    private String value_status;
    private boolean unknown_status;
    public String status() {
        if (!unknown_status) return value_status;
        throw new UndeferrableValueException("Value 'ProfilesAssociation.status' is not present");
    }

    /**
     * Status message of the Profile Association.
     * 
     */
    @PolicyResourceProperty(name="statusMessage", flag="unknown_statusMessage")
    private String value_statusMessage;
    private boolean unknown_statusMessage;
    public String statusMessage() {
        if (!unknown_statusMessage) return value_statusMessage;
        throw new UndeferrableValueException("Value 'ProfilesAssociation.statusMessage' is not present");
    }

    /**
     * Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'ProfilesAssociation.tags' is not present");
    }

    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'ProfilesAssociation.tagsAll' is not present");
    }

    @PolicyResourceProperty(name="timeouts", flag="unknown_timeouts")
    private @Nullable ProfilesAssociationTimeouts value_timeouts;
    private boolean unknown_timeouts;
    public @Nullable ProfilesAssociationTimeouts timeouts() {
        if (!unknown_timeouts) return value_timeouts;
        throw new UndeferrableValueException("Value 'ProfilesAssociation.timeouts' is not present");
    }

}
