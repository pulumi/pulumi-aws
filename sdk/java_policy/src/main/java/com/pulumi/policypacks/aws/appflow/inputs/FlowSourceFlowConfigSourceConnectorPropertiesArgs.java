// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appflow.inputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.appflow.inputs.FlowSourceFlowConfigSourceConnectorPropertiesAmplitudeArgs;
import com.pulumi.policypacks.aws.appflow.inputs.FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorArgs;
import com.pulumi.policypacks.aws.appflow.inputs.FlowSourceFlowConfigSourceConnectorPropertiesDatadogArgs;
import com.pulumi.policypacks.aws.appflow.inputs.FlowSourceFlowConfigSourceConnectorPropertiesDynatraceArgs;
import com.pulumi.policypacks.aws.appflow.inputs.FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsArgs;
import com.pulumi.policypacks.aws.appflow.inputs.FlowSourceFlowConfigSourceConnectorPropertiesInforNexusArgs;
import com.pulumi.policypacks.aws.appflow.inputs.FlowSourceFlowConfigSourceConnectorPropertiesMarketoArgs;
import com.pulumi.policypacks.aws.appflow.inputs.FlowSourceFlowConfigSourceConnectorPropertiesS3Args;
import com.pulumi.policypacks.aws.appflow.inputs.FlowSourceFlowConfigSourceConnectorPropertiesSalesforceArgs;
import com.pulumi.policypacks.aws.appflow.inputs.FlowSourceFlowConfigSourceConnectorPropertiesSapoDataArgs;
import com.pulumi.policypacks.aws.appflow.inputs.FlowSourceFlowConfigSourceConnectorPropertiesServiceNowArgs;
import com.pulumi.policypacks.aws.appflow.inputs.FlowSourceFlowConfigSourceConnectorPropertiesSingularArgs;
import com.pulumi.policypacks.aws.appflow.inputs.FlowSourceFlowConfigSourceConnectorPropertiesSlackArgs;
import com.pulumi.policypacks.aws.appflow.inputs.FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroArgs;
import com.pulumi.policypacks.aws.appflow.inputs.FlowSourceFlowConfigSourceConnectorPropertiesVeevaArgs;
import com.pulumi.policypacks.aws.appflow.inputs.FlowSourceFlowConfigSourceConnectorPropertiesZendeskArgs;
import javax.annotation.Nullable;


public final class FlowSourceFlowConfigSourceConnectorPropertiesArgs {

    /**
     * Information that is required for querying Amplitude. See Generic Source Properties for more details.
     * 
     */
    private UndeferrableValue<FlowSourceFlowConfigSourceConnectorPropertiesAmplitudeArgs> amplitude;

    public FlowSourceFlowConfigSourceConnectorPropertiesAmplitudeArgs amplitude() {
        if (amplitude == null) return null;
        return amplitude.getValue("FlowSourceFlowConfigSourceConnectorPropertiesArgs.amplitude");
    }

    /**
     * Properties that are applied when the custom connector is being used as a source. See Custom Connector Source Properties.
     * 
     */
    private UndeferrableValue<FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorArgs> customConnector;

    public FlowSourceFlowConfigSourceConnectorPropertiesCustomConnectorArgs customConnector() {
        if (customConnector == null) return null;
        return customConnector.getValue("FlowSourceFlowConfigSourceConnectorPropertiesArgs.customConnector");
    }

    /**
     * Information that is required for querying Datadog. See Generic Source Properties for more details.
     * 
     */
    private UndeferrableValue<FlowSourceFlowConfigSourceConnectorPropertiesDatadogArgs> datadog;

    public FlowSourceFlowConfigSourceConnectorPropertiesDatadogArgs datadog() {
        if (datadog == null) return null;
        return datadog.getValue("FlowSourceFlowConfigSourceConnectorPropertiesArgs.datadog");
    }

    /**
     * Operation to be performed on the provided Dynatrace source fields. Valid values are `PROJECTION`, `BETWEEN`, `EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
     * 
     */
    private UndeferrableValue<FlowSourceFlowConfigSourceConnectorPropertiesDynatraceArgs> dynatrace;

    public FlowSourceFlowConfigSourceConnectorPropertiesDynatraceArgs dynatrace() {
        if (dynatrace == null) return null;
        return dynatrace.getValue("FlowSourceFlowConfigSourceConnectorPropertiesArgs.dynatrace");
    }

    /**
     * Operation to be performed on the provided Google Analytics source fields. Valid values are `PROJECTION` and `BETWEEN`.
     * 
     */
    private UndeferrableValue<FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsArgs> googleAnalytics;

    public FlowSourceFlowConfigSourceConnectorPropertiesGoogleAnalyticsArgs googleAnalytics() {
        if (googleAnalytics == null) return null;
        return googleAnalytics.getValue("FlowSourceFlowConfigSourceConnectorPropertiesArgs.googleAnalytics");
    }

    /**
     * Information that is required for querying Infor Nexus. See Generic Source Properties for more details.
     * 
     */
    private UndeferrableValue<FlowSourceFlowConfigSourceConnectorPropertiesInforNexusArgs> inforNexus;

    public FlowSourceFlowConfigSourceConnectorPropertiesInforNexusArgs inforNexus() {
        if (inforNexus == null) return null;
        return inforNexus.getValue("FlowSourceFlowConfigSourceConnectorPropertiesArgs.inforNexus");
    }

    /**
     * Information that is required for querying Marketo. See Generic Source Properties for more details.
     * 
     */
    private UndeferrableValue<FlowSourceFlowConfigSourceConnectorPropertiesMarketoArgs> marketo;

    public FlowSourceFlowConfigSourceConnectorPropertiesMarketoArgs marketo() {
        if (marketo == null) return null;
        return marketo.getValue("FlowSourceFlowConfigSourceConnectorPropertiesArgs.marketo");
    }

    /**
     * Information that is required for querying Amazon S3. See S3 Source Properties for more details.
     * 
     */
    private UndeferrableValue<FlowSourceFlowConfigSourceConnectorPropertiesS3Args> s3;

    public FlowSourceFlowConfigSourceConnectorPropertiesS3Args s3() {
        if (s3 == null) return null;
        return s3.getValue("FlowSourceFlowConfigSourceConnectorPropertiesArgs.s3");
    }

    /**
     * Information that is required for querying Salesforce. See Salesforce Source Properties for more details.
     * 
     */
    private UndeferrableValue<FlowSourceFlowConfigSourceConnectorPropertiesSalesforceArgs> salesforce;

    public FlowSourceFlowConfigSourceConnectorPropertiesSalesforceArgs salesforce() {
        if (salesforce == null) return null;
        return salesforce.getValue("FlowSourceFlowConfigSourceConnectorPropertiesArgs.salesforce");
    }

    /**
     * Information that is required for querying SAPOData as a flow source. See SAPO Source Properties for more details.
     * 
     */
    private UndeferrableValue<FlowSourceFlowConfigSourceConnectorPropertiesSapoDataArgs> sapoData;

    public FlowSourceFlowConfigSourceConnectorPropertiesSapoDataArgs sapoData() {
        if (sapoData == null) return null;
        return sapoData.getValue("FlowSourceFlowConfigSourceConnectorPropertiesArgs.sapoData");
    }

    /**
     * Information that is required for querying ServiceNow. See Generic Source Properties for more details.
     * 
     */
    private UndeferrableValue<FlowSourceFlowConfigSourceConnectorPropertiesServiceNowArgs> serviceNow;

    public FlowSourceFlowConfigSourceConnectorPropertiesServiceNowArgs serviceNow() {
        if (serviceNow == null) return null;
        return serviceNow.getValue("FlowSourceFlowConfigSourceConnectorPropertiesArgs.serviceNow");
    }

    /**
     * Information that is required for querying Singular. See Generic Source Properties for more details.
     * 
     */
    private UndeferrableValue<FlowSourceFlowConfigSourceConnectorPropertiesSingularArgs> singular;

    public FlowSourceFlowConfigSourceConnectorPropertiesSingularArgs singular() {
        if (singular == null) return null;
        return singular.getValue("FlowSourceFlowConfigSourceConnectorPropertiesArgs.singular");
    }

    /**
     * Information that is required for querying Slack. See Generic Source Properties for more details.
     * 
     */
    private UndeferrableValue<FlowSourceFlowConfigSourceConnectorPropertiesSlackArgs> slack;

    public FlowSourceFlowConfigSourceConnectorPropertiesSlackArgs slack() {
        if (slack == null) return null;
        return slack.getValue("FlowSourceFlowConfigSourceConnectorPropertiesArgs.slack");
    }

    /**
     * Operation to be performed on the provided Trend Micro source fields. Valid values are `PROJECTION`, `EQUAL_TO`, `ADDITION`, `MULTIPLICATION`, `DIVISION`, `SUBTRACTION`, `MASK_ALL`, `MASK_FIRST_N`, `MASK_LAST_N`, `VALIDATE_NON_NULL`, `VALIDATE_NON_ZERO`, `VALIDATE_NON_NEGATIVE`, `VALIDATE_NUMERIC`, and `NO_OP`.
     * 
     */
    private UndeferrableValue<FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroArgs> trendmicro;

    public FlowSourceFlowConfigSourceConnectorPropertiesTrendmicroArgs trendmicro() {
        if (trendmicro == null) return null;
        return trendmicro.getValue("FlowSourceFlowConfigSourceConnectorPropertiesArgs.trendmicro");
    }

    /**
     * Information that is required for querying Veeva. See Veeva Source Properties for more details.
     * 
     */
    private UndeferrableValue<FlowSourceFlowConfigSourceConnectorPropertiesVeevaArgs> veeva;

    public FlowSourceFlowConfigSourceConnectorPropertiesVeevaArgs veeva() {
        if (veeva == null) return null;
        return veeva.getValue("FlowSourceFlowConfigSourceConnectorPropertiesArgs.veeva");
    }

    /**
     * Information that is required for querying Zendesk. See Generic Source Properties for more details.
     * 
     */
    private UndeferrableValue<FlowSourceFlowConfigSourceConnectorPropertiesZendeskArgs> zendesk;

    public FlowSourceFlowConfigSourceConnectorPropertiesZendeskArgs zendesk() {
        if (zendesk == null) return null;
        return zendesk.getValue("FlowSourceFlowConfigSourceConnectorPropertiesArgs.zendesk");
    }

}
