// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.redshift;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.redshift.outputs.EndpointAccessVpcEndpoint;
import java.lang.Integer;
import java.lang.String;
import java.util.List;


@PolicyResourceType(type="aws:redshift/endpointAccess:EndpointAccess")
public final class EndpointAccess extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The DNS address of the endpoint.
     * 
     */
    @PolicyResourceProperty(name="address", flag="unknown_address")
    private String value_address;
    private boolean unknown_address;
    public String address() {
        if (!unknown_address) return value_address;
        throw new UndeferrableValueException("Value 'EndpointAccess.address' is not present");
    }

    /**
     * The cluster identifier of the cluster to access.
     * 
     */
    @PolicyResourceProperty(name="clusterIdentifier", flag="unknown_clusterIdentifier")
    private String value_clusterIdentifier;
    private boolean unknown_clusterIdentifier;
    public String clusterIdentifier() {
        if (!unknown_clusterIdentifier) return value_clusterIdentifier;
        throw new UndeferrableValueException("Value 'EndpointAccess.clusterIdentifier' is not present");
    }

    /**
     * The Redshift-managed VPC endpoint name.
     * 
     */
    @PolicyResourceProperty(name="endpointName", flag="unknown_endpointName")
    private String value_endpointName;
    private boolean unknown_endpointName;
    public String endpointName() {
        if (!unknown_endpointName) return value_endpointName;
        throw new UndeferrableValueException("Value 'EndpointAccess.endpointName' is not present");
    }

    /**
     * The port number on which the cluster accepts incoming connections.
     * 
     */
    @PolicyResourceProperty(name="port", flag="unknown_port")
    private Integer value_port;
    private boolean unknown_port;
    public Integer port() {
        if (!unknown_port) return value_port;
        throw new UndeferrableValueException("Value 'EndpointAccess.port' is not present");
    }

    /**
     * The Amazon Web Services account ID of the owner of the cluster. This is only required if the cluster is in another Amazon Web Services account.
     * 
     */
    @PolicyResourceProperty(name="resourceOwner", flag="unknown_resourceOwner")
    private String value_resourceOwner;
    private boolean unknown_resourceOwner;
    public String resourceOwner() {
        if (!unknown_resourceOwner) return value_resourceOwner;
        throw new UndeferrableValueException("Value 'EndpointAccess.resourceOwner' is not present");
    }

    /**
     * The subnet group from which Amazon Redshift chooses the subnet to deploy the endpoint.
     * 
     */
    @PolicyResourceProperty(name="subnetGroupName", flag="unknown_subnetGroupName")
    private String value_subnetGroupName;
    private boolean unknown_subnetGroupName;
    public String subnetGroupName() {
        if (!unknown_subnetGroupName) return value_subnetGroupName;
        throw new UndeferrableValueException("Value 'EndpointAccess.subnetGroupName' is not present");
    }

    /**
     * The connection endpoint for connecting to an Amazon Redshift cluster through the proxy. See details below.
     * 
     */
    @PolicyResourceProperty(name="vpcEndpoints", flag="unknown_vpcEndpoints")
    private List<EndpointAccessVpcEndpoint> value_vpcEndpoints;
    private boolean unknown_vpcEndpoints;
    public List<EndpointAccessVpcEndpoint> vpcEndpoints() {
        if (!unknown_vpcEndpoints) return value_vpcEndpoints;
        throw new UndeferrableValueException("Value 'EndpointAccess.vpcEndpoints' is not present");
    }

    /**
     * The security group that defines the ports, protocols, and sources for inbound traffic that you are authorizing into your endpoint.
     * 
     */
    @PolicyResourceProperty(name="vpcSecurityGroupIds", flag="unknown_vpcSecurityGroupIds")
    private List<String> value_vpcSecurityGroupIds;
    private boolean unknown_vpcSecurityGroupIds;
    public List<String> vpcSecurityGroupIds() {
        if (!unknown_vpcSecurityGroupIds) return value_vpcSecurityGroupIds;
        throw new UndeferrableValueException("Value 'EndpointAccess.vpcSecurityGroupIds' is not present");
    }

}
