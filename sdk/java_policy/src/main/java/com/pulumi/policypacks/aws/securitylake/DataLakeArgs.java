// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.securitylake;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.securitylake.inputs.DataLakeConfigurationArgs;
import com.pulumi.policypacks.aws.securitylake.inputs.DataLakeTimeoutsArgs;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:securitylake/dataLake:DataLake")
public final class DataLakeArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Specify the Region or Regions that will contribute data to the rollup region.
     * 
     */
    private UndeferrableValue<DataLakeConfigurationArgs> configuration;

    public DataLakeConfigurationArgs configuration() {
        if (configuration == null) return null;
        return configuration.getValue("DataLakeArgs.configuration");
    }

    /**
     * The Amazon Resource Name (ARN) used to create and update the AWS Glue table. This table contains partitions generated by the ingestion and normalization of AWS log sources and custom sources.
     * 
     */
    private UndeferrableValue<String> metaStoreManagerRoleArn;

    public String metaStoreManagerRoleArn() {
        if (metaStoreManagerRoleArn == null) return null;
        return metaStoreManagerRoleArn.getValue("DataLakeArgs.metaStoreManagerRoleArn");
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("DataLakeArgs.tags");
    }

    private UndeferrableValue<DataLakeTimeoutsArgs> timeouts;

    public DataLakeTimeoutsArgs timeouts() {
        if (timeouts == null) return null;
        return timeouts.getValue("DataLakeArgs.timeouts");
    }

}
