// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.kms;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.kms.inputs.GrantConstraintArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:kms/grant:Grant")
public final class GrantArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * A structure that you can use to allow certain operations in the grant only when the desired encryption context is present. For more information about encryption context, see [Encryption Context](http://docs.aws.amazon.com/kms/latest/developerguide/encryption-context.html).
     * 
     */
    @PolicyResourceProperty(name="constraints", flag="unknown_constraints")
    private List<GrantConstraintArgs> value_constraints;
    private boolean unknown_constraints;
    public List<GrantConstraintArgs> constraints() {
        if (!unknown_constraints) return value_constraints;
        throw new UndeferrableValueException("Value 'GrantArgs.constraints' is not present");
    }

    /**
     * A list of grant tokens to be used when creating the grant. See [Grant Tokens](http://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#grant_token) for more information about grant tokens.
     * 
     */
    @PolicyResourceProperty(name="grantCreationTokens", flag="unknown_grantCreationTokens")
    private List<String> value_grantCreationTokens;
    private boolean unknown_grantCreationTokens;
    public List<String> grantCreationTokens() {
        if (!unknown_grantCreationTokens) return value_grantCreationTokens;
        throw new UndeferrableValueException("Value 'GrantArgs.grantCreationTokens' is not present");
    }

    /**
     * The principal that is given permission to perform the operations that the grant permits in ARN format. Note that due to eventual consistency issues around IAM principals, the providers&#39;s state may not always be refreshed to reflect what is true in AWS.
     * 
     */
    @PolicyResourceProperty(name="granteePrincipal", flag="unknown_granteePrincipal")
    private String value_granteePrincipal;
    private boolean unknown_granteePrincipal;
    public String granteePrincipal() {
        if (!unknown_granteePrincipal) return value_granteePrincipal;
        throw new UndeferrableValueException("Value 'GrantArgs.granteePrincipal' is not present");
    }

    /**
     * The unique identifier for the customer master key (CMK) that the grant applies to. Specify the key ID or the Amazon Resource Name (ARN) of the CMK. To specify a CMK in a different AWS account, you must use the key ARN.
     * 
     */
    @PolicyResourceProperty(name="keyId", flag="unknown_keyId")
    private String value_keyId;
    private boolean unknown_keyId;
    public String keyId() {
        if (!unknown_keyId) return value_keyId;
        throw new UndeferrableValueException("Value 'GrantArgs.keyId' is not present");
    }

    /**
     * A friendly name for identifying the grant.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'GrantArgs.name' is not present");
    }

    /**
     * A list of operations that the grant permits. The permitted values are: `Decrypt`, `Encrypt`, `GenerateDataKey`, `GenerateDataKeyWithoutPlaintext`, `ReEncryptFrom`, `ReEncryptTo`, `Sign`, `Verify`, `GetPublicKey`, `CreateGrant`, `RetireGrant`, `DescribeKey`, `GenerateDataKeyPair`, or `GenerateDataKeyPairWithoutPlaintext`.
     * 
     */
    @PolicyResourceProperty(name="operations", flag="unknown_operations")
    private List<String> value_operations;
    private boolean unknown_operations;
    public List<String> operations() {
        if (!unknown_operations) return value_operations;
        throw new UndeferrableValueException("Value 'GrantArgs.operations' is not present");
    }

    /**
     * If set to false (the default) the grants will be revoked upon deletion, and if set to true the grants will try to be retired upon deletion. Note that retiring grants requires special permissions, hence why we default to revoking grants.
     * See [RetireGrant](https://docs.aws.amazon.com/kms/latest/APIReference/API_RetireGrant.html) for more information.
     * 
     */
    @PolicyResourceProperty(name="retireOnDelete", flag="unknown_retireOnDelete")
    private Boolean value_retireOnDelete;
    private boolean unknown_retireOnDelete;
    public Boolean retireOnDelete() {
        if (!unknown_retireOnDelete) return value_retireOnDelete;
        throw new UndeferrableValueException("Value 'GrantArgs.retireOnDelete' is not present");
    }

    /**
     * The principal that is given permission to retire the grant by using RetireGrant operation in ARN format. Note that due to eventual consistency issues around IAM principals, the providers&#39;s state may not always be refreshed to reflect what is true in AWS.
     * 
     */
    @PolicyResourceProperty(name="retiringPrincipal", flag="unknown_retiringPrincipal")
    private String value_retiringPrincipal;
    private boolean unknown_retiringPrincipal;
    public String retiringPrincipal() {
        if (!unknown_retiringPrincipal) return value_retiringPrincipal;
        throw new UndeferrableValueException("Value 'GrantArgs.retiringPrincipal' is not present");
    }

}
