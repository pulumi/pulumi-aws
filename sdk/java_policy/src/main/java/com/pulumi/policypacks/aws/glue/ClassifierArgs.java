// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.glue;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.glue.inputs.ClassifierCsvClassifierArgs;
import com.pulumi.policypacks.aws.glue.inputs.ClassifierGrokClassifierArgs;
import com.pulumi.policypacks.aws.glue.inputs.ClassifierJsonClassifierArgs;
import com.pulumi.policypacks.aws.glue.inputs.ClassifierXmlClassifierArgs;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:glue/classifier:Classifier")
public final class ClassifierArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * A classifier for CSV content. Defined below.
     * 
     */
    @PolicyResourceProperty(name="csvClassifier", flag="unknown_csvClassifier")
    private ClassifierCsvClassifierArgs value_csvClassifier;
    private boolean unknown_csvClassifier;
    public ClassifierCsvClassifierArgs csvClassifier() {
        if (!unknown_csvClassifier) return value_csvClassifier;
        throw new UndeferrableValueException("Value 'ClassifierArgs.csvClassifier' is not present");
    }

    /**
     * A classifier that uses grok patterns. Defined below.
     * 
     */
    @PolicyResourceProperty(name="grokClassifier", flag="unknown_grokClassifier")
    private ClassifierGrokClassifierArgs value_grokClassifier;
    private boolean unknown_grokClassifier;
    public ClassifierGrokClassifierArgs grokClassifier() {
        if (!unknown_grokClassifier) return value_grokClassifier;
        throw new UndeferrableValueException("Value 'ClassifierArgs.grokClassifier' is not present");
    }

    /**
     * A classifier for JSON content. Defined below.
     * 
     */
    @PolicyResourceProperty(name="jsonClassifier", flag="unknown_jsonClassifier")
    private ClassifierJsonClassifierArgs value_jsonClassifier;
    private boolean unknown_jsonClassifier;
    public ClassifierJsonClassifierArgs jsonClassifier() {
        if (!unknown_jsonClassifier) return value_jsonClassifier;
        throw new UndeferrableValueException("Value 'ClassifierArgs.jsonClassifier' is not present");
    }

    /**
     * The name of the classifier.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'ClassifierArgs.name' is not present");
    }

    /**
     * A classifier for XML content. Defined below.
     * 
     */
    @PolicyResourceProperty(name="xmlClassifier", flag="unknown_xmlClassifier")
    private ClassifierXmlClassifierArgs value_xmlClassifier;
    private boolean unknown_xmlClassifier;
    public ClassifierXmlClassifierArgs xmlClassifier() {
        if (!unknown_xmlClassifier) return value_xmlClassifier;
        throw new UndeferrableValueException("Value 'ClassifierArgs.xmlClassifier' is not present");
    }

}
