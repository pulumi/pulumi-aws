// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.elb.outputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.Integer;
import java.lang.String;


public final class LoadBalancerHealthCheck {

    /**
     * The number of checks before the instance is declared healthy.
     * 
     */
    private UndeferrableValue<Integer> healthyThreshold;

    public Integer healthyThreshold() {
        if (healthyThreshold == null) return null;
        return healthyThreshold.getValue("LoadBalancerHealthCheck.healthyThreshold");
    }

    /**
     * The interval between checks.
     * 
     */
    private UndeferrableValue<Integer> interval;

    public Integer interval() {
        if (interval == null) return null;
        return interval.getValue("LoadBalancerHealthCheck.interval");
    }

    /**
     * The target of the check. Valid pattern is &#34;${PROTOCOL}:${PORT}${PATH}&#34;, where PROTOCOL
     * values are:
     * * `HTTP`, `HTTPS` - PORT and PATH are required
     * * `TCP`, `SSL` - PORT is required, PATH is not supported
     * 
     */
    private UndeferrableValue<String> target;

    public String target() {
        if (target == null) return null;
        return target.getValue("LoadBalancerHealthCheck.target");
    }

    /**
     * The length of time before the check times out.
     * 
     */
    private UndeferrableValue<Integer> timeout;

    public Integer timeout() {
        if (timeout == null) return null;
        return timeout.getValue("LoadBalancerHealthCheck.timeout");
    }

    /**
     * The number of checks before the instance is declared unhealthy.
     * 
     */
    private UndeferrableValue<Integer> unhealthyThreshold;

    public Integer unhealthyThreshold() {
        if (unhealthyThreshold == null) return null;
        return unhealthyThreshold.getValue("LoadBalancerHealthCheck.unhealthyThreshold");
    }

}
