// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.elb.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.Integer;
import java.lang.String;


public final class LoadBalancerHealthCheck {

    /**
     * The number of checks before the instance is declared healthy.
     * 
     */
    @PolicyResourceProperty(name="healthyThreshold", flag="unknown_healthyThreshold")
    private Integer value_healthyThreshold;
    private boolean unknown_healthyThreshold;
    public Integer healthyThreshold() {
        if (!unknown_healthyThreshold) return value_healthyThreshold;
        throw new UndeferrableValueException("Value 'LoadBalancerHealthCheck.healthyThreshold' is not present");
    }

    /**
     * The interval between checks.
     * 
     */
    @PolicyResourceProperty(name="interval", flag="unknown_interval")
    private Integer value_interval;
    private boolean unknown_interval;
    public Integer interval() {
        if (!unknown_interval) return value_interval;
        throw new UndeferrableValueException("Value 'LoadBalancerHealthCheck.interval' is not present");
    }

    /**
     * The target of the check. Valid pattern is &#34;${PROTOCOL}:${PORT}${PATH}&#34;, where PROTOCOL
     * values are:
     * * `HTTP`, `HTTPS` - PORT and PATH are required
     * * `TCP`, `SSL` - PORT is required, PATH is not supported
     * 
     */
    @PolicyResourceProperty(name="target", flag="unknown_target")
    private String value_target;
    private boolean unknown_target;
    public String target() {
        if (!unknown_target) return value_target;
        throw new UndeferrableValueException("Value 'LoadBalancerHealthCheck.target' is not present");
    }

    /**
     * The length of time before the check times out.
     * 
     */
    @PolicyResourceProperty(name="timeout", flag="unknown_timeout")
    private Integer value_timeout;
    private boolean unknown_timeout;
    public Integer timeout() {
        if (!unknown_timeout) return value_timeout;
        throw new UndeferrableValueException("Value 'LoadBalancerHealthCheck.timeout' is not present");
    }

    /**
     * The number of checks before the instance is declared unhealthy.
     * 
     */
    @PolicyResourceProperty(name="unhealthyThreshold", flag="unknown_unhealthyThreshold")
    private Integer value_unhealthyThreshold;
    private boolean unknown_unhealthyThreshold;
    public Integer unhealthyThreshold() {
        if (!unknown_unhealthyThreshold) return value_unhealthyThreshold;
        throw new UndeferrableValueException("Value 'LoadBalancerHealthCheck.unhealthyThreshold' is not present");
    }

}
