// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.wafv2;

import com.pulumi.policypacks.aws.wafv2.WebAclRuleAction;
import com.pulumi.policypacks.aws.wafv2.WebAclRuleCaptchaConfig;
import com.pulumi.policypacks.aws.wafv2.WebAclRuleChallengeConfig;
import com.pulumi.policypacks.aws.wafv2.WebAclRuleOverrideAction;
import com.pulumi.policypacks.aws.wafv2.WebAclRuleRuleLabel;
import com.pulumi.policypacks.aws.wafv2.WebAclRuleStatement;
import com.pulumi.policypacks.aws.wafv2.WebAclRuleVisibilityConfig;
import java.lang.Integer;
import java.lang.String;
import java.util.List;


public final class WebAclRule {

    /**
     * Action that AWS WAF should take on a web request when it matches the rule&#39;s statement. This is used only for rules whose **statements do not reference a rule group**. See `action` for details.
     * 
     */
    public WebAclRuleAction action;



    /**
     * Specifies how AWS WAF should handle CAPTCHA evaluations. See `captcha_config` below for details.
     * 
     */
    public WebAclRuleCaptchaConfig captchaConfig;



    /**
     * Specifies how AWS WAF should handle Challenge evaluations on the rule level. See `challenge_config` below for details.
     * 
     */
    public WebAclRuleChallengeConfig challengeConfig;



    /**
     * Friendly name of the rule. Note that the provider assumes that rules with names matching this pattern, `^ShieldMitigationRuleGroup_&lt;account-id&gt;_&lt;web-acl-guid&gt;_.*`, are AWS-added for [automatic application layer DDoS mitigation activities](https://docs.aws.amazon.com/waf/latest/developerguide/ddos-automatic-app-layer-response-rg.html). Such rules will be ignored by the provider unless you explicitly include them in your configuration (for example, by using the AWS CLI to discover their properties and creating matching configuration). However, since these rules are owned and managed by AWS, you may get permission errors.
     * 
     */
    public String name;



    /**
     * Override action to apply to the rules in a rule group. Used only for rule **statements that reference a rule group**, like `rule_group_reference_statement` and `managed_rule_group_statement`. See `override_action` below for details.
     * 
     */
    public WebAclRuleOverrideAction overrideAction;



    /**
     * If you define more than one Rule in a WebACL, AWS WAF evaluates each request against the `rules` in order based on the value of `priority`. AWS WAF processes rules with lower priority first.
     * 
     */
    public Integer priority;



    /**
     * Labels to apply to web requests that match the rule match statement. See `rule_label` below for details.
     * 
     */
    public List<WebAclRuleRuleLabel> ruleLabels;



    /**
     * The AWS WAF processing statement for the rule, for example `byte_match_statement` or `geo_match_statement`. See `statement` below for details.
     * 
     */
    public WebAclRuleStatement statement;



    /**
     * Defines and enables Amazon CloudWatch metrics and web request sample collection. See `visibility_config` below for details.
     * 
     */
    public WebAclRuleVisibilityConfig visibilityConfig;



}
