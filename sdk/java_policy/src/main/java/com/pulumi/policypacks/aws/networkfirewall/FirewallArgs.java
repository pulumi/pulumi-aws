// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.networkfirewall;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.networkfirewall.inputs.FirewallEncryptionConfigurationArgs;
import com.pulumi.policypacks.aws.networkfirewall.inputs.FirewallSubnetMappingArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:networkfirewall/firewall:Firewall")
public final class FirewallArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * A flag indicating whether the firewall is protected against deletion. Use this setting to protect against accidentally deleting a firewall that is in use. Defaults to `false`.
     * 
     */
    private UndeferrableValue<Boolean> deleteProtection;

    public Boolean deleteProtection() {
        if (deleteProtection == null) return null;
        return deleteProtection.getValue("FirewallArgs.deleteProtection");
    }

    /**
     * A friendly description of the firewall.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("FirewallArgs.description");
    }

    /**
     * KMS encryption configuration settings. See Encryption Configuration below for details.
     * 
     */
    private UndeferrableValue<FirewallEncryptionConfigurationArgs> encryptionConfiguration;

    public FirewallEncryptionConfigurationArgs encryptionConfiguration() {
        if (encryptionConfiguration == null) return null;
        return encryptionConfiguration.getValue("FirewallArgs.encryptionConfiguration");
    }

    /**
     * The Amazon Resource Name (ARN) of the VPC Firewall policy.
     * 
     */
    private UndeferrableValue<String> firewallPolicyArn;

    public String firewallPolicyArn() {
        if (firewallPolicyArn == null) return null;
        return firewallPolicyArn.getValue("FirewallArgs.firewallPolicyArn");
    }

    /**
     * A flag indicating whether the firewall is protected against a change to the firewall policy association. Use this setting to protect against accidentally modifying the firewall policy for a firewall that is in use. Defaults to `false`.
     * 
     */
    private UndeferrableValue<Boolean> firewallPolicyChangeProtection;

    public Boolean firewallPolicyChangeProtection() {
        if (firewallPolicyChangeProtection == null) return null;
        return firewallPolicyChangeProtection.getValue("FirewallArgs.firewallPolicyChangeProtection");
    }

    /**
     * A friendly name of the firewall.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("FirewallArgs.name");
    }

    /**
     * A flag indicating whether the firewall is protected against changes to the subnet associations. Use this setting to protect against accidentally modifying the subnet associations for a firewall that is in use. Defaults to `false`.
     * 
     */
    private UndeferrableValue<Boolean> subnetChangeProtection;

    public Boolean subnetChangeProtection() {
        if (subnetChangeProtection == null) return null;
        return subnetChangeProtection.getValue("FirewallArgs.subnetChangeProtection");
    }

    /**
     * Set of configuration blocks describing the public subnets. Each subnet must belong to a different Availability Zone in the VPC. AWS Network Firewall creates a firewall endpoint in each subnet. See Subnet Mapping below for details.
     * 
     */
    private UndeferrableValue<List<FirewallSubnetMappingArgs>> subnetMappings;

    public List<FirewallSubnetMappingArgs> subnetMappings() {
        if (subnetMappings == null) return null;
        return subnetMappings.getValue("FirewallArgs.subnetMappings");
    }

    /**
     * Map of resource tags to associate with the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("FirewallArgs.tags");
    }

    /**
     * The unique identifier of the VPC where AWS Network Firewall should create the firewall.
     * 
     */
    private UndeferrableValue<String> vpcId;

    public String vpcId() {
        if (vpcId == null) return null;
        return vpcId.getValue("FirewallArgs.vpcId");
    }

}
