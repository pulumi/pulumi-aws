// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.scheduler;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:scheduler/scheduleGroup:ScheduleGroup")
public final class ScheduleGroup extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * ARN of the schedule group.
     * 
     */
    private UndeferrableValue<String> arn;

    public String arn() {
        if (arn == null) return null;
        return arn.getValue("ScheduleGroup.arn");
    }

    /**
     * Time at which the schedule group was created.
     * 
     */
    private UndeferrableValue<String> creationDate;

    public String creationDate() {
        if (creationDate == null) return null;
        return creationDate.getValue("ScheduleGroup.creationDate");
    }

    /**
     * Time at which the schedule group was last modified.
     * 
     */
    private UndeferrableValue<String> lastModificationDate;

    public String lastModificationDate() {
        if (lastModificationDate == null) return null;
        return lastModificationDate.getValue("ScheduleGroup.lastModificationDate");
    }

    /**
     * Name of the schedule group. If omitted, the provider will assign a random, unique name. Conflicts with `name_prefix`.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("ScheduleGroup.name");
    }

    /**
     * Creates a unique name beginning with the specified prefix. Conflicts with `name`.
     * 
     */
    private UndeferrableValue<String> namePrefix;

    public String namePrefix() {
        if (namePrefix == null) return null;
        return namePrefix.getValue("ScheduleGroup.namePrefix");
    }

    /**
     * State of the schedule group. Can be `ACTIVE` or `DELETING`.
     * 
     */
    private UndeferrableValue<String> state;

    public String state() {
        if (state == null) return null;
        return state.getValue("ScheduleGroup.state");
    }

    /**
     * Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private @Nullable UndeferrableValue<Map<String,String>> tags;

    public @Nullable Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("ScheduleGroup.tags");
    }

    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    private UndeferrableValue<Map<String,String>> tagsAll;

    public Map<String,String> tagsAll() {
        if (tagsAll == null) return null;
        return tagsAll.getValue("ScheduleGroup.tagsAll");
    }

}
