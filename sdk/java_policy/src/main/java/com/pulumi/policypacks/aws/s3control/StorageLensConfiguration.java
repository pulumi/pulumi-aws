// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.s3control;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.s3control.outputs.StorageLensConfigurationStorageLensConfiguration;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:s3control/storageLensConfiguration:StorageLensConfiguration")
public final class StorageLensConfiguration extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The AWS account ID for the S3 Storage Lens configuration. Defaults to automatically determined account ID of the AWS provider.
     * 
     */
    @PolicyResourceProperty(name="accountId", flag="unknown_accountId")
    private String value_accountId;
    private boolean unknown_accountId;
    public String accountId() {
        if (!unknown_accountId) return value_accountId;
        throw new UndeferrableValueException("Value 'StorageLensConfiguration.accountId' is not present");
    }

    /**
     * Amazon Resource Name (ARN) of the S3 Storage Lens configuration.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'StorageLensConfiguration.arn' is not present");
    }

    /**
     * The ID of the S3 Storage Lens configuration.
     * 
     */
    @PolicyResourceProperty(name="configId", flag="unknown_configId")
    private String value_configId;
    private boolean unknown_configId;
    public String configId() {
        if (!unknown_configId) return value_configId;
        throw new UndeferrableValueException("Value 'StorageLensConfiguration.configId' is not present");
    }

    /**
     * The S3 Storage Lens configuration. See Storage Lens Configuration below for more details.
     * 
     */
    @PolicyResourceProperty(name="storageLensConfiguration", flag="unknown_storageLensConfiguration")
    private StorageLensConfigurationStorageLensConfiguration value_storageLensConfiguration;
    private boolean unknown_storageLensConfiguration;
    public StorageLensConfigurationStorageLensConfiguration storageLensConfiguration() {
        if (!unknown_storageLensConfiguration) return value_storageLensConfiguration;
        throw new UndeferrableValueException("Value 'StorageLensConfiguration.storageLensConfiguration' is not present");
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'StorageLensConfiguration.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'StorageLensConfiguration.tagsAll' is not present");
    }

}
