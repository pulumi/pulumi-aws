// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2.inputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.ec2.inputs.SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs;
import com.pulumi.policypacks.aws.ec2.inputs.SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgs;
import com.pulumi.policypacks.aws.ec2.inputs.SpotFleetRequestLaunchSpecificationRootBlockDeviceArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


public final class SpotFleetRequestLaunchSpecificationArgs {

    private UndeferrableValue<String> ami;

    public String ami() {
        if (ami == null) return null;
        return ami.getValue("SpotFleetRequestLaunchSpecificationArgs.ami");
    }

    private UndeferrableValue<Boolean> associatePublicIpAddress;

    public Boolean associatePublicIpAddress() {
        if (associatePublicIpAddress == null) return null;
        return associatePublicIpAddress.getValue("SpotFleetRequestLaunchSpecificationArgs.associatePublicIpAddress");
    }

    /**
     * The availability zone in which to place the request.
     * 
     */
    private UndeferrableValue<String> availabilityZone;

    public String availabilityZone() {
        if (availabilityZone == null) return null;
        return availabilityZone.getValue("SpotFleetRequestLaunchSpecificationArgs.availabilityZone");
    }

    private UndeferrableValue<List<SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs>> ebsBlockDevices;

    public List<SpotFleetRequestLaunchSpecificationEbsBlockDeviceArgs> ebsBlockDevices() {
        if (ebsBlockDevices == null) return null;
        return ebsBlockDevices.getValue("SpotFleetRequestLaunchSpecificationArgs.ebsBlockDevices");
    }

    private UndeferrableValue<Boolean> ebsOptimized;

    public Boolean ebsOptimized() {
        if (ebsOptimized == null) return null;
        return ebsOptimized.getValue("SpotFleetRequestLaunchSpecificationArgs.ebsOptimized");
    }

    private UndeferrableValue<List<SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgs>> ephemeralBlockDevices;

    public List<SpotFleetRequestLaunchSpecificationEphemeralBlockDeviceArgs> ephemeralBlockDevices() {
        if (ephemeralBlockDevices == null) return null;
        return ephemeralBlockDevices.getValue("SpotFleetRequestLaunchSpecificationArgs.ephemeralBlockDevices");
    }

    private UndeferrableValue<String> iamInstanceProfile;

    public String iamInstanceProfile() {
        if (iamInstanceProfile == null) return null;
        return iamInstanceProfile.getValue("SpotFleetRequestLaunchSpecificationArgs.iamInstanceProfile");
    }

    private UndeferrableValue<String> iamInstanceProfileArn;

    public String iamInstanceProfileArn() {
        if (iamInstanceProfileArn == null) return null;
        return iamInstanceProfileArn.getValue("SpotFleetRequestLaunchSpecificationArgs.iamInstanceProfileArn");
    }

    /**
     * The type of instance to request.
     * 
     */
    private UndeferrableValue<String> instanceType;

    public String instanceType() {
        if (instanceType == null) return null;
        return instanceType.getValue("SpotFleetRequestLaunchSpecificationArgs.instanceType");
    }

    private UndeferrableValue<String> keyName;

    public String keyName() {
        if (keyName == null) return null;
        return keyName.getValue("SpotFleetRequestLaunchSpecificationArgs.keyName");
    }

    private UndeferrableValue<Boolean> monitoring;

    public Boolean monitoring() {
        if (monitoring == null) return null;
        return monitoring.getValue("SpotFleetRequestLaunchSpecificationArgs.monitoring");
    }

    private UndeferrableValue<String> placementGroup;

    public String placementGroup() {
        if (placementGroup == null) return null;
        return placementGroup.getValue("SpotFleetRequestLaunchSpecificationArgs.placementGroup");
    }

    private UndeferrableValue<String> placementTenancy;

    public String placementTenancy() {
        if (placementTenancy == null) return null;
        return placementTenancy.getValue("SpotFleetRequestLaunchSpecificationArgs.placementTenancy");
    }

    private UndeferrableValue<List<SpotFleetRequestLaunchSpecificationRootBlockDeviceArgs>> rootBlockDevices;

    public List<SpotFleetRequestLaunchSpecificationRootBlockDeviceArgs> rootBlockDevices() {
        if (rootBlockDevices == null) return null;
        return rootBlockDevices.getValue("SpotFleetRequestLaunchSpecificationArgs.rootBlockDevices");
    }

    /**
     * The maximum bid price per unit hour.
     * 
     */
    private UndeferrableValue<String> spotPrice;

    public String spotPrice() {
        if (spotPrice == null) return null;
        return spotPrice.getValue("SpotFleetRequestLaunchSpecificationArgs.spotPrice");
    }

    /**
     * The subnet in which to launch the requested instance.
     * 
     */
    private UndeferrableValue<String> subnetId;

    public String subnetId() {
        if (subnetId == null) return null;
        return subnetId.getValue("SpotFleetRequestLaunchSpecificationArgs.subnetId");
    }

    /**
     * A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("SpotFleetRequestLaunchSpecificationArgs.tags");
    }

    private UndeferrableValue<String> userData;

    public String userData() {
        if (userData == null) return null;
        return userData.getValue("SpotFleetRequestLaunchSpecificationArgs.userData");
    }

    private UndeferrableValue<List<String>> vpcSecurityGroupIds;

    public List<String> vpcSecurityGroupIds() {
        if (vpcSecurityGroupIds == null) return null;
        return vpcSecurityGroupIds.getValue("SpotFleetRequestLaunchSpecificationArgs.vpcSecurityGroupIds");
    }

    /**
     * The capacity added to the fleet by a fulfilled request.
     * 
     */
    private UndeferrableValue<String> weightedCapacity;

    public String weightedCapacity() {
        if (weightedCapacity == null) return null;
        return weightedCapacity.getValue("SpotFleetRequestLaunchSpecificationArgs.weightedCapacity");
    }

}
