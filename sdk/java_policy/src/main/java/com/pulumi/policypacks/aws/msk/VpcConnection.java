// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.msk;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:msk/vpcConnection:VpcConnection")
public final class VpcConnection extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Amazon Resource Name (ARN) of the VPC connection.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'VpcConnection.arn' is not present");
    }

    /**
     * The authentication type for the client VPC connection. Specify one of these auth type strings: SASL_IAM, SASL_SCRAM, or TLS.
     * 
     */
    @PolicyResourceProperty(name="authentication", flag="unknown_authentication")
    private String value_authentication;
    private boolean unknown_authentication;
    public String authentication() {
        if (!unknown_authentication) return value_authentication;
        throw new UndeferrableValueException("Value 'VpcConnection.authentication' is not present");
    }

    /**
     * The list of subnets in the client VPC to connect to.
     * 
     */
    @PolicyResourceProperty(name="clientSubnets", flag="unknown_clientSubnets")
    private List<String> value_clientSubnets;
    private boolean unknown_clientSubnets;
    public List<String> clientSubnets() {
        if (!unknown_clientSubnets) return value_clientSubnets;
        throw new UndeferrableValueException("Value 'VpcConnection.clientSubnets' is not present");
    }

    /**
     * The security groups to attach to the ENIs for the broker nodes.
     * 
     */
    @PolicyResourceProperty(name="securityGroups", flag="unknown_securityGroups")
    private List<String> value_securityGroups;
    private boolean unknown_securityGroups;
    public List<String> securityGroups() {
        if (!unknown_securityGroups) return value_securityGroups;
        throw new UndeferrableValueException("Value 'VpcConnection.securityGroups' is not present");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'VpcConnection.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'VpcConnection.tagsAll' is not present");
    }

    /**
     * The Amazon Resource Name (ARN) of the cluster.
     * 
     */
    @PolicyResourceProperty(name="targetClusterArn", flag="unknown_targetClusterArn")
    private String value_targetClusterArn;
    private boolean unknown_targetClusterArn;
    public String targetClusterArn() {
        if (!unknown_targetClusterArn) return value_targetClusterArn;
        throw new UndeferrableValueException("Value 'VpcConnection.targetClusterArn' is not present");
    }

    /**
     * The VPC ID of the remote client.
     * 
     */
    @PolicyResourceProperty(name="vpcId", flag="unknown_vpcId")
    private String value_vpcId;
    private boolean unknown_vpcId;
    public String vpcId() {
        if (!unknown_vpcId) return value_vpcId;
        throw new UndeferrableValueException("Value 'VpcConnection.vpcId' is not present");
    }

}
