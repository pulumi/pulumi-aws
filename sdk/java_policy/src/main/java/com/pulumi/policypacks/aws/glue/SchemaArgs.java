// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.glue;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:glue/schema:Schema")
public final class SchemaArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The compatibility mode of the schema. Values values are: `NONE`, `DISABLED`, `BACKWARD`, `BACKWARD_ALL`, `FORWARD`, `FORWARD_ALL`, `FULL`, and `FULL_ALL`.
     * 
     */
    private UndeferrableValue<String> compatibility;

    public String compatibility() {
        if (compatibility == null) return null;
        return compatibility.getValue("SchemaArgs.compatibility");
    }

    /**
     * The data format of the schema definition. Valid values are `AVRO`, `JSON` and `PROTOBUF`.
     * 
     */
    private UndeferrableValue<String> dataFormat;

    public String dataFormat() {
        if (dataFormat == null) return null;
        return dataFormat.getValue("SchemaArgs.dataFormat");
    }

    /**
     * A description of the schema.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("SchemaArgs.description");
    }

    /**
     * The ARN of the Glue Registry to create the schema in.
     * 
     */
    private UndeferrableValue<String> registryArn;

    public String registryArn() {
        if (registryArn == null) return null;
        return registryArn.getValue("SchemaArgs.registryArn");
    }

    /**
     * The schema definition using the `data_format` setting for `schema_name`.
     * 
     */
    private UndeferrableValue<String> schemaDefinition;

    public String schemaDefinition() {
        if (schemaDefinition == null) return null;
        return schemaDefinition.getValue("SchemaArgs.schemaDefinition");
    }

    /**
     * The Name of the schema.
     * 
     */
    private UndeferrableValue<String> schemaName;

    public String schemaName() {
        if (schemaName == null) return null;
        return schemaName.getValue("SchemaArgs.schemaName");
    }

    /**
     * Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("SchemaArgs.tags");
    }

}
