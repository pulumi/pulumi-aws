// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appsync;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.appsync.inputs.FunctionRuntimeArgs;
import com.pulumi.policypacks.aws.appsync.inputs.FunctionSyncConfigArgs;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:appsync/function:Function")
public final class FunctionArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * ID of the associated AppSync API.
     * 
     */
    @PolicyResourceProperty(name="apiId", flag="unknown_apiId")
    private String value_apiId;
    private boolean unknown_apiId;
    public String apiId() {
        if (!unknown_apiId) return value_apiId;
        throw new UndeferrableValueException("Value 'FunctionArgs.apiId' is not present");
    }

    /**
     * The function code that contains the request and response functions. When code is used, the runtime is required. The runtime value must be APPSYNC_JS.
     * 
     */
    @PolicyResourceProperty(name="code", flag="unknown_code")
    private String value_code;
    private boolean unknown_code;
    public String code() {
        if (!unknown_code) return value_code;
        throw new UndeferrableValueException("Value 'FunctionArgs.code' is not present");
    }

    /**
     * Function data source name.
     * 
     */
    @PolicyResourceProperty(name="dataSource", flag="unknown_dataSource")
    private String value_dataSource;
    private boolean unknown_dataSource;
    public String dataSource() {
        if (!unknown_dataSource) return value_dataSource;
        throw new UndeferrableValueException("Value 'FunctionArgs.dataSource' is not present");
    }

    /**
     * Function description.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private String value_description;
    private boolean unknown_description;
    public String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'FunctionArgs.description' is not present");
    }

    /**
     * Version of the request mapping template. Currently the supported value is `2018-05-29`. Does not apply when specifying `code`.
     * 
     */
    @PolicyResourceProperty(name="functionVersion", flag="unknown_functionVersion")
    private String value_functionVersion;
    private boolean unknown_functionVersion;
    public String functionVersion() {
        if (!unknown_functionVersion) return value_functionVersion;
        throw new UndeferrableValueException("Value 'FunctionArgs.functionVersion' is not present");
    }

    /**
     * Maximum batching size for a resolver. Valid values are between `0` and `2000`.
     * 
     */
    @PolicyResourceProperty(name="maxBatchSize", flag="unknown_maxBatchSize")
    private Integer value_maxBatchSize;
    private boolean unknown_maxBatchSize;
    public Integer maxBatchSize() {
        if (!unknown_maxBatchSize) return value_maxBatchSize;
        throw new UndeferrableValueException("Value 'FunctionArgs.maxBatchSize' is not present");
    }

    /**
     * Function name. The function name does not have to be unique.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'FunctionArgs.name' is not present");
    }

    /**
     * Function request mapping template. Functions support only the 2018-05-29 version of the request mapping template.
     * 
     */
    @PolicyResourceProperty(name="requestMappingTemplate", flag="unknown_requestMappingTemplate")
    private String value_requestMappingTemplate;
    private boolean unknown_requestMappingTemplate;
    public String requestMappingTemplate() {
        if (!unknown_requestMappingTemplate) return value_requestMappingTemplate;
        throw new UndeferrableValueException("Value 'FunctionArgs.requestMappingTemplate' is not present");
    }

    /**
     * Function response mapping template.
     * 
     */
    @PolicyResourceProperty(name="responseMappingTemplate", flag="unknown_responseMappingTemplate")
    private String value_responseMappingTemplate;
    private boolean unknown_responseMappingTemplate;
    public String responseMappingTemplate() {
        if (!unknown_responseMappingTemplate) return value_responseMappingTemplate;
        throw new UndeferrableValueException("Value 'FunctionArgs.responseMappingTemplate' is not present");
    }

    /**
     * Describes a runtime used by an AWS AppSync pipeline resolver or AWS AppSync function. Specifies the name and version of the runtime to use. Note that if a runtime is specified, code must also be specified. See `runtime` Block for details.
     * 
     */
    @PolicyResourceProperty(name="runtime", flag="unknown_runtime")
    private FunctionRuntimeArgs value_runtime;
    private boolean unknown_runtime;
    public FunctionRuntimeArgs runtime() {
        if (!unknown_runtime) return value_runtime;
        throw new UndeferrableValueException("Value 'FunctionArgs.runtime' is not present");
    }

    /**
     * Describes a Sync configuration for a resolver. See `sync_config` Block for details.
     * 
     */
    @PolicyResourceProperty(name="syncConfig", flag="unknown_syncConfig")
    private FunctionSyncConfigArgs value_syncConfig;
    private boolean unknown_syncConfig;
    public FunctionSyncConfigArgs syncConfig() {
        if (!unknown_syncConfig) return value_syncConfig;
        throw new UndeferrableValueException("Value 'FunctionArgs.syncConfig' is not present");
    }

}
