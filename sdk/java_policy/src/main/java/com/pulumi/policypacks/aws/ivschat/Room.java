// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ivschat;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.ivschat.outputs.RoomMessageReviewHandler;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ivschat/room:Room")
public final class Room extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * ARN of the Room.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'Room.arn' is not present");
    }

    /**
     * List of Logging Configuration
     * ARNs to attach to the room.
     * 
     */
    @PolicyResourceProperty(name="loggingConfigurationIdentifiers", flag="unknown_loggingConfigurationIdentifiers")
    private @Nullable List<String> value_loggingConfigurationIdentifiers;
    private boolean unknown_loggingConfigurationIdentifiers;
    public @Nullable List<String> loggingConfigurationIdentifiers() {
        if (!unknown_loggingConfigurationIdentifiers) return value_loggingConfigurationIdentifiers;
        throw new UndeferrableValueException("Value 'Room.loggingConfigurationIdentifiers' is not present");
    }

    /**
     * Maximum number of characters in a single
     * message. Messages are expected to be UTF-8 encoded and this limit applies
     * specifically to rune/code-point count, not number of bytes.
     * 
     */
    @PolicyResourceProperty(name="maximumMessageLength", flag="unknown_maximumMessageLength")
    private Integer value_maximumMessageLength;
    private boolean unknown_maximumMessageLength;
    public Integer maximumMessageLength() {
        if (!unknown_maximumMessageLength) return value_maximumMessageLength;
        throw new UndeferrableValueException("Value 'Room.maximumMessageLength' is not present");
    }

    /**
     * Maximum number of messages per
     * second that can be sent to the room (by all clients).
     * 
     */
    @PolicyResourceProperty(name="maximumMessageRatePerSecond", flag="unknown_maximumMessageRatePerSecond")
    private Integer value_maximumMessageRatePerSecond;
    private boolean unknown_maximumMessageRatePerSecond;
    public Integer maximumMessageRatePerSecond() {
        if (!unknown_maximumMessageRatePerSecond) return value_maximumMessageRatePerSecond;
        throw new UndeferrableValueException("Value 'Room.maximumMessageRatePerSecond' is not present");
    }

    /**
     * Configuration information for optional
     * review of messages.
     * 
     */
    @PolicyResourceProperty(name="messageReviewHandler", flag="unknown_messageReviewHandler")
    private @Nullable RoomMessageReviewHandler value_messageReviewHandler;
    private boolean unknown_messageReviewHandler;
    public @Nullable RoomMessageReviewHandler messageReviewHandler() {
        if (!unknown_messageReviewHandler) return value_messageReviewHandler;
        throw new UndeferrableValueException("Value 'Room.messageReviewHandler' is not present");
    }

    /**
     * Room name.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'Room.name' is not present");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'Room.tags' is not present");
    }

    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'Room.tagsAll' is not present");
    }

}
