// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.apigateway;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:apigateway/domainNameAccessAssociation:DomainNameAccessAssociation")
public final class DomainNameAccessAssociation extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The identifier of the domain name access association source. For a `VPCE`, the value is the VPC endpoint ID.
     * 
     */
    @PolicyResourceProperty(name="accessAssociationSource", flag="unknown_accessAssociationSource")
    private String value_accessAssociationSource;
    private boolean unknown_accessAssociationSource;
    public String accessAssociationSource() {
        if (!unknown_accessAssociationSource) return value_accessAssociationSource;
        throw new UndeferrableValueException("Value 'DomainNameAccessAssociation.accessAssociationSource' is not present");
    }

    /**
     * The type of the domain name access association source. Valid values are `VPCE`.
     * 
     */
    @PolicyResourceProperty(name="accessAssociationSourceType", flag="unknown_accessAssociationSourceType")
    private String value_accessAssociationSourceType;
    private boolean unknown_accessAssociationSourceType;
    public String accessAssociationSourceType() {
        if (!unknown_accessAssociationSourceType) return value_accessAssociationSourceType;
        throw new UndeferrableValueException("Value 'DomainNameAccessAssociation.accessAssociationSourceType' is not present");
    }

    /**
     * ARN of the domain name access association.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'DomainNameAccessAssociation.arn' is not present");
    }

    /**
     * The ARN of the domain name.
     * 
     */
    @PolicyResourceProperty(name="domainNameArn", flag="unknown_domainNameArn")
    private String value_domainNameArn;
    private boolean unknown_domainNameArn;
    public String domainNameArn() {
        if (!unknown_domainNameArn) return value_domainNameArn;
        throw new UndeferrableValueException("Value 'DomainNameAccessAssociation.domainNameArn' is not present");
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'DomainNameAccessAssociation.tags' is not present");
    }

    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'DomainNameAccessAssociation.tagsAll' is not present");
    }

}
