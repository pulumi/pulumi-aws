// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appmesh.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.appmesh.outputs.VirtualNodeSpecListenerConnectionPool;
import com.pulumi.policypacks.aws.appmesh.outputs.VirtualNodeSpecListenerHealthCheck;
import com.pulumi.policypacks.aws.appmesh.outputs.VirtualNodeSpecListenerOutlierDetection;
import com.pulumi.policypacks.aws.appmesh.outputs.VirtualNodeSpecListenerPortMapping;
import com.pulumi.policypacks.aws.appmesh.outputs.VirtualNodeSpecListenerTimeout;
import com.pulumi.policypacks.aws.appmesh.outputs.VirtualNodeSpecListenerTls;
import javax.annotation.Nullable;


public final class VirtualNodeSpecListener {

    /**
     * Connection pool information for the listener.
     * 
     */
    private @Nullable UndeferrableValue<VirtualNodeSpecListenerConnectionPool> connectionPool;

    public @Nullable VirtualNodeSpecListenerConnectionPool connectionPool() {
        if (connectionPool == null) return null;
        return connectionPool.getValue("VirtualNodeSpecListener.connectionPool");
    }

    /**
     * Health check information for the listener.
     * 
     */
    private @Nullable UndeferrableValue<VirtualNodeSpecListenerHealthCheck> healthCheck;

    public @Nullable VirtualNodeSpecListenerHealthCheck healthCheck() {
        if (healthCheck == null) return null;
        return healthCheck.getValue("VirtualNodeSpecListener.healthCheck");
    }

    /**
     * Outlier detection information for the listener.
     * 
     */
    private @Nullable UndeferrableValue<VirtualNodeSpecListenerOutlierDetection> outlierDetection;

    public @Nullable VirtualNodeSpecListenerOutlierDetection outlierDetection() {
        if (outlierDetection == null) return null;
        return outlierDetection.getValue("VirtualNodeSpecListener.outlierDetection");
    }

    /**
     * Port mapping information for the listener.
     * 
     */
    private UndeferrableValue<VirtualNodeSpecListenerPortMapping> portMapping;

    public VirtualNodeSpecListenerPortMapping portMapping() {
        if (portMapping == null) return null;
        return portMapping.getValue("VirtualNodeSpecListener.portMapping");
    }

    /**
     * Timeouts for different protocols.
     * 
     */
    private @Nullable UndeferrableValue<VirtualNodeSpecListenerTimeout> timeout;

    public @Nullable VirtualNodeSpecListenerTimeout timeout() {
        if (timeout == null) return null;
        return timeout.getValue("VirtualNodeSpecListener.timeout");
    }

    /**
     * Transport Layer Security (TLS) properties for the listener
     * 
     */
    private @Nullable UndeferrableValue<VirtualNodeSpecListenerTls> tls;

    public @Nullable VirtualNodeSpecListenerTls tls() {
        if (tls == null) return null;
        return tls.getValue("VirtualNodeSpecListener.tls");
    }

}
