// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.gamelift.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.gamelift.outputs.FleetRuntimeConfigurationServerProcess;
import java.lang.Integer;
import java.util.List;
import javax.annotation.Nullable;


public final class FleetRuntimeConfiguration {

    /**
     * Maximum amount of time (in seconds) that a game session can remain in status `ACTIVATING`.
     * 
     */
    private @Nullable UndeferrableValue<Integer> gameSessionActivationTimeoutSeconds;

    public @Nullable Integer gameSessionActivationTimeoutSeconds() {
        if (gameSessionActivationTimeoutSeconds == null) return null;
        return gameSessionActivationTimeoutSeconds.getValue("FleetRuntimeConfiguration.gameSessionActivationTimeoutSeconds");
    }

    /**
     * Maximum number of game sessions with status `ACTIVATING` to allow on an instance simultaneously.
     * 
     */
    private @Nullable UndeferrableValue<Integer> maxConcurrentGameSessionActivations;

    public @Nullable Integer maxConcurrentGameSessionActivations() {
        if (maxConcurrentGameSessionActivations == null) return null;
        return maxConcurrentGameSessionActivations.getValue("FleetRuntimeConfiguration.maxConcurrentGameSessionActivations");
    }

    /**
     * Collection of server process configurations that describe which server processes to run on each instance in a fleet. See below.
     * 
     */
    private @Nullable UndeferrableValue<List<FleetRuntimeConfigurationServerProcess>> serverProcesses;

    public @Nullable List<FleetRuntimeConfigurationServerProcess> serverProcesses() {
        if (serverProcesses == null) return null;
        return serverProcesses.getValue("FleetRuntimeConfiguration.serverProcesses");
    }

}
