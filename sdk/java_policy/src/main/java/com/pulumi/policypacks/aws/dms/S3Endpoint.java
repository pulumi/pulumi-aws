// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.dms;

import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;


@PolicyResourceType(type="aws:dms/s3Endpoint:S3Endpoint")
public final class S3Endpoint extends com.pulumi.resources.PolicyResource {

    /**
     * Whether to add column name information to the .csv output file. Default is `false`.
     * 
     */
    public Boolean addColumnName;



    /**
     * Whether to add padding. Default is `false`. (Ignored for source endpoints.)
     * 
     */
    public Boolean addTrailingPaddingCharacter;



    /**
     * S3 object prefix.
     * 
     */
    public String bucketFolder;



    /**
     * S3 bucket name.
     * 
     */
    public String bucketName;



    /**
     * Predefined (canned) access control list for objects created in an S3 bucket. Valid values include `none`, `private`, `public-read`, `public-read-write`, `authenticated-read`, `aws-exec-read`, `bucket-owner-read`, and `bucket-owner-full-control`. Default is `none`.
     * 
     */
    public String cannedAclForObjects;



    /**
     * Whether to write insert and update operations to .csv or .parquet output files. Default is `false`.
     * 
     */
    public Boolean cdcInsertsAndUpdates;



    /**
     * Whether to write insert operations to .csv or .parquet output files. Default is `false`.
     * 
     */
    public Boolean cdcInsertsOnly;



    /**
     * Maximum length of the interval, defined in seconds, after which to output a file to Amazon S3. (AWS default is `60`.)
     * 
     */
    public Integer cdcMaxBatchInterval;



    /**
     * Minimum file size condition as defined in kilobytes to output a file to Amazon S3. (AWS default is 32000 KB.)
     * 
     */
    public Integer cdcMinFileSize;



    /**
     * Folder path of CDC files. If `cdc_path` is set, AWS DMS reads CDC files from this path and replicates the data changes to the target endpoint. Supported in AWS DMS versions 3.4.2 and later.
     * 
     */
    public String cdcPath;



    /**
     * ARN for the certificate.
     * 
     */
    public String certificateArn;



    /**
     * Set to compress target files. Valid values are `GZIP` and `NONE`. Default is `NONE`. (Ignored for source endpoints.)
     * 
     */
    public String compressionType;



    /**
     * Delimiter used to separate columns in the source files. Default is `,`.
     * 
     */
    public String csvDelimiter;



    /**
     * Only applies if output files for a CDC load are written in .csv format. If `use_csv_no_sup_value` is set to `true`, string to use for all columns not included in the supplemental log. If you do not specify a string value, DMS uses the null value for these columns regardless of `use_csv_no_sup_value`. (Ignored for source endpoints.)
     * 
     */
    public String csvNoSupValue;



    /**
     * String to as null when writing to the target. (AWS default is `NULL`.)
     * 
     */
    public String csvNullValue;



    /**
     * Delimiter used to separate rows in the source files. Default is newline (_i.e._, `\n`).
     * 
     */
    public String csvRowDelimiter;



    /**
     * Output format for the files that AWS DMS uses to create S3 objects. Valid values are `csv` and `parquet`.  (Ignored for source endpoints -- only `csv` is valid.)
     * 
     */
    public String dataFormat;



    /**
     * Size of one data page in bytes. (AWS default is 1 MiB, _i.e._, `1048576`.)
     * 
     */
    public Integer dataPageSize;



    /**
     * Date separating delimiter to use during folder partitioning. Valid values are `SLASH`, `UNDERSCORE`, `DASH`, and `NONE`. (AWS default is `SLASH`.) (Ignored for source endpoints.)
     * 
     */
    public String datePartitionDelimiter;



    /**
     * Partition S3 bucket folders based on transaction commit dates. Default is `false`. (Ignored for source endpoints.)
     * 
     */
    public Boolean datePartitionEnabled;



    /**
     * Date format to use during folder partitioning. Use this parameter when `date_partition_enabled` is set to true. Valid values are `YYYYMMDD`, `YYYYMMDDHH`, `YYYYMM`, `MMYYYYDD`, and `DDMMYYYY`. (AWS default is `YYYYMMDD`.) (Ignored for source endpoints.)
     * 
     */
    public String datePartitionSequence;



    /**
     * Convert the current UTC time to a timezone. The conversion occurs when a date partition folder is created and a CDC filename is generated. The timezone format is Area/Location (_e.g._, `Europe/Paris`). Use this when `date_partition_enabled` is `true`. (Ignored for source endpoints.)
     * 
     */
    public String datePartitionTimezone;



    /**
     * Undocumented argument for use as directed by AWS Support.
     * 
     */
    public Boolean detachTargetOnLobLookupFailureParquet;



    /**
     * Maximum size in bytes of an encoded dictionary page of a column. (AWS default is 1 MiB, _i.e._, `1048576`.)
     * 
     */
    public Integer dictPageSizeLimit;



    /**
     * Whether to enable statistics for Parquet pages and row groups. Default is `true`.
     * 
     */
    public Boolean enableStatistics;



    /**
     * Type of encoding to use. Value values are `rle_dictionary`, `plain`, and `plain_dictionary`. (AWS default is `rle_dictionary`.)
     * 
     */
    public String encodingType;



    /**
     * Server-side encryption mode that you want to encrypt your .csv or .parquet object files copied to S3. Valid values are `SSE_S3` and `SSE_KMS`. (AWS default is `SSE_S3`.) (Ignored for source endpoints -- only `SSE_S3` is valid.)
     * 
     */
    public String encryptionMode;



    /**
     * ARN for the endpoint.
     * 
     */
    public String endpointArn;



    /**
     * Database endpoint identifier. Identifiers must contain from 1 to 255 alphanumeric characters or hyphens, begin with a letter, contain only ASCII letters, digits, and hyphens, not end with a hyphen, and not contain two consecutive hyphens.
     * 
     */
    public String endpointId;



    /**
     * Type of endpoint. Valid values are `source`, `target`.
     * 
     */
    public String endpointType;



    /**
     * Expanded name for the engine name.
     * 
     */
    public String engineDisplayName;



    /**
     * Bucket owner to prevent sniping. Value is an AWS account ID.
     * 
     */
    public String expectedBucketOwner;



    /**
     * Can be used for cross-account validation. Use it in another account with `aws.dms.S3Endpoint` to create the endpoint cross-account.
     * 
     */
    public String externalId;



    /**
     * JSON document that describes how AWS DMS should interpret the data.
     * 
     */
    public String externalTableDefinition;



    /**
     * Whether to integrate AWS Glue Data Catalog with an Amazon S3 target. See [Using AWS Glue Data Catalog with an Amazon S3 target for AWS DMS](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.S3.html#CHAP_Target.S3.GlueCatalog) for more information. Default is `false`.
     * 
     */
    public Boolean glueCatalogGeneration;



    /**
     * When this value is set to `1`, DMS ignores the first row header in a .csv file. (AWS default is `0`.)
     * 
     */
    public Integer ignoreHeaderRows;



    /**
     * Whether to enable a full load to write INSERT operations to the .csv output files only to indicate how the rows were added to the source database. Default is `false`.
     * 
     */
    public Boolean includeOpForFullLoad;



    /**
     * ARN for the KMS key that will be used to encrypt the connection parameters. If you do not specify a value for `kms_key_arn`, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region.
     * 
     */
    public String kmsKeyArn;



    /**
     * Maximum size (in KB) of any .csv file to be created while migrating to an S3 target during full load. Valid values are from `1` to `1048576`. (AWS default is 1 GB, _i.e._, `1048576`.)
     * 
     */
    public Integer maxFileSize;



    /**
     * Specifies the precision of any TIMESTAMP column values written to an S3 object file in .parquet format. Default is `false`. (Ignored for source endpoints.)
     * 
     */
    public Boolean parquetTimestampInMillisecond;



    /**
     * Version of the .parquet file format. Valid values are `parquet-1-0` and `parquet-2-0`. (AWS default is `parquet-1-0`.) (Ignored for source endpoints.)
     * 
     */
    public String parquetVersion;



    /**
     * Whether DMS saves the transaction order for a CDC load on the S3 target specified by `cdc_path`. Default is `false`. (Ignored for source endpoints.)
     * 
     */
    public Boolean preserveTransactions;



    /**
     * For an S3 source, whether each leading double quotation mark has to be followed by an ending double quotation mark. Default is `true`.
     * 
     */
    public Boolean rfc4180;



    /**
     * Number of rows in a row group. (AWS default is `10000`.)
     * 
     */
    public Integer rowGroupLength;



    /**
     * When `encryption_mode` is `SSE_KMS`, ARN for the AWS KMS key. (Ignored for source endpoints -- only `SSE_S3` `encryption_mode` is valid.)
     * 
     */
    public String serverSideEncryptionKmsKeyId;



    /**
     * ARN of the IAM role with permissions to the S3 Bucket.
     * 
     * The following arguments are optional:
     * 
     */
    public String serviceAccessRoleArn;



    /**
     * SSL mode to use for the connection. Valid values are `none`, `require`, `verify-ca`, `verify-full`. (AWS default is `none`.)
     * 
     */
    public String sslMode;



    /**
     * Status of the endpoint.
     * 
     */
    public String status;



    /**
     * Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



    /**
     * Column to add with timestamp information to the endpoint data for an Amazon S3 target.
     * 
     */
    public String timestampColumnName;



    /**
     * Whether to use `csv_no_sup_value` for columns not included in the supplemental log. (Ignored for source endpoints.)
     * 
     */
    public Boolean useCsvNoSupValue;



    /**
     * When set to `true`, uses the task start time as the timestamp column value instead of the time data is written to target. For full load, when set to `true`, each row of the timestamp column contains the task start time. For CDC loads, each row of the timestamp column contains the transaction commit time.When set to false, the full load timestamp in the timestamp column increments with the time data arrives at the target. Default is `false`.
     * 
     */
    public Boolean useTaskStartTimeForFullLoadTimestamp;



}
