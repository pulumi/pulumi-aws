// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.medialive.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.medialive.outputs.ChannelEncoderSettingsAudioDescription;
import com.pulumi.policypacks.aws.medialive.outputs.ChannelEncoderSettingsAvailBlanking;
import com.pulumi.policypacks.aws.medialive.outputs.ChannelEncoderSettingsCaptionDescription;
import com.pulumi.policypacks.aws.medialive.outputs.ChannelEncoderSettingsGlobalConfiguration;
import com.pulumi.policypacks.aws.medialive.outputs.ChannelEncoderSettingsMotionGraphicsConfiguration;
import com.pulumi.policypacks.aws.medialive.outputs.ChannelEncoderSettingsNielsenConfiguration;
import com.pulumi.policypacks.aws.medialive.outputs.ChannelEncoderSettingsOutputGroup;
import com.pulumi.policypacks.aws.medialive.outputs.ChannelEncoderSettingsTimecodeConfig;
import com.pulumi.policypacks.aws.medialive.outputs.ChannelEncoderSettingsVideoDescription;
import java.util.List;
import javax.annotation.Nullable;


public final class ChannelEncoderSettings {

    /**
     * Audio descriptions for the channel. See Audio Descriptions for more details.
     * 
     */
    @PolicyResourceProperty(name="audioDescriptions", flag="unknown_audioDescriptions")
    private @Nullable List<ChannelEncoderSettingsAudioDescription> value_audioDescriptions;
    private boolean unknown_audioDescriptions;
    public @Nullable List<ChannelEncoderSettingsAudioDescription> audioDescriptions() {
        if (!unknown_audioDescriptions) return value_audioDescriptions;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettings.audioDescriptions' is not present");
    }

    /**
     * Settings for ad avail blanking. See Avail Blanking for more details.
     * 
     */
    @PolicyResourceProperty(name="availBlanking", flag="unknown_availBlanking")
    private @Nullable ChannelEncoderSettingsAvailBlanking value_availBlanking;
    private boolean unknown_availBlanking;
    public @Nullable ChannelEncoderSettingsAvailBlanking availBlanking() {
        if (!unknown_availBlanking) return value_availBlanking;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettings.availBlanking' is not present");
    }

    /**
     * Caption Descriptions. See Caption Descriptions for more details.
     * 
     */
    @PolicyResourceProperty(name="captionDescriptions", flag="unknown_captionDescriptions")
    private @Nullable List<ChannelEncoderSettingsCaptionDescription> value_captionDescriptions;
    private boolean unknown_captionDescriptions;
    public @Nullable List<ChannelEncoderSettingsCaptionDescription> captionDescriptions() {
        if (!unknown_captionDescriptions) return value_captionDescriptions;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettings.captionDescriptions' is not present");
    }

    /**
     * Configuration settings that apply to the event as a whole. See Global Configuration for more details.
     * 
     */
    @PolicyResourceProperty(name="globalConfiguration", flag="unknown_globalConfiguration")
    private @Nullable ChannelEncoderSettingsGlobalConfiguration value_globalConfiguration;
    private boolean unknown_globalConfiguration;
    public @Nullable ChannelEncoderSettingsGlobalConfiguration globalConfiguration() {
        if (!unknown_globalConfiguration) return value_globalConfiguration;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettings.globalConfiguration' is not present");
    }

    /**
     * Settings for motion graphics. See Motion Graphics Configuration for more details.
     * 
     */
    @PolicyResourceProperty(name="motionGraphicsConfiguration", flag="unknown_motionGraphicsConfiguration")
    private @Nullable ChannelEncoderSettingsMotionGraphicsConfiguration value_motionGraphicsConfiguration;
    private boolean unknown_motionGraphicsConfiguration;
    public @Nullable ChannelEncoderSettingsMotionGraphicsConfiguration motionGraphicsConfiguration() {
        if (!unknown_motionGraphicsConfiguration) return value_motionGraphicsConfiguration;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettings.motionGraphicsConfiguration' is not present");
    }

    /**
     * Nielsen configuration settings. See Nielsen Configuration for more details.
     * 
     */
    @PolicyResourceProperty(name="nielsenConfiguration", flag="unknown_nielsenConfiguration")
    private @Nullable ChannelEncoderSettingsNielsenConfiguration value_nielsenConfiguration;
    private boolean unknown_nielsenConfiguration;
    public @Nullable ChannelEncoderSettingsNielsenConfiguration nielsenConfiguration() {
        if (!unknown_nielsenConfiguration) return value_nielsenConfiguration;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettings.nielsenConfiguration' is not present");
    }

    /**
     * Output groups for the channel. See Output Groups for more details.
     * 
     */
    @PolicyResourceProperty(name="outputGroups", flag="unknown_outputGroups")
    private List<ChannelEncoderSettingsOutputGroup> value_outputGroups;
    private boolean unknown_outputGroups;
    public List<ChannelEncoderSettingsOutputGroup> outputGroups() {
        if (!unknown_outputGroups) return value_outputGroups;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettings.outputGroups' is not present");
    }

    /**
     * Contains settings used to acquire and adjust timecode information from inputs. See Timecode Config for more details.
     * 
     */
    @PolicyResourceProperty(name="timecodeConfig", flag="unknown_timecodeConfig")
    private ChannelEncoderSettingsTimecodeConfig value_timecodeConfig;
    private boolean unknown_timecodeConfig;
    public ChannelEncoderSettingsTimecodeConfig timecodeConfig() {
        if (!unknown_timecodeConfig) return value_timecodeConfig;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettings.timecodeConfig' is not present");
    }

    /**
     * Video Descriptions. See Video Descriptions for more details.
     * 
     */
    @PolicyResourceProperty(name="videoDescriptions", flag="unknown_videoDescriptions")
    private @Nullable List<ChannelEncoderSettingsVideoDescription> value_videoDescriptions;
    private boolean unknown_videoDescriptions;
    public @Nullable List<ChannelEncoderSettingsVideoDescription> videoDescriptions() {
        if (!unknown_videoDescriptions) return value_videoDescriptions;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettings.videoDescriptions' is not present");
    }

}
