// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.medialive.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.medialive.outputs.ChannelEncoderSettingsAudioDescription;
import com.pulumi.policypacks.aws.medialive.outputs.ChannelEncoderSettingsAvailBlanking;
import com.pulumi.policypacks.aws.medialive.outputs.ChannelEncoderSettingsCaptionDescription;
import com.pulumi.policypacks.aws.medialive.outputs.ChannelEncoderSettingsGlobalConfiguration;
import com.pulumi.policypacks.aws.medialive.outputs.ChannelEncoderSettingsMotionGraphicsConfiguration;
import com.pulumi.policypacks.aws.medialive.outputs.ChannelEncoderSettingsNielsenConfiguration;
import com.pulumi.policypacks.aws.medialive.outputs.ChannelEncoderSettingsOutputGroup;
import com.pulumi.policypacks.aws.medialive.outputs.ChannelEncoderSettingsTimecodeConfig;
import com.pulumi.policypacks.aws.medialive.outputs.ChannelEncoderSettingsVideoDescription;
import java.util.List;
import javax.annotation.Nullable;


public final class ChannelEncoderSettings {

    /**
     * Audio descriptions for the channel. See Audio Descriptions for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<ChannelEncoderSettingsAudioDescription>> audioDescriptions;

    public @Nullable List<ChannelEncoderSettingsAudioDescription> audioDescriptions() {
        if (audioDescriptions == null) return null;
        return audioDescriptions.getValue("ChannelEncoderSettings.audioDescriptions");
    }

    /**
     * Settings for ad avail blanking. See Avail Blanking for more details.
     * 
     */
    private @Nullable UndeferrableValue<ChannelEncoderSettingsAvailBlanking> availBlanking;

    public @Nullable ChannelEncoderSettingsAvailBlanking availBlanking() {
        if (availBlanking == null) return null;
        return availBlanking.getValue("ChannelEncoderSettings.availBlanking");
    }

    /**
     * Caption Descriptions. See Caption Descriptions for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<ChannelEncoderSettingsCaptionDescription>> captionDescriptions;

    public @Nullable List<ChannelEncoderSettingsCaptionDescription> captionDescriptions() {
        if (captionDescriptions == null) return null;
        return captionDescriptions.getValue("ChannelEncoderSettings.captionDescriptions");
    }

    /**
     * Configuration settings that apply to the event as a whole. See Global Configuration for more details.
     * 
     */
    private @Nullable UndeferrableValue<ChannelEncoderSettingsGlobalConfiguration> globalConfiguration;

    public @Nullable ChannelEncoderSettingsGlobalConfiguration globalConfiguration() {
        if (globalConfiguration == null) return null;
        return globalConfiguration.getValue("ChannelEncoderSettings.globalConfiguration");
    }

    /**
     * Settings for motion graphics. See Motion Graphics Configuration for more details.
     * 
     */
    private @Nullable UndeferrableValue<ChannelEncoderSettingsMotionGraphicsConfiguration> motionGraphicsConfiguration;

    public @Nullable ChannelEncoderSettingsMotionGraphicsConfiguration motionGraphicsConfiguration() {
        if (motionGraphicsConfiguration == null) return null;
        return motionGraphicsConfiguration.getValue("ChannelEncoderSettings.motionGraphicsConfiguration");
    }

    /**
     * Nielsen configuration settings. See Nielsen Configuration for more details.
     * 
     */
    private @Nullable UndeferrableValue<ChannelEncoderSettingsNielsenConfiguration> nielsenConfiguration;

    public @Nullable ChannelEncoderSettingsNielsenConfiguration nielsenConfiguration() {
        if (nielsenConfiguration == null) return null;
        return nielsenConfiguration.getValue("ChannelEncoderSettings.nielsenConfiguration");
    }

    /**
     * Output groups for the channel. See Output Groups for more details.
     * 
     */
    private UndeferrableValue<List<ChannelEncoderSettingsOutputGroup>> outputGroups;

    public List<ChannelEncoderSettingsOutputGroup> outputGroups() {
        if (outputGroups == null) return null;
        return outputGroups.getValue("ChannelEncoderSettings.outputGroups");
    }

    /**
     * Contains settings used to acquire and adjust timecode information from inputs. See Timecode Config for more details.
     * 
     */
    private UndeferrableValue<ChannelEncoderSettingsTimecodeConfig> timecodeConfig;

    public ChannelEncoderSettingsTimecodeConfig timecodeConfig() {
        if (timecodeConfig == null) return null;
        return timecodeConfig.getValue("ChannelEncoderSettings.timecodeConfig");
    }

    /**
     * Video Descriptions. See Video Descriptions for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<ChannelEncoderSettingsVideoDescription>> videoDescriptions;

    public @Nullable List<ChannelEncoderSettingsVideoDescription> videoDescriptions() {
        if (videoDescriptions == null) return null;
        return videoDescriptions.getValue("ChannelEncoderSettings.videoDescriptions");
    }

}
