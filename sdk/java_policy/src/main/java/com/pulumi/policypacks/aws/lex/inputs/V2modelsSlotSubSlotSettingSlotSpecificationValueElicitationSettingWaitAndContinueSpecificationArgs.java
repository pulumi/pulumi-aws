// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.lex.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.lex.inputs.V2modelsSlotSubSlotSettingSlotSpecificationValueElicitationSettingWaitAndContinueSpecificationContinueResponseArgs;
import com.pulumi.policypacks.aws.lex.inputs.V2modelsSlotSubSlotSettingSlotSpecificationValueElicitationSettingWaitAndContinueSpecificationStillWaitingResponseArgs;
import com.pulumi.policypacks.aws.lex.inputs.V2modelsSlotSubSlotSettingSlotSpecificationValueElicitationSettingWaitAndContinueSpecificationWaitingResponseArgs;
import java.lang.Boolean;
import java.util.List;
import javax.annotation.Nullable;


public final class V2modelsSlotSubSlotSettingSlotSpecificationValueElicitationSettingWaitAndContinueSpecificationArgs {

    /**
     * Specifies whether the bot will wait for a user to respond.
     * When this field is `false`, wait and continue responses for a slot aren&#39;t used.
     * If the active field isn&#39;t specified, the default is `true`.
     * 
     */
    @PolicyResourceProperty(name="active", flag="unknown_active")
    private Boolean value_active;
    private boolean unknown_active;
    public Boolean active() {
        if (!unknown_active) return value_active;
        throw new UndeferrableValueException("Value 'V2modelsSlotSubSlotSettingSlotSpecificationValueElicitationSettingWaitAndContinueSpecificationArgs.active' is not present");
    }

    /**
     * Response that Amazon Lex sends to indicate that the bot is ready to continue the conversation.
     * See the `continue_response` argument reference below.
     * 
     */
    @PolicyResourceProperty(name="continueResponses", flag="unknown_continueResponses")
    private List<V2modelsSlotSubSlotSettingSlotSpecificationValueElicitationSettingWaitAndContinueSpecificationContinueResponseArgs> value_continueResponses;
    private boolean unknown_continueResponses;
    public List<V2modelsSlotSubSlotSettingSlotSpecificationValueElicitationSettingWaitAndContinueSpecificationContinueResponseArgs> continueResponses() {
        if (!unknown_continueResponses) return value_continueResponses;
        throw new UndeferrableValueException("Value 'V2modelsSlotSubSlotSettingSlotSpecificationValueElicitationSettingWaitAndContinueSpecificationArgs.continueResponses' is not present");
    }

    /**
     * Response that Amazon Lex sends periodically to the user to indicate that the bot is still waiting for input from the user.
     * See the `still_waiting_response` argument reference below.
     * 
     */
    @PolicyResourceProperty(name="stillWaitingResponses", flag="unknown_stillWaitingResponses")
    private List<V2modelsSlotSubSlotSettingSlotSpecificationValueElicitationSettingWaitAndContinueSpecificationStillWaitingResponseArgs> value_stillWaitingResponses;
    private boolean unknown_stillWaitingResponses;
    public List<V2modelsSlotSubSlotSettingSlotSpecificationValueElicitationSettingWaitAndContinueSpecificationStillWaitingResponseArgs> stillWaitingResponses() {
        if (!unknown_stillWaitingResponses) return value_stillWaitingResponses;
        throw new UndeferrableValueException("Value 'V2modelsSlotSubSlotSettingSlotSpecificationValueElicitationSettingWaitAndContinueSpecificationArgs.stillWaitingResponses' is not present");
    }

    /**
     * Response that Amazon Lex sends to indicate that the bot is waiting for the conversation to continue.
     * See the `waiting_response` argument reference below.
     * 
     */
    @PolicyResourceProperty(name="waitingResponses", flag="unknown_waitingResponses")
    private List<V2modelsSlotSubSlotSettingSlotSpecificationValueElicitationSettingWaitAndContinueSpecificationWaitingResponseArgs> value_waitingResponses;
    private boolean unknown_waitingResponses;
    public List<V2modelsSlotSubSlotSettingSlotSpecificationValueElicitationSettingWaitAndContinueSpecificationWaitingResponseArgs> waitingResponses() {
        if (!unknown_waitingResponses) return value_waitingResponses;
        throw new UndeferrableValueException("Value 'V2modelsSlotSubSlotSettingSlotSpecificationValueElicitationSettingWaitAndContinueSpecificationArgs.waitingResponses' is not present");
    }

}
