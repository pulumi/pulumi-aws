// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.dms.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.String;
import javax.annotation.Nullable;


public final class EndpointRedshiftSettingsArgs {

    /**
     * Custom S3 Bucket Object prefix for intermediate storage.
     * 
     */
    @PolicyResourceProperty(name="bucketFolder", flag="unknown_bucketFolder")
    private String value_bucketFolder;
    private boolean unknown_bucketFolder;
    public String bucketFolder() {
        if (!unknown_bucketFolder) return value_bucketFolder;
        throw new UndeferrableValueException("Value 'EndpointRedshiftSettingsArgs.bucketFolder' is not present");
    }

    /**
     * Custom S3 Bucket name for intermediate storage.
     * 
     */
    @PolicyResourceProperty(name="bucketName", flag="unknown_bucketName")
    private String value_bucketName;
    private boolean unknown_bucketName;
    public String bucketName() {
        if (!unknown_bucketName) return value_bucketName;
        throw new UndeferrableValueException("Value 'EndpointRedshiftSettingsArgs.bucketName' is not present");
    }

    /**
     * The server-side encryption mode that you want to encrypt your intermediate .csv object files copied to S3. Defaults to `SSE_S3`. Valid values are `SSE_S3` and `SSE_KMS`.
     * 
     */
    @PolicyResourceProperty(name="encryptionMode", flag="unknown_encryptionMode")
    private String value_encryptionMode;
    private boolean unknown_encryptionMode;
    public String encryptionMode() {
        if (!unknown_encryptionMode) return value_encryptionMode;
        throw new UndeferrableValueException("Value 'EndpointRedshiftSettingsArgs.encryptionMode' is not present");
    }

    /**
     * ARN or Id of KMS Key to use when `encryption_mode` is `SSE_KMS`.
     * 
     */
    @PolicyResourceProperty(name="serverSideEncryptionKmsKeyId", flag="unknown_serverSideEncryptionKmsKeyId")
    private String value_serverSideEncryptionKmsKeyId;
    private boolean unknown_serverSideEncryptionKmsKeyId;
    public String serverSideEncryptionKmsKeyId() {
        if (!unknown_serverSideEncryptionKmsKeyId) return value_serverSideEncryptionKmsKeyId;
        throw new UndeferrableValueException("Value 'EndpointRedshiftSettingsArgs.serverSideEncryptionKmsKeyId' is not present");
    }

    /**
     * Amazon Resource Name (ARN) of the IAM Role with permissions to read from or write to the S3 Bucket for intermediate storage.
     * 
     */
    @PolicyResourceProperty(name="serviceAccessRoleArn", flag="unknown_serviceAccessRoleArn")
    private String value_serviceAccessRoleArn;
    private boolean unknown_serviceAccessRoleArn;
    public String serviceAccessRoleArn() {
        if (!unknown_serviceAccessRoleArn) return value_serviceAccessRoleArn;
        throw new UndeferrableValueException("Value 'EndpointRedshiftSettingsArgs.serviceAccessRoleArn' is not present");
    }

}
