// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appmesh.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.appmesh.outputs.GatewayRouteSpecHttp2RouteMatchHeader;
import com.pulumi.policypacks.aws.appmesh.outputs.GatewayRouteSpecHttp2RouteMatchHostname;
import com.pulumi.policypacks.aws.appmesh.outputs.GatewayRouteSpecHttp2RouteMatchPath;
import com.pulumi.policypacks.aws.appmesh.outputs.GatewayRouteSpecHttp2RouteMatchQueryParameter;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class GatewayRouteSpecHttp2RouteMatch {

    /**
     * Client request headers to match on.
     * 
     */
    private @Nullable UndeferrableValue<List<GatewayRouteSpecHttp2RouteMatchHeader>> headers;

    public @Nullable List<GatewayRouteSpecHttp2RouteMatchHeader> headers() {
        if (headers == null) return null;
        return headers.getValue("GatewayRouteSpecHttp2RouteMatch.headers");
    }

    /**
     * Host name to match on.
     * 
     */
    private @Nullable UndeferrableValue<GatewayRouteSpecHttp2RouteMatchHostname> hostname;

    public @Nullable GatewayRouteSpecHttp2RouteMatchHostname hostname() {
        if (hostname == null) return null;
        return hostname.getValue("GatewayRouteSpecHttp2RouteMatch.hostname");
    }

    /**
     * Client request path to match on.
     * 
     */
    private @Nullable UndeferrableValue<GatewayRouteSpecHttp2RouteMatchPath> path;

    public @Nullable GatewayRouteSpecHttp2RouteMatchPath path() {
        if (path == null) return null;
        return path.getValue("GatewayRouteSpecHttp2RouteMatch.path");
    }

    /**
     * The port number to match from the request.
     * 
     */
    private @Nullable UndeferrableValue<Integer> port;

    public @Nullable Integer port() {
        if (port == null) return null;
        return port.getValue("GatewayRouteSpecHttp2RouteMatch.port");
    }

    /**
     * Path to match requests with. This parameter must always start with `/`, which by itself matches all requests to the virtual service name.
     * 
     */
    private @Nullable UndeferrableValue<String> prefix;

    public @Nullable String prefix() {
        if (prefix == null) return null;
        return prefix.getValue("GatewayRouteSpecHttp2RouteMatch.prefix");
    }

    /**
     * Client request query parameters to match on.
     * 
     */
    private @Nullable UndeferrableValue<List<GatewayRouteSpecHttp2RouteMatchQueryParameter>> queryParameters;

    public @Nullable List<GatewayRouteSpecHttp2RouteMatchQueryParameter> queryParameters() {
        if (queryParameters == null) return null;
        return queryParameters.getValue("GatewayRouteSpecHttp2RouteMatch.queryParameters");
    }

}
