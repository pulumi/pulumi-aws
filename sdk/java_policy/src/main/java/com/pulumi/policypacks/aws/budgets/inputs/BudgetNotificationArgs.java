// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.budgets.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class BudgetNotificationArgs {

    /**
     * (Required) Comparison operator to use to evaluate the condition. Can be `LESS_THAN`, `EQUAL_TO` or `GREATER_THAN`.
     * 
     */
    @PolicyResourceProperty(name="comparisonOperator", flag="unknown_comparisonOperator")
    private String value_comparisonOperator;
    private boolean unknown_comparisonOperator;
    public String comparisonOperator() {
        if (!unknown_comparisonOperator) return value_comparisonOperator;
        throw new UndeferrableValueException("Value 'BudgetNotificationArgs.comparisonOperator' is not present");
    }

    /**
     * (Required) What kind of budget value to notify on. Can be `ACTUAL` or `FORECASTED`
     * 
     */
    @PolicyResourceProperty(name="notificationType", flag="unknown_notificationType")
    private String value_notificationType;
    private boolean unknown_notificationType;
    public String notificationType() {
        if (!unknown_notificationType) return value_notificationType;
        throw new UndeferrableValueException("Value 'BudgetNotificationArgs.notificationType' is not present");
    }

    /**
     * (Optional) E-Mail addresses to notify. Either this or `subscriber_sns_topic_arns` is required.
     * 
     */
    @PolicyResourceProperty(name="subscriberEmailAddresses", flag="unknown_subscriberEmailAddresses")
    private List<String> value_subscriberEmailAddresses;
    private boolean unknown_subscriberEmailAddresses;
    public List<String> subscriberEmailAddresses() {
        if (!unknown_subscriberEmailAddresses) return value_subscriberEmailAddresses;
        throw new UndeferrableValueException("Value 'BudgetNotificationArgs.subscriberEmailAddresses' is not present");
    }

    /**
     * (Optional) SNS topics to notify. Either this or `subscriber_email_addresses` is required.
     * 
     */
    @PolicyResourceProperty(name="subscriberSnsTopicArns", flag="unknown_subscriberSnsTopicArns")
    private List<String> value_subscriberSnsTopicArns;
    private boolean unknown_subscriberSnsTopicArns;
    public List<String> subscriberSnsTopicArns() {
        if (!unknown_subscriberSnsTopicArns) return value_subscriberSnsTopicArns;
        throw new UndeferrableValueException("Value 'BudgetNotificationArgs.subscriberSnsTopicArns' is not present");
    }

    /**
     * (Required) Threshold when the notification should be sent.
     * 
     */
    @PolicyResourceProperty(name="threshold", flag="unknown_threshold")
    private Double value_threshold;
    private boolean unknown_threshold;
    public Double threshold() {
        if (!unknown_threshold) return value_threshold;
        throw new UndeferrableValueException("Value 'BudgetNotificationArgs.threshold' is not present");
    }

    /**
     * (Required) What kind of threshold is defined. Can be `PERCENTAGE` OR `ABSOLUTE_VALUE`.
     * 
     */
    @PolicyResourceProperty(name="thresholdType", flag="unknown_thresholdType")
    private String value_thresholdType;
    private boolean unknown_thresholdType;
    public String thresholdType() {
        if (!unknown_thresholdType) return value_thresholdType;
        throw new UndeferrableValueException("Value 'BudgetNotificationArgs.thresholdType' is not present");
    }

}
