// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.identitystore;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.identitystore.outputs.UserAddresses;
import com.pulumi.policypacks.aws.identitystore.outputs.UserEmails;
import com.pulumi.policypacks.aws.identitystore.outputs.UserExternalId;
import com.pulumi.policypacks.aws.identitystore.outputs.UserName;
import com.pulumi.policypacks.aws.identitystore.outputs.UserPhoneNumbers;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:identitystore/user:User")
public final class User extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Details about the user&#39;s address. At most 1 address is allowed. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="addresses", flag="unknown_addresses")
    private @Nullable UserAddresses value_addresses;
    private boolean unknown_addresses;
    public @Nullable UserAddresses addresses() {
        if (!unknown_addresses) return value_addresses;
        throw new UndeferrableValueException("Value 'User.addresses' is not present");
    }

    /**
     * The name that is typically displayed when the user is referenced.
     * 
     */
    @PolicyResourceProperty(name="displayName", flag="unknown_displayName")
    private String value_displayName;
    private boolean unknown_displayName;
    public String displayName() {
        if (!unknown_displayName) return value_displayName;
        throw new UndeferrableValueException("Value 'User.displayName' is not present");
    }

    /**
     * Details about the user&#39;s email. At most 1 email is allowed. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="emails", flag="unknown_emails")
    private @Nullable UserEmails value_emails;
    private boolean unknown_emails;
    public @Nullable UserEmails emails() {
        if (!unknown_emails) return value_emails;
        throw new UndeferrableValueException("Value 'User.emails' is not present");
    }

    /**
     * A list of identifiers issued to this resource by an external identity provider.
     * 
     */
    @PolicyResourceProperty(name="externalIds", flag="unknown_externalIds")
    private List<UserExternalId> value_externalIds;
    private boolean unknown_externalIds;
    public List<UserExternalId> externalIds() {
        if (!unknown_externalIds) return value_externalIds;
        throw new UndeferrableValueException("Value 'User.externalIds' is not present");
    }

    /**
     * The globally unique identifier for the identity store that this user is in.
     * 
     */
    @PolicyResourceProperty(name="identityStoreId", flag="unknown_identityStoreId")
    private String value_identityStoreId;
    private boolean unknown_identityStoreId;
    public String identityStoreId() {
        if (!unknown_identityStoreId) return value_identityStoreId;
        throw new UndeferrableValueException("Value 'User.identityStoreId' is not present");
    }

    /**
     * The user&#39;s geographical region or location.
     * 
     */
    @PolicyResourceProperty(name="locale", flag="unknown_locale")
    private @Nullable String value_locale;
    private boolean unknown_locale;
    public @Nullable String locale() {
        if (!unknown_locale) return value_locale;
        throw new UndeferrableValueException("Value 'User.locale' is not present");
    }

    /**
     * Details about the user&#39;s full name. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private UserName value_name;
    private boolean unknown_name;
    public UserName name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'User.name' is not present");
    }

    /**
     * An alternate name for the user.
     * 
     */
    @PolicyResourceProperty(name="nickname", flag="unknown_nickname")
    private @Nullable String value_nickname;
    private boolean unknown_nickname;
    public @Nullable String nickname() {
        if (!unknown_nickname) return value_nickname;
        throw new UndeferrableValueException("Value 'User.nickname' is not present");
    }

    /**
     * Details about the user&#39;s phone number. At most 1 phone number is allowed. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="phoneNumbers", flag="unknown_phoneNumbers")
    private @Nullable UserPhoneNumbers value_phoneNumbers;
    private boolean unknown_phoneNumbers;
    public @Nullable UserPhoneNumbers phoneNumbers() {
        if (!unknown_phoneNumbers) return value_phoneNumbers;
        throw new UndeferrableValueException("Value 'User.phoneNumbers' is not present");
    }

    /**
     * The preferred language of the user.
     * 
     */
    @PolicyResourceProperty(name="preferredLanguage", flag="unknown_preferredLanguage")
    private @Nullable String value_preferredLanguage;
    private boolean unknown_preferredLanguage;
    public @Nullable String preferredLanguage() {
        if (!unknown_preferredLanguage) return value_preferredLanguage;
        throw new UndeferrableValueException("Value 'User.preferredLanguage' is not present");
    }

    /**
     * An URL that may be associated with the user.
     * 
     */
    @PolicyResourceProperty(name="profileUrl", flag="unknown_profileUrl")
    private @Nullable String value_profileUrl;
    private boolean unknown_profileUrl;
    public @Nullable String profileUrl() {
        if (!unknown_profileUrl) return value_profileUrl;
        throw new UndeferrableValueException("Value 'User.profileUrl' is not present");
    }

    /**
     * The user&#39;s time zone.
     * 
     */
    @PolicyResourceProperty(name="timezone", flag="unknown_timezone")
    private @Nullable String value_timezone;
    private boolean unknown_timezone;
    public @Nullable String timezone() {
        if (!unknown_timezone) return value_timezone;
        throw new UndeferrableValueException("Value 'User.timezone' is not present");
    }

    /**
     * The user&#39;s title.
     * 
     */
    @PolicyResourceProperty(name="title", flag="unknown_title")
    private @Nullable String value_title;
    private boolean unknown_title;
    public @Nullable String title() {
        if (!unknown_title) return value_title;
        throw new UndeferrableValueException("Value 'User.title' is not present");
    }

    /**
     * The identifier for this user in the identity store.
     * 
     */
    @PolicyResourceProperty(name="userId", flag="unknown_userId")
    private String value_userId;
    private boolean unknown_userId;
    public String userId() {
        if (!unknown_userId) return value_userId;
        throw new UndeferrableValueException("Value 'User.userId' is not present");
    }

    /**
     * A unique string used to identify the user. This value can consist of letters, accented characters, symbols, numbers, and punctuation. This value is specified at the time the user is created and stored as an attribute of the user object in the identity store. The limit is 128 characters.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="userName", flag="unknown_userName")
    private String value_userName;
    private boolean unknown_userName;
    public String userName() {
        if (!unknown_userName) return value_userName;
        throw new UndeferrableValueException("Value 'User.userName' is not present");
    }

    /**
     * The user type.
     * 
     */
    @PolicyResourceProperty(name="userType", flag="unknown_userType")
    private @Nullable String value_userType;
    private boolean unknown_userType;
    public @Nullable String userType() {
        if (!unknown_userType) return value_userType;
        throw new UndeferrableValueException("Value 'User.userType' is not present");
    }

}
