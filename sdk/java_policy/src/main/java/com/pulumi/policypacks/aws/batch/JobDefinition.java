// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.batch;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.batch.JobDefinitionEksProperties;
import com.pulumi.policypacks.aws.batch.JobDefinitionRetryStrategy;
import com.pulumi.policypacks.aws.batch.JobDefinitionTimeout;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;


@PolicyResourceType(type="aws:batch/jobDefinition:JobDefinition")
public final class JobDefinition extends com.pulumi.resources.PolicyResource {

    /**
     * ARN of the job definition, includes revision (`:#`).
     * 
     */
    public String arn;



    /**
     * ARN without the revision number.
     * 
     */
    public String arnPrefix;



    /**
     * Valid [container properties](http://docs.aws.amazon.com/batch/latest/APIReference/API_RegisterJobDefinition.html) provided as a single valid JSON document. This parameter is only valid if the `type` parameter is `container`.
     * 
     */
    public String containerProperties;



    /**
     * When updating a job definition a new revision is created. This parameter determines if the previous version is `deregistered` (`INACTIVE`) or left  `ACTIVE`. Defaults to `true`.
     * 
     */
    public Boolean deregisterOnNewRevision;



    /**
     * Valid [ECS properties](http://docs.aws.amazon.com/batch/latest/APIReference/API_RegisterJobDefinition.html) provided as a single valid JSON document. This parameter is only valid if the `type` parameter is `container`.
     * 
     */
    public String ecsProperties;



    /**
     * Valid eks properties. This parameter is only valid if the `type` parameter is `container`.
     * 
     */
    public JobDefinitionEksProperties eksProperties;



    /**
     * Name of the job definition.
     * 
     */
    public String name;



    /**
     * Valid [node properties](http://docs.aws.amazon.com/batch/latest/APIReference/API_RegisterJobDefinition.html) provided as a single valid JSON document. This parameter is required if the `type` parameter is `multinode`.
     * 
     */
    public String nodeProperties;



    /**
     * Parameter substitution placeholders to set in the job definition.
     * 
     */
    public Map<String,String> parameters;



    /**
     * Platform capabilities required by the job definition. If no value is specified, it defaults to `EC2`. To run the job on Fargate resources, specify `FARGATE`.
     * 
     */
    public List<String> platformCapabilities;



    /**
     * Whether to propagate the tags from the job definition to the corresponding Amazon ECS task. Default is `false`.
     * 
     */
    public Boolean propagateTags;



    /**
     * Retry strategy to use for failed jobs that are submitted with this job definition. Maximum number of `retry_strategy` is `1`.  Defined below.
     * 
     */
    public JobDefinitionRetryStrategy retryStrategy;



    /**
     * Revision of the job definition.
     * 
     */
    public Integer revision;



    /**
     * Scheduling priority of the job definition. This only affects jobs in job queues with a fair share policy. Jobs with a higher scheduling priority are scheduled before jobs with a lower scheduling priority. Allowed values `0` through `9999`.
     * 
     */
    public Integer schedulingPriority;



    /**
     * Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



    /**
     * Timeout for jobs so that if a job runs longer, AWS Batch terminates the job. Maximum number of `timeout` is `1`. Defined below.
     * 
     */
    public JobDefinitionTimeout timeout;



    /**
     * Type of job definition. Must be `container` or `multinode`.
     * 
     * The following arguments are optional:
     * 
     */
    public String type;



}
