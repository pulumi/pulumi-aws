// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.glue.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.String;
import javax.annotation.Nullable;


public final class JobCommandArgs {

    /**
     * The name of the job command. Defaults to `glueetl`. Use `pythonshell` for Python Shell Job Type, `glueray` for Ray Job Type, or `gluestreaming` for Streaming Job Type. `max_capacity` needs to be set if `pythonshell` is chosen.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'JobCommandArgs.name' is not present");
    }

    /**
     * The Python version being used to execute a Python shell job. Allowed values are 2, 3 or 3.9. Version 3 refers to Python 3.11 when `glue_version` is set to 5.0.
     * 
     */
    @PolicyResourceProperty(name="pythonVersion", flag="unknown_pythonVersion")
    private String value_pythonVersion;
    private boolean unknown_pythonVersion;
    public String pythonVersion() {
        if (!unknown_pythonVersion) return value_pythonVersion;
        throw new UndeferrableValueException("Value 'JobCommandArgs.pythonVersion' is not present");
    }

    /**
     * In Ray jobs, runtime is used to specify the versions of Ray, Python and additional libraries available in your environment. This field is not used in other job types. For supported runtime environment values, see [Working with Ray jobs](https://docs.aws.amazon.com/glue/latest/dg/ray-jobs-section.html#author-job-ray-runtimes) in the Glue Developer Guide.
     * 
     */
    @PolicyResourceProperty(name="runtime", flag="unknown_runtime")
    private String value_runtime;
    private boolean unknown_runtime;
    public String runtime() {
        if (!unknown_runtime) return value_runtime;
        throw new UndeferrableValueException("Value 'JobCommandArgs.runtime' is not present");
    }

    /**
     * Specifies the S3 path to a script that executes a job.
     * 
     */
    @PolicyResourceProperty(name="scriptLocation", flag="unknown_scriptLocation")
    private String value_scriptLocation;
    private boolean unknown_scriptLocation;
    public String scriptLocation() {
        if (!unknown_scriptLocation) return value_scriptLocation;
        throw new UndeferrableValueException("Value 'JobCommandArgs.scriptLocation' is not present");
    }

}
