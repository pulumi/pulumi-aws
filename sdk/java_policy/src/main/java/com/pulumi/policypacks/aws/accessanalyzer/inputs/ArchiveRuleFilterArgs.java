// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.accessanalyzer.inputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class ArchiveRuleFilterArgs {

    /**
     * Contains comparator.
     * 
     */
    private UndeferrableValue<List<String>> contains;

    public List<String> contains() {
        if (contains == null) return null;
        return contains.getValue("ArchiveRuleFilterArgs.contains");
    }

    /**
     * Filter criteria.
     * 
     */
    private UndeferrableValue<String> criteria;

    public String criteria() {
        if (criteria == null) return null;
        return criteria.getValue("ArchiveRuleFilterArgs.criteria");
    }

    /**
     * Equals comparator.
     * 
     */
    private UndeferrableValue<List<String>> eqs;

    public List<String> eqs() {
        if (eqs == null) return null;
        return eqs.getValue("ArchiveRuleFilterArgs.eqs");
    }

    /**
     * Boolean comparator.
     * 
     */
    private UndeferrableValue<String> exists;

    public String exists() {
        if (exists == null) return null;
        return exists.getValue("ArchiveRuleFilterArgs.exists");
    }

    /**
     * Not Equals comparator.
     * 
     */
    private UndeferrableValue<List<String>> neqs;

    public List<String> neqs() {
        if (neqs == null) return null;
        return neqs.getValue("ArchiveRuleFilterArgs.neqs");
    }

}
