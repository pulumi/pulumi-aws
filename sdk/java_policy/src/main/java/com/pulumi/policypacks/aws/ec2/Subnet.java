// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2;

import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;


@PolicyResourceType(type="aws:ec2/subnet:Subnet")
public final class Subnet extends com.pulumi.resources.PolicyResource {

    /**
     * The ARN of the subnet.
     * 
     */
    public String arn;



    /**
     * Specify true to indicate
     * that network interfaces created in the specified subnet should be
     * assigned an IPv6 address. Default is `false`
     * 
     */
    public Boolean assignIpv6AddressOnCreation;



    /**
     * AZ for the subnet.
     * 
     */
    public String availabilityZone;



    /**
     * AZ ID of the subnet. This argument is not supported in all regions or partitions. If necessary, use `availability_zone` instead.
     * 
     */
    public String availabilityZoneId;



    /**
     * The IPv4 CIDR block for the subnet.
     * 
     */
    public String cidrBlock;



    /**
     * The customer owned IPv4 address pool. Typically used with the `map_customer_owned_ip_on_launch` argument. The `outpost_arn` argument must be specified when configured.
     * 
     */
    public String customerOwnedIpv4Pool;



    /**
     * Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations. Default: `false`.
     * 
     */
    public Boolean enableDns64;



    /**
     * Indicates the device position for local network interfaces in this subnet. For example, 1 indicates local network interfaces in this subnet are the secondary network interface (eth1). A local network interface cannot be the primary network interface (eth0).
     * 
     */
    public Integer enableLniAtDeviceIndex;



    /**
     * Indicates whether to respond to DNS queries for instance hostnames with DNS A records. Default: `false`.
     * 
     */
    public Boolean enableResourceNameDnsARecordOnLaunch;



    /**
     * Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. Default: `false`.
     * 
     */
    public Boolean enableResourceNameDnsAaaaRecordOnLaunch;



    /**
     * The IPv6 network range for the subnet,
     * in CIDR notation. The subnet size must use a /64 prefix length.
     * 
     */
    public String ipv6CidrBlock;



    /**
     * The association ID for the IPv6 CIDR block.
     * 
     */
    public String ipv6CidrBlockAssociationId;



    /**
     * Indicates whether to create an IPv6-only subnet. Default: `false`.
     * 
     */
    public Boolean ipv6Native;



    /**
     * Specify `true` to indicate that network interfaces created in the subnet should be assigned a customer owned IP address. The `customer_owned_ipv4_pool` and `outpost_arn` arguments must be specified when set to `true`. Default is `false`.
     * 
     */
    public Boolean mapCustomerOwnedIpOnLaunch;



    /**
     * Specify true to indicate
     * that instances launched into the subnet should be assigned
     * a public IP address. Default is `false`.
     * 
     */
    public Boolean mapPublicIpOnLaunch;



    /**
     * The Amazon Resource Name (ARN) of the Outpost.
     * 
     */
    public String outpostArn;



    /**
     * The ID of the AWS account that owns the subnet.
     * 
     */
    public String ownerId;



    /**
     * The type of hostnames to assign to instances in the subnet at launch. For IPv6-only subnets, an instance DNS name must be based on the instance ID. For dual-stack and IPv4-only subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: `ip-name`, `resource-name`.
     * 
     */
    public String privateDnsHostnameTypeOnLaunch;



    /**
     * A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



    /**
     * The VPC ID.
     * 
     */
    public String vpcId;



}
