// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.lex.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.lex.inputs.V2modelsSlotTypeValueSelectionSettingAdvancedRecognitionSettingArgs;
import com.pulumi.policypacks.aws.lex.inputs.V2modelsSlotTypeValueSelectionSettingRegexFilterArgs;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class V2modelsSlotTypeValueSelectionSettingArgs {

    /**
     * Provides settings that enable advanced recognition settings for slot values.
     * You can use this to enable using slot values as a custom vocabulary for recognizing user utterances.
     * See `advanced_recognition_setting` argument reference below.
     * 
     */
    @PolicyResourceProperty(name="advancedRecognitionSettings", flag="unknown_advancedRecognitionSettings")
    private List<V2modelsSlotTypeValueSelectionSettingAdvancedRecognitionSettingArgs> value_advancedRecognitionSettings;
    private boolean unknown_advancedRecognitionSettings;
    public List<V2modelsSlotTypeValueSelectionSettingAdvancedRecognitionSettingArgs> advancedRecognitionSettings() {
        if (!unknown_advancedRecognitionSettings) return value_advancedRecognitionSettings;
        throw new UndeferrableValueException("Value 'V2modelsSlotTypeValueSelectionSettingArgs.advancedRecognitionSettings' is not present");
    }

    /**
     * Used to validate the value of the slot.
     * See `regex_filter` argument reference below.
     * 
     */
    @PolicyResourceProperty(name="regexFilters", flag="unknown_regexFilters")
    private List<V2modelsSlotTypeValueSelectionSettingRegexFilterArgs> value_regexFilters;
    private boolean unknown_regexFilters;
    public List<V2modelsSlotTypeValueSelectionSettingRegexFilterArgs> regexFilters() {
        if (!unknown_regexFilters) return value_regexFilters;
        throw new UndeferrableValueException("Value 'V2modelsSlotTypeValueSelectionSettingArgs.regexFilters' is not present");
    }

    /**
     * Determines the slot resolution strategy that Amazon Lex uses to return slot type values.
     * Valid values are `OriginalValue`, `TopResolution`, and `Concatenation`.
     * 
     */
    @PolicyResourceProperty(name="resolutionStrategy", flag="unknown_resolutionStrategy")
    private String value_resolutionStrategy;
    private boolean unknown_resolutionStrategy;
    public String resolutionStrategy() {
        if (!unknown_resolutionStrategy) return value_resolutionStrategy;
        throw new UndeferrableValueException("Value 'V2modelsSlotTypeValueSelectionSettingArgs.resolutionStrategy' is not present");
    }

}
