// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.networkmanager;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.networkmanager.inputs.ConnectAttachmentOptionsArgs;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:networkmanager/connectAttachment:ConnectAttachment")
public final class ConnectAttachmentArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The ID of a core network where you want to create the attachment.
     * 
     */
    @PolicyResourceProperty(name="coreNetworkId", flag="unknown_coreNetworkId")
    private String value_coreNetworkId;
    private boolean unknown_coreNetworkId;
    public String coreNetworkId() {
        if (!unknown_coreNetworkId) return value_coreNetworkId;
        throw new UndeferrableValueException("Value 'ConnectAttachmentArgs.coreNetworkId' is not present");
    }

    /**
     * The Region where the edge is located.
     * 
     */
    @PolicyResourceProperty(name="edgeLocation", flag="unknown_edgeLocation")
    private String value_edgeLocation;
    private boolean unknown_edgeLocation;
    public String edgeLocation() {
        if (!unknown_edgeLocation) return value_edgeLocation;
        throw new UndeferrableValueException("Value 'ConnectAttachmentArgs.edgeLocation' is not present");
    }

    /**
     * Options block. See options for more information.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="options", flag="unknown_options")
    private ConnectAttachmentOptionsArgs value_options;
    private boolean unknown_options;
    public ConnectAttachmentOptionsArgs options() {
        if (!unknown_options) return value_options;
        throw new UndeferrableValueException("Value 'ConnectAttachmentArgs.options' is not present");
    }

    /**
     * Key-value tags for the attachment. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'ConnectAttachmentArgs.tags' is not present");
    }

    /**
     * The ID of the attachment between the two connections.
     * 
     */
    @PolicyResourceProperty(name="transportAttachmentId", flag="unknown_transportAttachmentId")
    private String value_transportAttachmentId;
    private boolean unknown_transportAttachmentId;
    public String transportAttachmentId() {
        if (!unknown_transportAttachmentId) return value_transportAttachmentId;
        throw new UndeferrableValueException("Value 'ConnectAttachmentArgs.transportAttachmentId' is not present");
    }

}
