// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.lambda.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.String;
import javax.annotation.Nullable;


public final class FunctionLoggingConfigArgs {

    /**
     * for JSON structured logs, choose the detail level of the logs your application sends to CloudWatch when using supported logging libraries.
     * 
     */
    @PolicyResourceProperty(name="applicationLogLevel", flag="unknown_applicationLogLevel")
    private String value_applicationLogLevel;
    private boolean unknown_applicationLogLevel;
    public String applicationLogLevel() {
        if (!unknown_applicationLogLevel) return value_applicationLogLevel;
        throw new UndeferrableValueException("Value 'FunctionLoggingConfigArgs.applicationLogLevel' is not present");
    }

    /**
     * select between `Text` and structured `JSON` format for your function&#39;s logs.
     * 
     */
    @PolicyResourceProperty(name="logFormat", flag="unknown_logFormat")
    private String value_logFormat;
    private boolean unknown_logFormat;
    public String logFormat() {
        if (!unknown_logFormat) return value_logFormat;
        throw new UndeferrableValueException("Value 'FunctionLoggingConfigArgs.logFormat' is not present");
    }

    /**
     * the CloudWatch log group your function sends logs to.
     * 
     */
    @PolicyResourceProperty(name="logGroup", flag="unknown_logGroup")
    private String value_logGroup;
    private boolean unknown_logGroup;
    public String logGroup() {
        if (!unknown_logGroup) return value_logGroup;
        throw new UndeferrableValueException("Value 'FunctionLoggingConfigArgs.logGroup' is not present");
    }

    /**
     * for JSON structured logs, choose the detail level of the Lambda platform event logs sent to CloudWatch, such as `ERROR`, `DEBUG`, or `INFO`.
     * 
     */
    @PolicyResourceProperty(name="systemLogLevel", flag="unknown_systemLogLevel")
    private String value_systemLogLevel;
    private boolean unknown_systemLogLevel;
    public String systemLogLevel() {
        if (!unknown_systemLogLevel) return value_systemLogLevel;
        throw new UndeferrableValueException("Value 'FunctionLoggingConfigArgs.systemLogLevel' is not present");
    }

}
