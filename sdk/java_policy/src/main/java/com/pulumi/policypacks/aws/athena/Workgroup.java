// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.athena;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.athena.outputs.WorkgroupConfiguration;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:athena/workgroup:Workgroup")
public final class Workgroup extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * ARN of the workgroup
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'Workgroup.arn' is not present");
    }

    /**
     * Configuration block with various settings for the workgroup. Documented below.
     * 
     */
    @PolicyResourceProperty(name="configuration", flag="unknown_configuration")
    private @Nullable WorkgroupConfiguration value_configuration;
    private boolean unknown_configuration;
    public @Nullable WorkgroupConfiguration configuration() {
        if (!unknown_configuration) return value_configuration;
        throw new UndeferrableValueException("Value 'Workgroup.configuration' is not present");
    }

    /**
     * Description of the workgroup.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private @Nullable String value_description;
    private boolean unknown_description;
    public @Nullable String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'Workgroup.description' is not present");
    }

    /**
     * Option to delete the workgroup and its contents even if the workgroup contains any named queries.
     * 
     */
    @PolicyResourceProperty(name="forceDestroy", flag="unknown_forceDestroy")
    private @Nullable Boolean value_forceDestroy;
    private boolean unknown_forceDestroy;
    public @Nullable Boolean forceDestroy() {
        if (!unknown_forceDestroy) return value_forceDestroy;
        throw new UndeferrableValueException("Value 'Workgroup.forceDestroy' is not present");
    }

    /**
     * Name of the workgroup.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'Workgroup.name' is not present");
    }

    /**
     * State of the workgroup. Valid values are `DISABLED` or `ENABLED`. Defaults to `ENABLED`.
     * 
     */
    @PolicyResourceProperty(name="state", flag="unknown_state")
    private @Nullable String value_state;
    private boolean unknown_state;
    public @Nullable String state() {
        if (!unknown_state) return value_state;
        throw new UndeferrableValueException("Value 'Workgroup.state' is not present");
    }

    /**
     * Key-value map of resource tags for the workgroup. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'Workgroup.tags' is not present");
    }

    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'Workgroup.tagsAll' is not present");
    }

}
