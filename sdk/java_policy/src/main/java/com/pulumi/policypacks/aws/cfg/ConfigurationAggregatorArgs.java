// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.cfg;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.cfg.inputs.ConfigurationAggregatorAccountAggregationSourceArgs;
import com.pulumi.policypacks.aws.cfg.inputs.ConfigurationAggregatorOrganizationAggregationSourceArgs;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:cfg/configurationAggregator:ConfigurationAggregator")
public final class ConfigurationAggregatorArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The account(s) to aggregate config data from as documented below.
     * 
     */
    @PolicyResourceProperty(name="accountAggregationSource", flag="unknown_accountAggregationSource")
    private ConfigurationAggregatorAccountAggregationSourceArgs value_accountAggregationSource;
    private boolean unknown_accountAggregationSource;
    public ConfigurationAggregatorAccountAggregationSourceArgs accountAggregationSource() {
        if (!unknown_accountAggregationSource) return value_accountAggregationSource;
        throw new UndeferrableValueException("Value 'ConfigurationAggregatorArgs.accountAggregationSource' is not present");
    }

    /**
     * The name of the configuration aggregator.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'ConfigurationAggregatorArgs.name' is not present");
    }

    /**
     * The organization to aggregate config data from as documented below.
     * 
     */
    @PolicyResourceProperty(name="organizationAggregationSource", flag="unknown_organizationAggregationSource")
    private ConfigurationAggregatorOrganizationAggregationSourceArgs value_organizationAggregationSource;
    private boolean unknown_organizationAggregationSource;
    public ConfigurationAggregatorOrganizationAggregationSourceArgs organizationAggregationSource() {
        if (!unknown_organizationAggregationSource) return value_organizationAggregationSource;
        throw new UndeferrableValueException("Value 'ConfigurationAggregatorArgs.organizationAggregationSource' is not present");
    }

    /**
     * A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     * Either `account_aggregation_source` or `organization_aggregation_source` must be specified.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'ConfigurationAggregatorArgs.tags' is not present");
    }

}
