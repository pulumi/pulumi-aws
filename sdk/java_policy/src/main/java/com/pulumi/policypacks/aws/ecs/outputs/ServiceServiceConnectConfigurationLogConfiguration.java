// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ecs.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.ecs.outputs.ServiceServiceConnectConfigurationLogConfigurationSecretOption;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


public final class ServiceServiceConnectConfigurationLogConfiguration {

    /**
     * Log driver to use for the container.
     * 
     */
    @PolicyResourceProperty(name="logDriver", flag="unknown_logDriver")
    private String value_logDriver;
    private boolean unknown_logDriver;
    public String logDriver() {
        if (!unknown_logDriver) return value_logDriver;
        throw new UndeferrableValueException("Value 'ServiceServiceConnectConfigurationLogConfiguration.logDriver' is not present");
    }

    /**
     * Configuration options to send to the log driver.
     * 
     */
    @PolicyResourceProperty(name="options", flag="unknown_options")
    private @Nullable Map<String,String> value_options;
    private boolean unknown_options;
    public @Nullable Map<String,String> options() {
        if (!unknown_options) return value_options;
        throw new UndeferrableValueException("Value 'ServiceServiceConnectConfigurationLogConfiguration.options' is not present");
    }

    /**
     * Secrets to pass to the log configuration. See below.
     * 
     */
    @PolicyResourceProperty(name="secretOptions", flag="unknown_secretOptions")
    private @Nullable List<ServiceServiceConnectConfigurationLogConfigurationSecretOption> value_secretOptions;
    private boolean unknown_secretOptions;
    public @Nullable List<ServiceServiceConnectConfigurationLogConfigurationSecretOption> secretOptions() {
        if (!unknown_secretOptions) return value_secretOptions;
        throw new UndeferrableValueException("Value 'ServiceServiceConnectConfigurationLogConfiguration.secretOptions' is not present");
    }

}
