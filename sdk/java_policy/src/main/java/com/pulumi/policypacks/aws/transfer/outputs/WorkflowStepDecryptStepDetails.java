// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.transfer.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.transfer.outputs.WorkflowStepDecryptStepDetailsDestinationFileLocation;
import java.lang.String;
import javax.annotation.Nullable;


public final class WorkflowStepDecryptStepDetails {

    /**
     * Specifies the location for the file being copied. Use ${Transfer:username} in this field to parametrize the destination prefix by username.
     * 
     */
    @PolicyResourceProperty(name="destinationFileLocation", flag="unknown_destinationFileLocation")
    private @Nullable WorkflowStepDecryptStepDetailsDestinationFileLocation value_destinationFileLocation;
    private boolean unknown_destinationFileLocation;
    public @Nullable WorkflowStepDecryptStepDetailsDestinationFileLocation destinationFileLocation() {
        if (!unknown_destinationFileLocation) return value_destinationFileLocation;
        throw new UndeferrableValueException("Value 'WorkflowStepDecryptStepDetails.destinationFileLocation' is not present");
    }

    /**
     * The name of the step, used as an identifier.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private @Nullable String value_name;
    private boolean unknown_name;
    public @Nullable String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'WorkflowStepDecryptStepDetails.name' is not present");
    }

    /**
     * A flag that indicates whether or not to overwrite an existing file of the same name. The default is `FALSE`. Valid values are `TRUE` and `FALSE`.
     * 
     */
    @PolicyResourceProperty(name="overwriteExisting", flag="unknown_overwriteExisting")
    private @Nullable String value_overwriteExisting;
    private boolean unknown_overwriteExisting;
    public @Nullable String overwriteExisting() {
        if (!unknown_overwriteExisting) return value_overwriteExisting;
        throw new UndeferrableValueException("Value 'WorkflowStepDecryptStepDetails.overwriteExisting' is not present");
    }

    /**
     * Specifies which file to use as input to the workflow step: either the output from the previous step, or the originally uploaded file for the workflow. Enter ${previous.file} to use the previous file as the input. In this case, this workflow step uses the output file from the previous workflow step as input. This is the default value. Enter ${original.file} to use the originally-uploaded file location as input for this step.
     * 
     */
    @PolicyResourceProperty(name="sourceFileLocation", flag="unknown_sourceFileLocation")
    private @Nullable String value_sourceFileLocation;
    private boolean unknown_sourceFileLocation;
    public @Nullable String sourceFileLocation() {
        if (!unknown_sourceFileLocation) return value_sourceFileLocation;
        throw new UndeferrableValueException("Value 'WorkflowStepDecryptStepDetails.sourceFileLocation' is not present");
    }

    /**
     * The type of encryption used. Currently, this value must be `&#34;PGP&#34;`.
     * 
     */
    @PolicyResourceProperty(name="type", flag="unknown_type")
    private String value_type;
    private boolean unknown_type;
    public String type() {
        if (!unknown_type) return value_type;
        throw new UndeferrableValueException("Value 'WorkflowStepDecryptStepDetails.type' is not present");
    }

}
