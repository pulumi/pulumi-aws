// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.transfer;

import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.Map;


@PolicyResourceType(type="aws:transfer/certificate:Certificate")
public final class Certificate extends com.pulumi.resources.PolicyResource {

    /**
     * An date when the certificate becomes active
     * 
     */
    public String activeDate;



    /**
     * The ARN of the certificate
     * 
     */
    public String arn;



    /**
     * The valid certificate file required for the transfer.
     * 
     */
    public String certificate;



    /**
     * The optional list of certificate that make up the chain for the certificate that is being imported.
     * 
     */
    public String certificateChain;



    /**
     * The unique identifier for the AS2 certificate
     * 
     */
    public String certificateId;



    /**
     * A short description that helps identify the certificate.
     * 
     */
    public String description;



    /**
     * An date when the certificate becomes inactive
     * 
     */
    public String inactiveDate;



    /**
     * The private key associated with the certificate being imported.
     * 
     */
    public String privateKey;



    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



    /**
     * Specifies if a certificate is being used for signing or encryption. The valid values are SIGNING and ENCRYPTION.
     * 
     */
    public String usage;



}
