// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.mskconnect;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.mskconnect.inputs.CustomPluginLocationArgs;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:mskconnect/customPlugin:CustomPlugin")
public final class CustomPluginArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The type of the plugin file. Allowed values are `ZIP` and `JAR`.
     * 
     */
    @PolicyResourceProperty(name="contentType", flag="unknown_contentType")
    private String value_contentType;
    private boolean unknown_contentType;
    public String contentType() {
        if (!unknown_contentType) return value_contentType;
        throw new UndeferrableValueException("Value 'CustomPluginArgs.contentType' is not present");
    }

    /**
     * A summary description of the custom plugin.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private String value_description;
    private boolean unknown_description;
    public String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'CustomPluginArgs.description' is not present");
    }

    /**
     * Information about the location of a custom plugin. See `location` Block for details.
     * 
     */
    @PolicyResourceProperty(name="location", flag="unknown_location")
    private CustomPluginLocationArgs value_location;
    private boolean unknown_location;
    public CustomPluginLocationArgs location() {
        if (!unknown_location) return value_location;
        throw new UndeferrableValueException("Value 'CustomPluginArgs.location' is not present");
    }

    /**
     * The name of the custom plugin..
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'CustomPluginArgs.name' is not present");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'CustomPluginArgs.tags' is not present");
    }

}
