// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.elastictranscoder.inputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.String;
import javax.annotation.Nullable;


public final class PresetAudioArgs {

    /**
     * The method of organizing audio channels and tracks. Use Audio:Channels to specify the number of channels in your output, and Audio:AudioPackingMode to specify the number of tracks and their relation to the channels. If you do not specify an Audio:AudioPackingMode, Elastic Transcoder uses SingleTrack.
     * 
     */
    private UndeferrableValue<String> audioPackingMode;

    public String audioPackingMode() {
        if (audioPackingMode == null) return null;
        return audioPackingMode.getValue("PresetAudioArgs.audioPackingMode");
    }

    /**
     * The bit rate of the audio stream in the output file, in kilobits/second. Enter an integer between 64 and 320, inclusive.
     * 
     */
    private UndeferrableValue<String> bitRate;

    public String bitRate() {
        if (bitRate == null) return null;
        return bitRate.getValue("PresetAudioArgs.bitRate");
    }

    /**
     * The number of audio channels in the output file
     * 
     */
    private UndeferrableValue<String> channels;

    public String channels() {
        if (channels == null) return null;
        return channels.getValue("PresetAudioArgs.channels");
    }

    /**
     * The audio codec for the output file. Valid values are `AAC`, `flac`, `mp2`, `mp3`, `pcm`, and `vorbis`.
     * 
     */
    private UndeferrableValue<String> codec;

    public String codec() {
        if (codec == null) return null;
        return codec.getValue("PresetAudioArgs.codec");
    }

    /**
     * The sample rate of the audio stream in the output file, in hertz. Valid values are: `auto`, `22050`, `32000`, `44100`, `48000`, `96000`
     * 
     */
    private UndeferrableValue<String> sampleRate;

    public String sampleRate() {
        if (sampleRate == null) return null;
        return sampleRate.getValue("PresetAudioArgs.sampleRate");
    }

}
