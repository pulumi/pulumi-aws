// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ec2/vpcIpamScope:VpcIpamScope")
public final class VpcIpamScope extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The Amazon Resource Name (ARN) of the scope.
     * 
     */
    private UndeferrableValue<String> arn;

    public String arn() {
        if (arn == null) return null;
        return arn.getValue("VpcIpamScope.arn");
    }

    /**
     * A description for the scope you&#39;re creating.
     * 
     */
    private @Nullable UndeferrableValue<String> description;

    public @Nullable String description() {
        if (description == null) return null;
        return description.getValue("VpcIpamScope.description");
    }

    /**
     * The ARN of the IPAM for which you&#39;re creating this scope.
     * 
     */
    private UndeferrableValue<String> ipamArn;

    public String ipamArn() {
        if (ipamArn == null) return null;
        return ipamArn.getValue("VpcIpamScope.ipamArn");
    }

    /**
     * The ID of the IPAM for which you&#39;re creating this scope.
     * 
     */
    private UndeferrableValue<String> ipamId;

    public String ipamId() {
        if (ipamId == null) return null;
        return ipamId.getValue("VpcIpamScope.ipamId");
    }

    private UndeferrableValue<String> ipamScopeType;

    public String ipamScopeType() {
        if (ipamScopeType == null) return null;
        return ipamScopeType.getValue("VpcIpamScope.ipamScopeType");
    }

    /**
     * Defines if the scope is the default scope or not.
     * 
     */
    private UndeferrableValue<Boolean> isDefault;

    public Boolean isDefault() {
        if (isDefault == null) return null;
        return isDefault.getValue("VpcIpamScope.isDefault");
    }

    /**
     * The number of pools in the scope.
     * 
     */
    private UndeferrableValue<Integer> poolCount;

    public Integer poolCount() {
        if (poolCount == null) return null;
        return poolCount.getValue("VpcIpamScope.poolCount");
    }

    /**
     * Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private @Nullable UndeferrableValue<Map<String,String>> tags;

    public @Nullable Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("VpcIpamScope.tags");
    }

    /**
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    private UndeferrableValue<Map<String,String>> tagsAll;

    public Map<String,String> tagsAll() {
        if (tagsAll == null) return null;
        return tagsAll.getValue("VpcIpamScope.tagsAll");
    }

}
