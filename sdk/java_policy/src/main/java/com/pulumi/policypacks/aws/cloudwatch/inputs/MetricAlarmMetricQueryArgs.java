// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.cloudwatch.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.cloudwatch.inputs.MetricAlarmMetricQueryMetricArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class MetricAlarmMetricQueryArgs {

    /**
     * The ID of the account where the metrics are located, if this is a cross-account alarm.
     * 
     */
    @PolicyResourceProperty(name="accountId", flag="unknown_accountId")
    private String value_accountId;
    private boolean unknown_accountId;
    public String accountId() {
        if (!unknown_accountId) return value_accountId;
        throw new UndeferrableValueException("Value 'MetricAlarmMetricQueryArgs.accountId' is not present");
    }

    /**
     * The math expression to be performed on the returned data, if this object is performing a math expression. This expression can use the id of the other metrics to refer to those metrics, and can also use the id of other expressions to use the result of those expressions. For more information about metric math expressions, see Metric Math Syntax and Functions in the [Amazon CloudWatch User Guide](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/using-metric-math.html#metric-math-syntax).
     * 
     */
    @PolicyResourceProperty(name="expression", flag="unknown_expression")
    private String value_expression;
    private boolean unknown_expression;
    public String expression() {
        if (!unknown_expression) return value_expression;
        throw new UndeferrableValueException("Value 'MetricAlarmMetricQueryArgs.expression' is not present");
    }

    /**
     * A short name used to tie this object to the results in the response. If you are performing math expressions on this set of data, this name represents that data and can serve as a variable in the mathematical expression. The valid characters are letters, numbers, and underscore. The first character must be a lowercase letter.
     * 
     */
    @PolicyResourceProperty(name="id", flag="unknown_id")
    private String value_id;
    private boolean unknown_id;
    public String id() {
        if (!unknown_id) return value_id;
        throw new UndeferrableValueException("Value 'MetricAlarmMetricQueryArgs.id' is not present");
    }

    /**
     * A human-readable label for this metric or expression. This is especially useful if this is an expression, so that you know what the value represents.
     * 
     */
    @PolicyResourceProperty(name="label", flag="unknown_label")
    private String value_label;
    private boolean unknown_label;
    public String label() {
        if (!unknown_label) return value_label;
        throw new UndeferrableValueException("Value 'MetricAlarmMetricQueryArgs.label' is not present");
    }

    /**
     * The metric to be returned, along with statistics, period, and units. Use this parameter only if this object is retrieving a metric and not performing a math expression on returned data.
     * 
     */
    @PolicyResourceProperty(name="metric", flag="unknown_metric")
    private MetricAlarmMetricQueryMetricArgs value_metric;
    private boolean unknown_metric;
    public MetricAlarmMetricQueryMetricArgs metric() {
        if (!unknown_metric) return value_metric;
        throw new UndeferrableValueException("Value 'MetricAlarmMetricQueryArgs.metric' is not present");
    }

    /**
     * Granularity in seconds of returned data points.
     * For metrics with regular resolution, valid values are any multiple of `60`.
     * For high-resolution metrics, valid values are `1`, `5`, `10`, `30`, or any multiple of `60`.
     * 
     */
    @PolicyResourceProperty(name="period", flag="unknown_period")
    private Integer value_period;
    private boolean unknown_period;
    public Integer period() {
        if (!unknown_period) return value_period;
        throw new UndeferrableValueException("Value 'MetricAlarmMetricQueryArgs.period' is not present");
    }

    /**
     * Specify exactly one `metric_query` to be `true` to use that `metric_query` result as the alarm.
     * 
     * &gt; **NOTE:**  You must specify either `metric` or `expression`. Not both.
     * 
     */
    @PolicyResourceProperty(name="returnData", flag="unknown_returnData")
    private Boolean value_returnData;
    private boolean unknown_returnData;
    public Boolean returnData() {
        if (!unknown_returnData) return value_returnData;
        throw new UndeferrableValueException("Value 'MetricAlarmMetricQueryArgs.returnData' is not present");
    }

}
