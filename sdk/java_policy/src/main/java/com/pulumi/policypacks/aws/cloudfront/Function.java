// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.cloudfront;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:cloudfront/function:Function")
public final class Function extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Amazon Resource Name (ARN) identifying your CloudFront Function.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'Function.arn' is not present");
    }

    /**
     * Source code of the function
     * 
     */
    @PolicyResourceProperty(name="code", flag="unknown_code")
    private String value_code;
    private boolean unknown_code;
    public String code() {
        if (!unknown_code) return value_code;
        throw new UndeferrableValueException("Value 'Function.code' is not present");
    }

    /**
     * Comment.
     * 
     */
    @PolicyResourceProperty(name="comment", flag="unknown_comment")
    private @Nullable String value_comment;
    private boolean unknown_comment;
    public @Nullable String comment() {
        if (!unknown_comment) return value_comment;
        throw new UndeferrableValueException("Value 'Function.comment' is not present");
    }

    /**
     * ETag hash of the function. This is the value for the `DEVELOPMENT` stage of the function.
     * 
     */
    @PolicyResourceProperty(name="etag", flag="unknown_etag")
    private String value_etag;
    private boolean unknown_etag;
    public String etag() {
        if (!unknown_etag) return value_etag;
        throw new UndeferrableValueException("Value 'Function.etag' is not present");
    }

    /**
     * List of `aws.cloudfront.KeyValueStore` ARNs to be associated to the function. AWS limits associations to on key value store per function.
     * 
     */
    @PolicyResourceProperty(name="keyValueStoreAssociations", flag="unknown_keyValueStoreAssociations")
    private @Nullable List<String> value_keyValueStoreAssociations;
    private boolean unknown_keyValueStoreAssociations;
    public @Nullable List<String> keyValueStoreAssociations() {
        if (!unknown_keyValueStoreAssociations) return value_keyValueStoreAssociations;
        throw new UndeferrableValueException("Value 'Function.keyValueStoreAssociations' is not present");
    }

    /**
     * ETag hash of any `LIVE` stage of the function.
     * 
     */
    @PolicyResourceProperty(name="liveStageEtag", flag="unknown_liveStageEtag")
    private String value_liveStageEtag;
    private boolean unknown_liveStageEtag;
    public String liveStageEtag() {
        if (!unknown_liveStageEtag) return value_liveStageEtag;
        throw new UndeferrableValueException("Value 'Function.liveStageEtag' is not present");
    }

    /**
     * Unique name for your CloudFront Function.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'Function.name' is not present");
    }

    /**
     * Whether to publish creation/change as Live CloudFront Function Version. Defaults to `true`.
     * 
     */
    @PolicyResourceProperty(name="publish", flag="unknown_publish")
    private @Nullable Boolean value_publish;
    private boolean unknown_publish;
    public @Nullable Boolean publish() {
        if (!unknown_publish) return value_publish;
        throw new UndeferrableValueException("Value 'Function.publish' is not present");
    }

    /**
     * Identifier of the function&#39;s runtime. Valid values are `cloudfront-js-1.0` and `cloudfront-js-2.0`.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="runtime", flag="unknown_runtime")
    private String value_runtime;
    private boolean unknown_runtime;
    public String runtime() {
        if (!unknown_runtime) return value_runtime;
        throw new UndeferrableValueException("Value 'Function.runtime' is not present");
    }

    /**
     * Status of the function. Can be `UNPUBLISHED`, `UNASSOCIATED` or `ASSOCIATED`.
     * 
     */
    @PolicyResourceProperty(name="status", flag="unknown_status")
    private String value_status;
    private boolean unknown_status;
    public String status() {
        if (!unknown_status) return value_status;
        throw new UndeferrableValueException("Value 'Function.status' is not present");
    }

}
