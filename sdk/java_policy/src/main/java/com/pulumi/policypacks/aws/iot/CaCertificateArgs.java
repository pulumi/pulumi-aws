// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.iot;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.iot.inputs.CaCertificateRegistrationConfigArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:iot/caCertificate:CaCertificate")
public final class CaCertificateArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Boolean flag to indicate if the certificate should be active for device authentication.
     * 
     */
    private UndeferrableValue<Boolean> active;

    public Boolean active() {
        if (active == null) return null;
        return active.getValue("CaCertificateArgs.active");
    }

    /**
     * Boolean flag to indicate if the certificate should be active for device regisration.
     * 
     */
    private UndeferrableValue<Boolean> allowAutoRegistration;

    public Boolean allowAutoRegistration() {
        if (allowAutoRegistration == null) return null;
        return allowAutoRegistration.getValue("CaCertificateArgs.allowAutoRegistration");
    }

    /**
     * PEM encoded CA certificate.
     * 
     */
    private UndeferrableValue<String> caCertificatePem;

    public String caCertificatePem() {
        if (caCertificatePem == null) return null;
        return caCertificatePem.getValue("CaCertificateArgs.caCertificatePem");
    }

    /**
     * The certificate mode in which the CA will be registered. Valida values: `DEFAULT` and `SNI_ONLY`. Default: `DEFAULT`.
     * 
     */
    private UndeferrableValue<String> certificateMode;

    public String certificateMode() {
        if (certificateMode == null) return null;
        return certificateMode.getValue("CaCertificateArgs.certificateMode");
    }

    /**
     * Information about the registration configuration. See below.
     * 
     */
    private UndeferrableValue<CaCertificateRegistrationConfigArgs> registrationConfig;

    public CaCertificateRegistrationConfigArgs registrationConfig() {
        if (registrationConfig == null) return null;
        return registrationConfig.getValue("CaCertificateArgs.registrationConfig");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("CaCertificateArgs.tags");
    }

    /**
     * PEM encoded verification certificate containing the common name of a registration code. Review
     * [CreateVerificationCSR](https://docs.aws.amazon.com/iot/latest/developerguide/register-CA-cert.html). Reuired if `certificate_mode` is `DEFAULT`.
     * 
     */
    private UndeferrableValue<String> verificationCertificatePem;

    public String verificationCertificatePem() {
        if (verificationCertificatePem == null) return null;
        return verificationCertificatePem.getValue("CaCertificateArgs.verificationCertificatePem");
    }

}
