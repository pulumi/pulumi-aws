// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.connect;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.connect.inputs.RoutingProfileMediaConcurrencyArgs;
import com.pulumi.policypacks.aws.connect.inputs.RoutingProfileQueueConfigArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:connect/routingProfile:RoutingProfile")
public final class RoutingProfileArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Specifies the default outbound queue for the Routing Profile.
     * 
     */
    private UndeferrableValue<String> defaultOutboundQueueId;

    public String defaultOutboundQueueId() {
        if (defaultOutboundQueueId == null) return null;
        return defaultOutboundQueueId.getValue("RoutingProfileArgs.defaultOutboundQueueId");
    }

    /**
     * Specifies the description of the Routing Profile.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("RoutingProfileArgs.description");
    }

    /**
     * Specifies the identifier of the hosting Amazon Connect Instance.
     * 
     */
    private UndeferrableValue<String> instanceId;

    public String instanceId() {
        if (instanceId == null) return null;
        return instanceId.getValue("RoutingProfileArgs.instanceId");
    }

    /**
     * One or more `media_concurrencies` blocks that specify the channels that agents can handle in the Contact Control Panel (CCP) for this Routing Profile. The `media_concurrencies` block is documented below.
     * 
     */
    private UndeferrableValue<List<RoutingProfileMediaConcurrencyArgs>> mediaConcurrencies;

    public List<RoutingProfileMediaConcurrencyArgs> mediaConcurrencies() {
        if (mediaConcurrencies == null) return null;
        return mediaConcurrencies.getValue("RoutingProfileArgs.mediaConcurrencies");
    }

    /**
     * Specifies the name of the Routing Profile.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("RoutingProfileArgs.name");
    }

    /**
     * One or more `queue_configs` blocks that specify the inbound queues associated with the routing profile. If no queue is added, the agent only can make outbound calls. The `queue_configs` block is documented below.
     * 
     */
    private UndeferrableValue<List<RoutingProfileQueueConfigArgs>> queueConfigs;

    public List<RoutingProfileQueueConfigArgs> queueConfigs() {
        if (queueConfigs == null) return null;
        return queueConfigs.getValue("RoutingProfileArgs.queueConfigs");
    }

    /**
     * Tags to apply to the Routing Profile. If configured with a provider
     * `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("RoutingProfileArgs.tags");
    }

}
