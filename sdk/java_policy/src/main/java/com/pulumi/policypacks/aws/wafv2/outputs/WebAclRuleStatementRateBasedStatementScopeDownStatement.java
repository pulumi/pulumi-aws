// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.wafv2.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.wafv2.outputs.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatement;
import com.pulumi.policypacks.aws.wafv2.outputs.WebAclRuleStatementRateBasedStatementScopeDownStatementByteMatchStatement;
import com.pulumi.policypacks.aws.wafv2.outputs.WebAclRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatement;
import com.pulumi.policypacks.aws.wafv2.outputs.WebAclRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatement;
import com.pulumi.policypacks.aws.wafv2.outputs.WebAclRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatement;
import com.pulumi.policypacks.aws.wafv2.outputs.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatement;
import com.pulumi.policypacks.aws.wafv2.outputs.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatement;
import com.pulumi.policypacks.aws.wafv2.outputs.WebAclRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatement;
import com.pulumi.policypacks.aws.wafv2.outputs.WebAclRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatement;
import com.pulumi.policypacks.aws.wafv2.outputs.WebAclRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatement;
import com.pulumi.policypacks.aws.wafv2.outputs.WebAclRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatement;
import com.pulumi.policypacks.aws.wafv2.outputs.WebAclRuleStatementRateBasedStatementScopeDownStatementXssMatchStatement;
import javax.annotation.Nullable;


public final class WebAclRuleStatementRateBasedStatementScopeDownStatement {

    /**
     * Logical rule statement used to combine other rule statements with AND logic. See `and_statement` below for details.
     * 
     */
    @PolicyResourceProperty(name="andStatement", flag="unknown_andStatement")
    private @Nullable WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatement value_andStatement;
    private boolean unknown_andStatement;
    public @Nullable WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatement andStatement() {
        if (!unknown_andStatement) return value_andStatement;
        throw new UndeferrableValueException("Value 'WebAclRuleStatementRateBasedStatementScopeDownStatement.andStatement' is not present");
    }

    /**
     * Rule statement that defines a string match search for AWS WAF to apply to web requests. See `byte_match_statement` below for details.
     * 
     */
    @PolicyResourceProperty(name="byteMatchStatement", flag="unknown_byteMatchStatement")
    private @Nullable WebAclRuleStatementRateBasedStatementScopeDownStatementByteMatchStatement value_byteMatchStatement;
    private boolean unknown_byteMatchStatement;
    public @Nullable WebAclRuleStatementRateBasedStatementScopeDownStatementByteMatchStatement byteMatchStatement() {
        if (!unknown_byteMatchStatement) return value_byteMatchStatement;
        throw new UndeferrableValueException("Value 'WebAclRuleStatementRateBasedStatementScopeDownStatement.byteMatchStatement' is not present");
    }

    /**
     * Rule statement used to identify web requests based on country of origin. See `geo_match_statement` below for details.
     * 
     */
    @PolicyResourceProperty(name="geoMatchStatement", flag="unknown_geoMatchStatement")
    private @Nullable WebAclRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatement value_geoMatchStatement;
    private boolean unknown_geoMatchStatement;
    public @Nullable WebAclRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatement geoMatchStatement() {
        if (!unknown_geoMatchStatement) return value_geoMatchStatement;
        throw new UndeferrableValueException("Value 'WebAclRuleStatementRateBasedStatementScopeDownStatement.geoMatchStatement' is not present");
    }

    /**
     * Rule statement used to detect web requests coming from particular IP addresses or address ranges. See `ip_set_reference_statement` below for details.
     * 
     */
    @PolicyResourceProperty(name="ipSetReferenceStatement", flag="unknown_ipSetReferenceStatement")
    private @Nullable WebAclRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatement value_ipSetReferenceStatement;
    private boolean unknown_ipSetReferenceStatement;
    public @Nullable WebAclRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatement ipSetReferenceStatement() {
        if (!unknown_ipSetReferenceStatement) return value_ipSetReferenceStatement;
        throw new UndeferrableValueException("Value 'WebAclRuleStatementRateBasedStatementScopeDownStatement.ipSetReferenceStatement' is not present");
    }

    /**
     * Rule statement that defines a string match search against labels that have been added to the web request by rules that have already run in the web ACL. See `label_match_statement` below for details.
     * 
     */
    @PolicyResourceProperty(name="labelMatchStatement", flag="unknown_labelMatchStatement")
    private @Nullable WebAclRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatement value_labelMatchStatement;
    private boolean unknown_labelMatchStatement;
    public @Nullable WebAclRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatement labelMatchStatement() {
        if (!unknown_labelMatchStatement) return value_labelMatchStatement;
        throw new UndeferrableValueException("Value 'WebAclRuleStatementRateBasedStatementScopeDownStatement.labelMatchStatement' is not present");
    }

    /**
     * Logical rule statement used to negate the results of another rule statement. See `not_statement` below for details.
     * 
     */
    @PolicyResourceProperty(name="notStatement", flag="unknown_notStatement")
    private @Nullable WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatement value_notStatement;
    private boolean unknown_notStatement;
    public @Nullable WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatement notStatement() {
        if (!unknown_notStatement) return value_notStatement;
        throw new UndeferrableValueException("Value 'WebAclRuleStatementRateBasedStatementScopeDownStatement.notStatement' is not present");
    }

    /**
     * Logical rule statement used to combine other rule statements with OR logic. See `or_statement` below for details.
     * 
     */
    @PolicyResourceProperty(name="orStatement", flag="unknown_orStatement")
    private @Nullable WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatement value_orStatement;
    private boolean unknown_orStatement;
    public @Nullable WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatement orStatement() {
        if (!unknown_orStatement) return value_orStatement;
        throw new UndeferrableValueException("Value 'WebAclRuleStatementRateBasedStatementScopeDownStatement.orStatement' is not present");
    }

    /**
     * Rule statement used to search web request components for a match against a single regular expression. See `regex_match_statement` below for details.
     * 
     */
    @PolicyResourceProperty(name="regexMatchStatement", flag="unknown_regexMatchStatement")
    private @Nullable WebAclRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatement value_regexMatchStatement;
    private boolean unknown_regexMatchStatement;
    public @Nullable WebAclRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatement regexMatchStatement() {
        if (!unknown_regexMatchStatement) return value_regexMatchStatement;
        throw new UndeferrableValueException("Value 'WebAclRuleStatementRateBasedStatementScopeDownStatement.regexMatchStatement' is not present");
    }

    /**
     * Rule statement used to search web request components for matches with regular expressions. See `regex_pattern_set_reference_statement` below for details.
     * 
     */
    @PolicyResourceProperty(name="regexPatternSetReferenceStatement", flag="unknown_regexPatternSetReferenceStatement")
    private @Nullable WebAclRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatement value_regexPatternSetReferenceStatement;
    private boolean unknown_regexPatternSetReferenceStatement;
    public @Nullable WebAclRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatement regexPatternSetReferenceStatement() {
        if (!unknown_regexPatternSetReferenceStatement) return value_regexPatternSetReferenceStatement;
        throw new UndeferrableValueException("Value 'WebAclRuleStatementRateBasedStatementScopeDownStatement.regexPatternSetReferenceStatement' is not present");
    }

    /**
     * Rule statement that compares a number of bytes against the size of a request component, using a comparison operator, such as greater than (&gt;) or less than (&lt;). See `size_constraint_statement` below for more details.
     * 
     */
    @PolicyResourceProperty(name="sizeConstraintStatement", flag="unknown_sizeConstraintStatement")
    private @Nullable WebAclRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatement value_sizeConstraintStatement;
    private boolean unknown_sizeConstraintStatement;
    public @Nullable WebAclRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatement sizeConstraintStatement() {
        if (!unknown_sizeConstraintStatement) return value_sizeConstraintStatement;
        throw new UndeferrableValueException("Value 'WebAclRuleStatementRateBasedStatementScopeDownStatement.sizeConstraintStatement' is not present");
    }

    /**
     * An SQL injection match condition identifies the part of web requests, such as the URI or the query string, that you want AWS WAF to inspect. See `sqli_match_statement` below for details.
     * 
     */
    @PolicyResourceProperty(name="sqliMatchStatement", flag="unknown_sqliMatchStatement")
    private @Nullable WebAclRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatement value_sqliMatchStatement;
    private boolean unknown_sqliMatchStatement;
    public @Nullable WebAclRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatement sqliMatchStatement() {
        if (!unknown_sqliMatchStatement) return value_sqliMatchStatement;
        throw new UndeferrableValueException("Value 'WebAclRuleStatementRateBasedStatementScopeDownStatement.sqliMatchStatement' is not present");
    }

    /**
     * Rule statement that defines a cross-site scripting (XSS) match search for AWS WAF to apply to web requests. See `xss_match_statement` below for details.
     * 
     */
    @PolicyResourceProperty(name="xssMatchStatement", flag="unknown_xssMatchStatement")
    private @Nullable WebAclRuleStatementRateBasedStatementScopeDownStatementXssMatchStatement value_xssMatchStatement;
    private boolean unknown_xssMatchStatement;
    public @Nullable WebAclRuleStatementRateBasedStatementScopeDownStatementXssMatchStatement xssMatchStatement() {
        if (!unknown_xssMatchStatement) return value_xssMatchStatement;
        throw new UndeferrableValueException("Value 'WebAclRuleStatementRateBasedStatementScopeDownStatement.xssMatchStatement' is not present");
    }

}
