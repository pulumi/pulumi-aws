// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.wafv2.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.wafv2.outputs.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatement;
import com.pulumi.policypacks.aws.wafv2.outputs.WebAclRuleStatementRateBasedStatementScopeDownStatementByteMatchStatement;
import com.pulumi.policypacks.aws.wafv2.outputs.WebAclRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatement;
import com.pulumi.policypacks.aws.wafv2.outputs.WebAclRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatement;
import com.pulumi.policypacks.aws.wafv2.outputs.WebAclRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatement;
import com.pulumi.policypacks.aws.wafv2.outputs.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatement;
import com.pulumi.policypacks.aws.wafv2.outputs.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatement;
import com.pulumi.policypacks.aws.wafv2.outputs.WebAclRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatement;
import com.pulumi.policypacks.aws.wafv2.outputs.WebAclRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatement;
import com.pulumi.policypacks.aws.wafv2.outputs.WebAclRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatement;
import com.pulumi.policypacks.aws.wafv2.outputs.WebAclRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatement;
import com.pulumi.policypacks.aws.wafv2.outputs.WebAclRuleStatementRateBasedStatementScopeDownStatementXssMatchStatement;
import javax.annotation.Nullable;


public final class WebAclRuleStatementRateBasedStatementScopeDownStatement {

    /**
     * Logical rule statement used to combine other rule statements with AND logic. See `and_statement` below for details.
     * 
     */
    private @Nullable UndeferrableValue<WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatement> andStatement;

    public @Nullable WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatement andStatement() {
        if (andStatement == null) return null;
        return andStatement.getValue("WebAclRuleStatementRateBasedStatementScopeDownStatement.andStatement");
    }

    /**
     * Rule statement that defines a string match search for AWS WAF to apply to web requests. See `byte_match_statement` below for details.
     * 
     */
    private @Nullable UndeferrableValue<WebAclRuleStatementRateBasedStatementScopeDownStatementByteMatchStatement> byteMatchStatement;

    public @Nullable WebAclRuleStatementRateBasedStatementScopeDownStatementByteMatchStatement byteMatchStatement() {
        if (byteMatchStatement == null) return null;
        return byteMatchStatement.getValue("WebAclRuleStatementRateBasedStatementScopeDownStatement.byteMatchStatement");
    }

    /**
     * Rule statement used to identify web requests based on country of origin. See `geo_match_statement` below for details.
     * 
     */
    private @Nullable UndeferrableValue<WebAclRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatement> geoMatchStatement;

    public @Nullable WebAclRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatement geoMatchStatement() {
        if (geoMatchStatement == null) return null;
        return geoMatchStatement.getValue("WebAclRuleStatementRateBasedStatementScopeDownStatement.geoMatchStatement");
    }

    /**
     * Rule statement used to detect web requests coming from particular IP addresses or address ranges. See `ip_set_reference_statement` below for details.
     * 
     */
    private @Nullable UndeferrableValue<WebAclRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatement> ipSetReferenceStatement;

    public @Nullable WebAclRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatement ipSetReferenceStatement() {
        if (ipSetReferenceStatement == null) return null;
        return ipSetReferenceStatement.getValue("WebAclRuleStatementRateBasedStatementScopeDownStatement.ipSetReferenceStatement");
    }

    /**
     * Rule statement that defines a string match search against labels that have been added to the web request by rules that have already run in the web ACL. See `label_match_statement` below for details.
     * 
     */
    private @Nullable UndeferrableValue<WebAclRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatement> labelMatchStatement;

    public @Nullable WebAclRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatement labelMatchStatement() {
        if (labelMatchStatement == null) return null;
        return labelMatchStatement.getValue("WebAclRuleStatementRateBasedStatementScopeDownStatement.labelMatchStatement");
    }

    /**
     * Logical rule statement used to negate the results of another rule statement. See `not_statement` below for details.
     * 
     */
    private @Nullable UndeferrableValue<WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatement> notStatement;

    public @Nullable WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatement notStatement() {
        if (notStatement == null) return null;
        return notStatement.getValue("WebAclRuleStatementRateBasedStatementScopeDownStatement.notStatement");
    }

    /**
     * Logical rule statement used to combine other rule statements with OR logic. See `or_statement` below for details.
     * 
     */
    private @Nullable UndeferrableValue<WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatement> orStatement;

    public @Nullable WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatement orStatement() {
        if (orStatement == null) return null;
        return orStatement.getValue("WebAclRuleStatementRateBasedStatementScopeDownStatement.orStatement");
    }

    /**
     * Rule statement used to search web request components for a match against a single regular expression. See `regex_match_statement` below for details.
     * 
     */
    private @Nullable UndeferrableValue<WebAclRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatement> regexMatchStatement;

    public @Nullable WebAclRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatement regexMatchStatement() {
        if (regexMatchStatement == null) return null;
        return regexMatchStatement.getValue("WebAclRuleStatementRateBasedStatementScopeDownStatement.regexMatchStatement");
    }

    /**
     * Rule statement used to search web request components for matches with regular expressions. See `regex_pattern_set_reference_statement` below for details.
     * 
     */
    private @Nullable UndeferrableValue<WebAclRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatement> regexPatternSetReferenceStatement;

    public @Nullable WebAclRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatement regexPatternSetReferenceStatement() {
        if (regexPatternSetReferenceStatement == null) return null;
        return regexPatternSetReferenceStatement.getValue("WebAclRuleStatementRateBasedStatementScopeDownStatement.regexPatternSetReferenceStatement");
    }

    /**
     * Rule statement that compares a number of bytes against the size of a request component, using a comparison operator, such as greater than (&gt;) or less than (&lt;). See `size_constraint_statement` below for more details.
     * 
     */
    private @Nullable UndeferrableValue<WebAclRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatement> sizeConstraintStatement;

    public @Nullable WebAclRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatement sizeConstraintStatement() {
        if (sizeConstraintStatement == null) return null;
        return sizeConstraintStatement.getValue("WebAclRuleStatementRateBasedStatementScopeDownStatement.sizeConstraintStatement");
    }

    /**
     * An SQL injection match condition identifies the part of web requests, such as the URI or the query string, that you want AWS WAF to inspect. See `sqli_match_statement` below for details.
     * 
     */
    private @Nullable UndeferrableValue<WebAclRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatement> sqliMatchStatement;

    public @Nullable WebAclRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatement sqliMatchStatement() {
        if (sqliMatchStatement == null) return null;
        return sqliMatchStatement.getValue("WebAclRuleStatementRateBasedStatementScopeDownStatement.sqliMatchStatement");
    }

    /**
     * Rule statement that defines a cross-site scripting (XSS) match search for AWS WAF to apply to web requests. See `xss_match_statement` below for details.
     * 
     */
    private @Nullable UndeferrableValue<WebAclRuleStatementRateBasedStatementScopeDownStatementXssMatchStatement> xssMatchStatement;

    public @Nullable WebAclRuleStatementRateBasedStatementScopeDownStatementXssMatchStatement xssMatchStatement() {
        if (xssMatchStatement == null) return null;
        return xssMatchStatement.getValue("WebAclRuleStatementRateBasedStatementScopeDownStatement.xssMatchStatement");
    }

}
