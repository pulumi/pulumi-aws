// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.securitylake;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.securitylake.inputs.SubscriberSourceArgs;
import com.pulumi.policypacks.aws.securitylake.inputs.SubscriberSubscriberIdentityArgs;
import com.pulumi.policypacks.aws.securitylake.inputs.SubscriberTimeoutsArgs;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:securitylake/subscriber:Subscriber")
public final class SubscriberArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The Amazon S3 or Lake Formation access type.
     * 
     */
    private UndeferrableValue<String> accessType;

    public String accessType() {
        if (accessType == null) return null;
        return accessType.getValue("SubscriberArgs.accessType");
    }

    /**
     * The supported AWS services from which logs and events are collected. Security Lake supports log and event collection for natively supported AWS services. See `source` Blocks below.
     * 
     */
    private UndeferrableValue<SubscriberSourceArgs> source;

    public SubscriberSourceArgs source() {
        if (source == null) return null;
        return source.getValue("SubscriberArgs.source");
    }

    /**
     * The description for your subscriber account in Security Lake.
     * 
     */
    private UndeferrableValue<String> subscriberDescription;

    public String subscriberDescription() {
        if (subscriberDescription == null) return null;
        return subscriberDescription.getValue("SubscriberArgs.subscriberDescription");
    }

    /**
     * The AWS identity used to access your data. See `subscriber_identity` Block below.
     * 
     */
    private UndeferrableValue<SubscriberSubscriberIdentityArgs> subscriberIdentity;

    public SubscriberSubscriberIdentityArgs subscriberIdentity() {
        if (subscriberIdentity == null) return null;
        return subscriberIdentity.getValue("SubscriberArgs.subscriberIdentity");
    }

    /**
     * The name of your Security Lake subscriber account.
     * 
     */
    private UndeferrableValue<String> subscriberName;

    public String subscriberName() {
        if (subscriberName == null) return null;
        return subscriberName.getValue("SubscriberArgs.subscriberName");
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("SubscriberArgs.tags");
    }

    private UndeferrableValue<SubscriberTimeoutsArgs> timeouts;

    public SubscriberTimeoutsArgs timeouts() {
        if (timeouts == null) return null;
        return timeouts.getValue("SubscriberArgs.timeouts");
    }

}
