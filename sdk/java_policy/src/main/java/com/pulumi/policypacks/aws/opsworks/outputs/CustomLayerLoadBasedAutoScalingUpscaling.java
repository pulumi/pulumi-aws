// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.opsworks.outputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class CustomLayerLoadBasedAutoScalingUpscaling {

    /**
     * Custom Cloudwatch auto scaling alarms, to be used as thresholds. This parameter takes a list of up to five alarm names, which are case sensitive and must be in the same region as the stack.
     * 
     */
    private @Nullable UndeferrableValue<List<String>> alarms;

    public @Nullable List<String> alarms() {
        if (alarms == null) return null;
        return alarms.getValue("CustomLayerLoadBasedAutoScalingUpscaling.alarms");
    }

    /**
     * The CPU utilization threshold, as a percent of the available CPU. A value of -1 disables the threshold.
     * 
     */
    private @Nullable UndeferrableValue<Double> cpuThreshold;

    public @Nullable Double cpuThreshold() {
        if (cpuThreshold == null) return null;
        return cpuThreshold.getValue("CustomLayerLoadBasedAutoScalingUpscaling.cpuThreshold");
    }

    /**
     * The amount of time (in minutes) after a scaling event occurs that AWS OpsWorks Stacks should ignore metrics and suppress additional scaling events.
     * 
     */
    private @Nullable UndeferrableValue<Integer> ignoreMetricsTime;

    public @Nullable Integer ignoreMetricsTime() {
        if (ignoreMetricsTime == null) return null;
        return ignoreMetricsTime.getValue("CustomLayerLoadBasedAutoScalingUpscaling.ignoreMetricsTime");
    }

    /**
     * The number of instances to add or remove when the load exceeds a threshold.
     * 
     */
    private @Nullable UndeferrableValue<Integer> instanceCount;

    public @Nullable Integer instanceCount() {
        if (instanceCount == null) return null;
        return instanceCount.getValue("CustomLayerLoadBasedAutoScalingUpscaling.instanceCount");
    }

    /**
     * The load threshold. A value of -1 disables the threshold.
     * 
     */
    private @Nullable UndeferrableValue<Double> loadThreshold;

    public @Nullable Double loadThreshold() {
        if (loadThreshold == null) return null;
        return loadThreshold.getValue("CustomLayerLoadBasedAutoScalingUpscaling.loadThreshold");
    }

    /**
     * The memory utilization threshold, as a percent of the available memory. A value of -1 disables the threshold.
     * 
     */
    private @Nullable UndeferrableValue<Double> memoryThreshold;

    public @Nullable Double memoryThreshold() {
        if (memoryThreshold == null) return null;
        return memoryThreshold.getValue("CustomLayerLoadBasedAutoScalingUpscaling.memoryThreshold");
    }

    /**
     * The amount of time, in minutes, that the load must exceed a threshold before more instances are added or removed.
     * 
     */
    private @Nullable UndeferrableValue<Integer> thresholdsWaitTime;

    public @Nullable Integer thresholdsWaitTime() {
        if (thresholdsWaitTime == null) return null;
        return thresholdsWaitTime.getValue("CustomLayerLoadBasedAutoScalingUpscaling.thresholdsWaitTime");
    }

}
