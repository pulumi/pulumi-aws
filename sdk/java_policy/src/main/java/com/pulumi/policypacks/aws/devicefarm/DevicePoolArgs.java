// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.devicefarm;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.devicefarm.inputs.DevicePoolRuleArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:devicefarm/devicePool:DevicePool")
public final class DevicePoolArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The device pool&#39;s description.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("DevicePoolArgs.description");
    }

    /**
     * The number of devices that Device Farm can add to your device pool.
     * 
     */
    private UndeferrableValue<Integer> maxDevices;

    public Integer maxDevices() {
        if (maxDevices == null) return null;
        return maxDevices.getValue("DevicePoolArgs.maxDevices");
    }

    /**
     * The name of the Device Pool
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("DevicePoolArgs.name");
    }

    /**
     * The ARN of the project for the device pool.
     * 
     */
    private UndeferrableValue<String> projectArn;

    public String projectArn() {
        if (projectArn == null) return null;
        return projectArn.getValue("DevicePoolArgs.projectArn");
    }

    /**
     * The device pool&#39;s rules. See Rule.
     * 
     */
    private UndeferrableValue<List<DevicePoolRuleArgs>> rules;

    public List<DevicePoolRuleArgs> rules() {
        if (rules == null) return null;
        return rules.getValue("DevicePoolArgs.rules");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("DevicePoolArgs.tags");
    }

}
