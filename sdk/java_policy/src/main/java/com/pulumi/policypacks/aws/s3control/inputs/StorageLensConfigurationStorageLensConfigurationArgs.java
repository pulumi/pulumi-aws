// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.s3control.inputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.s3control.inputs.StorageLensConfigurationStorageLensConfigurationAccountLevelArgs;
import com.pulumi.policypacks.aws.s3control.inputs.StorageLensConfigurationStorageLensConfigurationAwsOrgArgs;
import com.pulumi.policypacks.aws.s3control.inputs.StorageLensConfigurationStorageLensConfigurationDataExportArgs;
import com.pulumi.policypacks.aws.s3control.inputs.StorageLensConfigurationStorageLensConfigurationExcludeArgs;
import com.pulumi.policypacks.aws.s3control.inputs.StorageLensConfigurationStorageLensConfigurationIncludeArgs;
import java.lang.Boolean;
import javax.annotation.Nullable;


public final class StorageLensConfigurationStorageLensConfigurationArgs {

    /**
     * The account-level configurations of the S3 Storage Lens configuration. See Account Level below for more details.
     * 
     */
    private UndeferrableValue<StorageLensConfigurationStorageLensConfigurationAccountLevelArgs> accountLevel;

    public StorageLensConfigurationStorageLensConfigurationAccountLevelArgs accountLevel() {
        if (accountLevel == null) return null;
        return accountLevel.getValue("StorageLensConfigurationStorageLensConfigurationArgs.accountLevel");
    }

    /**
     * The Amazon Web Services organization for the S3 Storage Lens configuration. See AWS Org below for more details.
     * 
     */
    private UndeferrableValue<StorageLensConfigurationStorageLensConfigurationAwsOrgArgs> awsOrg;

    public StorageLensConfigurationStorageLensConfigurationAwsOrgArgs awsOrg() {
        if (awsOrg == null) return null;
        return awsOrg.getValue("StorageLensConfigurationStorageLensConfigurationArgs.awsOrg");
    }

    /**
     * Properties of S3 Storage Lens metrics export including the destination, schema and format. See Data Export below for more details.
     * 
     */
    private UndeferrableValue<StorageLensConfigurationStorageLensConfigurationDataExportArgs> dataExport;

    public StorageLensConfigurationStorageLensConfigurationDataExportArgs dataExport() {
        if (dataExport == null) return null;
        return dataExport.getValue("StorageLensConfigurationStorageLensConfigurationArgs.dataExport");
    }

    /**
     * Whether the S3 Storage Lens configuration is enabled.
     * 
     */
    private UndeferrableValue<Boolean> enabled;

    public Boolean enabled() {
        if (enabled == null) return null;
        return enabled.getValue("StorageLensConfigurationStorageLensConfigurationArgs.enabled");
    }

    /**
     * What is excluded in this configuration. Conflicts with `include`. See Exclude below for more details.
     * 
     */
    private UndeferrableValue<StorageLensConfigurationStorageLensConfigurationExcludeArgs> exclude;

    public StorageLensConfigurationStorageLensConfigurationExcludeArgs exclude() {
        if (exclude == null) return null;
        return exclude.getValue("StorageLensConfigurationStorageLensConfigurationArgs.exclude");
    }

    /**
     * What is included in this configuration. Conflicts with `exclude`. See Include below for more details.
     * 
     */
    private UndeferrableValue<StorageLensConfigurationStorageLensConfigurationIncludeArgs> include;

    public StorageLensConfigurationStorageLensConfigurationIncludeArgs include() {
        if (include == null) return null;
        return include.getValue("StorageLensConfigurationStorageLensConfigurationArgs.include");
    }

}
