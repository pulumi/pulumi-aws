// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.imagebuilder;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.imagebuilder.inputs.ImageRecipeBlockDeviceMappingArgs;
import com.pulumi.policypacks.aws.imagebuilder.inputs.ImageRecipeComponentArgs;
import com.pulumi.policypacks.aws.imagebuilder.inputs.ImageRecipeSystemsManagerAgentArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:imagebuilder/imageRecipe:ImageRecipe")
public final class ImageRecipeArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Configuration block(s) with block device mappings for the image recipe. Detailed below.
     * 
     */
    private UndeferrableValue<List<ImageRecipeBlockDeviceMappingArgs>> blockDeviceMappings;

    public List<ImageRecipeBlockDeviceMappingArgs> blockDeviceMappings() {
        if (blockDeviceMappings == null) return null;
        return blockDeviceMappings.getValue("ImageRecipeArgs.blockDeviceMappings");
    }

    /**
     * Ordered configuration block(s) with components for the image recipe. Detailed below.
     * 
     */
    private UndeferrableValue<List<ImageRecipeComponentArgs>> components;

    public List<ImageRecipeComponentArgs> components() {
        if (components == null) return null;
        return components.getValue("ImageRecipeArgs.components");
    }

    /**
     * Description of the image recipe.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("ImageRecipeArgs.description");
    }

    /**
     * Name of the image recipe.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("ImageRecipeArgs.name");
    }

    /**
     * The image recipe uses this image as a base from which to build your customized image. The value can be the base image ARN or an AMI ID.
     * 
     */
    private UndeferrableValue<String> parentImage;

    public String parentImage() {
        if (parentImage == null) return null;
        return parentImage.getValue("ImageRecipeArgs.parentImage");
    }

    /**
     * Configuration block for the Systems Manager Agent installed by default by Image Builder. Detailed below.
     * 
     */
    private UndeferrableValue<ImageRecipeSystemsManagerAgentArgs> systemsManagerAgent;

    public ImageRecipeSystemsManagerAgentArgs systemsManagerAgent() {
        if (systemsManagerAgent == null) return null;
        return systemsManagerAgent.getValue("ImageRecipeArgs.systemsManagerAgent");
    }

    /**
     * Key-value map of resource tags for the image recipe. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("ImageRecipeArgs.tags");
    }

    /**
     * Base64 encoded user data. Use this to provide commands or a command script to run when you launch your build instance.
     * 
     */
    private UndeferrableValue<String> userDataBase64;

    public String userDataBase64() {
        if (userDataBase64 == null) return null;
        return userDataBase64.getValue("ImageRecipeArgs.userDataBase64");
    }

    /**
     * The semantic version of the image recipe, which specifies the version in the following format, with numeric values in each position to indicate a specific version: major.minor.patch. For example: 1.0.0.
     * 
     * The following attributes are optional:
     * 
     */
    private UndeferrableValue<String> version;

    public String version() {
        if (version == null) return null;
        return version.getValue("ImageRecipeArgs.version");
    }

    /**
     * The working directory to be used during build and test workflows.
     * 
     */
    private UndeferrableValue<String> workingDirectory;

    public String workingDirectory() {
        if (workingDirectory == null) return null;
        return workingDirectory.getValue("ImageRecipeArgs.workingDirectory");
    }

}
