// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.sagemaker;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.sagemaker.inputs.AppResourceSpecArgs;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:sagemaker/app:App")
public final class AppArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The name of the app.
     * 
     */
    @PolicyResourceProperty(name="appName", flag="unknown_appName")
    private String value_appName;
    private boolean unknown_appName;
    public String appName() {
        if (!unknown_appName) return value_appName;
        throw new UndeferrableValueException("Value 'AppArgs.appName' is not present");
    }

    /**
     * The type of app. Valid values are `JupyterServer`, `KernelGateway`, `RStudioServerPro`, `RSessionGateway`, `TensorBoard`, `CodeEditor`, `JupyterLab`, `DetailedProfiler`, and `Canvas`.
     * 
     */
    @PolicyResourceProperty(name="appType", flag="unknown_appType")
    private String value_appType;
    private boolean unknown_appType;
    public String appType() {
        if (!unknown_appType) return value_appType;
        throw new UndeferrableValueException("Value 'AppArgs.appType' is not present");
    }

    /**
     * The domain ID.
     * 
     */
    @PolicyResourceProperty(name="domainId", flag="unknown_domainId")
    private String value_domainId;
    private boolean unknown_domainId;
    public String domainId() {
        if (!unknown_domainId) return value_domainId;
        throw new UndeferrableValueException("Value 'AppArgs.domainId' is not present");
    }

    /**
     * The instance type and the Amazon Resource Name (ARN) of the SageMaker AI image created on the instance.See Resource Spec below.
     * 
     */
    @PolicyResourceProperty(name="resourceSpec", flag="unknown_resourceSpec")
    private AppResourceSpecArgs value_resourceSpec;
    private boolean unknown_resourceSpec;
    public AppResourceSpecArgs resourceSpec() {
        if (!unknown_resourceSpec) return value_resourceSpec;
        throw new UndeferrableValueException("Value 'AppArgs.resourceSpec' is not present");
    }

    /**
     * The name of the space. At least one of `user_profile_name` or `space_name` required.
     * 
     */
    @PolicyResourceProperty(name="spaceName", flag="unknown_spaceName")
    private String value_spaceName;
    private boolean unknown_spaceName;
    public String spaceName() {
        if (!unknown_spaceName) return value_spaceName;
        throw new UndeferrableValueException("Value 'AppArgs.spaceName' is not present");
    }

    /**
     * A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'AppArgs.tags' is not present");
    }

    /**
     * The user profile name. At least one of `user_profile_name` or `space_name` required.
     * 
     */
    @PolicyResourceProperty(name="userProfileName", flag="unknown_userProfileName")
    private String value_userProfileName;
    private boolean unknown_userProfileName;
    public String userProfileName() {
        if (!unknown_userProfileName) return value_userProfileName;
        throw new UndeferrableValueException("Value 'AppArgs.userProfileName' is not present");
    }

}
