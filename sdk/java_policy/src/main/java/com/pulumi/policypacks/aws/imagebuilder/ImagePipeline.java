// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.imagebuilder;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.imagebuilder.outputs.ImagePipelineImageScanningConfiguration;
import com.pulumi.policypacks.aws.imagebuilder.outputs.ImagePipelineImageTestsConfiguration;
import com.pulumi.policypacks.aws.imagebuilder.outputs.ImagePipelineSchedule;
import com.pulumi.policypacks.aws.imagebuilder.outputs.ImagePipelineWorkflow;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:imagebuilder/imagePipeline:ImagePipeline")
public final class ImagePipeline extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Amazon Resource Name (ARN) of the image pipeline.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'ImagePipeline.arn' is not present");
    }

    /**
     * Amazon Resource Name (ARN) of the container recipe.
     * 
     */
    @PolicyResourceProperty(name="containerRecipeArn", flag="unknown_containerRecipeArn")
    private @Nullable String value_containerRecipeArn;
    private boolean unknown_containerRecipeArn;
    public @Nullable String containerRecipeArn() {
        if (!unknown_containerRecipeArn) return value_containerRecipeArn;
        throw new UndeferrableValueException("Value 'ImagePipeline.containerRecipeArn' is not present");
    }

    /**
     * Date the image pipeline was created.
     * 
     */
    @PolicyResourceProperty(name="dateCreated", flag="unknown_dateCreated")
    private String value_dateCreated;
    private boolean unknown_dateCreated;
    public String dateCreated() {
        if (!unknown_dateCreated) return value_dateCreated;
        throw new UndeferrableValueException("Value 'ImagePipeline.dateCreated' is not present");
    }

    /**
     * Date the image pipeline was last run.
     * 
     */
    @PolicyResourceProperty(name="dateLastRun", flag="unknown_dateLastRun")
    private String value_dateLastRun;
    private boolean unknown_dateLastRun;
    public String dateLastRun() {
        if (!unknown_dateLastRun) return value_dateLastRun;
        throw new UndeferrableValueException("Value 'ImagePipeline.dateLastRun' is not present");
    }

    /**
     * Date the image pipeline will run next.
     * 
     */
    @PolicyResourceProperty(name="dateNextRun", flag="unknown_dateNextRun")
    private String value_dateNextRun;
    private boolean unknown_dateNextRun;
    public String dateNextRun() {
        if (!unknown_dateNextRun) return value_dateNextRun;
        throw new UndeferrableValueException("Value 'ImagePipeline.dateNextRun' is not present");
    }

    /**
     * Date the image pipeline was updated.
     * 
     */
    @PolicyResourceProperty(name="dateUpdated", flag="unknown_dateUpdated")
    private String value_dateUpdated;
    private boolean unknown_dateUpdated;
    public String dateUpdated() {
        if (!unknown_dateUpdated) return value_dateUpdated;
        throw new UndeferrableValueException("Value 'ImagePipeline.dateUpdated' is not present");
    }

    /**
     * Description of the image pipeline.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private @Nullable String value_description;
    private boolean unknown_description;
    public @Nullable String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'ImagePipeline.description' is not present");
    }

    /**
     * Amazon Resource Name (ARN) of the Image Builder Distribution Configuration.
     * 
     */
    @PolicyResourceProperty(name="distributionConfigurationArn", flag="unknown_distributionConfigurationArn")
    private @Nullable String value_distributionConfigurationArn;
    private boolean unknown_distributionConfigurationArn;
    public @Nullable String distributionConfigurationArn() {
        if (!unknown_distributionConfigurationArn) return value_distributionConfigurationArn;
        throw new UndeferrableValueException("Value 'ImagePipeline.distributionConfigurationArn' is not present");
    }

    /**
     * Whether additional information about the image being created is collected. Defaults to `true`.
     * 
     */
    @PolicyResourceProperty(name="enhancedImageMetadataEnabled", flag="unknown_enhancedImageMetadataEnabled")
    private @Nullable Boolean value_enhancedImageMetadataEnabled;
    private boolean unknown_enhancedImageMetadataEnabled;
    public @Nullable Boolean enhancedImageMetadataEnabled() {
        if (!unknown_enhancedImageMetadataEnabled) return value_enhancedImageMetadataEnabled;
        throw new UndeferrableValueException("Value 'ImagePipeline.enhancedImageMetadataEnabled' is not present");
    }

    /**
     * Amazon Resource Name (ARN) of the service-linked role to be used by Image Builder to [execute workflows](https://docs.aws.amazon.com/imagebuilder/latest/userguide/manage-image-workflows.html).
     * 
     */
    @PolicyResourceProperty(name="executionRole", flag="unknown_executionRole")
    private @Nullable String value_executionRole;
    private boolean unknown_executionRole;
    public @Nullable String executionRole() {
        if (!unknown_executionRole) return value_executionRole;
        throw new UndeferrableValueException("Value 'ImagePipeline.executionRole' is not present");
    }

    /**
     * Amazon Resource Name (ARN) of the image recipe.
     * 
     */
    @PolicyResourceProperty(name="imageRecipeArn", flag="unknown_imageRecipeArn")
    private @Nullable String value_imageRecipeArn;
    private boolean unknown_imageRecipeArn;
    public @Nullable String imageRecipeArn() {
        if (!unknown_imageRecipeArn) return value_imageRecipeArn;
        throw new UndeferrableValueException("Value 'ImagePipeline.imageRecipeArn' is not present");
    }

    /**
     * Configuration block with image scanning configuration. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="imageScanningConfiguration", flag="unknown_imageScanningConfiguration")
    private ImagePipelineImageScanningConfiguration value_imageScanningConfiguration;
    private boolean unknown_imageScanningConfiguration;
    public ImagePipelineImageScanningConfiguration imageScanningConfiguration() {
        if (!unknown_imageScanningConfiguration) return value_imageScanningConfiguration;
        throw new UndeferrableValueException("Value 'ImagePipeline.imageScanningConfiguration' is not present");
    }

    /**
     * Configuration block with image tests configuration. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="imageTestsConfiguration", flag="unknown_imageTestsConfiguration")
    private ImagePipelineImageTestsConfiguration value_imageTestsConfiguration;
    private boolean unknown_imageTestsConfiguration;
    public ImagePipelineImageTestsConfiguration imageTestsConfiguration() {
        if (!unknown_imageTestsConfiguration) return value_imageTestsConfiguration;
        throw new UndeferrableValueException("Value 'ImagePipeline.imageTestsConfiguration' is not present");
    }

    /**
     * Amazon Resource Name (ARN) of the Image Builder Infrastructure Configuration.
     * 
     */
    @PolicyResourceProperty(name="infrastructureConfigurationArn", flag="unknown_infrastructureConfigurationArn")
    private String value_infrastructureConfigurationArn;
    private boolean unknown_infrastructureConfigurationArn;
    public String infrastructureConfigurationArn() {
        if (!unknown_infrastructureConfigurationArn) return value_infrastructureConfigurationArn;
        throw new UndeferrableValueException("Value 'ImagePipeline.infrastructureConfigurationArn' is not present");
    }

    /**
     * Name of the image pipeline.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'ImagePipeline.name' is not present");
    }

    /**
     * Platform of the image pipeline.
     * 
     */
    @PolicyResourceProperty(name="platform", flag="unknown_platform")
    private String value_platform;
    private boolean unknown_platform;
    public String platform() {
        if (!unknown_platform) return value_platform;
        throw new UndeferrableValueException("Value 'ImagePipeline.platform' is not present");
    }

    /**
     * Configuration block with schedule settings. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="schedule", flag="unknown_schedule")
    private @Nullable ImagePipelineSchedule value_schedule;
    private boolean unknown_schedule;
    public @Nullable ImagePipelineSchedule schedule() {
        if (!unknown_schedule) return value_schedule;
        throw new UndeferrableValueException("Value 'ImagePipeline.schedule' is not present");
    }

    /**
     * Status of the image pipeline. Valid values are `DISABLED` and `ENABLED`. Defaults to `ENABLED`.
     * 
     */
    @PolicyResourceProperty(name="status", flag="unknown_status")
    private @Nullable String value_status;
    private boolean unknown_status;
    public @Nullable String status() {
        if (!unknown_status) return value_status;
        throw new UndeferrableValueException("Value 'ImagePipeline.status' is not present");
    }

    /**
     * Key-value map of resource tags for the image pipeline. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'ImagePipeline.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'ImagePipeline.tagsAll' is not present");
    }

    /**
     * Configuration block with the workflow configuration. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="workflows", flag="unknown_workflows")
    private List<ImagePipelineWorkflow> value_workflows;
    private boolean unknown_workflows;
    public List<ImagePipelineWorkflow> workflows() {
        if (!unknown_workflows) return value_workflows;
        throw new UndeferrableValueException("Value 'ImagePipeline.workflows' is not present");
    }

}
