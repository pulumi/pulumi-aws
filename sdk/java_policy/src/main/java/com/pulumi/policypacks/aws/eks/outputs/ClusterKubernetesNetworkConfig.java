// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.eks.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.eks.outputs.ClusterKubernetesNetworkConfigElasticLoadBalancing;
import java.lang.String;
import javax.annotation.Nullable;


public final class ClusterKubernetesNetworkConfig {

    /**
     * Configuration block with elastic load balancing configuration for the cluster. Detailed below.
     * 
     */
    private @Nullable UndeferrableValue<ClusterKubernetesNetworkConfigElasticLoadBalancing> elasticLoadBalancing;

    public @Nullable ClusterKubernetesNetworkConfigElasticLoadBalancing elasticLoadBalancing() {
        if (elasticLoadBalancing == null) return null;
        return elasticLoadBalancing.getValue("ClusterKubernetesNetworkConfig.elasticLoadBalancing");
    }

    /**
     * The IP family used to assign Kubernetes pod and service addresses. Valid values are `ipv4` (default) and `ipv6`. You can only specify an IP family when you create a cluster, changing this value will force a new cluster to be created.
     * 
     */
    private @Nullable UndeferrableValue<String> ipFamily;

    public @Nullable String ipFamily() {
        if (ipFamily == null) return null;
        return ipFamily.getValue("ClusterKubernetesNetworkConfig.ipFamily");
    }

    /**
     * The CIDR block to assign Kubernetes pod and service IP addresses from. If you don&#39;t specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks. We recommend that you specify a block that does not overlap with resources in other networks that are peered or connected to your VPC. You can only specify a custom CIDR block when you create a cluster, changing this value will force a new cluster to be created. The block must meet the following requirements:
     * 
     * * Within one of the following private IP address blocks: 10.0.0.0/8, 172.16.0.0/12, or 192.168.0.0/16.
     * 
     * * Doesn&#39;t overlap with any CIDR block assigned to the VPC that you selected for VPC.
     * 
     * * Between /24 and /12.
     * 
     */
    private @Nullable UndeferrableValue<String> serviceIpv4Cidr;

    public @Nullable String serviceIpv4Cidr() {
        if (serviceIpv4Cidr == null) return null;
        return serviceIpv4Cidr.getValue("ClusterKubernetesNetworkConfig.serviceIpv4Cidr");
    }

    /**
     * The CIDR block that Kubernetes pod and service IP addresses are assigned from if you specify `ipv6` for `ip_family` when you create the cluster. Kubernetes assigns service addresses from the unique local address range (fc00::/7) because you can&#39;t specify a custom IPv6 CIDR block when you create the cluster.
     * 
     */
    private @Nullable UndeferrableValue<String> serviceIpv6Cidr;

    public @Nullable String serviceIpv6Cidr() {
        if (serviceIpv6Cidr == null) return null;
        return serviceIpv6Cidr.getValue("ClusterKubernetesNetworkConfig.serviceIpv6Cidr");
    }

}
