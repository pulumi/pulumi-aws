// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.ec2.inputs.AmiCopyEbsBlockDeviceArgs;
import com.pulumi.policypacks.aws.ec2.inputs.AmiCopyEphemeralBlockDeviceArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ec2/amiCopy:AmiCopy")
public final class AmiCopyArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Date and time to deprecate the AMI. If you specified a value for seconds, Amazon EC2 rounds the seconds to the nearest minute. Valid values: [RFC3339 time string](https://tools.ietf.org/html/rfc3339#section-5.8) (`YYYY-MM-DDTHH:MM:SSZ`)
     * 
     */
    private UndeferrableValue<String> deprecationTime;

    public String deprecationTime() {
        if (deprecationTime == null) return null;
        return deprecationTime.getValue("AmiCopyArgs.deprecationTime");
    }

    /**
     * Longer, human-readable description for the AMI.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("AmiCopyArgs.description");
    }

    /**
     * ARN of the Outpost to which to copy the AMI.
     * Only specify this parameter when copying an AMI from an AWS Region to an Outpost. The AMI must be in the Region of the destination Outpost.
     * 
     */
    private UndeferrableValue<String> destinationOutpostArn;

    public String destinationOutpostArn() {
        if (destinationOutpostArn == null) return null;
        return destinationOutpostArn.getValue("AmiCopyArgs.destinationOutpostArn");
    }

    /**
     * Nested block describing an EBS block device that should be
     * attached to created instances. The structure of this block is described below.
     * 
     */
    private UndeferrableValue<List<AmiCopyEbsBlockDeviceArgs>> ebsBlockDevices;

    public List<AmiCopyEbsBlockDeviceArgs> ebsBlockDevices() {
        if (ebsBlockDevices == null) return null;
        return ebsBlockDevices.getValue("AmiCopyArgs.ebsBlockDevices");
    }

    /**
     * Whether the destination snapshots of the copied image should be encrypted. Defaults to `false`
     * 
     */
    private UndeferrableValue<Boolean> encrypted;

    public Boolean encrypted() {
        if (encrypted == null) return null;
        return encrypted.getValue("AmiCopyArgs.encrypted");
    }

    /**
     * Nested block describing an ephemeral block device that
     * should be attached to created instances. The structure of this block is described below.
     * 
     */
    private UndeferrableValue<List<AmiCopyEphemeralBlockDeviceArgs>> ephemeralBlockDevices;

    public List<AmiCopyEphemeralBlockDeviceArgs> ephemeralBlockDevices() {
        if (ephemeralBlockDevices == null) return null;
        return ephemeralBlockDevices.getValue("AmiCopyArgs.ephemeralBlockDevices");
    }

    /**
     * Full ARN of the KMS Key to use when encrypting the snapshots of an image during a copy operation. If not specified, then the default AWS KMS Key will be used
     * 
     */
    private UndeferrableValue<String> kmsKeyId;

    public String kmsKeyId() {
        if (kmsKeyId == null) return null;
        return kmsKeyId.getValue("AmiCopyArgs.kmsKeyId");
    }

    /**
     * Region-unique name for the AMI.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("AmiCopyArgs.name");
    }

    /**
     * Id of the AMI to copy. This id must be valid in the region
     * given by `source_ami_region`.
     * 
     */
    private UndeferrableValue<String> sourceAmiId;

    public String sourceAmiId() {
        if (sourceAmiId == null) return null;
        return sourceAmiId.getValue("AmiCopyArgs.sourceAmiId");
    }

    /**
     * Region from which the AMI will be copied. This may be the
     * same as the AWS provider region in order to create a copy within the same region.
     * 
     */
    private UndeferrableValue<String> sourceAmiRegion;

    public String sourceAmiRegion() {
        if (sourceAmiRegion == null) return null;
        return sourceAmiRegion.getValue("AmiCopyArgs.sourceAmiRegion");
    }

    /**
     * Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("AmiCopyArgs.tags");
    }

}
