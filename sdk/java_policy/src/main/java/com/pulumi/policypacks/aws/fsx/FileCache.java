// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.fsx;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.fsx.FileCacheDataRepositoryAssociation;
import com.pulumi.policypacks.aws.fsx.FileCacheLustreConfiguration;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;


@PolicyResourceType(type="aws:fsx/fileCache:FileCache")
public final class FileCache extends com.pulumi.resources.PolicyResource {

    /**
     * The Amazon Resource Name (ARN) for the resource.
     * 
     */
    public String arn;



    /**
     * A boolean flag indicating whether tags for the cache should be copied to data repository associations. This value defaults to false.
     * 
     */
    public Boolean copyTagsToDataRepositoryAssociations;



    /**
     * A list of IDs of data repository associations that are associated with this cache.
     * 
     */
    public List<String> dataRepositoryAssociationIds;



    /**
     * See the `data_repository_association` configuration block. Max of 8.
     * A list of up to 8 configurations for data repository associations (DRAs) to be created during the cache creation. The DRAs link the cache to either an Amazon S3 data repository or a Network File System (NFS) data repository that supports the NFSv3 protocol. The DRA configurations must meet the following requirements: 1) All configurations on the list must be of the same data repository type, either all S3 or all NFS. A cache can&#39;t link to different data repository types at the same time. 2) An NFS DRA must link to an NFS file system that supports the NFSv3 protocol. DRA automatic import and automatic export is not supported.
     * 
     */
    public List<FileCacheDataRepositoryAssociation> dataRepositoryAssociations;



    /**
     * The Domain Name System (DNS) name for the cache.
     * 
     */
    public String dnsName;



    /**
     * The system-generated, unique ID of the cache.
     * 
     */
    public String fileCacheId;



    /**
     * The type of cache that you&#39;re creating. The only supported value is `LUSTRE`.
     * 
     */
    public String fileCacheType;



    /**
     * The version for the type of cache that you&#39;re creating. The only supported value is `2.12`.
     * 
     */
    public String fileCacheTypeVersion;



    /**
     * Specifies the ID of the AWS Key Management Service (AWS KMS) key to use for encrypting data on an Amazon File Cache. If a KmsKeyId isn&#39;t specified, the Amazon FSx-managed AWS KMS key for your account is used.
     * 
     */
    public String kmsKeyId;



    /**
     * See the `lustre_configuration` block. Required when `file_cache_type` is `LUSTRE`.
     * 
     */
    public List<FileCacheLustreConfiguration> lustreConfigurations;



    /**
     * A list of network interface IDs.
     * 
     */
    public List<String> networkInterfaceIds;



    public String ownerId;



    /**
     * A list of IDs specifying the security groups to apply to all network interfaces created for Amazon File Cache access.
     * 
     */
    public List<String> securityGroupIds;



    /**
     * The storage capacity of the cache in gibibytes (GiB). Valid values are `1200` GiB, `2400` GiB, and increments of `2400` GiB.
     * 
     */
    public Integer storageCapacity;



    /**
     * A list of subnet IDs that the cache will be accessible from. You can specify only one subnet ID.
     * 
     * The following arguments are optional:
     * 
     */
    public List<String> subnetIds;



    /**
     * A map of tags to assign to the file cache. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



    /**
     * The ID of your virtual private cloud (VPC).
     * 
     */
    public String vpcId;



}
