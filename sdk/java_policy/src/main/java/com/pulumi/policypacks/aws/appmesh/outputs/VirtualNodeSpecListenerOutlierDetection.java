// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appmesh.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.appmesh.outputs.VirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration;
import com.pulumi.policypacks.aws.appmesh.outputs.VirtualNodeSpecListenerOutlierDetectionInterval;
import java.lang.Integer;


public final class VirtualNodeSpecListenerOutlierDetection {

    /**
     * Base amount of time for which a host is ejected.
     * 
     */
    private UndeferrableValue<VirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration> baseEjectionDuration;

    public VirtualNodeSpecListenerOutlierDetectionBaseEjectionDuration baseEjectionDuration() {
        if (baseEjectionDuration == null) return null;
        return baseEjectionDuration.getValue("VirtualNodeSpecListenerOutlierDetection.baseEjectionDuration");
    }

    /**
     * Time interval between ejection sweep analysis.
     * 
     */
    private UndeferrableValue<VirtualNodeSpecListenerOutlierDetectionInterval> interval;

    public VirtualNodeSpecListenerOutlierDetectionInterval interval() {
        if (interval == null) return null;
        return interval.getValue("VirtualNodeSpecListenerOutlierDetection.interval");
    }

    /**
     * Maximum percentage of hosts in load balancing pool for upstream service that can be ejected. Will eject at least one host regardless of the value.
     * Minimum value of `0`. Maximum value of `100`.
     * 
     */
    private UndeferrableValue<Integer> maxEjectionPercent;

    public Integer maxEjectionPercent() {
        if (maxEjectionPercent == null) return null;
        return maxEjectionPercent.getValue("VirtualNodeSpecListenerOutlierDetection.maxEjectionPercent");
    }

    /**
     * Number of consecutive `5xx` errors required for ejection. Minimum value of `1`.
     * 
     */
    private UndeferrableValue<Integer> maxServerErrors;

    public Integer maxServerErrors() {
        if (maxServerErrors == null) return null;
        return maxServerErrors.getValue("VirtualNodeSpecListenerOutlierDetection.maxServerErrors");
    }

}
