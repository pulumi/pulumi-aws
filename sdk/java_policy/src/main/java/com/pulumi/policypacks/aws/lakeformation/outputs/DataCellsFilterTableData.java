// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.lakeformation.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.lakeformation.outputs.DataCellsFilterTableDataColumnWildcard;
import com.pulumi.policypacks.aws.lakeformation.outputs.DataCellsFilterTableDataRowFilter;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class DataCellsFilterTableData {

    /**
     * A list of column names and/or nested column attributes.
     * 
     */
    private @Nullable UndeferrableValue<List<String>> columnNames;

    public @Nullable List<String> columnNames() {
        if (columnNames == null) return null;
        return columnNames.getValue("DataCellsFilterTableData.columnNames");
    }

    /**
     * A wildcard with exclusions. See Column Wildcard below for details.
     * 
     */
    private @Nullable UndeferrableValue<DataCellsFilterTableDataColumnWildcard> columnWildcard;

    public @Nullable DataCellsFilterTableDataColumnWildcard columnWildcard() {
        if (columnWildcard == null) return null;
        return columnWildcard.getValue("DataCellsFilterTableData.columnWildcard");
    }

    /**
     * The name of the database.
     * 
     */
    private UndeferrableValue<String> databaseName;

    public String databaseName() {
        if (databaseName == null) return null;
        return databaseName.getValue("DataCellsFilterTableData.databaseName");
    }

    /**
     * The name of the data cells filter.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("DataCellsFilterTableData.name");
    }

    /**
     * A PartiQL predicate. See Row Filter below for details.
     * 
     */
    private @Nullable UndeferrableValue<DataCellsFilterTableDataRowFilter> rowFilter;

    public @Nullable DataCellsFilterTableDataRowFilter rowFilter() {
        if (rowFilter == null) return null;
        return rowFilter.getValue("DataCellsFilterTableData.rowFilter");
    }

    /**
     * The ID of the Data Catalog.
     * 
     */
    private UndeferrableValue<String> tableCatalogId;

    public String tableCatalogId() {
        if (tableCatalogId == null) return null;
        return tableCatalogId.getValue("DataCellsFilterTableData.tableCatalogId");
    }

    /**
     * The name of the table.
     * 
     */
    private UndeferrableValue<String> tableName;

    public String tableName() {
        if (tableName == null) return null;
        return tableName.getValue("DataCellsFilterTableData.tableName");
    }

    /**
     * ID of the data cells filter version.
     * 
     */
    private @Nullable UndeferrableValue<String> versionId;

    public @Nullable String versionId() {
        if (versionId == null) return null;
        return versionId.getValue("DataCellsFilterTableData.versionId");
    }

}
