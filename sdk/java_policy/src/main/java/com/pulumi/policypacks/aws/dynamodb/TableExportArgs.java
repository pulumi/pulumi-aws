// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.dynamodb;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.dynamodb.inputs.TableExportIncrementalExportSpecificationArgs;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:dynamodb/tableExport:TableExport")
public final class TableExportArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Format for the exported data. Valid values are: `DYNAMODB_JSON`, `ION`. See the [AWS Documentation](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/S3DataExport.Output.html#S3DataExport.Output_Data) for more information on these export formats. Default is `DYNAMODB_JSON`.
     * 
     */
    private UndeferrableValue<String> exportFormat;

    public String exportFormat() {
        if (exportFormat == null) return null;
        return exportFormat.getValue("TableExportArgs.exportFormat");
    }

    /**
     * Time in RFC3339 format from which to export table data. The table export will be a snapshot of the table&#39;s state at this point in time. Omitting this value will result in a snapshot from the current time.
     * 
     */
    private UndeferrableValue<String> exportTime;

    public String exportTime() {
        if (exportTime == null) return null;
        return exportTime.getValue("TableExportArgs.exportTime");
    }

    /**
     * Whether to execute as a full export or incremental export. Valid values are: `FULL_EXPORT`, `INCREMENTAL_EXPORT`. Defaults to `FULL_EXPORT`. If `INCREMENTAL_EXPORT` is provided, the `incremental_export_specification` argument must also be provided.
     * `incremental_export_specification` - (Optional, Forces new resource) Parameters specific to an incremental export. See `incremental_export_specification` Block for details.
     * 
     */
    private UndeferrableValue<String> exportType;

    public String exportType() {
        if (exportType == null) return null;
        return exportType.getValue("TableExportArgs.exportType");
    }

    private UndeferrableValue<TableExportIncrementalExportSpecificationArgs> incrementalExportSpecification;

    public TableExportIncrementalExportSpecificationArgs incrementalExportSpecification() {
        if (incrementalExportSpecification == null) return null;
        return incrementalExportSpecification.getValue("TableExportArgs.incrementalExportSpecification");
    }

    /**
     * Name of the Amazon S3 bucket to export the snapshot to. See the [AWS Documentation](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/S3DataExport_Requesting.html#S3DataExport_Requesting_Permissions) for information on how configure this S3 bucket.
     * 
     */
    private UndeferrableValue<String> s3Bucket;

    public String s3Bucket() {
        if (s3Bucket == null) return null;
        return s3Bucket.getValue("TableExportArgs.s3Bucket");
    }

    /**
     * ID of the AWS account that owns the bucket the export will be stored in.
     * 
     */
    private UndeferrableValue<String> s3BucketOwner;

    public String s3BucketOwner() {
        if (s3BucketOwner == null) return null;
        return s3BucketOwner.getValue("TableExportArgs.s3BucketOwner");
    }

    /**
     * Amazon S3 bucket prefix to use as the file name and path of the exported snapshot.
     * 
     */
    private UndeferrableValue<String> s3Prefix;

    public String s3Prefix() {
        if (s3Prefix == null) return null;
        return s3Prefix.getValue("TableExportArgs.s3Prefix");
    }

    /**
     * Type of encryption used on the bucket where export data will be stored. Valid values are: `AES256`, `KMS`.
     * 
     */
    private UndeferrableValue<String> s3SseAlgorithm;

    public String s3SseAlgorithm() {
        if (s3SseAlgorithm == null) return null;
        return s3SseAlgorithm.getValue("TableExportArgs.s3SseAlgorithm");
    }

    /**
     * ID of the AWS KMS managed key used to encrypt the S3 bucket where export data will be stored (if applicable).
     * 
     */
    private UndeferrableValue<String> s3SseKmsKeyId;

    public String s3SseKmsKeyId() {
        if (s3SseKmsKeyId == null) return null;
        return s3SseKmsKeyId.getValue("TableExportArgs.s3SseKmsKeyId");
    }

    /**
     * ARN associated with the table to export.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> tableArn;

    public String tableArn() {
        if (tableArn == null) return null;
        return tableArn.getValue("TableExportArgs.tableArn");
    }

}
