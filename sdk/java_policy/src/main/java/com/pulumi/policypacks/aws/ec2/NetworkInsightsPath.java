// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2;

import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;


@PolicyResourceType(type="aws:ec2/networkInsightsPath:NetworkInsightsPath")
public final class NetworkInsightsPath extends com.pulumi.resources.PolicyResource {

    /**
     * ARN of the Network Insights Path.
     * 
     */
    public String arn;



    /**
     * ID or ARN of the resource which is the destination of the path. Can be an Instance, Internet Gateway, Network Interface, Transit Gateway, VPC Endpoint, VPC Peering Connection or VPN Gateway. If the resource is in another account, you must specify an ARN.
     * 
     */
    public String destination;



    /**
     * ARN of the destination.
     * 
     */
    public String destinationArn;



    /**
     * IP address of the destination resource.
     * 
     */
    public String destinationIp;



    /**
     * Destination port to analyze access to.
     * 
     */
    public Integer destinationPort;



    /**
     * Protocol to use for analysis. Valid options are `tcp` or `udp`.
     * 
     * The following arguments are optional:
     * 
     */
    public String protocol;



    /**
     * ID or ARN of the resource which is the source of the path. Can be an Instance, Internet Gateway, Network Interface, Transit Gateway, VPC Endpoint, VPC Peering Connection or VPN Gateway. If the resource is in another account, you must specify an ARN.
     * 
     */
    public String source;



    /**
     * ARN of the source.
     * 
     */
    public String sourceArn;



    /**
     * IP address of the source resource.
     * 
     */
    public String sourceIp;



    /**
     * Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



}
