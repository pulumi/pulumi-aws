// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.costexplorer.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.costexplorer.inputs.AnomalySubscriptionThresholdExpressionAndCostCategoryArgs;
import com.pulumi.policypacks.aws.costexplorer.inputs.AnomalySubscriptionThresholdExpressionAndDimensionArgs;
import com.pulumi.policypacks.aws.costexplorer.inputs.AnomalySubscriptionThresholdExpressionAndTagsArgs;
import javax.annotation.Nullable;


public final class AnomalySubscriptionThresholdExpressionAndArgs {

    /**
     * Configuration block for the filter that&#39;s based on  values. See Cost Category below.
     * 
     */
    @PolicyResourceProperty(name="costCategory", flag="unknown_costCategory")
    private AnomalySubscriptionThresholdExpressionAndCostCategoryArgs value_costCategory;
    private boolean unknown_costCategory;
    public AnomalySubscriptionThresholdExpressionAndCostCategoryArgs costCategory() {
        if (!unknown_costCategory) return value_costCategory;
        throw new UndeferrableValueException("Value 'AnomalySubscriptionThresholdExpressionAndArgs.costCategory' is not present");
    }

    /**
     * Configuration block for the specific Dimension to use for.
     * 
     */
    @PolicyResourceProperty(name="dimension", flag="unknown_dimension")
    private AnomalySubscriptionThresholdExpressionAndDimensionArgs value_dimension;
    private boolean unknown_dimension;
    public AnomalySubscriptionThresholdExpressionAndDimensionArgs dimension() {
        if (!unknown_dimension) return value_dimension;
        throw new UndeferrableValueException("Value 'AnomalySubscriptionThresholdExpressionAndArgs.dimension' is not present");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private AnomalySubscriptionThresholdExpressionAndTagsArgs value_tags;
    private boolean unknown_tags;
    public AnomalySubscriptionThresholdExpressionAndTagsArgs tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'AnomalySubscriptionThresholdExpressionAndArgs.tags' is not present");
    }

}
