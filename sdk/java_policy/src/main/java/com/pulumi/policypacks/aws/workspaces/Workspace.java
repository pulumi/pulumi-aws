// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.workspaces;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.workspaces.outputs.WorkspaceWorkspaceProperties;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:workspaces/workspace:Workspace")
public final class Workspace extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The ID of the bundle for the WorkSpace.
     * 
     */
    private UndeferrableValue<String> bundleId;

    public String bundleId() {
        if (bundleId == null) return null;
        return bundleId.getValue("Workspace.bundleId");
    }

    /**
     * The name of the WorkSpace, as seen by the operating system.
     * 
     */
    private UndeferrableValue<String> computerName;

    public String computerName() {
        if (computerName == null) return null;
        return computerName.getValue("Workspace.computerName");
    }

    /**
     * The ID of the directory for the WorkSpace.
     * 
     */
    private UndeferrableValue<String> directoryId;

    public String directoryId() {
        if (directoryId == null) return null;
        return directoryId.getValue("Workspace.directoryId");
    }

    /**
     * The IP address of the WorkSpace.
     * 
     */
    private UndeferrableValue<String> ipAddress;

    public String ipAddress() {
        if (ipAddress == null) return null;
        return ipAddress.getValue("Workspace.ipAddress");
    }

    /**
     * Indicates whether the data stored on the root volume is encrypted.
     * 
     */
    private @Nullable UndeferrableValue<Boolean> rootVolumeEncryptionEnabled;

    public @Nullable Boolean rootVolumeEncryptionEnabled() {
        if (rootVolumeEncryptionEnabled == null) return null;
        return rootVolumeEncryptionEnabled.getValue("Workspace.rootVolumeEncryptionEnabled");
    }

    /**
     * The operational state of the WorkSpace.
     * 
     */
    private UndeferrableValue<String> state;

    public String state() {
        if (state == null) return null;
        return state.getValue("Workspace.state");
    }

    /**
     * The tags for the WorkSpace. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private @Nullable UndeferrableValue<Map<String,String>> tags;

    public @Nullable Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("Workspace.tags");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    private UndeferrableValue<Map<String,String>> tagsAll;

    public Map<String,String> tagsAll() {
        if (tagsAll == null) return null;
        return tagsAll.getValue("Workspace.tagsAll");
    }

    /**
     * The user name of the user for the WorkSpace. This user name must exist in the directory for the WorkSpace.
     * 
     */
    private UndeferrableValue<String> userName;

    public String userName() {
        if (userName == null) return null;
        return userName.getValue("Workspace.userName");
    }

    /**
     * Indicates whether the data stored on the user volume is encrypted.
     * 
     */
    private @Nullable UndeferrableValue<Boolean> userVolumeEncryptionEnabled;

    public @Nullable Boolean userVolumeEncryptionEnabled() {
        if (userVolumeEncryptionEnabled == null) return null;
        return userVolumeEncryptionEnabled.getValue("Workspace.userVolumeEncryptionEnabled");
    }

    /**
     * The ARN of a symmetric AWS KMS customer master key (CMK) used to encrypt data stored on your WorkSpace. Amazon WorkSpaces does not support asymmetric CMKs.
     * 
     */
    private @Nullable UndeferrableValue<String> volumeEncryptionKey;

    public @Nullable String volumeEncryptionKey() {
        if (volumeEncryptionKey == null) return null;
        return volumeEncryptionKey.getValue("Workspace.volumeEncryptionKey");
    }

    /**
     * The WorkSpace properties.
     * 
     */
    private UndeferrableValue<WorkspaceWorkspaceProperties> workspaceProperties;

    public WorkspaceWorkspaceProperties workspaceProperties() {
        if (workspaceProperties == null) return null;
        return workspaceProperties.getValue("Workspace.workspaceProperties");
    }

}
