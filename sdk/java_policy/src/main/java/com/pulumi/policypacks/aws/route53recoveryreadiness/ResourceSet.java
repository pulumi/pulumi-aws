// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.route53recoveryreadiness;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.route53recoveryreadiness.outputs.ResourceSetResource;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:route53recoveryreadiness/resourceSet:ResourceSet")
public final class ResourceSet extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * ARN of the resource set
     * * `resources.#.component_id` - Unique identified for DNS Target Resources, use for readiness checks.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'ResourceSet.arn' is not present");
    }

    /**
     * Unique name describing the resource set.
     * 
     */
    @PolicyResourceProperty(name="resourceSetName", flag="unknown_resourceSetName")
    private String value_resourceSetName;
    private boolean unknown_resourceSetName;
    public String resourceSetName() {
        if (!unknown_resourceSetName) return value_resourceSetName;
        throw new UndeferrableValueException("Value 'ResourceSet.resourceSetName' is not present");
    }

    /**
     * Type of the resources in the resource set.
     * 
     */
    @PolicyResourceProperty(name="resourceSetType", flag="unknown_resourceSetType")
    private String value_resourceSetType;
    private boolean unknown_resourceSetType;
    public String resourceSetType() {
        if (!unknown_resourceSetType) return value_resourceSetType;
        throw new UndeferrableValueException("Value 'ResourceSet.resourceSetType' is not present");
    }

    /**
     * List of resources to add to this resource set. See below.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="resources", flag="unknown_resources")
    private List<ResourceSetResource> value_resources;
    private boolean unknown_resources;
    public List<ResourceSetResource> resources() {
        if (!unknown_resources) return value_resources;
        throw new UndeferrableValueException("Value 'ResourceSet.resources' is not present");
    }

    /**
     * Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'ResourceSet.tags' is not present");
    }

    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'ResourceSet.tagsAll' is not present");
    }

}
