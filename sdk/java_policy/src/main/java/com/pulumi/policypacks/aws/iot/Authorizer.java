// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.iot;

import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;


@PolicyResourceType(type="aws:iot/authorizer:Authorizer")
public final class Authorizer extends com.pulumi.resources.PolicyResource {

    /**
     * The ARN of the authorizer.
     * 
     */
    public String arn;



    /**
     * The ARN of the authorizer&#39;s Lambda function.
     * 
     */
    public String authorizerFunctionArn;



    /**
     * Specifies whether the HTTP caching is enabled or not. Default: `false`.
     * 
     */
    public Boolean enableCachingForHttp;



    /**
     * The name of the authorizer.
     * 
     */
    public String name;



    /**
     * Specifies whether AWS IoT validates the token signature in an authorization request. Default: `false`.
     * 
     */
    public Boolean signingDisabled;



    /**
     * The status of Authorizer request at creation. Valid values: `ACTIVE`, `INACTIVE`. Default: `ACTIVE`.
     * 
     */
    public String status;



    /**
     * Map of tags to assign to this resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



    /**
     * The name of the token key used to extract the token from the HTTP headers. This value is required if signing is enabled in your authorizer.
     * 
     */
    public String tokenKeyName;



    /**
     * The public keys used to verify the digital signature returned by your custom authentication service. This value is required if signing is enabled in your authorizer.
     * 
     */
    public Map<String,String> tokenSigningPublicKeys;



}
