// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.codepipeline.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.codepipeline.outputs.PipelineStageOnSuccessConditionRule;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class PipelineStageOnSuccessCondition {

    /**
     * The action to be done when the condition is met. For example, rolling back an execution for a failure condition. Possible values are `ROLLBACK`, `FAIL`, `RETRY` and `SKIP`.
     * 
     */
    @PolicyResourceProperty(name="result", flag="unknown_result")
    private @Nullable String value_result;
    private boolean unknown_result;
    public @Nullable String result() {
        if (!unknown_result) return value_result;
        throw new UndeferrableValueException("Value 'PipelineStageOnSuccessCondition.result' is not present");
    }

    /**
     * The rules that make up the condition. Defined as a `rule` block below.
     * 
     */
    @PolicyResourceProperty(name="rules", flag="unknown_rules")
    private List<PipelineStageOnSuccessConditionRule> value_rules;
    private boolean unknown_rules;
    public List<PipelineStageOnSuccessConditionRule> rules() {
        if (!unknown_rules) return value_rules;
        throw new UndeferrableValueException("Value 'PipelineStageOnSuccessCondition.rules' is not present");
    }

}
