// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.serverlessrepository;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:serverlessrepository/cloudFormationStack:CloudFormationStack")
public final class CloudFormationStack extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The ARN of the application from the Serverless Application Repository.
     * 
     */
    @PolicyResourceProperty(name="applicationId", flag="unknown_applicationId")
    private String value_applicationId;
    private boolean unknown_applicationId;
    public String applicationId() {
        if (!unknown_applicationId) return value_applicationId;
        throw new UndeferrableValueException("Value 'CloudFormationStack.applicationId' is not present");
    }

    /**
     * A list of capabilities. Valid values are `CAPABILITY_IAM`, `CAPABILITY_NAMED_IAM`, `CAPABILITY_RESOURCE_POLICY`, or `CAPABILITY_AUTO_EXPAND`
     * 
     */
    @PolicyResourceProperty(name="capabilities", flag="unknown_capabilities")
    private List<String> value_capabilities;
    private boolean unknown_capabilities;
    public List<String> capabilities() {
        if (!unknown_capabilities) return value_capabilities;
        throw new UndeferrableValueException("Value 'CloudFormationStack.capabilities' is not present");
    }

    /**
     * The name of the stack to create. The resource deployed in AWS will be prefixed with `serverlessrepo-`
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'CloudFormationStack.name' is not present");
    }

    /**
     * A map of outputs from the stack.
     * 
     */
    @PolicyResourceProperty(name="outputs", flag="unknown_outputs")
    private Map<String,String> value_outputs;
    private boolean unknown_outputs;
    public Map<String,String> outputs() {
        if (!unknown_outputs) return value_outputs;
        throw new UndeferrableValueException("Value 'CloudFormationStack.outputs' is not present");
    }

    /**
     * A map of Parameter structures that specify input parameters for the stack.
     * 
     */
    @PolicyResourceProperty(name="parameters", flag="unknown_parameters")
    private Map<String,String> value_parameters;
    private boolean unknown_parameters;
    public Map<String,String> parameters() {
        if (!unknown_parameters) return value_parameters;
        throw new UndeferrableValueException("Value 'CloudFormationStack.parameters' is not present");
    }

    /**
     * The version of the application to deploy. If not supplied, deploys the latest version.
     * 
     */
    @PolicyResourceProperty(name="semanticVersion", flag="unknown_semanticVersion")
    private String value_semanticVersion;
    private boolean unknown_semanticVersion;
    public String semanticVersion() {
        if (!unknown_semanticVersion) return value_semanticVersion;
        throw new UndeferrableValueException("Value 'CloudFormationStack.semanticVersion' is not present");
    }

    /**
     * A list of tags to associate with this stack. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'CloudFormationStack.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'CloudFormationStack.tagsAll' is not present");
    }

}
