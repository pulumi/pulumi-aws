// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ssm;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.ssm.MaintenanceWindowTaskTarget;
import com.pulumi.policypacks.aws.ssm.MaintenanceWindowTaskTaskInvocationParameters;
import java.lang.Integer;
import java.lang.String;
import java.util.List;


@PolicyResourceType(type="aws:ssm/maintenanceWindowTask:MaintenanceWindowTask")
public final class MaintenanceWindowTask extends com.pulumi.resources.PolicyResource {

    /**
     * The ARN of the maintenance window task.
     * 
     */
    public String arn;



    /**
     * Indicates whether tasks should continue to run after the cutoff time specified in the maintenance windows is reached. Valid values are `CONTINUE_TASK` and `CANCEL_TASK`.
     * 
     */
    public String cutoffBehavior;



    /**
     * The description of the maintenance window task.
     * 
     */
    public String description;



    /**
     * The maximum number of targets this task can be run for in parallel.
     * 
     */
    public String maxConcurrency;



    /**
     * The maximum number of errors allowed before this task stops being scheduled.
     * 
     */
    public String maxErrors;



    /**
     * The name of the maintenance window task.
     * 
     */
    public String name;



    /**
     * The priority of the task in the Maintenance Window, the lower the number the higher the priority. Tasks in a Maintenance Window are scheduled in priority order with tasks that have the same priority scheduled in parallel.
     * 
     */
    public Integer priority;



    /**
     * The role that should be assumed when executing the task. If a role is not provided, Systems Manager uses your account&#39;s service-linked role. If no service-linked role for Systems Manager exists in your account, it is created for you.
     * 
     */
    public String serviceRoleArn;



    /**
     * The targets (either instances or window target ids). Instances are specified using Key=InstanceIds,Values=instanceid1,instanceid2. Window target ids are specified using Key=WindowTargetIds,Values=window target id1, window target id2.
     * 
     */
    public List<MaintenanceWindowTaskTarget> targets;



    /**
     * The ARN of the task to execute.
     * 
     */
    public String taskArn;



    /**
     * Configuration block with parameters for task execution.
     * 
     */
    public MaintenanceWindowTaskTaskInvocationParameters taskInvocationParameters;



    /**
     * The type of task being registered. Valid values: `AUTOMATION`, `LAMBDA`, `RUN_COMMAND` or `STEP_FUNCTIONS`.
     * 
     */
    public String taskType;



    /**
     * The Id of the maintenance window to register the task with.
     * 
     */
    public String windowId;



    /**
     * The ID of the maintenance window task.
     * 
     */
    public String windowTaskId;



}
