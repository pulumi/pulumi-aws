// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.cloudcontrol;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:cloudcontrol/resource:Resource")
public final class ResourceArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * JSON string matching the CloudFormation resource type schema with desired configuration.
     * 
     */
    @PolicyResourceProperty(name="desiredState", flag="unknown_desiredState")
    private String value_desiredState;
    private boolean unknown_desiredState;
    public String desiredState() {
        if (!unknown_desiredState) return value_desiredState;
        throw new UndeferrableValueException("Value 'ResourceArgs.desiredState' is not present");
    }

    /**
     * Amazon Resource Name (ARN) of the IAM Role to assume for operations.
     * 
     */
    @PolicyResourceProperty(name="roleArn", flag="unknown_roleArn")
    private String value_roleArn;
    private boolean unknown_roleArn;
    public String roleArn() {
        if (!unknown_roleArn) return value_roleArn;
        throw new UndeferrableValueException("Value 'ResourceArgs.roleArn' is not present");
    }

    /**
     * JSON string of the CloudFormation resource type schema which is used for plan time validation where possible. Automatically fetched if not provided. In large scale environments with multiple resources using the same `type_name`, it is recommended to fetch the schema once via the `aws.cloudformation.CloudFormationType` data source and use this argument to reduce `DescribeType` API operation throttling. This value is marked sensitive only to prevent large plan differences from showing.
     * 
     */
    @PolicyResourceProperty(name="schema", flag="unknown_schema")
    private String value_schema;
    private boolean unknown_schema;
    public String schema() {
        if (!unknown_schema) return value_schema;
        throw new UndeferrableValueException("Value 'ResourceArgs.schema' is not present");
    }

    /**
     * CloudFormation resource type name. For example, `AWS::EC2::VPC`.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="typeName", flag="unknown_typeName")
    private String value_typeName;
    private boolean unknown_typeName;
    public String typeName() {
        if (!unknown_typeName) return value_typeName;
        throw new UndeferrableValueException("Value 'ResourceArgs.typeName' is not present");
    }

    /**
     * Identifier of the CloudFormation resource type version.
     * 
     */
    @PolicyResourceProperty(name="typeVersionId", flag="unknown_typeVersionId")
    private String value_typeVersionId;
    private boolean unknown_typeVersionId;
    public String typeVersionId() {
        if (!unknown_typeVersionId) return value_typeVersionId;
        throw new UndeferrableValueException("Value 'ResourceArgs.typeVersionId' is not present");
    }

}
