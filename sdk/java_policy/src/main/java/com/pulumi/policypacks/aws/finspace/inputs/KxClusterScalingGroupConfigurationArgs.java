// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.finspace.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class KxClusterScalingGroupConfigurationArgs {

    /**
     * The number of vCPUs that you want to reserve for each node of this kdb cluster on the scaling group host.
     * 
     */
    @PolicyResourceProperty(name="cpu", flag="unknown_cpu")
    private Double value_cpu;
    private boolean unknown_cpu;
    public Double cpu() {
        if (!unknown_cpu) return value_cpu;
        throw new UndeferrableValueException("Value 'KxClusterScalingGroupConfigurationArgs.cpu' is not present");
    }

    /**
     * An optional hard limit on the amount of memory a kdb cluster can use.
     * 
     */
    @PolicyResourceProperty(name="memoryLimit", flag="unknown_memoryLimit")
    private Integer value_memoryLimit;
    private boolean unknown_memoryLimit;
    public Integer memoryLimit() {
        if (!unknown_memoryLimit) return value_memoryLimit;
        throw new UndeferrableValueException("Value 'KxClusterScalingGroupConfigurationArgs.memoryLimit' is not present");
    }

    /**
     * A reservation of the minimum amount of memory that should be available on the scaling group for a kdb cluster to be successfully placed in a scaling group.
     * 
     */
    @PolicyResourceProperty(name="memoryReservation", flag="unknown_memoryReservation")
    private Integer value_memoryReservation;
    private boolean unknown_memoryReservation;
    public Integer memoryReservation() {
        if (!unknown_memoryReservation) return value_memoryReservation;
        throw new UndeferrableValueException("Value 'KxClusterScalingGroupConfigurationArgs.memoryReservation' is not present");
    }

    /**
     * The number of kdb cluster nodes.
     * 
     */
    @PolicyResourceProperty(name="nodeCount", flag="unknown_nodeCount")
    private Integer value_nodeCount;
    private boolean unknown_nodeCount;
    public Integer nodeCount() {
        if (!unknown_nodeCount) return value_nodeCount;
        throw new UndeferrableValueException("Value 'KxClusterScalingGroupConfigurationArgs.nodeCount' is not present");
    }

    /**
     * A unique identifier for the kdb scaling group.
     * 
     */
    @PolicyResourceProperty(name="scalingGroupName", flag="unknown_scalingGroupName")
    private String value_scalingGroupName;
    private boolean unknown_scalingGroupName;
    public String scalingGroupName() {
        if (!unknown_scalingGroupName) return value_scalingGroupName;
        throw new UndeferrableValueException("Value 'KxClusterScalingGroupConfigurationArgs.scalingGroupName' is not present");
    }

}
