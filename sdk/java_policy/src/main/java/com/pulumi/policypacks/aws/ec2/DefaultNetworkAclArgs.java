// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.ec2.inputs.DefaultNetworkAclEgressArgs;
import com.pulumi.policypacks.aws.ec2.inputs.DefaultNetworkAclIngressArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ec2/defaultNetworkAcl:DefaultNetworkAcl")
public final class DefaultNetworkAclArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Network ACL ID to manage. This attribute is exported from `aws.ec2.Vpc`, or manually found via the AWS Console.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> defaultNetworkAclId;

    public String defaultNetworkAclId() {
        if (defaultNetworkAclId == null) return null;
        return defaultNetworkAclId.getValue("DefaultNetworkAclArgs.defaultNetworkAclId");
    }

    /**
     * Configuration block for an egress rule. Detailed below.
     * 
     */
    private UndeferrableValue<List<DefaultNetworkAclEgressArgs>> egress;

    public List<DefaultNetworkAclEgressArgs> egress() {
        if (egress == null) return null;
        return egress.getValue("DefaultNetworkAclArgs.egress");
    }

    /**
     * Configuration block for an ingress rule. Detailed below.
     * 
     */
    private UndeferrableValue<List<DefaultNetworkAclIngressArgs>> ingress;

    public List<DefaultNetworkAclIngressArgs> ingress() {
        if (ingress == null) return null;
        return ingress.getValue("DefaultNetworkAclArgs.ingress");
    }

    /**
     * List of Subnet IDs to apply the ACL to. See the notes above on Managing Subnets in the Default Network ACL
     * 
     */
    private UndeferrableValue<List<String>> subnetIds;

    public List<String> subnetIds() {
        if (subnetIds == null) return null;
        return subnetIds.getValue("DefaultNetworkAclArgs.subnetIds");
    }

    /**
     * Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("DefaultNetworkAclArgs.tags");
    }

}
