// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.sagemaker;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:sagemaker/studioLifecycleConfig:StudioLifecycleConfig")
public final class StudioLifecycleConfigArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The App type that the Lifecycle Configuration is attached to. Valid values are `JupyterServer`, `JupyterLab`, `CodeEditor` and `KernelGateway`.
     * 
     */
    private UndeferrableValue<String> studioLifecycleConfigAppType;

    public String studioLifecycleConfigAppType() {
        if (studioLifecycleConfigAppType == null) return null;
        return studioLifecycleConfigAppType.getValue("StudioLifecycleConfigArgs.studioLifecycleConfigAppType");
    }

    /**
     * The content of your Studio Lifecycle Configuration script. This content must be base64 encoded.
     * 
     */
    private UndeferrableValue<String> studioLifecycleConfigContent;

    public String studioLifecycleConfigContent() {
        if (studioLifecycleConfigContent == null) return null;
        return studioLifecycleConfigContent.getValue("StudioLifecycleConfigArgs.studioLifecycleConfigContent");
    }

    /**
     * The name of the Studio Lifecycle Configuration to create.
     * 
     */
    private UndeferrableValue<String> studioLifecycleConfigName;

    public String studioLifecycleConfigName() {
        if (studioLifecycleConfigName == null) return null;
        return studioLifecycleConfigName.getValue("StudioLifecycleConfigArgs.studioLifecycleConfigName");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("StudioLifecycleConfigArgs.tags");
    }

}
