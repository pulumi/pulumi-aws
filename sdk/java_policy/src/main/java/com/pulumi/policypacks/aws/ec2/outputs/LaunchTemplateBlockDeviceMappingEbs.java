// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2.outputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class LaunchTemplateBlockDeviceMappingEbs {

    /**
     * Whether the volume should be destroyed on instance termination.
     * See [Preserving Amazon EBS Volumes on Instance Termination](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/preserving-volumes-on-termination.html) for more information.
     * 
     */
    private @Nullable UndeferrableValue<String> deleteOnTermination;

    public @Nullable String deleteOnTermination() {
        if (deleteOnTermination == null) return null;
        return deleteOnTermination.getValue("LaunchTemplateBlockDeviceMappingEbs.deleteOnTermination");
    }

    /**
     * Enables [EBS encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html) on the volume.
     * Cannot be used with `snapshot_id`.
     * 
     */
    private @Nullable UndeferrableValue<String> encrypted;

    public @Nullable String encrypted() {
        if (encrypted == null) return null;
        return encrypted.getValue("LaunchTemplateBlockDeviceMappingEbs.encrypted");
    }

    /**
     * The amount of provisioned [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html).
     * This must be set with a `volume_type` of `&#34;io1/io2/gp3&#34;`.
     * 
     */
    private @Nullable UndeferrableValue<Integer> iops;

    public @Nullable Integer iops() {
        if (iops == null) return null;
        return iops.getValue("LaunchTemplateBlockDeviceMappingEbs.iops");
    }

    /**
     * The ARN of the AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating the encrypted volume.
     * `encrypted` must be set to `true` when this is set.
     * 
     */
    private @Nullable UndeferrableValue<String> kmsKeyId;

    public @Nullable String kmsKeyId() {
        if (kmsKeyId == null) return null;
        return kmsKeyId.getValue("LaunchTemplateBlockDeviceMappingEbs.kmsKeyId");
    }

    /**
     * The Snapshot ID to mount.
     * 
     */
    private @Nullable UndeferrableValue<String> snapshotId;

    public @Nullable String snapshotId() {
        if (snapshotId == null) return null;
        return snapshotId.getValue("LaunchTemplateBlockDeviceMappingEbs.snapshotId");
    }

    /**
     * The throughput to provision for a `gp3` volume in MiB/s (specified as an integer, e.g., 500), with a maximum of 1,000 MiB/s.
     * 
     */
    private @Nullable UndeferrableValue<Integer> throughput;

    public @Nullable Integer throughput() {
        if (throughput == null) return null;
        return throughput.getValue("LaunchTemplateBlockDeviceMappingEbs.throughput");
    }

    /**
     * The size of the volume in gigabytes.
     * 
     */
    private @Nullable UndeferrableValue<Integer> volumeSize;

    public @Nullable Integer volumeSize() {
        if (volumeSize == null) return null;
        return volumeSize.getValue("LaunchTemplateBlockDeviceMappingEbs.volumeSize");
    }

    /**
     * The volume type.
     * Can be one of `standard`, `gp2`, `gp3`, `io1`, `io2`, `sc1` or `st1`.
     * 
     */
    private @Nullable UndeferrableValue<String> volumeType;

    public @Nullable String volumeType() {
        if (volumeType == null) return null;
        return volumeType.getValue("LaunchTemplateBlockDeviceMappingEbs.volumeType");
    }

}
