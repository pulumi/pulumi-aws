// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.opsworks.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class GangliaLayerEbsVolume {

    @PolicyResourceProperty(name="encrypted", flag="unknown_encrypted")
    private @Nullable Boolean value_encrypted;
    private boolean unknown_encrypted;
    public @Nullable Boolean encrypted() {
        if (!unknown_encrypted) return value_encrypted;
        throw new UndeferrableValueException("Value 'GangliaLayerEbsVolume.encrypted' is not present");
    }

    /**
     * For PIOPS volumes, the IOPS per disk.
     * 
     */
    @PolicyResourceProperty(name="iops", flag="unknown_iops")
    private @Nullable Integer value_iops;
    private boolean unknown_iops;
    public @Nullable Integer iops() {
        if (!unknown_iops) return value_iops;
        throw new UndeferrableValueException("Value 'GangliaLayerEbsVolume.iops' is not present");
    }

    /**
     * The path to mount the EBS volume on the layer&#39;s instances.
     * 
     */
    @PolicyResourceProperty(name="mountPoint", flag="unknown_mountPoint")
    private String value_mountPoint;
    private boolean unknown_mountPoint;
    public String mountPoint() {
        if (!unknown_mountPoint) return value_mountPoint;
        throw new UndeferrableValueException("Value 'GangliaLayerEbsVolume.mountPoint' is not present");
    }

    /**
     * The number of disks to use for the EBS volume.
     * 
     */
    @PolicyResourceProperty(name="numberOfDisks", flag="unknown_numberOfDisks")
    private Integer value_numberOfDisks;
    private boolean unknown_numberOfDisks;
    public Integer numberOfDisks() {
        if (!unknown_numberOfDisks) return value_numberOfDisks;
        throw new UndeferrableValueException("Value 'GangliaLayerEbsVolume.numberOfDisks' is not present");
    }

    /**
     * The RAID level to use for the volume.
     * 
     */
    @PolicyResourceProperty(name="raidLevel", flag="unknown_raidLevel")
    private @Nullable String value_raidLevel;
    private boolean unknown_raidLevel;
    public @Nullable String raidLevel() {
        if (!unknown_raidLevel) return value_raidLevel;
        throw new UndeferrableValueException("Value 'GangliaLayerEbsVolume.raidLevel' is not present");
    }

    /**
     * The size of the volume in gigabytes.
     * 
     */
    @PolicyResourceProperty(name="size", flag="unknown_size")
    private Integer value_size;
    private boolean unknown_size;
    public Integer size() {
        if (!unknown_size) return value_size;
        throw new UndeferrableValueException("Value 'GangliaLayerEbsVolume.size' is not present");
    }

    /**
     * The type of volume to create. This may be `standard` (the default), `io1` or `gp2`.
     * 
     */
    @PolicyResourceProperty(name="type", flag="unknown_type")
    private @Nullable String value_type;
    private boolean unknown_type;
    public @Nullable String type() {
        if (!unknown_type) return value_type;
        throw new UndeferrableValueException("Value 'GangliaLayerEbsVolume.type' is not present");
    }

}
