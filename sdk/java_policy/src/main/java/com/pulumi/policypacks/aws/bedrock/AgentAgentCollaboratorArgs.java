// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.bedrock;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.bedrock.inputs.AgentAgentCollaboratorAgentDescriptorArgs;
import com.pulumi.policypacks.aws.bedrock.inputs.AgentAgentCollaboratorTimeoutsArgs;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:bedrock/agentAgentCollaborator:AgentAgentCollaborator")
public final class AgentAgentCollaboratorArgs extends com.pulumi.resources.PolicyResourceInput {

    private UndeferrableValue<AgentAgentCollaboratorAgentDescriptorArgs> agentDescriptor;

    public AgentAgentCollaboratorAgentDescriptorArgs agentDescriptor() {
        if (agentDescriptor == null) return null;
        return agentDescriptor.getValue("AgentAgentCollaboratorArgs.agentDescriptor");
    }

    /**
     * ID if the agent to associate the collaborator.
     * 
     */
    private UndeferrableValue<String> agentId;

    public String agentId() {
        if (agentId == null) return null;
        return agentId.getValue("AgentAgentCollaboratorArgs.agentId");
    }

    private UndeferrableValue<String> agentVersion;

    public String agentVersion() {
        if (agentVersion == null) return null;
        return agentVersion.getValue("AgentAgentCollaboratorArgs.agentVersion");
    }

    /**
     * Instruction to give the collaborator.
     * 
     */
    private UndeferrableValue<String> collaborationInstruction;

    public String collaborationInstruction() {
        if (collaborationInstruction == null) return null;
        return collaborationInstruction.getValue("AgentAgentCollaboratorArgs.collaborationInstruction");
    }

    private UndeferrableValue<String> collaboratorName;

    public String collaboratorName() {
        if (collaboratorName == null) return null;
        return collaboratorName.getValue("AgentAgentCollaboratorArgs.collaboratorName");
    }

    /**
     * Whether to prepare the agent after creation or modification. Defaults to `true`.
     * 
     */
    private UndeferrableValue<Boolean> prepareAgent;

    public Boolean prepareAgent() {
        if (prepareAgent == null) return null;
        return prepareAgent.getValue("AgentAgentCollaboratorArgs.prepareAgent");
    }

    /**
     * Configure relaying the history to the collaborator.
     * 
     */
    private UndeferrableValue<String> relayConversationHistory;

    public String relayConversationHistory() {
        if (relayConversationHistory == null) return null;
        return relayConversationHistory.getValue("AgentAgentCollaboratorArgs.relayConversationHistory");
    }

    private UndeferrableValue<AgentAgentCollaboratorTimeoutsArgs> timeouts;

    public AgentAgentCollaboratorTimeoutsArgs timeouts() {
        if (timeouts == null) return null;
        return timeouts.getValue("AgentAgentCollaboratorArgs.timeouts");
    }

}
