// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.networkfirewall.outputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.String;
import java.util.Map;


public final class LoggingConfigurationLoggingConfigurationLogDestinationConfig {

    /**
     * A map describing the logging destination for the chosen `log_destination_type`.
     * * For an Amazon S3 bucket, specify the key `bucketName` with the name of the bucket and optionally specify the key `prefix` with a path (Do not add a leading / in the `prefix` as the configuration will have two // when applied).
     * * For a CloudWatch log group, specify the key `logGroup` with the name of the CloudWatch log group.
     * * For a Kinesis Data Firehose delivery stream, specify the key `deliveryStream` with the name of the delivery stream.
     * 
     */
    private UndeferrableValue<Map<String,String>> logDestination;

    public Map<String,String> logDestination() {
        if (logDestination == null) return null;
        return logDestination.getValue("LoggingConfigurationLoggingConfigurationLogDestinationConfig.logDestination");
    }

    /**
     * The location to send logs to. Valid values: `S3`, `CloudWatchLogs`, `KinesisDataFirehose`.
     * 
     */
    private UndeferrableValue<String> logDestinationType;

    public String logDestinationType() {
        if (logDestinationType == null) return null;
        return logDestinationType.getValue("LoggingConfigurationLoggingConfigurationLogDestinationConfig.logDestinationType");
    }

    /**
     * The type of log to send. Valid values: `ALERT` or `FLOW` or `TLS`. Alert logs report traffic that matches a `StatefulRule` with an action setting that sends a log message. Flow logs are standard network traffic flow logs.
     * 
     */
    private UndeferrableValue<String> logType;

    public String logType() {
        if (logType == null) return null;
        return logType.getValue("LoggingConfigurationLoggingConfigurationLogDestinationConfig.logType");
    }

}
