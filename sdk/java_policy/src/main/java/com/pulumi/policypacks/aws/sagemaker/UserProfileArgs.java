// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.sagemaker;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.sagemaker.inputs.UserProfileUserSettingsArgs;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:sagemaker/userProfile:UserProfile")
public final class UserProfileArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The ID of the associated Domain.
     * 
     */
    private UndeferrableValue<String> domainId;

    public String domainId() {
        if (domainId == null) return null;
        return domainId.getValue("UserProfileArgs.domainId");
    }

    /**
     * A specifier for the type of value specified in `single_sign_on_user_value`. Currently, the only supported value is `UserName`. If the Domain&#39;s AuthMode is SSO, this field is required. If the Domain&#39;s AuthMode is not SSO, this field cannot be specified.
     * 
     */
    private UndeferrableValue<String> singleSignOnUserIdentifier;

    public String singleSignOnUserIdentifier() {
        if (singleSignOnUserIdentifier == null) return null;
        return singleSignOnUserIdentifier.getValue("UserProfileArgs.singleSignOnUserIdentifier");
    }

    /**
     * The username of the associated AWS Single Sign-On User for this User Profile. If the Domain&#39;s AuthMode is SSO, this field is required, and must match a valid username of a user in your directory. If the Domain&#39;s AuthMode is not SSO, this field cannot be specified.
     * 
     */
    private UndeferrableValue<String> singleSignOnUserValue;

    public String singleSignOnUserValue() {
        if (singleSignOnUserValue == null) return null;
        return singleSignOnUserValue.getValue("UserProfileArgs.singleSignOnUserValue");
    }

    /**
     * A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("UserProfileArgs.tags");
    }

    /**
     * The name for the User Profile.
     * 
     */
    private UndeferrableValue<String> userProfileName;

    public String userProfileName() {
        if (userProfileName == null) return null;
        return userProfileName.getValue("UserProfileArgs.userProfileName");
    }

    /**
     * The user settings. See User Settings below.
     * 
     */
    private UndeferrableValue<UserProfileUserSettingsArgs> userSettings;

    public UserProfileUserSettingsArgs userSettings() {
        if (userSettings == null) return null;
        return userSettings.getValue("UserProfileArgs.userSettings");
    }

}
