// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.bedrock.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.bedrock.outputs.AgentDataSourceVectorIngestionConfigurationChunkingConfiguration;
import com.pulumi.policypacks.aws.bedrock.outputs.AgentDataSourceVectorIngestionConfigurationCustomTransformationConfiguration;
import com.pulumi.policypacks.aws.bedrock.outputs.AgentDataSourceVectorIngestionConfigurationParsingConfiguration;
import javax.annotation.Nullable;


public final class AgentDataSourceVectorIngestionConfiguration {

    /**
     * Details about how to chunk the documents in the data source. A chunk refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried. See `chunking_configuration` block for details.
     * 
     */
    @PolicyResourceProperty(name="chunkingConfiguration", flag="unknown_chunkingConfiguration")
    private @Nullable AgentDataSourceVectorIngestionConfigurationChunkingConfiguration value_chunkingConfiguration;
    private boolean unknown_chunkingConfiguration;
    public @Nullable AgentDataSourceVectorIngestionConfigurationChunkingConfiguration chunkingConfiguration() {
        if (!unknown_chunkingConfiguration) return value_chunkingConfiguration;
        throw new UndeferrableValueException("Value 'AgentDataSourceVectorIngestionConfiguration.chunkingConfiguration' is not present");
    }

    /**
     * Configuration for custom transformation of data source documents.
     * 
     */
    @PolicyResourceProperty(name="customTransformationConfiguration", flag="unknown_customTransformationConfiguration")
    private @Nullable AgentDataSourceVectorIngestionConfigurationCustomTransformationConfiguration value_customTransformationConfiguration;
    private boolean unknown_customTransformationConfiguration;
    public @Nullable AgentDataSourceVectorIngestionConfigurationCustomTransformationConfiguration customTransformationConfiguration() {
        if (!unknown_customTransformationConfiguration) return value_customTransformationConfiguration;
        throw new UndeferrableValueException("Value 'AgentDataSourceVectorIngestionConfiguration.customTransformationConfiguration' is not present");
    }

    /**
     * Configuration for custom parsing of data source documents. See `parsing_configuration` block for details.
     * 
     */
    @PolicyResourceProperty(name="parsingConfiguration", flag="unknown_parsingConfiguration")
    private @Nullable AgentDataSourceVectorIngestionConfigurationParsingConfiguration value_parsingConfiguration;
    private boolean unknown_parsingConfiguration;
    public @Nullable AgentDataSourceVectorIngestionConfigurationParsingConfiguration parsingConfiguration() {
        if (!unknown_parsingConfiguration) return value_parsingConfiguration;
        throw new UndeferrableValueException("Value 'AgentDataSourceVectorIngestionConfiguration.parsingConfiguration' is not present");
    }

}
