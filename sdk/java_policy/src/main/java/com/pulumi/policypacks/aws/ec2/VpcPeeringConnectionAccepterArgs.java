// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.ec2.inputs.VpcPeeringConnectionAccepterAccepterArgs;
import com.pulumi.policypacks.aws.ec2.inputs.VpcPeeringConnectionAccepterRequesterArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ec2/vpcPeeringConnectionAccepter:VpcPeeringConnectionAccepter")
public final class VpcPeeringConnectionAccepterArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * A configuration block that describes [VPC Peering Connection]
     * (https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html) options set for the accepter VPC.
     * 
     */
    private UndeferrableValue<VpcPeeringConnectionAccepterAccepterArgs> accepter;

    public VpcPeeringConnectionAccepterAccepterArgs accepter() {
        if (accepter == null) return null;
        return accepter.getValue("VpcPeeringConnectionAccepterArgs.accepter");
    }

    /**
     * Whether or not to accept the peering request. Defaults to `false`.
     * 
     */
    private UndeferrableValue<Boolean> autoAccept;

    public Boolean autoAccept() {
        if (autoAccept == null) return null;
        return autoAccept.getValue("VpcPeeringConnectionAccepterArgs.autoAccept");
    }

    /**
     * A configuration block that describes [VPC Peering Connection]
     * (https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html) options set for the requester VPC.
     * 
     */
    private UndeferrableValue<VpcPeeringConnectionAccepterRequesterArgs> requester;

    public VpcPeeringConnectionAccepterRequesterArgs requester() {
        if (requester == null) return null;
        return requester.getValue("VpcPeeringConnectionAccepterArgs.requester");
    }

    /**
     * A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("VpcPeeringConnectionAccepterArgs.tags");
    }

    /**
     * The VPC Peering Connection ID to manage.
     * 
     */
    private UndeferrableValue<String> vpcPeeringConnectionId;

    public String vpcPeeringConnectionId() {
        if (vpcPeeringConnectionId == null) return null;
        return vpcPeeringConnectionId.getValue("VpcPeeringConnectionAccepterArgs.vpcPeeringConnectionId");
    }

}
