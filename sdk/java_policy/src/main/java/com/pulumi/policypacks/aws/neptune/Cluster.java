// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.neptune;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.neptune.ClusterServerlessV2ScalingConfiguration;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;


@PolicyResourceType(type="aws:neptune/cluster:Cluster")
public final class Cluster extends com.pulumi.resources.PolicyResource {

    /**
     * Specifies whether upgrades between different major versions are allowed. You must set it to `true` when providing an `engine_version` parameter that uses a different major version than the DB cluster&#39;s current version. Default is `false`.
     * 
     */
    public Boolean allowMajorVersionUpgrade;



    /**
     * Specifies whether any cluster modifications are applied immediately, or during the next maintenance window. Default is `false`.
     * 
     */
    public Boolean applyImmediately;



    /**
     * The Neptune Cluster Amazon Resource Name (ARN)
     * 
     */
    public String arn;



    /**
     * A list of EC2 Availability Zones that instances in the Neptune cluster can be created in.
     * 
     */
    public List<String> availabilityZones;



    /**
     * The days to retain backups for. Default `1`
     * 
     */
    public Integer backupRetentionPeriod;



    /**
     * The cluster identifier. If omitted, this provider will assign a random, unique identifier.
     * 
     */
    public String clusterIdentifier;



    /**
     * Creates a unique cluster identifier beginning with the specified prefix. Conflicts with `cluster_identifier`.
     * 
     */
    public String clusterIdentifierPrefix;



    /**
     * List of Neptune Instances that are a part of this cluster
     * 
     */
    public List<String> clusterMembers;



    /**
     * The Neptune Cluster Resource ID
     * 
     */
    public String clusterResourceId;



    /**
     * If set to true, tags are copied to any snapshot of the DB cluster that is created.
     * 
     */
    public Boolean copyTagsToSnapshot;



    /**
     * A value that indicates whether the DB cluster has deletion protection enabled.The database can&#39;t be deleted when deletion protection is enabled. By default, deletion protection is disabled.
     * 
     */
    public Boolean deletionProtection;



    /**
     * A list of the log types this DB cluster is configured to export to Cloudwatch Logs. Currently only supports `audit` and `slowquery`.
     * 
     */
    public List<String> enableCloudwatchLogsExports;



    /**
     * The DNS address of the Neptune instance
     * 
     */
    public String endpoint;



    /**
     * The name of the database engine to be used for this Neptune cluster. Defaults to `neptune`.
     * 
     */
    public String engine;



    /**
     * The database engine version.
     * 
     */
    public String engineVersion;



    /**
     * The name of your final Neptune snapshot when this Neptune cluster is deleted. If omitted, no final snapshot will be made.
     * 
     */
    public String finalSnapshotIdentifier;



    /**
     * The global cluster identifier specified on `aws.neptune.GlobalCluster`.
     * 
     */
    public String globalClusterIdentifier;



    /**
     * The Route53 Hosted Zone ID of the endpoint
     * 
     */
    public String hostedZoneId;



    /**
     * Specifies whether or not mappings of AWS Identity and Access Management (IAM) accounts to database accounts is enabled.
     * 
     */
    public Boolean iamDatabaseAuthenticationEnabled;



    /**
     * A List of ARNs for the IAM roles to associate to the Neptune Cluster.
     * 
     */
    public List<String> iamRoles;



    /**
     * The ARN for the KMS encryption key. When specifying `kms_key_arn`, `storage_encrypted` needs to be set to true.
     * 
     */
    public String kmsKeyArn;



    /**
     * A cluster parameter group to associate with the cluster.
     * 
     */
    public String neptuneClusterParameterGroupName;



    /**
     * The name of the DB parameter group to apply to all instances of the DB cluster.
     * 
     */
    public String neptuneInstanceParameterGroupName;



    /**
     * A Neptune subnet group to associate with this Neptune instance.
     * 
     */
    public String neptuneSubnetGroupName;



    /**
     * The port on which the Neptune accepts connections. Default is `8182`.
     * 
     */
    public Integer port;



    /**
     * The daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter. Time in UTC. Default: A 30-minute window selected at random from an 8-hour block of time per regionE.g., 04:00-09:00
     * 
     */
    public String preferredBackupWindow;



    /**
     * The weekly time range during which system maintenance can occur, in (UTC) e.g., wed:04:00-wed:04:30
     * 
     */
    public String preferredMaintenanceWindow;



    /**
     * A read-only endpoint for the Neptune cluster, automatically load-balanced across replicas
     * 
     */
    public String readerEndpoint;



    /**
     * ARN of a source Neptune cluster or Neptune instance if this Neptune cluster is to be created as a Read Replica.
     * 
     */
    public String replicationSourceIdentifier;



    /**
     * If set, create the Neptune cluster as a serverless one. See Serverless for example block attributes.
     * 
     */
    public ClusterServerlessV2ScalingConfiguration serverlessV2ScalingConfiguration;



    /**
     * Determines whether a final Neptune snapshot is created before the Neptune cluster is deleted. If true is specified, no Neptune snapshot is created. If false is specified, a Neptune snapshot is created before the Neptune cluster is deleted, using the value from `final_snapshot_identifier`. Default is `false`.
     * 
     */
    public Boolean skipFinalSnapshot;



    /**
     * Specifies whether or not to create this cluster from a snapshot. You can use either the name or ARN when specifying a Neptune cluster snapshot, or the ARN when specifying a Neptune snapshot. Automated snapshots **should not** be used for this attribute, unless from a different cluster. Automated snapshots are deleted as part of cluster destruction when the resource is replaced.
     * 
     */
    public String snapshotIdentifier;



    /**
     * Specifies whether the Neptune cluster is encrypted. The default is `false` if not specified.
     * 
     */
    public Boolean storageEncrypted;



    /**
     * Storage type associated with the cluster `standard/iopt1`. Default: `standard`
     * 
     */
    public String storageType;



    /**
     * A map of tags to assign to the Neptune cluster. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



    /**
     * List of VPC security groups to associate with the Cluster
     * 
     */
    public List<String> vpcSecurityGroupIds;



}
