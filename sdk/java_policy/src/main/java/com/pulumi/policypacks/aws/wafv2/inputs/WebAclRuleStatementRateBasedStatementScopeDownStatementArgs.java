// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.wafv2.inputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.wafv2.inputs.WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementArgs;
import com.pulumi.policypacks.aws.wafv2.inputs.WebAclRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementArgs;
import com.pulumi.policypacks.aws.wafv2.inputs.WebAclRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementArgs;
import com.pulumi.policypacks.aws.wafv2.inputs.WebAclRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementArgs;
import com.pulumi.policypacks.aws.wafv2.inputs.WebAclRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatementArgs;
import com.pulumi.policypacks.aws.wafv2.inputs.WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementArgs;
import com.pulumi.policypacks.aws.wafv2.inputs.WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementArgs;
import com.pulumi.policypacks.aws.wafv2.inputs.WebAclRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementArgs;
import com.pulumi.policypacks.aws.wafv2.inputs.WebAclRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementArgs;
import com.pulumi.policypacks.aws.wafv2.inputs.WebAclRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementArgs;
import com.pulumi.policypacks.aws.wafv2.inputs.WebAclRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementArgs;
import com.pulumi.policypacks.aws.wafv2.inputs.WebAclRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementArgs;
import javax.annotation.Nullable;


public final class WebAclRuleStatementRateBasedStatementScopeDownStatementArgs {

    /**
     * Logical rule statement used to combine other rule statements with AND logic. See `and_statement` below for details.
     * 
     */
    private UndeferrableValue<WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementArgs> andStatement;

    public WebAclRuleStatementRateBasedStatementScopeDownStatementAndStatementArgs andStatement() {
        if (andStatement == null) return null;
        return andStatement.getValue("WebAclRuleStatementRateBasedStatementScopeDownStatementArgs.andStatement");
    }

    /**
     * Rule statement that defines a string match search for AWS WAF to apply to web requests. See `byte_match_statement` below for details.
     * 
     */
    private UndeferrableValue<WebAclRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementArgs> byteMatchStatement;

    public WebAclRuleStatementRateBasedStatementScopeDownStatementByteMatchStatementArgs byteMatchStatement() {
        if (byteMatchStatement == null) return null;
        return byteMatchStatement.getValue("WebAclRuleStatementRateBasedStatementScopeDownStatementArgs.byteMatchStatement");
    }

    /**
     * Rule statement used to identify web requests based on country of origin. See `geo_match_statement` below for details.
     * 
     */
    private UndeferrableValue<WebAclRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementArgs> geoMatchStatement;

    public WebAclRuleStatementRateBasedStatementScopeDownStatementGeoMatchStatementArgs geoMatchStatement() {
        if (geoMatchStatement == null) return null;
        return geoMatchStatement.getValue("WebAclRuleStatementRateBasedStatementScopeDownStatementArgs.geoMatchStatement");
    }

    /**
     * Rule statement used to detect web requests coming from particular IP addresses or address ranges. See `ip_set_reference_statement` below for details.
     * 
     */
    private UndeferrableValue<WebAclRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementArgs> ipSetReferenceStatement;

    public WebAclRuleStatementRateBasedStatementScopeDownStatementIpSetReferenceStatementArgs ipSetReferenceStatement() {
        if (ipSetReferenceStatement == null) return null;
        return ipSetReferenceStatement.getValue("WebAclRuleStatementRateBasedStatementScopeDownStatementArgs.ipSetReferenceStatement");
    }

    /**
     * Rule statement that defines a string match search against labels that have been added to the web request by rules that have already run in the web ACL. See `label_match_statement` below for details.
     * 
     */
    private UndeferrableValue<WebAclRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatementArgs> labelMatchStatement;

    public WebAclRuleStatementRateBasedStatementScopeDownStatementLabelMatchStatementArgs labelMatchStatement() {
        if (labelMatchStatement == null) return null;
        return labelMatchStatement.getValue("WebAclRuleStatementRateBasedStatementScopeDownStatementArgs.labelMatchStatement");
    }

    /**
     * Logical rule statement used to negate the results of another rule statement. See `not_statement` below for details.
     * 
     */
    private UndeferrableValue<WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementArgs> notStatement;

    public WebAclRuleStatementRateBasedStatementScopeDownStatementNotStatementArgs notStatement() {
        if (notStatement == null) return null;
        return notStatement.getValue("WebAclRuleStatementRateBasedStatementScopeDownStatementArgs.notStatement");
    }

    /**
     * Logical rule statement used to combine other rule statements with OR logic. See `or_statement` below for details.
     * 
     */
    private UndeferrableValue<WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementArgs> orStatement;

    public WebAclRuleStatementRateBasedStatementScopeDownStatementOrStatementArgs orStatement() {
        if (orStatement == null) return null;
        return orStatement.getValue("WebAclRuleStatementRateBasedStatementScopeDownStatementArgs.orStatement");
    }

    /**
     * Rule statement used to search web request components for a match against a single regular expression. See `regex_match_statement` below for details.
     * 
     */
    private UndeferrableValue<WebAclRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementArgs> regexMatchStatement;

    public WebAclRuleStatementRateBasedStatementScopeDownStatementRegexMatchStatementArgs regexMatchStatement() {
        if (regexMatchStatement == null) return null;
        return regexMatchStatement.getValue("WebAclRuleStatementRateBasedStatementScopeDownStatementArgs.regexMatchStatement");
    }

    /**
     * Rule statement used to search web request components for matches with regular expressions. See `regex_pattern_set_reference_statement` below for details.
     * 
     */
    private UndeferrableValue<WebAclRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementArgs> regexPatternSetReferenceStatement;

    public WebAclRuleStatementRateBasedStatementScopeDownStatementRegexPatternSetReferenceStatementArgs regexPatternSetReferenceStatement() {
        if (regexPatternSetReferenceStatement == null) return null;
        return regexPatternSetReferenceStatement.getValue("WebAclRuleStatementRateBasedStatementScopeDownStatementArgs.regexPatternSetReferenceStatement");
    }

    /**
     * Rule statement that compares a number of bytes against the size of a request component, using a comparison operator, such as greater than (&gt;) or less than (&lt;). See `size_constraint_statement` below for more details.
     * 
     */
    private UndeferrableValue<WebAclRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementArgs> sizeConstraintStatement;

    public WebAclRuleStatementRateBasedStatementScopeDownStatementSizeConstraintStatementArgs sizeConstraintStatement() {
        if (sizeConstraintStatement == null) return null;
        return sizeConstraintStatement.getValue("WebAclRuleStatementRateBasedStatementScopeDownStatementArgs.sizeConstraintStatement");
    }

    /**
     * An SQL injection match condition identifies the part of web requests, such as the URI or the query string, that you want AWS WAF to inspect. See `sqli_match_statement` below for details.
     * 
     */
    private UndeferrableValue<WebAclRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementArgs> sqliMatchStatement;

    public WebAclRuleStatementRateBasedStatementScopeDownStatementSqliMatchStatementArgs sqliMatchStatement() {
        if (sqliMatchStatement == null) return null;
        return sqliMatchStatement.getValue("WebAclRuleStatementRateBasedStatementScopeDownStatementArgs.sqliMatchStatement");
    }

    /**
     * Rule statement that defines a cross-site scripting (XSS) match search for AWS WAF to apply to web requests. See `xss_match_statement` below for details.
     * 
     */
    private UndeferrableValue<WebAclRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementArgs> xssMatchStatement;

    public WebAclRuleStatementRateBasedStatementScopeDownStatementXssMatchStatementArgs xssMatchStatement() {
        if (xssMatchStatement == null) return null;
        return xssMatchStatement.getValue("WebAclRuleStatementRateBasedStatementScopeDownStatementArgs.xssMatchStatement");
    }

}
