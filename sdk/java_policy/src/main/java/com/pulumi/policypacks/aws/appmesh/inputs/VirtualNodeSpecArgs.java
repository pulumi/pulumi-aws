// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appmesh.inputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.appmesh.inputs.VirtualNodeSpecBackendArgs;
import com.pulumi.policypacks.aws.appmesh.inputs.VirtualNodeSpecBackendDefaultsArgs;
import com.pulumi.policypacks.aws.appmesh.inputs.VirtualNodeSpecListenerArgs;
import com.pulumi.policypacks.aws.appmesh.inputs.VirtualNodeSpecLoggingArgs;
import com.pulumi.policypacks.aws.appmesh.inputs.VirtualNodeSpecServiceDiscoveryArgs;
import java.util.List;
import javax.annotation.Nullable;


public final class VirtualNodeSpecArgs {

    /**
     * Defaults for backends.
     * 
     */
    private UndeferrableValue<VirtualNodeSpecBackendDefaultsArgs> backendDefaults;

    public VirtualNodeSpecBackendDefaultsArgs backendDefaults() {
        if (backendDefaults == null) return null;
        return backendDefaults.getValue("VirtualNodeSpecArgs.backendDefaults");
    }

    /**
     * Backends to which the virtual node is expected to send outbound traffic.
     * 
     */
    private UndeferrableValue<List<VirtualNodeSpecBackendArgs>> backends;

    public List<VirtualNodeSpecBackendArgs> backends() {
        if (backends == null) return null;
        return backends.getValue("VirtualNodeSpecArgs.backends");
    }

    /**
     * Listeners from which the virtual node is expected to receive inbound traffic.
     * 
     */
    private UndeferrableValue<List<VirtualNodeSpecListenerArgs>> listeners;

    public List<VirtualNodeSpecListenerArgs> listeners() {
        if (listeners == null) return null;
        return listeners.getValue("VirtualNodeSpecArgs.listeners");
    }

    /**
     * Inbound and outbound access logging information for the virtual node.
     * 
     */
    private UndeferrableValue<VirtualNodeSpecLoggingArgs> logging;

    public VirtualNodeSpecLoggingArgs logging() {
        if (logging == null) return null;
        return logging.getValue("VirtualNodeSpecArgs.logging");
    }

    /**
     * Service discovery information for the virtual node.
     * 
     */
    private UndeferrableValue<VirtualNodeSpecServiceDiscoveryArgs> serviceDiscovery;

    public VirtualNodeSpecServiceDiscoveryArgs serviceDiscovery() {
        if (serviceDiscovery == null) return null;
        return serviceDiscovery.getValue("VirtualNodeSpecArgs.serviceDiscovery");
    }

}
