// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.cloudfront.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.cloudfront.outputs.CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStrings;
import java.lang.String;
import javax.annotation.Nullable;


public final class CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfig {

    /**
     * Whether URL query strings in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values for `query_string_behavior` are `none`, `whitelist`, `allExcept`, and `all`.
     * 
     */
    @PolicyResourceProperty(name="queryStringBehavior", flag="unknown_queryStringBehavior")
    private String value_queryStringBehavior;
    private boolean unknown_queryStringBehavior;
    public String queryStringBehavior() {
        if (!unknown_queryStringBehavior) return value_queryStringBehavior;
        throw new UndeferrableValueException("Value 'CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfig.queryStringBehavior' is not present");
    }

    /**
     * Configuration parameter that contains a list of query string names. See Items for more information.
     * 
     */
    @PolicyResourceProperty(name="queryStrings", flag="unknown_queryStrings")
    private @Nullable CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStrings value_queryStrings;
    private boolean unknown_queryStrings;
    public @Nullable CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigQueryStrings queryStrings() {
        if (!unknown_queryStrings) return value_queryStrings;
        throw new UndeferrableValueException("Value 'CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfig.queryStrings' is not present");
    }

}
