// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.cloudfront;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:cloudfront/originAccessIdentity:OriginAccessIdentity")
public final class OriginAccessIdentity extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The origin access identity ARN.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'OriginAccessIdentity.arn' is not present");
    }

    /**
     * Internal value used by CloudFront to allow future
     * updates to the origin access identity.
     * 
     */
    @PolicyResourceProperty(name="callerReference", flag="unknown_callerReference")
    private String value_callerReference;
    private boolean unknown_callerReference;
    public String callerReference() {
        if (!unknown_callerReference) return value_callerReference;
        throw new UndeferrableValueException("Value 'OriginAccessIdentity.callerReference' is not present");
    }

    /**
     * A shortcut to the full path for the
     * origin access identity to use in CloudFront, see below.
     * 
     */
    @PolicyResourceProperty(name="cloudfrontAccessIdentityPath", flag="unknown_cloudfrontAccessIdentityPath")
    private String value_cloudfrontAccessIdentityPath;
    private boolean unknown_cloudfrontAccessIdentityPath;
    public String cloudfrontAccessIdentityPath() {
        if (!unknown_cloudfrontAccessIdentityPath) return value_cloudfrontAccessIdentityPath;
        throw new UndeferrableValueException("Value 'OriginAccessIdentity.cloudfrontAccessIdentityPath' is not present");
    }

    /**
     * An optional comment for the origin access identity.
     * 
     */
    @PolicyResourceProperty(name="comment", flag="unknown_comment")
    private @Nullable String value_comment;
    private boolean unknown_comment;
    public @Nullable String comment() {
        if (!unknown_comment) return value_comment;
        throw new UndeferrableValueException("Value 'OriginAccessIdentity.comment' is not present");
    }

    /**
     * The current version of the origin access identity&#39;s information.
     * For example: `E2QWRUHAPOMQZL`.
     * 
     */
    @PolicyResourceProperty(name="etag", flag="unknown_etag")
    private String value_etag;
    private boolean unknown_etag;
    public String etag() {
        if (!unknown_etag) return value_etag;
        throw new UndeferrableValueException("Value 'OriginAccessIdentity.etag' is not present");
    }

    /**
     * A pre-generated ARN for use in S3 bucket policies (see below).
     * Example: `arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity
     * E2QWRUHAPOMQZL`.
     * 
     */
    @PolicyResourceProperty(name="iamArn", flag="unknown_iamArn")
    private String value_iamArn;
    private boolean unknown_iamArn;
    public String iamArn() {
        if (!unknown_iamArn) return value_iamArn;
        throw new UndeferrableValueException("Value 'OriginAccessIdentity.iamArn' is not present");
    }

    /**
     * The Amazon S3 canonical user ID for the origin
     * access identity, which you use when giving the origin access identity read
     * permission to an object in Amazon S3.
     * 
     */
    @PolicyResourceProperty(name="s3CanonicalUserId", flag="unknown_s3CanonicalUserId")
    private String value_s3CanonicalUserId;
    private boolean unknown_s3CanonicalUserId;
    public String s3CanonicalUserId() {
        if (!unknown_s3CanonicalUserId) return value_s3CanonicalUserId;
        throw new UndeferrableValueException("Value 'OriginAccessIdentity.s3CanonicalUserId' is not present");
    }

}
