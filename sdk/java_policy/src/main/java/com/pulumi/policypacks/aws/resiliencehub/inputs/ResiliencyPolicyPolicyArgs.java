// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.resiliencehub.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.resiliencehub.inputs.ResiliencyPolicyPolicyAzArgs;
import com.pulumi.policypacks.aws.resiliencehub.inputs.ResiliencyPolicyPolicyHardwareArgs;
import com.pulumi.policypacks.aws.resiliencehub.inputs.ResiliencyPolicyPolicyRegionArgs;
import com.pulumi.policypacks.aws.resiliencehub.inputs.ResiliencyPolicyPolicySoftwareArgs;
import javax.annotation.Nullable;


public final class ResiliencyPolicyPolicyArgs {

    /**
     * Specifies Availability Zone failure policy. See `policy.az`
     * 
     */
    @PolicyResourceProperty(name="az", flag="unknown_az")
    private ResiliencyPolicyPolicyAzArgs value_az;
    private boolean unknown_az;
    public ResiliencyPolicyPolicyAzArgs az() {
        if (!unknown_az) return value_az;
        throw new UndeferrableValueException("Value 'ResiliencyPolicyPolicyArgs.az' is not present");
    }

    /**
     * Specifies Infrastructure failure policy. See `policy.hardware`
     * 
     */
    @PolicyResourceProperty(name="hardware", flag="unknown_hardware")
    private ResiliencyPolicyPolicyHardwareArgs value_hardware;
    private boolean unknown_hardware;
    public ResiliencyPolicyPolicyHardwareArgs hardware() {
        if (!unknown_hardware) return value_hardware;
        throw new UndeferrableValueException("Value 'ResiliencyPolicyPolicyArgs.hardware' is not present");
    }

    /**
     * Specifies Region failure policy. `policy.region`
     * 
     */
    @PolicyResourceProperty(name="region", flag="unknown_region")
    private ResiliencyPolicyPolicyRegionArgs value_region;
    private boolean unknown_region;
    public ResiliencyPolicyPolicyRegionArgs region() {
        if (!unknown_region) return value_region;
        throw new UndeferrableValueException("Value 'ResiliencyPolicyPolicyArgs.region' is not present");
    }

    /**
     * Specifies Application failure policy. See `policy.software`
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="software", flag="unknown_software")
    private ResiliencyPolicyPolicySoftwareArgs value_software;
    private boolean unknown_software;
    public ResiliencyPolicyPolicySoftwareArgs software() {
        if (!unknown_software) return value_software;
        throw new UndeferrableValueException("Value 'ResiliencyPolicyPolicyArgs.software' is not present");
    }

}
