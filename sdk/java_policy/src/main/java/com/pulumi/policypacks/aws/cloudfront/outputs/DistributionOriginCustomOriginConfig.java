// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.cloudfront.outputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class DistributionOriginCustomOriginConfig {

    /**
     * HTTP port the custom origin listens on.
     * 
     */
    private UndeferrableValue<Integer> httpPort;

    public Integer httpPort() {
        if (httpPort == null) return null;
        return httpPort.getValue("DistributionOriginCustomOriginConfig.httpPort");
    }

    /**
     * HTTPS port the custom origin listens on.
     * 
     */
    private UndeferrableValue<Integer> httpsPort;

    public Integer httpsPort() {
        if (httpsPort == null) return null;
        return httpsPort.getValue("DistributionOriginCustomOriginConfig.httpsPort");
    }

    private @Nullable UndeferrableValue<Integer> originKeepaliveTimeout;

    public @Nullable Integer originKeepaliveTimeout() {
        if (originKeepaliveTimeout == null) return null;
        return originKeepaliveTimeout.getValue("DistributionOriginCustomOriginConfig.originKeepaliveTimeout");
    }

    /**
     * Origin protocol policy to apply to your origin. One of `http-only`, `https-only`, or `match-viewer`.
     * 
     */
    private UndeferrableValue<String> originProtocolPolicy;

    public String originProtocolPolicy() {
        if (originProtocolPolicy == null) return null;
        return originProtocolPolicy.getValue("DistributionOriginCustomOriginConfig.originProtocolPolicy");
    }

    private @Nullable UndeferrableValue<Integer> originReadTimeout;

    public @Nullable Integer originReadTimeout() {
        if (originReadTimeout == null) return null;
        return originReadTimeout.getValue("DistributionOriginCustomOriginConfig.originReadTimeout");
    }

    /**
     * List of SSL/TLS protocols that CloudFront can use when connecting to your origin over HTTPS. Valid values: `SSLv3`, `TLSv1`, `TLSv1.1`, `TLSv1.2`. For more information, see [Minimum Origin SSL Protocol](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesOriginSSLProtocols) in the Amazon CloudFront Developer Guide.
     * 
     */
    private UndeferrableValue<List<String>> originSslProtocols;

    public List<String> originSslProtocols() {
        if (originSslProtocols == null) return null;
        return originSslProtocols.getValue("DistributionOriginCustomOriginConfig.originSslProtocols");
    }

}
