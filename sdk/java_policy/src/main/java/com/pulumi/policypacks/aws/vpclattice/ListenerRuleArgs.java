// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.vpclattice;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.vpclattice.inputs.ListenerRuleActionArgs;
import com.pulumi.policypacks.aws.vpclattice.inputs.ListenerRuleMatchArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:vpclattice/listenerRule:ListenerRule")
public final class ListenerRuleArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The action for the listener rule.
     * 
     */
    private UndeferrableValue<ListenerRuleActionArgs> action;

    public ListenerRuleActionArgs action() {
        if (action == null) return null;
        return action.getValue("ListenerRuleArgs.action");
    }

    /**
     * The ID or Amazon Resource Name (ARN) of the listener.
     * 
     */
    private UndeferrableValue<String> listenerIdentifier;

    public String listenerIdentifier() {
        if (listenerIdentifier == null) return null;
        return listenerIdentifier.getValue("ListenerRuleArgs.listenerIdentifier");
    }

    /**
     * The rule match.
     * 
     */
    private UndeferrableValue<ListenerRuleMatchArgs> match;

    public ListenerRuleMatchArgs match() {
        if (match == null) return null;
        return match.getValue("ListenerRuleArgs.match");
    }

    /**
     * The name of the rule. The name must be unique within the listener. The valid characters are a-z, 0-9, and hyphens (-). You can&#39;t use a hyphen as the first or last character, or immediately after another hyphen.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("ListenerRuleArgs.name");
    }

    /**
     * The priority assigned to the rule. Each rule for a specific listener must have a unique priority. The lower the priority number the higher the priority.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<Integer> priority;

    public Integer priority() {
        if (priority == null) return null;
        return priority.getValue("ListenerRuleArgs.priority");
    }

    /**
     * The ID or Amazon Resource Identifier (ARN) of the service.
     * 
     */
    private UndeferrableValue<String> serviceIdentifier;

    public String serviceIdentifier() {
        if (serviceIdentifier == null) return null;
        return serviceIdentifier.getValue("ListenerRuleArgs.serviceIdentifier");
    }

    /**
     * Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("ListenerRuleArgs.tags");
    }

}
