// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.guardduty;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:guardduty/iPSet:IPSet")
public final class IPSetArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Specifies whether GuardDuty is to start using the uploaded IPSet.
     * 
     */
    private UndeferrableValue<Boolean> activate;

    public Boolean activate() {
        if (activate == null) return null;
        return activate.getValue("IPSetArgs.activate");
    }

    /**
     * The detector ID of the GuardDuty.
     * 
     */
    private UndeferrableValue<String> detectorId;

    public String detectorId() {
        if (detectorId == null) return null;
        return detectorId.getValue("IPSetArgs.detectorId");
    }

    /**
     * The format of the file that contains the IPSet. Valid values: `TXT` | `STIX` | `OTX_CSV` | `ALIEN_VAULT` | `PROOF_POINT` | `FIRE_EYE`
     * 
     */
    private UndeferrableValue<String> format;

    public String format() {
        if (format == null) return null;
        return format.getValue("IPSetArgs.format");
    }

    /**
     * The URI of the file that contains the IPSet.
     * 
     */
    private UndeferrableValue<String> location;

    public String location() {
        if (location == null) return null;
        return location.getValue("IPSetArgs.location");
    }

    /**
     * The friendly name to identify the IPSet.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("IPSetArgs.name");
    }

    /**
     * Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("IPSetArgs.tags");
    }

}
