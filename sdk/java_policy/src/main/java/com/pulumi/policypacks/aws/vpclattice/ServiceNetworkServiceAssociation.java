// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.vpclattice;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.vpclattice.outputs.ServiceNetworkServiceAssociationDnsEntry;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:vpclattice/serviceNetworkServiceAssociation:ServiceNetworkServiceAssociation")
public final class ServiceNetworkServiceAssociation extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The ARN of the Association.
     * 
     */
    private UndeferrableValue<String> arn;

    public String arn() {
        if (arn == null) return null;
        return arn.getValue("ServiceNetworkServiceAssociation.arn");
    }

    /**
     * The account that created the association.
     * 
     */
    private UndeferrableValue<String> createdBy;

    public String createdBy() {
        if (createdBy == null) return null;
        return createdBy.getValue("ServiceNetworkServiceAssociation.createdBy");
    }

    /**
     * The custom domain name of the service.
     * 
     */
    private UndeferrableValue<String> customDomainName;

    public String customDomainName() {
        if (customDomainName == null) return null;
        return customDomainName.getValue("ServiceNetworkServiceAssociation.customDomainName");
    }

    /**
     * The DNS name of the service.
     * 
     */
    private UndeferrableValue<List<ServiceNetworkServiceAssociationDnsEntry>> dnsEntries;

    public List<ServiceNetworkServiceAssociationDnsEntry> dnsEntries() {
        if (dnsEntries == null) return null;
        return dnsEntries.getValue("ServiceNetworkServiceAssociation.dnsEntries");
    }

    /**
     * The ID or Amazon Resource Identifier (ARN) of the service.
     * 
     */
    private UndeferrableValue<String> serviceIdentifier;

    public String serviceIdentifier() {
        if (serviceIdentifier == null) return null;
        return serviceIdentifier.getValue("ServiceNetworkServiceAssociation.serviceIdentifier");
    }

    /**
     * The ID or Amazon Resource Identifier (ARN) of the service network. You must use the ARN if the resources specified in the operation are in different accounts.
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> serviceNetworkIdentifier;

    public String serviceNetworkIdentifier() {
        if (serviceNetworkIdentifier == null) return null;
        return serviceNetworkIdentifier.getValue("ServiceNetworkServiceAssociation.serviceNetworkIdentifier");
    }

    /**
     * The operations status. Valid Values are CREATE_IN_PROGRESS | ACTIVE | DELETE_IN_PROGRESS | CREATE_FAILED | DELETE_FAILED
     * 
     */
    private UndeferrableValue<String> status;

    public String status() {
        if (status == null) return null;
        return status.getValue("ServiceNetworkServiceAssociation.status");
    }

    /**
     * Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private @Nullable UndeferrableValue<Map<String,String>> tags;

    public @Nullable Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("ServiceNetworkServiceAssociation.tags");
    }

    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    private UndeferrableValue<Map<String,String>> tagsAll;

    public Map<String,String> tagsAll() {
        if (tagsAll == null) return null;
        return tagsAll.getValue("ServiceNetworkServiceAssociation.tagsAll");
    }

}
