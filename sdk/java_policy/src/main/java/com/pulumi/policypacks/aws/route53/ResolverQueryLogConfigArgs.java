// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.route53;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:route53/resolverQueryLogConfig:ResolverQueryLogConfig")
public final class ResolverQueryLogConfigArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The ARN of the resource that you want Route 53 Resolver to send query logs.
     * You can send query logs to an S3 bucket, a CloudWatch Logs log group, or a Kinesis Data Firehose delivery stream.
     * 
     */
    @PolicyResourceProperty(name="destinationArn", flag="unknown_destinationArn")
    private String value_destinationArn;
    private boolean unknown_destinationArn;
    public String destinationArn() {
        if (!unknown_destinationArn) return value_destinationArn;
        throw new UndeferrableValueException("Value 'ResolverQueryLogConfigArgs.destinationArn' is not present");
    }

    /**
     * The name of the Route 53 Resolver query logging configuration.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'ResolverQueryLogConfigArgs.name' is not present");
    }

    /**
     * A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'ResolverQueryLogConfigArgs.tags' is not present");
    }

}
