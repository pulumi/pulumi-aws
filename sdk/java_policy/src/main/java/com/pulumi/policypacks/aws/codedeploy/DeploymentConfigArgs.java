// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.codedeploy;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.codedeploy.inputs.DeploymentConfigMinimumHealthyHostsArgs;
import com.pulumi.policypacks.aws.codedeploy.inputs.DeploymentConfigTrafficRoutingConfigArgs;
import com.pulumi.policypacks.aws.codedeploy.inputs.DeploymentConfigZonalConfigArgs;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:codedeploy/deploymentConfig:DeploymentConfig")
public final class DeploymentConfigArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The compute platform can be `Server`, `Lambda`, or `ECS`. Default is `Server`.
     * 
     */
    @PolicyResourceProperty(name="computePlatform", flag="unknown_computePlatform")
    private String value_computePlatform;
    private boolean unknown_computePlatform;
    public String computePlatform() {
        if (!unknown_computePlatform) return value_computePlatform;
        throw new UndeferrableValueException("Value 'DeploymentConfigArgs.computePlatform' is not present");
    }

    /**
     * The name of the deployment config.
     * 
     */
    @PolicyResourceProperty(name="deploymentConfigName", flag="unknown_deploymentConfigName")
    private String value_deploymentConfigName;
    private boolean unknown_deploymentConfigName;
    public String deploymentConfigName() {
        if (!unknown_deploymentConfigName) return value_deploymentConfigName;
        throw new UndeferrableValueException("Value 'DeploymentConfigArgs.deploymentConfigName' is not present");
    }

    /**
     * A minimum_healthy_hosts block. Required for `Server` compute platform. Minimum Healthy Hosts are documented below.
     * 
     */
    @PolicyResourceProperty(name="minimumHealthyHosts", flag="unknown_minimumHealthyHosts")
    private DeploymentConfigMinimumHealthyHostsArgs value_minimumHealthyHosts;
    private boolean unknown_minimumHealthyHosts;
    public DeploymentConfigMinimumHealthyHostsArgs minimumHealthyHosts() {
        if (!unknown_minimumHealthyHosts) return value_minimumHealthyHosts;
        throw new UndeferrableValueException("Value 'DeploymentConfigArgs.minimumHealthyHosts' is not present");
    }

    /**
     * A traffic_routing_config block. Traffic Routing Config is documented below.
     * 
     */
    @PolicyResourceProperty(name="trafficRoutingConfig", flag="unknown_trafficRoutingConfig")
    private DeploymentConfigTrafficRoutingConfigArgs value_trafficRoutingConfig;
    private boolean unknown_trafficRoutingConfig;
    public DeploymentConfigTrafficRoutingConfigArgs trafficRoutingConfig() {
        if (!unknown_trafficRoutingConfig) return value_trafficRoutingConfig;
        throw new UndeferrableValueException("Value 'DeploymentConfigArgs.trafficRoutingConfig' is not present");
    }

    /**
     * A zonal_config block. Zonal Config is documented below.
     * 
     */
    @PolicyResourceProperty(name="zonalConfig", flag="unknown_zonalConfig")
    private DeploymentConfigZonalConfigArgs value_zonalConfig;
    private boolean unknown_zonalConfig;
    public DeploymentConfigZonalConfigArgs zonalConfig() {
        if (!unknown_zonalConfig) return value_zonalConfig;
        throw new UndeferrableValueException("Value 'DeploymentConfigArgs.zonalConfig' is not present");
    }

}
