// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.datazone;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.datazone.inputs.ProjectTimeoutsArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:datazone/project:Project")
public final class ProjectArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Description of project.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private String value_description;
    private boolean unknown_description;
    public String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'ProjectArgs.description' is not present");
    }

    /**
     * Identifier of domain which the project is part of. Must follow the regex of `^dzd[-_][a-zA-Z0-9_-]{1,36}$`.
     * 
     */
    @PolicyResourceProperty(name="domainIdentifier", flag="unknown_domainIdentifier")
    private String value_domainIdentifier;
    private boolean unknown_domainIdentifier;
    public String domainIdentifier() {
        if (!unknown_domainIdentifier) return value_domainIdentifier;
        throw new UndeferrableValueException("Value 'ProjectArgs.domainIdentifier' is not present");
    }

    /**
     * List of glossary terms that can be used in the project. The list cannot be empty or include over 20 values. Each value must follow the regex of `[a-zA-Z0-9_-]{1,36}$`.
     * 
     */
    @PolicyResourceProperty(name="glossaryTerms", flag="unknown_glossaryTerms")
    private List<String> value_glossaryTerms;
    private boolean unknown_glossaryTerms;
    public List<String> glossaryTerms() {
        if (!unknown_glossaryTerms) return value_glossaryTerms;
        throw new UndeferrableValueException("Value 'ProjectArgs.glossaryTerms' is not present");
    }

    /**
     * Name of the project. Must follow the regex of `^[\w -]+$`. and have a length of at most 64.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'ProjectArgs.name' is not present");
    }

    /**
     * Optional flag to delete all child entities within the project.
     * 
     */
    @PolicyResourceProperty(name="skipDeletionCheck", flag="unknown_skipDeletionCheck")
    private Boolean value_skipDeletionCheck;
    private boolean unknown_skipDeletionCheck;
    public Boolean skipDeletionCheck() {
        if (!unknown_skipDeletionCheck) return value_skipDeletionCheck;
        throw new UndeferrableValueException("Value 'ProjectArgs.skipDeletionCheck' is not present");
    }

    @PolicyResourceProperty(name="timeouts", flag="unknown_timeouts")
    private ProjectTimeoutsArgs value_timeouts;
    private boolean unknown_timeouts;
    public ProjectTimeoutsArgs timeouts() {
        if (!unknown_timeouts) return value_timeouts;
        throw new UndeferrableValueException("Value 'ProjectArgs.timeouts' is not present");
    }

}
