// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.s3.inputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class BucketV2LifecycleRuleExpirationArgs {

    /**
     * Specifies the date after which you want the corresponding action to take effect.
     * 
     */
    private UndeferrableValue<String> date;

    public String date() {
        if (date == null) return null;
        return date.getValue("BucketV2LifecycleRuleExpirationArgs.date");
    }

    /**
     * Specifies the number of days after object creation when the specific rule action takes effect.
     * 
     */
    private UndeferrableValue<Integer> days;

    public Integer days() {
        if (days == null) return null;
        return days.getValue("BucketV2LifecycleRuleExpirationArgs.days");
    }

    /**
     * On a versioned bucket (versioning-enabled or versioning-suspended bucket), you can add this element in the lifecycle configuration to direct Amazon S3 to delete expired object delete markers. This cannot be specified with Days or Date in a Lifecycle Expiration Policy.
     * 
     */
    private UndeferrableValue<Boolean> expiredObjectDeleteMarker;

    public Boolean expiredObjectDeleteMarker() {
        if (expiredObjectDeleteMarker == null) return null;
        return expiredObjectDeleteMarker.getValue("BucketV2LifecycleRuleExpirationArgs.expiredObjectDeleteMarker");
    }

}
