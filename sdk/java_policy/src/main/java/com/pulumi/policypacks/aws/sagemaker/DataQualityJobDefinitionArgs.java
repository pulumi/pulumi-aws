// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.sagemaker;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.sagemaker.inputs.DataQualityJobDefinitionDataQualityAppSpecificationArgs;
import com.pulumi.policypacks.aws.sagemaker.inputs.DataQualityJobDefinitionDataQualityBaselineConfigArgs;
import com.pulumi.policypacks.aws.sagemaker.inputs.DataQualityJobDefinitionDataQualityJobInputArgs;
import com.pulumi.policypacks.aws.sagemaker.inputs.DataQualityJobDefinitionDataQualityJobOutputConfigArgs;
import com.pulumi.policypacks.aws.sagemaker.inputs.DataQualityJobDefinitionJobResourcesArgs;
import com.pulumi.policypacks.aws.sagemaker.inputs.DataQualityJobDefinitionNetworkConfigArgs;
import com.pulumi.policypacks.aws.sagemaker.inputs.DataQualityJobDefinitionStoppingConditionArgs;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:sagemaker/dataQualityJobDefinition:DataQualityJobDefinition")
public final class DataQualityJobDefinitionArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Specifies the container that runs the monitoring job. Fields are documented below.
     * 
     */
    private UndeferrableValue<DataQualityJobDefinitionDataQualityAppSpecificationArgs> dataQualityAppSpecification;

    public DataQualityJobDefinitionDataQualityAppSpecificationArgs dataQualityAppSpecification() {
        if (dataQualityAppSpecification == null) return null;
        return dataQualityAppSpecification.getValue("DataQualityJobDefinitionArgs.dataQualityAppSpecification");
    }

    /**
     * Configures the constraints and baselines for the monitoring job. Fields are documented below.
     * 
     */
    private UndeferrableValue<DataQualityJobDefinitionDataQualityBaselineConfigArgs> dataQualityBaselineConfig;

    public DataQualityJobDefinitionDataQualityBaselineConfigArgs dataQualityBaselineConfig() {
        if (dataQualityBaselineConfig == null) return null;
        return dataQualityBaselineConfig.getValue("DataQualityJobDefinitionArgs.dataQualityBaselineConfig");
    }

    /**
     * A list of inputs for the monitoring job. Fields are documented below.
     * 
     */
    private UndeferrableValue<DataQualityJobDefinitionDataQualityJobInputArgs> dataQualityJobInput;

    public DataQualityJobDefinitionDataQualityJobInputArgs dataQualityJobInput() {
        if (dataQualityJobInput == null) return null;
        return dataQualityJobInput.getValue("DataQualityJobDefinitionArgs.dataQualityJobInput");
    }

    /**
     * The output configuration for monitoring jobs. Fields are documented below.
     * 
     */
    private UndeferrableValue<DataQualityJobDefinitionDataQualityJobOutputConfigArgs> dataQualityJobOutputConfig;

    public DataQualityJobDefinitionDataQualityJobOutputConfigArgs dataQualityJobOutputConfig() {
        if (dataQualityJobOutputConfig == null) return null;
        return dataQualityJobOutputConfig.getValue("DataQualityJobDefinitionArgs.dataQualityJobOutputConfig");
    }

    /**
     * Identifies the resources to deploy for a monitoring job. Fields are documented below.
     * 
     */
    private UndeferrableValue<DataQualityJobDefinitionJobResourcesArgs> jobResources;

    public DataQualityJobDefinitionJobResourcesArgs jobResources() {
        if (jobResources == null) return null;
        return jobResources.getValue("DataQualityJobDefinitionArgs.jobResources");
    }

    /**
     * The name of the data quality job definition. If omitted, the provider will assign a random, unique name.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("DataQualityJobDefinitionArgs.name");
    }

    /**
     * Specifies networking configuration for the monitoring job. Fields are documented below.
     * 
     */
    private UndeferrableValue<DataQualityJobDefinitionNetworkConfigArgs> networkConfig;

    public DataQualityJobDefinitionNetworkConfigArgs networkConfig() {
        if (networkConfig == null) return null;
        return networkConfig.getValue("DataQualityJobDefinitionArgs.networkConfig");
    }

    /**
     * The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker AI can assume to perform tasks on your behalf.
     * 
     */
    private UndeferrableValue<String> roleArn;

    public String roleArn() {
        if (roleArn == null) return null;
        return roleArn.getValue("DataQualityJobDefinitionArgs.roleArn");
    }

    /**
     * A time limit for how long the monitoring job is allowed to run before stopping. Fields are documented below.
     * 
     */
    private UndeferrableValue<DataQualityJobDefinitionStoppingConditionArgs> stoppingCondition;

    public DataQualityJobDefinitionStoppingConditionArgs stoppingCondition() {
        if (stoppingCondition == null) return null;
        return stoppingCondition.getValue("DataQualityJobDefinitionArgs.stoppingCondition");
    }

    /**
     * A mapping of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("DataQualityJobDefinitionArgs.tags");
    }

}
