// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.route53.inputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.route53.inputs.RecordsExclusiveResourceRecordSetAliasTargetArgs;
import com.pulumi.policypacks.aws.route53.inputs.RecordsExclusiveResourceRecordSetCidrRoutingConfigArgs;
import com.pulumi.policypacks.aws.route53.inputs.RecordsExclusiveResourceRecordSetGeolocationArgs;
import com.pulumi.policypacks.aws.route53.inputs.RecordsExclusiveResourceRecordSetGeoproximityLocationArgs;
import com.pulumi.policypacks.aws.route53.inputs.RecordsExclusiveResourceRecordSetResourceRecordArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class RecordsExclusiveResourceRecordSetArgs {

    /**
     * Alias target block.
     * See `alias_target` below.
     * 
     */
    private UndeferrableValue<RecordsExclusiveResourceRecordSetAliasTargetArgs> aliasTarget;

    public RecordsExclusiveResourceRecordSetAliasTargetArgs aliasTarget() {
        if (aliasTarget == null) return null;
        return aliasTarget.getValue("RecordsExclusiveResourceRecordSetArgs.aliasTarget");
    }

    private UndeferrableValue<RecordsExclusiveResourceRecordSetCidrRoutingConfigArgs> cidrRoutingConfig;

    public RecordsExclusiveResourceRecordSetCidrRoutingConfigArgs cidrRoutingConfig() {
        if (cidrRoutingConfig == null) return null;
        return cidrRoutingConfig.getValue("RecordsExclusiveResourceRecordSetArgs.cidrRoutingConfig");
    }

    /**
     * Type of failover resource record.
     * Valid values are `PRIMARY` and `SECONDARY`.
     * See the [AWS documentation on DNS failover](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html) for additional details.
     * 
     */
    private UndeferrableValue<String> failover;

    public String failover() {
        if (failover == null) return null;
        return failover.getValue("RecordsExclusiveResourceRecordSetArgs.failover");
    }

    /**
     * Geolocation block to control how Amazon Route 53 responds to DNS queries based on the geographic origin of the query.
     * See `geolocation` below.
     * 
     */
    private UndeferrableValue<RecordsExclusiveResourceRecordSetGeolocationArgs> geolocation;

    public RecordsExclusiveResourceRecordSetGeolocationArgs geolocation() {
        if (geolocation == null) return null;
        return geolocation.getValue("RecordsExclusiveResourceRecordSetArgs.geolocation");
    }

    /**
     * Geoproximity location block.
     * See `geoproximity_location` below.
     * 
     */
    private UndeferrableValue<RecordsExclusiveResourceRecordSetGeoproximityLocationArgs> geoproximityLocation;

    public RecordsExclusiveResourceRecordSetGeoproximityLocationArgs geoproximityLocation() {
        if (geoproximityLocation == null) return null;
        return geoproximityLocation.getValue("RecordsExclusiveResourceRecordSetArgs.geoproximityLocation");
    }

    /**
     * Health check the record should be associated with.
     * 
     */
    private UndeferrableValue<String> healthCheckId;

    public String healthCheckId() {
        if (healthCheckId == null) return null;
        return healthCheckId.getValue("RecordsExclusiveResourceRecordSetArgs.healthCheckId");
    }

    private UndeferrableValue<Boolean> multiValueAnswer;

    public Boolean multiValueAnswer() {
        if (multiValueAnswer == null) return null;
        return multiValueAnswer.getValue("RecordsExclusiveResourceRecordSetArgs.multiValueAnswer");
    }

    /**
     * Name of the record.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("RecordsExclusiveResourceRecordSetArgs.name");
    }

    /**
     * AWS region of the resource this record set refers to.
     * Must be a valid AWS region name.
     * See the [AWS documentation](http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-latency) on latency based routing for additional details.
     * 
     */
    private UndeferrableValue<String> region;

    public String region() {
        if (region == null) return null;
        return region.getValue("RecordsExclusiveResourceRecordSetArgs.region");
    }

    /**
     * Information about the resource records to act upon.
     * See `resource_records` below.
     * 
     */
    private UndeferrableValue<List<RecordsExclusiveResourceRecordSetResourceRecordArgs>> resourceRecords;

    public List<RecordsExclusiveResourceRecordSetResourceRecordArgs> resourceRecords() {
        if (resourceRecords == null) return null;
        return resourceRecords.getValue("RecordsExclusiveResourceRecordSetArgs.resourceRecords");
    }

    /**
     * An identifier that differentiates among multiple resource record sets that have the same combination of name and type.
     * Required if using `cidr_routing_config`, `failover`, `geolocation`,`geoproximity_location`, `multivalue_answer`, `region`, or `weight`.
     * 
     */
    private UndeferrableValue<String> setIdentifier;

    public String setIdentifier() {
        if (setIdentifier == null) return null;
        return setIdentifier.getValue("RecordsExclusiveResourceRecordSetArgs.setIdentifier");
    }

    private UndeferrableValue<String> trafficPolicyInstanceId;

    public String trafficPolicyInstanceId() {
        if (trafficPolicyInstanceId == null) return null;
        return trafficPolicyInstanceId.getValue("RecordsExclusiveResourceRecordSetArgs.trafficPolicyInstanceId");
    }

    /**
     * Resource record cache time to live (TTL), in seconds.
     * 
     */
    private UndeferrableValue<Integer> ttl;

    public Integer ttl() {
        if (ttl == null) return null;
        return ttl.getValue("RecordsExclusiveResourceRecordSetArgs.ttl");
    }

    /**
     * Record type.
     * Valid values are `A`, `AAAA`, `CAA`, `CNAME`, `DS`, `MX`, `NAPTR`, `NS`, `PTR`, `SOA`, `SPF`, `SRV`, `TXT`, `TLSA`, `SSHFP`, `SVCB`, and `HTTPS`.
     * 
     * The following arguments are optional:
     * 
     * &gt; Exactly one of `resource_records` or `alias_target` must be specified.
     * 
     */
    private UndeferrableValue<String> type;

    public String type() {
        if (type == null) return null;
        return type.getValue("RecordsExclusiveResourceRecordSetArgs.type");
    }

    /**
     * Among resource record sets that have the same combination of DNS name and type, a value that determines the proportion of DNS queries that Amazon Route 53 responds to using the current resource record set.
     * 
     */
    private UndeferrableValue<Integer> weight;

    public Integer weight() {
        if (weight == null) return null;
        return weight.getValue("RecordsExclusiveResourceRecordSetArgs.weight");
    }

}
