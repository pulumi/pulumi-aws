// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.kinesis.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.kinesis.outputs.AnalyticsApplicationInputsKinesisFirehose;
import com.pulumi.policypacks.aws.kinesis.outputs.AnalyticsApplicationInputsKinesisStream;
import com.pulumi.policypacks.aws.kinesis.outputs.AnalyticsApplicationInputsParallelism;
import com.pulumi.policypacks.aws.kinesis.outputs.AnalyticsApplicationInputsProcessingConfiguration;
import com.pulumi.policypacks.aws.kinesis.outputs.AnalyticsApplicationInputsSchema;
import com.pulumi.policypacks.aws.kinesis.outputs.AnalyticsApplicationInputsStartingPositionConfiguration;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class AnalyticsApplicationInputs {

    /**
     * The ARN of the Kinesis Analytics Application.
     * 
     */
    private @Nullable UndeferrableValue<String> id;

    public @Nullable String id() {
        if (id == null) return null;
        return id.getValue("AnalyticsApplicationInputs.id");
    }

    /**
     * The Kinesis Firehose configuration for the streaming source. Conflicts with `kinesis_stream`.
     * See Kinesis Firehose below for more details.
     * 
     */
    private @Nullable UndeferrableValue<AnalyticsApplicationInputsKinesisFirehose> kinesisFirehose;

    public @Nullable AnalyticsApplicationInputsKinesisFirehose kinesisFirehose() {
        if (kinesisFirehose == null) return null;
        return kinesisFirehose.getValue("AnalyticsApplicationInputs.kinesisFirehose");
    }

    /**
     * The Kinesis Stream configuration for the streaming source. Conflicts with `kinesis_firehose`.
     * See Kinesis Stream below for more details.
     * 
     */
    private @Nullable UndeferrableValue<AnalyticsApplicationInputsKinesisStream> kinesisStream;

    public @Nullable AnalyticsApplicationInputsKinesisStream kinesisStream() {
        if (kinesisStream == null) return null;
        return kinesisStream.getValue("AnalyticsApplicationInputs.kinesisStream");
    }

    /**
     * The Name Prefix to use when creating an in-application stream.
     * 
     */
    private UndeferrableValue<String> namePrefix;

    public String namePrefix() {
        if (namePrefix == null) return null;
        return namePrefix.getValue("AnalyticsApplicationInputs.namePrefix");
    }

    /**
     * The number of Parallel in-application streams to create.
     * See Parallelism below for more details.
     * 
     */
    private @Nullable UndeferrableValue<AnalyticsApplicationInputsParallelism> parallelism;

    public @Nullable AnalyticsApplicationInputsParallelism parallelism() {
        if (parallelism == null) return null;
        return parallelism.getValue("AnalyticsApplicationInputs.parallelism");
    }

    /**
     * The Processing Configuration to transform records as they are received from the stream.
     * See Processing Configuration below for more details.
     * 
     */
    private @Nullable UndeferrableValue<AnalyticsApplicationInputsProcessingConfiguration> processingConfiguration;

    public @Nullable AnalyticsApplicationInputsProcessingConfiguration processingConfiguration() {
        if (processingConfiguration == null) return null;
        return processingConfiguration.getValue("AnalyticsApplicationInputs.processingConfiguration");
    }

    /**
     * The Schema format of the data in the streaming source. See Source Schema below for more details.
     * 
     */
    private UndeferrableValue<AnalyticsApplicationInputsSchema> schema;

    public AnalyticsApplicationInputsSchema schema() {
        if (schema == null) return null;
        return schema.getValue("AnalyticsApplicationInputs.schema");
    }

    /**
     * The point at which the application starts processing records from the streaming source.
     * See Starting Position Configuration below for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<AnalyticsApplicationInputsStartingPositionConfiguration>> startingPositionConfigurations;

    public @Nullable List<AnalyticsApplicationInputsStartingPositionConfiguration> startingPositionConfigurations() {
        if (startingPositionConfigurations == null) return null;
        return startingPositionConfigurations.getValue("AnalyticsApplicationInputs.startingPositionConfigurations");
    }

    private @Nullable UndeferrableValue<List<String>> streamNames;

    public @Nullable List<String> streamNames() {
        if (streamNames == null) return null;
        return streamNames.getValue("AnalyticsApplicationInputs.streamNames");
    }

}
