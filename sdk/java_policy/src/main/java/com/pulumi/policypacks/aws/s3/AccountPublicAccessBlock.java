// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.s3;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:s3/accountPublicAccessBlock:AccountPublicAccessBlock")
public final class AccountPublicAccessBlock extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * AWS account ID to configure. Defaults to automatically determined account ID of the this provider AWS provider.
     * 
     */
    @PolicyResourceProperty(name="accountId", flag="unknown_accountId")
    private String value_accountId;
    private boolean unknown_accountId;
    public String accountId() {
        if (!unknown_accountId) return value_accountId;
        throw new UndeferrableValueException("Value 'AccountPublicAccessBlock.accountId' is not present");
    }

    /**
     * Whether Amazon S3 should block public ACLs for buckets in this account. Defaults to `false`. Enabling this setting does not affect existing policies or ACLs. When set to `true` causes the following behavior:
     * * PUT Bucket acl and PUT Object acl calls will fail if the specified ACL allows public access.
     * * PUT Object calls fail if the request includes a public ACL.
     * 
     */
    @PolicyResourceProperty(name="blockPublicAcls", flag="unknown_blockPublicAcls")
    private @Nullable Boolean value_blockPublicAcls;
    private boolean unknown_blockPublicAcls;
    public @Nullable Boolean blockPublicAcls() {
        if (!unknown_blockPublicAcls) return value_blockPublicAcls;
        throw new UndeferrableValueException("Value 'AccountPublicAccessBlock.blockPublicAcls' is not present");
    }

    /**
     * Whether Amazon S3 should block public bucket policies for buckets in this account. Defaults to `false`. Enabling this setting does not affect existing bucket policies. When set to `true` causes Amazon S3 to:
     * * Reject calls to PUT Bucket policy if the specified bucket policy allows public access.
     * 
     */
    @PolicyResourceProperty(name="blockPublicPolicy", flag="unknown_blockPublicPolicy")
    private @Nullable Boolean value_blockPublicPolicy;
    private boolean unknown_blockPublicPolicy;
    public @Nullable Boolean blockPublicPolicy() {
        if (!unknown_blockPublicPolicy) return value_blockPublicPolicy;
        throw new UndeferrableValueException("Value 'AccountPublicAccessBlock.blockPublicPolicy' is not present");
    }

    /**
     * Whether Amazon S3 should ignore public ACLs for buckets in this account. Defaults to `false`. Enabling this setting does not affect the persistence of any existing ACLs and doesn&#39;t prevent new public ACLs from being set. When set to `true` causes Amazon S3 to:
     * * Ignore all public ACLs on buckets in this account and any objects that they contain.
     * 
     */
    @PolicyResourceProperty(name="ignorePublicAcls", flag="unknown_ignorePublicAcls")
    private @Nullable Boolean value_ignorePublicAcls;
    private boolean unknown_ignorePublicAcls;
    public @Nullable Boolean ignorePublicAcls() {
        if (!unknown_ignorePublicAcls) return value_ignorePublicAcls;
        throw new UndeferrableValueException("Value 'AccountPublicAccessBlock.ignorePublicAcls' is not present");
    }

    /**
     * Whether Amazon S3 should restrict public bucket policies for buckets in this account. Defaults to `false`. Enabling this setting does not affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked. When set to `true`:
     * * Only the bucket owner and AWS Services can access buckets with public policies.
     * 
     */
    @PolicyResourceProperty(name="restrictPublicBuckets", flag="unknown_restrictPublicBuckets")
    private @Nullable Boolean value_restrictPublicBuckets;
    private boolean unknown_restrictPublicBuckets;
    public @Nullable Boolean restrictPublicBuckets() {
        if (!unknown_restrictPublicBuckets) return value_restrictPublicBuckets;
        throw new UndeferrableValueException("Value 'AccountPublicAccessBlock.restrictPublicBuckets' is not present");
    }

}
