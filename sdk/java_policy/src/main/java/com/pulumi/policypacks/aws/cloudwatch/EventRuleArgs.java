// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.cloudwatch;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:cloudwatch/eventRule:EventRule")
public final class EventRuleArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The description of the rule.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("EventRuleArgs.description");
    }

    /**
     * The name or ARN of the event bus to associate with this rule.
     * If you omit this, the `default` event bus is used.
     * 
     */
    private UndeferrableValue<String> eventBusName;

    public String eventBusName() {
        if (eventBusName == null) return null;
        return eventBusName.getValue("EventRuleArgs.eventBusName");
    }

    /**
     * The event pattern described a JSON object. At least one of `schedule_expression` or `event_pattern` is required. See full documentation of [Events and Event Patterns in EventBridge](https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html) for details. **Note**: The event pattern size is 2048 by default but it is adjustable up to 4096 characters by submitting a service quota increase request. See [Amazon EventBridge quotas](https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-quota.html) for details.
     * 
     */
    private UndeferrableValue<String> eventPattern;

    public String eventPattern() {
        if (eventPattern == null) return null;
        return eventPattern.getValue("EventRuleArgs.eventPattern");
    }

    /**
     * Used to delete managed rules created by AWS. Defaults to `false`.
     * 
     */
    private UndeferrableValue<Boolean> forceDestroy;

    public Boolean forceDestroy() {
        if (forceDestroy == null) return null;
        return forceDestroy.getValue("EventRuleArgs.forceDestroy");
    }

    /**
     * Whether the rule should be enabled.
     * Defaults to `true`.
     * Conflicts with `state`.
     * 
     * @deprecated
     * is_enabled is deprecated. Use state instead.
     * 
     */
    @Deprecated /* is_enabled is deprecated. Use state instead. */
    private UndeferrableValue<Boolean> isEnabled;

    public Boolean isEnabled() {
        if (isEnabled == null) return null;
        return isEnabled.getValue("EventRuleArgs.isEnabled");
    }

    /**
     * The name of the rule. If omitted, this provider will assign a random, unique name. Conflicts with `name_prefix`.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("EventRuleArgs.name");
    }

    /**
     * Creates a unique name beginning with the specified prefix. Conflicts with `name`. **Note**: Due to the length of the generated suffix, must be 38 characters or less.
     * 
     */
    private UndeferrableValue<String> namePrefix;

    public String namePrefix() {
        if (namePrefix == null) return null;
        return namePrefix.getValue("EventRuleArgs.namePrefix");
    }

    /**
     * The Amazon Resource Name (ARN) associated with the role that is used for target invocation.
     * 
     */
    private UndeferrableValue<String> roleArn;

    public String roleArn() {
        if (roleArn == null) return null;
        return roleArn.getValue("EventRuleArgs.roleArn");
    }

    /**
     * The scheduling expression. For example, `cron(0 20 * * ? *)` or `rate(5 minutes)`. At least one of `schedule_expression` or `event_pattern` is required. Can only be used on the default event bus. For more information, refer to the AWS documentation [Schedule Expressions for Rules](https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html).
     * 
     */
    private UndeferrableValue<String> scheduleExpression;

    public String scheduleExpression() {
        if (scheduleExpression == null) return null;
        return scheduleExpression.getValue("EventRuleArgs.scheduleExpression");
    }

    /**
     * State of the rule.
     * Valid values are `DISABLED`, `ENABLED`, and `ENABLED_WITH_ALL_CLOUDTRAIL_MANAGEMENT_EVENTS`.
     * When state is `ENABLED`, the rule is enabled for all events except those delivered by CloudTrail.
     * To also enable the rule for events delivered by CloudTrail, set `state` to `ENABLED_WITH_ALL_CLOUDTRAIL_MANAGEMENT_EVENTS`.
     * Defaults to `ENABLED`.
     * Conflicts with `is_enabled`.
     * 
     * **NOTE:** The rule state  `ENABLED_WITH_ALL_CLOUDTRAIL_MANAGEMENT_EVENTS` cannot be used in conjunction with the `schedule_expression` argument.
     * 
     */
    private UndeferrableValue<String> state;

    public String state() {
        if (state == null) return null;
        return state.getValue("EventRuleArgs.state");
    }

    /**
     * A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("EventRuleArgs.tags");
    }

}
