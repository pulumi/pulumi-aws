// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.iam;

import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;


@PolicyResourceType(type="aws:iam/policy:Policy")
public final class Policy extends com.pulumi.resources.PolicyResource {

    /**
     * ARN assigned by AWS to this policy.
     * 
     */
    public String arn;



    /**
     * Number of entities (users, groups, and roles) that the policy is attached to.
     * 
     */
    public Integer attachmentCount;



    /**
     * Description of the IAM policy.
     * 
     */
    public String description;



    /**
     * Name of the policy. If omitted, the provider will assign a random, unique name.
     * 
     */
    public String name;



    /**
     * Creates a unique name beginning with the specified prefix. Conflicts with `name`.
     * 
     */
    public String namePrefix;



    /**
     * Path in which to create the policy. See [IAM Identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html) for more information.
     * 
     */
    public String path;



    /**
     * Policy document. This is a JSON formatted string. For more information about building AWS IAM policy documents, see the AWS IAM Policy Document Guide
     * 
     */
    public String policy;



    /**
     * Policy&#39;s ID.
     * 
     */
    public String policyId;



    /**
     * Map of resource tags for the IAM Policy. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



}
