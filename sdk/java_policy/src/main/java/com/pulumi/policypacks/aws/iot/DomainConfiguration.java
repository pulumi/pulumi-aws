// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.iot;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.iot.DomainConfigurationAuthorizerConfig;
import com.pulumi.policypacks.aws.iot.DomainConfigurationTlsConfig;
import java.lang.String;
import java.util.List;
import java.util.Map;


@PolicyResourceType(type="aws:iot/domainConfiguration:DomainConfiguration")
public final class DomainConfiguration extends com.pulumi.resources.PolicyResource {

    /**
     * The ARN of the domain configuration.
     * 
     */
    public String arn;



    /**
     * An object that specifies the authorization service for a domain. See the `authorizer_config` Block below for details.
     * 
     */
    public DomainConfigurationAuthorizerConfig authorizerConfig;



    /**
     * Fully-qualified domain name.
     * 
     */
    public String domainName;



    /**
     * The type of the domain.
     * 
     */
    public String domainType;



    /**
     * The name of the domain configuration. This value must be unique to a region.
     * 
     */
    public String name;



    /**
     * The ARNs of the certificates that IoT passes to the device during the TLS handshake. Currently you can specify only one certificate ARN. This value is not required for Amazon Web Services-managed domains. When using a custom `domain_name`, the cert must include it.
     * 
     */
    public List<String> serverCertificateArns;



    /**
     * The type of service delivered by the endpoint. Note: Amazon Web Services IoT Core currently supports only the `DATA` service type.
     * 
     */
    public String serviceType;



    /**
     * The status to which the domain configuration should be set. Valid values are `ENABLED` and `DISABLED`.
     * 
     */
    public String status;



    /**
     * Map of tags to assign to this resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



    /**
     * An object that specifies the TLS configuration for a domain. See the `tls_config` Block below for details.
     * 
     */
    public DomainConfigurationTlsConfig tlsConfig;



    /**
     * The certificate used to validate the server certificate and prove domain name ownership. This certificate must be signed by a public certificate authority. This value is not required for Amazon Web Services-managed domains.
     * 
     */
    public String validationCertificateArn;



}
