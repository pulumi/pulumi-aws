// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appflow.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.appflow.outputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequest;
import java.lang.String;
import javax.annotation.Nullable;


public final class ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforce {

    @PolicyResourceProperty(name="accessToken", flag="unknown_accessToken")
    private @Nullable String value_accessToken;
    private boolean unknown_accessToken;
    public @Nullable String accessToken() {
        if (!unknown_accessToken) return value_accessToken;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforce.accessToken' is not present");
    }

    /**
     * The secret manager ARN, which contains the client ID and client secret of the connected app.
     * 
     */
    @PolicyResourceProperty(name="clientCredentialsArn", flag="unknown_clientCredentialsArn")
    private @Nullable String value_clientCredentialsArn;
    private boolean unknown_clientCredentialsArn;
    public @Nullable String clientCredentialsArn() {
        if (!unknown_clientCredentialsArn) return value_clientCredentialsArn;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforce.clientCredentialsArn' is not present");
    }

    /**
     * A JSON web token (JWT) that authorizes access to Salesforce records.
     * 
     */
    @PolicyResourceProperty(name="jwtToken", flag="unknown_jwtToken")
    private @Nullable String value_jwtToken;
    private boolean unknown_jwtToken;
    public @Nullable String jwtToken() {
        if (!unknown_jwtToken) return value_jwtToken;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforce.jwtToken' is not present");
    }

    @PolicyResourceProperty(name="oauth2GrantType", flag="unknown_oauth2GrantType")
    private @Nullable String value_oauth2GrantType;
    private boolean unknown_oauth2GrantType;
    public @Nullable String oauth2GrantType() {
        if (!unknown_oauth2GrantType) return value_oauth2GrantType;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforce.oauth2GrantType' is not present");
    }

    @PolicyResourceProperty(name="oauthRequest", flag="unknown_oauthRequest")
    private @Nullable ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequest value_oauthRequest;
    private boolean unknown_oauthRequest;
    public @Nullable ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceOauthRequest oauthRequest() {
        if (!unknown_oauthRequest) return value_oauthRequest;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforce.oauthRequest' is not present");
    }

    @PolicyResourceProperty(name="refreshToken", flag="unknown_refreshToken")
    private @Nullable String value_refreshToken;
    private boolean unknown_refreshToken;
    public @Nullable String refreshToken() {
        if (!unknown_refreshToken) return value_refreshToken;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforce.refreshToken' is not present");
    }

}
