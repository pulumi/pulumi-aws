// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.fsx;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.fsx.inputs.OntapVolumeAggregateConfigurationArgs;
import com.pulumi.policypacks.aws.fsx.inputs.OntapVolumeSnaplockConfigurationArgs;
import com.pulumi.policypacks.aws.fsx.inputs.OntapVolumeTieringPolicyArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:fsx/ontapVolume:OntapVolume")
public final class OntapVolumeArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The Aggregate configuration only applies to `FLEXGROUP` volumes. See [`aggregate_configuration` Block] for details.
     * 
     */
    @PolicyResourceProperty(name="aggregateConfiguration", flag="unknown_aggregateConfiguration")
    private OntapVolumeAggregateConfigurationArgs value_aggregateConfiguration;
    private boolean unknown_aggregateConfiguration;
    public OntapVolumeAggregateConfigurationArgs aggregateConfiguration() {
        if (!unknown_aggregateConfiguration) return value_aggregateConfiguration;
        throw new UndeferrableValueException("Value 'OntapVolumeArgs.aggregateConfiguration' is not present");
    }

    /**
     * Setting this to `true` allows a SnapLock administrator to delete an FSx for ONTAP SnapLock Enterprise volume with unexpired write once, read many (WORM) files. This configuration must be applied separately before attempting to delete the resource to have the desired behavior. Defaults to `false`.
     * 
     */
    @PolicyResourceProperty(name="bypassSnaplockEnterpriseRetention", flag="unknown_bypassSnaplockEnterpriseRetention")
    private Boolean value_bypassSnaplockEnterpriseRetention;
    private boolean unknown_bypassSnaplockEnterpriseRetention;
    public Boolean bypassSnaplockEnterpriseRetention() {
        if (!unknown_bypassSnaplockEnterpriseRetention) return value_bypassSnaplockEnterpriseRetention;
        throw new UndeferrableValueException("Value 'OntapVolumeArgs.bypassSnaplockEnterpriseRetention' is not present");
    }

    /**
     * A boolean flag indicating whether tags for the volume should be copied to backups. This value defaults to `false`.
     * 
     */
    @PolicyResourceProperty(name="copyTagsToBackups", flag="unknown_copyTagsToBackups")
    private Boolean value_copyTagsToBackups;
    private boolean unknown_copyTagsToBackups;
    public Boolean copyTagsToBackups() {
        if (!unknown_copyTagsToBackups) return value_copyTagsToBackups;
        throw new UndeferrableValueException("Value 'OntapVolumeArgs.copyTagsToBackups' is not present");
    }

    /**
     * A map of tags to apply to the volume&#39;s final backup.
     * 
     */
    @PolicyResourceProperty(name="finalBackupTags", flag="unknown_finalBackupTags")
    private Map<String,String> value_finalBackupTags;
    private boolean unknown_finalBackupTags;
    public Map<String,String> finalBackupTags() {
        if (!unknown_finalBackupTags) return value_finalBackupTags;
        throw new UndeferrableValueException("Value 'OntapVolumeArgs.finalBackupTags' is not present");
    }

    /**
     * Specifies the location in the storage virtual machine&#39;s namespace where the volume is mounted. The junction_path must have a leading forward slash, such as `/vol3`
     * 
     */
    @PolicyResourceProperty(name="junctionPath", flag="unknown_junctionPath")
    private String value_junctionPath;
    private boolean unknown_junctionPath;
    public String junctionPath() {
        if (!unknown_junctionPath) return value_junctionPath;
        throw new UndeferrableValueException("Value 'OntapVolumeArgs.junctionPath' is not present");
    }

    /**
     * The name of the Volume. You can use a maximum of 203 alphanumeric characters, plus the underscore (_) special character.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'OntapVolumeArgs.name' is not present");
    }

    /**
     * Specifies the type of volume, valid values are `RW`, `DP`. Default value is `RW`. These can be set by the ONTAP CLI or API. This setting is used as part of migration and replication [Migrating to Amazon FSx for NetApp ONTAP](https://docs.aws.amazon.com/fsx/latest/ONTAPGuide/migrating-fsx-ontap.html)
     * 
     */
    @PolicyResourceProperty(name="ontapVolumeType", flag="unknown_ontapVolumeType")
    private String value_ontapVolumeType;
    private boolean unknown_ontapVolumeType;
    public String ontapVolumeType() {
        if (!unknown_ontapVolumeType) return value_ontapVolumeType;
        throw new UndeferrableValueException("Value 'OntapVolumeArgs.ontapVolumeType' is not present");
    }

    /**
     * Specifies the volume security style, Valid values are `UNIX`, `NTFS`, and `MIXED`.
     * 
     */
    @PolicyResourceProperty(name="securityStyle", flag="unknown_securityStyle")
    private String value_securityStyle;
    private boolean unknown_securityStyle;
    public String securityStyle() {
        if (!unknown_securityStyle) return value_securityStyle;
        throw new UndeferrableValueException("Value 'OntapVolumeArgs.securityStyle' is not present");
    }

    /**
     * Specifies the size of the volume, in megabytes (MB), that you are creating. Can be used for any size but required for volumes over 2 PB. Either size_in_bytes or size_in_megabytes must be specified. Minimum size for `FLEXGROUP` volumes are 100GiB per constituent.
     * 
     */
    @PolicyResourceProperty(name="sizeInBytes", flag="unknown_sizeInBytes")
    private String value_sizeInBytes;
    private boolean unknown_sizeInBytes;
    public String sizeInBytes() {
        if (!unknown_sizeInBytes) return value_sizeInBytes;
        throw new UndeferrableValueException("Value 'OntapVolumeArgs.sizeInBytes' is not present");
    }

    /**
     * Specifies the size of the volume, in megabytes (MB), that you are creating. Supported when creating volumes under 2 PB. Either size_in_bytes or size_in_megabytes must be specified. Minimum size for `FLEXGROUP` volumes are 100GiB per constituent.
     * 
     */
    @PolicyResourceProperty(name="sizeInMegabytes", flag="unknown_sizeInMegabytes")
    private Integer value_sizeInMegabytes;
    private boolean unknown_sizeInMegabytes;
    public Integer sizeInMegabytes() {
        if (!unknown_sizeInMegabytes) return value_sizeInMegabytes;
        throw new UndeferrableValueException("Value 'OntapVolumeArgs.sizeInMegabytes' is not present");
    }

    /**
     * When enabled, will skip the default final backup taken when the volume is deleted. This configuration must be applied separately before attempting to delete the resource to have the desired behavior. Defaults to `false`.
     * 
     */
    @PolicyResourceProperty(name="skipFinalBackup", flag="unknown_skipFinalBackup")
    private Boolean value_skipFinalBackup;
    private boolean unknown_skipFinalBackup;
    public Boolean skipFinalBackup() {
        if (!unknown_skipFinalBackup) return value_skipFinalBackup;
        throw new UndeferrableValueException("Value 'OntapVolumeArgs.skipFinalBackup' is not present");
    }

    /**
     * The SnapLock configuration for an FSx for ONTAP volume. See `snaplock_configuration` Block for details.
     * 
     */
    @PolicyResourceProperty(name="snaplockConfiguration", flag="unknown_snaplockConfiguration")
    private OntapVolumeSnaplockConfigurationArgs value_snaplockConfiguration;
    private boolean unknown_snaplockConfiguration;
    public OntapVolumeSnaplockConfigurationArgs snaplockConfiguration() {
        if (!unknown_snaplockConfiguration) return value_snaplockConfiguration;
        throw new UndeferrableValueException("Value 'OntapVolumeArgs.snaplockConfiguration' is not present");
    }

    /**
     * Specifies the snapshot policy for the volume. See [snapshot policies](https://docs.aws.amazon.com/fsx/latest/ONTAPGuide/snapshots-ontap.html#snapshot-policies) in the Amazon FSx ONTAP User Guide
     * 
     */
    @PolicyResourceProperty(name="snapshotPolicy", flag="unknown_snapshotPolicy")
    private String value_snapshotPolicy;
    private boolean unknown_snapshotPolicy;
    public String snapshotPolicy() {
        if (!unknown_snapshotPolicy) return value_snapshotPolicy;
        throw new UndeferrableValueException("Value 'OntapVolumeArgs.snapshotPolicy' is not present");
    }

    /**
     * Set to true to enable deduplication, compression, and compaction storage efficiency features on the volume.
     * 
     */
    @PolicyResourceProperty(name="storageEfficiencyEnabled", flag="unknown_storageEfficiencyEnabled")
    private Boolean value_storageEfficiencyEnabled;
    private boolean unknown_storageEfficiencyEnabled;
    public Boolean storageEfficiencyEnabled() {
        if (!unknown_storageEfficiencyEnabled) return value_storageEfficiencyEnabled;
        throw new UndeferrableValueException("Value 'OntapVolumeArgs.storageEfficiencyEnabled' is not present");
    }

    /**
     * Specifies the storage virtual machine in which to create the volume.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="storageVirtualMachineId", flag="unknown_storageVirtualMachineId")
    private String value_storageVirtualMachineId;
    private boolean unknown_storageVirtualMachineId;
    public String storageVirtualMachineId() {
        if (!unknown_storageVirtualMachineId) return value_storageVirtualMachineId;
        throw new UndeferrableValueException("Value 'OntapVolumeArgs.storageVirtualMachineId' is not present");
    }

    /**
     * A map of tags to assign to the volume. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'OntapVolumeArgs.tags' is not present");
    }

    /**
     * The data tiering policy for an FSx for ONTAP volume. See `tiering_policy` Block for details.
     * 
     */
    @PolicyResourceProperty(name="tieringPolicy", flag="unknown_tieringPolicy")
    private OntapVolumeTieringPolicyArgs value_tieringPolicy;
    private boolean unknown_tieringPolicy;
    public OntapVolumeTieringPolicyArgs tieringPolicy() {
        if (!unknown_tieringPolicy) return value_tieringPolicy;
        throw new UndeferrableValueException("Value 'OntapVolumeArgs.tieringPolicy' is not present");
    }

    /**
     * Specifies the styles of volume, valid values are `FLEXVOL`, `FLEXGROUP`. Default value is `FLEXVOL`. FLEXGROUPS have a larger minimum and maximum size. See Volume Styles for more details. [Volume Styles](https://docs.aws.amazon.com/fsx/latest/ONTAPGuide/volume-styles.html)
     * 
     */
    @PolicyResourceProperty(name="volumeStyle", flag="unknown_volumeStyle")
    private String value_volumeStyle;
    private boolean unknown_volumeStyle;
    public String volumeStyle() {
        if (!unknown_volumeStyle) return value_volumeStyle;
        throw new UndeferrableValueException("Value 'OntapVolumeArgs.volumeStyle' is not present");
    }

    /**
     * The type of volume, currently the only valid value is `ONTAP`.
     * 
     */
    @PolicyResourceProperty(name="volumeType", flag="unknown_volumeType")
    private String value_volumeType;
    private boolean unknown_volumeType;
    public String volumeType() {
        if (!unknown_volumeType) return value_volumeType;
        throw new UndeferrableValueException("Value 'OntapVolumeArgs.volumeType' is not present");
    }

}
