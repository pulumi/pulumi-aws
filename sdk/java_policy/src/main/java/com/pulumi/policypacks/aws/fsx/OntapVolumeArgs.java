// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.fsx;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.fsx.inputs.OntapVolumeAggregateConfigurationArgs;
import com.pulumi.policypacks.aws.fsx.inputs.OntapVolumeSnaplockConfigurationArgs;
import com.pulumi.policypacks.aws.fsx.inputs.OntapVolumeTieringPolicyArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:fsx/ontapVolume:OntapVolume")
public final class OntapVolumeArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The Aggregate configuration only applies to `FLEXGROUP` volumes. See [`aggregate_configuration` Block] for details.
     * 
     */
    private UndeferrableValue<OntapVolumeAggregateConfigurationArgs> aggregateConfiguration;

    public OntapVolumeAggregateConfigurationArgs aggregateConfiguration() {
        if (aggregateConfiguration == null) return null;
        return aggregateConfiguration.getValue("OntapVolumeArgs.aggregateConfiguration");
    }

    /**
     * Setting this to `true` allows a SnapLock administrator to delete an FSx for ONTAP SnapLock Enterprise volume with unexpired write once, read many (WORM) files. This configuration must be applied separately before attempting to delete the resource to have the desired behavior. Defaults to `false`.
     * 
     */
    private UndeferrableValue<Boolean> bypassSnaplockEnterpriseRetention;

    public Boolean bypassSnaplockEnterpriseRetention() {
        if (bypassSnaplockEnterpriseRetention == null) return null;
        return bypassSnaplockEnterpriseRetention.getValue("OntapVolumeArgs.bypassSnaplockEnterpriseRetention");
    }

    /**
     * A boolean flag indicating whether tags for the volume should be copied to backups. This value defaults to `false`.
     * 
     */
    private UndeferrableValue<Boolean> copyTagsToBackups;

    public Boolean copyTagsToBackups() {
        if (copyTagsToBackups == null) return null;
        return copyTagsToBackups.getValue("OntapVolumeArgs.copyTagsToBackups");
    }

    /**
     * A map of tags to apply to the volume&#39;s final backup.
     * 
     */
    private UndeferrableValue<Map<String,String>> finalBackupTags;

    public Map<String,String> finalBackupTags() {
        if (finalBackupTags == null) return null;
        return finalBackupTags.getValue("OntapVolumeArgs.finalBackupTags");
    }

    /**
     * Specifies the location in the storage virtual machine&#39;s namespace where the volume is mounted. The junction_path must have a leading forward slash, such as `/vol3`
     * 
     */
    private UndeferrableValue<String> junctionPath;

    public String junctionPath() {
        if (junctionPath == null) return null;
        return junctionPath.getValue("OntapVolumeArgs.junctionPath");
    }

    /**
     * The name of the Volume. You can use a maximum of 203 alphanumeric characters, plus the underscore (_) special character.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("OntapVolumeArgs.name");
    }

    /**
     * Specifies the type of volume, valid values are `RW`, `DP`. Default value is `RW`. These can be set by the ONTAP CLI or API. This setting is used as part of migration and replication [Migrating to Amazon FSx for NetApp ONTAP](https://docs.aws.amazon.com/fsx/latest/ONTAPGuide/migrating-fsx-ontap.html)
     * 
     */
    private UndeferrableValue<String> ontapVolumeType;

    public String ontapVolumeType() {
        if (ontapVolumeType == null) return null;
        return ontapVolumeType.getValue("OntapVolumeArgs.ontapVolumeType");
    }

    /**
     * Specifies the volume security style, Valid values are `UNIX`, `NTFS`, and `MIXED`.
     * 
     */
    private UndeferrableValue<String> securityStyle;

    public String securityStyle() {
        if (securityStyle == null) return null;
        return securityStyle.getValue("OntapVolumeArgs.securityStyle");
    }

    /**
     * Specifies the size of the volume, in megabytes (MB), that you are creating. Can be used for any size but required for volumes over 2 PB. Either size_in_bytes or size_in_megabytes must be specified. Minimum size for `FLEXGROUP` volumes are 100GiB per constituent.
     * 
     */
    private UndeferrableValue<String> sizeInBytes;

    public String sizeInBytes() {
        if (sizeInBytes == null) return null;
        return sizeInBytes.getValue("OntapVolumeArgs.sizeInBytes");
    }

    /**
     * Specifies the size of the volume, in megabytes (MB), that you are creating. Supported when creating volumes under 2 PB. Either size_in_bytes or size_in_megabytes must be specified. Minimum size for `FLEXGROUP` volumes are 100GiB per constituent.
     * 
     */
    private UndeferrableValue<Integer> sizeInMegabytes;

    public Integer sizeInMegabytes() {
        if (sizeInMegabytes == null) return null;
        return sizeInMegabytes.getValue("OntapVolumeArgs.sizeInMegabytes");
    }

    /**
     * When enabled, will skip the default final backup taken when the volume is deleted. This configuration must be applied separately before attempting to delete the resource to have the desired behavior. Defaults to `false`.
     * 
     */
    private UndeferrableValue<Boolean> skipFinalBackup;

    public Boolean skipFinalBackup() {
        if (skipFinalBackup == null) return null;
        return skipFinalBackup.getValue("OntapVolumeArgs.skipFinalBackup");
    }

    /**
     * The SnapLock configuration for an FSx for ONTAP volume. See `snaplock_configuration` Block for details.
     * 
     */
    private UndeferrableValue<OntapVolumeSnaplockConfigurationArgs> snaplockConfiguration;

    public OntapVolumeSnaplockConfigurationArgs snaplockConfiguration() {
        if (snaplockConfiguration == null) return null;
        return snaplockConfiguration.getValue("OntapVolumeArgs.snaplockConfiguration");
    }

    /**
     * Specifies the snapshot policy for the volume. See [snapshot policies](https://docs.aws.amazon.com/fsx/latest/ONTAPGuide/snapshots-ontap.html#snapshot-policies) in the Amazon FSx ONTAP User Guide
     * 
     */
    private UndeferrableValue<String> snapshotPolicy;

    public String snapshotPolicy() {
        if (snapshotPolicy == null) return null;
        return snapshotPolicy.getValue("OntapVolumeArgs.snapshotPolicy");
    }

    /**
     * Set to true to enable deduplication, compression, and compaction storage efficiency features on the volume.
     * 
     */
    private UndeferrableValue<Boolean> storageEfficiencyEnabled;

    public Boolean storageEfficiencyEnabled() {
        if (storageEfficiencyEnabled == null) return null;
        return storageEfficiencyEnabled.getValue("OntapVolumeArgs.storageEfficiencyEnabled");
    }

    /**
     * Specifies the storage virtual machine in which to create the volume.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> storageVirtualMachineId;

    public String storageVirtualMachineId() {
        if (storageVirtualMachineId == null) return null;
        return storageVirtualMachineId.getValue("OntapVolumeArgs.storageVirtualMachineId");
    }

    /**
     * A map of tags to assign to the volume. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("OntapVolumeArgs.tags");
    }

    /**
     * The data tiering policy for an FSx for ONTAP volume. See `tiering_policy` Block for details.
     * 
     */
    private UndeferrableValue<OntapVolumeTieringPolicyArgs> tieringPolicy;

    public OntapVolumeTieringPolicyArgs tieringPolicy() {
        if (tieringPolicy == null) return null;
        return tieringPolicy.getValue("OntapVolumeArgs.tieringPolicy");
    }

    /**
     * Specifies the styles of volume, valid values are `FLEXVOL`, `FLEXGROUP`. Default value is `FLEXVOL`. FLEXGROUPS have a larger minimum and maximum size. See Volume Styles for more details. [Volume Styles](https://docs.aws.amazon.com/fsx/latest/ONTAPGuide/volume-styles.html)
     * 
     */
    private UndeferrableValue<String> volumeStyle;

    public String volumeStyle() {
        if (volumeStyle == null) return null;
        return volumeStyle.getValue("OntapVolumeArgs.volumeStyle");
    }

    /**
     * The type of volume, currently the only valid value is `ONTAP`.
     * 
     */
    private UndeferrableValue<String> volumeType;

    public String volumeType() {
        if (volumeType == null) return null;
        return volumeType.getValue("OntapVolumeArgs.volumeType");
    }

}
