// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.cloudfront.inputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.cloudfront.inputs.CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigArgs;
import com.pulumi.policypacks.aws.cloudfront.inputs.CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigArgs;
import com.pulumi.policypacks.aws.cloudfront.inputs.CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigArgs;
import java.lang.Boolean;
import javax.annotation.Nullable;


public final class CachePolicyParametersInCacheKeyAndForwardedToOriginArgs {

    /**
     * Whether any cookies in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. See Cookies Config for more information.
     * 
     */
    private UndeferrableValue<CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigArgs> cookiesConfig;

    public CachePolicyParametersInCacheKeyAndForwardedToOriginCookiesConfigArgs cookiesConfig() {
        if (cookiesConfig == null) return null;
        return cookiesConfig.getValue("CachePolicyParametersInCacheKeyAndForwardedToOriginArgs.cookiesConfig");
    }

    /**
     * Flag determines whether the Accept-Encoding HTTP header is included in the cache key and in requests that CloudFront sends to the origin.
     * 
     */
    private UndeferrableValue<Boolean> enableAcceptEncodingBrotli;

    public Boolean enableAcceptEncodingBrotli() {
        if (enableAcceptEncodingBrotli == null) return null;
        return enableAcceptEncodingBrotli.getValue("CachePolicyParametersInCacheKeyAndForwardedToOriginArgs.enableAcceptEncodingBrotli");
    }

    /**
     * Whether the Accept-Encoding HTTP header is included in the cache key and in requests sent to the origin by CloudFront.
     * 
     */
    private UndeferrableValue<Boolean> enableAcceptEncodingGzip;

    public Boolean enableAcceptEncodingGzip() {
        if (enableAcceptEncodingGzip == null) return null;
        return enableAcceptEncodingGzip.getValue("CachePolicyParametersInCacheKeyAndForwardedToOriginArgs.enableAcceptEncodingGzip");
    }

    /**
     * Whether any HTTP headers are included in the cache key and automatically included in requests that CloudFront sends to the origin. See Headers Config for more information.
     * 
     */
    private UndeferrableValue<CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigArgs> headersConfig;

    public CachePolicyParametersInCacheKeyAndForwardedToOriginHeadersConfigArgs headersConfig() {
        if (headersConfig == null) return null;
        return headersConfig.getValue("CachePolicyParametersInCacheKeyAndForwardedToOriginArgs.headersConfig");
    }

    /**
     * Whether any URL query strings in viewer requests are included in the cache key. It also automatically includes these query strings in requests that CloudFront sends to the origin. Please refer to the Query String Config for more information.
     * 
     */
    private UndeferrableValue<CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigArgs> queryStringsConfig;

    public CachePolicyParametersInCacheKeyAndForwardedToOriginQueryStringsConfigArgs queryStringsConfig() {
        if (queryStringsConfig == null) return null;
        return queryStringsConfig.getValue("CachePolicyParametersInCacheKeyAndForwardedToOriginArgs.queryStringsConfig");
    }

}
