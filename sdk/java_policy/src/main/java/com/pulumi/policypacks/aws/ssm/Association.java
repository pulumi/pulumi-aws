// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ssm;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.ssm.outputs.AssociationOutputLocation;
import com.pulumi.policypacks.aws.ssm.outputs.AssociationTarget;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ssm/association:Association")
public final class Association extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * By default, when you create a new or update associations, the system runs it immediately and then according to the schedule you specified. Enable this option if you do not want an association to run immediately after you create or update it. This parameter is not supported for rate expressions. Default: `false`.
     * 
     */
    @PolicyResourceProperty(name="applyOnlyAtCronInterval", flag="unknown_applyOnlyAtCronInterval")
    private @Nullable Boolean value_applyOnlyAtCronInterval;
    private boolean unknown_applyOnlyAtCronInterval;
    public @Nullable Boolean applyOnlyAtCronInterval() {
        if (!unknown_applyOnlyAtCronInterval) return value_applyOnlyAtCronInterval;
        throw new UndeferrableValueException("Value 'Association.applyOnlyAtCronInterval' is not present");
    }

    /**
     * The ARN of the SSM association
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'Association.arn' is not present");
    }

    /**
     * The ID of the SSM association.
     * 
     */
    @PolicyResourceProperty(name="associationId", flag="unknown_associationId")
    private String value_associationId;
    private boolean unknown_associationId;
    public String associationId() {
        if (!unknown_associationId) return value_associationId;
        throw new UndeferrableValueException("Value 'Association.associationId' is not present");
    }

    /**
     * The descriptive name for the association.
     * 
     */
    @PolicyResourceProperty(name="associationName", flag="unknown_associationName")
    private @Nullable String value_associationName;
    private boolean unknown_associationName;
    public @Nullable String associationName() {
        if (!unknown_associationName) return value_associationName;
        throw new UndeferrableValueException("Value 'Association.associationName' is not present");
    }

    /**
     * Specify the target for the association. This target is required for associations that use an `Automation` document and target resources by using rate controls. This should be set to the SSM document `parameter` that will define how your automation will branch out.
     * 
     */
    @PolicyResourceProperty(name="automationTargetParameterName", flag="unknown_automationTargetParameterName")
    private @Nullable String value_automationTargetParameterName;
    private boolean unknown_automationTargetParameterName;
    public @Nullable String automationTargetParameterName() {
        if (!unknown_automationTargetParameterName) return value_automationTargetParameterName;
        throw new UndeferrableValueException("Value 'Association.automationTargetParameterName' is not present");
    }

    /**
     * The compliance severity for the association. Can be one of the following: `UNSPECIFIED`, `LOW`, `MEDIUM`, `HIGH` or `CRITICAL`
     * 
     */
    @PolicyResourceProperty(name="complianceSeverity", flag="unknown_complianceSeverity")
    private @Nullable String value_complianceSeverity;
    private boolean unknown_complianceSeverity;
    public @Nullable String complianceSeverity() {
        if (!unknown_complianceSeverity) return value_complianceSeverity;
        throw new UndeferrableValueException("Value 'Association.complianceSeverity' is not present");
    }

    /**
     * The document version you want to associate with the target(s). Can be a specific version or the default version.
     * 
     */
    @PolicyResourceProperty(name="documentVersion", flag="unknown_documentVersion")
    private String value_documentVersion;
    private boolean unknown_documentVersion;
    public String documentVersion() {
        if (!unknown_documentVersion) return value_documentVersion;
        throw new UndeferrableValueException("Value 'Association.documentVersion' is not present");
    }

    /**
     * The instance ID to apply an SSM document to. Use `targets` with key `InstanceIds` for document schema versions 2.0 and above. Use the `targets` attribute instead.
     * 
     * @deprecated
     * instance_id is deprecated. Use targets instead.
     * 
     */
    @Deprecated /* instance_id is deprecated. Use targets instead. */
    @PolicyResourceProperty(name="instanceId", flag="unknown_instanceId")
    private @Nullable String value_instanceId;
    private boolean unknown_instanceId;
    public @Nullable String instanceId() {
        if (!unknown_instanceId) return value_instanceId;
        throw new UndeferrableValueException("Value 'Association.instanceId' is not present");
    }

    /**
     * The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%.
     * 
     */
    @PolicyResourceProperty(name="maxConcurrency", flag="unknown_maxConcurrency")
    private @Nullable String value_maxConcurrency;
    private boolean unknown_maxConcurrency;
    public @Nullable String maxConcurrency() {
        if (!unknown_maxConcurrency) return value_maxConcurrency;
        throw new UndeferrableValueException("Value 'Association.maxConcurrency' is not present");
    }

    /**
     * The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify a number, for example 10, or a percentage of the target set, for example 10%. If you specify a threshold of 3, the stop command is sent when the fourth error is returned. If you specify a threshold of 10% for 50 associations, the stop command is sent when the sixth error is returned.
     * 
     */
    @PolicyResourceProperty(name="maxErrors", flag="unknown_maxErrors")
    private @Nullable String value_maxErrors;
    private boolean unknown_maxErrors;
    public @Nullable String maxErrors() {
        if (!unknown_maxErrors) return value_maxErrors;
        throw new UndeferrableValueException("Value 'Association.maxErrors' is not present");
    }

    /**
     * The name of the SSM document to apply.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'Association.name' is not present");
    }

    /**
     * An output location block. Output Location is documented below.
     * 
     */
    @PolicyResourceProperty(name="outputLocation", flag="unknown_outputLocation")
    private @Nullable AssociationOutputLocation value_outputLocation;
    private boolean unknown_outputLocation;
    public @Nullable AssociationOutputLocation outputLocation() {
        if (!unknown_outputLocation) return value_outputLocation;
        throw new UndeferrableValueException("Value 'Association.outputLocation' is not present");
    }

    /**
     * A block of arbitrary string parameters to pass to the SSM document.
     * 
     */
    @PolicyResourceProperty(name="parameters", flag="unknown_parameters")
    private Map<String,String> value_parameters;
    private boolean unknown_parameters;
    public Map<String,String> parameters() {
        if (!unknown_parameters) return value_parameters;
        throw new UndeferrableValueException("Value 'Association.parameters' is not present");
    }

    /**
     * A [cron or rate expression](https://docs.aws.amazon.com/systems-manager/latest/userguide/reference-cron-and-rate-expressions.html) that specifies when the association runs.
     * 
     */
    @PolicyResourceProperty(name="scheduleExpression", flag="unknown_scheduleExpression")
    private @Nullable String value_scheduleExpression;
    private boolean unknown_scheduleExpression;
    public @Nullable String scheduleExpression() {
        if (!unknown_scheduleExpression) return value_scheduleExpression;
        throw new UndeferrableValueException("Value 'Association.scheduleExpression' is not present");
    }

    /**
     * The mode for generating association compliance. You can specify `AUTO` or `MANUAL`.
     * 
     */
    @PolicyResourceProperty(name="syncCompliance", flag="unknown_syncCompliance")
    private @Nullable String value_syncCompliance;
    private boolean unknown_syncCompliance;
    public @Nullable String syncCompliance() {
        if (!unknown_syncCompliance) return value_syncCompliance;
        throw new UndeferrableValueException("Value 'Association.syncCompliance' is not present");
    }

    /**
     * A map of tags to assign to the object. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'Association.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'Association.tagsAll' is not present");
    }

    /**
     * A block containing the targets of the SSM association. Targets are documented below. AWS currently supports a maximum of 5 targets.
     * 
     */
    @PolicyResourceProperty(name="targets", flag="unknown_targets")
    private List<AssociationTarget> value_targets;
    private boolean unknown_targets;
    public List<AssociationTarget> targets() {
        if (!unknown_targets) return value_targets;
        throw new UndeferrableValueException("Value 'Association.targets' is not present");
    }

    /**
     * The number of seconds to wait for the association status to be `Success`. If `Success` status is not reached within the given time, create opration will fail.
     * 
     * Output Location (`output_location`) is an S3 bucket where you want to store the results of this association:
     * 
     */
    @PolicyResourceProperty(name="waitForSuccessTimeoutSeconds", flag="unknown_waitForSuccessTimeoutSeconds")
    private @Nullable Integer value_waitForSuccessTimeoutSeconds;
    private boolean unknown_waitForSuccessTimeoutSeconds;
    public @Nullable Integer waitForSuccessTimeoutSeconds() {
        if (!unknown_waitForSuccessTimeoutSeconds) return value_waitForSuccessTimeoutSeconds;
        throw new UndeferrableValueException("Value 'Association.waitForSuccessTimeoutSeconds' is not present");
    }

}
