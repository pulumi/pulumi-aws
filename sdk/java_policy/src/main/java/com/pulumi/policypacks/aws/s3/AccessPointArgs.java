// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.s3;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.s3.inputs.AccessPointPublicAccessBlockConfigurationArgs;
import com.pulumi.policypacks.aws.s3.inputs.AccessPointVpcConfigurationArgs;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:s3/accessPoint:AccessPoint")
public final class AccessPointArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * AWS account ID for the owner of the bucket for which you want to create an access point. Defaults to automatically determined account ID of the AWS provider.
     * 
     */
    private UndeferrableValue<String> accountId;

    public String accountId() {
        if (accountId == null) return null;
        return accountId.getValue("AccessPointArgs.accountId");
    }

    /**
     * Name of an AWS Partition S3 General Purpose Bucket or the ARN of S3 on Outposts Bucket that you want to associate this access point with.
     * 
     */
    private UndeferrableValue<String> bucket;

    public String bucket() {
        if (bucket == null) return null;
        return bucket.getValue("AccessPointArgs.bucket");
    }

    /**
     * AWS account ID associated with the S3 bucket associated with this access point.
     * 
     */
    private UndeferrableValue<String> bucketAccountId;

    public String bucketAccountId() {
        if (bucketAccountId == null) return null;
        return bucketAccountId.getValue("AccessPointArgs.bucketAccountId");
    }

    /**
     * Name you want to assign to this access point. See the [AWS documentation](https://docs.aws.amazon.com/AmazonS3/latest/userguide/creating-access-points.html?icmpid=docs_amazons3_console#access-points-names) for naming conditions.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("AccessPointArgs.name");
    }

    /**
     * Valid JSON document that specifies the policy that you want to apply to this access point. Removing `policy` from your configuration or setting `policy` to null or an empty string (i.e., `policy = &#34;&#34;`) _will not_ delete the policy since it could have been set by `aws.s3control.AccessPointPolicy`. To remove the `policy`, set it to `&#34;{}&#34;` (an empty JSON document).
     * 
     */
    private UndeferrableValue<String> policy;

    public String policy() {
        if (policy == null) return null;
        return policy.getValue("AccessPointArgs.policy");
    }

    /**
     * Configuration block to manage the `PublicAccessBlock` configuration that you want to apply to this Amazon S3 bucket. You can enable the configuration options in any combination. Detailed below.
     * 
     */
    private UndeferrableValue<AccessPointPublicAccessBlockConfigurationArgs> publicAccessBlockConfiguration;

    public AccessPointPublicAccessBlockConfigurationArgs publicAccessBlockConfiguration() {
        if (publicAccessBlockConfiguration == null) return null;
        return publicAccessBlockConfiguration.getValue("AccessPointArgs.publicAccessBlockConfiguration");
    }

    /**
     * Configuration block to restrict access to this access point to requests from the specified Virtual Private Cloud (VPC). Required for S3 on Outposts. Detailed below.
     * 
     */
    private UndeferrableValue<AccessPointVpcConfigurationArgs> vpcConfiguration;

    public AccessPointVpcConfigurationArgs vpcConfiguration() {
        if (vpcConfiguration == null) return null;
        return vpcConfiguration.getValue("AccessPointArgs.vpcConfiguration");
    }

}
