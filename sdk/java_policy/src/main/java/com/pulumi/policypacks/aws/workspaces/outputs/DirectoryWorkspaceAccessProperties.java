// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.workspaces.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.String;
import javax.annotation.Nullable;


public final class DirectoryWorkspaceAccessProperties {

    /**
     * Indicates whether users can use Android devices to access their WorkSpaces.
     * 
     */
    @PolicyResourceProperty(name="deviceTypeAndroid", flag="unknown_deviceTypeAndroid")
    private @Nullable String value_deviceTypeAndroid;
    private boolean unknown_deviceTypeAndroid;
    public @Nullable String deviceTypeAndroid() {
        if (!unknown_deviceTypeAndroid) return value_deviceTypeAndroid;
        throw new UndeferrableValueException("Value 'DirectoryWorkspaceAccessProperties.deviceTypeAndroid' is not present");
    }

    /**
     * Indicates whether users can use Chromebooks to access their WorkSpaces.
     * 
     */
    @PolicyResourceProperty(name="deviceTypeChromeos", flag="unknown_deviceTypeChromeos")
    private @Nullable String value_deviceTypeChromeos;
    private boolean unknown_deviceTypeChromeos;
    public @Nullable String deviceTypeChromeos() {
        if (!unknown_deviceTypeChromeos) return value_deviceTypeChromeos;
        throw new UndeferrableValueException("Value 'DirectoryWorkspaceAccessProperties.deviceTypeChromeos' is not present");
    }

    /**
     * Indicates whether users can use iOS devices to access their WorkSpaces.
     * 
     */
    @PolicyResourceProperty(name="deviceTypeIos", flag="unknown_deviceTypeIos")
    private @Nullable String value_deviceTypeIos;
    private boolean unknown_deviceTypeIos;
    public @Nullable String deviceTypeIos() {
        if (!unknown_deviceTypeIos) return value_deviceTypeIos;
        throw new UndeferrableValueException("Value 'DirectoryWorkspaceAccessProperties.deviceTypeIos' is not present");
    }

    /**
     * Indicates whether users can use Linux clients to access their WorkSpaces.
     * 
     */
    @PolicyResourceProperty(name="deviceTypeLinux", flag="unknown_deviceTypeLinux")
    private @Nullable String value_deviceTypeLinux;
    private boolean unknown_deviceTypeLinux;
    public @Nullable String deviceTypeLinux() {
        if (!unknown_deviceTypeLinux) return value_deviceTypeLinux;
        throw new UndeferrableValueException("Value 'DirectoryWorkspaceAccessProperties.deviceTypeLinux' is not present");
    }

    /**
     * Indicates whether users can use macOS clients to access their WorkSpaces.
     * 
     */
    @PolicyResourceProperty(name="deviceTypeOsx", flag="unknown_deviceTypeOsx")
    private @Nullable String value_deviceTypeOsx;
    private boolean unknown_deviceTypeOsx;
    public @Nullable String deviceTypeOsx() {
        if (!unknown_deviceTypeOsx) return value_deviceTypeOsx;
        throw new UndeferrableValueException("Value 'DirectoryWorkspaceAccessProperties.deviceTypeOsx' is not present");
    }

    /**
     * Indicates whether users can access their WorkSpaces through a web browser.
     * 
     */
    @PolicyResourceProperty(name="deviceTypeWeb", flag="unknown_deviceTypeWeb")
    private @Nullable String value_deviceTypeWeb;
    private boolean unknown_deviceTypeWeb;
    public @Nullable String deviceTypeWeb() {
        if (!unknown_deviceTypeWeb) return value_deviceTypeWeb;
        throw new UndeferrableValueException("Value 'DirectoryWorkspaceAccessProperties.deviceTypeWeb' is not present");
    }

    /**
     * Indicates whether users can use Windows clients to access their WorkSpaces.
     * 
     */
    @PolicyResourceProperty(name="deviceTypeWindows", flag="unknown_deviceTypeWindows")
    private @Nullable String value_deviceTypeWindows;
    private boolean unknown_deviceTypeWindows;
    public @Nullable String deviceTypeWindows() {
        if (!unknown_deviceTypeWindows) return value_deviceTypeWindows;
        throw new UndeferrableValueException("Value 'DirectoryWorkspaceAccessProperties.deviceTypeWindows' is not present");
    }

    /**
     * Indicates whether users can use zero client devices to access their WorkSpaces.
     * 
     */
    @PolicyResourceProperty(name="deviceTypeZeroclient", flag="unknown_deviceTypeZeroclient")
    private @Nullable String value_deviceTypeZeroclient;
    private boolean unknown_deviceTypeZeroclient;
    public @Nullable String deviceTypeZeroclient() {
        if (!unknown_deviceTypeZeroclient) return value_deviceTypeZeroclient;
        throw new UndeferrableValueException("Value 'DirectoryWorkspaceAccessProperties.deviceTypeZeroclient' is not present");
    }

}
