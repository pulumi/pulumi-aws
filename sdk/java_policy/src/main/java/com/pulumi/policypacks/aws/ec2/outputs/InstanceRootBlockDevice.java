// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


public final class InstanceRootBlockDevice {

    /**
     * Whether the volume should be destroyed on instance termination. Defaults to `true`.
     * 
     */
    @PolicyResourceProperty(name="deleteOnTermination", flag="unknown_deleteOnTermination")
    private @Nullable Boolean value_deleteOnTermination;
    private boolean unknown_deleteOnTermination;
    public @Nullable Boolean deleteOnTermination() {
        if (!unknown_deleteOnTermination) return value_deleteOnTermination;
        throw new UndeferrableValueException("Value 'InstanceRootBlockDevice.deleteOnTermination' is not present");
    }

    /**
     * Device name, e.g., `/dev/sdh` or `xvdh`.
     * 
     */
    @PolicyResourceProperty(name="deviceName", flag="unknown_deviceName")
    private @Nullable String value_deviceName;
    private boolean unknown_deviceName;
    public @Nullable String deviceName() {
        if (!unknown_deviceName) return value_deviceName;
        throw new UndeferrableValueException("Value 'InstanceRootBlockDevice.deviceName' is not present");
    }

    /**
     * Whether to enable volume encryption. Defaults to `false`. Must be configured to perform drift detection.
     * 
     */
    @PolicyResourceProperty(name="encrypted", flag="unknown_encrypted")
    private @Nullable Boolean value_encrypted;
    private boolean unknown_encrypted;
    public @Nullable Boolean encrypted() {
        if (!unknown_encrypted) return value_encrypted;
        throw new UndeferrableValueException("Value 'InstanceRootBlockDevice.encrypted' is not present");
    }

    /**
     * Amount of provisioned [IOPS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-io-characteristics.html). Only valid for volume_type of `io1`, `io2` or `gp3`.
     * 
     */
    @PolicyResourceProperty(name="iops", flag="unknown_iops")
    private @Nullable Integer value_iops;
    private boolean unknown_iops;
    public @Nullable Integer iops() {
        if (!unknown_iops) return value_iops;
        throw new UndeferrableValueException("Value 'InstanceRootBlockDevice.iops' is not present");
    }

    /**
     * Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
     * 
     */
    @PolicyResourceProperty(name="kmsKeyId", flag="unknown_kmsKeyId")
    private @Nullable String value_kmsKeyId;
    private boolean unknown_kmsKeyId;
    public @Nullable String kmsKeyId() {
        if (!unknown_kmsKeyId) return value_kmsKeyId;
        throw new UndeferrableValueException("Value 'InstanceRootBlockDevice.kmsKeyId' is not present");
    }

    /**
     * Map of tags to assign to the device.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'InstanceRootBlockDevice.tags' is not present");
    }

    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private @Nullable Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public @Nullable Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'InstanceRootBlockDevice.tagsAll' is not present");
    }

    /**
     * Throughput to provision for a volume in mebibytes per second (MiB/s). This is only valid for `volume_type` of `gp3`.
     * 
     */
    @PolicyResourceProperty(name="throughput", flag="unknown_throughput")
    private @Nullable Integer value_throughput;
    private boolean unknown_throughput;
    public @Nullable Integer throughput() {
        if (!unknown_throughput) return value_throughput;
        throw new UndeferrableValueException("Value 'InstanceRootBlockDevice.throughput' is not present");
    }

    /**
     * ID of the volume. For example, the ID can be accessed like this, `aws_instance.web.root_block_device.0.volume_id`.
     * 
     */
    @PolicyResourceProperty(name="volumeId", flag="unknown_volumeId")
    private @Nullable String value_volumeId;
    private boolean unknown_volumeId;
    public @Nullable String volumeId() {
        if (!unknown_volumeId) return value_volumeId;
        throw new UndeferrableValueException("Value 'InstanceRootBlockDevice.volumeId' is not present");
    }

    /**
     * Size of the volume in gibibytes (GiB).
     * 
     */
    @PolicyResourceProperty(name="volumeSize", flag="unknown_volumeSize")
    private @Nullable Integer value_volumeSize;
    private boolean unknown_volumeSize;
    public @Nullable Integer volumeSize() {
        if (!unknown_volumeSize) return value_volumeSize;
        throw new UndeferrableValueException("Value 'InstanceRootBlockDevice.volumeSize' is not present");
    }

    /**
     * Type of volume. Valid values include `standard`, `gp2`, `gp3`, `io1`, `io2`, `sc1`, or `st1`. Defaults to the volume type that the AMI uses.
     * 
     * Modifying the `encrypted` or `kms_key_id` settings of the `root_block_device` requires resource replacement.
     * 
     */
    @PolicyResourceProperty(name="volumeType", flag="unknown_volumeType")
    private @Nullable String value_volumeType;
    private boolean unknown_volumeType;
    public @Nullable String volumeType() {
        if (!unknown_volumeType) return value_volumeType;
        throw new UndeferrableValueException("Value 'InstanceRootBlockDevice.volumeType' is not present");
    }

}
