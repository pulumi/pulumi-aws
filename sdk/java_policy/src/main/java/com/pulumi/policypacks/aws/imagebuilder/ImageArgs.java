// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.imagebuilder;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.imagebuilder.inputs.ImageImageScanningConfigurationArgs;
import com.pulumi.policypacks.aws.imagebuilder.inputs.ImageImageTestsConfigurationArgs;
import com.pulumi.policypacks.aws.imagebuilder.inputs.ImageWorkflowArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:imagebuilder/image:Image")
public final class ImageArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Amazon Resource Name (ARN) of the container recipe.
     * 
     */
    @PolicyResourceProperty(name="containerRecipeArn", flag="unknown_containerRecipeArn")
    private String value_containerRecipeArn;
    private boolean unknown_containerRecipeArn;
    public String containerRecipeArn() {
        if (!unknown_containerRecipeArn) return value_containerRecipeArn;
        throw new UndeferrableValueException("Value 'ImageArgs.containerRecipeArn' is not present");
    }

    /**
     * Amazon Resource Name (ARN) of the Image Builder Distribution Configuration.
     * 
     */
    @PolicyResourceProperty(name="distributionConfigurationArn", flag="unknown_distributionConfigurationArn")
    private String value_distributionConfigurationArn;
    private boolean unknown_distributionConfigurationArn;
    public String distributionConfigurationArn() {
        if (!unknown_distributionConfigurationArn) return value_distributionConfigurationArn;
        throw new UndeferrableValueException("Value 'ImageArgs.distributionConfigurationArn' is not present");
    }

    /**
     * Whether additional information about the image being created is collected. Defaults to `true`.
     * 
     */
    @PolicyResourceProperty(name="enhancedImageMetadataEnabled", flag="unknown_enhancedImageMetadataEnabled")
    private Boolean value_enhancedImageMetadataEnabled;
    private boolean unknown_enhancedImageMetadataEnabled;
    public Boolean enhancedImageMetadataEnabled() {
        if (!unknown_enhancedImageMetadataEnabled) return value_enhancedImageMetadataEnabled;
        throw new UndeferrableValueException("Value 'ImageArgs.enhancedImageMetadataEnabled' is not present");
    }

    /**
     * Amazon Resource Name (ARN) of the service-linked role to be used by Image Builder to [execute workflows](https://docs.aws.amazon.com/imagebuilder/latest/userguide/manage-image-workflows.html).
     * 
     */
    @PolicyResourceProperty(name="executionRole", flag="unknown_executionRole")
    private String value_executionRole;
    private boolean unknown_executionRole;
    public String executionRole() {
        if (!unknown_executionRole) return value_executionRole;
        throw new UndeferrableValueException("Value 'ImageArgs.executionRole' is not present");
    }

    /**
     * Amazon Resource Name (ARN) of the image recipe.
     * 
     */
    @PolicyResourceProperty(name="imageRecipeArn", flag="unknown_imageRecipeArn")
    private String value_imageRecipeArn;
    private boolean unknown_imageRecipeArn;
    public String imageRecipeArn() {
        if (!unknown_imageRecipeArn) return value_imageRecipeArn;
        throw new UndeferrableValueException("Value 'ImageArgs.imageRecipeArn' is not present");
    }

    /**
     * Configuration block with image scanning configuration. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="imageScanningConfiguration", flag="unknown_imageScanningConfiguration")
    private ImageImageScanningConfigurationArgs value_imageScanningConfiguration;
    private boolean unknown_imageScanningConfiguration;
    public ImageImageScanningConfigurationArgs imageScanningConfiguration() {
        if (!unknown_imageScanningConfiguration) return value_imageScanningConfiguration;
        throw new UndeferrableValueException("Value 'ImageArgs.imageScanningConfiguration' is not present");
    }

    /**
     * Configuration block with image tests configuration. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="imageTestsConfiguration", flag="unknown_imageTestsConfiguration")
    private ImageImageTestsConfigurationArgs value_imageTestsConfiguration;
    private boolean unknown_imageTestsConfiguration;
    public ImageImageTestsConfigurationArgs imageTestsConfiguration() {
        if (!unknown_imageTestsConfiguration) return value_imageTestsConfiguration;
        throw new UndeferrableValueException("Value 'ImageArgs.imageTestsConfiguration' is not present");
    }

    /**
     * Amazon Resource Name (ARN) of the Image Builder Infrastructure Configuration.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="infrastructureConfigurationArn", flag="unknown_infrastructureConfigurationArn")
    private String value_infrastructureConfigurationArn;
    private boolean unknown_infrastructureConfigurationArn;
    public String infrastructureConfigurationArn() {
        if (!unknown_infrastructureConfigurationArn) return value_infrastructureConfigurationArn;
        throw new UndeferrableValueException("Value 'ImageArgs.infrastructureConfigurationArn' is not present");
    }

    /**
     * Key-value map of resource tags for the Image Builder Image. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'ImageArgs.tags' is not present");
    }

    /**
     * Configuration block with the workflow configuration. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="workflows", flag="unknown_workflows")
    private List<ImageWorkflowArgs> value_workflows;
    private boolean unknown_workflows;
    public List<ImageWorkflowArgs> workflows() {
        if (!unknown_workflows) return value_workflows;
        throw new UndeferrableValueException("Value 'ImageArgs.workflows' is not present");
    }

}
