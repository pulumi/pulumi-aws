// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.imagebuilder;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.imagebuilder.inputs.ImageImageScanningConfigurationArgs;
import com.pulumi.policypacks.aws.imagebuilder.inputs.ImageImageTestsConfigurationArgs;
import com.pulumi.policypacks.aws.imagebuilder.inputs.ImageWorkflowArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:imagebuilder/image:Image")
public final class ImageArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Amazon Resource Name (ARN) of the container recipe.
     * 
     */
    private UndeferrableValue<String> containerRecipeArn;

    public String containerRecipeArn() {
        if (containerRecipeArn == null) return null;
        return containerRecipeArn.getValue("ImageArgs.containerRecipeArn");
    }

    /**
     * Amazon Resource Name (ARN) of the Image Builder Distribution Configuration.
     * 
     */
    private UndeferrableValue<String> distributionConfigurationArn;

    public String distributionConfigurationArn() {
        if (distributionConfigurationArn == null) return null;
        return distributionConfigurationArn.getValue("ImageArgs.distributionConfigurationArn");
    }

    /**
     * Whether additional information about the image being created is collected. Defaults to `true`.
     * 
     */
    private UndeferrableValue<Boolean> enhancedImageMetadataEnabled;

    public Boolean enhancedImageMetadataEnabled() {
        if (enhancedImageMetadataEnabled == null) return null;
        return enhancedImageMetadataEnabled.getValue("ImageArgs.enhancedImageMetadataEnabled");
    }

    /**
     * Amazon Resource Name (ARN) of the service-linked role to be used by Image Builder to [execute workflows](https://docs.aws.amazon.com/imagebuilder/latest/userguide/manage-image-workflows.html).
     * 
     */
    private UndeferrableValue<String> executionRole;

    public String executionRole() {
        if (executionRole == null) return null;
        return executionRole.getValue("ImageArgs.executionRole");
    }

    /**
     * Amazon Resource Name (ARN) of the image recipe.
     * 
     */
    private UndeferrableValue<String> imageRecipeArn;

    public String imageRecipeArn() {
        if (imageRecipeArn == null) return null;
        return imageRecipeArn.getValue("ImageArgs.imageRecipeArn");
    }

    /**
     * Configuration block with image scanning configuration. Detailed below.
     * 
     */
    private UndeferrableValue<ImageImageScanningConfigurationArgs> imageScanningConfiguration;

    public ImageImageScanningConfigurationArgs imageScanningConfiguration() {
        if (imageScanningConfiguration == null) return null;
        return imageScanningConfiguration.getValue("ImageArgs.imageScanningConfiguration");
    }

    /**
     * Configuration block with image tests configuration. Detailed below.
     * 
     */
    private UndeferrableValue<ImageImageTestsConfigurationArgs> imageTestsConfiguration;

    public ImageImageTestsConfigurationArgs imageTestsConfiguration() {
        if (imageTestsConfiguration == null) return null;
        return imageTestsConfiguration.getValue("ImageArgs.imageTestsConfiguration");
    }

    /**
     * Amazon Resource Name (ARN) of the Image Builder Infrastructure Configuration.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> infrastructureConfigurationArn;

    public String infrastructureConfigurationArn() {
        if (infrastructureConfigurationArn == null) return null;
        return infrastructureConfigurationArn.getValue("ImageArgs.infrastructureConfigurationArn");
    }

    /**
     * Key-value map of resource tags for the Image Builder Image. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("ImageArgs.tags");
    }

    /**
     * Configuration block with the workflow configuration. Detailed below.
     * 
     */
    private UndeferrableValue<List<ImageWorkflowArgs>> workflows;

    public List<ImageWorkflowArgs> workflows() {
        if (workflows == null) return null;
        return workflows.getValue("ImageArgs.workflows");
    }

}
