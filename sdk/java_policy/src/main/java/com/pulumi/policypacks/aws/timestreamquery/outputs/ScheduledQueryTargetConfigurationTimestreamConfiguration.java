// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.timestreamquery.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.timestreamquery.outputs.ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMapping;
import com.pulumi.policypacks.aws.timestreamquery.outputs.ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMapping;
import com.pulumi.policypacks.aws.timestreamquery.outputs.ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappings;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class ScheduledQueryTargetConfigurationTimestreamConfiguration {

    /**
     * Name of Timestream database to which the query result will be written.
     * 
     */
    @PolicyResourceProperty(name="databaseName", flag="unknown_databaseName")
    private String value_databaseName;
    private boolean unknown_databaseName;
    public String databaseName() {
        if (!unknown_databaseName) return value_databaseName;
        throw new UndeferrableValueException("Value 'ScheduledQueryTargetConfigurationTimestreamConfiguration.databaseName' is not present");
    }

    /**
     * Configuration block for mapping of column(s) from the query result to the dimension in the destination table. See below.
     * 
     */
    @PolicyResourceProperty(name="dimensionMappings", flag="unknown_dimensionMappings")
    private @Nullable List<ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMapping> value_dimensionMappings;
    private boolean unknown_dimensionMappings;
    public @Nullable List<ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMapping> dimensionMappings() {
        if (!unknown_dimensionMappings) return value_dimensionMappings;
        throw new UndeferrableValueException("Value 'ScheduledQueryTargetConfigurationTimestreamConfiguration.dimensionMappings' is not present");
    }

    /**
     * Name of the measure column.
     * 
     */
    @PolicyResourceProperty(name="measureNameColumn", flag="unknown_measureNameColumn")
    private @Nullable String value_measureNameColumn;
    private boolean unknown_measureNameColumn;
    public @Nullable String measureNameColumn() {
        if (!unknown_measureNameColumn) return value_measureNameColumn;
        throw new UndeferrableValueException("Value 'ScheduledQueryTargetConfigurationTimestreamConfiguration.measureNameColumn' is not present");
    }

    /**
     * Configuration block for how to map measures to multi-measure records. See below.
     * 
     */
    @PolicyResourceProperty(name="mixedMeasureMappings", flag="unknown_mixedMeasureMappings")
    private @Nullable List<ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMapping> value_mixedMeasureMappings;
    private boolean unknown_mixedMeasureMappings;
    public @Nullable List<ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMapping> mixedMeasureMappings() {
        if (!unknown_mixedMeasureMappings) return value_mixedMeasureMappings;
        throw new UndeferrableValueException("Value 'ScheduledQueryTargetConfigurationTimestreamConfiguration.mixedMeasureMappings' is not present");
    }

    /**
     * Configuration block for multi-measure mappings. Only one of `mixed_measure_mappings` or `multi_measure_mappings` can be provided. `multi_measure_mappings` can be used to ingest data as multi measures in the derived table. See below.
     * 
     */
    @PolicyResourceProperty(name="multiMeasureMappings", flag="unknown_multiMeasureMappings")
    private @Nullable ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappings value_multiMeasureMappings;
    private boolean unknown_multiMeasureMappings;
    public @Nullable ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappings multiMeasureMappings() {
        if (!unknown_multiMeasureMappings) return value_multiMeasureMappings;
        throw new UndeferrableValueException("Value 'ScheduledQueryTargetConfigurationTimestreamConfiguration.multiMeasureMappings' is not present");
    }

    /**
     * Name of Timestream table that the query result will be written to. The table should be within the same database that is provided in Timestream configuration.
     * 
     */
    @PolicyResourceProperty(name="tableName", flag="unknown_tableName")
    private String value_tableName;
    private boolean unknown_tableName;
    public String tableName() {
        if (!unknown_tableName) return value_tableName;
        throw new UndeferrableValueException("Value 'ScheduledQueryTargetConfigurationTimestreamConfiguration.tableName' is not present");
    }

    /**
     * Column from query result that should be used as the time column in destination table. Column type for this should be TIMESTAMP.
     * 
     */
    @PolicyResourceProperty(name="timeColumn", flag="unknown_timeColumn")
    private String value_timeColumn;
    private boolean unknown_timeColumn;
    public String timeColumn() {
        if (!unknown_timeColumn) return value_timeColumn;
        throw new UndeferrableValueException("Value 'ScheduledQueryTargetConfigurationTimestreamConfiguration.timeColumn' is not present");
    }

}
