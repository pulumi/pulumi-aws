// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.evidently;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:evidently/segment:Segment")
public final class Segment extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The ARN of the segment.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'Segment.arn' is not present");
    }

    /**
     * The date and time that the segment is created.
     * 
     */
    @PolicyResourceProperty(name="createdTime", flag="unknown_createdTime")
    private String value_createdTime;
    private boolean unknown_createdTime;
    public String createdTime() {
        if (!unknown_createdTime) return value_createdTime;
        throw new UndeferrableValueException("Value 'Segment.createdTime' is not present");
    }

    /**
     * Specifies the description of the segment.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private @Nullable String value_description;
    private boolean unknown_description;
    public @Nullable String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'Segment.description' is not present");
    }

    /**
     * The number of experiments that this segment is used in. This count includes all current experiments, not just those that are currently running.
     * 
     */
    @PolicyResourceProperty(name="experimentCount", flag="unknown_experimentCount")
    private Integer value_experimentCount;
    private boolean unknown_experimentCount;
    public Integer experimentCount() {
        if (!unknown_experimentCount) return value_experimentCount;
        throw new UndeferrableValueException("Value 'Segment.experimentCount' is not present");
    }

    /**
     * The date and time that this segment was most recently updated.
     * 
     */
    @PolicyResourceProperty(name="lastUpdatedTime", flag="unknown_lastUpdatedTime")
    private String value_lastUpdatedTime;
    private boolean unknown_lastUpdatedTime;
    public String lastUpdatedTime() {
        if (!unknown_lastUpdatedTime) return value_lastUpdatedTime;
        throw new UndeferrableValueException("Value 'Segment.lastUpdatedTime' is not present");
    }

    /**
     * The number of launches that this segment is used in. This count includes all current launches, not just those that are currently running.
     * 
     */
    @PolicyResourceProperty(name="launchCount", flag="unknown_launchCount")
    private Integer value_launchCount;
    private boolean unknown_launchCount;
    public Integer launchCount() {
        if (!unknown_launchCount) return value_launchCount;
        throw new UndeferrableValueException("Value 'Segment.launchCount' is not present");
    }

    /**
     * A name for the segment.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'Segment.name' is not present");
    }

    /**
     * The pattern to use for the segment. For more information about pattern syntax, see [Segment rule pattern syntax](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Evidently-segments.html#CloudWatch-Evidently-segments-syntax.html).
     * 
     */
    @PolicyResourceProperty(name="pattern", flag="unknown_pattern")
    private String value_pattern;
    private boolean unknown_pattern;
    public String pattern() {
        if (!unknown_pattern) return value_pattern;
        throw new UndeferrableValueException("Value 'Segment.pattern' is not present");
    }

    /**
     * Tags to apply to the segment. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'Segment.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'Segment.tagsAll' is not present");
    }

}
