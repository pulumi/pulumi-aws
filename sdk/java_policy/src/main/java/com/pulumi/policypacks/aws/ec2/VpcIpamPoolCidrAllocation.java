// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ec2/vpcIpamPoolCidrAllocation:VpcIpamPoolCidrAllocation")
public final class VpcIpamPoolCidrAllocation extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The CIDR you want to assign to the pool.
     * 
     */
    @PolicyResourceProperty(name="cidr", flag="unknown_cidr")
    private String value_cidr;
    private boolean unknown_cidr;
    public String cidr() {
        if (!unknown_cidr) return value_cidr;
        throw new UndeferrableValueException("Value 'VpcIpamPoolCidrAllocation.cidr' is not present");
    }

    /**
     * The description for the allocation.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private @Nullable String value_description;
    private boolean unknown_description;
    public @Nullable String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'VpcIpamPoolCidrAllocation.description' is not present");
    }

    /**
     * Exclude a particular CIDR range from being returned by the pool.
     * 
     */
    @PolicyResourceProperty(name="disallowedCidrs", flag="unknown_disallowedCidrs")
    private @Nullable List<String> value_disallowedCidrs;
    private boolean unknown_disallowedCidrs;
    public @Nullable List<String> disallowedCidrs() {
        if (!unknown_disallowedCidrs) return value_disallowedCidrs;
        throw new UndeferrableValueException("Value 'VpcIpamPoolCidrAllocation.disallowedCidrs' is not present");
    }

    @PolicyResourceProperty(name="ipamPoolAllocationId", flag="unknown_ipamPoolAllocationId")
    private String value_ipamPoolAllocationId;
    private boolean unknown_ipamPoolAllocationId;
    public String ipamPoolAllocationId() {
        if (!unknown_ipamPoolAllocationId) return value_ipamPoolAllocationId;
        throw new UndeferrableValueException("Value 'VpcIpamPoolCidrAllocation.ipamPoolAllocationId' is not present");
    }

    /**
     * The ID of the pool to which you want to assign a CIDR.
     * 
     */
    @PolicyResourceProperty(name="ipamPoolId", flag="unknown_ipamPoolId")
    private String value_ipamPoolId;
    private boolean unknown_ipamPoolId;
    public String ipamPoolId() {
        if (!unknown_ipamPoolId) return value_ipamPoolId;
        throw new UndeferrableValueException("Value 'VpcIpamPoolCidrAllocation.ipamPoolId' is not present");
    }

    /**
     * The netmask length of the CIDR you would like to allocate to the IPAM pool. Valid Values: `0-128`.
     * 
     */
    @PolicyResourceProperty(name="netmaskLength", flag="unknown_netmaskLength")
    private Integer value_netmaskLength;
    private boolean unknown_netmaskLength;
    public Integer netmaskLength() {
        if (!unknown_netmaskLength) return value_netmaskLength;
        throw new UndeferrableValueException("Value 'VpcIpamPoolCidrAllocation.netmaskLength' is not present");
    }

    /**
     * The ID of the resource.
     * 
     */
    @PolicyResourceProperty(name="resourceId", flag="unknown_resourceId")
    private String value_resourceId;
    private boolean unknown_resourceId;
    public String resourceId() {
        if (!unknown_resourceId) return value_resourceId;
        throw new UndeferrableValueException("Value 'VpcIpamPoolCidrAllocation.resourceId' is not present");
    }

    /**
     * The owner of the resource.
     * 
     */
    @PolicyResourceProperty(name="resourceOwner", flag="unknown_resourceOwner")
    private String value_resourceOwner;
    private boolean unknown_resourceOwner;
    public String resourceOwner() {
        if (!unknown_resourceOwner) return value_resourceOwner;
        throw new UndeferrableValueException("Value 'VpcIpamPoolCidrAllocation.resourceOwner' is not present");
    }

    /**
     * The type of the resource.
     * 
     */
    @PolicyResourceProperty(name="resourceType", flag="unknown_resourceType")
    private String value_resourceType;
    private boolean unknown_resourceType;
    public String resourceType() {
        if (!unknown_resourceType) return value_resourceType;
        throw new UndeferrableValueException("Value 'VpcIpamPoolCidrAllocation.resourceType' is not present");
    }

}
