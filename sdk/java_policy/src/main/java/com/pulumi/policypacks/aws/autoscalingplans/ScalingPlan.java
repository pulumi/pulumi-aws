// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.autoscalingplans;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.autoscalingplans.outputs.ScalingPlanApplicationSource;
import com.pulumi.policypacks.aws.autoscalingplans.outputs.ScalingPlanScalingInstruction;
import java.lang.Integer;
import java.lang.String;
import java.util.List;


@PolicyResourceType(type="aws:autoscalingplans/scalingPlan:ScalingPlan")
public final class ScalingPlan extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * CloudFormation stack or set of tags. You can create one scaling plan per application source.
     * 
     */
    private UndeferrableValue<ScalingPlanApplicationSource> applicationSource;

    public ScalingPlanApplicationSource applicationSource() {
        if (applicationSource == null) return null;
        return applicationSource.getValue("ScalingPlan.applicationSource");
    }

    /**
     * Name of the scaling plan. Names cannot contain vertical bars, colons, or forward slashes.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("ScalingPlan.name");
    }

    /**
     * Scaling instructions. More details can be found in the [AWS Auto Scaling API Reference](https://docs.aws.amazon.com/autoscaling/plans/APIReference/API_ScalingInstruction.html).
     * 
     */
    private UndeferrableValue<List<ScalingPlanScalingInstruction>> scalingInstructions;

    public List<ScalingPlanScalingInstruction> scalingInstructions() {
        if (scalingInstructions == null) return null;
        return scalingInstructions.getValue("ScalingPlan.scalingInstructions");
    }

    /**
     * The version number of the scaling plan. This value is always 1.
     * 
     */
    private UndeferrableValue<Integer> scalingPlanVersion;

    public Integer scalingPlanVersion() {
        if (scalingPlanVersion == null) return null;
        return scalingPlanVersion.getValue("ScalingPlan.scalingPlanVersion");
    }

}
