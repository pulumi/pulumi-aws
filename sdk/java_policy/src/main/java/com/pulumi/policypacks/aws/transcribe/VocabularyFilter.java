// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.transcribe;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:transcribe/vocabularyFilter:VocabularyFilter")
public final class VocabularyFilter extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * ARN of the VocabularyFilter.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'VocabularyFilter.arn' is not present");
    }

    /**
     * Generated download URI.
     * 
     */
    @PolicyResourceProperty(name="downloadUri", flag="unknown_downloadUri")
    private String value_downloadUri;
    private boolean unknown_downloadUri;
    public String downloadUri() {
        if (!unknown_downloadUri) return value_downloadUri;
        throw new UndeferrableValueException("Value 'VocabularyFilter.downloadUri' is not present");
    }

    /**
     * The language code you selected for your vocabulary filter. Refer to the [supported languages](https://docs.aws.amazon.com/transcribe/latest/dg/supported-languages.html) page for accepted codes.
     * 
     */
    @PolicyResourceProperty(name="languageCode", flag="unknown_languageCode")
    private String value_languageCode;
    private boolean unknown_languageCode;
    public String languageCode() {
        if (!unknown_languageCode) return value_languageCode;
        throw new UndeferrableValueException("Value 'VocabularyFilter.languageCode' is not present");
    }

    /**
     * A map of tags to assign to the VocabularyFilter. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'VocabularyFilter.tags' is not present");
    }

    /**
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'VocabularyFilter.tagsAll' is not present");
    }

    /**
     * The Amazon S3 location (URI) of the text file that contains your custom VocabularyFilter. Conflicts with `words` argument.
     * 
     */
    @PolicyResourceProperty(name="vocabularyFilterFileUri", flag="unknown_vocabularyFilterFileUri")
    private @Nullable String value_vocabularyFilterFileUri;
    private boolean unknown_vocabularyFilterFileUri;
    public @Nullable String vocabularyFilterFileUri() {
        if (!unknown_vocabularyFilterFileUri) return value_vocabularyFilterFileUri;
        throw new UndeferrableValueException("Value 'VocabularyFilter.vocabularyFilterFileUri' is not present");
    }

    /**
     * The name of the VocabularyFilter.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="vocabularyFilterName", flag="unknown_vocabularyFilterName")
    private String value_vocabularyFilterName;
    private boolean unknown_vocabularyFilterName;
    public String vocabularyFilterName() {
        if (!unknown_vocabularyFilterName) return value_vocabularyFilterName;
        throw new UndeferrableValueException("Value 'VocabularyFilter.vocabularyFilterName' is not present");
    }

    /**
     * A list of terms to include in the vocabulary. Conflicts with `vocabulary_filter_file_uri` argument.
     * 
     */
    @PolicyResourceProperty(name="words", flag="unknown_words")
    private @Nullable List<String> value_words;
    private boolean unknown_words;
    public @Nullable List<String> words() {
        if (!unknown_words) return value_words;
        throw new UndeferrableValueException("Value 'VocabularyFilter.words' is not present");
    }

}
