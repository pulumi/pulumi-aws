// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.codepipeline.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.codepipeline.outputs.PipelineArtifactStoreEncryptionKey;
import java.lang.String;
import javax.annotation.Nullable;


public final class PipelineArtifactStore {

    /**
     * The encryption key block AWS CodePipeline uses to encrypt the data in the artifact store, such as an AWS Key Management Service (AWS KMS) key. If you don&#39;t specify a key, AWS CodePipeline uses the default key for Amazon Simple Storage Service (Amazon S3). An `encryption_key` block is documented below.
     * 
     */
    private @Nullable UndeferrableValue<PipelineArtifactStoreEncryptionKey> encryptionKey;

    public @Nullable PipelineArtifactStoreEncryptionKey encryptionKey() {
        if (encryptionKey == null) return null;
        return encryptionKey.getValue("PipelineArtifactStore.encryptionKey");
    }

    /**
     * The location where AWS CodePipeline stores artifacts for a pipeline; currently only `S3` is supported.
     * 
     */
    private UndeferrableValue<String> location;

    public String location() {
        if (location == null) return null;
        return location.getValue("PipelineArtifactStore.location");
    }

    /**
     * The region where the artifact store is located. Required for a cross-region CodePipeline, do not provide for a single-region CodePipeline.
     * 
     */
    private @Nullable UndeferrableValue<String> region;

    public @Nullable String region() {
        if (region == null) return null;
        return region.getValue("PipelineArtifactStore.region");
    }

    /**
     * The type of the artifact store, such as Amazon S3
     * 
     */
    private UndeferrableValue<String> type;

    public String type() {
        if (type == null) return null;
        return type.getValue("PipelineArtifactStore.type");
    }

}
