// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.s3control.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.s3control.outputs.StorageLensConfigurationStorageLensConfigurationAccountLevel;
import com.pulumi.policypacks.aws.s3control.outputs.StorageLensConfigurationStorageLensConfigurationAwsOrg;
import com.pulumi.policypacks.aws.s3control.outputs.StorageLensConfigurationStorageLensConfigurationDataExport;
import com.pulumi.policypacks.aws.s3control.outputs.StorageLensConfigurationStorageLensConfigurationExclude;
import com.pulumi.policypacks.aws.s3control.outputs.StorageLensConfigurationStorageLensConfigurationInclude;
import java.lang.Boolean;
import javax.annotation.Nullable;


public final class StorageLensConfigurationStorageLensConfiguration {

    /**
     * The account-level configurations of the S3 Storage Lens configuration. See Account Level below for more details.
     * 
     */
    @PolicyResourceProperty(name="accountLevel", flag="unknown_accountLevel")
    private StorageLensConfigurationStorageLensConfigurationAccountLevel value_accountLevel;
    private boolean unknown_accountLevel;
    public StorageLensConfigurationStorageLensConfigurationAccountLevel accountLevel() {
        if (!unknown_accountLevel) return value_accountLevel;
        throw new UndeferrableValueException("Value 'StorageLensConfigurationStorageLensConfiguration.accountLevel' is not present");
    }

    /**
     * The Amazon Web Services organization for the S3 Storage Lens configuration. See AWS Org below for more details.
     * 
     */
    @PolicyResourceProperty(name="awsOrg", flag="unknown_awsOrg")
    private @Nullable StorageLensConfigurationStorageLensConfigurationAwsOrg value_awsOrg;
    private boolean unknown_awsOrg;
    public @Nullable StorageLensConfigurationStorageLensConfigurationAwsOrg awsOrg() {
        if (!unknown_awsOrg) return value_awsOrg;
        throw new UndeferrableValueException("Value 'StorageLensConfigurationStorageLensConfiguration.awsOrg' is not present");
    }

    /**
     * Properties of S3 Storage Lens metrics export including the destination, schema and format. See Data Export below for more details.
     * 
     */
    @PolicyResourceProperty(name="dataExport", flag="unknown_dataExport")
    private @Nullable StorageLensConfigurationStorageLensConfigurationDataExport value_dataExport;
    private boolean unknown_dataExport;
    public @Nullable StorageLensConfigurationStorageLensConfigurationDataExport dataExport() {
        if (!unknown_dataExport) return value_dataExport;
        throw new UndeferrableValueException("Value 'StorageLensConfigurationStorageLensConfiguration.dataExport' is not present");
    }

    /**
     * Whether the S3 Storage Lens configuration is enabled.
     * 
     */
    @PolicyResourceProperty(name="enabled", flag="unknown_enabled")
    private Boolean value_enabled;
    private boolean unknown_enabled;
    public Boolean enabled() {
        if (!unknown_enabled) return value_enabled;
        throw new UndeferrableValueException("Value 'StorageLensConfigurationStorageLensConfiguration.enabled' is not present");
    }

    /**
     * What is excluded in this configuration. Conflicts with `include`. See Exclude below for more details.
     * 
     */
    @PolicyResourceProperty(name="exclude", flag="unknown_exclude")
    private @Nullable StorageLensConfigurationStorageLensConfigurationExclude value_exclude;
    private boolean unknown_exclude;
    public @Nullable StorageLensConfigurationStorageLensConfigurationExclude exclude() {
        if (!unknown_exclude) return value_exclude;
        throw new UndeferrableValueException("Value 'StorageLensConfigurationStorageLensConfiguration.exclude' is not present");
    }

    /**
     * What is included in this configuration. Conflicts with `exclude`. See Include below for more details.
     * 
     */
    @PolicyResourceProperty(name="include", flag="unknown_include")
    private @Nullable StorageLensConfigurationStorageLensConfigurationInclude value_include;
    private boolean unknown_include;
    public @Nullable StorageLensConfigurationStorageLensConfigurationInclude include() {
        if (!unknown_include) return value_include;
        throw new UndeferrableValueException("Value 'StorageLensConfigurationStorageLensConfiguration.include' is not present");
    }

}
