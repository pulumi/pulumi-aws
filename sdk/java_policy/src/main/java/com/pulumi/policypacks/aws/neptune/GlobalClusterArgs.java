// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.neptune;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:neptune/globalCluster:GlobalCluster")
public final class GlobalClusterArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * If the Global Cluster should have deletion protection enabled. The database can&#39;t be deleted when this value is set to `true`. The default is `false`.
     * 
     */
    private UndeferrableValue<Boolean> deletionProtection;

    public Boolean deletionProtection() {
        if (deletionProtection == null) return null;
        return deletionProtection.getValue("GlobalClusterArgs.deletionProtection");
    }

    /**
     * Name of the database engine to be used for this DB cluster. The provider will only perform drift detection if a configuration value is provided. Current Valid values: `neptune`. Conflicts with `source_db_cluster_identifier`.
     * 
     */
    private UndeferrableValue<String> engine;

    public String engine() {
        if (engine == null) return null;
        return engine.getValue("GlobalClusterArgs.engine");
    }

    /**
     * Engine version of the global database. Upgrading the engine version will result in all cluster members being immediately updated and will.
     * * **NOTE:** Upgrading major versions is not supported.
     * 
     */
    private UndeferrableValue<String> engineVersion;

    public String engineVersion() {
        if (engineVersion == null) return null;
        return engineVersion.getValue("GlobalClusterArgs.engineVersion");
    }

    /**
     * The global cluster identifier.
     * 
     */
    private UndeferrableValue<String> globalClusterIdentifier;

    public String globalClusterIdentifier() {
        if (globalClusterIdentifier == null) return null;
        return globalClusterIdentifier.getValue("GlobalClusterArgs.globalClusterIdentifier");
    }

    /**
     * Amazon Resource Name (ARN) to use as the primary DB Cluster of the Global Cluster on creation. The provider cannot perform drift detection of this value.
     * 
     */
    private UndeferrableValue<String> sourceDbClusterIdentifier;

    public String sourceDbClusterIdentifier() {
        if (sourceDbClusterIdentifier == null) return null;
        return sourceDbClusterIdentifier.getValue("GlobalClusterArgs.sourceDbClusterIdentifier");
    }

    /**
     * Specifies whether the DB cluster is encrypted. The default is `false` unless `source_db_cluster_identifier` is specified and encrypted. The provider will only perform drift detection if a configuration value is provided.
     * 
     */
    private UndeferrableValue<Boolean> storageEncrypted;

    public Boolean storageEncrypted() {
        if (storageEncrypted == null) return null;
        return storageEncrypted.getValue("GlobalClusterArgs.storageEncrypted");
    }

}
