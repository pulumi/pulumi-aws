// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.codebuild;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.codebuild.inputs.WebhookFilterGroupArgs;
import com.pulumi.policypacks.aws.codebuild.inputs.WebhookScopeConfigurationArgs;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:codebuild/webhook:Webhook")
public final class WebhookArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * A regular expression used to determine which branches get built. Default is all branches are built. We recommend using `filter_group` over `branch_filter`.
     * 
     */
    private UndeferrableValue<String> branchFilter;

    public String branchFilter() {
        if (branchFilter == null) return null;
        return branchFilter.getValue("WebhookArgs.branchFilter");
    }

    /**
     * The type of build this webhook will trigger. Valid values for this parameter are: `BUILD`, `BUILD_BATCH`.
     * 
     */
    private UndeferrableValue<String> buildType;

    public String buildType() {
        if (buildType == null) return null;
        return buildType.getValue("WebhookArgs.buildType");
    }

    /**
     * Information about the webhook&#39;s trigger. Filter group blocks are documented below.
     * 
     */
    private UndeferrableValue<List<WebhookFilterGroupArgs>> filterGroups;

    public List<WebhookFilterGroupArgs> filterGroups() {
        if (filterGroups == null) return null;
        return filterGroups.getValue("WebhookArgs.filterGroups");
    }

    /**
     * The name of the build project.
     * 
     */
    private UndeferrableValue<String> projectName;

    public String projectName() {
        if (projectName == null) return null;
        return projectName.getValue("WebhookArgs.projectName");
    }

    /**
     * Scope configuration for global or organization webhooks. Scope configuration blocks are documented below.
     * 
     */
    private UndeferrableValue<WebhookScopeConfigurationArgs> scopeConfiguration;

    public WebhookScopeConfigurationArgs scopeConfiguration() {
        if (scopeConfiguration == null) return null;
        return scopeConfiguration.getValue("WebhookArgs.scopeConfiguration");
    }

}
