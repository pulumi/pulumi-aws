// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.chimesdkmediapipelines;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.chimesdkmediapipelines.outputs.MediaInsightsPipelineConfigurationElement;
import com.pulumi.policypacks.aws.chimesdkmediapipelines.outputs.MediaInsightsPipelineConfigurationRealTimeAlertConfiguration;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:chimesdkmediapipelines/mediaInsightsPipelineConfiguration:MediaInsightsPipelineConfiguration")
public final class MediaInsightsPipelineConfiguration extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * ARN of the Media Insights Pipeline Configuration.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'MediaInsightsPipelineConfiguration.arn' is not present");
    }

    /**
     * Collection of processors and sinks to transform media and deliver data.
     * 
     */
    @PolicyResourceProperty(name="elements", flag="unknown_elements")
    private List<MediaInsightsPipelineConfigurationElement> value_elements;
    private boolean unknown_elements;
    public List<MediaInsightsPipelineConfigurationElement> elements() {
        if (!unknown_elements) return value_elements;
        throw new UndeferrableValueException("Value 'MediaInsightsPipelineConfiguration.elements' is not present");
    }

    /**
     * Configuration name.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'MediaInsightsPipelineConfiguration.name' is not present");
    }

    /**
     * Configuration for real-time alert rules to send EventBridge notifications when certain conditions are met.
     * 
     */
    @PolicyResourceProperty(name="realTimeAlertConfiguration", flag="unknown_realTimeAlertConfiguration")
    private @Nullable MediaInsightsPipelineConfigurationRealTimeAlertConfiguration value_realTimeAlertConfiguration;
    private boolean unknown_realTimeAlertConfiguration;
    public @Nullable MediaInsightsPipelineConfigurationRealTimeAlertConfiguration realTimeAlertConfiguration() {
        if (!unknown_realTimeAlertConfiguration) return value_realTimeAlertConfiguration;
        throw new UndeferrableValueException("Value 'MediaInsightsPipelineConfiguration.realTimeAlertConfiguration' is not present");
    }

    /**
     * ARN of IAM Role used by service to invoke processors and sinks specified by configuration elements.
     * 
     */
    @PolicyResourceProperty(name="resourceAccessRoleArn", flag="unknown_resourceAccessRoleArn")
    private String value_resourceAccessRoleArn;
    private boolean unknown_resourceAccessRoleArn;
    public String resourceAccessRoleArn() {
        if (!unknown_resourceAccessRoleArn) return value_resourceAccessRoleArn;
        throw new UndeferrableValueException("Value 'MediaInsightsPipelineConfiguration.resourceAccessRoleArn' is not present");
    }

    /**
     * Key-value map of tags for the resource.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'MediaInsightsPipelineConfiguration.tags' is not present");
    }

    /**
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'MediaInsightsPipelineConfiguration.tagsAll' is not present");
    }

}
