// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.chimesdkmediapipelines;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.chimesdkmediapipelines.outputs.MediaInsightsPipelineConfigurationElement;
import com.pulumi.policypacks.aws.chimesdkmediapipelines.outputs.MediaInsightsPipelineConfigurationRealTimeAlertConfiguration;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:chimesdkmediapipelines/mediaInsightsPipelineConfiguration:MediaInsightsPipelineConfiguration")
public final class MediaInsightsPipelineConfiguration extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * ARN of the Media Insights Pipeline Configuration.
     * 
     */
    private UndeferrableValue<String> arn;

    public String arn() {
        if (arn == null) return null;
        return arn.getValue("MediaInsightsPipelineConfiguration.arn");
    }

    /**
     * Collection of processors and sinks to transform media and deliver data.
     * 
     */
    private UndeferrableValue<List<MediaInsightsPipelineConfigurationElement>> elements;

    public List<MediaInsightsPipelineConfigurationElement> elements() {
        if (elements == null) return null;
        return elements.getValue("MediaInsightsPipelineConfiguration.elements");
    }

    /**
     * Configuration name.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("MediaInsightsPipelineConfiguration.name");
    }

    /**
     * Configuration for real-time alert rules to send EventBridge notifications when certain conditions are met.
     * 
     */
    private @Nullable UndeferrableValue<MediaInsightsPipelineConfigurationRealTimeAlertConfiguration> realTimeAlertConfiguration;

    public @Nullable MediaInsightsPipelineConfigurationRealTimeAlertConfiguration realTimeAlertConfiguration() {
        if (realTimeAlertConfiguration == null) return null;
        return realTimeAlertConfiguration.getValue("MediaInsightsPipelineConfiguration.realTimeAlertConfiguration");
    }

    /**
     * ARN of IAM Role used by service to invoke processors and sinks specified by configuration elements.
     * 
     */
    private UndeferrableValue<String> resourceAccessRoleArn;

    public String resourceAccessRoleArn() {
        if (resourceAccessRoleArn == null) return null;
        return resourceAccessRoleArn.getValue("MediaInsightsPipelineConfiguration.resourceAccessRoleArn");
    }

    /**
     * Key-value map of tags for the resource.
     * 
     */
    private @Nullable UndeferrableValue<Map<String,String>> tags;

    public @Nullable Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("MediaInsightsPipelineConfiguration.tags");
    }

    /**
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    private UndeferrableValue<Map<String,String>> tagsAll;

    public Map<String,String> tagsAll() {
        if (tagsAll == null) return null;
        return tagsAll.getValue("MediaInsightsPipelineConfiguration.tagsAll");
    }

}
