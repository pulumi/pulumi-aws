// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.ec2.outputs.FleetLaunchTemplateConfigOverrideInstanceRequirements;
import java.lang.Double;
import java.lang.String;
import javax.annotation.Nullable;


public final class FleetLaunchTemplateConfigOverride {

    /**
     * Availability Zone in which to launch the instances.
     * 
     */
    private @Nullable UndeferrableValue<String> availabilityZone;

    public @Nullable String availabilityZone() {
        if (availabilityZone == null) return null;
        return availabilityZone.getValue("FleetLaunchTemplateConfigOverride.availabilityZone");
    }

    /**
     * Override the instance type in the Launch Template with instance types that satisfy the requirements.
     * 
     */
    private @Nullable UndeferrableValue<FleetLaunchTemplateConfigOverrideInstanceRequirements> instanceRequirements;

    public @Nullable FleetLaunchTemplateConfigOverrideInstanceRequirements instanceRequirements() {
        if (instanceRequirements == null) return null;
        return instanceRequirements.getValue("FleetLaunchTemplateConfigOverride.instanceRequirements");
    }

    /**
     * Instance type.
     * 
     */
    private @Nullable UndeferrableValue<String> instanceType;

    public @Nullable String instanceType() {
        if (instanceType == null) return null;
        return instanceType.getValue("FleetLaunchTemplateConfigOverride.instanceType");
    }

    /**
     * Maximum price per unit hour that you are willing to pay for a Spot Instance.
     * 
     */
    private @Nullable UndeferrableValue<String> maxPrice;

    public @Nullable String maxPrice() {
        if (maxPrice == null) return null;
        return maxPrice.getValue("FleetLaunchTemplateConfigOverride.maxPrice");
    }

    /**
     * Priority for the launch template override. If `on_demand_options` `allocation_strategy` is set to `prioritized`, EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity. The highest priority is launched first. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority. Valid values are whole numbers starting at 0.
     * 
     */
    private @Nullable UndeferrableValue<Double> priority;

    public @Nullable Double priority() {
        if (priority == null) return null;
        return priority.getValue("FleetLaunchTemplateConfigOverride.priority");
    }

    /**
     * ID of the subnet in which to launch the instances.
     * 
     */
    private @Nullable UndeferrableValue<String> subnetId;

    public @Nullable String subnetId() {
        if (subnetId == null) return null;
        return subnetId.getValue("FleetLaunchTemplateConfigOverride.subnetId");
    }

    /**
     * Number of units provided by the specified instance type.
     * 
     */
    private @Nullable UndeferrableValue<Double> weightedCapacity;

    public @Nullable Double weightedCapacity() {
        if (weightedCapacity == null) return null;
        return weightedCapacity.getValue("FleetLaunchTemplateConfigOverride.weightedCapacity");
    }

}
