// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.apprunner.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


public final class ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesArgs {

    /**
     * Command App Runner runs to build your application.
     * 
     */
    @PolicyResourceProperty(name="buildCommand", flag="unknown_buildCommand")
    private String value_buildCommand;
    private boolean unknown_buildCommand;
    public String buildCommand() {
        if (!unknown_buildCommand) return value_buildCommand;
        throw new UndeferrableValueException("Value 'ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesArgs.buildCommand' is not present");
    }

    /**
     * Port that your application listens to in the container. Defaults to `&#34;8080&#34;`.
     * 
     */
    @PolicyResourceProperty(name="port", flag="unknown_port")
    private String value_port;
    private boolean unknown_port;
    public String port() {
        if (!unknown_port) return value_port;
        throw new UndeferrableValueException("Value 'ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesArgs.port' is not present");
    }

    /**
     * Runtime environment type for building and running an App Runner service. Represents a programming language runtime. Valid values: `PYTHON_3`, `NODEJS_12`, `NODEJS_14`, `NODEJS_16`, `CORRETTO_8`, `CORRETTO_11`, `GO_1`, `DOTNET_6`, `PHP_81`, `RUBY_31`.
     * 
     */
    @PolicyResourceProperty(name="runtime", flag="unknown_runtime")
    private String value_runtime;
    private boolean unknown_runtime;
    public String runtime() {
        if (!unknown_runtime) return value_runtime;
        throw new UndeferrableValueException("Value 'ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesArgs.runtime' is not present");
    }

    /**
     * Secrets and parameters available to your service as environment variables. A map of key/value pairs, where the key is the desired name of the Secret in the environment (i.e. it does not have to match the name of the secret in Secrets Manager or SSM Parameter Store), and the value is the ARN of the secret from AWS Secrets Manager or the ARN of the parameter in AWS SSM Parameter Store.
     * 
     */
    @PolicyResourceProperty(name="runtimeEnvironmentSecrets", flag="unknown_runtimeEnvironmentSecrets")
    private Map<String,String> value_runtimeEnvironmentSecrets;
    private boolean unknown_runtimeEnvironmentSecrets;
    public Map<String,String> runtimeEnvironmentSecrets() {
        if (!unknown_runtimeEnvironmentSecrets) return value_runtimeEnvironmentSecrets;
        throw new UndeferrableValueException("Value 'ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesArgs.runtimeEnvironmentSecrets' is not present");
    }

    /**
     * Environment variables available to your running App Runner service. A map of key/value pairs. Keys with a prefix of `AWSAPPRUNNER` are reserved for system use and aren&#39;t valid.
     * 
     */
    @PolicyResourceProperty(name="runtimeEnvironmentVariables", flag="unknown_runtimeEnvironmentVariables")
    private Map<String,String> value_runtimeEnvironmentVariables;
    private boolean unknown_runtimeEnvironmentVariables;
    public Map<String,String> runtimeEnvironmentVariables() {
        if (!unknown_runtimeEnvironmentVariables) return value_runtimeEnvironmentVariables;
        throw new UndeferrableValueException("Value 'ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesArgs.runtimeEnvironmentVariables' is not present");
    }

    /**
     * Command App Runner runs to start your application.
     * 
     */
    @PolicyResourceProperty(name="startCommand", flag="unknown_startCommand")
    private String value_startCommand;
    private boolean unknown_startCommand;
    public String startCommand() {
        if (!unknown_startCommand) return value_startCommand;
        throw new UndeferrableValueException("Value 'ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesArgs.startCommand' is not present");
    }

}
