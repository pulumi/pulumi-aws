// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appautoscaling.inputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.appautoscaling.inputs.PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationArgs;
import com.pulumi.policypacks.aws.appautoscaling.inputs.PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationArgs;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import javax.annotation.Nullable;


public final class PolicyTargetTrackingScalingPolicyConfigurationArgs {

    /**
     * Custom CloudWatch metric. Documentation can be found  at: [AWS Customized Metric Specification](https://docs.aws.amazon.com/autoscaling/ec2/APIReference/API_CustomizedMetricSpecification.html). See supported fields below.
     * 
     */
    private UndeferrableValue<PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationArgs> customizedMetricSpecification;

    public PolicyTargetTrackingScalingPolicyConfigurationCustomizedMetricSpecificationArgs customizedMetricSpecification() {
        if (customizedMetricSpecification == null) return null;
        return customizedMetricSpecification.getValue("PolicyTargetTrackingScalingPolicyConfigurationArgs.customizedMetricSpecification");
    }

    /**
     * Whether scale in by the target tracking policy is disabled. If the value is true, scale in is disabled and the target tracking policy won&#39;t remove capacity from the scalable resource. Otherwise, scale in is enabled and the target tracking policy can remove capacity from the scalable resource. The default value is `false`.
     * 
     */
    private UndeferrableValue<Boolean> disableScaleIn;

    public Boolean disableScaleIn() {
        if (disableScaleIn == null) return null;
        return disableScaleIn.getValue("PolicyTargetTrackingScalingPolicyConfigurationArgs.disableScaleIn");
    }

    /**
     * Predefined metric. See supported fields below.
     * 
     */
    private UndeferrableValue<PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationArgs> predefinedMetricSpecification;

    public PolicyTargetTrackingScalingPolicyConfigurationPredefinedMetricSpecificationArgs predefinedMetricSpecification() {
        if (predefinedMetricSpecification == null) return null;
        return predefinedMetricSpecification.getValue("PolicyTargetTrackingScalingPolicyConfigurationArgs.predefinedMetricSpecification");
    }

    /**
     * Amount of time, in seconds, after a scale in activity completes before another scale in activity can start.
     * 
     */
    private UndeferrableValue<Integer> scaleInCooldown;

    public Integer scaleInCooldown() {
        if (scaleInCooldown == null) return null;
        return scaleInCooldown.getValue("PolicyTargetTrackingScalingPolicyConfigurationArgs.scaleInCooldown");
    }

    /**
     * Amount of time, in seconds, after a scale out activity completes before another scale out activity can start.
     * 
     */
    private UndeferrableValue<Integer> scaleOutCooldown;

    public Integer scaleOutCooldown() {
        if (scaleOutCooldown == null) return null;
        return scaleOutCooldown.getValue("PolicyTargetTrackingScalingPolicyConfigurationArgs.scaleOutCooldown");
    }

    /**
     * Target value for the metric.
     * 
     */
    private UndeferrableValue<Double> targetValue;

    public Double targetValue() {
        if (targetValue == null) return null;
        return targetValue.getValue("PolicyTargetTrackingScalingPolicyConfigurationArgs.targetValue");
    }

}
