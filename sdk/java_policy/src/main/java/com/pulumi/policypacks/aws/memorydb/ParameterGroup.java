// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.memorydb;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.memorydb.outputs.ParameterGroupParameter;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:memorydb/parameterGroup:ParameterGroup")
public final class ParameterGroup extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The ARN of the parameter group.
     * 
     */
    private UndeferrableValue<String> arn;

    public String arn() {
        if (arn == null) return null;
        return arn.getValue("ParameterGroup.arn");
    }

    /**
     * Description for the parameter group. Defaults to `&#34;Managed by Pulumi&#34;`.
     * 
     */
    private @Nullable UndeferrableValue<String> description;

    public @Nullable String description() {
        if (description == null) return null;
        return description.getValue("ParameterGroup.description");
    }

    /**
     * The engine version that the parameter group can be used with.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> family;

    public String family() {
        if (family == null) return null;
        return family.getValue("ParameterGroup.family");
    }

    /**
     * Name of the parameter group. If omitted, the provider will assign a random, unique name. Conflicts with `name_prefix`.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("ParameterGroup.name");
    }

    /**
     * Creates a unique name beginning with the specified prefix. Conflicts with `name`.
     * 
     */
    private UndeferrableValue<String> namePrefix;

    public String namePrefix() {
        if (namePrefix == null) return null;
        return namePrefix.getValue("ParameterGroup.namePrefix");
    }

    /**
     * Set of MemoryDB parameters to apply. Any parameters not specified will fall back to their family defaults. Detailed below.
     * 
     */
    private @Nullable UndeferrableValue<List<ParameterGroupParameter>> parameters;

    public @Nullable List<ParameterGroupParameter> parameters() {
        if (parameters == null) return null;
        return parameters.getValue("ParameterGroup.parameters");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private @Nullable UndeferrableValue<Map<String,String>> tags;

    public @Nullable Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("ParameterGroup.tags");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    private UndeferrableValue<Map<String,String>> tagsAll;

    public Map<String,String> tagsAll() {
        if (tagsAll == null) return null;
        return tagsAll.getValue("ParameterGroup.tagsAll");
    }

}
