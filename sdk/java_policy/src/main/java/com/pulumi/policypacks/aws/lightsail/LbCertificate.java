// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.lightsail;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.lightsail.outputs.LbCertificateDomainValidationRecord;
import java.lang.String;
import java.util.List;


@PolicyResourceType(type="aws:lightsail/lbCertificate:LbCertificate")
public final class LbCertificate extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The ARN of the lightsail certificate.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'LbCertificate.arn' is not present");
    }

    /**
     * The timestamp when the instance was created.
     * 
     */
    @PolicyResourceProperty(name="createdAt", flag="unknown_createdAt")
    private String value_createdAt;
    private boolean unknown_createdAt;
    public String createdAt() {
        if (!unknown_createdAt) return value_createdAt;
        throw new UndeferrableValueException("Value 'LbCertificate.createdAt' is not present");
    }

    /**
     * The domain name (e.g., example.com) for your SSL/TLS certificate.
     * 
     */
    @PolicyResourceProperty(name="domainName", flag="unknown_domainName")
    private String value_domainName;
    private boolean unknown_domainName;
    public String domainName() {
        if (!unknown_domainName) return value_domainName;
        throw new UndeferrableValueException("Value 'LbCertificate.domainName' is not present");
    }

    @PolicyResourceProperty(name="domainValidationRecords", flag="unknown_domainValidationRecords")
    private List<LbCertificateDomainValidationRecord> value_domainValidationRecords;
    private boolean unknown_domainValidationRecords;
    public List<LbCertificateDomainValidationRecord> domainValidationRecords() {
        if (!unknown_domainValidationRecords) return value_domainValidationRecords;
        throw new UndeferrableValueException("Value 'LbCertificate.domainValidationRecords' is not present");
    }

    /**
     * The load balancer name where you want to create the SSL/TLS certificate.
     * 
     */
    @PolicyResourceProperty(name="lbName", flag="unknown_lbName")
    private String value_lbName;
    private boolean unknown_lbName;
    public String lbName() {
        if (!unknown_lbName) return value_lbName;
        throw new UndeferrableValueException("Value 'LbCertificate.lbName' is not present");
    }

    /**
     * The SSL/TLS certificate name.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'LbCertificate.name' is not present");
    }

    /**
     * Set of domains that should be SANs in the issued certificate. `domain_name` attribute is automatically added as a Subject Alternative Name.
     * 
     */
    @PolicyResourceProperty(name="subjectAlternativeNames", flag="unknown_subjectAlternativeNames")
    private List<String> value_subjectAlternativeNames;
    private boolean unknown_subjectAlternativeNames;
    public List<String> subjectAlternativeNames() {
        if (!unknown_subjectAlternativeNames) return value_subjectAlternativeNames;
        throw new UndeferrableValueException("Value 'LbCertificate.subjectAlternativeNames' is not present");
    }

    @PolicyResourceProperty(name="supportCode", flag="unknown_supportCode")
    private String value_supportCode;
    private boolean unknown_supportCode;
    public String supportCode() {
        if (!unknown_supportCode) return value_supportCode;
        throw new UndeferrableValueException("Value 'LbCertificate.supportCode' is not present");
    }

}
