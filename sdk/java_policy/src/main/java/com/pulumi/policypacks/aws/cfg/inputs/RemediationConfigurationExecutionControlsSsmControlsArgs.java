// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.cfg.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.Integer;
import javax.annotation.Nullable;


public final class RemediationConfigurationExecutionControlsSsmControlsArgs {

    /**
     * Maximum percentage of remediation actions allowed to run in parallel on the non-compliant resources for that specific rule. The default value is 10%.
     * 
     */
    @PolicyResourceProperty(name="concurrentExecutionRatePercentage", flag="unknown_concurrentExecutionRatePercentage")
    private Integer value_concurrentExecutionRatePercentage;
    private boolean unknown_concurrentExecutionRatePercentage;
    public Integer concurrentExecutionRatePercentage() {
        if (!unknown_concurrentExecutionRatePercentage) return value_concurrentExecutionRatePercentage;
        throw new UndeferrableValueException("Value 'RemediationConfigurationExecutionControlsSsmControlsArgs.concurrentExecutionRatePercentage' is not present");
    }

    /**
     * Percentage of errors that are allowed before SSM stops running automations on non-compliant resources for that specific rule. The default is 50%.
     * 
     */
    @PolicyResourceProperty(name="errorPercentage", flag="unknown_errorPercentage")
    private Integer value_errorPercentage;
    private boolean unknown_errorPercentage;
    public Integer errorPercentage() {
        if (!unknown_errorPercentage) return value_errorPercentage;
        throw new UndeferrableValueException("Value 'RemediationConfigurationExecutionControlsSsmControlsArgs.errorPercentage' is not present");
    }

}
