// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.ec2.NetworkInsightsAnalysisAlternatePathHint;
import com.pulumi.policypacks.aws.ec2.NetworkInsightsAnalysisExplanation;
import com.pulumi.policypacks.aws.ec2.NetworkInsightsAnalysisForwardPathComponent;
import com.pulumi.policypacks.aws.ec2.NetworkInsightsAnalysisReturnPathComponent;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;


@PolicyResourceType(type="aws:ec2/networkInsightsAnalysis:NetworkInsightsAnalysis")
public final class NetworkInsightsAnalysis extends com.pulumi.resources.PolicyResource {

    /**
     * Potential intermediate components of a feasible path. Described below.
     * 
     */
    public List<NetworkInsightsAnalysisAlternatePathHint> alternatePathHints;



    /**
     * ARN of the Network Insights Analysis.
     * 
     */
    public String arn;



    /**
     * Explanation codes for an unreachable path. See the [AWS documentation](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_Explanation.html) for details.
     * 
     */
    public List<NetworkInsightsAnalysisExplanation> explanations;



    /**
     * A list of ARNs for resources the path must traverse.
     * 
     */
    public List<String> filterInArns;



    /**
     * The components in the path from source to destination. See the [AWS documentation](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_PathComponent.html) for details.
     * 
     */
    public List<NetworkInsightsAnalysisForwardPathComponent> forwardPathComponents;



    /**
     * ID of the Network Insights Path to run an analysis on.
     * 
     * The following arguments are optional:
     * 
     */
    public String networkInsightsPathId;



    /**
     * Set to `true` if the destination was reachable.
     * 
     */
    public Boolean pathFound;



    /**
     * The components in the path from destination to source. See the [AWS documentation](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_PathComponent.html) for details.
     * 
     */
    public List<NetworkInsightsAnalysisReturnPathComponent> returnPathComponents;



    /**
     * The date/time the analysis was started.
     * 
     */
    public String startDate;



    /**
     * The status of the analysis. `succeeded` means the analysis was completed, not that a path was found, for that see `path_found`.
     * 
     */
    public String status;



    /**
     * A message to provide more context when the `status` is `failed`.
     * 
     */
    public String statusMessage;



    /**
     * Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



    /**
     * If enabled, the resource will wait for the Network Insights Analysis status to change to `succeeded` or `failed`. Setting this to `false` will skip the process. Default: `true`.
     * 
     */
    public Boolean waitForCompletion;



    /**
     * The warning message.
     * 
     */
    public String warningMessage;



}
