// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.memorydb;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.memorydb.SnapshotClusterConfiguration;
import java.lang.String;
import java.util.List;
import java.util.Map;


@PolicyResourceType(type="aws:memorydb/snapshot:Snapshot")
public final class Snapshot extends com.pulumi.resources.PolicyResource {

    /**
     * The ARN of the snapshot.
     * 
     */
    public String arn;



    /**
     * The configuration of the cluster from which the snapshot was taken.
     * 
     */
    public List<SnapshotClusterConfiguration> clusterConfigurations;



    /**
     * Name of the MemoryDB cluster to take a snapshot of.
     * 
     */
    public String clusterName;



    /**
     * ARN of the KMS key used to encrypt the snapshot at rest.
     * 
     */
    public String kmsKeyArn;



    /**
     * Name of the snapshot. If omitted, the provider will assign a random, unique name. Conflicts with `name_prefix`.
     * 
     */
    public String name;



    /**
     * Creates a unique name beginning with the specified prefix. Conflicts with `name`.
     * 
     */
    public String namePrefix;



    /**
     * Indicates whether the snapshot is from an automatic backup (`automated`) or was created manually (`manual`).
     * 
     */
    public String source;



    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



}
