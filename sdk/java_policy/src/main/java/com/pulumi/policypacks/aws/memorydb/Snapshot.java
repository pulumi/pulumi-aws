// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.memorydb;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.memorydb.outputs.SnapshotClusterConfiguration;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:memorydb/snapshot:Snapshot")
public final class Snapshot extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The ARN of the snapshot.
     * 
     */
    private UndeferrableValue<String> arn;

    public String arn() {
        if (arn == null) return null;
        return arn.getValue("Snapshot.arn");
    }

    /**
     * The configuration of the cluster from which the snapshot was taken.
     * 
     */
    private UndeferrableValue<List<SnapshotClusterConfiguration>> clusterConfigurations;

    public List<SnapshotClusterConfiguration> clusterConfigurations() {
        if (clusterConfigurations == null) return null;
        return clusterConfigurations.getValue("Snapshot.clusterConfigurations");
    }

    /**
     * Name of the MemoryDB cluster to take a snapshot of.
     * 
     */
    private UndeferrableValue<String> clusterName;

    public String clusterName() {
        if (clusterName == null) return null;
        return clusterName.getValue("Snapshot.clusterName");
    }

    /**
     * ARN of the KMS key used to encrypt the snapshot at rest.
     * 
     */
    private @Nullable UndeferrableValue<String> kmsKeyArn;

    public @Nullable String kmsKeyArn() {
        if (kmsKeyArn == null) return null;
        return kmsKeyArn.getValue("Snapshot.kmsKeyArn");
    }

    /**
     * Name of the snapshot. If omitted, the provider will assign a random, unique name. Conflicts with `name_prefix`.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("Snapshot.name");
    }

    /**
     * Creates a unique name beginning with the specified prefix. Conflicts with `name`.
     * 
     */
    private UndeferrableValue<String> namePrefix;

    public String namePrefix() {
        if (namePrefix == null) return null;
        return namePrefix.getValue("Snapshot.namePrefix");
    }

    /**
     * Indicates whether the snapshot is from an automatic backup (`automated`) or was created manually (`manual`).
     * 
     */
    private UndeferrableValue<String> source;

    public String source() {
        if (source == null) return null;
        return source.getValue("Snapshot.source");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private @Nullable UndeferrableValue<Map<String,String>> tags;

    public @Nullable Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("Snapshot.tags");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    private UndeferrableValue<Map<String,String>> tagsAll;

    public Map<String,String> tagsAll() {
        if (tagsAll == null) return null;
        return tagsAll.getValue("Snapshot.tagsAll");
    }

}
