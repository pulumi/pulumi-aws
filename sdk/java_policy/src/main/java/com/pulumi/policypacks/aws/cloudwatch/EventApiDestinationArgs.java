// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.cloudwatch;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:cloudwatch/eventApiDestination:EventApiDestination")
public final class EventApiDestinationArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * ARN of the EventBridge Connection to use for the API Destination.
     * 
     */
    @PolicyResourceProperty(name="connectionArn", flag="unknown_connectionArn")
    private String value_connectionArn;
    private boolean unknown_connectionArn;
    public String connectionArn() {
        if (!unknown_connectionArn) return value_connectionArn;
        throw new UndeferrableValueException("Value 'EventApiDestinationArgs.connectionArn' is not present");
    }

    /**
     * The description of the new API Destination. Maximum of 512 characters.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private String value_description;
    private boolean unknown_description;
    public String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'EventApiDestinationArgs.description' is not present");
    }

    /**
     * Select the HTTP method used for the invocation endpoint, such as GET, POST, PUT, etc.
     * 
     */
    @PolicyResourceProperty(name="httpMethod", flag="unknown_httpMethod")
    private String value_httpMethod;
    private boolean unknown_httpMethod;
    public String httpMethod() {
        if (!unknown_httpMethod) return value_httpMethod;
        throw new UndeferrableValueException("Value 'EventApiDestinationArgs.httpMethod' is not present");
    }

    /**
     * URL endpoint to invoke as a target. This could be a valid endpoint generated by a partner service. You can include &#34;*&#34; as path parameters wildcards to be set from the Target HttpParameters.
     * 
     */
    @PolicyResourceProperty(name="invocationEndpoint", flag="unknown_invocationEndpoint")
    private String value_invocationEndpoint;
    private boolean unknown_invocationEndpoint;
    public String invocationEndpoint() {
        if (!unknown_invocationEndpoint) return value_invocationEndpoint;
        throw new UndeferrableValueException("Value 'EventApiDestinationArgs.invocationEndpoint' is not present");
    }

    /**
     * Enter the maximum number of invocations per second to allow for this destination. Enter a value greater than 0 (default 300).
     * 
     */
    @PolicyResourceProperty(name="invocationRateLimitPerSecond", flag="unknown_invocationRateLimitPerSecond")
    private Integer value_invocationRateLimitPerSecond;
    private boolean unknown_invocationRateLimitPerSecond;
    public Integer invocationRateLimitPerSecond() {
        if (!unknown_invocationRateLimitPerSecond) return value_invocationRateLimitPerSecond;
        throw new UndeferrableValueException("Value 'EventApiDestinationArgs.invocationRateLimitPerSecond' is not present");
    }

    /**
     * The name of the new API Destination. The name must be unique for your account. Maximum of 64 characters consisting of numbers, lower/upper case letters, .,-,_.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'EventApiDestinationArgs.name' is not present");
    }

}
