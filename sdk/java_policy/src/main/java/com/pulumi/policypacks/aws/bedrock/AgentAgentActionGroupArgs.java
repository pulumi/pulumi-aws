// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.bedrock;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.bedrock.inputs.AgentAgentActionGroupActionGroupExecutorArgs;
import com.pulumi.policypacks.aws.bedrock.inputs.AgentAgentActionGroupApiSchemaArgs;
import com.pulumi.policypacks.aws.bedrock.inputs.AgentAgentActionGroupFunctionSchemaArgs;
import com.pulumi.policypacks.aws.bedrock.inputs.AgentAgentActionGroupTimeoutsArgs;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:bedrock/agentAgentActionGroup:AgentAgentActionGroup")
public final class AgentAgentActionGroupArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * ARN of the Lambda function containing the business logic that is carried out upon invoking the action or custom control method for handling the information elicited from the user. See `action_group_executor` Block for details.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<AgentAgentActionGroupActionGroupExecutorArgs> actionGroupExecutor;

    public AgentAgentActionGroupActionGroupExecutorArgs actionGroupExecutor() {
        if (actionGroupExecutor == null) return null;
        return actionGroupExecutor.getValue("AgentAgentActionGroupArgs.actionGroupExecutor");
    }

    /**
     * Name of the action group.
     * 
     */
    private UndeferrableValue<String> actionGroupName;

    public String actionGroupName() {
        if (actionGroupName == null) return null;
        return actionGroupName.getValue("AgentAgentActionGroupArgs.actionGroupName");
    }

    /**
     * Whether the action group is available for the agent to invoke or not when sending an [InvokeAgent](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html) request. Valid values: `ENABLED`, `DISABLED`.
     * 
     */
    private UndeferrableValue<String> actionGroupState;

    public String actionGroupState() {
        if (actionGroupState == null) return null;
        return actionGroupState.getValue("AgentAgentActionGroupArgs.actionGroupState");
    }

    /**
     * The unique identifier of the agent for which to create the action group.
     * 
     */
    private UndeferrableValue<String> agentId;

    public String agentId() {
        if (agentId == null) return null;
        return agentId.getValue("AgentAgentActionGroupArgs.agentId");
    }

    /**
     * Version of the agent for which to create the action group. Valid values: `DRAFT`.
     * 
     */
    private UndeferrableValue<String> agentVersion;

    public String agentVersion() {
        if (agentVersion == null) return null;
        return agentVersion.getValue("AgentAgentActionGroupArgs.agentVersion");
    }

    /**
     * Either details about the S3 object containing the OpenAPI schema for the action group or the JSON or YAML-formatted payload defining the schema. For more information, see [Action group OpenAPI schemas](https://docs.aws.amazon.com/bedrock/latest/userguide/agents-api-schema.html). See `api_schema` Block for details.
     * 
     */
    private UndeferrableValue<AgentAgentActionGroupApiSchemaArgs> apiSchema;

    public AgentAgentActionGroupApiSchemaArgs apiSchema() {
        if (apiSchema == null) return null;
        return apiSchema.getValue("AgentAgentActionGroupArgs.apiSchema");
    }

    /**
     * Description of the action group.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("AgentAgentActionGroupArgs.description");
    }

    /**
     * Describes the function schema for the action group.
     * Each function represents an action in an action group.
     * See `function_schema` Block for details.
     * 
     */
    private UndeferrableValue<AgentAgentActionGroupFunctionSchemaArgs> functionSchema;

    public AgentAgentActionGroupFunctionSchemaArgs functionSchema() {
        if (functionSchema == null) return null;
        return functionSchema.getValue("AgentAgentActionGroupArgs.functionSchema");
    }

    /**
     * To allow your agent to request the user for additional information when trying to complete a task, set this argument to `AMAZON.UserInput`. You must leave the `description`, `api_schema`, and `action_group_executor` arguments blank for this action group. Valid values: `AMAZON.UserInput`.
     * 
     */
    private UndeferrableValue<String> parentActionGroupSignature;

    public String parentActionGroupSignature() {
        if (parentActionGroupSignature == null) return null;
        return parentActionGroupSignature.getValue("AgentAgentActionGroupArgs.parentActionGroupSignature");
    }

    /**
     * Whether or not to prepare the agent after creation or modification. Defaults to `true`.
     * 
     */
    private UndeferrableValue<Boolean> prepareAgent;

    public Boolean prepareAgent() {
        if (prepareAgent == null) return null;
        return prepareAgent.getValue("AgentAgentActionGroupArgs.prepareAgent");
    }

    /**
     * Whether the in-use check is skipped when deleting the action group.
     * 
     */
    private UndeferrableValue<Boolean> skipResourceInUseCheck;

    public Boolean skipResourceInUseCheck() {
        if (skipResourceInUseCheck == null) return null;
        return skipResourceInUseCheck.getValue("AgentAgentActionGroupArgs.skipResourceInUseCheck");
    }

    private UndeferrableValue<AgentAgentActionGroupTimeoutsArgs> timeouts;

    public AgentAgentActionGroupTimeoutsArgs timeouts() {
        if (timeouts == null) return null;
        return timeouts.getValue("AgentAgentActionGroupArgs.timeouts");
    }

}
