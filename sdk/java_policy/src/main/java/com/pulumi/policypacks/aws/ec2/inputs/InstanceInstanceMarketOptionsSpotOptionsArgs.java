// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2.inputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.String;
import javax.annotation.Nullable;


public final class InstanceInstanceMarketOptionsSpotOptionsArgs {

    /**
     * The behavior when a Spot Instance is interrupted. Valid values include `hibernate`, `stop`, `terminate` . The default is `terminate`.
     * 
     */
    private UndeferrableValue<String> instanceInterruptionBehavior;

    public String instanceInterruptionBehavior() {
        if (instanceInterruptionBehavior == null) return null;
        return instanceInterruptionBehavior.getValue("InstanceInstanceMarketOptionsSpotOptionsArgs.instanceInterruptionBehavior");
    }

    /**
     * The maximum hourly price that you&#39;re willing to pay for a Spot Instance.
     * 
     */
    private UndeferrableValue<String> maxPrice;

    public String maxPrice() {
        if (maxPrice == null) return null;
        return maxPrice.getValue("InstanceInstanceMarketOptionsSpotOptionsArgs.maxPrice");
    }

    /**
     * The Spot Instance request type. Valid values include `one-time`, `persistent`. Persistent Spot Instance requests are only supported when the instance interruption behavior is either hibernate or stop. The default is `one-time`.
     * 
     */
    private UndeferrableValue<String> spotInstanceType;

    public String spotInstanceType() {
        if (spotInstanceType == null) return null;
        return spotInstanceType.getValue("InstanceInstanceMarketOptionsSpotOptionsArgs.spotInstanceType");
    }

    /**
     * The end date of the request, in UTC format (YYYY-MM-DDTHH:MM:SSZ). Supported only for persistent requests.
     * 
     */
    private UndeferrableValue<String> validUntil;

    public String validUntil() {
        if (validUntil == null) return null;
        return validUntil.getValue("InstanceInstanceMarketOptionsSpotOptionsArgs.validUntil");
    }

}
