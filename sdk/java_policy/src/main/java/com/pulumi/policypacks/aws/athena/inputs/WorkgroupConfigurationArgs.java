// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.athena.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.athena.inputs.WorkgroupConfigurationEngineVersionArgs;
import com.pulumi.policypacks.aws.athena.inputs.WorkgroupConfigurationResultConfigurationArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class WorkgroupConfigurationArgs {

    /**
     * Integer for the upper data usage limit (cutoff) for the amount of bytes a single query in a workgroup is allowed to scan. Must be at least `10485760`.
     * 
     */
    @PolicyResourceProperty(name="bytesScannedCutoffPerQuery", flag="unknown_bytesScannedCutoffPerQuery")
    private Integer value_bytesScannedCutoffPerQuery;
    private boolean unknown_bytesScannedCutoffPerQuery;
    public Integer bytesScannedCutoffPerQuery() {
        if (!unknown_bytesScannedCutoffPerQuery) return value_bytesScannedCutoffPerQuery;
        throw new UndeferrableValueException("Value 'WorkgroupConfigurationArgs.bytesScannedCutoffPerQuery' is not present");
    }

    /**
     * Boolean whether the settings for the workgroup override client-side settings. For more information, see [Workgroup Settings Override Client-Side Settings](https://docs.aws.amazon.com/athena/latest/ug/workgroups-settings-override.html). Defaults to `true`.
     * 
     */
    @PolicyResourceProperty(name="enforceWorkgroupConfiguration", flag="unknown_enforceWorkgroupConfiguration")
    private Boolean value_enforceWorkgroupConfiguration;
    private boolean unknown_enforceWorkgroupConfiguration;
    public Boolean enforceWorkgroupConfiguration() {
        if (!unknown_enforceWorkgroupConfiguration) return value_enforceWorkgroupConfiguration;
        throw new UndeferrableValueException("Value 'WorkgroupConfigurationArgs.enforceWorkgroupConfiguration' is not present");
    }

    /**
     * Configuration block for the Athena Engine Versioning. For more information, see [Athena Engine Versioning](https://docs.aws.amazon.com/athena/latest/ug/engine-versions.html). See Engine Version below.
     * 
     */
    @PolicyResourceProperty(name="engineVersion", flag="unknown_engineVersion")
    private WorkgroupConfigurationEngineVersionArgs value_engineVersion;
    private boolean unknown_engineVersion;
    public WorkgroupConfigurationEngineVersionArgs engineVersion() {
        if (!unknown_engineVersion) return value_engineVersion;
        throw new UndeferrableValueException("Value 'WorkgroupConfigurationArgs.engineVersion' is not present");
    }

    /**
     * Role used in a notebook session for accessing the user&#39;s resources.
     * 
     */
    @PolicyResourceProperty(name="executionRole", flag="unknown_executionRole")
    private String value_executionRole;
    private boolean unknown_executionRole;
    public String executionRole() {
        if (!unknown_executionRole) return value_executionRole;
        throw new UndeferrableValueException("Value 'WorkgroupConfigurationArgs.executionRole' is not present");
    }

    /**
     * Boolean whether Amazon CloudWatch metrics are enabled for the workgroup. Defaults to `true`.
     * 
     */
    @PolicyResourceProperty(name="publishCloudwatchMetricsEnabled", flag="unknown_publishCloudwatchMetricsEnabled")
    private Boolean value_publishCloudwatchMetricsEnabled;
    private boolean unknown_publishCloudwatchMetricsEnabled;
    public Boolean publishCloudwatchMetricsEnabled() {
        if (!unknown_publishCloudwatchMetricsEnabled) return value_publishCloudwatchMetricsEnabled;
        throw new UndeferrableValueException("Value 'WorkgroupConfigurationArgs.publishCloudwatchMetricsEnabled' is not present");
    }

    /**
     * If set to true , allows members assigned to a workgroup to reference Amazon S3 Requester Pays buckets in queries. If set to false , workgroup members cannot query data from Requester Pays buckets, and queries that retrieve data from Requester Pays buckets cause an error. The default is false . For more information about Requester Pays buckets, see [Requester Pays Buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html) in the Amazon Simple Storage Service Developer Guide.
     * 
     */
    @PolicyResourceProperty(name="requesterPaysEnabled", flag="unknown_requesterPaysEnabled")
    private Boolean value_requesterPaysEnabled;
    private boolean unknown_requesterPaysEnabled;
    public Boolean requesterPaysEnabled() {
        if (!unknown_requesterPaysEnabled) return value_requesterPaysEnabled;
        throw new UndeferrableValueException("Value 'WorkgroupConfigurationArgs.requesterPaysEnabled' is not present");
    }

    /**
     * Configuration block with result settings. See Result Configuration below.
     * 
     */
    @PolicyResourceProperty(name="resultConfiguration", flag="unknown_resultConfiguration")
    private WorkgroupConfigurationResultConfigurationArgs value_resultConfiguration;
    private boolean unknown_resultConfiguration;
    public WorkgroupConfigurationResultConfigurationArgs resultConfiguration() {
        if (!unknown_resultConfiguration) return value_resultConfiguration;
        throw new UndeferrableValueException("Value 'WorkgroupConfigurationArgs.resultConfiguration' is not present");
    }

}
