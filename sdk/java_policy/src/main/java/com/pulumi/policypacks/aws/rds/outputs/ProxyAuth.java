// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.rds.outputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.String;
import javax.annotation.Nullable;


public final class ProxyAuth {

    /**
     * The type of authentication that the proxy uses for connections from the proxy to the underlying database. One of `SECRETS`.
     * 
     */
    private @Nullable UndeferrableValue<String> authScheme;

    public @Nullable String authScheme() {
        if (authScheme == null) return null;
        return authScheme.getValue("ProxyAuth.authScheme");
    }

    /**
     * The type of authentication the proxy uses for connections from clients. Valid values are `MYSQL_CACHING_SHA2_PASSWORD`, `MYSQL_NATIVE_PASSWORD`, `POSTGRES_SCRAM_SHA_256`, `POSTGRES_MD5`, and `SQL_SERVER_AUTHENTICATION`.
     * 
     */
    private @Nullable UndeferrableValue<String> clientPasswordAuthType;

    public @Nullable String clientPasswordAuthType() {
        if (clientPasswordAuthType == null) return null;
        return clientPasswordAuthType.getValue("ProxyAuth.clientPasswordAuthType");
    }

    /**
     * A user-specified description about the authentication used by a proxy to log in as a specific database user.
     * 
     */
    private @Nullable UndeferrableValue<String> description;

    public @Nullable String description() {
        if (description == null) return null;
        return description.getValue("ProxyAuth.description");
    }

    /**
     * Whether to require or disallow AWS Identity and Access Management (IAM) authentication for connections to the proxy. One of `DISABLED`, `REQUIRED`.
     * 
     */
    private @Nullable UndeferrableValue<String> iamAuth;

    public @Nullable String iamAuth() {
        if (iamAuth == null) return null;
        return iamAuth.getValue("ProxyAuth.iamAuth");
    }

    /**
     * The Amazon Resource Name (ARN) representing the secret that the proxy uses to authenticate to the RDS DB instance or Aurora DB cluster. These secrets are stored within Amazon Secrets Manager.
     * 
     */
    private @Nullable UndeferrableValue<String> secretArn;

    public @Nullable String secretArn() {
        if (secretArn == null) return null;
        return secretArn.getValue("ProxyAuth.secretArn");
    }

    /**
     * The name of the database user to which the proxy connects.
     * 
     */
    private @Nullable UndeferrableValue<String> username;

    public @Nullable String username() {
        if (username == null) return null;
        return username.getValue("ProxyAuth.username");
    }

}
