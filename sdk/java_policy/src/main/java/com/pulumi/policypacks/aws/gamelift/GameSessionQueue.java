// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.gamelift;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.gamelift.outputs.GameSessionQueuePlayerLatencyPolicy;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:gamelift/gameSessionQueue:GameSessionQueue")
public final class GameSessionQueue extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Game Session Queue ARN.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'GameSessionQueue.arn' is not present");
    }

    /**
     * Information to be added to all events that are related to this game session queue.
     * 
     */
    @PolicyResourceProperty(name="customEventData", flag="unknown_customEventData")
    private @Nullable String value_customEventData;
    private boolean unknown_customEventData;
    public @Nullable String customEventData() {
        if (!unknown_customEventData) return value_customEventData;
        throw new UndeferrableValueException("Value 'GameSessionQueue.customEventData' is not present");
    }

    /**
     * List of fleet/alias ARNs used by session queue for placing game sessions.
     * 
     */
    @PolicyResourceProperty(name="destinations", flag="unknown_destinations")
    private @Nullable List<String> value_destinations;
    private boolean unknown_destinations;
    public @Nullable List<String> destinations() {
        if (!unknown_destinations) return value_destinations;
        throw new UndeferrableValueException("Value 'GameSessionQueue.destinations' is not present");
    }

    /**
     * Name of the session queue.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'GameSessionQueue.name' is not present");
    }

    /**
     * An SNS topic ARN that is set up to receive game session placement notifications.
     * 
     */
    @PolicyResourceProperty(name="notificationTarget", flag="unknown_notificationTarget")
    private @Nullable String value_notificationTarget;
    private boolean unknown_notificationTarget;
    public @Nullable String notificationTarget() {
        if (!unknown_notificationTarget) return value_notificationTarget;
        throw new UndeferrableValueException("Value 'GameSessionQueue.notificationTarget' is not present");
    }

    /**
     * One or more policies used to choose fleet based on player latency. See below.
     * 
     */
    @PolicyResourceProperty(name="playerLatencyPolicies", flag="unknown_playerLatencyPolicies")
    private @Nullable List<GameSessionQueuePlayerLatencyPolicy> value_playerLatencyPolicies;
    private boolean unknown_playerLatencyPolicies;
    public @Nullable List<GameSessionQueuePlayerLatencyPolicy> playerLatencyPolicies() {
        if (!unknown_playerLatencyPolicies) return value_playerLatencyPolicies;
        throw new UndeferrableValueException("Value 'GameSessionQueue.playerLatencyPolicies' is not present");
    }

    /**
     * Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'GameSessionQueue.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'GameSessionQueue.tagsAll' is not present");
    }

    /**
     * Maximum time a game session request can remain in the queue.
     * 
     */
    @PolicyResourceProperty(name="timeoutInSeconds", flag="unknown_timeoutInSeconds")
    private @Nullable Integer value_timeoutInSeconds;
    private boolean unknown_timeoutInSeconds;
    public @Nullable Integer timeoutInSeconds() {
        if (!unknown_timeoutInSeconds) return value_timeoutInSeconds;
        throw new UndeferrableValueException("Value 'GameSessionQueue.timeoutInSeconds' is not present");
    }

}
