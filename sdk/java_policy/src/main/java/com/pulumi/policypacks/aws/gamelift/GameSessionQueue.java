// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.gamelift;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.gamelift.GameSessionQueuePlayerLatencyPolicy;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;


@PolicyResourceType(type="aws:gamelift/gameSessionQueue:GameSessionQueue")
public final class GameSessionQueue extends com.pulumi.resources.PolicyResource {

    /**
     * Game Session Queue ARN.
     * 
     */
    public String arn;



    /**
     * Information to be added to all events that are related to this game session queue.
     * 
     */
    public String customEventData;



    /**
     * List of fleet/alias ARNs used by session queue for placing game sessions.
     * 
     */
    public List<String> destinations;



    /**
     * Name of the session queue.
     * 
     */
    public String name;



    /**
     * An SNS topic ARN that is set up to receive game session placement notifications.
     * 
     */
    public String notificationTarget;



    /**
     * One or more policies used to choose fleet based on player latency. See below.
     * 
     */
    public List<GameSessionQueuePlayerLatencyPolicy> playerLatencyPolicies;



    /**
     * Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



    /**
     * Maximum time a game session request can remain in the queue.
     * 
     */
    public Integer timeoutInSeconds;



}
