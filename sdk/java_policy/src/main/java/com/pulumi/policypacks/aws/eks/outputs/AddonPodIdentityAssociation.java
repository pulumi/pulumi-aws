// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.eks.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.String;


public final class AddonPodIdentityAssociation {

    /**
     * The Amazon Resource Name (ARN) of the IAM role to associate with the service account. The EKS Pod Identity agent manages credentials to assume this role for applications in the containers in the pods that use this service account.
     * 
     */
    @PolicyResourceProperty(name="roleArn", flag="unknown_roleArn")
    private String value_roleArn;
    private boolean unknown_roleArn;
    public String roleArn() {
        if (!unknown_roleArn) return value_roleArn;
        throw new UndeferrableValueException("Value 'AddonPodIdentityAssociation.roleArn' is not present");
    }

    /**
     * The name of the Kubernetes service account inside the cluster to associate the IAM credentials with.
     * 
     */
    @PolicyResourceProperty(name="serviceAccount", flag="unknown_serviceAccount")
    private String value_serviceAccount;
    private boolean unknown_serviceAccount;
    public String serviceAccount() {
        if (!unknown_serviceAccount) return value_serviceAccount;
        throw new UndeferrableValueException("Value 'AddonPodIdentityAssociation.serviceAccount' is not present");
    }

}
