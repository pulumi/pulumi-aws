// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.datasync;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.datasync.inputs.TaskExcludesArgs;
import com.pulumi.policypacks.aws.datasync.inputs.TaskIncludesArgs;
import com.pulumi.policypacks.aws.datasync.inputs.TaskOptionsArgs;
import com.pulumi.policypacks.aws.datasync.inputs.TaskScheduleArgs;
import com.pulumi.policypacks.aws.datasync.inputs.TaskTaskReportConfigArgs;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:datasync/task:Task")
public final class TaskArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Amazon Resource Name (ARN) of the CloudWatch Log Group that is used to monitor and log events in the sync task.
     * 
     */
    private UndeferrableValue<String> cloudwatchLogGroupArn;

    public String cloudwatchLogGroupArn() {
        if (cloudwatchLogGroupArn == null) return null;
        return cloudwatchLogGroupArn.getValue("TaskArgs.cloudwatchLogGroupArn");
    }

    /**
     * Amazon Resource Name (ARN) of destination DataSync Location.
     * 
     */
    private UndeferrableValue<String> destinationLocationArn;

    public String destinationLocationArn() {
        if (destinationLocationArn == null) return null;
        return destinationLocationArn.getValue("TaskArgs.destinationLocationArn");
    }

    /**
     * Filter rules that determines which files to exclude from a task.
     * 
     */
    private UndeferrableValue<TaskExcludesArgs> excludes;

    public TaskExcludesArgs excludes() {
        if (excludes == null) return null;
        return excludes.getValue("TaskArgs.excludes");
    }

    /**
     * Filter rules that determines which files to include in a task.
     * 
     */
    private UndeferrableValue<TaskIncludesArgs> includes;

    public TaskIncludesArgs includes() {
        if (includes == null) return null;
        return includes.getValue("TaskArgs.includes");
    }

    /**
     * Name of the DataSync Task.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("TaskArgs.name");
    }

    /**
     * Configuration block containing option that controls the default behavior when you start an execution of this DataSync Task. For each individual task execution, you can override these options by specifying an overriding configuration in those executions.
     * 
     */
    private UndeferrableValue<TaskOptionsArgs> options;

    public TaskOptionsArgs options() {
        if (options == null) return null;
        return options.getValue("TaskArgs.options");
    }

    /**
     * Specifies a schedule used to periodically transfer files from a source to a destination location.
     * 
     */
    private UndeferrableValue<TaskScheduleArgs> schedule;

    public TaskScheduleArgs schedule() {
        if (schedule == null) return null;
        return schedule.getValue("TaskArgs.schedule");
    }

    /**
     * Amazon Resource Name (ARN) of source DataSync Location.
     * 
     */
    private UndeferrableValue<String> sourceLocationArn;

    public String sourceLocationArn() {
        if (sourceLocationArn == null) return null;
        return sourceLocationArn.getValue("TaskArgs.sourceLocationArn");
    }

    /**
     * Key-value pairs of resource tags to assign to the DataSync Task. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("TaskArgs.tags");
    }

    /**
     * One of the following task modes for your data transfer:
     * * `BASIC` (default) - Transfer files or objects between Amazon Web Services storage and on-premises, edge, or other cloud storage.
     * * `ENHANCED` - Transfer virtually unlimited numbers of objects with enhanced metrics, more detailed logs, and higher performance than Basic mode. Currently available for transfers between Amazon S3 locations.
     * 
     */
    private UndeferrableValue<String> taskMode;

    public String taskMode() {
        if (taskMode == null) return null;
        return taskMode.getValue("TaskArgs.taskMode");
    }

    /**
     * Configuration block containing the configuration of a DataSync Task Report. See `task_report_config` below.
     * 
     */
    private UndeferrableValue<TaskTaskReportConfigArgs> taskReportConfig;

    public TaskTaskReportConfigArgs taskReportConfig() {
        if (taskReportConfig == null) return null;
        return taskReportConfig.getValue("TaskArgs.taskReportConfig");
    }

}
