// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.s3.outputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class BucketWebsite {

    /**
     * An absolute path to the document to return in case of a 4XX error.
     * 
     */
    private @Nullable UndeferrableValue<String> errorDocument;

    public @Nullable String errorDocument() {
        if (errorDocument == null) return null;
        return errorDocument.getValue("BucketWebsite.errorDocument");
    }

    /**
     * Amazon S3 returns this index document when requests are made to the root domain or any of the subfolders.
     * 
     */
    private @Nullable UndeferrableValue<String> indexDocument;

    public @Nullable String indexDocument() {
        if (indexDocument == null) return null;
        return indexDocument.getValue("BucketWebsite.indexDocument");
    }

    /**
     * A hostname to redirect all website requests for this bucket to. Hostname can optionally be prefixed with a protocol (`http://` or `https://`) to use when redirecting requests. The default is the protocol that is used in the original request.
     * 
     */
    private @Nullable UndeferrableValue<String> redirectAllRequestsTo;

    public @Nullable String redirectAllRequestsTo() {
        if (redirectAllRequestsTo == null) return null;
        return redirectAllRequestsTo.getValue("BucketWebsite.redirectAllRequestsTo");
    }

    /**
     * A json array containing [routing rules](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html)
     * describing redirect behavior and when redirects are applied.
     * 
     * The `CORS` object supports the following:
     * 
     */
    private UndeferrableValue<String> routingRules;

    public String routingRules() {
        if (routingRules == null) return null;
        return routingRules.getValue("BucketWebsite.routingRules");
    }

}
