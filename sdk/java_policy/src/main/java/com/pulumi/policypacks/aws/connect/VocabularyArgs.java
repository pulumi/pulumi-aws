// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.connect;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:connect/vocabulary:Vocabulary")
public final class VocabularyArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The content of the custom vocabulary in plain-text format with a table of values. Each row in the table represents a word or a phrase, described with Phrase, IPA, SoundsLike, and DisplayAs fields. Separate the fields with TAB characters. For more information, see [Create a custom vocabulary using a table](https://docs.aws.amazon.com/transcribe/latest/dg/custom-vocabulary.html#create-vocabulary-table). Minimum length of `1`. Maximum length of `60000`.
     * 
     */
    private UndeferrableValue<String> content;

    public String content() {
        if (content == null) return null;
        return content.getValue("VocabularyArgs.content");
    }

    /**
     * Specifies the identifier of the hosting Amazon Connect Instance.
     * 
     */
    private UndeferrableValue<String> instanceId;

    public String instanceId() {
        if (instanceId == null) return null;
        return instanceId.getValue("VocabularyArgs.instanceId");
    }

    /**
     * The language code of the vocabulary entries. For a list of languages and their corresponding language codes, see [What is Amazon Transcribe?](https://docs.aws.amazon.com/transcribe/latest/dg/transcribe-whatis.html). Valid Values are `ar-AE`, `de-CH`, `de-DE`, `en-AB`, `en-AU`, `en-GB`, `en-IE`, `en-IN`, `en-US`, `en-WL`, `es-ES`, `es-US`, `fr-CA`, `fr-FR`, `hi-IN`, `it-IT`, `ja-JP`, `ko-KR`, `pt-BR`, `pt-PT`, `zh-CN`.
     * 
     */
    private UndeferrableValue<String> languageCode;

    public String languageCode() {
        if (languageCode == null) return null;
        return languageCode.getValue("VocabularyArgs.languageCode");
    }

    /**
     * A unique name of the custom vocabulary. Must not be more than 140 characters.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("VocabularyArgs.name");
    }

    /**
     * Tags to apply to the vocabulary. If configured with a provider
     * `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("VocabularyArgs.tags");
    }

}
