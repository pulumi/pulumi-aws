// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.route53.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.route53.outputs.RecordsExclusiveResourceRecordSetAliasTarget;
import com.pulumi.policypacks.aws.route53.outputs.RecordsExclusiveResourceRecordSetCidrRoutingConfig;
import com.pulumi.policypacks.aws.route53.outputs.RecordsExclusiveResourceRecordSetGeolocation;
import com.pulumi.policypacks.aws.route53.outputs.RecordsExclusiveResourceRecordSetGeoproximityLocation;
import com.pulumi.policypacks.aws.route53.outputs.RecordsExclusiveResourceRecordSetResourceRecord;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class RecordsExclusiveResourceRecordSet {

    /**
     * Alias target block.
     * See `alias_target` below.
     * 
     */
    @PolicyResourceProperty(name="aliasTarget", flag="unknown_aliasTarget")
    private @Nullable RecordsExclusiveResourceRecordSetAliasTarget value_aliasTarget;
    private boolean unknown_aliasTarget;
    public @Nullable RecordsExclusiveResourceRecordSetAliasTarget aliasTarget() {
        if (!unknown_aliasTarget) return value_aliasTarget;
        throw new UndeferrableValueException("Value 'RecordsExclusiveResourceRecordSet.aliasTarget' is not present");
    }

    @PolicyResourceProperty(name="cidrRoutingConfig", flag="unknown_cidrRoutingConfig")
    private @Nullable RecordsExclusiveResourceRecordSetCidrRoutingConfig value_cidrRoutingConfig;
    private boolean unknown_cidrRoutingConfig;
    public @Nullable RecordsExclusiveResourceRecordSetCidrRoutingConfig cidrRoutingConfig() {
        if (!unknown_cidrRoutingConfig) return value_cidrRoutingConfig;
        throw new UndeferrableValueException("Value 'RecordsExclusiveResourceRecordSet.cidrRoutingConfig' is not present");
    }

    /**
     * Type of failover resource record.
     * Valid values are `PRIMARY` and `SECONDARY`.
     * See the [AWS documentation on DNS failover](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html) for additional details.
     * 
     */
    @PolicyResourceProperty(name="failover", flag="unknown_failover")
    private @Nullable String value_failover;
    private boolean unknown_failover;
    public @Nullable String failover() {
        if (!unknown_failover) return value_failover;
        throw new UndeferrableValueException("Value 'RecordsExclusiveResourceRecordSet.failover' is not present");
    }

    /**
     * Geolocation block to control how Amazon Route 53 responds to DNS queries based on the geographic origin of the query.
     * See `geolocation` below.
     * 
     */
    @PolicyResourceProperty(name="geolocation", flag="unknown_geolocation")
    private @Nullable RecordsExclusiveResourceRecordSetGeolocation value_geolocation;
    private boolean unknown_geolocation;
    public @Nullable RecordsExclusiveResourceRecordSetGeolocation geolocation() {
        if (!unknown_geolocation) return value_geolocation;
        throw new UndeferrableValueException("Value 'RecordsExclusiveResourceRecordSet.geolocation' is not present");
    }

    /**
     * Geoproximity location block.
     * See `geoproximity_location` below.
     * 
     */
    @PolicyResourceProperty(name="geoproximityLocation", flag="unknown_geoproximityLocation")
    private @Nullable RecordsExclusiveResourceRecordSetGeoproximityLocation value_geoproximityLocation;
    private boolean unknown_geoproximityLocation;
    public @Nullable RecordsExclusiveResourceRecordSetGeoproximityLocation geoproximityLocation() {
        if (!unknown_geoproximityLocation) return value_geoproximityLocation;
        throw new UndeferrableValueException("Value 'RecordsExclusiveResourceRecordSet.geoproximityLocation' is not present");
    }

    /**
     * Health check the record should be associated with.
     * 
     */
    @PolicyResourceProperty(name="healthCheckId", flag="unknown_healthCheckId")
    private @Nullable String value_healthCheckId;
    private boolean unknown_healthCheckId;
    public @Nullable String healthCheckId() {
        if (!unknown_healthCheckId) return value_healthCheckId;
        throw new UndeferrableValueException("Value 'RecordsExclusiveResourceRecordSet.healthCheckId' is not present");
    }

    @PolicyResourceProperty(name="multiValueAnswer", flag="unknown_multiValueAnswer")
    private @Nullable Boolean value_multiValueAnswer;
    private boolean unknown_multiValueAnswer;
    public @Nullable Boolean multiValueAnswer() {
        if (!unknown_multiValueAnswer) return value_multiValueAnswer;
        throw new UndeferrableValueException("Value 'RecordsExclusiveResourceRecordSet.multiValueAnswer' is not present");
    }

    /**
     * Name of the record.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'RecordsExclusiveResourceRecordSet.name' is not present");
    }

    /**
     * AWS region of the resource this record set refers to.
     * Must be a valid AWS region name.
     * See the [AWS documentation](http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-latency) on latency based routing for additional details.
     * 
     */
    @PolicyResourceProperty(name="region", flag="unknown_region")
    private @Nullable String value_region;
    private boolean unknown_region;
    public @Nullable String region() {
        if (!unknown_region) return value_region;
        throw new UndeferrableValueException("Value 'RecordsExclusiveResourceRecordSet.region' is not present");
    }

    /**
     * Information about the resource records to act upon.
     * See `resource_records` below.
     * 
     */
    @PolicyResourceProperty(name="resourceRecords", flag="unknown_resourceRecords")
    private @Nullable List<RecordsExclusiveResourceRecordSetResourceRecord> value_resourceRecords;
    private boolean unknown_resourceRecords;
    public @Nullable List<RecordsExclusiveResourceRecordSetResourceRecord> resourceRecords() {
        if (!unknown_resourceRecords) return value_resourceRecords;
        throw new UndeferrableValueException("Value 'RecordsExclusiveResourceRecordSet.resourceRecords' is not present");
    }

    /**
     * An identifier that differentiates among multiple resource record sets that have the same combination of name and type.
     * Required if using `cidr_routing_config`, `failover`, `geolocation`,`geoproximity_location`, `multivalue_answer`, `region`, or `weight`.
     * 
     */
    @PolicyResourceProperty(name="setIdentifier", flag="unknown_setIdentifier")
    private @Nullable String value_setIdentifier;
    private boolean unknown_setIdentifier;
    public @Nullable String setIdentifier() {
        if (!unknown_setIdentifier) return value_setIdentifier;
        throw new UndeferrableValueException("Value 'RecordsExclusiveResourceRecordSet.setIdentifier' is not present");
    }

    @PolicyResourceProperty(name="trafficPolicyInstanceId", flag="unknown_trafficPolicyInstanceId")
    private @Nullable String value_trafficPolicyInstanceId;
    private boolean unknown_trafficPolicyInstanceId;
    public @Nullable String trafficPolicyInstanceId() {
        if (!unknown_trafficPolicyInstanceId) return value_trafficPolicyInstanceId;
        throw new UndeferrableValueException("Value 'RecordsExclusiveResourceRecordSet.trafficPolicyInstanceId' is not present");
    }

    /**
     * Resource record cache time to live (TTL), in seconds.
     * 
     */
    @PolicyResourceProperty(name="ttl", flag="unknown_ttl")
    private @Nullable Integer value_ttl;
    private boolean unknown_ttl;
    public @Nullable Integer ttl() {
        if (!unknown_ttl) return value_ttl;
        throw new UndeferrableValueException("Value 'RecordsExclusiveResourceRecordSet.ttl' is not present");
    }

    /**
     * Record type.
     * Valid values are `A`, `AAAA`, `CAA`, `CNAME`, `DS`, `MX`, `NAPTR`, `NS`, `PTR`, `SOA`, `SPF`, `SRV`, `TXT`, `TLSA`, `SSHFP`, `SVCB`, and `HTTPS`.
     * 
     * The following arguments are optional:
     * 
     * &gt; Exactly one of `resource_records` or `alias_target` must be specified.
     * 
     */
    @PolicyResourceProperty(name="type", flag="unknown_type")
    private @Nullable String value_type;
    private boolean unknown_type;
    public @Nullable String type() {
        if (!unknown_type) return value_type;
        throw new UndeferrableValueException("Value 'RecordsExclusiveResourceRecordSet.type' is not present");
    }

    /**
     * Among resource record sets that have the same combination of DNS name and type, a value that determines the proportion of DNS queries that Amazon Route 53 responds to using the current resource record set.
     * 
     */
    @PolicyResourceProperty(name="weight", flag="unknown_weight")
    private @Nullable Integer value_weight;
    private boolean unknown_weight;
    public @Nullable Integer weight() {
        if (!unknown_weight) return value_weight;
        throw new UndeferrableValueException("Value 'RecordsExclusiveResourceRecordSet.weight' is not present");
    }

}
