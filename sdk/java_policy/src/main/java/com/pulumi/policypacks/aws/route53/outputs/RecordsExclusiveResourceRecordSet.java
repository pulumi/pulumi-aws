// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.route53.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.route53.outputs.RecordsExclusiveResourceRecordSetAliasTarget;
import com.pulumi.policypacks.aws.route53.outputs.RecordsExclusiveResourceRecordSetCidrRoutingConfig;
import com.pulumi.policypacks.aws.route53.outputs.RecordsExclusiveResourceRecordSetGeolocation;
import com.pulumi.policypacks.aws.route53.outputs.RecordsExclusiveResourceRecordSetGeoproximityLocation;
import com.pulumi.policypacks.aws.route53.outputs.RecordsExclusiveResourceRecordSetResourceRecord;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class RecordsExclusiveResourceRecordSet {

    /**
     * Alias target block.
     * See `alias_target` below.
     * 
     */
    private @Nullable UndeferrableValue<RecordsExclusiveResourceRecordSetAliasTarget> aliasTarget;

    public @Nullable RecordsExclusiveResourceRecordSetAliasTarget aliasTarget() {
        if (aliasTarget == null) return null;
        return aliasTarget.getValue("RecordsExclusiveResourceRecordSet.aliasTarget");
    }

    private @Nullable UndeferrableValue<RecordsExclusiveResourceRecordSetCidrRoutingConfig> cidrRoutingConfig;

    public @Nullable RecordsExclusiveResourceRecordSetCidrRoutingConfig cidrRoutingConfig() {
        if (cidrRoutingConfig == null) return null;
        return cidrRoutingConfig.getValue("RecordsExclusiveResourceRecordSet.cidrRoutingConfig");
    }

    /**
     * Type of failover resource record.
     * Valid values are `PRIMARY` and `SECONDARY`.
     * See the [AWS documentation on DNS failover](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html) for additional details.
     * 
     */
    private @Nullable UndeferrableValue<String> failover;

    public @Nullable String failover() {
        if (failover == null) return null;
        return failover.getValue("RecordsExclusiveResourceRecordSet.failover");
    }

    /**
     * Geolocation block to control how Amazon Route 53 responds to DNS queries based on the geographic origin of the query.
     * See `geolocation` below.
     * 
     */
    private @Nullable UndeferrableValue<RecordsExclusiveResourceRecordSetGeolocation> geolocation;

    public @Nullable RecordsExclusiveResourceRecordSetGeolocation geolocation() {
        if (geolocation == null) return null;
        return geolocation.getValue("RecordsExclusiveResourceRecordSet.geolocation");
    }

    /**
     * Geoproximity location block.
     * See `geoproximity_location` below.
     * 
     */
    private @Nullable UndeferrableValue<RecordsExclusiveResourceRecordSetGeoproximityLocation> geoproximityLocation;

    public @Nullable RecordsExclusiveResourceRecordSetGeoproximityLocation geoproximityLocation() {
        if (geoproximityLocation == null) return null;
        return geoproximityLocation.getValue("RecordsExclusiveResourceRecordSet.geoproximityLocation");
    }

    /**
     * Health check the record should be associated with.
     * 
     */
    private @Nullable UndeferrableValue<String> healthCheckId;

    public @Nullable String healthCheckId() {
        if (healthCheckId == null) return null;
        return healthCheckId.getValue("RecordsExclusiveResourceRecordSet.healthCheckId");
    }

    private @Nullable UndeferrableValue<Boolean> multiValueAnswer;

    public @Nullable Boolean multiValueAnswer() {
        if (multiValueAnswer == null) return null;
        return multiValueAnswer.getValue("RecordsExclusiveResourceRecordSet.multiValueAnswer");
    }

    /**
     * Name of the record.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("RecordsExclusiveResourceRecordSet.name");
    }

    /**
     * AWS region of the resource this record set refers to.
     * Must be a valid AWS region name.
     * See the [AWS documentation](http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-latency) on latency based routing for additional details.
     * 
     */
    private @Nullable UndeferrableValue<String> region;

    public @Nullable String region() {
        if (region == null) return null;
        return region.getValue("RecordsExclusiveResourceRecordSet.region");
    }

    /**
     * Information about the resource records to act upon.
     * See `resource_records` below.
     * 
     */
    private @Nullable UndeferrableValue<List<RecordsExclusiveResourceRecordSetResourceRecord>> resourceRecords;

    public @Nullable List<RecordsExclusiveResourceRecordSetResourceRecord> resourceRecords() {
        if (resourceRecords == null) return null;
        return resourceRecords.getValue("RecordsExclusiveResourceRecordSet.resourceRecords");
    }

    /**
     * An identifier that differentiates among multiple resource record sets that have the same combination of name and type.
     * Required if using `cidr_routing_config`, `failover`, `geolocation`,`geoproximity_location`, `multivalue_answer`, `region`, or `weight`.
     * 
     */
    private @Nullable UndeferrableValue<String> setIdentifier;

    public @Nullable String setIdentifier() {
        if (setIdentifier == null) return null;
        return setIdentifier.getValue("RecordsExclusiveResourceRecordSet.setIdentifier");
    }

    private @Nullable UndeferrableValue<String> trafficPolicyInstanceId;

    public @Nullable String trafficPolicyInstanceId() {
        if (trafficPolicyInstanceId == null) return null;
        return trafficPolicyInstanceId.getValue("RecordsExclusiveResourceRecordSet.trafficPolicyInstanceId");
    }

    /**
     * Resource record cache time to live (TTL), in seconds.
     * 
     */
    private @Nullable UndeferrableValue<Integer> ttl;

    public @Nullable Integer ttl() {
        if (ttl == null) return null;
        return ttl.getValue("RecordsExclusiveResourceRecordSet.ttl");
    }

    /**
     * Record type.
     * Valid values are `A`, `AAAA`, `CAA`, `CNAME`, `DS`, `MX`, `NAPTR`, `NS`, `PTR`, `SOA`, `SPF`, `SRV`, `TXT`, `TLSA`, `SSHFP`, `SVCB`, and `HTTPS`.
     * 
     * The following arguments are optional:
     * 
     * &gt; Exactly one of `resource_records` or `alias_target` must be specified.
     * 
     */
    private @Nullable UndeferrableValue<String> type;

    public @Nullable String type() {
        if (type == null) return null;
        return type.getValue("RecordsExclusiveResourceRecordSet.type");
    }

    /**
     * Among resource record sets that have the same combination of DNS name and type, a value that determines the proportion of DNS queries that Amazon Route 53 responds to using the current resource record set.
     * 
     */
    private @Nullable UndeferrableValue<Integer> weight;

    public @Nullable Integer weight() {
        if (weight == null) return null;
        return weight.getValue("RecordsExclusiveResourceRecordSet.weight");
    }

}
