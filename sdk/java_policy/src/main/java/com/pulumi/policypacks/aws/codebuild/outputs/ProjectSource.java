// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.codebuild.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.codebuild.outputs.ProjectSourceAuth;
import com.pulumi.policypacks.aws.codebuild.outputs.ProjectSourceBuildStatusConfig;
import com.pulumi.policypacks.aws.codebuild.outputs.ProjectSourceGitSubmodulesConfig;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class ProjectSource {

    /**
     * Information about the strategy CodeBuild should use when authenticating with the source code host.
     * Detailed below.
     * 
     */
    private @Nullable UndeferrableValue<ProjectSourceAuth> auth;

    public @Nullable ProjectSourceAuth auth() {
        if (auth == null) return null;
        return auth.getValue("ProjectSource.auth");
    }

    /**
     * Configuration block that contains information that defines how the build project
     * reports the build status to the source provider. This option is only used when the source provider is GitHub, GitHub
     * Enterprise, GitLab, GitLab Self Managed, or Bitbucket. `build_status_config` blocks are documented below.
     * 
     */
    private @Nullable UndeferrableValue<ProjectSourceBuildStatusConfig> buildStatusConfig;

    public @Nullable ProjectSourceBuildStatusConfig buildStatusConfig() {
        if (buildStatusConfig == null) return null;
        return buildStatusConfig.getValue("ProjectSource.buildStatusConfig");
    }

    /**
     * Build specification to use for this build project&#39;s related builds. This must be set when
     * `type` is `NO_SOURCE`. Also, if a non-default buildspec file name or file path aside from the root is used, it must be
     * specified.
     * 
     */
    private @Nullable UndeferrableValue<String> buildspec;

    public @Nullable String buildspec() {
        if (buildspec == null) return null;
        return buildspec.getValue("ProjectSource.buildspec");
    }

    /**
     * Truncate git history to this many commits. Use `0` for a `Full` checkout which you need
     * to run commands like `git branch --show-current`.
     * See [AWS CodePipeline User Guide: Tutorial: Use full clone with a GitHub pipeline source](https://docs.aws.amazon.com/codepipeline/latest/userguide/tutorials-github-gitclone.html)
     * for details.
     * 
     */
    private @Nullable UndeferrableValue<Integer> gitCloneDepth;

    public @Nullable Integer gitCloneDepth() {
        if (gitCloneDepth == null) return null;
        return gitCloneDepth.getValue("ProjectSource.gitCloneDepth");
    }

    /**
     * Configuration block. Detailed below.
     * 
     */
    private @Nullable UndeferrableValue<ProjectSourceGitSubmodulesConfig> gitSubmodulesConfig;

    public @Nullable ProjectSourceGitSubmodulesConfig gitSubmodulesConfig() {
        if (gitSubmodulesConfig == null) return null;
        return gitSubmodulesConfig.getValue("ProjectSource.gitSubmodulesConfig");
    }

    /**
     * Ignore SSL warnings when connecting to source control.
     * 
     */
    private @Nullable UndeferrableValue<Boolean> insecureSsl;

    public @Nullable Boolean insecureSsl() {
        if (insecureSsl == null) return null;
        return insecureSsl.getValue("ProjectSource.insecureSsl");
    }

    /**
     * Location of the source code from git or s3.
     * 
     */
    private @Nullable UndeferrableValue<String> location;

    public @Nullable String location() {
        if (location == null) return null;
        return location.getValue("ProjectSource.location");
    }

    /**
     * Whether to report the status of a build&#39;s start and finish to your source provider.
     * This option is valid only when your source provider is GitHub, GitHub Enterprise, GitLab, GitLab Self Managed, or
     * Bitbucket.
     * 
     */
    private @Nullable UndeferrableValue<Boolean> reportBuildStatus;

    public @Nullable Boolean reportBuildStatus() {
        if (reportBuildStatus == null) return null;
        return reportBuildStatus.getValue("ProjectSource.reportBuildStatus");
    }

    /**
     * Type of repository that contains the source code to be built. Valid values: `BITBUCKET`,
     * `CODECOMMIT`, `CODEPIPELINE`, `GITHUB`, `GITHUB_ENTERPRISE`, `GITLAB`, `GITLAB_SELF_MANAGED`, `NO_SOURCE`, `S3`.
     * 
     */
    private UndeferrableValue<String> type;

    public String type() {
        if (type == null) return null;
        return type.getValue("ProjectSource.type");
    }

}
