// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.codebuild.outputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;


public final class ProjectLogsConfigS3Logs {

    /**
     * Specifies the bucket owner&#39;s access for objects that another account uploads to
     * their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these
     * objects. This property allows you to give the bucket owner access to these objects. Valid values are `NONE`,
     * `READ_ONLY`, and `FULL`. your CodeBuild service role must have the `s3:PutBucketAcl` permission. This permission
     * allows CodeBuild to modify the access control list for the bucket.
     * 
     */
    private @Nullable UndeferrableValue<String> bucketOwnerAccess;

    public @Nullable String bucketOwnerAccess() {
        if (bucketOwnerAccess == null) return null;
        return bucketOwnerAccess.getValue("ProjectLogsConfigS3Logs.bucketOwnerAccess");
    }

    /**
     * Whether to disable encrypting S3 logs. Defaults to `false`.
     * 
     */
    private @Nullable UndeferrableValue<Boolean> encryptionDisabled;

    public @Nullable Boolean encryptionDisabled() {
        if (encryptionDisabled == null) return null;
        return encryptionDisabled.getValue("ProjectLogsConfigS3Logs.encryptionDisabled");
    }

    /**
     * Name of the S3 bucket and the path prefix for S3 logs. Must be set if status is `ENABLED`,
     * otherwise it must be empty.
     * 
     */
    private @Nullable UndeferrableValue<String> location;

    public @Nullable String location() {
        if (location == null) return null;
        return location.getValue("ProjectLogsConfigS3Logs.location");
    }

    /**
     * Current status of logs in S3 for a build project. Valid values: `ENABLED`, `DISABLED`. Defaults
     * to `DISABLED`.
     * 
     */
    private @Nullable UndeferrableValue<String> status;

    public @Nullable String status() {
        if (status == null) return null;
        return status.getValue("ProjectLogsConfigS3Logs.status");
    }

}
