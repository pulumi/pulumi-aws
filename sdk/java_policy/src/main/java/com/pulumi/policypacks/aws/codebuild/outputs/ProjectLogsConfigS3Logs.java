// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.codebuild.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;


public final class ProjectLogsConfigS3Logs {

    /**
     * Specifies the bucket owner&#39;s access for objects that another account uploads to
     * their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these
     * objects. This property allows you to give the bucket owner access to these objects. Valid values are `NONE`,
     * `READ_ONLY`, and `FULL`. your CodeBuild service role must have the `s3:PutBucketAcl` permission. This permission
     * allows CodeBuild to modify the access control list for the bucket.
     * 
     */
    @PolicyResourceProperty(name="bucketOwnerAccess", flag="unknown_bucketOwnerAccess")
    private @Nullable String value_bucketOwnerAccess;
    private boolean unknown_bucketOwnerAccess;
    public @Nullable String bucketOwnerAccess() {
        if (!unknown_bucketOwnerAccess) return value_bucketOwnerAccess;
        throw new UndeferrableValueException("Value 'ProjectLogsConfigS3Logs.bucketOwnerAccess' is not present");
    }

    /**
     * Whether to disable encrypting S3 logs. Defaults to `false`.
     * 
     */
    @PolicyResourceProperty(name="encryptionDisabled", flag="unknown_encryptionDisabled")
    private @Nullable Boolean value_encryptionDisabled;
    private boolean unknown_encryptionDisabled;
    public @Nullable Boolean encryptionDisabled() {
        if (!unknown_encryptionDisabled) return value_encryptionDisabled;
        throw new UndeferrableValueException("Value 'ProjectLogsConfigS3Logs.encryptionDisabled' is not present");
    }

    /**
     * Name of the S3 bucket and the path prefix for S3 logs. Must be set if status is `ENABLED`,
     * otherwise it must be empty.
     * 
     */
    @PolicyResourceProperty(name="location", flag="unknown_location")
    private @Nullable String value_location;
    private boolean unknown_location;
    public @Nullable String location() {
        if (!unknown_location) return value_location;
        throw new UndeferrableValueException("Value 'ProjectLogsConfigS3Logs.location' is not present");
    }

    /**
     * Current status of logs in S3 for a build project. Valid values: `ENABLED`, `DISABLED`. Defaults
     * to `DISABLED`.
     * 
     */
    @PolicyResourceProperty(name="status", flag="unknown_status")
    private @Nullable String value_status;
    private boolean unknown_status;
    public @Nullable String status() {
        if (!unknown_status) return value_status;
        throw new UndeferrableValueException("Value 'ProjectLogsConfigS3Logs.status' is not present");
    }

}
