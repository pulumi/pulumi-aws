// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.alb.inputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.String;
import javax.annotation.Nullable;


public final class ListenerRuleActionRedirectArgs {

    /**
     * The hostname. This component is not percent-encoded. The hostname can contain `#{host}`. Defaults to `#{host}`.
     * 
     */
    private UndeferrableValue<String> host;

    public String host() {
        if (host == null) return null;
        return host.getValue("ListenerRuleActionRedirectArgs.host");
    }

    /**
     * The absolute path, starting with the leading &#34;/&#34;. This component is not percent-encoded. The path can contain #{host}, #{path}, and #{port}. Defaults to `/#{path}`.
     * 
     */
    private UndeferrableValue<String> path;

    public String path() {
        if (path == null) return null;
        return path.getValue("ListenerRuleActionRedirectArgs.path");
    }

    /**
     * The port. Specify a value from `1` to `65535` or `#{port}`. Defaults to `#{port}`.
     * 
     */
    private UndeferrableValue<String> port;

    public String port() {
        if (port == null) return null;
        return port.getValue("ListenerRuleActionRedirectArgs.port");
    }

    /**
     * The protocol. Valid values are `HTTP`, `HTTPS`, or `#{protocol}`. Defaults to `#{protocol}`.
     * 
     */
    private UndeferrableValue<String> protocol;

    public String protocol() {
        if (protocol == null) return null;
        return protocol.getValue("ListenerRuleActionRedirectArgs.protocol");
    }

    /**
     * The query parameters, URL-encoded when necessary, but not percent-encoded. Do not include the leading &#34;?&#34;. Defaults to `#{query}`.
     * 
     */
    private UndeferrableValue<String> query;

    public String query() {
        if (query == null) return null;
        return query.getValue("ListenerRuleActionRedirectArgs.query");
    }

    /**
     * The HTTP redirect code. The redirect is either permanent (`HTTP_301`) or temporary (`HTTP_302`).
     * 
     */
    private UndeferrableValue<String> statusCode;

    public String statusCode() {
        if (statusCode == null) return null;
        return statusCode.getValue("ListenerRuleActionRedirectArgs.statusCode");
    }

}
