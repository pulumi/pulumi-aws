// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.bedrock;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.bedrock.outputs.AgentAgentGuardrailConfiguration;
import com.pulumi.policypacks.aws.bedrock.outputs.AgentAgentMemoryConfiguration;
import com.pulumi.policypacks.aws.bedrock.outputs.AgentAgentPromptOverrideConfiguration;
import com.pulumi.policypacks.aws.bedrock.outputs.AgentAgentTimeouts;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:bedrock/agentAgent:AgentAgent")
public final class AgentAgent extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * ARN of the agent.
     * 
     */
    @PolicyResourceProperty(name="agentArn", flag="unknown_agentArn")
    private String value_agentArn;
    private boolean unknown_agentArn;
    public String agentArn() {
        if (!unknown_agentArn) return value_agentArn;
        throw new UndeferrableValueException("Value 'AgentAgent.agentArn' is not present");
    }

    /**
     * Agents collaboration role. Valid values: `SUPERVISOR`, `SUPERVISOR_ROUTER`, `DISABLED`.
     * 
     */
    @PolicyResourceProperty(name="agentCollaboration", flag="unknown_agentCollaboration")
    private String value_agentCollaboration;
    private boolean unknown_agentCollaboration;
    public String agentCollaboration() {
        if (!unknown_agentCollaboration) return value_agentCollaboration;
        throw new UndeferrableValueException("Value 'AgentAgent.agentCollaboration' is not present");
    }

    /**
     * Unique identifier of the agent.
     * 
     */
    @PolicyResourceProperty(name="agentId", flag="unknown_agentId")
    private String value_agentId;
    private boolean unknown_agentId;
    public String agentId() {
        if (!unknown_agentId) return value_agentId;
        throw new UndeferrableValueException("Value 'AgentAgent.agentId' is not present");
    }

    /**
     * Name of the agent.
     * 
     */
    @PolicyResourceProperty(name="agentName", flag="unknown_agentName")
    private String value_agentName;
    private boolean unknown_agentName;
    public String agentName() {
        if (!unknown_agentName) return value_agentName;
        throw new UndeferrableValueException("Value 'AgentAgent.agentName' is not present");
    }

    /**
     * ARN of the IAM role with permissions to invoke API operations on the agent.
     * 
     */
    @PolicyResourceProperty(name="agentResourceRoleArn", flag="unknown_agentResourceRoleArn")
    private String value_agentResourceRoleArn;
    private boolean unknown_agentResourceRoleArn;
    public String agentResourceRoleArn() {
        if (!unknown_agentResourceRoleArn) return value_agentResourceRoleArn;
        throw new UndeferrableValueException("Value 'AgentAgent.agentResourceRoleArn' is not present");
    }

    /**
     * Version of the agent.
     * 
     */
    @PolicyResourceProperty(name="agentVersion", flag="unknown_agentVersion")
    private String value_agentVersion;
    private boolean unknown_agentVersion;
    public String agentVersion() {
        if (!unknown_agentVersion) return value_agentVersion;
        throw new UndeferrableValueException("Value 'AgentAgent.agentVersion' is not present");
    }

    /**
     * ARN of the AWS KMS key that encrypts the agent.
     * 
     */
    @PolicyResourceProperty(name="customerEncryptionKeyArn", flag="unknown_customerEncryptionKeyArn")
    private @Nullable String value_customerEncryptionKeyArn;
    private boolean unknown_customerEncryptionKeyArn;
    public @Nullable String customerEncryptionKeyArn() {
        if (!unknown_customerEncryptionKeyArn) return value_customerEncryptionKeyArn;
        throw new UndeferrableValueException("Value 'AgentAgent.customerEncryptionKeyArn' is not present");
    }

    /**
     * Description of the agent.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private @Nullable String value_description;
    private boolean unknown_description;
    public @Nullable String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'AgentAgent.description' is not present");
    }

    /**
     * Foundation model used for orchestration by the agent.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="foundationModel", flag="unknown_foundationModel")
    private String value_foundationModel;
    private boolean unknown_foundationModel;
    public String foundationModel() {
        if (!unknown_foundationModel) return value_foundationModel;
        throw new UndeferrableValueException("Value 'AgentAgent.foundationModel' is not present");
    }

    /**
     * Details about the guardrail associated with the agent. See `guardrail_configuration` Block for details.
     * 
     */
    @PolicyResourceProperty(name="guardrailConfigurations", flag="unknown_guardrailConfigurations")
    private @Nullable List<AgentAgentGuardrailConfiguration> value_guardrailConfigurations;
    private boolean unknown_guardrailConfigurations;
    public @Nullable List<AgentAgentGuardrailConfiguration> guardrailConfigurations() {
        if (!unknown_guardrailConfigurations) return value_guardrailConfigurations;
        throw new UndeferrableValueException("Value 'AgentAgent.guardrailConfigurations' is not present");
    }

    /**
     * Number of seconds for which Amazon Bedrock keeps information about a user&#39;s conversation with the agent. A user interaction remains active for the amount of time specified. If no conversation occurs during this time, the session expires and Amazon Bedrock deletes any data provided before the timeout.
     * 
     */
    @PolicyResourceProperty(name="idleSessionTtlInSeconds", flag="unknown_idleSessionTtlInSeconds")
    private Integer value_idleSessionTtlInSeconds;
    private boolean unknown_idleSessionTtlInSeconds;
    public Integer idleSessionTtlInSeconds() {
        if (!unknown_idleSessionTtlInSeconds) return value_idleSessionTtlInSeconds;
        throw new UndeferrableValueException("Value 'AgentAgent.idleSessionTtlInSeconds' is not present");
    }

    /**
     * Instructions that tell the agent what it should do and how it should interact with users. The valid range is 40 - 8000 characters.
     * 
     */
    @PolicyResourceProperty(name="instruction", flag="unknown_instruction")
    private String value_instruction;
    private boolean unknown_instruction;
    public String instruction() {
        if (!unknown_instruction) return value_instruction;
        throw new UndeferrableValueException("Value 'AgentAgent.instruction' is not present");
    }

    /**
     * Configurations for the agent&#39;s ability to retain the conversational context.
     * 
     */
    @PolicyResourceProperty(name="memoryConfigurations", flag="unknown_memoryConfigurations")
    private List<AgentAgentMemoryConfiguration> value_memoryConfigurations;
    private boolean unknown_memoryConfigurations;
    public List<AgentAgentMemoryConfiguration> memoryConfigurations() {
        if (!unknown_memoryConfigurations) return value_memoryConfigurations;
        throw new UndeferrableValueException("Value 'AgentAgent.memoryConfigurations' is not present");
    }

    /**
     * Whether to prepare the agent after creation or modification. Defaults to `true`.
     * 
     */
    @PolicyResourceProperty(name="prepareAgent", flag="unknown_prepareAgent")
    private Boolean value_prepareAgent;
    private boolean unknown_prepareAgent;
    public Boolean prepareAgent() {
        if (!unknown_prepareAgent) return value_prepareAgent;
        throw new UndeferrableValueException("Value 'AgentAgent.prepareAgent' is not present");
    }

    /**
     * Configurations to override prompt templates in different parts of an agent sequence. For more information, see [Advanced prompts](https://docs.aws.amazon.com/bedrock/latest/userguide/advanced-prompts.html). See `prompt_override_configuration` Block for details.
     * 
     */
    @PolicyResourceProperty(name="promptOverrideConfigurations", flag="unknown_promptOverrideConfigurations")
    private List<AgentAgentPromptOverrideConfiguration> value_promptOverrideConfigurations;
    private boolean unknown_promptOverrideConfigurations;
    public List<AgentAgentPromptOverrideConfiguration> promptOverrideConfigurations() {
        if (!unknown_promptOverrideConfigurations) return value_promptOverrideConfigurations;
        throw new UndeferrableValueException("Value 'AgentAgent.promptOverrideConfigurations' is not present");
    }

    /**
     * Whether the in-use check is skipped when deleting the agent.
     * 
     */
    @PolicyResourceProperty(name="skipResourceInUseCheck", flag="unknown_skipResourceInUseCheck")
    private Boolean value_skipResourceInUseCheck;
    private boolean unknown_skipResourceInUseCheck;
    public Boolean skipResourceInUseCheck() {
        if (!unknown_skipResourceInUseCheck) return value_skipResourceInUseCheck;
        throw new UndeferrableValueException("Value 'AgentAgent.skipResourceInUseCheck' is not present");
    }

    /**
     * Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'AgentAgent.tags' is not present");
    }

    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'AgentAgent.tagsAll' is not present");
    }

    @PolicyResourceProperty(name="timeouts", flag="unknown_timeouts")
    private @Nullable AgentAgentTimeouts value_timeouts;
    private boolean unknown_timeouts;
    public @Nullable AgentAgentTimeouts timeouts() {
        if (!unknown_timeouts) return value_timeouts;
        throw new UndeferrableValueException("Value 'AgentAgent.timeouts' is not present");
    }

}
