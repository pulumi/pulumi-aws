// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.devicefarm;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:devicefarm/instanceProfile:InstanceProfile")
public final class InstanceProfileArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The description of the instance profile.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("InstanceProfileArgs.description");
    }

    /**
     * An array of strings that specifies the list of app packages that should not be cleaned up from the device after a test run.
     * 
     */
    private UndeferrableValue<List<String>> excludeAppPackagesFromCleanups;

    public List<String> excludeAppPackagesFromCleanups() {
        if (excludeAppPackagesFromCleanups == null) return null;
        return excludeAppPackagesFromCleanups.getValue("InstanceProfileArgs.excludeAppPackagesFromCleanups");
    }

    /**
     * The name for the instance profile.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("InstanceProfileArgs.name");
    }

    /**
     * When set to `true`, Device Farm removes app packages after a test run. The default value is `false` for private devices.
     * 
     */
    private UndeferrableValue<Boolean> packageCleanup;

    public Boolean packageCleanup() {
        if (packageCleanup == null) return null;
        return packageCleanup.getValue("InstanceProfileArgs.packageCleanup");
    }

    /**
     * When set to `true`, Device Farm reboots the instance after a test run. The default value is `true`.
     * 
     */
    private UndeferrableValue<Boolean> rebootAfterUse;

    public Boolean rebootAfterUse() {
        if (rebootAfterUse == null) return null;
        return rebootAfterUse.getValue("InstanceProfileArgs.rebootAfterUse");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("InstanceProfileArgs.tags");
    }

}
