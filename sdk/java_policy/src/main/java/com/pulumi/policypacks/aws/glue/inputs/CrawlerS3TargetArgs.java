// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.glue.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class CrawlerS3TargetArgs {

    /**
     * The name of a connection which allows crawler to access data in S3 within a VPC.
     * 
     */
    @PolicyResourceProperty(name="connectionName", flag="unknown_connectionName")
    private String value_connectionName;
    private boolean unknown_connectionName;
    public String connectionName() {
        if (!unknown_connectionName) return value_connectionName;
        throw new UndeferrableValueException("Value 'CrawlerS3TargetArgs.connectionName' is not present");
    }

    /**
     * The ARN of the dead-letter SQS queue.
     * 
     */
    @PolicyResourceProperty(name="dlqEventQueueArn", flag="unknown_dlqEventQueueArn")
    private String value_dlqEventQueueArn;
    private boolean unknown_dlqEventQueueArn;
    public String dlqEventQueueArn() {
        if (!unknown_dlqEventQueueArn) return value_dlqEventQueueArn;
        throw new UndeferrableValueException("Value 'CrawlerS3TargetArgs.dlqEventQueueArn' is not present");
    }

    /**
     * The ARN of the SQS queue to receive S3 notifications from.
     * 
     */
    @PolicyResourceProperty(name="eventQueueArn", flag="unknown_eventQueueArn")
    private String value_eventQueueArn;
    private boolean unknown_eventQueueArn;
    public String eventQueueArn() {
        if (!unknown_eventQueueArn) return value_eventQueueArn;
        throw new UndeferrableValueException("Value 'CrawlerS3TargetArgs.eventQueueArn' is not present");
    }

    /**
     * A list of glob patterns used to exclude from the crawl.
     * 
     */
    @PolicyResourceProperty(name="exclusions", flag="unknown_exclusions")
    private List<String> value_exclusions;
    private boolean unknown_exclusions;
    public List<String> exclusions() {
        if (!unknown_exclusions) return value_exclusions;
        throw new UndeferrableValueException("Value 'CrawlerS3TargetArgs.exclusions' is not present");
    }

    /**
     * The path to the Amazon S3 target.
     * 
     */
    @PolicyResourceProperty(name="path", flag="unknown_path")
    private String value_path;
    private boolean unknown_path;
    public String path() {
        if (!unknown_path) return value_path;
        throw new UndeferrableValueException("Value 'CrawlerS3TargetArgs.path' is not present");
    }

    /**
     * Sets the number of files in each leaf folder to be crawled when crawling sample files in a dataset. If not set, all the files are crawled. A valid value is an integer between 1 and 249.
     * 
     */
    @PolicyResourceProperty(name="sampleSize", flag="unknown_sampleSize")
    private Integer value_sampleSize;
    private boolean unknown_sampleSize;
    public Integer sampleSize() {
        if (!unknown_sampleSize) return value_sampleSize;
        throw new UndeferrableValueException("Value 'CrawlerS3TargetArgs.sampleSize' is not present");
    }

}
