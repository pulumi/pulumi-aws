// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ram;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ram/resourceShare:ResourceShare")
public final class ResourceShareArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Indicates whether principals outside your organization can be associated with a resource share.
     * 
     */
    private UndeferrableValue<Boolean> allowExternalPrincipals;

    public Boolean allowExternalPrincipals() {
        if (allowExternalPrincipals == null) return null;
        return allowExternalPrincipals.getValue("ResourceShareArgs.allowExternalPrincipals");
    }

    /**
     * The name of the resource share.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("ResourceShareArgs.name");
    }

    /**
     * Specifies the Amazon Resource Names (ARNs) of the RAM permission to associate with the resource share. If you do not specify an ARN for the permission, RAM automatically attaches the default version of the permission for each resource type. You can associate only one permission with each resource type included in the resource share.
     * 
     */
    private UndeferrableValue<List<String>> permissionArns;

    public List<String> permissionArns() {
        if (permissionArns == null) return null;
        return permissionArns.getValue("ResourceShareArgs.permissionArns");
    }

    /**
     * A map of tags to assign to the resource share. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("ResourceShareArgs.tags");
    }

}
