// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ses.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class ReceiptRuleS3ActionArgs {

    /**
     * The name of the S3 bucket
     * 
     */
    @PolicyResourceProperty(name="bucketName", flag="unknown_bucketName")
    private String value_bucketName;
    private boolean unknown_bucketName;
    public String bucketName() {
        if (!unknown_bucketName) return value_bucketName;
        throw new UndeferrableValueException("Value 'ReceiptRuleS3ActionArgs.bucketName' is not present");
    }

    /**
     * The ARN of the IAM role to be used by Amazon Simple Email Service while writing to the Amazon S3 bucket, optionally encrypting your mail via the provided customer managed key, and publishing to the Amazon SNS topic
     * 
     */
    @PolicyResourceProperty(name="iamRoleArn", flag="unknown_iamRoleArn")
    private String value_iamRoleArn;
    private boolean unknown_iamRoleArn;
    public String iamRoleArn() {
        if (!unknown_iamRoleArn) return value_iamRoleArn;
        throw new UndeferrableValueException("Value 'ReceiptRuleS3ActionArgs.iamRoleArn' is not present");
    }

    /**
     * The ARN of the KMS key
     * 
     */
    @PolicyResourceProperty(name="kmsKeyArn", flag="unknown_kmsKeyArn")
    private String value_kmsKeyArn;
    private boolean unknown_kmsKeyArn;
    public String kmsKeyArn() {
        if (!unknown_kmsKeyArn) return value_kmsKeyArn;
        throw new UndeferrableValueException("Value 'ReceiptRuleS3ActionArgs.kmsKeyArn' is not present");
    }

    /**
     * The key prefix of the S3 bucket
     * 
     */
    @PolicyResourceProperty(name="objectKeyPrefix", flag="unknown_objectKeyPrefix")
    private String value_objectKeyPrefix;
    private boolean unknown_objectKeyPrefix;
    public String objectKeyPrefix() {
        if (!unknown_objectKeyPrefix) return value_objectKeyPrefix;
        throw new UndeferrableValueException("Value 'ReceiptRuleS3ActionArgs.objectKeyPrefix' is not present");
    }

    /**
     * The position of the action in the receipt rule
     * 
     */
    @PolicyResourceProperty(name="position", flag="unknown_position")
    private Integer value_position;
    private boolean unknown_position;
    public Integer position() {
        if (!unknown_position) return value_position;
        throw new UndeferrableValueException("Value 'ReceiptRuleS3ActionArgs.position' is not present");
    }

    /**
     * The ARN of an SNS topic to notify
     * 
     */
    @PolicyResourceProperty(name="topicArn", flag="unknown_topicArn")
    private String value_topicArn;
    private boolean unknown_topicArn;
    public String topicArn() {
        if (!unknown_topicArn) return value_topicArn;
        throw new UndeferrableValueException("Value 'ReceiptRuleS3ActionArgs.topicArn' is not present");
    }

}
