// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2transitgateway;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ec2transitgateway/vpcAttachment:VpcAttachment")
public final class VpcAttachmentArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Whether Appliance Mode support is enabled. If enabled, a traffic flow between a source and destination uses the same Availability Zone for the VPC attachment for the lifetime of that flow. Valid values: `disable`, `enable`. Default value: `disable`.
     * 
     */
    private UndeferrableValue<String> applianceModeSupport;

    public String applianceModeSupport() {
        if (applianceModeSupport == null) return null;
        return applianceModeSupport.getValue("VpcAttachmentArgs.applianceModeSupport");
    }

    /**
     * Whether DNS support is enabled. Valid values: `disable`, `enable`. Default value: `enable`.
     * 
     */
    private UndeferrableValue<String> dnsSupport;

    public String dnsSupport() {
        if (dnsSupport == null) return null;
        return dnsSupport.getValue("VpcAttachmentArgs.dnsSupport");
    }

    /**
     * Whether IPv6 support is enabled. Valid values: `disable`, `enable`. Default value: `disable`.
     * 
     */
    private UndeferrableValue<String> ipv6Support;

    public String ipv6Support() {
        if (ipv6Support == null) return null;
        return ipv6Support.getValue("VpcAttachmentArgs.ipv6Support");
    }

    /**
     * Whether Security Group Referencing Support is enabled. Valid values: `disable`, `enable`.
     * 
     */
    private UndeferrableValue<String> securityGroupReferencingSupport;

    public String securityGroupReferencingSupport() {
        if (securityGroupReferencingSupport == null) return null;
        return securityGroupReferencingSupport.getValue("VpcAttachmentArgs.securityGroupReferencingSupport");
    }

    /**
     * Identifiers of EC2 Subnets.
     * 
     */
    private UndeferrableValue<List<String>> subnetIds;

    public List<String> subnetIds() {
        if (subnetIds == null) return null;
        return subnetIds.getValue("VpcAttachmentArgs.subnetIds");
    }

    /**
     * Key-value tags for the EC2 Transit Gateway VPC Attachment. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("VpcAttachmentArgs.tags");
    }

    /**
     * Boolean whether the VPC Attachment should be associated with the EC2 Transit Gateway association default route table. This cannot be configured or perform drift detection with Resource Access Manager shared EC2 Transit Gateways. Default value: `true`.
     * 
     */
    private UndeferrableValue<Boolean> transitGatewayDefaultRouteTableAssociation;

    public Boolean transitGatewayDefaultRouteTableAssociation() {
        if (transitGatewayDefaultRouteTableAssociation == null) return null;
        return transitGatewayDefaultRouteTableAssociation.getValue("VpcAttachmentArgs.transitGatewayDefaultRouteTableAssociation");
    }

    /**
     * Boolean whether the VPC Attachment should propagate routes with the EC2 Transit Gateway propagation default route table. This cannot be configured or perform drift detection with Resource Access Manager shared EC2 Transit Gateways. Default value: `true`.
     * 
     */
    private UndeferrableValue<Boolean> transitGatewayDefaultRouteTablePropagation;

    public Boolean transitGatewayDefaultRouteTablePropagation() {
        if (transitGatewayDefaultRouteTablePropagation == null) return null;
        return transitGatewayDefaultRouteTablePropagation.getValue("VpcAttachmentArgs.transitGatewayDefaultRouteTablePropagation");
    }

    /**
     * Identifier of EC2 Transit Gateway.
     * 
     */
    private UndeferrableValue<String> transitGatewayId;

    public String transitGatewayId() {
        if (transitGatewayId == null) return null;
        return transitGatewayId.getValue("VpcAttachmentArgs.transitGatewayId");
    }

    /**
     * Identifier of EC2 VPC.
     * 
     */
    private UndeferrableValue<String> vpcId;

    public String vpcId() {
        if (vpcId == null) return null;
        return vpcId.getValue("VpcAttachmentArgs.vpcId");
    }

}
