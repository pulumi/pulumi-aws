// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.apigatewayv2;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.apigatewayv2.inputs.IntegrationResponseParameterArgs;
import com.pulumi.policypacks.aws.apigatewayv2.inputs.IntegrationTlsConfigArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:apigatewayv2/integration:Integration")
public final class IntegrationArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * API identifier.
     * 
     */
    private UndeferrableValue<String> apiId;

    public String apiId() {
        if (apiId == null) return null;
        return apiId.getValue("IntegrationArgs.apiId");
    }

    /**
     * ID of the VPC link for a private integration. Supported only for HTTP APIs. Must be between 1 and 1024 characters in length.
     * 
     */
    private UndeferrableValue<String> connectionId;

    public String connectionId() {
        if (connectionId == null) return null;
        return connectionId.getValue("IntegrationArgs.connectionId");
    }

    /**
     * Type of the network connection to the integration endpoint. Valid values: `INTERNET`, `VPC_LINK`. Default is `INTERNET`.
     * 
     */
    private UndeferrableValue<String> connectionType;

    public String connectionType() {
        if (connectionType == null) return null;
        return connectionType.getValue("IntegrationArgs.connectionType");
    }

    /**
     * How to handle response payload content type conversions. Valid values: `CONVERT_TO_BINARY`, `CONVERT_TO_TEXT`. Supported only for WebSocket APIs.
     * 
     */
    private UndeferrableValue<String> contentHandlingStrategy;

    public String contentHandlingStrategy() {
        if (contentHandlingStrategy == null) return null;
        return contentHandlingStrategy.getValue("IntegrationArgs.contentHandlingStrategy");
    }

    /**
     * Credentials required for the integration, if any.
     * 
     */
    private UndeferrableValue<String> credentialsArn;

    public String credentialsArn() {
        if (credentialsArn == null) return null;
        return credentialsArn.getValue("IntegrationArgs.credentialsArn");
    }

    /**
     * Description of the integration.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("IntegrationArgs.description");
    }

    /**
     * Integration&#39;s HTTP method. Must be specified if `integration_type` is not `MOCK`.
     * 
     */
    private UndeferrableValue<String> integrationMethod;

    public String integrationMethod() {
        if (integrationMethod == null) return null;
        return integrationMethod.getValue("IntegrationArgs.integrationMethod");
    }

    /**
     * AWS service action to invoke. Supported only for HTTP APIs when `integration_type` is `AWS_PROXY`. See the [AWS service integration reference](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-integrations-aws-services-reference.html) documentation for supported values. Must be between 1 and 128 characters in length.
     * 
     */
    private UndeferrableValue<String> integrationSubtype;

    public String integrationSubtype() {
        if (integrationSubtype == null) return null;
        return integrationSubtype.getValue("IntegrationArgs.integrationSubtype");
    }

    /**
     * Integration type of an integration.
     * Valid values: `AWS` (supported only for WebSocket APIs), `AWS_PROXY`, `HTTP` (supported only for WebSocket APIs), `HTTP_PROXY`, `MOCK` (supported only for WebSocket APIs). For an HTTP API private integration, use `HTTP_PROXY`.
     * 
     */
    private UndeferrableValue<String> integrationType;

    public String integrationType() {
        if (integrationType == null) return null;
        return integrationType.getValue("IntegrationArgs.integrationType");
    }

    /**
     * URI of the Lambda function for a Lambda proxy integration, when `integration_type` is `AWS_PROXY`.
     * For an `HTTP` integration, specify a fully-qualified URL. For an HTTP API private integration, specify the ARN of an Application Load Balancer listener, Network Load Balancer listener, or AWS Cloud Map service.
     * 
     */
    private UndeferrableValue<String> integrationUri;

    public String integrationUri() {
        if (integrationUri == null) return null;
        return integrationUri.getValue("IntegrationArgs.integrationUri");
    }

    /**
     * Pass-through behavior for incoming requests based on the Content-Type header in the request, and the available mapping templates specified as the `request_templates` attribute.
     * Valid values: `WHEN_NO_MATCH`, `WHEN_NO_TEMPLATES`, `NEVER`. Default is `WHEN_NO_MATCH`. Supported only for WebSocket APIs.
     * 
     */
    private UndeferrableValue<String> passthroughBehavior;

    public String passthroughBehavior() {
        if (passthroughBehavior == null) return null;
        return passthroughBehavior.getValue("IntegrationArgs.passthroughBehavior");
    }

    /**
     * The [format of the payload](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-integrations-lambda.html#http-api-develop-integrations-lambda.proxy-format) sent to an integration. Valid values: `1.0`, `2.0`. Default is `1.0`.
     * 
     */
    private UndeferrableValue<String> payloadFormatVersion;

    public String payloadFormatVersion() {
        if (payloadFormatVersion == null) return null;
        return payloadFormatVersion.getValue("IntegrationArgs.payloadFormatVersion");
    }

    /**
     * For WebSocket APIs, a key-value map specifying request parameters that are passed from the method request to the backend.
     * For HTTP APIs with a specified `integration_subtype`, a key-value map specifying parameters that are passed to `AWS_PROXY` integrations.
     * For HTTP APIs without a specified `integration_subtype`, a key-value map specifying how to transform HTTP requests before sending them to the backend.
     * See the [Amazon API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-parameter-mapping.html) for details.
     * 
     */
    private UndeferrableValue<Map<String,String>> requestParameters;

    public Map<String,String> requestParameters() {
        if (requestParameters == null) return null;
        return requestParameters.getValue("IntegrationArgs.requestParameters");
    }

    /**
     * Map of [Velocity](https://velocity.apache.org/) templates that are applied on the request payload based on the value of the Content-Type header sent by the client. Supported only for WebSocket APIs.
     * 
     */
    private UndeferrableValue<Map<String,String>> requestTemplates;

    public Map<String,String> requestTemplates() {
        if (requestTemplates == null) return null;
        return requestTemplates.getValue("IntegrationArgs.requestTemplates");
    }

    /**
     * Mappings to transform the HTTP response from a backend integration before returning the response to clients. Supported only for HTTP APIs.
     * 
     */
    private UndeferrableValue<List<IntegrationResponseParameterArgs>> responseParameters;

    public List<IntegrationResponseParameterArgs> responseParameters() {
        if (responseParameters == null) return null;
        return responseParameters.getValue("IntegrationArgs.responseParameters");
    }

    /**
     * The [template selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-template-selection-expressions) for the integration.
     * 
     */
    private UndeferrableValue<String> templateSelectionExpression;

    public String templateSelectionExpression() {
        if (templateSelectionExpression == null) return null;
        return templateSelectionExpression.getValue("IntegrationArgs.templateSelectionExpression");
    }

    /**
     * Custom timeout between 50 and 29,000 milliseconds for WebSocket APIs and between 50 and 30,000 milliseconds for HTTP APIs.
     * The default timeout is 29 seconds for WebSocket APIs and 30 seconds for HTTP APIs.
     * this provider will only perform drift detection of its value when present in a configuration.
     * 
     */
    private UndeferrableValue<Integer> timeoutMilliseconds;

    public Integer timeoutMilliseconds() {
        if (timeoutMilliseconds == null) return null;
        return timeoutMilliseconds.getValue("IntegrationArgs.timeoutMilliseconds");
    }

    /**
     * TLS configuration for a private integration. Supported only for HTTP APIs.
     * 
     */
    private UndeferrableValue<IntegrationTlsConfigArgs> tlsConfig;

    public IntegrationTlsConfigArgs tlsConfig() {
        if (tlsConfig == null) return null;
        return tlsConfig.getValue("IntegrationArgs.tlsConfig");
    }

}
