// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.s3;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.s3.outputs.BucketV2CorsRule;
import com.pulumi.policypacks.aws.s3.outputs.BucketV2Grant;
import com.pulumi.policypacks.aws.s3.outputs.BucketV2LifecycleRule;
import com.pulumi.policypacks.aws.s3.outputs.BucketV2Logging;
import com.pulumi.policypacks.aws.s3.outputs.BucketV2ObjectLockConfiguration;
import com.pulumi.policypacks.aws.s3.outputs.BucketV2ReplicationConfiguration;
import com.pulumi.policypacks.aws.s3.outputs.BucketV2ServerSideEncryptionConfiguration;
import com.pulumi.policypacks.aws.s3.outputs.BucketV2Versioning;
import com.pulumi.policypacks.aws.s3.outputs.BucketV2Website;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:s3/bucketV2:BucketV2")
public final class BucketV2 extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Sets the accelerate configuration of an existing bucket. Can be `Enabled` or `Suspended`. Cannot be used in `cn-north-1` or `us-gov-west-1`. This provider will only perform drift detection if a configuration value is provided.
     * Use the resource `aws.s3.BucketAccelerateConfigurationV2` instead.
     * 
     * @deprecated
     * acceleration_status is deprecated. Use the aws.s3.BucketAccelerateConfigurationV2 resource instead.
     * 
     */
    @Deprecated /* acceleration_status is deprecated. Use the aws.s3.BucketAccelerateConfigurationV2 resource instead. */
    @PolicyResourceProperty(name="accelerationStatus", flag="unknown_accelerationStatus")
    private String value_accelerationStatus;
    private boolean unknown_accelerationStatus;
    public String accelerationStatus() {
        if (!unknown_accelerationStatus) return value_accelerationStatus;
        throw new UndeferrableValueException("Value 'BucketV2.accelerationStatus' is not present");
    }

    /**
     * The [canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) to apply. Valid values are `private`, `public-read`, `public-read-write`, `aws-exec-read`, `authenticated-read`, and `log-delivery-write`. Defaults to `private`.  Conflicts with `grant`. The provider will only perform drift detection if a configuration value is provided. Use the resource `aws.s3.BucketAclV2` instead.
     * 
     * @deprecated
     * acl is deprecated. Use the aws.s3.BucketAclV2 resource instead.
     * 
     */
    @Deprecated /* acl is deprecated. Use the aws.s3.BucketAclV2 resource instead. */
    @PolicyResourceProperty(name="acl", flag="unknown_acl")
    private String value_acl;
    private boolean unknown_acl;
    public String acl() {
        if (!unknown_acl) return value_acl;
        throw new UndeferrableValueException("Value 'BucketV2.acl' is not present");
    }

    /**
     * ARN of the bucket. Will be of format `arn:aws:s3:::bucketname`.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'BucketV2.arn' is not present");
    }

    /**
     * Name of the bucket. If omitted, the provider will assign a random, unique name. Must be lowercase and less than or equal to 63 characters in length. A full list of bucket naming rules [may be found here](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html). The name must not be in the format `[bucket_name]--[azid]--x-s3`. Use the `aws.s3.DirectoryBucket` resource to manage S3 Express buckets.
     * 
     */
    @PolicyResourceProperty(name="bucket", flag="unknown_bucket")
    private String value_bucket;
    private boolean unknown_bucket;
    public String bucket() {
        if (!unknown_bucket) return value_bucket;
        throw new UndeferrableValueException("Value 'BucketV2.bucket' is not present");
    }

    /**
     * Bucket domain name. Will be of format `bucketname.s3.amazonaws.com`.
     * 
     */
    @PolicyResourceProperty(name="bucketDomainName", flag="unknown_bucketDomainName")
    private String value_bucketDomainName;
    private boolean unknown_bucketDomainName;
    public String bucketDomainName() {
        if (!unknown_bucketDomainName) return value_bucketDomainName;
        throw new UndeferrableValueException("Value 'BucketV2.bucketDomainName' is not present");
    }

    /**
     * Creates a unique bucket name beginning with the specified prefix. Conflicts with `bucket`. Must be lowercase and less than or equal to 37 characters in length. A full list of bucket naming rules [may be found here](https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html).
     * 
     */
    @PolicyResourceProperty(name="bucketPrefix", flag="unknown_bucketPrefix")
    private String value_bucketPrefix;
    private boolean unknown_bucketPrefix;
    public String bucketPrefix() {
        if (!unknown_bucketPrefix) return value_bucketPrefix;
        throw new UndeferrableValueException("Value 'BucketV2.bucketPrefix' is not present");
    }

    /**
     * The bucket region-specific domain name. The bucket domain name including the region name. Please refer to the [S3 endpoints reference](https://docs.aws.amazon.com/general/latest/gr/s3.html#s3_region) for format. Note: AWS CloudFront allows specifying an S3 region-specific endpoint when creating an S3 origin. This will prevent redirect issues from CloudFront to the S3 Origin URL. For more information, see the [Virtual Hosted-Style Requests for Other Regions](https://docs.aws.amazon.com/AmazonS3/latest/userguide/VirtualHosting.html#deprecated-global-endpoint) section in the AWS S3 User Guide.
     * 
     */
    @PolicyResourceProperty(name="bucketRegionalDomainName", flag="unknown_bucketRegionalDomainName")
    private String value_bucketRegionalDomainName;
    private boolean unknown_bucketRegionalDomainName;
    public String bucketRegionalDomainName() {
        if (!unknown_bucketRegionalDomainName) return value_bucketRegionalDomainName;
        throw new UndeferrableValueException("Value 'BucketV2.bucketRegionalDomainName' is not present");
    }

    /**
     * Rule of [Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html). See CORS rule below for details. This provider will only perform drift detection if a configuration value is provided. Use the resource `aws.s3.BucketCorsConfigurationV2` instead.
     * 
     * @deprecated
     * cors_rule is deprecated. Use the aws.s3.BucketCorsConfigurationV2 resource instead.
     * 
     */
    @Deprecated /* cors_rule is deprecated. Use the aws.s3.BucketCorsConfigurationV2 resource instead. */
    @PolicyResourceProperty(name="corsRules", flag="unknown_corsRules")
    private List<BucketV2CorsRule> value_corsRules;
    private boolean unknown_corsRules;
    public List<BucketV2CorsRule> corsRules() {
        if (!unknown_corsRules) return value_corsRules;
        throw new UndeferrableValueException("Value 'BucketV2.corsRules' is not present");
    }

    /**
     * Boolean that indicates all objects (including any [locked objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html)) should be deleted from the bucket *when the bucket is destroyed* so that the bucket can be destroyed without error. These objects are *not* recoverable. This only deletes objects when the bucket is destroyed, *not* when setting this parameter to `true`. Once this parameter is set to `true`, there must be a successful `pulumi up` run before a destroy is required to update this value in the resource state. Without a successful `pulumi up` after this parameter is set, this flag will have no effect. If setting this field in the same operation that would require replacing the bucket or destroying the bucket, this flag will not work. Additionally when importing a bucket, a successful `pulumi up` is required to set this value in state before it will take effect on a destroy operation.
     * 
     */
    @PolicyResourceProperty(name="forceDestroy", flag="unknown_forceDestroy")
    private @Nullable Boolean value_forceDestroy;
    private boolean unknown_forceDestroy;
    public @Nullable Boolean forceDestroy() {
        if (!unknown_forceDestroy) return value_forceDestroy;
        throw new UndeferrableValueException("Value 'BucketV2.forceDestroy' is not present");
    }

    /**
     * An [ACL policy grant](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#sample-acl). See Grant below for details. Conflicts with `acl`. The provider will only perform drift detection if a configuration value is provided. Use the resource `aws.s3.BucketAclV2` instead.
     * 
     * @deprecated
     * grant is deprecated. Use the aws.s3.BucketAclV2 resource instead.
     * 
     */
    @Deprecated /* grant is deprecated. Use the aws.s3.BucketAclV2 resource instead. */
    @PolicyResourceProperty(name="grants", flag="unknown_grants")
    private List<BucketV2Grant> value_grants;
    private boolean unknown_grants;
    public List<BucketV2Grant> grants() {
        if (!unknown_grants) return value_grants;
        throw new UndeferrableValueException("Value 'BucketV2.grants' is not present");
    }

    /**
     * [Route 53 Hosted Zone ID](https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_website_region_endpoints) for this bucket&#39;s region.
     * 
     */
    @PolicyResourceProperty(name="hostedZoneId", flag="unknown_hostedZoneId")
    private String value_hostedZoneId;
    private boolean unknown_hostedZoneId;
    public String hostedZoneId() {
        if (!unknown_hostedZoneId) return value_hostedZoneId;
        throw new UndeferrableValueException("Value 'BucketV2.hostedZoneId' is not present");
    }

    /**
     * Configuration of [object lifecycle management](http://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html). See Lifecycle Rule below for details. The provider will only perform drift detection if a configuration value is provided.
     * Use the resource `aws.s3.BucketLifecycleConfigurationV2` instead.
     * 
     * @deprecated
     * lifecycle_rule is deprecated. Use the aws.s3.BucketLifecycleConfigurationV2 resource instead.
     * 
     */
    @Deprecated /* lifecycle_rule is deprecated. Use the aws.s3.BucketLifecycleConfigurationV2 resource instead. */
    @PolicyResourceProperty(name="lifecycleRules", flag="unknown_lifecycleRules")
    private List<BucketV2LifecycleRule> value_lifecycleRules;
    private boolean unknown_lifecycleRules;
    public List<BucketV2LifecycleRule> lifecycleRules() {
        if (!unknown_lifecycleRules) return value_lifecycleRules;
        throw new UndeferrableValueException("Value 'BucketV2.lifecycleRules' is not present");
    }

    /**
     * Configuration of [S3 bucket logging](https://docs.aws.amazon.com/AmazonS3/latest/UG/ManagingBucketLogging.html) parameters. See Logging below for details. The provider will only perform drift detection if a configuration value is provided.
     * Use the resource `aws.s3.BucketLoggingV2` instead.
     * 
     * @deprecated
     * logging is deprecated. Use the aws.s3.BucketLoggingV2 resource instead.
     * 
     */
    @Deprecated /* logging is deprecated. Use the aws.s3.BucketLoggingV2 resource instead. */
    @PolicyResourceProperty(name="loggings", flag="unknown_loggings")
    private List<BucketV2Logging> value_loggings;
    private boolean unknown_loggings;
    public List<BucketV2Logging> loggings() {
        if (!unknown_loggings) return value_loggings;
        throw new UndeferrableValueException("Value 'BucketV2.loggings' is not present");
    }

    /**
     * Configuration of [S3 object locking](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html). See Object Lock Configuration below for details.
     * The provider wil only perform drift detection if a configuration value is provided.
     * Use the `object_lock_enabled` parameter and the resource `aws.s3.BucketObjectLockConfigurationV2` instead.
     * 
     * @deprecated
     * object_lock_configuration is deprecated. Use the top-level parameter object_lock_enabled and the aws.s3.BucketObjectLockConfigurationV2 resource instead.
     * 
     */
    @Deprecated /* object_lock_configuration is deprecated. Use the top-level parameter object_lock_enabled and the aws.s3.BucketObjectLockConfigurationV2 resource instead. */
    @PolicyResourceProperty(name="objectLockConfiguration", flag="unknown_objectLockConfiguration")
    private BucketV2ObjectLockConfiguration value_objectLockConfiguration;
    private boolean unknown_objectLockConfiguration;
    public BucketV2ObjectLockConfiguration objectLockConfiguration() {
        if (!unknown_objectLockConfiguration) return value_objectLockConfiguration;
        throw new UndeferrableValueException("Value 'BucketV2.objectLockConfiguration' is not present");
    }

    /**
     * Indicates whether this bucket has an Object Lock configuration enabled. Valid values are `true` or `false`. This argument is not supported in all regions or partitions.
     * 
     */
    @PolicyResourceProperty(name="objectLockEnabled", flag="unknown_objectLockEnabled")
    private Boolean value_objectLockEnabled;
    private boolean unknown_objectLockEnabled;
    public Boolean objectLockEnabled() {
        if (!unknown_objectLockEnabled) return value_objectLockEnabled;
        throw new UndeferrableValueException("Value 'BucketV2.objectLockEnabled' is not present");
    }

    /**
     * Valid [bucket policy](https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html) JSON document. Note that if the policy document is not specific enough (but still valid), this provider may view the policy as constantly changing. In this case, please make sure you use the verbose/specific version of the policy. For more information about building AWS IAM policy documents with this provider, see the AWS IAM Policy Document Guide.
     * The provider will only perform drift detection if a configuration value is provided.
     * Use the resource `aws.s3.BucketPolicy` instead.
     * 
     * @deprecated
     * policy is deprecated. Use the aws.s3.BucketPolicy resource instead.
     * 
     */
    @Deprecated /* policy is deprecated. Use the aws.s3.BucketPolicy resource instead. */
    @PolicyResourceProperty(name="policy", flag="unknown_policy")
    private String value_policy;
    private boolean unknown_policy;
    public String policy() {
        if (!unknown_policy) return value_policy;
        throw new UndeferrableValueException("Value 'BucketV2.policy' is not present");
    }

    /**
     * AWS region this bucket resides in.
     * 
     */
    @PolicyResourceProperty(name="region", flag="unknown_region")
    private String value_region;
    private boolean unknown_region;
    public String region() {
        if (!unknown_region) return value_region;
        throw new UndeferrableValueException("Value 'BucketV2.region' is not present");
    }

    /**
     * Configuration of [replication configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/crr.html). See Replication Configuration below for details. The provider will only perform drift detection if a configuration value is provided.
     * Use the resource `aws.s3.BucketReplicationConfig` instead.
     * 
     * @deprecated
     * replication_configuration is deprecated. Use the aws.s3.BucketReplicationConfig resource instead.
     * 
     */
    @Deprecated /* replication_configuration is deprecated. Use the aws.s3.BucketReplicationConfig resource instead. */
    @PolicyResourceProperty(name="replicationConfigurations", flag="unknown_replicationConfigurations")
    private List<BucketV2ReplicationConfiguration> value_replicationConfigurations;
    private boolean unknown_replicationConfigurations;
    public List<BucketV2ReplicationConfiguration> replicationConfigurations() {
        if (!unknown_replicationConfigurations) return value_replicationConfigurations;
        throw new UndeferrableValueException("Value 'BucketV2.replicationConfigurations' is not present");
    }

    /**
     * Specifies who should bear the cost of Amazon S3 data transfer.
     * Can be either `BucketOwner` or `Requester`. By default, the owner of the S3 bucket would incur the costs of any data transfer.
     * See [Requester Pays Buckets](http://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html) developer guide for more information.
     * The provider will only perform drift detection if a configuration value is provided.
     * Use the resource `aws.s3.BucketRequestPaymentConfigurationV2` instead.
     * 
     * @deprecated
     * request_payer is deprecated. Use the aws.s3.BucketRequestPaymentConfigurationV2 resource instead.
     * 
     */
    @Deprecated /* request_payer is deprecated. Use the aws.s3.BucketRequestPaymentConfigurationV2 resource instead. */
    @PolicyResourceProperty(name="requestPayer", flag="unknown_requestPayer")
    private String value_requestPayer;
    private boolean unknown_requestPayer;
    public String requestPayer() {
        if (!unknown_requestPayer) return value_requestPayer;
        throw new UndeferrableValueException("Value 'BucketV2.requestPayer' is not present");
    }

    /**
     * Configuration of [server-side encryption configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html). See Server Side Encryption Configuration below for details.
     * The provider will only perform drift detection if a configuration value is provided.
     * Use the resource `aws.s3.BucketServerSideEncryptionConfigurationV2` instead.
     * 
     * @deprecated
     * server_side_encryption_configuration is deprecated. Use the aws.s3.BucketServerSideEncryptionConfigurationV2 resource instead.
     * 
     */
    @Deprecated /* server_side_encryption_configuration is deprecated. Use the aws.s3.BucketServerSideEncryptionConfigurationV2 resource instead. */
    @PolicyResourceProperty(name="serverSideEncryptionConfigurations", flag="unknown_serverSideEncryptionConfigurations")
    private List<BucketV2ServerSideEncryptionConfiguration> value_serverSideEncryptionConfigurations;
    private boolean unknown_serverSideEncryptionConfigurations;
    public List<BucketV2ServerSideEncryptionConfiguration> serverSideEncryptionConfigurations() {
        if (!unknown_serverSideEncryptionConfigurations) return value_serverSideEncryptionConfigurations;
        throw new UndeferrableValueException("Value 'BucketV2.serverSideEncryptionConfigurations' is not present");
    }

    /**
     * Map of tags to assign to the bucket. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     * The following arguments are deprecated, and will be removed in a future major version:
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'BucketV2.tags' is not present");
    }

    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'BucketV2.tagsAll' is not present");
    }

    /**
     * Configuration of the [S3 bucket versioning state](https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html). See Versioning below for details. The provider will only perform drift detection if a configuration value is provided. Use the resource `aws.s3.BucketVersioningV2` instead.
     * 
     * @deprecated
     * versioning is deprecated. Use the aws.s3.BucketVersioningV2 resource instead.
     * 
     */
    @Deprecated /* versioning is deprecated. Use the aws.s3.BucketVersioningV2 resource instead. */
    @PolicyResourceProperty(name="versionings", flag="unknown_versionings")
    private List<BucketV2Versioning> value_versionings;
    private boolean unknown_versionings;
    public List<BucketV2Versioning> versionings() {
        if (!unknown_versionings) return value_versionings;
        throw new UndeferrableValueException("Value 'BucketV2.versionings' is not present");
    }

    /**
     * (**Deprecated**) Domain of the website endpoint, if the bucket is configured with a website. If not, this will be an empty string. This is used to create Route 53 alias records. Use the resource `aws.s3.BucketWebsiteConfigurationV2` instead.
     * 
     * @deprecated
     * website_domain is deprecated. Use the aws.s3.BucketWebsiteConfigurationV2 resource instead.
     * 
     */
    @Deprecated /* website_domain is deprecated. Use the aws.s3.BucketWebsiteConfigurationV2 resource instead. */
    @PolicyResourceProperty(name="websiteDomain", flag="unknown_websiteDomain")
    private String value_websiteDomain;
    private boolean unknown_websiteDomain;
    public String websiteDomain() {
        if (!unknown_websiteDomain) return value_websiteDomain;
        throw new UndeferrableValueException("Value 'BucketV2.websiteDomain' is not present");
    }

    /**
     * (**Deprecated**) Website endpoint, if the bucket is configured with a website. If not, this will be an empty string. Use the resource `aws.s3.BucketWebsiteConfigurationV2` instead.
     * 
     * @deprecated
     * website_endpoint is deprecated. Use the aws.s3.BucketWebsiteConfigurationV2 resource instead.
     * 
     */
    @Deprecated /* website_endpoint is deprecated. Use the aws.s3.BucketWebsiteConfigurationV2 resource instead. */
    @PolicyResourceProperty(name="websiteEndpoint", flag="unknown_websiteEndpoint")
    private String value_websiteEndpoint;
    private boolean unknown_websiteEndpoint;
    public String websiteEndpoint() {
        if (!unknown_websiteEndpoint) return value_websiteEndpoint;
        throw new UndeferrableValueException("Value 'BucketV2.websiteEndpoint' is not present");
    }

    /**
     * Configuration of the [S3 bucket website](https://docs.aws.amazon.com/AmazonS3/latest/userguide/WebsiteHosting.html). See Website below for details. The provider will only perform drift detection if a configuration value is provided.
     * Use the resource `aws.s3.BucketWebsiteConfigurationV2` instead.
     * 
     * @deprecated
     * website is deprecated. Use the aws.s3.BucketWebsiteConfigurationV2 resource instead.
     * 
     */
    @Deprecated /* website is deprecated. Use the aws.s3.BucketWebsiteConfigurationV2 resource instead. */
    @PolicyResourceProperty(name="websites", flag="unknown_websites")
    private List<BucketV2Website> value_websites;
    private boolean unknown_websites;
    public List<BucketV2Website> websites() {
        if (!unknown_websites) return value_websites;
        throw new UndeferrableValueException("Value 'BucketV2.websites' is not present");
    }

}
