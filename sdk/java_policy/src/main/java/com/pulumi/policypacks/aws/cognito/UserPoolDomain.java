// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.cognito;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:cognito/userPoolDomain:UserPoolDomain")
public final class UserPoolDomain extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The AWS account ID for the user pool owner.
     * 
     */
    @PolicyResourceProperty(name="awsAccountId", flag="unknown_awsAccountId")
    private String value_awsAccountId;
    private boolean unknown_awsAccountId;
    public String awsAccountId() {
        if (!unknown_awsAccountId) return value_awsAccountId;
        throw new UndeferrableValueException("Value 'UserPoolDomain.awsAccountId' is not present");
    }

    /**
     * The ARN of an ISSUED ACM certificate in us-east-1 for a custom domain.
     * 
     */
    @PolicyResourceProperty(name="certificateArn", flag="unknown_certificateArn")
    private @Nullable String value_certificateArn;
    private boolean unknown_certificateArn;
    public @Nullable String certificateArn() {
        if (!unknown_certificateArn) return value_certificateArn;
        throw new UndeferrableValueException("Value 'UserPoolDomain.certificateArn' is not present");
    }

    /**
     * The Amazon CloudFront endpoint (e.g. `dpp0gtxikpq3y.cloudfront.net`) that you use as the target of the alias that you set up with your Domain Name Service (DNS) provider.
     * 
     */
    @PolicyResourceProperty(name="cloudfrontDistribution", flag="unknown_cloudfrontDistribution")
    private String value_cloudfrontDistribution;
    private boolean unknown_cloudfrontDistribution;
    public String cloudfrontDistribution() {
        if (!unknown_cloudfrontDistribution) return value_cloudfrontDistribution;
        throw new UndeferrableValueException("Value 'UserPoolDomain.cloudfrontDistribution' is not present");
    }

    /**
     * The URL of the CloudFront distribution. This is required to generate the ALIAS `aws.route53.Record`
     * 
     */
    @PolicyResourceProperty(name="cloudfrontDistributionArn", flag="unknown_cloudfrontDistributionArn")
    private String value_cloudfrontDistributionArn;
    private boolean unknown_cloudfrontDistributionArn;
    public String cloudfrontDistributionArn() {
        if (!unknown_cloudfrontDistributionArn) return value_cloudfrontDistributionArn;
        throw new UndeferrableValueException("Value 'UserPoolDomain.cloudfrontDistributionArn' is not present");
    }

    /**
     * The Route 53 hosted zone ID of the CloudFront distribution.
     * 
     */
    @PolicyResourceProperty(name="cloudfrontDistributionZoneId", flag="unknown_cloudfrontDistributionZoneId")
    private String value_cloudfrontDistributionZoneId;
    private boolean unknown_cloudfrontDistributionZoneId;
    public String cloudfrontDistributionZoneId() {
        if (!unknown_cloudfrontDistributionZoneId) return value_cloudfrontDistributionZoneId;
        throw new UndeferrableValueException("Value 'UserPoolDomain.cloudfrontDistributionZoneId' is not present");
    }

    /**
     * For custom domains, this is the fully-qualified domain name, such as auth.example.com. For Amazon Cognito prefix domains, this is the prefix alone, such as auth.
     * 
     */
    @PolicyResourceProperty(name="domain", flag="unknown_domain")
    private String value_domain;
    private boolean unknown_domain;
    public String domain() {
        if (!unknown_domain) return value_domain;
        throw new UndeferrableValueException("Value 'UserPoolDomain.domain' is not present");
    }

    /**
     * The S3 bucket where the static files for this domain are stored.
     * 
     */
    @PolicyResourceProperty(name="s3Bucket", flag="unknown_s3Bucket")
    private String value_s3Bucket;
    private boolean unknown_s3Bucket;
    public String s3Bucket() {
        if (!unknown_s3Bucket) return value_s3Bucket;
        throw new UndeferrableValueException("Value 'UserPoolDomain.s3Bucket' is not present");
    }

    /**
     * The user pool ID.
     * 
     */
    @PolicyResourceProperty(name="userPoolId", flag="unknown_userPoolId")
    private String value_userPoolId;
    private boolean unknown_userPoolId;
    public String userPoolId() {
        if (!unknown_userPoolId) return value_userPoolId;
        throw new UndeferrableValueException("Value 'UserPoolDomain.userPoolId' is not present");
    }

    /**
     * The app version.
     * 
     */
    @PolicyResourceProperty(name="version", flag="unknown_version")
    private String value_version;
    private boolean unknown_version;
    public String version() {
        if (!unknown_version) return value_version;
        throw new UndeferrableValueException("Value 'UserPoolDomain.version' is not present");
    }

}
