// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appautoscaling.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.appautoscaling.outputs.PolicyStepScalingPolicyConfigurationStepAdjustment;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class PolicyStepScalingPolicyConfiguration {

    /**
     * Whether the adjustment is an absolute number or a percentage of the current capacity. Valid values are `ChangeInCapacity`, `ExactCapacity`, and `PercentChangeInCapacity`.
     * 
     */
    @PolicyResourceProperty(name="adjustmentType", flag="unknown_adjustmentType")
    private @Nullable String value_adjustmentType;
    private boolean unknown_adjustmentType;
    public @Nullable String adjustmentType() {
        if (!unknown_adjustmentType) return value_adjustmentType;
        throw new UndeferrableValueException("Value 'PolicyStepScalingPolicyConfiguration.adjustmentType' is not present");
    }

    /**
     * Amount of time, in seconds, after a scaling activity completes and before the next scaling activity can start.
     * 
     */
    @PolicyResourceProperty(name="cooldown", flag="unknown_cooldown")
    private @Nullable Integer value_cooldown;
    private boolean unknown_cooldown;
    public @Nullable Integer cooldown() {
        if (!unknown_cooldown) return value_cooldown;
        throw new UndeferrableValueException("Value 'PolicyStepScalingPolicyConfiguration.cooldown' is not present");
    }

    /**
     * Aggregation type for the policy&#39;s metrics. Valid values are &#34;Minimum&#34;, &#34;Maximum&#34;, and &#34;Average&#34;. Without a value, AWS will treat the aggregation type as &#34;Average&#34;.
     * 
     */
    @PolicyResourceProperty(name="metricAggregationType", flag="unknown_metricAggregationType")
    private @Nullable String value_metricAggregationType;
    private boolean unknown_metricAggregationType;
    public @Nullable String metricAggregationType() {
        if (!unknown_metricAggregationType) return value_metricAggregationType;
        throw new UndeferrableValueException("Value 'PolicyStepScalingPolicyConfiguration.metricAggregationType' is not present");
    }

    /**
     * Minimum number to adjust your scalable dimension as a result of a scaling activity. If the adjustment type is PercentChangeInCapacity, the scaling policy changes the scalable dimension of the scalable target by this amount.
     * 
     */
    @PolicyResourceProperty(name="minAdjustmentMagnitude", flag="unknown_minAdjustmentMagnitude")
    private @Nullable Integer value_minAdjustmentMagnitude;
    private boolean unknown_minAdjustmentMagnitude;
    public @Nullable Integer minAdjustmentMagnitude() {
        if (!unknown_minAdjustmentMagnitude) return value_minAdjustmentMagnitude;
        throw new UndeferrableValueException("Value 'PolicyStepScalingPolicyConfiguration.minAdjustmentMagnitude' is not present");
    }

    /**
     * Set of adjustments that manage scaling. These have the following structure:
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.appautoscaling.Policy;
     * import com.pulumi.aws.appautoscaling.PolicyArgs;
     * import com.pulumi.aws.appautoscaling.inputs.PolicyStepScalingPolicyConfigurationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var ecsPolicy = new Policy("ecsPolicy", PolicyArgs.builder()
     *             .stepScalingPolicyConfiguration(PolicyStepScalingPolicyConfigurationArgs.builder()
     *                 .stepAdjustments(                
     *                     PolicyStepScalingPolicyConfigurationStepAdjustmentArgs.builder()
     *                         .metricIntervalLowerBound("1")
     *                         .metricIntervalUpperBound("2")
     *                         .scalingAdjustment(-1)
     *                         .build(),
     *                     PolicyStepScalingPolicyConfigurationStepAdjustmentArgs.builder()
     *                         .metricIntervalLowerBound("2")
     *                         .metricIntervalUpperBound("3")
     *                         .scalingAdjustment(1)
     *                         .build())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    @PolicyResourceProperty(name="stepAdjustments", flag="unknown_stepAdjustments")
    private @Nullable List<PolicyStepScalingPolicyConfigurationStepAdjustment> value_stepAdjustments;
    private boolean unknown_stepAdjustments;
    public @Nullable List<PolicyStepScalingPolicyConfigurationStepAdjustment> stepAdjustments() {
        if (!unknown_stepAdjustments) return value_stepAdjustments;
        throw new UndeferrableValueException("Value 'PolicyStepScalingPolicyConfiguration.stepAdjustments' is not present");
    }

}
