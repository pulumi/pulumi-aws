// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.cloudtrail.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.cloudtrail.inputs.TrailEventSelectorDataResourceArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class TrailEventSelectorArgs {

    /**
     * Configuration block for data events. See details below.
     * 
     */
    @PolicyResourceProperty(name="dataResources", flag="unknown_dataResources")
    private List<TrailEventSelectorDataResourceArgs> value_dataResources;
    private boolean unknown_dataResources;
    public List<TrailEventSelectorDataResourceArgs> dataResources() {
        if (!unknown_dataResources) return value_dataResources;
        throw new UndeferrableValueException("Value 'TrailEventSelectorArgs.dataResources' is not present");
    }

    /**
     * A set of event sources to exclude. Valid values include: `kms.amazonaws.com` and `rdsdata.amazonaws.com`. `include_management_events` must be set to`true` to allow this.
     * 
     */
    @PolicyResourceProperty(name="excludeManagementEventSources", flag="unknown_excludeManagementEventSources")
    private List<String> value_excludeManagementEventSources;
    private boolean unknown_excludeManagementEventSources;
    public List<String> excludeManagementEventSources() {
        if (!unknown_excludeManagementEventSources) return value_excludeManagementEventSources;
        throw new UndeferrableValueException("Value 'TrailEventSelectorArgs.excludeManagementEventSources' is not present");
    }

    /**
     * Whether to include management events for your trail. Defaults to `true`.
     * 
     */
    @PolicyResourceProperty(name="includeManagementEvents", flag="unknown_includeManagementEvents")
    private Boolean value_includeManagementEvents;
    private boolean unknown_includeManagementEvents;
    public Boolean includeManagementEvents() {
        if (!unknown_includeManagementEvents) return value_includeManagementEvents;
        throw new UndeferrableValueException("Value 'TrailEventSelectorArgs.includeManagementEvents' is not present");
    }

    /**
     * Type of events to log. Valid values are `ReadOnly`, `WriteOnly`, `All`. Default value is `All`.
     * 
     */
    @PolicyResourceProperty(name="readWriteType", flag="unknown_readWriteType")
    private String value_readWriteType;
    private boolean unknown_readWriteType;
    public String readWriteType() {
        if (!unknown_readWriteType) return value_readWriteType;
        throw new UndeferrableValueException("Value 'TrailEventSelectorArgs.readWriteType' is not present");
    }

}
