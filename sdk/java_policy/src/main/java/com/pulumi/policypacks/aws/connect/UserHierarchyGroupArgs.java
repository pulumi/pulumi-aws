// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.connect;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:connect/userHierarchyGroup:UserHierarchyGroup")
public final class UserHierarchyGroupArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Specifies the identifier of the hosting Amazon Connect Instance.
     * 
     */
    @PolicyResourceProperty(name="instanceId", flag="unknown_instanceId")
    private String value_instanceId;
    private boolean unknown_instanceId;
    public String instanceId() {
        if (!unknown_instanceId) return value_instanceId;
        throw new UndeferrableValueException("Value 'UserHierarchyGroupArgs.instanceId' is not present");
    }

    /**
     * The name of the user hierarchy group. Must not be more than 100 characters.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'UserHierarchyGroupArgs.name' is not present");
    }

    /**
     * The identifier for the parent hierarchy group. The user hierarchy is created at level one if the parent group ID is null.
     * 
     */
    @PolicyResourceProperty(name="parentGroupId", flag="unknown_parentGroupId")
    private String value_parentGroupId;
    private boolean unknown_parentGroupId;
    public String parentGroupId() {
        if (!unknown_parentGroupId) return value_parentGroupId;
        throw new UndeferrableValueException("Value 'UserHierarchyGroupArgs.parentGroupId' is not present");
    }

    /**
     * Tags to apply to the hierarchy group. If configured with a provider
     * `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'UserHierarchyGroupArgs.tags' is not present");
    }

}
