// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.s3.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.s3.outputs.BucketReplicationConfigurationRuleDestination;
import com.pulumi.policypacks.aws.s3.outputs.BucketReplicationConfigurationRuleFilter;
import com.pulumi.policypacks.aws.s3.outputs.BucketReplicationConfigurationRuleSourceSelectionCriteria;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class BucketReplicationConfigurationRule {

    /**
     * Whether delete markers are replicated. The only valid value is `Enabled`. To disable, omit this argument. This argument is only valid with V2 replication configurations (i.e., when `filter` is used).
     * 
     */
    @PolicyResourceProperty(name="deleteMarkerReplicationStatus", flag="unknown_deleteMarkerReplicationStatus")
    private @Nullable String value_deleteMarkerReplicationStatus;
    private boolean unknown_deleteMarkerReplicationStatus;
    public @Nullable String deleteMarkerReplicationStatus() {
        if (!unknown_deleteMarkerReplicationStatus) return value_deleteMarkerReplicationStatus;
        throw new UndeferrableValueException("Value 'BucketReplicationConfigurationRule.deleteMarkerReplicationStatus' is not present");
    }

    /**
     * Specifies the destination for the rule (documented below).
     * 
     */
    @PolicyResourceProperty(name="destination", flag="unknown_destination")
    private BucketReplicationConfigurationRuleDestination value_destination;
    private boolean unknown_destination;
    public BucketReplicationConfigurationRuleDestination destination() {
        if (!unknown_destination) return value_destination;
        throw new UndeferrableValueException("Value 'BucketReplicationConfigurationRule.destination' is not present");
    }

    /**
     * Filter that identifies subset of objects to which the replication rule applies (documented below).
     * 
     */
    @PolicyResourceProperty(name="filter", flag="unknown_filter")
    private @Nullable BucketReplicationConfigurationRuleFilter value_filter;
    private boolean unknown_filter;
    public @Nullable BucketReplicationConfigurationRuleFilter filter() {
        if (!unknown_filter) return value_filter;
        throw new UndeferrableValueException("Value 'BucketReplicationConfigurationRule.filter' is not present");
    }

    /**
     * Unique identifier for the rule. Must be less than or equal to 255 characters in length.
     * 
     */
    @PolicyResourceProperty(name="id", flag="unknown_id")
    private @Nullable String value_id;
    private boolean unknown_id;
    public @Nullable String id() {
        if (!unknown_id) return value_id;
        throw new UndeferrableValueException("Value 'BucketReplicationConfigurationRule.id' is not present");
    }

    /**
     * Object keyname prefix identifying one or more objects to which the rule applies. Must be less than or equal to 1024 characters in length.
     * 
     */
    @PolicyResourceProperty(name="prefix", flag="unknown_prefix")
    private @Nullable String value_prefix;
    private boolean unknown_prefix;
    public @Nullable String prefix() {
        if (!unknown_prefix) return value_prefix;
        throw new UndeferrableValueException("Value 'BucketReplicationConfigurationRule.prefix' is not present");
    }

    /**
     * The priority associated with the rule. Priority should only be set if `filter` is configured. If not provided, defaults to `0`. Priority must be unique between multiple rules.
     * 
     */
    @PolicyResourceProperty(name="priority", flag="unknown_priority")
    private @Nullable Integer value_priority;
    private boolean unknown_priority;
    public @Nullable Integer priority() {
        if (!unknown_priority) return value_priority;
        throw new UndeferrableValueException("Value 'BucketReplicationConfigurationRule.priority' is not present");
    }

    /**
     * Specifies special object selection criteria (documented below).
     * 
     */
    @PolicyResourceProperty(name="sourceSelectionCriteria", flag="unknown_sourceSelectionCriteria")
    private @Nullable BucketReplicationConfigurationRuleSourceSelectionCriteria value_sourceSelectionCriteria;
    private boolean unknown_sourceSelectionCriteria;
    public @Nullable BucketReplicationConfigurationRuleSourceSelectionCriteria sourceSelectionCriteria() {
        if (!unknown_sourceSelectionCriteria) return value_sourceSelectionCriteria;
        throw new UndeferrableValueException("Value 'BucketReplicationConfigurationRule.sourceSelectionCriteria' is not present");
    }

    /**
     * The status of the rule. Either `Enabled` or `Disabled`. The rule is ignored if status is not Enabled.
     * 
     * &gt; **NOTE:** Replication to multiple destination buckets requires that `priority` is specified in the `rules` object. If the corresponding rule requires no filter, an empty configuration block `filter {}` must be specified.
     * 
     */
    @PolicyResourceProperty(name="status", flag="unknown_status")
    private String value_status;
    private boolean unknown_status;
    public String status() {
        if (!unknown_status) return value_status;
        throw new UndeferrableValueException("Value 'BucketReplicationConfigurationRule.status' is not present");
    }

}
