// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.vpclattice;

import com.pulumi.policypacks.aws.vpclattice.TargetGroupConfigHealthCheckMatcher;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;


public final class TargetGroupConfigHealthCheck {

    /**
     * Indicates whether health checking is enabled. Defaults to `true`.
     * 
     */
    public Boolean enabled;



    /**
     * The approximate amount of time, in seconds, between health checks of an individual target. The range is 5–300 seconds. The default is 30 seconds.
     * 
     */
    public Integer healthCheckIntervalSeconds;



    /**
     * The amount of time, in seconds, to wait before reporting a target as unhealthy. The range is 1–120 seconds. The default is 5 seconds.
     * * ` healthy_threshold_count  ` - (Optional) The number of consecutive successful health checks required before considering an unhealthy target healthy. The range is 2–10. The default is 5.
     * 
     */
    public Integer healthCheckTimeoutSeconds;



    public Integer healthyThresholdCount;



    /**
     * The codes to use when checking for a successful response from a target. These are called _Success codes_ in the console.
     * 
     */
    public TargetGroupConfigHealthCheckMatcher matcher;



    /**
     * The destination for health checks on the targets. If the protocol version is HTTP/1.1 or HTTP/2, specify a valid URI (for example, /path?query). The default path is `/`. Health checks are not supported if the protocol version is gRPC, however, you can choose HTTP/1.1 or HTTP/2 and specify a valid URI.
     * 
     */
    public String path;



    /**
     * The port used when performing health checks on targets. The default setting is the port that a target receives traffic on.
     * 
     */
    public Integer port;



    /**
     * The protocol used when performing health checks on targets. The possible protocols are `HTTP` and `HTTPS`.
     * 
     */
    public String protocol;



    /**
     * The protocol version used when performing health checks on targets. The possible protocol versions are `HTTP1` and `HTTP2`. The default is `HTTP1`.
     * 
     */
    public String protocolVersion;



    /**
     * The number of consecutive failed health checks required before considering a target unhealthy. The range is 2–10. The default is 2.
     * 
     */
    public Integer unhealthyThresholdCount;



}
