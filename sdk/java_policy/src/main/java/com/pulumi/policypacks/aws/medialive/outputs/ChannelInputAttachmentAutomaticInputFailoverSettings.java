// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.medialive.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.medialive.outputs.ChannelInputAttachmentAutomaticInputFailoverSettingsFailoverCondition;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class ChannelInputAttachmentAutomaticInputFailoverSettings {

    /**
     * This clear time defines the requirement a recovered input must meet to be considered healthy. The input must have no failover conditions for this length of time. Enter a time in milliseconds. This value is particularly important if the input\_preference for the failover pair is set to PRIMARY\_INPUT\_PREFERRED, because after this time, MediaLive will switch back to the primary input.
     * 
     */
    private @Nullable UndeferrableValue<Integer> errorClearTimeMsec;

    public @Nullable Integer errorClearTimeMsec() {
        if (errorClearTimeMsec == null) return null;
        return errorClearTimeMsec.getValue("ChannelInputAttachmentAutomaticInputFailoverSettings.errorClearTimeMsec");
    }

    /**
     * A list of failover conditions. If any of these conditions occur, MediaLive will perform a failover to the other input. See Failover Condition Block for more details.
     * 
     */
    private @Nullable UndeferrableValue<List<ChannelInputAttachmentAutomaticInputFailoverSettingsFailoverCondition>> failoverConditions;

    public @Nullable List<ChannelInputAttachmentAutomaticInputFailoverSettingsFailoverCondition> failoverConditions() {
        if (failoverConditions == null) return null;
        return failoverConditions.getValue("ChannelInputAttachmentAutomaticInputFailoverSettings.failoverConditions");
    }

    /**
     * Input preference when deciding which input to make active when a previously failed input has recovered.
     * 
     */
    private @Nullable UndeferrableValue<String> inputPreference;

    public @Nullable String inputPreference() {
        if (inputPreference == null) return null;
        return inputPreference.getValue("ChannelInputAttachmentAutomaticInputFailoverSettings.inputPreference");
    }

    /**
     * The input ID of the secondary input in the automatic input failover pair.
     * 
     */
    private UndeferrableValue<String> secondaryInputId;

    public String secondaryInputId() {
        if (secondaryInputId == null) return null;
        return secondaryInputId.getValue("ChannelInputAttachmentAutomaticInputFailoverSettings.secondaryInputId");
    }

}
