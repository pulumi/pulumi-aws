// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appmesh.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.appmesh.inputs.VirtualNodeSpecListenerConnectionPoolArgs;
import com.pulumi.policypacks.aws.appmesh.inputs.VirtualNodeSpecListenerHealthCheckArgs;
import com.pulumi.policypacks.aws.appmesh.inputs.VirtualNodeSpecListenerOutlierDetectionArgs;
import com.pulumi.policypacks.aws.appmesh.inputs.VirtualNodeSpecListenerPortMappingArgs;
import com.pulumi.policypacks.aws.appmesh.inputs.VirtualNodeSpecListenerTimeoutArgs;
import com.pulumi.policypacks.aws.appmesh.inputs.VirtualNodeSpecListenerTlsArgs;
import javax.annotation.Nullable;


public final class VirtualNodeSpecListenerArgs {

    /**
     * Connection pool information for the listener.
     * 
     */
    @PolicyResourceProperty(name="connectionPool", flag="unknown_connectionPool")
    private VirtualNodeSpecListenerConnectionPoolArgs value_connectionPool;
    private boolean unknown_connectionPool;
    public VirtualNodeSpecListenerConnectionPoolArgs connectionPool() {
        if (!unknown_connectionPool) return value_connectionPool;
        throw new UndeferrableValueException("Value 'VirtualNodeSpecListenerArgs.connectionPool' is not present");
    }

    /**
     * Health check information for the listener.
     * 
     */
    @PolicyResourceProperty(name="healthCheck", flag="unknown_healthCheck")
    private VirtualNodeSpecListenerHealthCheckArgs value_healthCheck;
    private boolean unknown_healthCheck;
    public VirtualNodeSpecListenerHealthCheckArgs healthCheck() {
        if (!unknown_healthCheck) return value_healthCheck;
        throw new UndeferrableValueException("Value 'VirtualNodeSpecListenerArgs.healthCheck' is not present");
    }

    /**
     * Outlier detection information for the listener.
     * 
     */
    @PolicyResourceProperty(name="outlierDetection", flag="unknown_outlierDetection")
    private VirtualNodeSpecListenerOutlierDetectionArgs value_outlierDetection;
    private boolean unknown_outlierDetection;
    public VirtualNodeSpecListenerOutlierDetectionArgs outlierDetection() {
        if (!unknown_outlierDetection) return value_outlierDetection;
        throw new UndeferrableValueException("Value 'VirtualNodeSpecListenerArgs.outlierDetection' is not present");
    }

    /**
     * Port mapping information for the listener.
     * 
     */
    @PolicyResourceProperty(name="portMapping", flag="unknown_portMapping")
    private VirtualNodeSpecListenerPortMappingArgs value_portMapping;
    private boolean unknown_portMapping;
    public VirtualNodeSpecListenerPortMappingArgs portMapping() {
        if (!unknown_portMapping) return value_portMapping;
        throw new UndeferrableValueException("Value 'VirtualNodeSpecListenerArgs.portMapping' is not present");
    }

    /**
     * Timeouts for different protocols.
     * 
     */
    @PolicyResourceProperty(name="timeout", flag="unknown_timeout")
    private VirtualNodeSpecListenerTimeoutArgs value_timeout;
    private boolean unknown_timeout;
    public VirtualNodeSpecListenerTimeoutArgs timeout() {
        if (!unknown_timeout) return value_timeout;
        throw new UndeferrableValueException("Value 'VirtualNodeSpecListenerArgs.timeout' is not present");
    }

    /**
     * Transport Layer Security (TLS) properties for the listener
     * 
     */
    @PolicyResourceProperty(name="tls", flag="unknown_tls")
    private VirtualNodeSpecListenerTlsArgs value_tls;
    private boolean unknown_tls;
    public VirtualNodeSpecListenerTlsArgs tls() {
        if (!unknown_tls) return value_tls;
        throw new UndeferrableValueException("Value 'VirtualNodeSpecListenerArgs.tls' is not present");
    }

}
