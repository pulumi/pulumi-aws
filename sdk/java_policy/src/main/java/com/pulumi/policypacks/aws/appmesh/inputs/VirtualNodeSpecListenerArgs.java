// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appmesh.inputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.appmesh.inputs.VirtualNodeSpecListenerConnectionPoolArgs;
import com.pulumi.policypacks.aws.appmesh.inputs.VirtualNodeSpecListenerHealthCheckArgs;
import com.pulumi.policypacks.aws.appmesh.inputs.VirtualNodeSpecListenerOutlierDetectionArgs;
import com.pulumi.policypacks.aws.appmesh.inputs.VirtualNodeSpecListenerPortMappingArgs;
import com.pulumi.policypacks.aws.appmesh.inputs.VirtualNodeSpecListenerTimeoutArgs;
import com.pulumi.policypacks.aws.appmesh.inputs.VirtualNodeSpecListenerTlsArgs;
import javax.annotation.Nullable;


public final class VirtualNodeSpecListenerArgs {

    /**
     * Connection pool information for the listener.
     * 
     */
    private UndeferrableValue<VirtualNodeSpecListenerConnectionPoolArgs> connectionPool;

    public VirtualNodeSpecListenerConnectionPoolArgs connectionPool() {
        if (connectionPool == null) return null;
        return connectionPool.getValue("VirtualNodeSpecListenerArgs.connectionPool");
    }

    /**
     * Health check information for the listener.
     * 
     */
    private UndeferrableValue<VirtualNodeSpecListenerHealthCheckArgs> healthCheck;

    public VirtualNodeSpecListenerHealthCheckArgs healthCheck() {
        if (healthCheck == null) return null;
        return healthCheck.getValue("VirtualNodeSpecListenerArgs.healthCheck");
    }

    /**
     * Outlier detection information for the listener.
     * 
     */
    private UndeferrableValue<VirtualNodeSpecListenerOutlierDetectionArgs> outlierDetection;

    public VirtualNodeSpecListenerOutlierDetectionArgs outlierDetection() {
        if (outlierDetection == null) return null;
        return outlierDetection.getValue("VirtualNodeSpecListenerArgs.outlierDetection");
    }

    /**
     * Port mapping information for the listener.
     * 
     */
    private UndeferrableValue<VirtualNodeSpecListenerPortMappingArgs> portMapping;

    public VirtualNodeSpecListenerPortMappingArgs portMapping() {
        if (portMapping == null) return null;
        return portMapping.getValue("VirtualNodeSpecListenerArgs.portMapping");
    }

    /**
     * Timeouts for different protocols.
     * 
     */
    private UndeferrableValue<VirtualNodeSpecListenerTimeoutArgs> timeout;

    public VirtualNodeSpecListenerTimeoutArgs timeout() {
        if (timeout == null) return null;
        return timeout.getValue("VirtualNodeSpecListenerArgs.timeout");
    }

    /**
     * Transport Layer Security (TLS) properties for the listener
     * 
     */
    private UndeferrableValue<VirtualNodeSpecListenerTlsArgs> tls;

    public VirtualNodeSpecListenerTlsArgs tls() {
        if (tls == null) return null;
        return tls.getValue("VirtualNodeSpecListenerArgs.tls");
    }

}
