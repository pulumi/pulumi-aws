// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ses.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class ReceiptRuleLambdaAction {

    /**
     * The ARN of the Lambda function to invoke
     * 
     */
    @PolicyResourceProperty(name="functionArn", flag="unknown_functionArn")
    private String value_functionArn;
    private boolean unknown_functionArn;
    public String functionArn() {
        if (!unknown_functionArn) return value_functionArn;
        throw new UndeferrableValueException("Value 'ReceiptRuleLambdaAction.functionArn' is not present");
    }

    /**
     * `Event` or `RequestResponse`
     * 
     */
    @PolicyResourceProperty(name="invocationType", flag="unknown_invocationType")
    private @Nullable String value_invocationType;
    private boolean unknown_invocationType;
    public @Nullable String invocationType() {
        if (!unknown_invocationType) return value_invocationType;
        throw new UndeferrableValueException("Value 'ReceiptRuleLambdaAction.invocationType' is not present");
    }

    /**
     * The position of the action in the receipt rule
     * 
     */
    @PolicyResourceProperty(name="position", flag="unknown_position")
    private Integer value_position;
    private boolean unknown_position;
    public Integer position() {
        if (!unknown_position) return value_position;
        throw new UndeferrableValueException("Value 'ReceiptRuleLambdaAction.position' is not present");
    }

    /**
     * The ARN of an SNS topic to notify
     * 
     */
    @PolicyResourceProperty(name="topicArn", flag="unknown_topicArn")
    private @Nullable String value_topicArn;
    private boolean unknown_topicArn;
    public @Nullable String topicArn() {
        if (!unknown_topicArn) return value_topicArn;
        throw new UndeferrableValueException("Value 'ReceiptRuleLambdaAction.topicArn' is not present");
    }

}
