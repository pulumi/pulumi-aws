// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.lb;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.lb.inputs.ListenerRuleActionArgs;
import com.pulumi.policypacks.aws.lb.inputs.ListenerRuleConditionArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:lb/listenerRule:ListenerRule")
public final class ListenerRuleArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * An Action block. Action blocks are documented below.
     * 
     */
    private UndeferrableValue<List<ListenerRuleActionArgs>> actions;

    public List<ListenerRuleActionArgs> actions() {
        if (actions == null) return null;
        return actions.getValue("ListenerRuleArgs.actions");
    }

    /**
     * A Condition block. Multiple condition blocks of different types can be set and all must be satisfied for the rule to match. Condition blocks are documented below.
     * 
     */
    private UndeferrableValue<List<ListenerRuleConditionArgs>> conditions;

    public List<ListenerRuleConditionArgs> conditions() {
        if (conditions == null) return null;
        return conditions.getValue("ListenerRuleArgs.conditions");
    }

    /**
     * The ARN of the listener to which to attach the rule.
     * 
     */
    private UndeferrableValue<String> listenerArn;

    public String listenerArn() {
        if (listenerArn == null) return null;
        return listenerArn.getValue("ListenerRuleArgs.listenerArn");
    }

    /**
     * The priority for the rule between `1` and `50000`. Leaving it unset will automatically set the rule with next available priority after currently existing highest rule. A listener can&#39;t have multiple rules with the same priority.
     * 
     */
    private UndeferrableValue<Integer> priority;

    public Integer priority() {
        if (priority == null) return null;
        return priority.getValue("ListenerRuleArgs.priority");
    }

    /**
     * A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("ListenerRuleArgs.tags");
    }

}
