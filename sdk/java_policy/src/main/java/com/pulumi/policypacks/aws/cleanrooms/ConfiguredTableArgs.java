// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.cleanrooms;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.cleanrooms.inputs.ConfiguredTableTableReferenceArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:cleanrooms/configuredTable:ConfiguredTable")
public final class ConfiguredTableArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The columns of the references table which will be included in the configured table.
     * 
     */
    @PolicyResourceProperty(name="allowedColumns", flag="unknown_allowedColumns")
    private List<String> value_allowedColumns;
    private boolean unknown_allowedColumns;
    public List<String> allowedColumns() {
        if (!unknown_allowedColumns) return value_allowedColumns;
        throw new UndeferrableValueException("Value 'ConfiguredTableArgs.allowedColumns' is not present");
    }

    /**
     * The analysis method for the configured table. The only valid value is currently `DIRECT_QUERY`.
     * 
     */
    @PolicyResourceProperty(name="analysisMethod", flag="unknown_analysisMethod")
    private String value_analysisMethod;
    private boolean unknown_analysisMethod;
    public String analysisMethod() {
        if (!unknown_analysisMethod) return value_analysisMethod;
        throw new UndeferrableValueException("Value 'ConfiguredTableArgs.analysisMethod' is not present");
    }

    /**
     * A description for the configured table.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private String value_description;
    private boolean unknown_description;
    public String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'ConfiguredTableArgs.description' is not present");
    }

    /**
     * The name of the configured table.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'ConfiguredTableArgs.name' is not present");
    }

    /**
     * A reference to the AWS Glue table which will be used to create the configured table.
     * * `table_reference.database_name` - (Required - Forces new resource) - The name of the AWS Glue database which contains the table.
     * * `table_reference.table_name` - (Required - Forces new resource) - The name of the AWS Glue table which will be used to create the configured table.
     * 
     */
    @PolicyResourceProperty(name="tableReference", flag="unknown_tableReference")
    private ConfiguredTableTableReferenceArgs value_tableReference;
    private boolean unknown_tableReference;
    public ConfiguredTableTableReferenceArgs tableReference() {
        if (!unknown_tableReference) return value_tableReference;
        throw new UndeferrableValueException("Value 'ConfiguredTableArgs.tableReference' is not present");
    }

    /**
     * Key value pairs which tag the configured table.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'ConfiguredTableArgs.tags' is not present");
    }

}
