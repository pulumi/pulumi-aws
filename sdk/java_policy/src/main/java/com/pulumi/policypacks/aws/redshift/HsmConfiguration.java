// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.redshift;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:redshift/hsmConfiguration:HsmConfiguration")
public final class HsmConfiguration extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Amazon Resource Name (ARN) of the Hsm Client Certificate.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'HsmConfiguration.arn' is not present");
    }

    /**
     * A text description of the HSM configuration to be created.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private String value_description;
    private boolean unknown_description;
    public String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'HsmConfiguration.description' is not present");
    }

    /**
     * The identifier to be assigned to the new Amazon Redshift HSM configuration.
     * 
     */
    @PolicyResourceProperty(name="hsmConfigurationIdentifier", flag="unknown_hsmConfigurationIdentifier")
    private String value_hsmConfigurationIdentifier;
    private boolean unknown_hsmConfigurationIdentifier;
    public String hsmConfigurationIdentifier() {
        if (!unknown_hsmConfigurationIdentifier) return value_hsmConfigurationIdentifier;
        throw new UndeferrableValueException("Value 'HsmConfiguration.hsmConfigurationIdentifier' is not present");
    }

    /**
     * The IP address that the Amazon Redshift cluster must use to access the HSM.
     * 
     */
    @PolicyResourceProperty(name="hsmIpAddress", flag="unknown_hsmIpAddress")
    private String value_hsmIpAddress;
    private boolean unknown_hsmIpAddress;
    public String hsmIpAddress() {
        if (!unknown_hsmIpAddress) return value_hsmIpAddress;
        throw new UndeferrableValueException("Value 'HsmConfiguration.hsmIpAddress' is not present");
    }

    /**
     * The name of the partition in the HSM where the Amazon Redshift clusters will store their database encryption keys.
     * 
     */
    @PolicyResourceProperty(name="hsmPartitionName", flag="unknown_hsmPartitionName")
    private String value_hsmPartitionName;
    private boolean unknown_hsmPartitionName;
    public String hsmPartitionName() {
        if (!unknown_hsmPartitionName) return value_hsmPartitionName;
        throw new UndeferrableValueException("Value 'HsmConfiguration.hsmPartitionName' is not present");
    }

    /**
     * The password required to access the HSM partition.
     * 
     */
    @PolicyResourceProperty(name="hsmPartitionPassword", flag="unknown_hsmPartitionPassword")
    private String value_hsmPartitionPassword;
    private boolean unknown_hsmPartitionPassword;
    public String hsmPartitionPassword() {
        if (!unknown_hsmPartitionPassword) return value_hsmPartitionPassword;
        throw new UndeferrableValueException("Value 'HsmConfiguration.hsmPartitionPassword' is not present");
    }

    /**
     * The HSMs public certificate file. When using Cloud HSM, the file name is server.pem.
     * 
     */
    @PolicyResourceProperty(name="hsmServerPublicCertificate", flag="unknown_hsmServerPublicCertificate")
    private String value_hsmServerPublicCertificate;
    private boolean unknown_hsmServerPublicCertificate;
    public String hsmServerPublicCertificate() {
        if (!unknown_hsmServerPublicCertificate) return value_hsmServerPublicCertificate;
        throw new UndeferrableValueException("Value 'HsmConfiguration.hsmServerPublicCertificate' is not present");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'HsmConfiguration.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'HsmConfiguration.tagsAll' is not present");
    }

}
