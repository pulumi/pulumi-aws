// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.servicediscovery.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class ServiceHealthCheckConfigArgs {

    /**
     * The number of consecutive health checks. Maximum value of 10.
     * 
     */
    @PolicyResourceProperty(name="failureThreshold", flag="unknown_failureThreshold")
    private Integer value_failureThreshold;
    private boolean unknown_failureThreshold;
    public Integer failureThreshold() {
        if (!unknown_failureThreshold) return value_failureThreshold;
        throw new UndeferrableValueException("Value 'ServiceHealthCheckConfigArgs.failureThreshold' is not present");
    }

    /**
     * The path that you want Route 53 to request when performing health checks. Route 53 automatically adds the DNS name for the service. If you don&#39;t specify a value, the default value is /.
     * 
     */
    @PolicyResourceProperty(name="resourcePath", flag="unknown_resourcePath")
    private String value_resourcePath;
    private boolean unknown_resourcePath;
    public String resourcePath() {
        if (!unknown_resourcePath) return value_resourcePath;
        throw new UndeferrableValueException("Value 'ServiceHealthCheckConfigArgs.resourcePath' is not present");
    }

    /**
     * The type of health check that you want to create, which indicates how Route 53 determines whether an endpoint is healthy. Valid Values: HTTP, HTTPS, TCP
     * 
     */
    @PolicyResourceProperty(name="type", flag="unknown_type")
    private String value_type;
    private boolean unknown_type;
    public String type() {
        if (!unknown_type) return value_type;
        throw new UndeferrableValueException("Value 'ServiceHealthCheckConfigArgs.type' is not present");
    }

}
