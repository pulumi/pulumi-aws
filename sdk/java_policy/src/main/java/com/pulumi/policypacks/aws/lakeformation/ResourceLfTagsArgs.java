// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.lakeformation;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.lakeformation.inputs.ResourceLfTagsDatabaseArgs;
import com.pulumi.policypacks.aws.lakeformation.inputs.ResourceLfTagsLfTagArgs;
import com.pulumi.policypacks.aws.lakeformation.inputs.ResourceLfTagsTableArgs;
import com.pulumi.policypacks.aws.lakeformation.inputs.ResourceLfTagsTableWithColumnsArgs;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:lakeformation/resourceLfTags:ResourceLfTags")
public final class ResourceLfTagsArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment.
     * 
     */
    private UndeferrableValue<String> catalogId;

    public String catalogId() {
        if (catalogId == null) return null;
        return catalogId.getValue("ResourceLfTagsArgs.catalogId");
    }

    /**
     * Configuration block for a database resource. See below.
     * 
     */
    private UndeferrableValue<ResourceLfTagsDatabaseArgs> database;

    public ResourceLfTagsDatabaseArgs database() {
        if (database == null) return null;
        return database.getValue("ResourceLfTagsArgs.database");
    }

    /**
     * Set of LF-tags to attach to the resource. See below.
     * 
     * Exactly one of the following is required:
     * 
     */
    private UndeferrableValue<List<ResourceLfTagsLfTagArgs>> lfTags;

    public List<ResourceLfTagsLfTagArgs> lfTags() {
        if (lfTags == null) return null;
        return lfTags.getValue("ResourceLfTagsArgs.lfTags");
    }

    /**
     * Configuration block for a table resource. See below.
     * 
     */
    private UndeferrableValue<ResourceLfTagsTableArgs> table;

    public ResourceLfTagsTableArgs table() {
        if (table == null) return null;
        return table.getValue("ResourceLfTagsArgs.table");
    }

    /**
     * Configuration block for a table with columns resource. See below.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<ResourceLfTagsTableWithColumnsArgs> tableWithColumns;

    public ResourceLfTagsTableWithColumnsArgs tableWithColumns() {
        if (tableWithColumns == null) return null;
        return tableWithColumns.getValue("ResourceLfTagsArgs.tableWithColumns");
    }

}
