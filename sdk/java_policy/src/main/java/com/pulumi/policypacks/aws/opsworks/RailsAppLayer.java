// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.opsworks;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.opsworks.RailsAppLayerCloudwatchConfiguration;
import com.pulumi.policypacks.aws.opsworks.RailsAppLayerEbsVolume;
import com.pulumi.policypacks.aws.opsworks.RailsAppLayerLoadBasedAutoScaling;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;


@PolicyResourceType(type="aws:opsworks/railsAppLayer:RailsAppLayer")
public final class RailsAppLayer extends com.pulumi.resources.PolicyResource {

    /**
     * Keyword for the app server to use. Defaults to &#34;apache_passenger&#34;.
     * 
     */
    public String appServer;



    /**
     * The Amazon Resource Name(ARN) of the layer.
     * 
     */
    public String arn;



    /**
     * Whether to automatically assign an elastic IP address to the layer&#39;s instances.
     * 
     */
    public Boolean autoAssignElasticIps;



    /**
     * For stacks belonging to a VPC, whether to automatically assign a public IP address to each of the layer&#39;s instances.
     * 
     */
    public Boolean autoAssignPublicIps;



    /**
     * Whether to enable auto-healing for the layer.
     * 
     */
    public Boolean autoHealing;



    /**
     * When OpsWorks is managing Bundler, which version to use. Defaults to &#34;1.5.3&#34;.
     * 
     */
    public String bundlerVersion;



    public RailsAppLayerCloudwatchConfiguration cloudwatchConfiguration;



    public List<String> customConfigureRecipes;



    public List<String> customDeployRecipes;



    /**
     * The ARN of an IAM profile that will be used for the layer&#39;s instances.
     * 
     */
    public String customInstanceProfileArn;



    /**
     * Custom JSON attributes to apply to the layer.
     * 
     */
    public String customJson;



    /**
     * Ids for a set of security groups to apply to the layer&#39;s instances.
     * 
     */
    public List<String> customSecurityGroupIds;



    public List<String> customSetupRecipes;



    public List<String> customShutdownRecipes;



    public List<String> customUndeployRecipes;



    /**
     * Whether to enable Elastic Load Balancing connection draining.
     * 
     */
    public Boolean drainElbOnShutdown;



    /**
     * `ebs_volume` blocks, as described below, will each create an EBS volume and connect it to the layer&#39;s instances.
     * 
     */
    public List<RailsAppLayerEbsVolume> ebsVolumes;



    /**
     * Name of an Elastic Load Balancer to attach to this layer
     * 
     */
    public String elasticLoadBalancer;



    /**
     * Whether to install OS and package updates on each instance when it boots.
     * 
     */
    public Boolean installUpdatesOnBoot;



    /**
     * The time, in seconds, that OpsWorks will wait for Chef to complete after triggering the Shutdown event.
     * 
     */
    public Integer instanceShutdownTimeout;



    public RailsAppLayerLoadBasedAutoScaling loadBasedAutoScaling;



    /**
     * Whether OpsWorks should manage bundler. On by default.
     * 
     */
    public Boolean manageBundler;



    /**
     * A human-readable name for the layer.
     * 
     */
    public String name;



    /**
     * The version of Passenger to use. Defaults to &#34;4.0.46&#34;.
     * 
     */
    public String passengerVersion;



    /**
     * The version of Ruby to use. Defaults to &#34;2.0.0&#34;.
     * 
     */
    public String rubyVersion;



    /**
     * The version of RubyGems to use. Defaults to &#34;2.2.2&#34;.
     * 
     */
    public String rubygemsVersion;



    /**
     * ID of the stack the layer will belong to.
     * 
     */
    public String stackId;



    /**
     * Names of a set of system packages to install on the layer&#39;s instances.
     * 
     */
    public List<String> systemPackages;



    /**
     * A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     * The following extra optional arguments, all lists of Chef recipe names, allow
     * custom Chef recipes to be applied to layer instances at the five different
     * lifecycle events, if custom cookbooks are enabled on the layer&#39;s stack:
     * 
     */
    public Map<String,String> tags;



    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



    /**
     * Whether to use EBS-optimized instances.
     * 
     */
    public Boolean useEbsOptimizedInstances;



}
