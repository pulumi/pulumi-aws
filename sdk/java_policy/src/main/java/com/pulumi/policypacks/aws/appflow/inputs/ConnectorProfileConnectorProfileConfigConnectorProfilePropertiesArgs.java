// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appflow.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudeArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatraceArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodeArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskArgs;
import javax.annotation.Nullable;


public final class ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesArgs {

    /**
     * The connector-specific credentials required when using Amplitude. See Amplitude Connector Profile Credentials for more details.
     * 
     */
    @PolicyResourceProperty(name="amplitude", flag="unknown_amplitude")
    private ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudeArgs value_amplitude;
    private boolean unknown_amplitude;
    public ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesAmplitudeArgs amplitude() {
        if (!unknown_amplitude) return value_amplitude;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesArgs.amplitude' is not present");
    }

    /**
     * The connector-specific profile properties required when using the custom connector. See Custom Connector Profile Properties for more details.
     * 
     */
    @PolicyResourceProperty(name="customConnector", flag="unknown_customConnector")
    private ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorArgs value_customConnector;
    private boolean unknown_customConnector;
    public ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesCustomConnectorArgs customConnector() {
        if (!unknown_customConnector) return value_customConnector;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesArgs.customConnector' is not present");
    }

    /**
     * Connector-specific properties required when using Datadog. See Generic Connector Profile Properties for more details.
     * 
     */
    @PolicyResourceProperty(name="datadog", flag="unknown_datadog")
    private ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogArgs value_datadog;
    private boolean unknown_datadog;
    public ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDatadogArgs datadog() {
        if (!unknown_datadog) return value_datadog;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesArgs.datadog' is not present");
    }

    /**
     * The connector-specific properties required when using Dynatrace. See Generic Connector Profile Properties for more details.
     * 
     */
    @PolicyResourceProperty(name="dynatrace", flag="unknown_dynatrace")
    private ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatraceArgs value_dynatrace;
    private boolean unknown_dynatrace;
    public ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesDynatraceArgs dynatrace() {
        if (!unknown_dynatrace) return value_dynatrace;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesArgs.dynatrace' is not present");
    }

    /**
     * The connector-specific credentials required when using Google Analytics. See Google Analytics Connector Profile Credentials for more details.
     * 
     */
    @PolicyResourceProperty(name="googleAnalytics", flag="unknown_googleAnalytics")
    private ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsArgs value_googleAnalytics;
    private boolean unknown_googleAnalytics;
    public ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesGoogleAnalyticsArgs googleAnalytics() {
        if (!unknown_googleAnalytics) return value_googleAnalytics;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesArgs.googleAnalytics' is not present");
    }

    /**
     * The connector-specific credentials required when using Amazon Honeycode. See Honeycode Connector Profile Credentials for more details.
     * 
     */
    @PolicyResourceProperty(name="honeycode", flag="unknown_honeycode")
    private ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodeArgs value_honeycode;
    private boolean unknown_honeycode;
    public ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesHoneycodeArgs honeycode() {
        if (!unknown_honeycode) return value_honeycode;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesArgs.honeycode' is not present");
    }

    /**
     * The connector-specific properties required when using Infor Nexus. See Generic Connector Profile Properties for more details.
     * 
     */
    @PolicyResourceProperty(name="inforNexus", flag="unknown_inforNexus")
    private ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusArgs value_inforNexus;
    private boolean unknown_inforNexus;
    public ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesInforNexusArgs inforNexus() {
        if (!unknown_inforNexus) return value_inforNexus;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesArgs.inforNexus' is not present");
    }

    /**
     * Connector-specific properties required when using Marketo. See Generic Connector Profile Properties for more details.
     * 
     */
    @PolicyResourceProperty(name="marketo", flag="unknown_marketo")
    private ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoArgs value_marketo;
    private boolean unknown_marketo;
    public ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesMarketoArgs marketo() {
        if (!unknown_marketo) return value_marketo;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesArgs.marketo' is not present");
    }

    /**
     * Connector-specific properties required when using Amazon Redshift. See Redshift Connector Profile Properties for more details.
     * 
     */
    @PolicyResourceProperty(name="redshift", flag="unknown_redshift")
    private ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftArgs value_redshift;
    private boolean unknown_redshift;
    public ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftArgs redshift() {
        if (!unknown_redshift) return value_redshift;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesArgs.redshift' is not present");
    }

    /**
     * The connector-specific properties required when using Salesforce. See Salesforce Connector Profile Properties for more details.
     * 
     */
    @PolicyResourceProperty(name="salesforce", flag="unknown_salesforce")
    private ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceArgs value_salesforce;
    private boolean unknown_salesforce;
    public ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSalesforceArgs salesforce() {
        if (!unknown_salesforce) return value_salesforce;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesArgs.salesforce' is not present");
    }

    /**
     * The connector-specific properties required when using SAPOData. See SAPOData Connector Profile Properties for more details.
     * 
     */
    @PolicyResourceProperty(name="sapoData", flag="unknown_sapoData")
    private ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataArgs value_sapoData;
    private boolean unknown_sapoData;
    public ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataArgs sapoData() {
        if (!unknown_sapoData) return value_sapoData;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesArgs.sapoData' is not present");
    }

    /**
     * The connector-specific properties required when using ServiceNow. See Generic Connector Profile Properties for more details.
     * 
     */
    @PolicyResourceProperty(name="serviceNow", flag="unknown_serviceNow")
    private ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowArgs value_serviceNow;
    private boolean unknown_serviceNow;
    public ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesServiceNowArgs serviceNow() {
        if (!unknown_serviceNow) return value_serviceNow;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesArgs.serviceNow' is not present");
    }

    /**
     * Connector-specific credentials required when using Singular. See Singular Connector Profile Credentials for more details.
     * 
     */
    @PolicyResourceProperty(name="singular", flag="unknown_singular")
    private ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularArgs value_singular;
    private boolean unknown_singular;
    public ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSingularArgs singular() {
        if (!unknown_singular) return value_singular;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesArgs.singular' is not present");
    }

    /**
     * Connector-specific properties required when using Slack. See Generic Connector Profile Properties for more details.
     * 
     */
    @PolicyResourceProperty(name="slack", flag="unknown_slack")
    private ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackArgs value_slack;
    private boolean unknown_slack;
    public ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSlackArgs slack() {
        if (!unknown_slack) return value_slack;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesArgs.slack' is not present");
    }

    /**
     * The connector-specific properties required when using Snowflake. See Snowflake Connector Profile Properties for more details.
     * 
     */
    @PolicyResourceProperty(name="snowflake", flag="unknown_snowflake")
    private ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeArgs value_snowflake;
    private boolean unknown_snowflake;
    public ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSnowflakeArgs snowflake() {
        if (!unknown_snowflake) return value_snowflake;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesArgs.snowflake' is not present");
    }

    /**
     * The connector-specific credentials required when using Trend Micro. See Trend Micro Connector Profile Credentials for more details.
     * 
     */
    @PolicyResourceProperty(name="trendmicro", flag="unknown_trendmicro")
    private ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroArgs value_trendmicro;
    private boolean unknown_trendmicro;
    public ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesTrendmicroArgs trendmicro() {
        if (!unknown_trendmicro) return value_trendmicro;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesArgs.trendmicro' is not present");
    }

    /**
     * Connector-specific properties required when using Veeva. See Generic Connector Profile Properties for more details.
     * 
     */
    @PolicyResourceProperty(name="veeva", flag="unknown_veeva")
    private ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaArgs value_veeva;
    private boolean unknown_veeva;
    public ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesVeevaArgs veeva() {
        if (!unknown_veeva) return value_veeva;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesArgs.veeva' is not present");
    }

    /**
     * Connector-specific properties required when using Zendesk. See Generic Connector Profile Properties for more details.
     * 
     */
    @PolicyResourceProperty(name="zendesk", flag="unknown_zendesk")
    private ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskArgs value_zendesk;
    private boolean unknown_zendesk;
    public ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesZendeskArgs zendesk() {
        if (!unknown_zendesk) return value_zendesk;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesArgs.zendesk' is not present");
    }

}
