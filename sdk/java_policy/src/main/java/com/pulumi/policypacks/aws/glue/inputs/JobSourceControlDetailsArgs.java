// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.glue.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.String;
import javax.annotation.Nullable;


public final class JobSourceControlDetailsArgs {

    /**
     * The type of authentication, which can be an authentication token stored in Amazon Web Services Secrets Manager, or a personal access token. Valid values are: `PERSONAL_ACCESS_TOKEN` and `AWS_SECRETS_MANAGER`.
     * 
     */
    @PolicyResourceProperty(name="authStrategy", flag="unknown_authStrategy")
    private String value_authStrategy;
    private boolean unknown_authStrategy;
    public String authStrategy() {
        if (!unknown_authStrategy) return value_authStrategy;
        throw new UndeferrableValueException("Value 'JobSourceControlDetailsArgs.authStrategy' is not present");
    }

    /**
     * The value of an authorization token.
     * 
     */
    @PolicyResourceProperty(name="authToken", flag="unknown_authToken")
    private String value_authToken;
    private boolean unknown_authToken;
    public String authToken() {
        if (!unknown_authToken) return value_authToken;
        throw new UndeferrableValueException("Value 'JobSourceControlDetailsArgs.authToken' is not present");
    }

    /**
     * A branch in the remote repository.
     * 
     */
    @PolicyResourceProperty(name="branch", flag="unknown_branch")
    private String value_branch;
    private boolean unknown_branch;
    public String branch() {
        if (!unknown_branch) return value_branch;
        throw new UndeferrableValueException("Value 'JobSourceControlDetailsArgs.branch' is not present");
    }

    /**
     * A folder in the remote repository.
     * 
     */
    @PolicyResourceProperty(name="folder", flag="unknown_folder")
    private String value_folder;
    private boolean unknown_folder;
    public String folder() {
        if (!unknown_folder) return value_folder;
        throw new UndeferrableValueException("Value 'JobSourceControlDetailsArgs.folder' is not present");
    }

    /**
     * The last commit ID for a commit in the remote repository.
     * 
     */
    @PolicyResourceProperty(name="lastCommitId", flag="unknown_lastCommitId")
    private String value_lastCommitId;
    private boolean unknown_lastCommitId;
    public String lastCommitId() {
        if (!unknown_lastCommitId) return value_lastCommitId;
        throw new UndeferrableValueException("Value 'JobSourceControlDetailsArgs.lastCommitId' is not present");
    }

    /**
     * The owner of the remote repository that contains the job artifacts.
     * 
     */
    @PolicyResourceProperty(name="owner", flag="unknown_owner")
    private String value_owner;
    private boolean unknown_owner;
    public String owner() {
        if (!unknown_owner) return value_owner;
        throw new UndeferrableValueException("Value 'JobSourceControlDetailsArgs.owner' is not present");
    }

    /**
     * The provider for the remote repository. Valid values are: `GITHUB`, `GITLAB`, `BITBUCKET`, and `AWS_CODE_COMMIT`.
     * 
     */
    @PolicyResourceProperty(name="provider", flag="unknown_provider")
    private String value_provider;
    private boolean unknown_provider;
    public String provider() {
        if (!unknown_provider) return value_provider;
        throw new UndeferrableValueException("Value 'JobSourceControlDetailsArgs.provider' is not present");
    }

    /**
     * The name of the remote repository that contains the job artifacts.
     * 
     */
    @PolicyResourceProperty(name="repository", flag="unknown_repository")
    private String value_repository;
    private boolean unknown_repository;
    public String repository() {
        if (!unknown_repository) return value_repository;
        throw new UndeferrableValueException("Value 'JobSourceControlDetailsArgs.repository' is not present");
    }

}
