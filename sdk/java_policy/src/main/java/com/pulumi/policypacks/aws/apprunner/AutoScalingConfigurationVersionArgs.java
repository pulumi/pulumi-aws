// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.apprunner;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:apprunner/autoScalingConfigurationVersion:AutoScalingConfigurationVersion")
public final class AutoScalingConfigurationVersionArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Name of the auto scaling configuration.
     * 
     */
    private UndeferrableValue<String> autoScalingConfigurationName;

    public String autoScalingConfigurationName() {
        if (autoScalingConfigurationName == null) return null;
        return autoScalingConfigurationName.getValue("AutoScalingConfigurationVersionArgs.autoScalingConfigurationName");
    }

    /**
     * Maximal number of concurrent requests that you want an instance to process. When the number of concurrent requests goes over this limit, App Runner scales up your service.
     * 
     */
    private UndeferrableValue<Integer> maxConcurrency;

    public Integer maxConcurrency() {
        if (maxConcurrency == null) return null;
        return maxConcurrency.getValue("AutoScalingConfigurationVersionArgs.maxConcurrency");
    }

    /**
     * Maximal number of instances that App Runner provisions for your service.
     * 
     */
    private UndeferrableValue<Integer> maxSize;

    public Integer maxSize() {
        if (maxSize == null) return null;
        return maxSize.getValue("AutoScalingConfigurationVersionArgs.maxSize");
    }

    /**
     * Minimal number of instances that App Runner provisions for your service.
     * 
     */
    private UndeferrableValue<Integer> minSize;

    public Integer minSize() {
        if (minSize == null) return null;
        return minSize.getValue("AutoScalingConfigurationVersionArgs.minSize");
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("AutoScalingConfigurationVersionArgs.tags");
    }

}
