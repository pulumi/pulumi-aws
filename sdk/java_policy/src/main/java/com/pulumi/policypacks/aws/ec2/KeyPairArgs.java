// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ec2/keyPair:KeyPair")
public final class KeyPairArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The name for the key pair. If neither `key_name` nor `key_name_prefix` is provided, the provider will create a unique key name.
     * 
     */
    @PolicyResourceProperty(name="keyName", flag="unknown_keyName")
    private String value_keyName;
    private boolean unknown_keyName;
    public String keyName() {
        if (!unknown_keyName) return value_keyName;
        throw new UndeferrableValueException("Value 'KeyPairArgs.keyName' is not present");
    }

    /**
     * Creates a unique name beginning with the specified prefix. Conflicts with `key_name`. If neither `key_name` nor `key_name_prefix` is provided, the provider will create a unique key name.
     * 
     */
    @PolicyResourceProperty(name="keyNamePrefix", flag="unknown_keyNamePrefix")
    private String value_keyNamePrefix;
    private boolean unknown_keyNamePrefix;
    public String keyNamePrefix() {
        if (!unknown_keyNamePrefix) return value_keyNamePrefix;
        throw new UndeferrableValueException("Value 'KeyPairArgs.keyNamePrefix' is not present");
    }

    /**
     * The public key material.
     * 
     */
    @PolicyResourceProperty(name="publicKey", flag="unknown_publicKey")
    private String value_publicKey;
    private boolean unknown_publicKey;
    public String publicKey() {
        if (!unknown_publicKey) return value_publicKey;
        throw new UndeferrableValueException("Value 'KeyPairArgs.publicKey' is not present");
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'KeyPairArgs.tags' is not present");
    }

}
