// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.emr;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.emr.inputs.ClusterAutoTerminationPolicyArgs;
import com.pulumi.policypacks.aws.emr.inputs.ClusterBootstrapActionArgs;
import com.pulumi.policypacks.aws.emr.inputs.ClusterCoreInstanceFleetArgs;
import com.pulumi.policypacks.aws.emr.inputs.ClusterCoreInstanceGroupArgs;
import com.pulumi.policypacks.aws.emr.inputs.ClusterEc2AttributesArgs;
import com.pulumi.policypacks.aws.emr.inputs.ClusterKerberosAttributesArgs;
import com.pulumi.policypacks.aws.emr.inputs.ClusterMasterInstanceFleetArgs;
import com.pulumi.policypacks.aws.emr.inputs.ClusterMasterInstanceGroupArgs;
import com.pulumi.policypacks.aws.emr.inputs.ClusterPlacementGroupConfigArgs;
import com.pulumi.policypacks.aws.emr.inputs.ClusterStepArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:emr/cluster:Cluster")
public final class ClusterArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * JSON string for selecting additional features such as adding proxy information. Note: Currently there is no API to retrieve the value of this argument after EMR cluster creation from provider, therefore the provider cannot detect drift from the actual EMR cluster if its value is changed outside the provider.
     * 
     */
    private UndeferrableValue<String> additionalInfo;

    public String additionalInfo() {
        if (additionalInfo == null) return null;
        return additionalInfo.getValue("ClusterArgs.additionalInfo");
    }

    /**
     * A case-insensitive list of applications for Amazon EMR to install and configure when launching the cluster. For a list of applications available for each Amazon EMR release version, see the [Amazon EMR Release Guide](https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-release-components.html).
     * 
     */
    private UndeferrableValue<List<String>> applications;

    public List<String> applications() {
        if (applications == null) return null;
        return applications.getValue("ClusterArgs.applications");
    }

    /**
     * An auto-termination policy for an Amazon EMR cluster. An auto-termination policy defines the amount of idle time in seconds after which a cluster automatically terminates. See Auto Termination Policy Below.
     * 
     */
    private UndeferrableValue<ClusterAutoTerminationPolicyArgs> autoTerminationPolicy;

    public ClusterAutoTerminationPolicyArgs autoTerminationPolicy() {
        if (autoTerminationPolicy == null) return null;
        return autoTerminationPolicy.getValue("ClusterArgs.autoTerminationPolicy");
    }

    /**
     * IAM role for automatic scaling policies. The IAM role provides permissions that the automatic scaling feature requires to launch and terminate EC2 instances in an instance group.
     * 
     */
    private UndeferrableValue<String> autoscalingRole;

    public String autoscalingRole() {
        if (autoscalingRole == null) return null;
        return autoscalingRole.getValue("ClusterArgs.autoscalingRole");
    }

    /**
     * Ordered list of bootstrap actions that will be run before Hadoop is started on the cluster nodes. See below.
     * 
     */
    private UndeferrableValue<List<ClusterBootstrapActionArgs>> bootstrapActions;

    public List<ClusterBootstrapActionArgs> bootstrapActions() {
        if (bootstrapActions == null) return null;
        return bootstrapActions.getValue("ClusterArgs.bootstrapActions");
    }

    /**
     * List of configurations supplied for the EMR cluster you are creating. Supply a configuration object for applications to override their default configuration. See [AWS Documentation](https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-configure-apps.html) for more information.
     * 
     */
    private UndeferrableValue<String> configurations;

    public String configurations() {
        if (configurations == null) return null;
        return configurations.getValue("ClusterArgs.configurations");
    }

    /**
     * JSON string for supplying list of configurations for the EMR cluster.
     * 
     * &gt; **NOTE on `configurations_json`:** If the `Configurations` value is empty then you should skip the `Configurations` field instead of providing an empty list as a value, `&#34;Configurations&#34;: []`.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.aws.emr.Cluster;
     * import com.pulumi.aws.emr.ClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var cluster = new Cluster("cluster", ClusterArgs.builder()
     *             .configurationsJson("""
     * [
     * {
     * "Classification": "hadoop-env",
     * "Configurations": [
     * {
     * "Classification": "export",
     * "Properties": {
     * "JAVA_HOME": "/usr/lib/jvm/java-1.8.0"
     * }
     * }
     * ],
     * "Properties": {}
     * }
     * ]
     *             """)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    private UndeferrableValue<String> configurationsJson;

    public String configurationsJson() {
        if (configurationsJson == null) return null;
        return configurationsJson.getValue("ClusterArgs.configurationsJson");
    }

    /**
     * Configuration block to use an [Instance Fleet](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-fleet.html) for the core node type. Cannot be specified if any `core_instance_group` configuration blocks are set. Detailed below.
     * 
     */
    private UndeferrableValue<ClusterCoreInstanceFleetArgs> coreInstanceFleet;

    public ClusterCoreInstanceFleetArgs coreInstanceFleet() {
        if (coreInstanceFleet == null) return null;
        return coreInstanceFleet.getValue("ClusterArgs.coreInstanceFleet");
    }

    /**
     * Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [core node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-core).
     * 
     */
    private UndeferrableValue<ClusterCoreInstanceGroupArgs> coreInstanceGroup;

    public ClusterCoreInstanceGroupArgs coreInstanceGroup() {
        if (coreInstanceGroup == null) return null;
        return coreInstanceGroup.getValue("ClusterArgs.coreInstanceGroup");
    }

    /**
     * Custom Amazon Linux AMI for the cluster (instead of an EMR-owned AMI). Available in Amazon EMR version 5.7.0 and later.
     * 
     */
    private UndeferrableValue<String> customAmiId;

    public String customAmiId() {
        if (customAmiId == null) return null;
        return customAmiId.getValue("ClusterArgs.customAmiId");
    }

    /**
     * Size in GiB of the EBS root device volume of the Linux AMI that is used for each EC2 instance. Available in Amazon EMR version 4.x and later.
     * 
     */
    private UndeferrableValue<Integer> ebsRootVolumeSize;

    public Integer ebsRootVolumeSize() {
        if (ebsRootVolumeSize == null) return null;
        return ebsRootVolumeSize.getValue("ClusterArgs.ebsRootVolumeSize");
    }

    /**
     * Attributes for the EC2 instances running the job flow. See below.
     * 
     */
    private UndeferrableValue<ClusterEc2AttributesArgs> ec2Attributes;

    public ClusterEc2AttributesArgs ec2Attributes() {
        if (ec2Attributes == null) return null;
        return ec2Attributes.getValue("ClusterArgs.ec2Attributes");
    }

    /**
     * Switch on/off run cluster with no steps or when all steps are complete (default is on)
     * 
     */
    private UndeferrableValue<Boolean> keepJobFlowAliveWhenNoSteps;

    public Boolean keepJobFlowAliveWhenNoSteps() {
        if (keepJobFlowAliveWhenNoSteps == null) return null;
        return keepJobFlowAliveWhenNoSteps.getValue("ClusterArgs.keepJobFlowAliveWhenNoSteps");
    }

    /**
     * Kerberos configuration for the cluster. See below.
     * 
     */
    private UndeferrableValue<ClusterKerberosAttributesArgs> kerberosAttributes;

    public ClusterKerberosAttributesArgs kerberosAttributes() {
        if (kerberosAttributes == null) return null;
        return kerberosAttributes.getValue("ClusterArgs.kerberosAttributes");
    }

    /**
     * List of [step states](https://docs.aws.amazon.com/emr/latest/APIReference/API_StepStatus.html) used to filter returned steps
     * 
     */
    private UndeferrableValue<List<String>> listStepsStates;

    public List<String> listStepsStates() {
        if (listStepsStates == null) return null;
        return listStepsStates.getValue("ClusterArgs.listStepsStates");
    }

    /**
     * AWS KMS customer master key (CMK) key ID or arn used for encrypting log files. This attribute is only available with EMR version 5.30.0 and later, excluding EMR 6.0.0.
     * 
     */
    private UndeferrableValue<String> logEncryptionKmsKeyId;

    public String logEncryptionKmsKeyId() {
        if (logEncryptionKmsKeyId == null) return null;
        return logEncryptionKmsKeyId.getValue("ClusterArgs.logEncryptionKmsKeyId");
    }

    /**
     * S3 bucket to write the log files of the job flow. If a value is not provided, logs are not created.
     * 
     */
    private UndeferrableValue<String> logUri;

    public String logUri() {
        if (logUri == null) return null;
        return logUri.getValue("ClusterArgs.logUri");
    }

    /**
     * Configuration block to use an [Instance Fleet](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-fleet.html) for the master node type. Cannot be specified if any `master_instance_group` configuration blocks are set. Detailed below.
     * 
     */
    private UndeferrableValue<ClusterMasterInstanceFleetArgs> masterInstanceFleet;

    public ClusterMasterInstanceFleetArgs masterInstanceFleet() {
        if (masterInstanceFleet == null) return null;
        return masterInstanceFleet.getValue("ClusterArgs.masterInstanceFleet");
    }

    /**
     * Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [master node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-master).
     * 
     */
    private UndeferrableValue<ClusterMasterInstanceGroupArgs> masterInstanceGroup;

    public ClusterMasterInstanceGroupArgs masterInstanceGroup() {
        if (masterInstanceGroup == null) return null;
        return masterInstanceGroup.getValue("ClusterArgs.masterInstanceGroup");
    }

    /**
     * Name of the job flow.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("ClusterArgs.name");
    }

    /**
     * The specified placement group configuration for an Amazon EMR cluster.
     * 
     */
    private UndeferrableValue<List<ClusterPlacementGroupConfigArgs>> placementGroupConfigs;

    public List<ClusterPlacementGroupConfigArgs> placementGroupConfigs() {
        if (placementGroupConfigs == null) return null;
        return placementGroupConfigs.getValue("ClusterArgs.placementGroupConfigs");
    }

    /**
     * Release label for the Amazon EMR release.
     * 
     */
    private UndeferrableValue<String> releaseLabel;

    public String releaseLabel() {
        if (releaseLabel == null) return null;
        return releaseLabel.getValue("ClusterArgs.releaseLabel");
    }

    /**
     * Way that individual Amazon EC2 instances terminate when an automatic scale-in activity occurs or an `instance group` is resized.
     * 
     */
    private UndeferrableValue<String> scaleDownBehavior;

    public String scaleDownBehavior() {
        if (scaleDownBehavior == null) return null;
        return scaleDownBehavior.getValue("ClusterArgs.scaleDownBehavior");
    }

    /**
     * Security configuration name to attach to the EMR cluster. Only valid for EMR clusters with `release_label` 4.8.0 or greater.
     * 
     */
    private UndeferrableValue<String> securityConfiguration;

    public String securityConfiguration() {
        if (securityConfiguration == null) return null;
        return securityConfiguration.getValue("ClusterArgs.securityConfiguration");
    }

    /**
     * IAM role that will be assumed by the Amazon EMR service to access AWS resources.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> serviceRole;

    public String serviceRole() {
        if (serviceRole == null) return null;
        return serviceRole.getValue("ClusterArgs.serviceRole");
    }

    /**
     * Number of steps that can be executed concurrently. You can specify a maximum of 256 steps. Only valid for EMR clusters with `release_label` 5.28.0 or greater (default is 1).
     * 
     */
    private UndeferrableValue<Integer> stepConcurrencyLevel;

    public Integer stepConcurrencyLevel() {
        if (stepConcurrencyLevel == null) return null;
        return stepConcurrencyLevel.getValue("ClusterArgs.stepConcurrencyLevel");
    }

    /**
     * List of steps to run when creating the cluster. See below. It is highly recommended to utilize the lifecycle resource options block with `ignoreChanges` if other steps are being managed outside of this provider.
     * 
     */
    private UndeferrableValue<List<ClusterStepArgs>> steps;

    public List<ClusterStepArgs> steps() {
        if (steps == null) return null;
        return steps.getValue("ClusterArgs.steps");
    }

    /**
     * list of tags to apply to the EMR Cluster. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("ClusterArgs.tags");
    }

    /**
     * Switch on/off termination protection (default is `false`, except when using multiple master nodes). Before attempting to destroy the resource when termination protection is enabled, this configuration must be applied with its value set to `false`.
     * 
     */
    private UndeferrableValue<Boolean> terminationProtection;

    public Boolean terminationProtection() {
        if (terminationProtection == null) return null;
        return terminationProtection.getValue("ClusterArgs.terminationProtection");
    }

    /**
     * Whether whether Amazon EMR should gracefully replace core nodes that have degraded within the cluster. Default value is `false`.
     * 
     */
    private UndeferrableValue<Boolean> unhealthyNodeReplacement;

    public Boolean unhealthyNodeReplacement() {
        if (unhealthyNodeReplacement == null) return null;
        return unhealthyNodeReplacement.getValue("ClusterArgs.unhealthyNodeReplacement");
    }

    /**
     * Whether the job flow is visible to all IAM users of the AWS account associated with the job flow. Default value is `true`.
     * 
     */
    private UndeferrableValue<Boolean> visibleToAllUsers;

    public Boolean visibleToAllUsers() {
        if (visibleToAllUsers == null) return null;
        return visibleToAllUsers.getValue("ClusterArgs.visibleToAllUsers");
    }

}
