// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.glue.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class ClassifierCsvClassifier {

    /**
     * Enables the processing of files that contain only one column.
     * 
     */
    @PolicyResourceProperty(name="allowSingleColumn", flag="unknown_allowSingleColumn")
    private @Nullable Boolean value_allowSingleColumn;
    private boolean unknown_allowSingleColumn;
    public @Nullable Boolean allowSingleColumn() {
        if (!unknown_allowSingleColumn) return value_allowSingleColumn;
        throw new UndeferrableValueException("Value 'ClassifierCsvClassifier.allowSingleColumn' is not present");
    }

    /**
     * Indicates whether the CSV file contains a header. This can be one of &#34;ABSENT&#34;, &#34;PRESENT&#34;, or &#34;UNKNOWN&#34;.
     * 
     */
    @PolicyResourceProperty(name="containsHeader", flag="unknown_containsHeader")
    private @Nullable String value_containsHeader;
    private boolean unknown_containsHeader;
    public @Nullable String containsHeader() {
        if (!unknown_containsHeader) return value_containsHeader;
        throw new UndeferrableValueException("Value 'ClassifierCsvClassifier.containsHeader' is not present");
    }

    /**
     * Enables the custom datatype to be configured.
     * 
     */
    @PolicyResourceProperty(name="customDatatypeConfigured", flag="unknown_customDatatypeConfigured")
    private @Nullable Boolean value_customDatatypeConfigured;
    private boolean unknown_customDatatypeConfigured;
    public @Nullable Boolean customDatatypeConfigured() {
        if (!unknown_customDatatypeConfigured) return value_customDatatypeConfigured;
        throw new UndeferrableValueException("Value 'ClassifierCsvClassifier.customDatatypeConfigured' is not present");
    }

    /**
     * A list of supported custom datatypes. Valid values are `BINARY`, `BOOLEAN`, `DATE`, `DECIMAL`, `DOUBLE`, `FLOAT`, `INT`, `LONG`, `SHORT`, `STRING`, `TIMESTAMP`.
     * 
     */
    @PolicyResourceProperty(name="customDatatypes", flag="unknown_customDatatypes")
    private @Nullable List<String> value_customDatatypes;
    private boolean unknown_customDatatypes;
    public @Nullable List<String> customDatatypes() {
        if (!unknown_customDatatypes) return value_customDatatypes;
        throw new UndeferrableValueException("Value 'ClassifierCsvClassifier.customDatatypes' is not present");
    }

    /**
     * The delimiter used in the CSV to separate columns.
     * 
     */
    @PolicyResourceProperty(name="delimiter", flag="unknown_delimiter")
    private @Nullable String value_delimiter;
    private boolean unknown_delimiter;
    public @Nullable String delimiter() {
        if (!unknown_delimiter) return value_delimiter;
        throw new UndeferrableValueException("Value 'ClassifierCsvClassifier.delimiter' is not present");
    }

    /**
     * Specifies whether to trim column values.
     * 
     */
    @PolicyResourceProperty(name="disableValueTrimming", flag="unknown_disableValueTrimming")
    private @Nullable Boolean value_disableValueTrimming;
    private boolean unknown_disableValueTrimming;
    public @Nullable Boolean disableValueTrimming() {
        if (!unknown_disableValueTrimming) return value_disableValueTrimming;
        throw new UndeferrableValueException("Value 'ClassifierCsvClassifier.disableValueTrimming' is not present");
    }

    /**
     * A list of strings representing column names.
     * 
     */
    @PolicyResourceProperty(name="headers", flag="unknown_headers")
    private @Nullable List<String> value_headers;
    private boolean unknown_headers;
    public @Nullable List<String> headers() {
        if (!unknown_headers) return value_headers;
        throw new UndeferrableValueException("Value 'ClassifierCsvClassifier.headers' is not present");
    }

    /**
     * A custom symbol to denote what combines content into a single column value. It must be different from the column delimiter.
     * 
     */
    @PolicyResourceProperty(name="quoteSymbol", flag="unknown_quoteSymbol")
    private @Nullable String value_quoteSymbol;
    private boolean unknown_quoteSymbol;
    public @Nullable String quoteSymbol() {
        if (!unknown_quoteSymbol) return value_quoteSymbol;
        throw new UndeferrableValueException("Value 'ClassifierCsvClassifier.quoteSymbol' is not present");
    }

    /**
     * The SerDe for processing CSV. Valid values are `OpenCSVSerDe`, `LazySimpleSerDe`, `None`.
     * 
     */
    @PolicyResourceProperty(name="serde", flag="unknown_serde")
    private @Nullable String value_serde;
    private boolean unknown_serde;
    public @Nullable String serde() {
        if (!unknown_serde) return value_serde;
        throw new UndeferrableValueException("Value 'ClassifierCsvClassifier.serde' is not present");
    }

}
