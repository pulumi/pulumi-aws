// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.codebuild;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.codebuild.inputs.ReportGroupExportConfigArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:codebuild/reportGroup:ReportGroup")
public final class ReportGroupArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * If `true`, deletes any reports that belong to a report group before deleting the report group. If `false`, you must delete any reports in the report group before deleting it. Default value is `false`.
     * 
     */
    @PolicyResourceProperty(name="deleteReports", flag="unknown_deleteReports")
    private Boolean value_deleteReports;
    private boolean unknown_deleteReports;
    public Boolean deleteReports() {
        if (!unknown_deleteReports) return value_deleteReports;
        throw new UndeferrableValueException("Value 'ReportGroupArgs.deleteReports' is not present");
    }

    /**
     * Information about the destination where the raw data of this Report Group is exported. see Export Config documented below.
     * 
     */
    @PolicyResourceProperty(name="exportConfig", flag="unknown_exportConfig")
    private ReportGroupExportConfigArgs value_exportConfig;
    private boolean unknown_exportConfig;
    public ReportGroupExportConfigArgs exportConfig() {
        if (!unknown_exportConfig) return value_exportConfig;
        throw new UndeferrableValueException("Value 'ReportGroupArgs.exportConfig' is not present");
    }

    /**
     * The name of a Report Group.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'ReportGroupArgs.name' is not present");
    }

    /**
     * Key-value mapping of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'ReportGroupArgs.tags' is not present");
    }

    /**
     * The type of the Report Group. Valid value are `TEST` and `CODE_COVERAGE`.
     * 
     */
    @PolicyResourceProperty(name="type", flag="unknown_type")
    private String value_type;
    private boolean unknown_type;
    public String type() {
        if (!unknown_type) return value_type;
        throw new UndeferrableValueException("Value 'ReportGroupArgs.type' is not present");
    }

}
