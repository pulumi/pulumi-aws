// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.kendra;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.kendra.inputs.IndexCapacityUnitsArgs;
import com.pulumi.policypacks.aws.kendra.inputs.IndexDocumentMetadataConfigurationUpdateArgs;
import com.pulumi.policypacks.aws.kendra.inputs.IndexServerSideEncryptionConfigurationArgs;
import com.pulumi.policypacks.aws.kendra.inputs.IndexUserGroupResolutionConfigurationArgs;
import com.pulumi.policypacks.aws.kendra.inputs.IndexUserTokenConfigurationsArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:kendra/index:Index")
public final class IndexArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * A block that sets the number of additional document storage and query capacity units that should be used by the index. Detailed below.
     * 
     */
    private UndeferrableValue<IndexCapacityUnitsArgs> capacityUnits;

    public IndexCapacityUnitsArgs capacityUnits() {
        if (capacityUnits == null) return null;
        return capacityUnits.getValue("IndexArgs.capacityUnits");
    }

    /**
     * The description of the Index.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("IndexArgs.description");
    }

    /**
     * One or more blocks that specify the configuration settings for any metadata applied to the documents in the index. Minimum number of 0 items. Maximum number of 500 items. If specified, you must define all elements, including those that are provided by default. These index fields are documented at [Amazon Kendra Index documentation](https://docs.aws.amazon.com/kendra/latest/dg/hiw-index.html). For an example resource that defines these default index fields, refer to the default example above. For an example resource that appends additional index fields, refer to the append example above. All arguments for each block must be specified. Note that blocks cannot be removed since index fields cannot be deleted. This argument is detailed below.
     * 
     */
    private UndeferrableValue<List<IndexDocumentMetadataConfigurationUpdateArgs>> documentMetadataConfigurationUpdates;

    public List<IndexDocumentMetadataConfigurationUpdateArgs> documentMetadataConfigurationUpdates() {
        if (documentMetadataConfigurationUpdates == null) return null;
        return documentMetadataConfigurationUpdates.getValue("IndexArgs.documentMetadataConfigurationUpdates");
    }

    /**
     * The Amazon Kendra edition to use for the index. Choose `DEVELOPER_EDITION` for indexes intended for development, testing, or proof of concept. Use `ENTERPRISE_EDITION` for your production databases. Use `GEN_AI_ENTERPRISE_EDITION` for creating generative AI applications. Once you set the edition for an index, it can&#39;t be changed. Defaults to `ENTERPRISE_EDITION`.
     * 
     */
    private UndeferrableValue<String> edition;

    public String edition() {
        if (edition == null) return null;
        return edition.getValue("IndexArgs.edition");
    }

    /**
     * Specifies the name of the Index.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("IndexArgs.name");
    }

    /**
     * An AWS Identity and Access Management (IAM) role that gives Amazon Kendra permissions to access your Amazon CloudWatch logs and metrics. This is also the role you use when you call the `BatchPutDocument` API to index documents from an Amazon S3 bucket.
     * 
     */
    private UndeferrableValue<String> roleArn;

    public String roleArn() {
        if (roleArn == null) return null;
        return roleArn.getValue("IndexArgs.roleArn");
    }

    /**
     * A block that specifies the identifier of the AWS KMS customer managed key (CMK) that&#39;s used to encrypt data indexed by Amazon Kendra. Amazon Kendra doesn&#39;t support asymmetric CMKs. Detailed below.
     * 
     */
    private UndeferrableValue<IndexServerSideEncryptionConfigurationArgs> serverSideEncryptionConfiguration;

    public IndexServerSideEncryptionConfigurationArgs serverSideEncryptionConfiguration() {
        if (serverSideEncryptionConfiguration == null) return null;
        return serverSideEncryptionConfiguration.getValue("IndexArgs.serverSideEncryptionConfiguration");
    }

    /**
     * Tags to apply to the Index. If configured with a provider
     * `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("IndexArgs.tags");
    }

    /**
     * The user context policy. Valid values are `ATTRIBUTE_FILTER` or `USER_TOKEN`. For more information, refer to [UserContextPolicy](https://docs.aws.amazon.com/kendra/latest/APIReference/API_CreateIndex.html#kendra-CreateIndex-request-UserContextPolicy). Defaults to `ATTRIBUTE_FILTER`.
     * 
     */
    private UndeferrableValue<String> userContextPolicy;

    public String userContextPolicy() {
        if (userContextPolicy == null) return null;
        return userContextPolicy.getValue("IndexArgs.userContextPolicy");
    }

    /**
     * A block that enables fetching access levels of groups and users from an AWS Single Sign-On identity source. To configure this, see [UserGroupResolutionConfiguration](https://docs.aws.amazon.com/kendra/latest/dg/API_UserGroupResolutionConfiguration.html). Detailed below.
     * 
     */
    private UndeferrableValue<IndexUserGroupResolutionConfigurationArgs> userGroupResolutionConfiguration;

    public IndexUserGroupResolutionConfigurationArgs userGroupResolutionConfiguration() {
        if (userGroupResolutionConfiguration == null) return null;
        return userGroupResolutionConfiguration.getValue("IndexArgs.userGroupResolutionConfiguration");
    }

    /**
     * A block that specifies the user token configuration. Detailed below.
     * 
     */
    private UndeferrableValue<IndexUserTokenConfigurationsArgs> userTokenConfigurations;

    public IndexUserTokenConfigurationsArgs userTokenConfigurations() {
        if (userTokenConfigurations == null) return null;
        return userTokenConfigurations.getValue("IndexArgs.userTokenConfigurations");
    }

}
