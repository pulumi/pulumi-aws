// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.fsx;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.fsx.OpenZfsVolumeNfsExports;
import com.pulumi.policypacks.aws.fsx.OpenZfsVolumeOriginSnapshot;
import com.pulumi.policypacks.aws.fsx.OpenZfsVolumeUserAndGroupQuota;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;


@PolicyResourceType(type="aws:fsx/openZfsVolume:OpenZfsVolume")
public final class OpenZfsVolume extends com.pulumi.resources.PolicyResource {

    /**
     * Amazon Resource Name of the file system.
     * 
     */
    public String arn;



    /**
     * A boolean flag indicating whether tags for the file system should be copied to snapshots. The default value is false.
     * 
     */
    public Boolean copyTagsToSnapshots;



    /**
     * Method used to compress the data on the volume. Valid values are `NONE` or `ZSTD`. Child volumes that don&#39;t specify compression option will inherit from parent volume. This option on file system applies to the root volume.
     * 
     */
    public String dataCompressionType;



    /**
     * Whether to delete all child volumes and snapshots. Valid values: `DELETE_CHILD_VOLUMES_AND_SNAPSHOTS`. This configuration must be applied separately before attempting to delete the resource to have the desired behavior..
     * 
     */
    public String deleteVolumeOptions;



    /**
     * The name of the Volume. You can use a maximum of 203 alphanumeric characters, plus the underscore (_) special character.
     * 
     */
    public String name;



    /**
     * NFS export configuration for the root volume. Exactly 1 item. See `nfs_exports` Block Below for details.
     * 
     */
    public OpenZfsVolumeNfsExports nfsExports;



    /**
     * Specifies the configuration to use when creating the OpenZFS volume. See `origin_snapshot` Block below for details.
     * 
     */
    public OpenZfsVolumeOriginSnapshot originSnapshot;



    /**
     * The volume id of volume that will be the parent volume for the volume being created, this could be the root volume created from the `aws.fsx.OpenZfsFileSystem` resource with the `root_volume_id` or the `id` property of another `aws.fsx.OpenZfsVolume`.
     * 
     */
    public String parentVolumeId;



    /**
     * specifies whether the volume is read-only. Default is false.
     * 
     */
    public Boolean readOnly;



    /**
     * The record size of an OpenZFS volume, in kibibytes (KiB). Valid values are `4`, `8`, `16`, `32`, `64`, `128`, `256`, `512`, or `1024` KiB. The default is `128` KiB.
     * 
     */
    public Integer recordSizeKib;



    /**
     * The maximum amount of storage in gibibytes (GiB) that the volume can use from its parent.
     * 
     */
    public Integer storageCapacityQuotaGib;



    /**
     * The amount of storage in gibibytes (GiB) to reserve from the parent volume.
     * 
     */
    public Integer storageCapacityReservationGib;



    /**
     * A map of tags to assign to the file system. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



    /**
     * Specify how much storage users or groups can use on the volume. Maximum of 100 items. See `user_and_group_quotas` Block Below.
     * 
     */
    public List<OpenZfsVolumeUserAndGroupQuota> userAndGroupQuotas;



    public String volumeType;



}
