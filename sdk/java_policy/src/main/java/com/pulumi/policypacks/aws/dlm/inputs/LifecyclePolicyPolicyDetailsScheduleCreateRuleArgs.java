// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.dlm.inputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class LifecyclePolicyPolicyDetailsScheduleCreateRuleArgs {

    /**
     * The schedule, as a Cron expression. The schedule interval must be between 1 hour and 1 year. Conflicts with `interval`, `interval_unit`, and `times`.
     * 
     */
    private UndeferrableValue<String> cronExpression;

    public String cronExpression() {
        if (cronExpression == null) return null;
        return cronExpression.getValue("LifecyclePolicyPolicyDetailsScheduleCreateRuleArgs.cronExpression");
    }

    private UndeferrableValue<Integer> interval;

    public Integer interval() {
        if (interval == null) return null;
        return interval.getValue("LifecyclePolicyPolicyDetailsScheduleCreateRuleArgs.interval");
    }

    private UndeferrableValue<String> intervalUnit;

    public String intervalUnit() {
        if (intervalUnit == null) return null;
        return intervalUnit.getValue("LifecyclePolicyPolicyDetailsScheduleCreateRuleArgs.intervalUnit");
    }

    /**
     * Specifies the destination for snapshots created by the policy. To create snapshots in the same Region as the source resource, specify `CLOUD`. To create snapshots on the same Outpost as the source resource, specify `OUTPOST_LOCAL`. If you omit this parameter, `CLOUD` is used by default. If the policy targets resources in an AWS Region, then you must create snapshots in the same Region as the source resource. If the policy targets resources on an Outpost, then you can create snapshots on the same Outpost as the source resource, or in the Region of that Outpost. Valid values are `CLOUD` and `OUTPOST_LOCAL`.
     * 
     */
    private UndeferrableValue<String> location;

    public String location() {
        if (location == null) return null;
        return location.getValue("LifecyclePolicyPolicyDetailsScheduleCreateRuleArgs.location");
    }

    /**
     * A list of times in 24 hour clock format that sets when the lifecycle policy should be evaluated. Max of 1. Conflicts with `cron_expression`. Must be set if `interval` is set.
     * 
     */
    private UndeferrableValue<String> times;

    public String times() {
        if (times == null) return null;
        return times.getValue("LifecyclePolicyPolicyDetailsScheduleCreateRuleArgs.times");
    }

}
