// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.codebuild.inputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.codebuild.inputs.FleetScalingConfigurationTargetTrackingScalingConfigArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class FleetScalingConfigurationArgs {

    private UndeferrableValue<Integer> desiredCapacity;

    public Integer desiredCapacity() {
        if (desiredCapacity == null) return null;
        return desiredCapacity.getValue("FleetScalingConfigurationArgs.desiredCapacity");
    }

    /**
     * Maximum number of instances in the ï¬‚eet when auto-scaling.
     * 
     */
    private UndeferrableValue<Integer> maxCapacity;

    public Integer maxCapacity() {
        if (maxCapacity == null) return null;
        return maxCapacity.getValue("FleetScalingConfigurationArgs.maxCapacity");
    }

    /**
     * Scaling type for a compute fleet. Valid value: `TARGET_TRACKING_SCALING`.
     * 
     */
    private UndeferrableValue<String> scalingType;

    public String scalingType() {
        if (scalingType == null) return null;
        return scalingType.getValue("FleetScalingConfigurationArgs.scalingType");
    }

    /**
     * Configuration block. Detailed below.
     * 
     */
    private UndeferrableValue<List<FleetScalingConfigurationTargetTrackingScalingConfigArgs>> targetTrackingScalingConfigs;

    public List<FleetScalingConfigurationTargetTrackingScalingConfigArgs> targetTrackingScalingConfigs() {
        if (targetTrackingScalingConfigs == null) return null;
        return targetTrackingScalingConfigs.getValue("FleetScalingConfigurationArgs.targetTrackingScalingConfigs");
    }

}
