// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.cloudwatch;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:cloudwatch/contributorInsightRule:ContributorInsightRule")
public final class ContributorInsightRule extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * ARN of the Contributor Insight Rule.
     * 
     */
    @PolicyResourceProperty(name="resourceArn", flag="unknown_resourceArn")
    private String value_resourceArn;
    private boolean unknown_resourceArn;
    public String resourceArn() {
        if (!unknown_resourceArn) return value_resourceArn;
        throw new UndeferrableValueException("Value 'ContributorInsightRule.resourceArn' is not present");
    }

    /**
     * Definition of the rule, as a JSON object. For details on the valid syntax, see [Contributor Insights Rule Syntax](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContributorInsights-RuleSyntax.html).
     * 
     */
    @PolicyResourceProperty(name="ruleDefinition", flag="unknown_ruleDefinition")
    private String value_ruleDefinition;
    private boolean unknown_ruleDefinition;
    public String ruleDefinition() {
        if (!unknown_ruleDefinition) return value_ruleDefinition;
        throw new UndeferrableValueException("Value 'ContributorInsightRule.ruleDefinition' is not present");
    }

    /**
     * Unique name of the rule.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="ruleName", flag="unknown_ruleName")
    private String value_ruleName;
    private boolean unknown_ruleName;
    public String ruleName() {
        if (!unknown_ruleName) return value_ruleName;
        throw new UndeferrableValueException("Value 'ContributorInsightRule.ruleName' is not present");
    }

    /**
     * State of the rule. Valid values are `ENABLED` and `DISABLED`.
     * 
     */
    @PolicyResourceProperty(name="ruleState", flag="unknown_ruleState")
    private @Nullable String value_ruleState;
    private boolean unknown_ruleState;
    public @Nullable String ruleState() {
        if (!unknown_ruleState) return value_ruleState;
        throw new UndeferrableValueException("Value 'ContributorInsightRule.ruleState' is not present");
    }

    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'ContributorInsightRule.tags' is not present");
    }

    /**
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'ContributorInsightRule.tagsAll' is not present");
    }

}
