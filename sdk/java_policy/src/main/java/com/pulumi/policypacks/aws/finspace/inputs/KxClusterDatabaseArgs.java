// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.finspace.inputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.finspace.inputs.KxClusterDatabaseCacheConfigurationArgs;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class KxClusterDatabaseArgs {

    /**
     * Configuration details for the disk cache to increase performance reading from a KX database mounted to the cluster. See cache_configurations.
     * 
     */
    private UndeferrableValue<List<KxClusterDatabaseCacheConfigurationArgs>> cacheConfigurations;

    public List<KxClusterDatabaseCacheConfigurationArgs> cacheConfigurations() {
        if (cacheConfigurations == null) return null;
        return cacheConfigurations.getValue("KxClusterDatabaseArgs.cacheConfigurations");
    }

    /**
     * A unique identifier of the changeset that is associated with the cluster.
     * 
     */
    private UndeferrableValue<String> changesetId;

    public String changesetId() {
        if (changesetId == null) return null;
        return changesetId.getValue("KxClusterDatabaseArgs.changesetId");
    }

    /**
     * Name of the KX database.
     * 
     */
    private UndeferrableValue<String> databaseName;

    public String databaseName() {
        if (databaseName == null) return null;
        return databaseName.getValue("KxClusterDatabaseArgs.databaseName");
    }

    /**
     * The name of the dataview to be used for caching historical data on disk. You cannot update to a different dataview name once a cluster is created. Use `lifecycle` `ignore_changes` for database to prevent any undesirable behaviors.
     * 
     */
    private UndeferrableValue<String> dataviewName;

    public String dataviewName() {
        if (dataviewName == null) return null;
        return dataviewName.getValue("KxClusterDatabaseArgs.dataviewName");
    }

}
