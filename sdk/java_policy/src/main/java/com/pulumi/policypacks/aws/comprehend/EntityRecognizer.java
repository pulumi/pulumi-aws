// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.comprehend;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.comprehend.outputs.EntityRecognizerInputDataConfig;
import com.pulumi.policypacks.aws.comprehend.outputs.EntityRecognizerVpcConfig;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:comprehend/entityRecognizer:EntityRecognizer")
public final class EntityRecognizer extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * ARN of the Entity Recognizer version.
     * 
     */
    private UndeferrableValue<String> arn;

    public String arn() {
        if (arn == null) return null;
        return arn.getValue("EntityRecognizer.arn");
    }

    /**
     * The ARN for an IAM Role which allows Comprehend to read the training and testing data.
     * 
     */
    private UndeferrableValue<String> dataAccessRoleArn;

    public String dataAccessRoleArn() {
        if (dataAccessRoleArn == null) return null;
        return dataAccessRoleArn.getValue("EntityRecognizer.dataAccessRoleArn");
    }

    /**
     * Configuration for the training and testing data.
     * See the `input_data_config` Configuration Block section below.
     * 
     */
    private UndeferrableValue<EntityRecognizerInputDataConfig> inputDataConfig;

    public EntityRecognizerInputDataConfig inputDataConfig() {
        if (inputDataConfig == null) return null;
        return inputDataConfig.getValue("EntityRecognizer.inputDataConfig");
    }

    /**
     * Two-letter language code for the language.
     * One of `en`, `es`, `fr`, `it`, `de`, or `pt`.
     * 
     */
    private UndeferrableValue<String> languageCode;

    public String languageCode() {
        if (languageCode == null) return null;
        return languageCode.getValue("EntityRecognizer.languageCode");
    }

    /**
     * The ID or ARN of a KMS Key used to encrypt trained Entity Recognizers.
     * 
     */
    private @Nullable UndeferrableValue<String> modelKmsKeyId;

    public @Nullable String modelKmsKeyId() {
        if (modelKmsKeyId == null) return null;
        return modelKmsKeyId.getValue("EntityRecognizer.modelKmsKeyId");
    }

    /**
     * Name for the Entity Recognizer.
     * Has a maximum length of 63 characters.
     * Can contain upper- and lower-case letters, numbers, and hypen (`-`).
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("EntityRecognizer.name");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` Configuration Block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private @Nullable UndeferrableValue<Map<String,String>> tags;

    public @Nullable Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("EntityRecognizer.tags");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    private UndeferrableValue<Map<String,String>> tagsAll;

    public Map<String,String> tagsAll() {
        if (tagsAll == null) return null;
        return tagsAll.getValue("EntityRecognizer.tagsAll");
    }

    /**
     * Name for the version of the Entity Recognizer.
     * Each version must have a unique name within the Entity Recognizer.
     * If omitted, the provider will assign a random, unique version name.
     * If explicitly set to `&#34;&#34;`, no version name will be set.
     * Has a maximum length of 63 characters.
     * Can contain upper- and lower-case letters, numbers, and hypen (`-`).
     * Conflicts with `version_name_prefix`.
     * 
     */
    private UndeferrableValue<String> versionName;

    public String versionName() {
        if (versionName == null) return null;
        return versionName.getValue("EntityRecognizer.versionName");
    }

    /**
     * Creates a unique version name beginning with the specified prefix.
     * Has a maximum length of 37 characters.
     * Can contain upper- and lower-case letters, numbers, and hypen (`-`).
     * Conflicts with `version_name`.
     * 
     */
    private UndeferrableValue<String> versionNamePrefix;

    public String versionNamePrefix() {
        if (versionNamePrefix == null) return null;
        return versionNamePrefix.getValue("EntityRecognizer.versionNamePrefix");
    }

    /**
     * ID or ARN of a KMS Key used to encrypt storage volumes during job processing.
     * 
     */
    private @Nullable UndeferrableValue<String> volumeKmsKeyId;

    public @Nullable String volumeKmsKeyId() {
        if (volumeKmsKeyId == null) return null;
        return volumeKmsKeyId.getValue("EntityRecognizer.volumeKmsKeyId");
    }

    /**
     * Configuration parameters for VPC to contain Entity Recognizer resources.
     * See the `vpc_config` Configuration Block section below.
     * 
     */
    private @Nullable UndeferrableValue<EntityRecognizerVpcConfig> vpcConfig;

    public @Nullable EntityRecognizerVpcConfig vpcConfig() {
        if (vpcConfig == null) return null;
        return vpcConfig.getValue("EntityRecognizer.vpcConfig");
    }

}
