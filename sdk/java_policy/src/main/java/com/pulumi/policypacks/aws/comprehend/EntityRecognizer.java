// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.comprehend;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.comprehend.outputs.EntityRecognizerInputDataConfig;
import com.pulumi.policypacks.aws.comprehend.outputs.EntityRecognizerVpcConfig;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:comprehend/entityRecognizer:EntityRecognizer")
public final class EntityRecognizer extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * ARN of the Entity Recognizer version.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'EntityRecognizer.arn' is not present");
    }

    /**
     * The ARN for an IAM Role which allows Comprehend to read the training and testing data.
     * 
     */
    @PolicyResourceProperty(name="dataAccessRoleArn", flag="unknown_dataAccessRoleArn")
    private String value_dataAccessRoleArn;
    private boolean unknown_dataAccessRoleArn;
    public String dataAccessRoleArn() {
        if (!unknown_dataAccessRoleArn) return value_dataAccessRoleArn;
        throw new UndeferrableValueException("Value 'EntityRecognizer.dataAccessRoleArn' is not present");
    }

    /**
     * Configuration for the training and testing data.
     * See the `input_data_config` Configuration Block section below.
     * 
     */
    @PolicyResourceProperty(name="inputDataConfig", flag="unknown_inputDataConfig")
    private EntityRecognizerInputDataConfig value_inputDataConfig;
    private boolean unknown_inputDataConfig;
    public EntityRecognizerInputDataConfig inputDataConfig() {
        if (!unknown_inputDataConfig) return value_inputDataConfig;
        throw new UndeferrableValueException("Value 'EntityRecognizer.inputDataConfig' is not present");
    }

    /**
     * Two-letter language code for the language.
     * One of `en`, `es`, `fr`, `it`, `de`, or `pt`.
     * 
     */
    @PolicyResourceProperty(name="languageCode", flag="unknown_languageCode")
    private String value_languageCode;
    private boolean unknown_languageCode;
    public String languageCode() {
        if (!unknown_languageCode) return value_languageCode;
        throw new UndeferrableValueException("Value 'EntityRecognizer.languageCode' is not present");
    }

    /**
     * The ID or ARN of a KMS Key used to encrypt trained Entity Recognizers.
     * 
     */
    @PolicyResourceProperty(name="modelKmsKeyId", flag="unknown_modelKmsKeyId")
    private @Nullable String value_modelKmsKeyId;
    private boolean unknown_modelKmsKeyId;
    public @Nullable String modelKmsKeyId() {
        if (!unknown_modelKmsKeyId) return value_modelKmsKeyId;
        throw new UndeferrableValueException("Value 'EntityRecognizer.modelKmsKeyId' is not present");
    }

    /**
     * Name for the Entity Recognizer.
     * Has a maximum length of 63 characters.
     * Can contain upper- and lower-case letters, numbers, and hypen (`-`).
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'EntityRecognizer.name' is not present");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` Configuration Block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'EntityRecognizer.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'EntityRecognizer.tagsAll' is not present");
    }

    /**
     * Name for the version of the Entity Recognizer.
     * Each version must have a unique name within the Entity Recognizer.
     * If omitted, the provider will assign a random, unique version name.
     * If explicitly set to `&#34;&#34;`, no version name will be set.
     * Has a maximum length of 63 characters.
     * Can contain upper- and lower-case letters, numbers, and hypen (`-`).
     * Conflicts with `version_name_prefix`.
     * 
     */
    @PolicyResourceProperty(name="versionName", flag="unknown_versionName")
    private String value_versionName;
    private boolean unknown_versionName;
    public String versionName() {
        if (!unknown_versionName) return value_versionName;
        throw new UndeferrableValueException("Value 'EntityRecognizer.versionName' is not present");
    }

    /**
     * Creates a unique version name beginning with the specified prefix.
     * Has a maximum length of 37 characters.
     * Can contain upper- and lower-case letters, numbers, and hypen (`-`).
     * Conflicts with `version_name`.
     * 
     */
    @PolicyResourceProperty(name="versionNamePrefix", flag="unknown_versionNamePrefix")
    private String value_versionNamePrefix;
    private boolean unknown_versionNamePrefix;
    public String versionNamePrefix() {
        if (!unknown_versionNamePrefix) return value_versionNamePrefix;
        throw new UndeferrableValueException("Value 'EntityRecognizer.versionNamePrefix' is not present");
    }

    /**
     * ID or ARN of a KMS Key used to encrypt storage volumes during job processing.
     * 
     */
    @PolicyResourceProperty(name="volumeKmsKeyId", flag="unknown_volumeKmsKeyId")
    private @Nullable String value_volumeKmsKeyId;
    private boolean unknown_volumeKmsKeyId;
    public @Nullable String volumeKmsKeyId() {
        if (!unknown_volumeKmsKeyId) return value_volumeKmsKeyId;
        throw new UndeferrableValueException("Value 'EntityRecognizer.volumeKmsKeyId' is not present");
    }

    /**
     * Configuration parameters for VPC to contain Entity Recognizer resources.
     * See the `vpc_config` Configuration Block section below.
     * 
     */
    @PolicyResourceProperty(name="vpcConfig", flag="unknown_vpcConfig")
    private @Nullable EntityRecognizerVpcConfig value_vpcConfig;
    private boolean unknown_vpcConfig;
    public @Nullable EntityRecognizerVpcConfig vpcConfig() {
        if (!unknown_vpcConfig) return value_vpcConfig;
        throw new UndeferrableValueException("Value 'EntityRecognizer.vpcConfig' is not present");
    }

}
