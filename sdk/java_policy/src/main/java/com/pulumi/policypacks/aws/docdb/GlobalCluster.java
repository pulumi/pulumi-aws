// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.docdb;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.docdb.outputs.GlobalClusterGlobalClusterMember;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:docdb/globalCluster:GlobalCluster")
public final class GlobalCluster extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Global Cluster Amazon Resource Name (ARN)
     * 
     */
    private UndeferrableValue<String> arn;

    public String arn() {
        if (arn == null) return null;
        return arn.getValue("GlobalCluster.arn");
    }

    /**
     * Name for an automatically created database on cluster creation.
     * 
     */
    private @Nullable UndeferrableValue<String> databaseName;

    public @Nullable String databaseName() {
        if (databaseName == null) return null;
        return databaseName.getValue("GlobalCluster.databaseName");
    }

    /**
     * If the Global Cluster should have deletion protection enabled. The database can&#39;t be deleted when this value is set to `true`. The default is `false`.
     * 
     */
    private @Nullable UndeferrableValue<Boolean> deletionProtection;

    public @Nullable Boolean deletionProtection() {
        if (deletionProtection == null) return null;
        return deletionProtection.getValue("GlobalCluster.deletionProtection");
    }

    /**
     * Name of the database engine to be used for this DB cluster. The provider will only perform drift detection if a configuration value is provided. Current Valid values: `docdb`. Defaults to `docdb`. Conflicts with `source_db_cluster_identifier`.
     * 
     */
    private UndeferrableValue<String> engine;

    public String engine() {
        if (engine == null) return null;
        return engine.getValue("GlobalCluster.engine");
    }

    /**
     * Engine version of the global database. Upgrading the engine version will result in all cluster members being immediately updated and will.
     * * **NOTE:** Upgrading major versions is not supported.
     * 
     */
    private UndeferrableValue<String> engineVersion;

    public String engineVersion() {
        if (engineVersion == null) return null;
        return engineVersion.getValue("GlobalCluster.engineVersion");
    }

    /**
     * The global cluster identifier.
     * 
     */
    private UndeferrableValue<String> globalClusterIdentifier;

    public String globalClusterIdentifier() {
        if (globalClusterIdentifier == null) return null;
        return globalClusterIdentifier.getValue("GlobalCluster.globalClusterIdentifier");
    }

    /**
     * Set of objects containing Global Cluster members.
     * 
     */
    private UndeferrableValue<List<GlobalClusterGlobalClusterMember>> globalClusterMembers;

    public List<GlobalClusterGlobalClusterMember> globalClusterMembers() {
        if (globalClusterMembers == null) return null;
        return globalClusterMembers.getValue("GlobalCluster.globalClusterMembers");
    }

    /**
     * AWS Region-unique, immutable identifier for the global database cluster. This identifier is found in AWS CloudTrail log entries whenever the AWS KMS key for the DB cluster is accessed.
     * 
     */
    private UndeferrableValue<String> globalClusterResourceId;

    public String globalClusterResourceId() {
        if (globalClusterResourceId == null) return null;
        return globalClusterResourceId.getValue("GlobalCluster.globalClusterResourceId");
    }

    /**
     * Amazon Resource Name (ARN) to use as the primary DB Cluster of the Global Cluster on creation. The provider cannot perform drift detection of this value.
     * 
     */
    private UndeferrableValue<String> sourceDbClusterIdentifier;

    public String sourceDbClusterIdentifier() {
        if (sourceDbClusterIdentifier == null) return null;
        return sourceDbClusterIdentifier.getValue("GlobalCluster.sourceDbClusterIdentifier");
    }

    private UndeferrableValue<String> status;

    public String status() {
        if (status == null) return null;
        return status.getValue("GlobalCluster.status");
    }

    /**
     * Specifies whether the DB cluster is encrypted. The default is `false` unless `source_db_cluster_identifier` is specified and encrypted. The provider will only perform drift detection if a configuration value is provided.
     * 
     */
    private UndeferrableValue<Boolean> storageEncrypted;

    public Boolean storageEncrypted() {
        if (storageEncrypted == null) return null;
        return storageEncrypted.getValue("GlobalCluster.storageEncrypted");
    }

}
