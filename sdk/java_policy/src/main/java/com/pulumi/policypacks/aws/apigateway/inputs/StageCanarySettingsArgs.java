// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.apigateway.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


public final class StageCanarySettingsArgs {

    /**
     * ID of the deployment that the canary points to.
     * 
     */
    @PolicyResourceProperty(name="deploymentId", flag="unknown_deploymentId")
    private String value_deploymentId;
    private boolean unknown_deploymentId;
    public String deploymentId() {
        if (!unknown_deploymentId) return value_deploymentId;
        throw new UndeferrableValueException("Value 'StageCanarySettingsArgs.deploymentId' is not present");
    }

    /**
     * Percent `0.0` - `100.0` of traffic to divert to the canary deployment.
     * 
     */
    @PolicyResourceProperty(name="percentTraffic", flag="unknown_percentTraffic")
    private Double value_percentTraffic;
    private boolean unknown_percentTraffic;
    public Double percentTraffic() {
        if (!unknown_percentTraffic) return value_percentTraffic;
        throw new UndeferrableValueException("Value 'StageCanarySettingsArgs.percentTraffic' is not present");
    }

    /**
     * Map of overridden stage `variables` (including new variables) for the canary deployment.
     * 
     */
    @PolicyResourceProperty(name="stageVariableOverrides", flag="unknown_stageVariableOverrides")
    private Map<String,String> value_stageVariableOverrides;
    private boolean unknown_stageVariableOverrides;
    public Map<String,String> stageVariableOverrides() {
        if (!unknown_stageVariableOverrides) return value_stageVariableOverrides;
        throw new UndeferrableValueException("Value 'StageCanarySettingsArgs.stageVariableOverrides' is not present");
    }

    /**
     * Whether the canary deployment uses the stage cache. Defaults to false.
     * 
     */
    @PolicyResourceProperty(name="useStageCache", flag="unknown_useStageCache")
    private Boolean value_useStageCache;
    private boolean unknown_useStageCache;
    public Boolean useStageCache() {
        if (!unknown_useStageCache) return value_useStageCache;
        throw new UndeferrableValueException("Value 'StageCanarySettingsArgs.useStageCache' is not present");
    }

}
