// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.iot;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:iot/certificate:Certificate")
public final class Certificate extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Boolean flag to indicate if the certificate should be active
     * 
     */
    private UndeferrableValue<Boolean> active;

    public Boolean active() {
        if (active == null) return null;
        return active.getValue("Certificate.active");
    }

    /**
     * The ARN of the created certificate.
     * 
     */
    private UndeferrableValue<String> arn;

    public String arn() {
        if (arn == null) return null;
        return arn.getValue("Certificate.arn");
    }

    /**
     * The certificate ID of the CA certificate used to sign the certificate.
     * 
     */
    private UndeferrableValue<String> caCertificateId;

    public String caCertificateId() {
        if (caCertificateId == null) return null;
        return caCertificateId.getValue("Certificate.caCertificateId");
    }

    /**
     * The CA certificate for the certificate to be registered. If this is set, the CA needs to be registered with AWS IoT beforehand.
     * 
     */
    private @Nullable UndeferrableValue<String> caPem;

    public @Nullable String caPem() {
        if (caPem == null) return null;
        return caPem.getValue("Certificate.caPem");
    }

    /**
     * The certificate to be registered. If `ca_pem` is unspecified, review
     * [RegisterCertificateWithoutCA](https://docs.aws.amazon.com/iot/latest/apireference/API_RegisterCertificateWithoutCA.html).
     * If `ca_pem` is specified, review
     * [RegisterCertificate](https://docs.aws.amazon.com/iot/latest/apireference/API_RegisterCertificate.html)
     * for more information on registering a certificate.
     * 
     */
    private UndeferrableValue<String> certificatePem;

    public String certificatePem() {
        if (certificatePem == null) return null;
        return certificatePem.getValue("Certificate.certificatePem");
    }

    /**
     * The certificate signing request. Review
     * [CreateCertificateFromCsr](https://docs.aws.amazon.com/iot/latest/apireference/API_CreateCertificateFromCsr.html)
     * for more information on generating a certificate from a certificate signing request (CSR).
     * If none is specified both the certificate and keys will be generated, review [CreateKeysAndCertificate](https://docs.aws.amazon.com/iot/latest/apireference/API_CreateKeysAndCertificate.html)
     * for more information on generating keys and a certificate.
     * 
     */
    private @Nullable UndeferrableValue<String> csr;

    public @Nullable String csr() {
        if (csr == null) return null;
        return csr.getValue("Certificate.csr");
    }

    /**
     * When neither CSR nor certificate is provided, the private key.
     * 
     */
    private UndeferrableValue<String> privateKey;

    public String privateKey() {
        if (privateKey == null) return null;
        return privateKey.getValue("Certificate.privateKey");
    }

    /**
     * When neither CSR nor certificate is provided, the public key.
     * 
     */
    private UndeferrableValue<String> publicKey;

    public String publicKey() {
        if (publicKey == null) return null;
        return publicKey.getValue("Certificate.publicKey");
    }

}
