// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appflow.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Args;
import java.lang.String;
import javax.annotation.Nullable;


public final class ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorArgs {

    @PolicyResourceProperty(name="apiKey", flag="unknown_apiKey")
    private ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyArgs value_apiKey;
    private boolean unknown_apiKey;
    public ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorApiKeyArgs apiKey() {
        if (!unknown_apiKey) return value_apiKey;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorArgs.apiKey' is not present");
    }

    /**
     * The authentication type that the custom connector uses for authenticating while creating a connector profile. One of: `APIKEY`, `BASIC`, `CUSTOM`, `OAUTH2`.
     * 
     */
    @PolicyResourceProperty(name="authenticationType", flag="unknown_authenticationType")
    private String value_authenticationType;
    private boolean unknown_authenticationType;
    public String authenticationType() {
        if (!unknown_authenticationType) return value_authenticationType;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorArgs.authenticationType' is not present");
    }

    /**
     * Basic credentials that are required for the authentication of the user.
     * 
     */
    @PolicyResourceProperty(name="basic", flag="unknown_basic")
    private ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicArgs value_basic;
    private boolean unknown_basic;
    public ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorBasicArgs basic() {
        if (!unknown_basic) return value_basic;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorArgs.basic' is not present");
    }

    /**
     * If the connector uses the custom authentication mechanism, this holds the required credentials.
     * 
     */
    @PolicyResourceProperty(name="custom", flag="unknown_custom")
    private ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomArgs value_custom;
    private boolean unknown_custom;
    public ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorCustomArgs custom() {
        if (!unknown_custom) return value_custom;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorArgs.custom' is not present");
    }

    /**
     * OAuth 2.0 credentials required for the authentication of the user.
     * 
     */
    @PolicyResourceProperty(name="oauth2", flag="unknown_oauth2")
    private ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Args value_oauth2;
    private boolean unknown_oauth2;
    public ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorOauth2Args oauth2() {
        if (!unknown_oauth2) return value_oauth2;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorArgs.oauth2' is not present");
    }

}
