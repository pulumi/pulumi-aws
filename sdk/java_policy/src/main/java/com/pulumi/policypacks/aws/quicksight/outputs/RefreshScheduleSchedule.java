// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.quicksight.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.quicksight.outputs.RefreshScheduleScheduleScheduleFrequency;
import java.lang.String;
import javax.annotation.Nullable;


public final class RefreshScheduleSchedule {

    /**
     * The type of refresh that the dataset undergoes. Valid values are `INCREMENTAL_REFRESH` and `FULL_REFRESH`.
     * 
     */
    @PolicyResourceProperty(name="refreshType", flag="unknown_refreshType")
    private String value_refreshType;
    private boolean unknown_refreshType;
    public String refreshType() {
        if (!unknown_refreshType) return value_refreshType;
        throw new UndeferrableValueException("Value 'RefreshScheduleSchedule.refreshType' is not present");
    }

    /**
     * The configuration of the [schedule frequency](https://docs.aws.amazon.com/quicksight/latest/APIReference/API_RefreshFrequency.html). See schedule_frequency.
     * 
     */
    @PolicyResourceProperty(name="scheduleFrequency", flag="unknown_scheduleFrequency")
    private @Nullable RefreshScheduleScheduleScheduleFrequency value_scheduleFrequency;
    private boolean unknown_scheduleFrequency;
    public @Nullable RefreshScheduleScheduleScheduleFrequency scheduleFrequency() {
        if (!unknown_scheduleFrequency) return value_scheduleFrequency;
        throw new UndeferrableValueException("Value 'RefreshScheduleSchedule.scheduleFrequency' is not present");
    }

    /**
     * Time after which the refresh schedule can be started, expressed in `YYYY-MM-DDTHH:MM:SS` format.
     * 
     */
    @PolicyResourceProperty(name="startAfterDateTime", flag="unknown_startAfterDateTime")
    private @Nullable String value_startAfterDateTime;
    private boolean unknown_startAfterDateTime;
    public @Nullable String startAfterDateTime() {
        if (!unknown_startAfterDateTime) return value_startAfterDateTime;
        throw new UndeferrableValueException("Value 'RefreshScheduleSchedule.startAfterDateTime' is not present");
    }

}
