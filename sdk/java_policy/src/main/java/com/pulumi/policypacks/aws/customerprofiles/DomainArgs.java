// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.customerprofiles;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.customerprofiles.inputs.DomainMatchingArgs;
import com.pulumi.policypacks.aws.customerprofiles.inputs.DomainRuleBasedMatchingArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:customerprofiles/domain:Domain")
public final class DomainArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The URL of the SQS dead letter queue, which is used for reporting errors associated with ingesting data from third party applications.
     * 
     */
    private UndeferrableValue<String> deadLetterQueueUrl;

    public String deadLetterQueueUrl() {
        if (deadLetterQueueUrl == null) return null;
        return deadLetterQueueUrl.getValue("DomainArgs.deadLetterQueueUrl");
    }

    /**
     * The default encryption key, which is an AWS managed key, is used when no specific type of encryption key is specified. It is used to encrypt all data before it is placed in permanent or semi-permanent storage.
     * 
     */
    private UndeferrableValue<String> defaultEncryptionKey;

    public String defaultEncryptionKey() {
        if (defaultEncryptionKey == null) return null;
        return defaultEncryptionKey.getValue("DomainArgs.defaultEncryptionKey");
    }

    /**
     * The default number of days until the data within the domain expires.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<Integer> defaultExpirationDays;

    public Integer defaultExpirationDays() {
        if (defaultExpirationDays == null) return null;
        return defaultExpirationDays.getValue("DomainArgs.defaultExpirationDays");
    }

    /**
     * The name for your Customer Profile domain. It must be unique for your AWS account.
     * 
     */
    private UndeferrableValue<String> domainName;

    public String domainName() {
        if (domainName == null) return null;
        return domainName.getValue("DomainArgs.domainName");
    }

    /**
     * A block that specifies the process of matching duplicate profiles. Documented below.
     * 
     */
    private UndeferrableValue<DomainMatchingArgs> matching;

    public DomainMatchingArgs matching() {
        if (matching == null) return null;
        return matching.getValue("DomainArgs.matching");
    }

    /**
     * A block that specifies the process of matching duplicate profiles using the Rule-Based matching. Documented below.
     * 
     */
    private UndeferrableValue<DomainRuleBasedMatchingArgs> ruleBasedMatching;

    public DomainRuleBasedMatchingArgs ruleBasedMatching() {
        if (ruleBasedMatching == null) return null;
        return ruleBasedMatching.getValue("DomainArgs.ruleBasedMatching");
    }

    /**
     * Tags to apply to the domain. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("DomainArgs.tags");
    }

}
