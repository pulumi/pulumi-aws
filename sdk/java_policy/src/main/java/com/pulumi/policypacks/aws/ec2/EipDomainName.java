// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.ec2.outputs.EipDomainNameTimeouts;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ec2/eipDomainName:EipDomainName")
public final class EipDomainName extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The allocation ID.
     * 
     */
    @PolicyResourceProperty(name="allocationId", flag="unknown_allocationId")
    private String value_allocationId;
    private boolean unknown_allocationId;
    public String allocationId() {
        if (!unknown_allocationId) return value_allocationId;
        throw new UndeferrableValueException("Value 'EipDomainName.allocationId' is not present");
    }

    /**
     * The domain name to modify for the IP address.
     * 
     */
    @PolicyResourceProperty(name="domainName", flag="unknown_domainName")
    private String value_domainName;
    private boolean unknown_domainName;
    public String domainName() {
        if (!unknown_domainName) return value_domainName;
        throw new UndeferrableValueException("Value 'EipDomainName.domainName' is not present");
    }

    /**
     * The DNS pointer (PTR) record for the IP address.
     * 
     */
    @PolicyResourceProperty(name="ptrRecord", flag="unknown_ptrRecord")
    private String value_ptrRecord;
    private boolean unknown_ptrRecord;
    public String ptrRecord() {
        if (!unknown_ptrRecord) return value_ptrRecord;
        throw new UndeferrableValueException("Value 'EipDomainName.ptrRecord' is not present");
    }

    @PolicyResourceProperty(name="timeouts", flag="unknown_timeouts")
    private @Nullable EipDomainNameTimeouts value_timeouts;
    private boolean unknown_timeouts;
    public @Nullable EipDomainNameTimeouts timeouts() {
        if (!unknown_timeouts) return value_timeouts;
        throw new UndeferrableValueException("Value 'EipDomainName.timeouts' is not present");
    }

}
