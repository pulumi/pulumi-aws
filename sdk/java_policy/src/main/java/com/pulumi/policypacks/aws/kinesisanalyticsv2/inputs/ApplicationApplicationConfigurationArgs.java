// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.kinesisanalyticsv2.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.kinesisanalyticsv2.inputs.ApplicationApplicationConfigurationApplicationCodeConfigurationArgs;
import com.pulumi.policypacks.aws.kinesisanalyticsv2.inputs.ApplicationApplicationConfigurationApplicationSnapshotConfigurationArgs;
import com.pulumi.policypacks.aws.kinesisanalyticsv2.inputs.ApplicationApplicationConfigurationEnvironmentPropertiesArgs;
import com.pulumi.policypacks.aws.kinesisanalyticsv2.inputs.ApplicationApplicationConfigurationFlinkApplicationConfigurationArgs;
import com.pulumi.policypacks.aws.kinesisanalyticsv2.inputs.ApplicationApplicationConfigurationRunConfigurationArgs;
import com.pulumi.policypacks.aws.kinesisanalyticsv2.inputs.ApplicationApplicationConfigurationSqlApplicationConfigurationArgs;
import com.pulumi.policypacks.aws.kinesisanalyticsv2.inputs.ApplicationApplicationConfigurationVpcConfigurationArgs;
import javax.annotation.Nullable;


public final class ApplicationApplicationConfigurationArgs {

    /**
     * The code location and type parameters for the application.
     * 
     */
    @PolicyResourceProperty(name="applicationCodeConfiguration", flag="unknown_applicationCodeConfiguration")
    private ApplicationApplicationConfigurationApplicationCodeConfigurationArgs value_applicationCodeConfiguration;
    private boolean unknown_applicationCodeConfiguration;
    public ApplicationApplicationConfigurationApplicationCodeConfigurationArgs applicationCodeConfiguration() {
        if (!unknown_applicationCodeConfiguration) return value_applicationCodeConfiguration;
        throw new UndeferrableValueException("Value 'ApplicationApplicationConfigurationArgs.applicationCodeConfiguration' is not present");
    }

    /**
     * Describes whether snapshots are enabled for a Flink-based application.
     * 
     */
    @PolicyResourceProperty(name="applicationSnapshotConfiguration", flag="unknown_applicationSnapshotConfiguration")
    private ApplicationApplicationConfigurationApplicationSnapshotConfigurationArgs value_applicationSnapshotConfiguration;
    private boolean unknown_applicationSnapshotConfiguration;
    public ApplicationApplicationConfigurationApplicationSnapshotConfigurationArgs applicationSnapshotConfiguration() {
        if (!unknown_applicationSnapshotConfiguration) return value_applicationSnapshotConfiguration;
        throw new UndeferrableValueException("Value 'ApplicationApplicationConfigurationArgs.applicationSnapshotConfiguration' is not present");
    }

    /**
     * Describes execution properties for a Flink-based application.
     * 
     */
    @PolicyResourceProperty(name="environmentProperties", flag="unknown_environmentProperties")
    private ApplicationApplicationConfigurationEnvironmentPropertiesArgs value_environmentProperties;
    private boolean unknown_environmentProperties;
    public ApplicationApplicationConfigurationEnvironmentPropertiesArgs environmentProperties() {
        if (!unknown_environmentProperties) return value_environmentProperties;
        throw new UndeferrableValueException("Value 'ApplicationApplicationConfigurationArgs.environmentProperties' is not present");
    }

    /**
     * The configuration of a Flink-based application.
     * 
     */
    @PolicyResourceProperty(name="flinkApplicationConfiguration", flag="unknown_flinkApplicationConfiguration")
    private ApplicationApplicationConfigurationFlinkApplicationConfigurationArgs value_flinkApplicationConfiguration;
    private boolean unknown_flinkApplicationConfiguration;
    public ApplicationApplicationConfigurationFlinkApplicationConfigurationArgs flinkApplicationConfiguration() {
        if (!unknown_flinkApplicationConfiguration) return value_flinkApplicationConfiguration;
        throw new UndeferrableValueException("Value 'ApplicationApplicationConfigurationArgs.flinkApplicationConfiguration' is not present");
    }

    /**
     * Describes the starting properties for a Flink-based application.
     * 
     */
    @PolicyResourceProperty(name="runConfiguration", flag="unknown_runConfiguration")
    private ApplicationApplicationConfigurationRunConfigurationArgs value_runConfiguration;
    private boolean unknown_runConfiguration;
    public ApplicationApplicationConfigurationRunConfigurationArgs runConfiguration() {
        if (!unknown_runConfiguration) return value_runConfiguration;
        throw new UndeferrableValueException("Value 'ApplicationApplicationConfigurationArgs.runConfiguration' is not present");
    }

    /**
     * The configuration of a SQL-based application.
     * 
     */
    @PolicyResourceProperty(name="sqlApplicationConfiguration", flag="unknown_sqlApplicationConfiguration")
    private ApplicationApplicationConfigurationSqlApplicationConfigurationArgs value_sqlApplicationConfiguration;
    private boolean unknown_sqlApplicationConfiguration;
    public ApplicationApplicationConfigurationSqlApplicationConfigurationArgs sqlApplicationConfiguration() {
        if (!unknown_sqlApplicationConfiguration) return value_sqlApplicationConfiguration;
        throw new UndeferrableValueException("Value 'ApplicationApplicationConfigurationArgs.sqlApplicationConfiguration' is not present");
    }

    /**
     * The VPC configuration of a Flink-based application.
     * 
     */
    @PolicyResourceProperty(name="vpcConfiguration", flag="unknown_vpcConfiguration")
    private ApplicationApplicationConfigurationVpcConfigurationArgs value_vpcConfiguration;
    private boolean unknown_vpcConfiguration;
    public ApplicationApplicationConfigurationVpcConfigurationArgs vpcConfiguration() {
        if (!unknown_vpcConfiguration) return value_vpcConfiguration;
        throw new UndeferrableValueException("Value 'ApplicationApplicationConfigurationArgs.vpcConfiguration' is not present");
    }

}
