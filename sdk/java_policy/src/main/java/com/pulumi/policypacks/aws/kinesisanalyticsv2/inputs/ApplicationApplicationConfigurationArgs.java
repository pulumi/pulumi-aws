// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.kinesisanalyticsv2.inputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.kinesisanalyticsv2.inputs.ApplicationApplicationConfigurationApplicationCodeConfigurationArgs;
import com.pulumi.policypacks.aws.kinesisanalyticsv2.inputs.ApplicationApplicationConfigurationApplicationSnapshotConfigurationArgs;
import com.pulumi.policypacks.aws.kinesisanalyticsv2.inputs.ApplicationApplicationConfigurationEnvironmentPropertiesArgs;
import com.pulumi.policypacks.aws.kinesisanalyticsv2.inputs.ApplicationApplicationConfigurationFlinkApplicationConfigurationArgs;
import com.pulumi.policypacks.aws.kinesisanalyticsv2.inputs.ApplicationApplicationConfigurationRunConfigurationArgs;
import com.pulumi.policypacks.aws.kinesisanalyticsv2.inputs.ApplicationApplicationConfigurationSqlApplicationConfigurationArgs;
import com.pulumi.policypacks.aws.kinesisanalyticsv2.inputs.ApplicationApplicationConfigurationVpcConfigurationArgs;
import javax.annotation.Nullable;


public final class ApplicationApplicationConfigurationArgs {

    /**
     * The code location and type parameters for the application.
     * 
     */
    private UndeferrableValue<ApplicationApplicationConfigurationApplicationCodeConfigurationArgs> applicationCodeConfiguration;

    public ApplicationApplicationConfigurationApplicationCodeConfigurationArgs applicationCodeConfiguration() {
        if (applicationCodeConfiguration == null) return null;
        return applicationCodeConfiguration.getValue("ApplicationApplicationConfigurationArgs.applicationCodeConfiguration");
    }

    /**
     * Describes whether snapshots are enabled for a Flink-based application.
     * 
     */
    private UndeferrableValue<ApplicationApplicationConfigurationApplicationSnapshotConfigurationArgs> applicationSnapshotConfiguration;

    public ApplicationApplicationConfigurationApplicationSnapshotConfigurationArgs applicationSnapshotConfiguration() {
        if (applicationSnapshotConfiguration == null) return null;
        return applicationSnapshotConfiguration.getValue("ApplicationApplicationConfigurationArgs.applicationSnapshotConfiguration");
    }

    /**
     * Describes execution properties for a Flink-based application.
     * 
     */
    private UndeferrableValue<ApplicationApplicationConfigurationEnvironmentPropertiesArgs> environmentProperties;

    public ApplicationApplicationConfigurationEnvironmentPropertiesArgs environmentProperties() {
        if (environmentProperties == null) return null;
        return environmentProperties.getValue("ApplicationApplicationConfigurationArgs.environmentProperties");
    }

    /**
     * The configuration of a Flink-based application.
     * 
     */
    private UndeferrableValue<ApplicationApplicationConfigurationFlinkApplicationConfigurationArgs> flinkApplicationConfiguration;

    public ApplicationApplicationConfigurationFlinkApplicationConfigurationArgs flinkApplicationConfiguration() {
        if (flinkApplicationConfiguration == null) return null;
        return flinkApplicationConfiguration.getValue("ApplicationApplicationConfigurationArgs.flinkApplicationConfiguration");
    }

    /**
     * Describes the starting properties for a Flink-based application.
     * 
     */
    private UndeferrableValue<ApplicationApplicationConfigurationRunConfigurationArgs> runConfiguration;

    public ApplicationApplicationConfigurationRunConfigurationArgs runConfiguration() {
        if (runConfiguration == null) return null;
        return runConfiguration.getValue("ApplicationApplicationConfigurationArgs.runConfiguration");
    }

    /**
     * The configuration of a SQL-based application.
     * 
     */
    private UndeferrableValue<ApplicationApplicationConfigurationSqlApplicationConfigurationArgs> sqlApplicationConfiguration;

    public ApplicationApplicationConfigurationSqlApplicationConfigurationArgs sqlApplicationConfiguration() {
        if (sqlApplicationConfiguration == null) return null;
        return sqlApplicationConfiguration.getValue("ApplicationApplicationConfigurationArgs.sqlApplicationConfiguration");
    }

    /**
     * The VPC configuration of a Flink-based application.
     * 
     */
    private UndeferrableValue<ApplicationApplicationConfigurationVpcConfigurationArgs> vpcConfiguration;

    public ApplicationApplicationConfigurationVpcConfigurationArgs vpcConfiguration() {
        if (vpcConfiguration == null) return null;
        return vpcConfiguration.getValue("ApplicationApplicationConfigurationArgs.vpcConfiguration");
    }

}
