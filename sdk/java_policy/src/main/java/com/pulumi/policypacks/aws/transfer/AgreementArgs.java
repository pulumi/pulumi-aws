// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.transfer;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:transfer/agreement:Agreement")
public final class AgreementArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The IAM Role which provides read and write access to the parent directory of the file location mentioned in the StartFileTransfer request.
     * 
     */
    private UndeferrableValue<String> accessRole;

    public String accessRole() {
        if (accessRole == null) return null;
        return accessRole.getValue("AgreementArgs.accessRole");
    }

    /**
     * The landing directory for the files transferred by using the AS2 protocol.
     * 
     */
    private UndeferrableValue<String> baseDirectory;

    public String baseDirectory() {
        if (baseDirectory == null) return null;
        return baseDirectory.getValue("AgreementArgs.baseDirectory");
    }

    /**
     * The Optional description of the transdfer.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("AgreementArgs.description");
    }

    /**
     * The unique identifier for the AS2 local profile.
     * 
     */
    private UndeferrableValue<String> localProfileId;

    public String localProfileId() {
        if (localProfileId == null) return null;
        return localProfileId.getValue("AgreementArgs.localProfileId");
    }

    /**
     * The unique identifier for the AS2 partner profile.
     * 
     */
    private UndeferrableValue<String> partnerProfileId;

    public String partnerProfileId() {
        if (partnerProfileId == null) return null;
        return partnerProfileId.getValue("AgreementArgs.partnerProfileId");
    }

    /**
     * The unique server identifier for the server instance. This is the specific server the agreement uses.
     * 
     */
    private UndeferrableValue<String> serverId;

    public String serverId() {
        if (serverId == null) return null;
        return serverId.getValue("AgreementArgs.serverId");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("AgreementArgs.tags");
    }

}
