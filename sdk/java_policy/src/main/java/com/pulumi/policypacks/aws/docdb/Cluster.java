// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.docdb;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.docdb.ClusterRestoreToPointInTime;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;


@PolicyResourceType(type="aws:docdb/cluster:Cluster")
public final class Cluster extends com.pulumi.resources.PolicyResource {

    /**
     * A value that indicates whether major version upgrades are allowed. Constraints: You must allow major version upgrades when specifying a value for the EngineVersion parameter that is a different major version than the DB cluster&#39;s current version.
     * 
     */
    public Boolean allowMajorVersionUpgrade;



    /**
     * Specifies whether any cluster modifications
     * are applied immediately, or during the next maintenance window. Default is
     * `false`.
     * 
     */
    public Boolean applyImmediately;



    /**
     * Amazon Resource Name (ARN) of cluster
     * 
     */
    public String arn;



    /**
     * A list of EC2 Availability Zones that
     * instances in the DB cluster can be created in.
     * 
     */
    public List<String> availabilityZones;



    /**
     * The days to retain backups for. Default `1`
     * 
     */
    public Integer backupRetentionPeriod;



    /**
     * The cluster identifier. If omitted, the provider will assign a random, unique identifier.
     * 
     */
    public String clusterIdentifier;



    /**
     * Creates a unique cluster identifier beginning with the specified prefix. Conflicts with `cluster_identifier`.
     * 
     */
    public String clusterIdentifierPrefix;



    /**
     * List of DocumentDB Instances that are a part of this cluster
     * 
     */
    public List<String> clusterMembers;



    /**
     * The DocumentDB Cluster Resource ID
     * 
     */
    public String clusterResourceId;



    /**
     * A cluster parameter group to associate with the cluster.
     * 
     */
    public String dbClusterParameterGroupName;



    /**
     * A DB subnet group to associate with this DB instance.
     * 
     */
    public String dbSubnetGroupName;



    /**
     * A boolean value that indicates whether the DB cluster has deletion protection enabled. The database can&#39;t be deleted when deletion protection is enabled. Defaults to `false`.
     * 
     */
    public Boolean deletionProtection;



    /**
     * List of log types to export to cloudwatch. If omitted, no logs will be exported.
     * The following log types are supported: `audit`, `profiler`.
     * 
     */
    public List<String> enabledCloudwatchLogsExports;



    /**
     * The DNS address of the DocumentDB instance
     * 
     */
    public String endpoint;



    /**
     * The name of the database engine to be used for this DB cluster. Defaults to `docdb`. Valid values: `docdb`.
     * 
     */
    public String engine;



    /**
     * The database engine version. Updating this argument results in an outage.
     * 
     */
    public String engineVersion;



    /**
     * The name of your final DB snapshot
     * when this DB cluster is deleted. If omitted, no final snapshot will be
     * made.
     * 
     */
    public String finalSnapshotIdentifier;



    /**
     * The global cluster identifier specified on `aws.docdb.GlobalCluster`.
     * 
     */
    public String globalClusterIdentifier;



    /**
     * The Route53 Hosted Zone ID of the endpoint
     * 
     */
    public String hostedZoneId;



    /**
     * The ARN for the KMS encryption key. When specifying `kms_key_id`, `storage_encrypted` needs to be set to true.
     * 
     */
    public String kmsKeyId;



    /**
     * Password for the master DB user. Note that this may
     * show up in logs, and it will be stored in the state file. Please refer to the DocumentDB Naming Constraints. Conflicts with `master_password_wo`.
     * 
     */
    public String masterPassword;



    /**
     * Username for the master DB user.
     * 
     */
    public String masterUsername;



    /**
     * The port on which the DB accepts connections
     * 
     */
    public Integer port;



    /**
     * The daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter.Time in UTC
     * Default: A 30-minute window selected at random from an 8-hour block of time per regionE.g., 04:00-09:00
     * 
     */
    public String preferredBackupWindow;



    /**
     * The weekly time range during which system maintenance can occur, in (UTC) e.g., wed:04:00-wed:04:30
     * 
     */
    public String preferredMaintenanceWindow;



    /**
     * A read-only endpoint for the DocumentDB cluster, automatically load-balanced across replicas
     * 
     */
    public String readerEndpoint;



    /**
     * A configuration block for restoring a DB instance to an arbitrary point in time. Requires the `identifier` argument to be set with the name of the new DB instance to be created. See Restore To Point In Time below for details.
     * 
     */
    public ClusterRestoreToPointInTime restoreToPointInTime;



    /**
     * Determines whether a final DB snapshot is created before the DB cluster is deleted. If true is specified, no DB snapshot is created. If false is specified, a DB snapshot is created before the DB cluster is deleted, using the value from `final_snapshot_identifier`. Default is `false`.
     * 
     */
    public Boolean skipFinalSnapshot;



    /**
     * Specifies whether or not to create this cluster from a snapshot. You can use either the name or ARN when specifying a DB cluster snapshot, or the ARN when specifying a DB snapshot. Automated snapshots **should not** be used for this attribute, unless from a different cluster. Automated snapshots are deleted as part of cluster destruction when the resource is replaced.
     * 
     */
    public String snapshotIdentifier;



    /**
     * Specifies whether the DB cluster is encrypted. The default is `false`.
     * 
     */
    public Boolean storageEncrypted;



    /**
     * The storage type to associate with the DB cluster. Valid values: `standard`, `iopt1`.
     * 
     */
    public String storageType;



    /**
     * A map of tags to assign to the DB cluster. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



    /**
     * List of VPC security groups to associate
     * with the Cluster
     * 
     */
    public List<String> vpcSecurityGroupIds;



}
