// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ec2/eip:Eip")
public final class EipArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * IP address from an EC2 BYOIP pool. This option is only available for VPC EIPs.
     * 
     */
    @PolicyResourceProperty(name="address", flag="unknown_address")
    private String value_address;
    private boolean unknown_address;
    public String address() {
        if (!unknown_address) return value_address;
        throw new UndeferrableValueException("Value 'EipArgs.address' is not present");
    }

    /**
     * User-specified primary or secondary private IP address to associate with the Elastic IP address. If no private IP address is specified, the Elastic IP address is associated with the primary private IP address.
     * 
     */
    @PolicyResourceProperty(name="associateWithPrivateIp", flag="unknown_associateWithPrivateIp")
    private String value_associateWithPrivateIp;
    private boolean unknown_associateWithPrivateIp;
    public String associateWithPrivateIp() {
        if (!unknown_associateWithPrivateIp) return value_associateWithPrivateIp;
        throw new UndeferrableValueException("Value 'EipArgs.associateWithPrivateIp' is not present");
    }

    /**
     * ID  of a customer-owned address pool. For more on customer owned IP addressed check out [Customer-owned IP addresses guide](https://docs.aws.amazon.com/outposts/latest/userguide/outposts-networking-components.html#ip-addressing).
     * 
     */
    @PolicyResourceProperty(name="customerOwnedIpv4Pool", flag="unknown_customerOwnedIpv4Pool")
    private String value_customerOwnedIpv4Pool;
    private boolean unknown_customerOwnedIpv4Pool;
    public String customerOwnedIpv4Pool() {
        if (!unknown_customerOwnedIpv4Pool) return value_customerOwnedIpv4Pool;
        throw new UndeferrableValueException("Value 'EipArgs.customerOwnedIpv4Pool' is not present");
    }

    /**
     * Indicates if this EIP is for use in VPC (`vpc`).
     * 
     */
    @PolicyResourceProperty(name="domain", flag="unknown_domain")
    private String value_domain;
    private boolean unknown_domain;
    public String domain() {
        if (!unknown_domain) return value_domain;
        throw new UndeferrableValueException("Value 'EipArgs.domain' is not present");
    }

    /**
     * EC2 instance ID.
     * 
     */
    @PolicyResourceProperty(name="instance", flag="unknown_instance")
    private String value_instance;
    private boolean unknown_instance;
    public String instance() {
        if (!unknown_instance) return value_instance;
        throw new UndeferrableValueException("Value 'EipArgs.instance' is not present");
    }

    /**
     * The ID of an IPAM pool which has an Amazon-provided or BYOIP public IPv4 CIDR provisioned to it.
     * 
     */
    @PolicyResourceProperty(name="ipamPoolId", flag="unknown_ipamPoolId")
    private String value_ipamPoolId;
    private boolean unknown_ipamPoolId;
    public String ipamPoolId() {
        if (!unknown_ipamPoolId) return value_ipamPoolId;
        throw new UndeferrableValueException("Value 'EipArgs.ipamPoolId' is not present");
    }

    /**
     * Location from which the IP address is advertised. Use this parameter to limit the address to this location.
     * 
     */
    @PolicyResourceProperty(name="networkBorderGroup", flag="unknown_networkBorderGroup")
    private String value_networkBorderGroup;
    private boolean unknown_networkBorderGroup;
    public String networkBorderGroup() {
        if (!unknown_networkBorderGroup) return value_networkBorderGroup;
        throw new UndeferrableValueException("Value 'EipArgs.networkBorderGroup' is not present");
    }

    /**
     * Network interface ID to associate with.
     * 
     */
    @PolicyResourceProperty(name="networkInterface", flag="unknown_networkInterface")
    private String value_networkInterface;
    private boolean unknown_networkInterface;
    public String networkInterface() {
        if (!unknown_networkInterface) return value_networkInterface;
        throw new UndeferrableValueException("Value 'EipArgs.networkInterface' is not present");
    }

    /**
     * EC2 IPv4 address pool identifier or `amazon`.
     * This option is only available for VPC EIPs.
     * 
     */
    @PolicyResourceProperty(name="publicIpv4Pool", flag="unknown_publicIpv4Pool")
    private String value_publicIpv4Pool;
    private boolean unknown_publicIpv4Pool;
    public String publicIpv4Pool() {
        if (!unknown_publicIpv4Pool) return value_publicIpv4Pool;
        throw new UndeferrableValueException("Value 'EipArgs.publicIpv4Pool' is not present");
    }

    /**
     * Map of tags to assign to the resource. Tags can only be applied to EIPs in a VPC. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'EipArgs.tags' is not present");
    }

    /**
     * Boolean if the EIP is in a VPC or not. Use `domain` instead.
     * Defaults to `true` unless the region supports EC2-Classic.
     * 
     * &gt; **NOTE:** You can specify either the `instance` ID or the `network_interface` ID, but not both. Including both will **not** return an error from the AWS API, but will have undefined behavior. See the relevant [AssociateAddress API Call][1] for more information.
     * 
     * &gt; **NOTE:** Specifying both `public_ipv4_pool` and `address` won&#39;t cause an error but `address` will be used in the
     * case both options are defined as the api only requires one or the other.
     * 
     * @deprecated
     * vpc is deprecated. Use domain instead.
     * 
     */
    @Deprecated /* vpc is deprecated. Use domain instead. */
    @PolicyResourceProperty(name="vpc", flag="unknown_vpc")
    private Boolean value_vpc;
    private boolean unknown_vpc;
    public Boolean vpc() {
        if (!unknown_vpc) return value_vpc;
        throw new UndeferrableValueException("Value 'EipArgs.vpc' is not present");
    }

}
