// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ec2/eip:Eip")
public final class EipArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * IP address from an EC2 BYOIP pool. This option is only available for VPC EIPs.
     * 
     */
    private UndeferrableValue<String> address;

    public String address() {
        if (address == null) return null;
        return address.getValue("EipArgs.address");
    }

    /**
     * User-specified primary or secondary private IP address to associate with the Elastic IP address. If no private IP address is specified, the Elastic IP address is associated with the primary private IP address.
     * 
     */
    private UndeferrableValue<String> associateWithPrivateIp;

    public String associateWithPrivateIp() {
        if (associateWithPrivateIp == null) return null;
        return associateWithPrivateIp.getValue("EipArgs.associateWithPrivateIp");
    }

    /**
     * ID  of a customer-owned address pool. For more on customer owned IP addressed check out [Customer-owned IP addresses guide](https://docs.aws.amazon.com/outposts/latest/userguide/outposts-networking-components.html#ip-addressing).
     * 
     */
    private UndeferrableValue<String> customerOwnedIpv4Pool;

    public String customerOwnedIpv4Pool() {
        if (customerOwnedIpv4Pool == null) return null;
        return customerOwnedIpv4Pool.getValue("EipArgs.customerOwnedIpv4Pool");
    }

    /**
     * Indicates if this EIP is for use in VPC (`vpc`).
     * 
     */
    private UndeferrableValue<String> domain;

    public String domain() {
        if (domain == null) return null;
        return domain.getValue("EipArgs.domain");
    }

    /**
     * EC2 instance ID.
     * 
     */
    private UndeferrableValue<String> instance;

    public String instance() {
        if (instance == null) return null;
        return instance.getValue("EipArgs.instance");
    }

    /**
     * The ID of an IPAM pool which has an Amazon-provided or BYOIP public IPv4 CIDR provisioned to it.
     * 
     */
    private UndeferrableValue<String> ipamPoolId;

    public String ipamPoolId() {
        if (ipamPoolId == null) return null;
        return ipamPoolId.getValue("EipArgs.ipamPoolId");
    }

    /**
     * Location from which the IP address is advertised. Use this parameter to limit the address to this location.
     * 
     */
    private UndeferrableValue<String> networkBorderGroup;

    public String networkBorderGroup() {
        if (networkBorderGroup == null) return null;
        return networkBorderGroup.getValue("EipArgs.networkBorderGroup");
    }

    /**
     * Network interface ID to associate with.
     * 
     */
    private UndeferrableValue<String> networkInterface;

    public String networkInterface() {
        if (networkInterface == null) return null;
        return networkInterface.getValue("EipArgs.networkInterface");
    }

    /**
     * EC2 IPv4 address pool identifier or `amazon`.
     * This option is only available for VPC EIPs.
     * 
     */
    private UndeferrableValue<String> publicIpv4Pool;

    public String publicIpv4Pool() {
        if (publicIpv4Pool == null) return null;
        return publicIpv4Pool.getValue("EipArgs.publicIpv4Pool");
    }

    /**
     * Map of tags to assign to the resource. Tags can only be applied to EIPs in a VPC. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("EipArgs.tags");
    }

    /**
     * Boolean if the EIP is in a VPC or not. Use `domain` instead.
     * Defaults to `true` unless the region supports EC2-Classic.
     * 
     * &gt; **NOTE:** You can specify either the `instance` ID or the `network_interface` ID, but not both. Including both will **not** return an error from the AWS API, but will have undefined behavior. See the relevant [AssociateAddress API Call][1] for more information.
     * 
     * &gt; **NOTE:** Specifying both `public_ipv4_pool` and `address` won&#39;t cause an error but `address` will be used in the
     * case both options are defined as the api only requires one or the other.
     * 
     * @deprecated
     * vpc is deprecated. Use domain instead.
     * 
     */
    @Deprecated /* vpc is deprecated. Use domain instead. */
    private UndeferrableValue<Boolean> vpc;

    public Boolean vpc() {
        if (vpc == null) return null;
        return vpc.getValue("EipArgs.vpc");
    }

}
