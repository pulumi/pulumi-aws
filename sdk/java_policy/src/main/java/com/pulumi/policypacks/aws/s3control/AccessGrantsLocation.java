// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.s3control;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:s3control/accessGrantsLocation:AccessGrantsLocation")
public final class AccessGrantsLocation extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Amazon Resource Name (ARN) of the S3 Access Grants location.
     * 
     */
    private UndeferrableValue<String> accessGrantsLocationArn;

    public String accessGrantsLocationArn() {
        if (accessGrantsLocationArn == null) return null;
        return accessGrantsLocationArn.getValue("AccessGrantsLocation.accessGrantsLocationArn");
    }

    /**
     * Unique ID of the S3 Access Grants location.
     * 
     */
    private UndeferrableValue<String> accessGrantsLocationId;

    public String accessGrantsLocationId() {
        if (accessGrantsLocationId == null) return null;
        return accessGrantsLocationId.getValue("AccessGrantsLocation.accessGrantsLocationId");
    }

    private UndeferrableValue<String> accountId;

    public String accountId() {
        if (accountId == null) return null;
        return accountId.getValue("AccessGrantsLocation.accountId");
    }

    /**
     * The ARN of the IAM role that S3 Access Grants should use when fulfilling runtime access
     * requests to the location.
     * 
     */
    private UndeferrableValue<String> iamRoleArn;

    public String iamRoleArn() {
        if (iamRoleArn == null) return null;
        return iamRoleArn.getValue("AccessGrantsLocation.iamRoleArn");
    }

    /**
     * The default S3 URI `s3://` or the URI to a custom location, a specific bucket or prefix.
     * 
     */
    private UndeferrableValue<String> locationScope;

    public String locationScope() {
        if (locationScope == null) return null;
        return locationScope.getValue("AccessGrantsLocation.locationScope");
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private @Nullable UndeferrableValue<Map<String,String>> tags;

    public @Nullable Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("AccessGrantsLocation.tags");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    private UndeferrableValue<Map<String,String>> tagsAll;

    public Map<String,String> tagsAll() {
        if (tagsAll == null) return null;
        return tagsAll.getValue("AccessGrantsLocation.tagsAll");
    }

}
