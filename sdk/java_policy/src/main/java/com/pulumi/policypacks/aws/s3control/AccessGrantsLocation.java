// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.s3control;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:s3control/accessGrantsLocation:AccessGrantsLocation")
public final class AccessGrantsLocation extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Amazon Resource Name (ARN) of the S3 Access Grants location.
     * 
     */
    @PolicyResourceProperty(name="accessGrantsLocationArn", flag="unknown_accessGrantsLocationArn")
    private String value_accessGrantsLocationArn;
    private boolean unknown_accessGrantsLocationArn;
    public String accessGrantsLocationArn() {
        if (!unknown_accessGrantsLocationArn) return value_accessGrantsLocationArn;
        throw new UndeferrableValueException("Value 'AccessGrantsLocation.accessGrantsLocationArn' is not present");
    }

    /**
     * Unique ID of the S3 Access Grants location.
     * 
     */
    @PolicyResourceProperty(name="accessGrantsLocationId", flag="unknown_accessGrantsLocationId")
    private String value_accessGrantsLocationId;
    private boolean unknown_accessGrantsLocationId;
    public String accessGrantsLocationId() {
        if (!unknown_accessGrantsLocationId) return value_accessGrantsLocationId;
        throw new UndeferrableValueException("Value 'AccessGrantsLocation.accessGrantsLocationId' is not present");
    }

    @PolicyResourceProperty(name="accountId", flag="unknown_accountId")
    private String value_accountId;
    private boolean unknown_accountId;
    public String accountId() {
        if (!unknown_accountId) return value_accountId;
        throw new UndeferrableValueException("Value 'AccessGrantsLocation.accountId' is not present");
    }

    /**
     * The ARN of the IAM role that S3 Access Grants should use when fulfilling runtime access
     * requests to the location.
     * 
     */
    @PolicyResourceProperty(name="iamRoleArn", flag="unknown_iamRoleArn")
    private String value_iamRoleArn;
    private boolean unknown_iamRoleArn;
    public String iamRoleArn() {
        if (!unknown_iamRoleArn) return value_iamRoleArn;
        throw new UndeferrableValueException("Value 'AccessGrantsLocation.iamRoleArn' is not present");
    }

    /**
     * The default S3 URI `s3://` or the URI to a custom location, a specific bucket or prefix.
     * 
     */
    @PolicyResourceProperty(name="locationScope", flag="unknown_locationScope")
    private String value_locationScope;
    private boolean unknown_locationScope;
    public String locationScope() {
        if (!unknown_locationScope) return value_locationScope;
        throw new UndeferrableValueException("Value 'AccessGrantsLocation.locationScope' is not present");
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'AccessGrantsLocation.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'AccessGrantsLocation.tagsAll' is not present");
    }

}
