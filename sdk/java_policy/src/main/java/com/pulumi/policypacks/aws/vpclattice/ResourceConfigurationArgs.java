// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.vpclattice;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.vpclattice.inputs.ResourceConfigurationResourceConfigurationDefinitionArgs;
import com.pulumi.policypacks.aws.vpclattice.inputs.ResourceConfigurationTimeoutsArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:vpclattice/resourceConfiguration:ResourceConfiguration")
public final class ResourceConfigurationArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Allow or Deny the association of this resource to a shareable service network.
     * 
     */
    private UndeferrableValue<Boolean> allowAssociationToShareableServiceNetwork;

    public Boolean allowAssociationToShareableServiceNetwork() {
        if (allowAssociationToShareableServiceNetwork == null) return null;
        return allowAssociationToShareableServiceNetwork.getValue("ResourceConfigurationArgs.allowAssociationToShareableServiceNetwork");
    }

    /**
     * Name for the Resource Configuration.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("ResourceConfigurationArgs.name");
    }

    /**
     * Port ranges to access the Resource either single port `80` or range `80-81` range.
     * 
     */
    private UndeferrableValue<List<String>> portRanges;

    public List<String> portRanges() {
        if (portRanges == null) return null;
        return portRanges.getValue("ResourceConfigurationArgs.portRanges");
    }

    /**
     * Protocol for the Resource `TCP` is currently the only supported value.  MUST be specified if `resource_configuration_group_id` is not.
     * 
     */
    private UndeferrableValue<String> protocol;

    public String protocol() {
        if (protocol == null) return null;
        return protocol.getValue("ResourceConfigurationArgs.protocol");
    }

    /**
     * Details of the Resource Configuration. See `resource_configuration_definition` Block for details.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<ResourceConfigurationResourceConfigurationDefinitionArgs> resourceConfigurationDefinition;

    public ResourceConfigurationResourceConfigurationDefinitionArgs resourceConfigurationDefinition() {
        if (resourceConfigurationDefinition == null) return null;
        return resourceConfigurationDefinition.getValue("ResourceConfigurationArgs.resourceConfigurationDefinition");
    }

    /**
     * ID of Resource Configuration where `type` is `CHILD`.
     * 
     */
    private UndeferrableValue<String> resourceConfigurationGroupId;

    public String resourceConfigurationGroupId() {
        if (resourceConfigurationGroupId == null) return null;
        return resourceConfigurationGroupId.getValue("ResourceConfigurationArgs.resourceConfigurationGroupId");
    }

    /**
     * ID of the Resource Gateway used to access the resource. MUST be specified if `resource_configuration_group_id` is not.
     * 
     */
    private UndeferrableValue<String> resourceGatewayIdentifier;

    public String resourceGatewayIdentifier() {
        if (resourceGatewayIdentifier == null) return null;
        return resourceGatewayIdentifier.getValue("ResourceConfigurationArgs.resourceGatewayIdentifier");
    }

    /**
     * Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("ResourceConfigurationArgs.tags");
    }

    private UndeferrableValue<ResourceConfigurationTimeoutsArgs> timeouts;

    public ResourceConfigurationTimeoutsArgs timeouts() {
        if (timeouts == null) return null;
        return timeouts.getValue("ResourceConfigurationArgs.timeouts");
    }

    /**
     * Type of Resource Configuration. Must be one of `GROUP`, `CHILD`, `SINGLE`, `ARN`.
     * 
     */
    private UndeferrableValue<String> type;

    public String type() {
        if (type == null) return null;
        return type.getValue("ResourceConfigurationArgs.type");
    }

}
