// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.iot;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.iot.inputs.DomainConfigurationAuthorizerConfigArgs;
import com.pulumi.policypacks.aws.iot.inputs.DomainConfigurationTlsConfigArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:iot/domainConfiguration:DomainConfiguration")
public final class DomainConfigurationArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * An object that specifies the authorization service for a domain. See the `authorizer_config` Block below for details.
     * 
     */
    private UndeferrableValue<DomainConfigurationAuthorizerConfigArgs> authorizerConfig;

    public DomainConfigurationAuthorizerConfigArgs authorizerConfig() {
        if (authorizerConfig == null) return null;
        return authorizerConfig.getValue("DomainConfigurationArgs.authorizerConfig");
    }

    /**
     * Fully-qualified domain name.
     * 
     */
    private UndeferrableValue<String> domainName;

    public String domainName() {
        if (domainName == null) return null;
        return domainName.getValue("DomainConfigurationArgs.domainName");
    }

    /**
     * The name of the domain configuration. This value must be unique to a region.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("DomainConfigurationArgs.name");
    }

    /**
     * The ARNs of the certificates that IoT passes to the device during the TLS handshake. Currently you can specify only one certificate ARN. This value is not required for Amazon Web Services-managed domains. When using a custom `domain_name`, the cert must include it.
     * 
     */
    private UndeferrableValue<List<String>> serverCertificateArns;

    public List<String> serverCertificateArns() {
        if (serverCertificateArns == null) return null;
        return serverCertificateArns.getValue("DomainConfigurationArgs.serverCertificateArns");
    }

    /**
     * The type of service delivered by the endpoint. Note: Amazon Web Services IoT Core currently supports only the `DATA` service type.
     * 
     */
    private UndeferrableValue<String> serviceType;

    public String serviceType() {
        if (serviceType == null) return null;
        return serviceType.getValue("DomainConfigurationArgs.serviceType");
    }

    /**
     * The status to which the domain configuration should be set. Valid values are `ENABLED` and `DISABLED`.
     * 
     */
    private UndeferrableValue<String> status;

    public String status() {
        if (status == null) return null;
        return status.getValue("DomainConfigurationArgs.status");
    }

    /**
     * Map of tags to assign to this resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("DomainConfigurationArgs.tags");
    }

    /**
     * An object that specifies the TLS configuration for a domain. See the `tls_config` Block below for details.
     * 
     */
    private UndeferrableValue<DomainConfigurationTlsConfigArgs> tlsConfig;

    public DomainConfigurationTlsConfigArgs tlsConfig() {
        if (tlsConfig == null) return null;
        return tlsConfig.getValue("DomainConfigurationArgs.tlsConfig");
    }

    /**
     * The certificate used to validate the server certificate and prove domain name ownership. This certificate must be signed by a public certificate authority. This value is not required for Amazon Web Services-managed domains.
     * 
     */
    private UndeferrableValue<String> validationCertificateArn;

    public String validationCertificateArn() {
        if (validationCertificateArn == null) return null;
        return validationCertificateArn.getValue("DomainConfigurationArgs.validationCertificateArn");
    }

}
