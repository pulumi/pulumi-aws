// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.dlm.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.dlm.outputs.LifecyclePolicyPolicyDetailsScheduleCreateRule;
import com.pulumi.policypacks.aws.dlm.outputs.LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRule;
import com.pulumi.policypacks.aws.dlm.outputs.LifecyclePolicyPolicyDetailsScheduleDeprecateRule;
import com.pulumi.policypacks.aws.dlm.outputs.LifecyclePolicyPolicyDetailsScheduleFastRestoreRule;
import com.pulumi.policypacks.aws.dlm.outputs.LifecyclePolicyPolicyDetailsScheduleRetainRule;
import com.pulumi.policypacks.aws.dlm.outputs.LifecyclePolicyPolicyDetailsScheduleShareRule;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


public final class LifecyclePolicyPolicyDetailsSchedule {

    private @Nullable UndeferrableValue<Boolean> copyTags;

    public @Nullable Boolean copyTags() {
        if (copyTags == null) return null;
        return copyTags.getValue("LifecyclePolicyPolicyDetailsSchedule.copyTags");
    }

    /**
     * See the `create_rule` block. Max of 1 per schedule.
     * 
     */
    private UndeferrableValue<LifecyclePolicyPolicyDetailsScheduleCreateRule> createRule;

    public LifecyclePolicyPolicyDetailsScheduleCreateRule createRule() {
        if (createRule == null) return null;
        return createRule.getValue("LifecyclePolicyPolicyDetailsSchedule.createRule");
    }

    /**
     * See the `cross_region_copy_rule` block. Max of 3 per schedule.
     * 
     */
    private @Nullable UndeferrableValue<List<LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRule>> crossRegionCopyRules;

    public @Nullable List<LifecyclePolicyPolicyDetailsScheduleCrossRegionCopyRule> crossRegionCopyRules() {
        if (crossRegionCopyRules == null) return null;
        return crossRegionCopyRules.getValue("LifecyclePolicyPolicyDetailsSchedule.crossRegionCopyRules");
    }

    private @Nullable UndeferrableValue<LifecyclePolicyPolicyDetailsScheduleDeprecateRule> deprecateRule;

    public @Nullable LifecyclePolicyPolicyDetailsScheduleDeprecateRule deprecateRule() {
        if (deprecateRule == null) return null;
        return deprecateRule.getValue("LifecyclePolicyPolicyDetailsSchedule.deprecateRule");
    }

    /**
     * See the `fast_restore_rule` block. Max of 1 per schedule.
     * 
     */
    private @Nullable UndeferrableValue<LifecyclePolicyPolicyDetailsScheduleFastRestoreRule> fastRestoreRule;

    public @Nullable LifecyclePolicyPolicyDetailsScheduleFastRestoreRule fastRestoreRule() {
        if (fastRestoreRule == null) return null;
        return fastRestoreRule.getValue("LifecyclePolicyPolicyDetailsSchedule.fastRestoreRule");
    }

    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("LifecyclePolicyPolicyDetailsSchedule.name");
    }

    private UndeferrableValue<LifecyclePolicyPolicyDetailsScheduleRetainRule> retainRule;

    public LifecyclePolicyPolicyDetailsScheduleRetainRule retainRule() {
        if (retainRule == null) return null;
        return retainRule.getValue("LifecyclePolicyPolicyDetailsSchedule.retainRule");
    }

    /**
     * See the `share_rule` block. Max of 1 per schedule.
     * 
     */
    private @Nullable UndeferrableValue<LifecyclePolicyPolicyDetailsScheduleShareRule> shareRule;

    public @Nullable LifecyclePolicyPolicyDetailsScheduleShareRule shareRule() {
        if (shareRule == null) return null;
        return shareRule.getValue("LifecyclePolicyPolicyDetailsSchedule.shareRule");
    }

    /**
     * A map of tag keys and their values. DLM lifecycle policies will already tag the snapshot with the tags on the volume. This configuration adds extra tags on top of these.
     * 
     */
    private @Nullable UndeferrableValue<Map<String,String>> tagsToAdd;

    public @Nullable Map<String,String> tagsToAdd() {
        if (tagsToAdd == null) return null;
        return tagsToAdd.getValue("LifecyclePolicyPolicyDetailsSchedule.tagsToAdd");
    }

    /**
     * A map of tag keys and variable values, where the values are determined when the policy is executed. Only `$(instance-id)` or `$(timestamp)` are valid values. Can only be used when `resource_types` is `INSTANCE`.
     * 
     */
    private @Nullable UndeferrableValue<Map<String,String>> variableTags;

    public @Nullable Map<String,String> variableTags() {
        if (variableTags == null) return null;
        return variableTags.getValue("LifecyclePolicyPolicyDetailsSchedule.variableTags");
    }

}
