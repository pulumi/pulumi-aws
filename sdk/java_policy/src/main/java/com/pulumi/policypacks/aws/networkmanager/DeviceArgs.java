// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.networkmanager;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.networkmanager.inputs.DeviceAwsLocationArgs;
import com.pulumi.policypacks.aws.networkmanager.inputs.DeviceLocationArgs;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:networkmanager/device:Device")
public final class DeviceArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The AWS location of the device. Documented below.
     * 
     */
    @PolicyResourceProperty(name="awsLocation", flag="unknown_awsLocation")
    private DeviceAwsLocationArgs value_awsLocation;
    private boolean unknown_awsLocation;
    public DeviceAwsLocationArgs awsLocation() {
        if (!unknown_awsLocation) return value_awsLocation;
        throw new UndeferrableValueException("Value 'DeviceArgs.awsLocation' is not present");
    }

    /**
     * A description of the device.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private String value_description;
    private boolean unknown_description;
    public String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'DeviceArgs.description' is not present");
    }

    /**
     * The ID of the global network.
     * 
     */
    @PolicyResourceProperty(name="globalNetworkId", flag="unknown_globalNetworkId")
    private String value_globalNetworkId;
    private boolean unknown_globalNetworkId;
    public String globalNetworkId() {
        if (!unknown_globalNetworkId) return value_globalNetworkId;
        throw new UndeferrableValueException("Value 'DeviceArgs.globalNetworkId' is not present");
    }

    /**
     * The location of the device. Documented below.
     * 
     */
    @PolicyResourceProperty(name="location", flag="unknown_location")
    private DeviceLocationArgs value_location;
    private boolean unknown_location;
    public DeviceLocationArgs location() {
        if (!unknown_location) return value_location;
        throw new UndeferrableValueException("Value 'DeviceArgs.location' is not present");
    }

    /**
     * The model of device.
     * 
     */
    @PolicyResourceProperty(name="model", flag="unknown_model")
    private String value_model;
    private boolean unknown_model;
    public String model() {
        if (!unknown_model) return value_model;
        throw new UndeferrableValueException("Value 'DeviceArgs.model' is not present");
    }

    /**
     * The serial number of the device.
     * 
     */
    @PolicyResourceProperty(name="serialNumber", flag="unknown_serialNumber")
    private String value_serialNumber;
    private boolean unknown_serialNumber;
    public String serialNumber() {
        if (!unknown_serialNumber) return value_serialNumber;
        throw new UndeferrableValueException("Value 'DeviceArgs.serialNumber' is not present");
    }

    /**
     * The ID of the site.
     * 
     */
    @PolicyResourceProperty(name="siteId", flag="unknown_siteId")
    private String value_siteId;
    private boolean unknown_siteId;
    public String siteId() {
        if (!unknown_siteId) return value_siteId;
        throw new UndeferrableValueException("Value 'DeviceArgs.siteId' is not present");
    }

    /**
     * Key-value tags for the device. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'DeviceArgs.tags' is not present");
    }

    /**
     * The type of device.
     * 
     */
    @PolicyResourceProperty(name="type", flag="unknown_type")
    private String value_type;
    private boolean unknown_type;
    public String type() {
        if (!unknown_type) return value_type;
        throw new UndeferrableValueException("Value 'DeviceArgs.type' is not present");
    }

    /**
     * The vendor of the device.
     * 
     */
    @PolicyResourceProperty(name="vendor", flag="unknown_vendor")
    private String value_vendor;
    private boolean unknown_vendor;
    public String vendor() {
        if (!unknown_vendor) return value_vendor;
        throw new UndeferrableValueException("Value 'DeviceArgs.vendor' is not present");
    }

}
