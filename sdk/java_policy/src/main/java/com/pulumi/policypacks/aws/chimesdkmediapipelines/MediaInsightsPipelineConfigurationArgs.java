// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.chimesdkmediapipelines;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.chimesdkmediapipelines.inputs.MediaInsightsPipelineConfigurationElementArgs;
import com.pulumi.policypacks.aws.chimesdkmediapipelines.inputs.MediaInsightsPipelineConfigurationRealTimeAlertConfigurationArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:chimesdkmediapipelines/mediaInsightsPipelineConfiguration:MediaInsightsPipelineConfiguration")
public final class MediaInsightsPipelineConfigurationArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Collection of processors and sinks to transform media and deliver data.
     * 
     */
    private UndeferrableValue<List<MediaInsightsPipelineConfigurationElementArgs>> elements;

    public List<MediaInsightsPipelineConfigurationElementArgs> elements() {
        if (elements == null) return null;
        return elements.getValue("MediaInsightsPipelineConfigurationArgs.elements");
    }

    /**
     * Configuration name.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("MediaInsightsPipelineConfigurationArgs.name");
    }

    /**
     * Configuration for real-time alert rules to send EventBridge notifications when certain conditions are met.
     * 
     */
    private UndeferrableValue<MediaInsightsPipelineConfigurationRealTimeAlertConfigurationArgs> realTimeAlertConfiguration;

    public MediaInsightsPipelineConfigurationRealTimeAlertConfigurationArgs realTimeAlertConfiguration() {
        if (realTimeAlertConfiguration == null) return null;
        return realTimeAlertConfiguration.getValue("MediaInsightsPipelineConfigurationArgs.realTimeAlertConfiguration");
    }

    /**
     * ARN of IAM Role used by service to invoke processors and sinks specified by configuration elements.
     * 
     */
    private UndeferrableValue<String> resourceAccessRoleArn;

    public String resourceAccessRoleArn() {
        if (resourceAccessRoleArn == null) return null;
        return resourceAccessRoleArn.getValue("MediaInsightsPipelineConfigurationArgs.resourceAccessRoleArn");
    }

    /**
     * Key-value map of tags for the resource.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("MediaInsightsPipelineConfigurationArgs.tags");
    }

}
