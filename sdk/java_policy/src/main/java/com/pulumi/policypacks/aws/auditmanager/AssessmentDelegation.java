// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.auditmanager;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:auditmanager/assessmentDelegation:AssessmentDelegation")
public final class AssessmentDelegation extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Identifier for the assessment.
     * 
     */
    @PolicyResourceProperty(name="assessmentId", flag="unknown_assessmentId")
    private String value_assessmentId;
    private boolean unknown_assessmentId;
    public String assessmentId() {
        if (!unknown_assessmentId) return value_assessmentId;
        throw new UndeferrableValueException("Value 'AssessmentDelegation.assessmentId' is not present");
    }

    /**
     * Comment describing the delegation request.
     * 
     */
    @PolicyResourceProperty(name="comment", flag="unknown_comment")
    private @Nullable String value_comment;
    private boolean unknown_comment;
    public @Nullable String comment() {
        if (!unknown_comment) return value_comment;
        throw new UndeferrableValueException("Value 'AssessmentDelegation.comment' is not present");
    }

    /**
     * Assessment control set name. This value is the control set name used during assessment creation (not the AWS-generated ID). The `_id` suffix on this attribute has been preserved to be consistent with the underlying AWS API.
     * 
     */
    @PolicyResourceProperty(name="controlSetId", flag="unknown_controlSetId")
    private String value_controlSetId;
    private boolean unknown_controlSetId;
    public String controlSetId() {
        if (!unknown_controlSetId) return value_controlSetId;
        throw new UndeferrableValueException("Value 'AssessmentDelegation.controlSetId' is not present");
    }

    /**
     * Unique identifier for the delegation.
     * 
     */
    @PolicyResourceProperty(name="delegationId", flag="unknown_delegationId")
    private String value_delegationId;
    private boolean unknown_delegationId;
    public String delegationId() {
        if (!unknown_delegationId) return value_delegationId;
        throw new UndeferrableValueException("Value 'AssessmentDelegation.delegationId' is not present");
    }

    /**
     * Amazon Resource Name (ARN) of the IAM role.
     * 
     */
    @PolicyResourceProperty(name="roleArn", flag="unknown_roleArn")
    private String value_roleArn;
    private boolean unknown_roleArn;
    public String roleArn() {
        if (!unknown_roleArn) return value_roleArn;
        throw new UndeferrableValueException("Value 'AssessmentDelegation.roleArn' is not present");
    }

    /**
     * Type of customer persona. For assessment delegation, type must always be `RESOURCE_OWNER`.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="roleType", flag="unknown_roleType")
    private String value_roleType;
    private boolean unknown_roleType;
    public String roleType() {
        if (!unknown_roleType) return value_roleType;
        throw new UndeferrableValueException("Value 'AssessmentDelegation.roleType' is not present");
    }

    /**
     * Status of the delegation.
     * 
     */
    @PolicyResourceProperty(name="status", flag="unknown_status")
    private String value_status;
    private boolean unknown_status;
    public String status() {
        if (!unknown_status) return value_status;
        throw new UndeferrableValueException("Value 'AssessmentDelegation.status' is not present");
    }

}
