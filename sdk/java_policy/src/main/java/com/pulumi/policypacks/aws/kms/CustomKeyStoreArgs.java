// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.kms;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.kms.inputs.CustomKeyStoreXksProxyAuthenticationCredentialArgs;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:kms/customKeyStore:CustomKeyStore")
public final class CustomKeyStoreArgs extends com.pulumi.resources.PolicyResourceInput {

    @PolicyResourceProperty(name="cloudHsmClusterId", flag="unknown_cloudHsmClusterId")
    private String value_cloudHsmClusterId;
    private boolean unknown_cloudHsmClusterId;
    public String cloudHsmClusterId() {
        if (!unknown_cloudHsmClusterId) return value_cloudHsmClusterId;
        throw new UndeferrableValueException("Value 'CustomKeyStoreArgs.cloudHsmClusterId' is not present");
    }

    /**
     * Unique name for Custom Key Store.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="customKeyStoreName", flag="unknown_customKeyStoreName")
    private String value_customKeyStoreName;
    private boolean unknown_customKeyStoreName;
    public String customKeyStoreName() {
        if (!unknown_customKeyStoreName) return value_customKeyStoreName;
        throw new UndeferrableValueException("Value 'CustomKeyStoreArgs.customKeyStoreName' is not present");
    }

    /**
     * Specifies the type of key store to create. Valid values are `AWS_CLOUDHSM` and `EXTERNAL_KEY_STORE`. If omitted, AWS will default the value to `AWS_CLOUDHSM`.
     * 
     */
    @PolicyResourceProperty(name="customKeyStoreType", flag="unknown_customKeyStoreType")
    private String value_customKeyStoreType;
    private boolean unknown_customKeyStoreType;
    public String customKeyStoreType() {
        if (!unknown_customKeyStoreType) return value_customKeyStoreType;
        throw new UndeferrableValueException("Value 'CustomKeyStoreArgs.customKeyStoreType' is not present");
    }

    @PolicyResourceProperty(name="keyStorePassword", flag="unknown_keyStorePassword")
    private String value_keyStorePassword;
    private boolean unknown_keyStorePassword;
    public String keyStorePassword() {
        if (!unknown_keyStorePassword) return value_keyStorePassword;
        throw new UndeferrableValueException("Value 'CustomKeyStoreArgs.keyStorePassword' is not present");
    }

    @PolicyResourceProperty(name="trustAnchorCertificate", flag="unknown_trustAnchorCertificate")
    private String value_trustAnchorCertificate;
    private boolean unknown_trustAnchorCertificate;
    public String trustAnchorCertificate() {
        if (!unknown_trustAnchorCertificate) return value_trustAnchorCertificate;
        throw new UndeferrableValueException("Value 'CustomKeyStoreArgs.trustAnchorCertificate' is not present");
    }

    @PolicyResourceProperty(name="xksProxyAuthenticationCredential", flag="unknown_xksProxyAuthenticationCredential")
    private CustomKeyStoreXksProxyAuthenticationCredentialArgs value_xksProxyAuthenticationCredential;
    private boolean unknown_xksProxyAuthenticationCredential;
    public CustomKeyStoreXksProxyAuthenticationCredentialArgs xksProxyAuthenticationCredential() {
        if (!unknown_xksProxyAuthenticationCredential) return value_xksProxyAuthenticationCredential;
        throw new UndeferrableValueException("Value 'CustomKeyStoreArgs.xksProxyAuthenticationCredential' is not present");
    }

    @PolicyResourceProperty(name="xksProxyConnectivity", flag="unknown_xksProxyConnectivity")
    private String value_xksProxyConnectivity;
    private boolean unknown_xksProxyConnectivity;
    public String xksProxyConnectivity() {
        if (!unknown_xksProxyConnectivity) return value_xksProxyConnectivity;
        throw new UndeferrableValueException("Value 'CustomKeyStoreArgs.xksProxyConnectivity' is not present");
    }

    @PolicyResourceProperty(name="xksProxyUriEndpoint", flag="unknown_xksProxyUriEndpoint")
    private String value_xksProxyUriEndpoint;
    private boolean unknown_xksProxyUriEndpoint;
    public String xksProxyUriEndpoint() {
        if (!unknown_xksProxyUriEndpoint) return value_xksProxyUriEndpoint;
        throw new UndeferrableValueException("Value 'CustomKeyStoreArgs.xksProxyUriEndpoint' is not present");
    }

    @PolicyResourceProperty(name="xksProxyUriPath", flag="unknown_xksProxyUriPath")
    private String value_xksProxyUriPath;
    private boolean unknown_xksProxyUriPath;
    public String xksProxyUriPath() {
        if (!unknown_xksProxyUriPath) return value_xksProxyUriPath;
        throw new UndeferrableValueException("Value 'CustomKeyStoreArgs.xksProxyUriPath' is not present");
    }

    @PolicyResourceProperty(name="xksProxyVpcEndpointServiceName", flag="unknown_xksProxyVpcEndpointServiceName")
    private String value_xksProxyVpcEndpointServiceName;
    private boolean unknown_xksProxyVpcEndpointServiceName;
    public String xksProxyVpcEndpointServiceName() {
        if (!unknown_xksProxyVpcEndpointServiceName) return value_xksProxyVpcEndpointServiceName;
        throw new UndeferrableValueException("Value 'CustomKeyStoreArgs.xksProxyVpcEndpointServiceName' is not present");
    }

}
