// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.pipes.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.pipes.inputs.PipeTargetParametersBatchJobParametersArgs;
import com.pulumi.policypacks.aws.pipes.inputs.PipeTargetParametersCloudwatchLogsParametersArgs;
import com.pulumi.policypacks.aws.pipes.inputs.PipeTargetParametersEcsTaskParametersArgs;
import com.pulumi.policypacks.aws.pipes.inputs.PipeTargetParametersEventbridgeEventBusParametersArgs;
import com.pulumi.policypacks.aws.pipes.inputs.PipeTargetParametersHttpParametersArgs;
import com.pulumi.policypacks.aws.pipes.inputs.PipeTargetParametersKinesisStreamParametersArgs;
import com.pulumi.policypacks.aws.pipes.inputs.PipeTargetParametersLambdaFunctionParametersArgs;
import com.pulumi.policypacks.aws.pipes.inputs.PipeTargetParametersRedshiftDataParametersArgs;
import com.pulumi.policypacks.aws.pipes.inputs.PipeTargetParametersSagemakerPipelineParametersArgs;
import com.pulumi.policypacks.aws.pipes.inputs.PipeTargetParametersSqsQueueParametersArgs;
import com.pulumi.policypacks.aws.pipes.inputs.PipeTargetParametersStepFunctionStateMachineParametersArgs;
import java.lang.String;
import javax.annotation.Nullable;


public final class PipeTargetParametersArgs {

    /**
     * The parameters for using an AWS Batch job as a target. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="batchJobParameters", flag="unknown_batchJobParameters")
    private PipeTargetParametersBatchJobParametersArgs value_batchJobParameters;
    private boolean unknown_batchJobParameters;
    public PipeTargetParametersBatchJobParametersArgs batchJobParameters() {
        if (!unknown_batchJobParameters) return value_batchJobParameters;
        throw new UndeferrableValueException("Value 'PipeTargetParametersArgs.batchJobParameters' is not present");
    }

    /**
     * The parameters for using an CloudWatch Logs log stream as a target. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="cloudwatchLogsParameters", flag="unknown_cloudwatchLogsParameters")
    private PipeTargetParametersCloudwatchLogsParametersArgs value_cloudwatchLogsParameters;
    private boolean unknown_cloudwatchLogsParameters;
    public PipeTargetParametersCloudwatchLogsParametersArgs cloudwatchLogsParameters() {
        if (!unknown_cloudwatchLogsParameters) return value_cloudwatchLogsParameters;
        throw new UndeferrableValueException("Value 'PipeTargetParametersArgs.cloudwatchLogsParameters' is not present");
    }

    /**
     * The parameters for using an Amazon ECS task as a target. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="ecsTaskParameters", flag="unknown_ecsTaskParameters")
    private PipeTargetParametersEcsTaskParametersArgs value_ecsTaskParameters;
    private boolean unknown_ecsTaskParameters;
    public PipeTargetParametersEcsTaskParametersArgs ecsTaskParameters() {
        if (!unknown_ecsTaskParameters) return value_ecsTaskParameters;
        throw new UndeferrableValueException("Value 'PipeTargetParametersArgs.ecsTaskParameters' is not present");
    }

    /**
     * The parameters for using an EventBridge event bus as a target. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="eventbridgeEventBusParameters", flag="unknown_eventbridgeEventBusParameters")
    private PipeTargetParametersEventbridgeEventBusParametersArgs value_eventbridgeEventBusParameters;
    private boolean unknown_eventbridgeEventBusParameters;
    public PipeTargetParametersEventbridgeEventBusParametersArgs eventbridgeEventBusParameters() {
        if (!unknown_eventbridgeEventBusParameters) return value_eventbridgeEventBusParameters;
        throw new UndeferrableValueException("Value 'PipeTargetParametersArgs.eventbridgeEventBusParameters' is not present");
    }

    /**
     * These are custom parameter to be used when the target is an API Gateway REST APIs or EventBridge ApiDestinations. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="httpParameters", flag="unknown_httpParameters")
    private PipeTargetParametersHttpParametersArgs value_httpParameters;
    private boolean unknown_httpParameters;
    public PipeTargetParametersHttpParametersArgs httpParameters() {
        if (!unknown_httpParameters) return value_httpParameters;
        throw new UndeferrableValueException("Value 'PipeTargetParametersArgs.httpParameters' is not present");
    }

    /**
     * Valid JSON text passed to the target. In this case, nothing from the event itself is passed to the target. Maximum length of 8192 characters.
     * 
     */
    @PolicyResourceProperty(name="inputTemplate", flag="unknown_inputTemplate")
    private String value_inputTemplate;
    private boolean unknown_inputTemplate;
    public String inputTemplate() {
        if (!unknown_inputTemplate) return value_inputTemplate;
        throw new UndeferrableValueException("Value 'PipeTargetParametersArgs.inputTemplate' is not present");
    }

    /**
     * The parameters for using a Kinesis stream as a source. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="kinesisStreamParameters", flag="unknown_kinesisStreamParameters")
    private PipeTargetParametersKinesisStreamParametersArgs value_kinesisStreamParameters;
    private boolean unknown_kinesisStreamParameters;
    public PipeTargetParametersKinesisStreamParametersArgs kinesisStreamParameters() {
        if (!unknown_kinesisStreamParameters) return value_kinesisStreamParameters;
        throw new UndeferrableValueException("Value 'PipeTargetParametersArgs.kinesisStreamParameters' is not present");
    }

    /**
     * The parameters for using a Lambda function as a target. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="lambdaFunctionParameters", flag="unknown_lambdaFunctionParameters")
    private PipeTargetParametersLambdaFunctionParametersArgs value_lambdaFunctionParameters;
    private boolean unknown_lambdaFunctionParameters;
    public PipeTargetParametersLambdaFunctionParametersArgs lambdaFunctionParameters() {
        if (!unknown_lambdaFunctionParameters) return value_lambdaFunctionParameters;
        throw new UndeferrableValueException("Value 'PipeTargetParametersArgs.lambdaFunctionParameters' is not present");
    }

    /**
     * These are custom parameters to be used when the target is a Amazon Redshift cluster to invoke the Amazon Redshift Data API BatchExecuteStatement. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="redshiftDataParameters", flag="unknown_redshiftDataParameters")
    private PipeTargetParametersRedshiftDataParametersArgs value_redshiftDataParameters;
    private boolean unknown_redshiftDataParameters;
    public PipeTargetParametersRedshiftDataParametersArgs redshiftDataParameters() {
        if (!unknown_redshiftDataParameters) return value_redshiftDataParameters;
        throw new UndeferrableValueException("Value 'PipeTargetParametersArgs.redshiftDataParameters' is not present");
    }

    /**
     * The parameters for using a SageMaker AI pipeline as a target. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="sagemakerPipelineParameters", flag="unknown_sagemakerPipelineParameters")
    private PipeTargetParametersSagemakerPipelineParametersArgs value_sagemakerPipelineParameters;
    private boolean unknown_sagemakerPipelineParameters;
    public PipeTargetParametersSagemakerPipelineParametersArgs sagemakerPipelineParameters() {
        if (!unknown_sagemakerPipelineParameters) return value_sagemakerPipelineParameters;
        throw new UndeferrableValueException("Value 'PipeTargetParametersArgs.sagemakerPipelineParameters' is not present");
    }

    /**
     * The parameters for using a Amazon SQS stream as a target. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="sqsQueueParameters", flag="unknown_sqsQueueParameters")
    private PipeTargetParametersSqsQueueParametersArgs value_sqsQueueParameters;
    private boolean unknown_sqsQueueParameters;
    public PipeTargetParametersSqsQueueParametersArgs sqsQueueParameters() {
        if (!unknown_sqsQueueParameters) return value_sqsQueueParameters;
        throw new UndeferrableValueException("Value 'PipeTargetParametersArgs.sqsQueueParameters' is not present");
    }

    /**
     * The parameters for using a Step Functions state machine as a target. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="stepFunctionStateMachineParameters", flag="unknown_stepFunctionStateMachineParameters")
    private PipeTargetParametersStepFunctionStateMachineParametersArgs value_stepFunctionStateMachineParameters;
    private boolean unknown_stepFunctionStateMachineParameters;
    public PipeTargetParametersStepFunctionStateMachineParametersArgs stepFunctionStateMachineParameters() {
        if (!unknown_stepFunctionStateMachineParameters) return value_stepFunctionStateMachineParameters;
        throw new UndeferrableValueException("Value 'PipeTargetParametersArgs.stepFunctionStateMachineParameters' is not present");
    }

}
