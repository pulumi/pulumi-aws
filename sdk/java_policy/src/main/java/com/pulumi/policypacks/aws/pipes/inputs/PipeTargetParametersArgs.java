// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.pipes.inputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.pipes.inputs.PipeTargetParametersBatchJobParametersArgs;
import com.pulumi.policypacks.aws.pipes.inputs.PipeTargetParametersCloudwatchLogsParametersArgs;
import com.pulumi.policypacks.aws.pipes.inputs.PipeTargetParametersEcsTaskParametersArgs;
import com.pulumi.policypacks.aws.pipes.inputs.PipeTargetParametersEventbridgeEventBusParametersArgs;
import com.pulumi.policypacks.aws.pipes.inputs.PipeTargetParametersHttpParametersArgs;
import com.pulumi.policypacks.aws.pipes.inputs.PipeTargetParametersKinesisStreamParametersArgs;
import com.pulumi.policypacks.aws.pipes.inputs.PipeTargetParametersLambdaFunctionParametersArgs;
import com.pulumi.policypacks.aws.pipes.inputs.PipeTargetParametersRedshiftDataParametersArgs;
import com.pulumi.policypacks.aws.pipes.inputs.PipeTargetParametersSagemakerPipelineParametersArgs;
import com.pulumi.policypacks.aws.pipes.inputs.PipeTargetParametersSqsQueueParametersArgs;
import com.pulumi.policypacks.aws.pipes.inputs.PipeTargetParametersStepFunctionStateMachineParametersArgs;
import java.lang.String;
import javax.annotation.Nullable;


public final class PipeTargetParametersArgs {

    /**
     * The parameters for using an AWS Batch job as a target. Detailed below.
     * 
     */
    private UndeferrableValue<PipeTargetParametersBatchJobParametersArgs> batchJobParameters;

    public PipeTargetParametersBatchJobParametersArgs batchJobParameters() {
        if (batchJobParameters == null) return null;
        return batchJobParameters.getValue("PipeTargetParametersArgs.batchJobParameters");
    }

    /**
     * The parameters for using an CloudWatch Logs log stream as a target. Detailed below.
     * 
     */
    private UndeferrableValue<PipeTargetParametersCloudwatchLogsParametersArgs> cloudwatchLogsParameters;

    public PipeTargetParametersCloudwatchLogsParametersArgs cloudwatchLogsParameters() {
        if (cloudwatchLogsParameters == null) return null;
        return cloudwatchLogsParameters.getValue("PipeTargetParametersArgs.cloudwatchLogsParameters");
    }

    /**
     * The parameters for using an Amazon ECS task as a target. Detailed below.
     * 
     */
    private UndeferrableValue<PipeTargetParametersEcsTaskParametersArgs> ecsTaskParameters;

    public PipeTargetParametersEcsTaskParametersArgs ecsTaskParameters() {
        if (ecsTaskParameters == null) return null;
        return ecsTaskParameters.getValue("PipeTargetParametersArgs.ecsTaskParameters");
    }

    /**
     * The parameters for using an EventBridge event bus as a target. Detailed below.
     * 
     */
    private UndeferrableValue<PipeTargetParametersEventbridgeEventBusParametersArgs> eventbridgeEventBusParameters;

    public PipeTargetParametersEventbridgeEventBusParametersArgs eventbridgeEventBusParameters() {
        if (eventbridgeEventBusParameters == null) return null;
        return eventbridgeEventBusParameters.getValue("PipeTargetParametersArgs.eventbridgeEventBusParameters");
    }

    /**
     * These are custom parameter to be used when the target is an API Gateway REST APIs or EventBridge ApiDestinations. Detailed below.
     * 
     */
    private UndeferrableValue<PipeTargetParametersHttpParametersArgs> httpParameters;

    public PipeTargetParametersHttpParametersArgs httpParameters() {
        if (httpParameters == null) return null;
        return httpParameters.getValue("PipeTargetParametersArgs.httpParameters");
    }

    /**
     * Valid JSON text passed to the target. In this case, nothing from the event itself is passed to the target. Maximum length of 8192 characters.
     * 
     */
    private UndeferrableValue<String> inputTemplate;

    public String inputTemplate() {
        if (inputTemplate == null) return null;
        return inputTemplate.getValue("PipeTargetParametersArgs.inputTemplate");
    }

    /**
     * The parameters for using a Kinesis stream as a source. Detailed below.
     * 
     */
    private UndeferrableValue<PipeTargetParametersKinesisStreamParametersArgs> kinesisStreamParameters;

    public PipeTargetParametersKinesisStreamParametersArgs kinesisStreamParameters() {
        if (kinesisStreamParameters == null) return null;
        return kinesisStreamParameters.getValue("PipeTargetParametersArgs.kinesisStreamParameters");
    }

    /**
     * The parameters for using a Lambda function as a target. Detailed below.
     * 
     */
    private UndeferrableValue<PipeTargetParametersLambdaFunctionParametersArgs> lambdaFunctionParameters;

    public PipeTargetParametersLambdaFunctionParametersArgs lambdaFunctionParameters() {
        if (lambdaFunctionParameters == null) return null;
        return lambdaFunctionParameters.getValue("PipeTargetParametersArgs.lambdaFunctionParameters");
    }

    /**
     * These are custom parameters to be used when the target is a Amazon Redshift cluster to invoke the Amazon Redshift Data API BatchExecuteStatement. Detailed below.
     * 
     */
    private UndeferrableValue<PipeTargetParametersRedshiftDataParametersArgs> redshiftDataParameters;

    public PipeTargetParametersRedshiftDataParametersArgs redshiftDataParameters() {
        if (redshiftDataParameters == null) return null;
        return redshiftDataParameters.getValue("PipeTargetParametersArgs.redshiftDataParameters");
    }

    /**
     * The parameters for using a SageMaker AI pipeline as a target. Detailed below.
     * 
     */
    private UndeferrableValue<PipeTargetParametersSagemakerPipelineParametersArgs> sagemakerPipelineParameters;

    public PipeTargetParametersSagemakerPipelineParametersArgs sagemakerPipelineParameters() {
        if (sagemakerPipelineParameters == null) return null;
        return sagemakerPipelineParameters.getValue("PipeTargetParametersArgs.sagemakerPipelineParameters");
    }

    /**
     * The parameters for using a Amazon SQS stream as a target. Detailed below.
     * 
     */
    private UndeferrableValue<PipeTargetParametersSqsQueueParametersArgs> sqsQueueParameters;

    public PipeTargetParametersSqsQueueParametersArgs sqsQueueParameters() {
        if (sqsQueueParameters == null) return null;
        return sqsQueueParameters.getValue("PipeTargetParametersArgs.sqsQueueParameters");
    }

    /**
     * The parameters for using a Step Functions state machine as a target. Detailed below.
     * 
     */
    private UndeferrableValue<PipeTargetParametersStepFunctionStateMachineParametersArgs> stepFunctionStateMachineParameters;

    public PipeTargetParametersStepFunctionStateMachineParametersArgs stepFunctionStateMachineParameters() {
        if (stepFunctionStateMachineParameters == null) return null;
        return stepFunctionStateMachineParameters.getValue("PipeTargetParametersArgs.stepFunctionStateMachineParameters");
    }

}
