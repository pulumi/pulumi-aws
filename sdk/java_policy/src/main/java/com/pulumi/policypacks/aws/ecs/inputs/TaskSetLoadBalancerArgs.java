// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ecs.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class TaskSetLoadBalancerArgs {

    /**
     * The name of the container to associate with the load balancer (as it appears in a container definition).
     * 
     */
    @PolicyResourceProperty(name="containerName", flag="unknown_containerName")
    private String value_containerName;
    private boolean unknown_containerName;
    public String containerName() {
        if (!unknown_containerName) return value_containerName;
        throw new UndeferrableValueException("Value 'TaskSetLoadBalancerArgs.containerName' is not present");
    }

    /**
     * The port on the container to associate with the load balancer. Defaults to `0` if not specified.
     * 
     * &gt; **Note:** Specifying multiple `load_balancer` configurations is still not supported by AWS for ECS task set.
     * 
     */
    @PolicyResourceProperty(name="containerPort", flag="unknown_containerPort")
    private Integer value_containerPort;
    private boolean unknown_containerPort;
    public Integer containerPort() {
        if (!unknown_containerPort) return value_containerPort;
        throw new UndeferrableValueException("Value 'TaskSetLoadBalancerArgs.containerPort' is not present");
    }

    /**
     * The name of the ELB (Classic) to associate with the service.
     * 
     */
    @PolicyResourceProperty(name="loadBalancerName", flag="unknown_loadBalancerName")
    private String value_loadBalancerName;
    private boolean unknown_loadBalancerName;
    public String loadBalancerName() {
        if (!unknown_loadBalancerName) return value_loadBalancerName;
        throw new UndeferrableValueException("Value 'TaskSetLoadBalancerArgs.loadBalancerName' is not present");
    }

    /**
     * The ARN of the Load Balancer target group to associate with the service.
     * 
     */
    @PolicyResourceProperty(name="targetGroupArn", flag="unknown_targetGroupArn")
    private String value_targetGroupArn;
    private boolean unknown_targetGroupArn;
    public String targetGroupArn() {
        if (!unknown_targetGroupArn) return value_targetGroupArn;
        throw new UndeferrableValueException("Value 'TaskSetLoadBalancerArgs.targetGroupArn' is not present");
    }

}
