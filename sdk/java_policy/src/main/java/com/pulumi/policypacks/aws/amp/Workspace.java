// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.amp;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.amp.outputs.WorkspaceLoggingConfiguration;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:amp/workspace:Workspace")
public final class Workspace extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The alias of the prometheus workspace. See more [in AWS Docs](https://docs.aws.amazon.com/prometheus/latest/userguide/AMP-onboard-create-workspace.html).
     * 
     */
    @PolicyResourceProperty(name="alias", flag="unknown_alias")
    private @Nullable String value_alias;
    private boolean unknown_alias;
    public @Nullable String alias() {
        if (!unknown_alias) return value_alias;
        throw new UndeferrableValueException("Value 'Workspace.alias' is not present");
    }

    /**
     * Amazon Resource Name (ARN) of the workspace.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'Workspace.arn' is not present");
    }

    /**
     * The ARN for the KMS encryption key. If this argument is not provided, then the AWS owned encryption key will be used to encrypt the data in the workspace. See more [in AWS Docs](https://docs.aws.amazon.com/prometheus/latest/userguide/encryption-at-rest-Amazon-Service-Prometheus.html)
     * 
     */
    @PolicyResourceProperty(name="kmsKeyArn", flag="unknown_kmsKeyArn")
    private @Nullable String value_kmsKeyArn;
    private boolean unknown_kmsKeyArn;
    public @Nullable String kmsKeyArn() {
        if (!unknown_kmsKeyArn) return value_kmsKeyArn;
        throw new UndeferrableValueException("Value 'Workspace.kmsKeyArn' is not present");
    }

    /**
     * Logging configuration for the workspace. See Logging Configuration below for details.
     * 
     */
    @PolicyResourceProperty(name="loggingConfiguration", flag="unknown_loggingConfiguration")
    private @Nullable WorkspaceLoggingConfiguration value_loggingConfiguration;
    private boolean unknown_loggingConfiguration;
    public @Nullable WorkspaceLoggingConfiguration loggingConfiguration() {
        if (!unknown_loggingConfiguration) return value_loggingConfiguration;
        throw new UndeferrableValueException("Value 'Workspace.loggingConfiguration' is not present");
    }

    /**
     * Prometheus endpoint available for this workspace.
     * 
     */
    @PolicyResourceProperty(name="prometheusEndpoint", flag="unknown_prometheusEndpoint")
    private String value_prometheusEndpoint;
    private boolean unknown_prometheusEndpoint;
    public String prometheusEndpoint() {
        if (!unknown_prometheusEndpoint) return value_prometheusEndpoint;
        throw new UndeferrableValueException("Value 'Workspace.prometheusEndpoint' is not present");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'Workspace.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'Workspace.tagsAll' is not present");
    }

}
