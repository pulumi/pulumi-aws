// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.kinesisanalyticsv2.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationArgs {

    /**
     * Describes the interval in milliseconds between checkpoint operations.
     * 
     */
    @PolicyResourceProperty(name="checkpointInterval", flag="unknown_checkpointInterval")
    private Integer value_checkpointInterval;
    private boolean unknown_checkpointInterval;
    public Integer checkpointInterval() {
        if (!unknown_checkpointInterval) return value_checkpointInterval;
        throw new UndeferrableValueException("Value 'ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationArgs.checkpointInterval' is not present");
    }

    /**
     * Describes whether checkpointing is enabled for a Flink-based Kinesis Data Analytics application.
     * 
     */
    @PolicyResourceProperty(name="checkpointingEnabled", flag="unknown_checkpointingEnabled")
    private Boolean value_checkpointingEnabled;
    private boolean unknown_checkpointingEnabled;
    public Boolean checkpointingEnabled() {
        if (!unknown_checkpointingEnabled) return value_checkpointingEnabled;
        throw new UndeferrableValueException("Value 'ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationArgs.checkpointingEnabled' is not present");
    }

    /**
     * Describes whether the application uses Kinesis Data Analytics&#39; default checkpointing behavior. Valid values: `CUSTOM`, `DEFAULT`. Set this attribute to `CUSTOM` in order for any specified `checkpointing_enabled`, `checkpoint_interval`, or `min_pause_between_checkpoints` attribute values to be effective. If this attribute is set to `DEFAULT`, the application will always use the following values:
     * * `checkpointing_enabled = true`
     * * `checkpoint_interval = 60000`
     * * `min_pause_between_checkpoints = 5000`
     * 
     */
    @PolicyResourceProperty(name="configurationType", flag="unknown_configurationType")
    private String value_configurationType;
    private boolean unknown_configurationType;
    public String configurationType() {
        if (!unknown_configurationType) return value_configurationType;
        throw new UndeferrableValueException("Value 'ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationArgs.configurationType' is not present");
    }

    /**
     * Describes the minimum time in milliseconds after a checkpoint operation completes that a new checkpoint operation can start.
     * 
     */
    @PolicyResourceProperty(name="minPauseBetweenCheckpoints", flag="unknown_minPauseBetweenCheckpoints")
    private Integer value_minPauseBetweenCheckpoints;
    private boolean unknown_minPauseBetweenCheckpoints;
    public Integer minPauseBetweenCheckpoints() {
        if (!unknown_minPauseBetweenCheckpoints) return value_minPauseBetweenCheckpoints;
        throw new UndeferrableValueException("Value 'ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationArgs.minPauseBetweenCheckpoints' is not present");
    }

}
