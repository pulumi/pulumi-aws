// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.bedrock.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.bedrock.outputs.AgentDataSourceVectorIngestionConfigurationChunkingConfigurationFixedSizeChunkingConfiguration;
import com.pulumi.policypacks.aws.bedrock.outputs.AgentDataSourceVectorIngestionConfigurationChunkingConfigurationHierarchicalChunkingConfiguration;
import com.pulumi.policypacks.aws.bedrock.outputs.AgentDataSourceVectorIngestionConfigurationChunkingConfigurationSemanticChunkingConfiguration;
import java.lang.String;
import javax.annotation.Nullable;


public final class AgentDataSourceVectorIngestionConfigurationChunkingConfiguration {

    /**
     * Option for chunking your source data, either in fixed-sized chunks or as one chunk. Valid values: `FIXED_SIZE`, `HIERARCHICAL`, `SEMANTIC`, `NONE`.
     * 
     */
    private UndeferrableValue<String> chunkingStrategy;

    public String chunkingStrategy() {
        if (chunkingStrategy == null) return null;
        return chunkingStrategy.getValue("AgentDataSourceVectorIngestionConfigurationChunkingConfiguration.chunkingStrategy");
    }

    /**
     * Configurations for when you choose fixed-size chunking. Requires chunking_strategy as `FIXED_SIZE`. See `fixed_size_chunking_configuration` for details.
     * 
     */
    private @Nullable UndeferrableValue<AgentDataSourceVectorIngestionConfigurationChunkingConfigurationFixedSizeChunkingConfiguration> fixedSizeChunkingConfiguration;

    public @Nullable AgentDataSourceVectorIngestionConfigurationChunkingConfigurationFixedSizeChunkingConfiguration fixedSizeChunkingConfiguration() {
        if (fixedSizeChunkingConfiguration == null) return null;
        return fixedSizeChunkingConfiguration.getValue("AgentDataSourceVectorIngestionConfigurationChunkingConfiguration.fixedSizeChunkingConfiguration");
    }

    /**
     * Configurations for when you choose hierarchical chunking. Requires chunking_strategy as `HIERARCHICAL`. See `hierarchical_chunking_configuration` for details.
     * 
     */
    private @Nullable UndeferrableValue<AgentDataSourceVectorIngestionConfigurationChunkingConfigurationHierarchicalChunkingConfiguration> hierarchicalChunkingConfiguration;

    public @Nullable AgentDataSourceVectorIngestionConfigurationChunkingConfigurationHierarchicalChunkingConfiguration hierarchicalChunkingConfiguration() {
        if (hierarchicalChunkingConfiguration == null) return null;
        return hierarchicalChunkingConfiguration.getValue("AgentDataSourceVectorIngestionConfigurationChunkingConfiguration.hierarchicalChunkingConfiguration");
    }

    /**
     * Configurations for when you choose semantic chunking. Requires chunking_strategy as `SEMANTIC`. See `semantic_chunking_configuration` for details.
     * 
     */
    private @Nullable UndeferrableValue<AgentDataSourceVectorIngestionConfigurationChunkingConfigurationSemanticChunkingConfiguration> semanticChunkingConfiguration;

    public @Nullable AgentDataSourceVectorIngestionConfigurationChunkingConfigurationSemanticChunkingConfiguration semanticChunkingConfiguration() {
        if (semanticChunkingConfiguration == null) return null;
        return semanticChunkingConfiguration.getValue("AgentDataSourceVectorIngestionConfigurationChunkingConfiguration.semanticChunkingConfiguration");
    }

}
