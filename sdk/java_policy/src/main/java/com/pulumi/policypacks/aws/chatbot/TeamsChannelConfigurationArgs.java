// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.chatbot;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.chatbot.inputs.TeamsChannelConfigurationTimeoutsArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:chatbot/teamsChannelConfiguration:TeamsChannelConfiguration")
public final class TeamsChannelConfigurationArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * ID of the Microsoft Teams channel.
     * 
     */
    private UndeferrableValue<String> channelId;

    public String channelId() {
        if (channelId == null) return null;
        return channelId.getValue("TeamsChannelConfigurationArgs.channelId");
    }

    /**
     * Name of the Microsoft Teams channel.
     * 
     */
    private UndeferrableValue<String> channelName;

    public String channelName() {
        if (channelName == null) return null;
        return channelName.getValue("TeamsChannelConfigurationArgs.channelName");
    }

    /**
     * Name of the Microsoft Teams channel configuration.
     * 
     */
    private UndeferrableValue<String> configurationName;

    public String configurationName() {
        if (configurationName == null) return null;
        return configurationName.getValue("TeamsChannelConfigurationArgs.configurationName");
    }

    /**
     * List of IAM policy ARNs that are applied as channel guardrails. The AWS managed `AdministratorAccess` policy is applied by default if this is not set.
     * 
     */
    private UndeferrableValue<List<String>> guardrailPolicyArns;

    public List<String> guardrailPolicyArns() {
        if (guardrailPolicyArns == null) return null;
        return guardrailPolicyArns.getValue("TeamsChannelConfigurationArgs.guardrailPolicyArns");
    }

    /**
     * ARN of the IAM role that defines the permissions for AWS Chatbot. This is a user-defined role that AWS Chatbot will assume. This is not the service-linked role.
     * 
     */
    private UndeferrableValue<String> iamRoleArn;

    public String iamRoleArn() {
        if (iamRoleArn == null) return null;
        return iamRoleArn.getValue("TeamsChannelConfigurationArgs.iamRoleArn");
    }

    /**
     * Logging levels include `ERROR`, `INFO`, or `NONE`.
     * 
     */
    private UndeferrableValue<String> loggingLevel;

    public String loggingLevel() {
        if (loggingLevel == null) return null;
        return loggingLevel.getValue("TeamsChannelConfigurationArgs.loggingLevel");
    }

    /**
     * ARNs of the SNS topics that deliver notifications to AWS Chatbot.
     * 
     */
    private UndeferrableValue<List<String>> snsTopicArns;

    public List<String> snsTopicArns() {
        if (snsTopicArns == null) return null;
        return snsTopicArns.getValue("TeamsChannelConfigurationArgs.snsTopicArns");
    }

    /**
     * Map of tags assigned to the resource.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("TeamsChannelConfigurationArgs.tags");
    }

    /**
     * ID of the Microsoft Team authorized with AWS Chatbot. To get the team ID, you must perform the initial authorization flow with Microsoft Teams in the AWS Chatbot console. Then you can copy and paste the team ID from the console.
     * 
     */
    private UndeferrableValue<String> teamId;

    public String teamId() {
        if (teamId == null) return null;
        return teamId.getValue("TeamsChannelConfigurationArgs.teamId");
    }

    /**
     * Name of the Microsoft Teams team.
     * 
     */
    private UndeferrableValue<String> teamName;

    public String teamName() {
        if (teamName == null) return null;
        return teamName.getValue("TeamsChannelConfigurationArgs.teamName");
    }

    /**
     * ID of the Microsoft Teams tenant.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> tenantId;

    public String tenantId() {
        if (tenantId == null) return null;
        return tenantId.getValue("TeamsChannelConfigurationArgs.tenantId");
    }

    private UndeferrableValue<TeamsChannelConfigurationTimeoutsArgs> timeouts;

    public TeamsChannelConfigurationTimeoutsArgs timeouts() {
        if (timeouts == null) return null;
        return timeouts.getValue("TeamsChannelConfigurationArgs.timeouts");
    }

    /**
     * Enables use of a user role requirement in your chat configuration.
     * 
     */
    private UndeferrableValue<Boolean> userAuthorizationRequired;

    public Boolean userAuthorizationRequired() {
        if (userAuthorizationRequired == null) return null;
        return userAuthorizationRequired.getValue("TeamsChannelConfigurationArgs.userAuthorizationRequired");
    }

}
