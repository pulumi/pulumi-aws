// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.s3;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.s3.outputs.BucketCorsConfigurationV2CorsRule;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:s3/bucketCorsConfigurationV2:BucketCorsConfigurationV2")
public final class BucketCorsConfigurationV2 extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Name of the bucket.
     * 
     */
    @PolicyResourceProperty(name="bucket", flag="unknown_bucket")
    private String value_bucket;
    private boolean unknown_bucket;
    public String bucket() {
        if (!unknown_bucket) return value_bucket;
        throw new UndeferrableValueException("Value 'BucketCorsConfigurationV2.bucket' is not present");
    }

    /**
     * Set of origins and methods (cross-origin access that you want to allow). See below. You can configure up to 100 rules.
     * 
     */
    @PolicyResourceProperty(name="corsRules", flag="unknown_corsRules")
    private List<BucketCorsConfigurationV2CorsRule> value_corsRules;
    private boolean unknown_corsRules;
    public List<BucketCorsConfigurationV2CorsRule> corsRules() {
        if (!unknown_corsRules) return value_corsRules;
        throw new UndeferrableValueException("Value 'BucketCorsConfigurationV2.corsRules' is not present");
    }

    /**
     * Account ID of the expected bucket owner.
     * 
     */
    @PolicyResourceProperty(name="expectedBucketOwner", flag="unknown_expectedBucketOwner")
    private @Nullable String value_expectedBucketOwner;
    private boolean unknown_expectedBucketOwner;
    public @Nullable String expectedBucketOwner() {
        if (!unknown_expectedBucketOwner) return value_expectedBucketOwner;
        throw new UndeferrableValueException("Value 'BucketCorsConfigurationV2.expectedBucketOwner' is not present");
    }

}
