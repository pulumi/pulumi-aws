// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appmesh.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.appmesh.outputs.RouteSpecHttpRouteRetryPolicyPerRetryTimeout;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class RouteSpecHttpRouteRetryPolicy {

    /**
     * List of HTTP retry events.
     * Valid values: `client-error` (HTTP status code 409), `gateway-error` (HTTP status codes 502, 503, and 504), `server-error` (HTTP status codes 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, and 511), `stream-error` (retry on refused stream).
     * 
     */
    @PolicyResourceProperty(name="httpRetryEvents", flag="unknown_httpRetryEvents")
    private @Nullable List<String> value_httpRetryEvents;
    private boolean unknown_httpRetryEvents;
    public @Nullable List<String> httpRetryEvents() {
        if (!unknown_httpRetryEvents) return value_httpRetryEvents;
        throw new UndeferrableValueException("Value 'RouteSpecHttpRouteRetryPolicy.httpRetryEvents' is not present");
    }

    /**
     * Maximum number of retries.
     * 
     */
    @PolicyResourceProperty(name="maxRetries", flag="unknown_maxRetries")
    private Integer value_maxRetries;
    private boolean unknown_maxRetries;
    public Integer maxRetries() {
        if (!unknown_maxRetries) return value_maxRetries;
        throw new UndeferrableValueException("Value 'RouteSpecHttpRouteRetryPolicy.maxRetries' is not present");
    }

    /**
     * Per-retry timeout.
     * 
     */
    @PolicyResourceProperty(name="perRetryTimeout", flag="unknown_perRetryTimeout")
    private RouteSpecHttpRouteRetryPolicyPerRetryTimeout value_perRetryTimeout;
    private boolean unknown_perRetryTimeout;
    public RouteSpecHttpRouteRetryPolicyPerRetryTimeout perRetryTimeout() {
        if (!unknown_perRetryTimeout) return value_perRetryTimeout;
        throw new UndeferrableValueException("Value 'RouteSpecHttpRouteRetryPolicy.perRetryTimeout' is not present");
    }

    /**
     * List of TCP retry events. The only valid value is `connection-error`.
     * 
     * You must specify at least one value for `http_retry_events`, or at least one value for `tcp_retry_events`.
     * 
     */
    @PolicyResourceProperty(name="tcpRetryEvents", flag="unknown_tcpRetryEvents")
    private @Nullable List<String> value_tcpRetryEvents;
    private boolean unknown_tcpRetryEvents;
    public @Nullable List<String> tcpRetryEvents() {
        if (!unknown_tcpRetryEvents) return value_tcpRetryEvents;
        throw new UndeferrableValueException("Value 'RouteSpecHttpRouteRetryPolicy.tcpRetryEvents' is not present");
    }

}
