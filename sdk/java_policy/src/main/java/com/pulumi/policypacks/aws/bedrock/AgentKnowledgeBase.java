// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.bedrock;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.bedrock.outputs.AgentKnowledgeBaseKnowledgeBaseConfiguration;
import com.pulumi.policypacks.aws.bedrock.outputs.AgentKnowledgeBaseStorageConfiguration;
import com.pulumi.policypacks.aws.bedrock.outputs.AgentKnowledgeBaseTimeouts;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:bedrock/agentKnowledgeBase:AgentKnowledgeBase")
public final class AgentKnowledgeBase extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * ARN of the knowledge base.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'AgentKnowledgeBase.arn' is not present");
    }

    /**
     * Time at which the knowledge base was created.
     * 
     */
    @PolicyResourceProperty(name="createdAt", flag="unknown_createdAt")
    private String value_createdAt;
    private boolean unknown_createdAt;
    public String createdAt() {
        if (!unknown_createdAt) return value_createdAt;
        throw new UndeferrableValueException("Value 'AgentKnowledgeBase.createdAt' is not present");
    }

    /**
     * Description of the knowledge base.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private @Nullable String value_description;
    private boolean unknown_description;
    public @Nullable String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'AgentKnowledgeBase.description' is not present");
    }

    @PolicyResourceProperty(name="failureReasons", flag="unknown_failureReasons")
    private List<String> value_failureReasons;
    private boolean unknown_failureReasons;
    public List<String> failureReasons() {
        if (!unknown_failureReasons) return value_failureReasons;
        throw new UndeferrableValueException("Value 'AgentKnowledgeBase.failureReasons' is not present");
    }

    /**
     * Details about the embeddings configuration of the knowledge base. See `knowledge_base_configuration` block for details.
     * 
     */
    @PolicyResourceProperty(name="knowledgeBaseConfiguration", flag="unknown_knowledgeBaseConfiguration")
    private @Nullable AgentKnowledgeBaseKnowledgeBaseConfiguration value_knowledgeBaseConfiguration;
    private boolean unknown_knowledgeBaseConfiguration;
    public @Nullable AgentKnowledgeBaseKnowledgeBaseConfiguration knowledgeBaseConfiguration() {
        if (!unknown_knowledgeBaseConfiguration) return value_knowledgeBaseConfiguration;
        throw new UndeferrableValueException("Value 'AgentKnowledgeBase.knowledgeBaseConfiguration' is not present");
    }

    /**
     * Name of the knowledge base.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'AgentKnowledgeBase.name' is not present");
    }

    /**
     * ARN of the IAM role with permissions to invoke API operations on the knowledge base.
     * 
     */
    @PolicyResourceProperty(name="roleArn", flag="unknown_roleArn")
    private String value_roleArn;
    private boolean unknown_roleArn;
    public String roleArn() {
        if (!unknown_roleArn) return value_roleArn;
        throw new UndeferrableValueException("Value 'AgentKnowledgeBase.roleArn' is not present");
    }

    /**
     * Details about the storage configuration of the knowledge base. See `storage_configuration` block for details.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="storageConfiguration", flag="unknown_storageConfiguration")
    private @Nullable AgentKnowledgeBaseStorageConfiguration value_storageConfiguration;
    private boolean unknown_storageConfiguration;
    public @Nullable AgentKnowledgeBaseStorageConfiguration storageConfiguration() {
        if (!unknown_storageConfiguration) return value_storageConfiguration;
        throw new UndeferrableValueException("Value 'AgentKnowledgeBase.storageConfiguration' is not present");
    }

    /**
     * Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'AgentKnowledgeBase.tags' is not present");
    }

    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'AgentKnowledgeBase.tagsAll' is not present");
    }

    @PolicyResourceProperty(name="timeouts", flag="unknown_timeouts")
    private @Nullable AgentKnowledgeBaseTimeouts value_timeouts;
    private boolean unknown_timeouts;
    public @Nullable AgentKnowledgeBaseTimeouts timeouts() {
        if (!unknown_timeouts) return value_timeouts;
        throw new UndeferrableValueException("Value 'AgentKnowledgeBase.timeouts' is not present");
    }

    /**
     * Time at which the knowledge base was last updated.
     * 
     */
    @PolicyResourceProperty(name="updatedAt", flag="unknown_updatedAt")
    private String value_updatedAt;
    private boolean unknown_updatedAt;
    public String updatedAt() {
        if (!unknown_updatedAt) return value_updatedAt;
        throw new UndeferrableValueException("Value 'AgentKnowledgeBase.updatedAt' is not present");
    }

}
