// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.s3;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.s3.inputs.BucketObjectLockConfigurationV2RuleArgs;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:s3/bucketObjectLockConfigurationV2:BucketObjectLockConfigurationV2")
public final class BucketObjectLockConfigurationV2Args extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Name of the bucket.
     * 
     */
    private UndeferrableValue<String> bucket;

    public String bucket() {
        if (bucket == null) return null;
        return bucket.getValue("BucketObjectLockConfigurationV2Args.bucket");
    }

    /**
     * Account ID of the expected bucket owner.
     * 
     */
    private UndeferrableValue<String> expectedBucketOwner;

    public String expectedBucketOwner() {
        if (expectedBucketOwner == null) return null;
        return expectedBucketOwner.getValue("BucketObjectLockConfigurationV2Args.expectedBucketOwner");
    }

    /**
     * Indicates whether this bucket has an Object Lock configuration enabled. Defaults to `Enabled`. Valid values: `Enabled`.
     * 
     */
    private UndeferrableValue<String> objectLockEnabled;

    public String objectLockEnabled() {
        if (objectLockEnabled == null) return null;
        return objectLockEnabled.getValue("BucketObjectLockConfigurationV2Args.objectLockEnabled");
    }

    /**
     * Configuration block for specifying the Object Lock rule for the specified object. See below.
     * 
     */
    private UndeferrableValue<BucketObjectLockConfigurationV2RuleArgs> rule;

    public BucketObjectLockConfigurationV2RuleArgs rule() {
        if (rule == null) return null;
        return rule.getValue("BucketObjectLockConfigurationV2Args.rule");
    }

    /**
     * This argument is deprecated and no longer needed to enable Object Lock.
     * To enable Object Lock for an existing bucket, you must first enable versioning on the bucket and then enable Object Lock. For more details on versioning, see the `aws.s3.BucketVersioningV2` resource.
     * 
     */
    private UndeferrableValue<String> token;

    public String token() {
        if (token == null) return null;
        return token.getValue("BucketObjectLockConfigurationV2Args.token");
    }

}
