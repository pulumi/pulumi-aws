// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.datasync;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.datasync.inputs.LocationSmbMountOptionsArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:datasync/locationSmb:LocationSmb")
public final class LocationSmbArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * A list of DataSync Agent ARNs with which this location will be associated.
     * 
     */
    private UndeferrableValue<List<String>> agentArns;

    public List<String> agentArns() {
        if (agentArns == null) return null;
        return agentArns.getValue("LocationSmbArgs.agentArns");
    }

    /**
     * The name of the Windows domain the SMB server belongs to.
     * 
     */
    private UndeferrableValue<String> domain;

    public String domain() {
        if (domain == null) return null;
        return domain.getValue("LocationSmbArgs.domain");
    }

    /**
     * Configuration block containing mount options used by DataSync to access the SMB Server. Can be `AUTOMATIC`, `SMB2`, or `SMB3`.
     * 
     */
    private UndeferrableValue<LocationSmbMountOptionsArgs> mountOptions;

    public LocationSmbMountOptionsArgs mountOptions() {
        if (mountOptions == null) return null;
        return mountOptions.getValue("LocationSmbArgs.mountOptions");
    }

    /**
     * The password of the user who can mount the share and has file permissions in the SMB.
     * 
     */
    private UndeferrableValue<String> password;

    public String password() {
        if (password == null) return null;
        return password.getValue("LocationSmbArgs.password");
    }

    /**
     * Specifies the IP address or DNS name of the SMB server. The DataSync Agent(s) use this to mount the SMB share.
     * 
     */
    private UndeferrableValue<String> serverHostname;

    public String serverHostname() {
        if (serverHostname == null) return null;
        return serverHostname.getValue("LocationSmbArgs.serverHostname");
    }

    /**
     * Subdirectory to perform actions as source or destination. Should be exported by the NFS server.
     * 
     */
    private UndeferrableValue<String> subdirectory;

    public String subdirectory() {
        if (subdirectory == null) return null;
        return subdirectory.getValue("LocationSmbArgs.subdirectory");
    }

    /**
     * Key-value pairs of resource tags to assign to the DataSync Location. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("LocationSmbArgs.tags");
    }

    /**
     * The user who can mount the share and has file and folder permissions in the SMB share.
     * 
     */
    private UndeferrableValue<String> user;

    public String user() {
        if (user == null) return null;
        return user.getValue("LocationSmbArgs.user");
    }

}
