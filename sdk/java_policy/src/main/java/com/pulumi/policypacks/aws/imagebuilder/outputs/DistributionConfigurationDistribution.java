// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.imagebuilder.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.imagebuilder.outputs.DistributionConfigurationDistributionAmiDistributionConfiguration;
import com.pulumi.policypacks.aws.imagebuilder.outputs.DistributionConfigurationDistributionContainerDistributionConfiguration;
import com.pulumi.policypacks.aws.imagebuilder.outputs.DistributionConfigurationDistributionFastLaunchConfiguration;
import com.pulumi.policypacks.aws.imagebuilder.outputs.DistributionConfigurationDistributionLaunchTemplateConfiguration;
import com.pulumi.policypacks.aws.imagebuilder.outputs.DistributionConfigurationDistributionS3ExportConfiguration;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class DistributionConfigurationDistribution {

    /**
     * Configuration block with Amazon Machine Image (AMI) distribution settings. Detailed below.
     * 
     */
    private @Nullable UndeferrableValue<DistributionConfigurationDistributionAmiDistributionConfiguration> amiDistributionConfiguration;

    public @Nullable DistributionConfigurationDistributionAmiDistributionConfiguration amiDistributionConfiguration() {
        if (amiDistributionConfiguration == null) return null;
        return amiDistributionConfiguration.getValue("DistributionConfigurationDistribution.amiDistributionConfiguration");
    }

    /**
     * Configuration block with container distribution settings. Detailed below.
     * 
     */
    private @Nullable UndeferrableValue<DistributionConfigurationDistributionContainerDistributionConfiguration> containerDistributionConfiguration;

    public @Nullable DistributionConfigurationDistributionContainerDistributionConfiguration containerDistributionConfiguration() {
        if (containerDistributionConfiguration == null) return null;
        return containerDistributionConfiguration.getValue("DistributionConfigurationDistribution.containerDistributionConfiguration");
    }

    /**
     * Set of Windows faster-launching configurations to use for AMI distribution. Detailed below.
     * 
     */
    private @Nullable UndeferrableValue<List<DistributionConfigurationDistributionFastLaunchConfiguration>> fastLaunchConfigurations;

    public @Nullable List<DistributionConfigurationDistributionFastLaunchConfiguration> fastLaunchConfigurations() {
        if (fastLaunchConfigurations == null) return null;
        return fastLaunchConfigurations.getValue("DistributionConfigurationDistribution.fastLaunchConfigurations");
    }

    /**
     * Set of launch template configuration settings that apply to image distribution. Detailed below.
     * 
     */
    private @Nullable UndeferrableValue<List<DistributionConfigurationDistributionLaunchTemplateConfiguration>> launchTemplateConfigurations;

    public @Nullable List<DistributionConfigurationDistributionLaunchTemplateConfiguration> launchTemplateConfigurations() {
        if (launchTemplateConfigurations == null) return null;
        return launchTemplateConfigurations.getValue("DistributionConfigurationDistribution.launchTemplateConfigurations");
    }

    /**
     * Set of Amazon Resource Names (ARNs) of License Manager License Configurations.
     * 
     */
    private @Nullable UndeferrableValue<List<String>> licenseConfigurationArns;

    public @Nullable List<String> licenseConfigurationArns() {
        if (licenseConfigurationArns == null) return null;
        return licenseConfigurationArns.getValue("DistributionConfigurationDistribution.licenseConfigurationArns");
    }

    /**
     * AWS Region for the distribution.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> region;

    public String region() {
        if (region == null) return null;
        return region.getValue("DistributionConfigurationDistribution.region");
    }

    /**
     * Configuration block with S3 export settings. Detailed below.
     * 
     */
    private @Nullable UndeferrableValue<DistributionConfigurationDistributionS3ExportConfiguration> s3ExportConfiguration;

    public @Nullable DistributionConfigurationDistributionS3ExportConfiguration s3ExportConfiguration() {
        if (s3ExportConfiguration == null) return null;
        return s3ExportConfiguration.getValue("DistributionConfigurationDistribution.s3ExportConfiguration");
    }

}
