// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.redshift;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:redshift/clusterSnapshot:ClusterSnapshot")
public final class ClusterSnapshot extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Amazon Resource Name (ARN) of the snapshot.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'ClusterSnapshot.arn' is not present");
    }

    /**
     * The cluster identifier for which you want a snapshot.
     * 
     */
    @PolicyResourceProperty(name="clusterIdentifier", flag="unknown_clusterIdentifier")
    private String value_clusterIdentifier;
    private boolean unknown_clusterIdentifier;
    public String clusterIdentifier() {
        if (!unknown_clusterIdentifier) return value_clusterIdentifier;
        throw new UndeferrableValueException("Value 'ClusterSnapshot.clusterIdentifier' is not present");
    }

    /**
     * The Key Management Service (KMS) key ID of the encryption key that was used to encrypt data in the cluster from which the snapshot was taken.
     * 
     */
    @PolicyResourceProperty(name="kmsKeyId", flag="unknown_kmsKeyId")
    private String value_kmsKeyId;
    private boolean unknown_kmsKeyId;
    public String kmsKeyId() {
        if (!unknown_kmsKeyId) return value_kmsKeyId;
        throw new UndeferrableValueException("Value 'ClusterSnapshot.kmsKeyId' is not present");
    }

    /**
     * The number of days that a manual snapshot is retained. If the value is `-1`, the manual snapshot is retained indefinitely. Valid values are -1 and between `1` and `3653`.
     * 
     */
    @PolicyResourceProperty(name="manualSnapshotRetentionPeriod", flag="unknown_manualSnapshotRetentionPeriod")
    private @Nullable Integer value_manualSnapshotRetentionPeriod;
    private boolean unknown_manualSnapshotRetentionPeriod;
    public @Nullable Integer manualSnapshotRetentionPeriod() {
        if (!unknown_manualSnapshotRetentionPeriod) return value_manualSnapshotRetentionPeriod;
        throw new UndeferrableValueException("Value 'ClusterSnapshot.manualSnapshotRetentionPeriod' is not present");
    }

    /**
     * For manual snapshots, the Amazon Web Services account used to create or copy the snapshot. For automatic snapshots, the owner of the cluster. The owner can perform all snapshot actions, such as sharing a manual snapshot.
     * 
     */
    @PolicyResourceProperty(name="ownerAccount", flag="unknown_ownerAccount")
    private String value_ownerAccount;
    private boolean unknown_ownerAccount;
    public String ownerAccount() {
        if (!unknown_ownerAccount) return value_ownerAccount;
        throw new UndeferrableValueException("Value 'ClusterSnapshot.ownerAccount' is not present");
    }

    /**
     * A unique identifier for the snapshot that you are requesting. This identifier must be unique for all snapshots within the Amazon Web Services account.
     * 
     */
    @PolicyResourceProperty(name="snapshotIdentifier", flag="unknown_snapshotIdentifier")
    private String value_snapshotIdentifier;
    private boolean unknown_snapshotIdentifier;
    public String snapshotIdentifier() {
        if (!unknown_snapshotIdentifier) return value_snapshotIdentifier;
        throw new UndeferrableValueException("Value 'ClusterSnapshot.snapshotIdentifier' is not present");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'ClusterSnapshot.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'ClusterSnapshot.tagsAll' is not present");
    }

}
