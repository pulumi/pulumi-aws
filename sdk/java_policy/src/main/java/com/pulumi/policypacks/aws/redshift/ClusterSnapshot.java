// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.redshift;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:redshift/clusterSnapshot:ClusterSnapshot")
public final class ClusterSnapshot extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Amazon Resource Name (ARN) of the snapshot.
     * 
     */
    private UndeferrableValue<String> arn;

    public String arn() {
        if (arn == null) return null;
        return arn.getValue("ClusterSnapshot.arn");
    }

    /**
     * The cluster identifier for which you want a snapshot.
     * 
     */
    private UndeferrableValue<String> clusterIdentifier;

    public String clusterIdentifier() {
        if (clusterIdentifier == null) return null;
        return clusterIdentifier.getValue("ClusterSnapshot.clusterIdentifier");
    }

    /**
     * The Key Management Service (KMS) key ID of the encryption key that was used to encrypt data in the cluster from which the snapshot was taken.
     * 
     */
    private UndeferrableValue<String> kmsKeyId;

    public String kmsKeyId() {
        if (kmsKeyId == null) return null;
        return kmsKeyId.getValue("ClusterSnapshot.kmsKeyId");
    }

    /**
     * The number of days that a manual snapshot is retained. If the value is `-1`, the manual snapshot is retained indefinitely. Valid values are -1 and between `1` and `3653`.
     * 
     */
    private @Nullable UndeferrableValue<Integer> manualSnapshotRetentionPeriod;

    public @Nullable Integer manualSnapshotRetentionPeriod() {
        if (manualSnapshotRetentionPeriod == null) return null;
        return manualSnapshotRetentionPeriod.getValue("ClusterSnapshot.manualSnapshotRetentionPeriod");
    }

    /**
     * For manual snapshots, the Amazon Web Services account used to create or copy the snapshot. For automatic snapshots, the owner of the cluster. The owner can perform all snapshot actions, such as sharing a manual snapshot.
     * 
     */
    private UndeferrableValue<String> ownerAccount;

    public String ownerAccount() {
        if (ownerAccount == null) return null;
        return ownerAccount.getValue("ClusterSnapshot.ownerAccount");
    }

    /**
     * A unique identifier for the snapshot that you are requesting. This identifier must be unique for all snapshots within the Amazon Web Services account.
     * 
     */
    private UndeferrableValue<String> snapshotIdentifier;

    public String snapshotIdentifier() {
        if (snapshotIdentifier == null) return null;
        return snapshotIdentifier.getValue("ClusterSnapshot.snapshotIdentifier");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private @Nullable UndeferrableValue<Map<String,String>> tags;

    public @Nullable Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("ClusterSnapshot.tags");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    private UndeferrableValue<Map<String,String>> tagsAll;

    public Map<String,String> tagsAll() {
        if (tagsAll == null) return null;
        return tagsAll.getValue("ClusterSnapshot.tagsAll");
    }

}
