// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.opensearch;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.opensearch.outputs.AuthorizeVpcEndpointAccessAuthorizedPrincipal;
import java.lang.String;
import java.util.List;


@PolicyResourceType(type="aws:opensearch/authorizeVpcEndpointAccess:AuthorizeVpcEndpointAccess")
public final class AuthorizeVpcEndpointAccess extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * AWS account ID to grant access to.
     * 
     */
    @PolicyResourceProperty(name="account", flag="unknown_account")
    private String value_account;
    private boolean unknown_account;
    public String account() {
        if (!unknown_account) return value_account;
        throw new UndeferrableValueException("Value 'AuthorizeVpcEndpointAccess.account' is not present");
    }

    /**
     * Information about the Amazon Web Services account or service that was provided access to the domain. See authorized principal attribute for further details.
     * 
     */
    @PolicyResourceProperty(name="authorizedPrincipals", flag="unknown_authorizedPrincipals")
    private List<AuthorizeVpcEndpointAccessAuthorizedPrincipal> value_authorizedPrincipals;
    private boolean unknown_authorizedPrincipals;
    public List<AuthorizeVpcEndpointAccessAuthorizedPrincipal> authorizedPrincipals() {
        if (!unknown_authorizedPrincipals) return value_authorizedPrincipals;
        throw new UndeferrableValueException("Value 'AuthorizeVpcEndpointAccess.authorizedPrincipals' is not present");
    }

    /**
     * Name of OpenSearch Service domain to provide access to.
     * 
     */
    @PolicyResourceProperty(name="domainName", flag="unknown_domainName")
    private String value_domainName;
    private boolean unknown_domainName;
    public String domainName() {
        if (!unknown_domainName) return value_domainName;
        throw new UndeferrableValueException("Value 'AuthorizeVpcEndpointAccess.domainName' is not present");
    }

}
