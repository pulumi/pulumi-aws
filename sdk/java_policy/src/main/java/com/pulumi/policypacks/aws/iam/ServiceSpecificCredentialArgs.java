// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.iam;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:iam/serviceSpecificCredential:ServiceSpecificCredential")
public final class ServiceSpecificCredentialArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The name of the AWS service that is to be associated with the credentials. The service you specify here is the only service that can be accessed using these credentials.
     * 
     */
    @PolicyResourceProperty(name="serviceName", flag="unknown_serviceName")
    private String value_serviceName;
    private boolean unknown_serviceName;
    public String serviceName() {
        if (!unknown_serviceName) return value_serviceName;
        throw new UndeferrableValueException("Value 'ServiceSpecificCredentialArgs.serviceName' is not present");
    }

    /**
     * The status to be assigned to the service-specific credential. Valid values are `Active` and `Inactive`. Default value is `Active`.
     * 
     */
    @PolicyResourceProperty(name="status", flag="unknown_status")
    private String value_status;
    private boolean unknown_status;
    public String status() {
        if (!unknown_status) return value_status;
        throw new UndeferrableValueException("Value 'ServiceSpecificCredentialArgs.status' is not present");
    }

    /**
     * The name of the IAM user that is to be associated with the credentials. The new service-specific credentials have the same permissions as the associated user except that they can be used only to access the specified service.
     * 
     */
    @PolicyResourceProperty(name="userName", flag="unknown_userName")
    private String value_userName;
    private boolean unknown_userName;
    public String userName() {
        if (!unknown_userName) return value_userName;
        throw new UndeferrableValueException("Value 'ServiceSpecificCredentialArgs.userName' is not present");
    }

}
