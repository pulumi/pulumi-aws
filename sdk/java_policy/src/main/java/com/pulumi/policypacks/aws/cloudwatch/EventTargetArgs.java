// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.cloudwatch;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.cloudwatch.inputs.EventTargetAppsyncTargetArgs;
import com.pulumi.policypacks.aws.cloudwatch.inputs.EventTargetBatchTargetArgs;
import com.pulumi.policypacks.aws.cloudwatch.inputs.EventTargetDeadLetterConfigArgs;
import com.pulumi.policypacks.aws.cloudwatch.inputs.EventTargetEcsTargetArgs;
import com.pulumi.policypacks.aws.cloudwatch.inputs.EventTargetHttpTargetArgs;
import com.pulumi.policypacks.aws.cloudwatch.inputs.EventTargetInputTransformerArgs;
import com.pulumi.policypacks.aws.cloudwatch.inputs.EventTargetKinesisTargetArgs;
import com.pulumi.policypacks.aws.cloudwatch.inputs.EventTargetRedshiftTargetArgs;
import com.pulumi.policypacks.aws.cloudwatch.inputs.EventTargetRetryPolicyArgs;
import com.pulumi.policypacks.aws.cloudwatch.inputs.EventTargetRunCommandTargetArgs;
import com.pulumi.policypacks.aws.cloudwatch.inputs.EventTargetSagemakerPipelineTargetArgs;
import com.pulumi.policypacks.aws.cloudwatch.inputs.EventTargetSqsTargetArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:cloudwatch/eventTarget:EventTarget")
public final class EventTargetArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Parameters used when you are using the rule to invoke an AppSync GraphQL API mutation. Documented below. A maximum of 1 are allowed.
     * 
     */
    private UndeferrableValue<EventTargetAppsyncTargetArgs> appsyncTarget;

    public EventTargetAppsyncTargetArgs appsyncTarget() {
        if (appsyncTarget == null) return null;
        return appsyncTarget.getValue("EventTargetArgs.appsyncTarget");
    }

    /**
     * The Amazon Resource Name (ARN) of the target.
     * 
     */
    private UndeferrableValue<String> arn;

    public String arn() {
        if (arn == null) return null;
        return arn.getValue("EventTargetArgs.arn");
    }

    /**
     * Parameters used when you are using the rule to invoke an Amazon Batch Job. Documented below. A maximum of 1 are allowed.
     * 
     */
    private UndeferrableValue<EventTargetBatchTargetArgs> batchTarget;

    public EventTargetBatchTargetArgs batchTarget() {
        if (batchTarget == null) return null;
        return batchTarget.getValue("EventTargetArgs.batchTarget");
    }

    /**
     * Parameters used when you are providing a dead letter config. Documented below. A maximum of 1 are allowed.
     * 
     */
    private UndeferrableValue<EventTargetDeadLetterConfigArgs> deadLetterConfig;

    public EventTargetDeadLetterConfigArgs deadLetterConfig() {
        if (deadLetterConfig == null) return null;
        return deadLetterConfig.getValue("EventTargetArgs.deadLetterConfig");
    }

    /**
     * Parameters used when you are using the rule to invoke Amazon ECS Task. Documented below. A maximum of 1 are allowed.
     * 
     */
    private UndeferrableValue<EventTargetEcsTargetArgs> ecsTarget;

    public EventTargetEcsTargetArgs ecsTarget() {
        if (ecsTarget == null) return null;
        return ecsTarget.getValue("EventTargetArgs.ecsTarget");
    }

    /**
     * The name or ARN of the event bus to associate with the rule.
     * If you omit this, the `default` event bus is used.
     * 
     */
    private UndeferrableValue<String> eventBusName;

    public String eventBusName() {
        if (eventBusName == null) return null;
        return eventBusName.getValue("EventTargetArgs.eventBusName");
    }

    /**
     * Used to delete managed rules created by AWS. Defaults to `false`.
     * 
     */
    private UndeferrableValue<Boolean> forceDestroy;

    public Boolean forceDestroy() {
        if (forceDestroy == null) return null;
        return forceDestroy.getValue("EventTargetArgs.forceDestroy");
    }

    /**
     * Parameters used when you are using the rule to invoke an API Gateway REST endpoint. Documented below. A maximum of 1 is allowed.
     * 
     */
    private UndeferrableValue<EventTargetHttpTargetArgs> httpTarget;

    public EventTargetHttpTargetArgs httpTarget() {
        if (httpTarget == null) return null;
        return httpTarget.getValue("EventTargetArgs.httpTarget");
    }

    /**
     * Valid JSON text passed to the target. Conflicts with `input_path` and `input_transformer`.
     * 
     */
    private UndeferrableValue<String> input;

    public String input() {
        if (input == null) return null;
        return input.getValue("EventTargetArgs.input");
    }

    /**
     * The value of the [JSONPath](http://goessner.net/articles/JsonPath/) that is used for extracting part of the matched event when passing it to the target. Conflicts with `input` and `input_transformer`.
     * 
     */
    private UndeferrableValue<String> inputPath;

    public String inputPath() {
        if (inputPath == null) return null;
        return inputPath.getValue("EventTargetArgs.inputPath");
    }

    /**
     * Parameters used when you are providing a custom input to a target based on certain event data. Conflicts with `input` and `input_path`.
     * 
     */
    private UndeferrableValue<EventTargetInputTransformerArgs> inputTransformer;

    public EventTargetInputTransformerArgs inputTransformer() {
        if (inputTransformer == null) return null;
        return inputTransformer.getValue("EventTargetArgs.inputTransformer");
    }

    /**
     * Parameters used when you are using the rule to invoke an Amazon Kinesis Stream. Documented below. A maximum of 1 are allowed.
     * 
     */
    private UndeferrableValue<EventTargetKinesisTargetArgs> kinesisTarget;

    public EventTargetKinesisTargetArgs kinesisTarget() {
        if (kinesisTarget == null) return null;
        return kinesisTarget.getValue("EventTargetArgs.kinesisTarget");
    }

    /**
     * Parameters used when you are using the rule to invoke an Amazon Redshift Statement. Documented below. A maximum of 1 are allowed.
     * 
     */
    private UndeferrableValue<EventTargetRedshiftTargetArgs> redshiftTarget;

    public EventTargetRedshiftTargetArgs redshiftTarget() {
        if (redshiftTarget == null) return null;
        return redshiftTarget.getValue("EventTargetArgs.redshiftTarget");
    }

    /**
     * Parameters used when you are providing retry policies. Documented below. A maximum of 1 are allowed.
     * 
     */
    private UndeferrableValue<EventTargetRetryPolicyArgs> retryPolicy;

    public EventTargetRetryPolicyArgs retryPolicy() {
        if (retryPolicy == null) return null;
        return retryPolicy.getValue("EventTargetArgs.retryPolicy");
    }

    /**
     * The Amazon Resource Name (ARN) of the IAM role to be used for this target when the rule is triggered. Required if `ecs_target` is used or target in `arn` is EC2 instance, Kinesis data stream, Step Functions state machine, or Event Bus in different account or region.
     * 
     */
    private UndeferrableValue<String> roleArn;

    public String roleArn() {
        if (roleArn == null) return null;
        return roleArn.getValue("EventTargetArgs.roleArn");
    }

    /**
     * The name of the rule you want to add targets to.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> rule;

    public String rule() {
        if (rule == null) return null;
        return rule.getValue("EventTargetArgs.rule");
    }

    /**
     * Parameters used when you are using the rule to invoke Amazon EC2 Run Command. Documented below. A maximum of 5 are allowed.
     * 
     */
    private UndeferrableValue<List<EventTargetRunCommandTargetArgs>> runCommandTargets;

    public List<EventTargetRunCommandTargetArgs> runCommandTargets() {
        if (runCommandTargets == null) return null;
        return runCommandTargets.getValue("EventTargetArgs.runCommandTargets");
    }

    /**
     * Parameters used when you are using the rule to invoke an Amazon SageMaker AI Pipeline. Documented below. A maximum of 1 are allowed.
     * 
     */
    private UndeferrableValue<EventTargetSagemakerPipelineTargetArgs> sagemakerPipelineTarget;

    public EventTargetSagemakerPipelineTargetArgs sagemakerPipelineTarget() {
        if (sagemakerPipelineTarget == null) return null;
        return sagemakerPipelineTarget.getValue("EventTargetArgs.sagemakerPipelineTarget");
    }

    /**
     * Parameters used when you are using the rule to invoke an Amazon SQS Queue. Documented below. A maximum of 1 are allowed.
     * 
     */
    private UndeferrableValue<EventTargetSqsTargetArgs> sqsTarget;

    public EventTargetSqsTargetArgs sqsTarget() {
        if (sqsTarget == null) return null;
        return sqsTarget.getValue("EventTargetArgs.sqsTarget");
    }

    /**
     * The unique target assignment ID. If missing, will generate a random, unique id.
     * 
     */
    private UndeferrableValue<String> targetId;

    public String targetId() {
        if (targetId == null) return null;
        return targetId.getValue("EventTargetArgs.targetId");
    }

}
