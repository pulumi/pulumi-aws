// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ssoadmin;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ssoadmin/applicationAccessScope:ApplicationAccessScope")
public final class ApplicationAccessScopeArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Specifies the ARN of the application with the access scope with the targets to add or update.
     * 
     */
    @PolicyResourceProperty(name="applicationArn", flag="unknown_applicationArn")
    private String value_applicationArn;
    private boolean unknown_applicationArn;
    public String applicationArn() {
        if (!unknown_applicationArn) return value_applicationArn;
        throw new UndeferrableValueException("Value 'ApplicationAccessScopeArgs.applicationArn' is not present");
    }

    /**
     * Specifies an array list of ARNs that represent the authorized targets for this access scope.
     * 
     */
    @PolicyResourceProperty(name="authorizedTargets", flag="unknown_authorizedTargets")
    private List<String> value_authorizedTargets;
    private boolean unknown_authorizedTargets;
    public List<String> authorizedTargets() {
        if (!unknown_authorizedTargets) return value_authorizedTargets;
        throw new UndeferrableValueException("Value 'ApplicationAccessScopeArgs.authorizedTargets' is not present");
    }

    /**
     * Specifies the name of the access scope to be associated with the specified targets.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="scope", flag="unknown_scope")
    private String value_scope;
    private boolean unknown_scope;
    public String scope() {
        if (!unknown_scope) return value_scope;
        throw new UndeferrableValueException("Value 'ApplicationAccessScopeArgs.scope' is not present");
    }

}
