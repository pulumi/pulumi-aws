// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.kinesis.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.kinesis.outputs.FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptions;
import com.pulumi.policypacks.aws.kinesis.outputs.FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfiguration;
import com.pulumi.policypacks.aws.kinesis.outputs.FirehoseDeliveryStreamOpensearchserverlessConfigurationS3Configuration;
import com.pulumi.policypacks.aws.kinesis.outputs.FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfig;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class FirehoseDeliveryStreamOpensearchserverlessConfiguration {

    /**
     * Buffer incoming data for the specified period of time, in seconds between 0 to 900, before delivering it to the destination.  The default value is 300s.
     * 
     */
    @PolicyResourceProperty(name="bufferingInterval", flag="unknown_bufferingInterval")
    private @Nullable Integer value_bufferingInterval;
    private boolean unknown_bufferingInterval;
    public @Nullable Integer bufferingInterval() {
        if (!unknown_bufferingInterval) return value_bufferingInterval;
        throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamOpensearchserverlessConfiguration.bufferingInterval' is not present");
    }

    /**
     * Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
     * 
     */
    @PolicyResourceProperty(name="bufferingSize", flag="unknown_bufferingSize")
    private @Nullable Integer value_bufferingSize;
    private boolean unknown_bufferingSize;
    public @Nullable Integer bufferingSize() {
        if (!unknown_bufferingSize) return value_bufferingSize;
        throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamOpensearchserverlessConfiguration.bufferingSize' is not present");
    }

    /**
     * The CloudWatch Logging Options for the delivery stream. See `cloudwatch_logging_options` block below for details.
     * 
     */
    @PolicyResourceProperty(name="cloudwatchLoggingOptions", flag="unknown_cloudwatchLoggingOptions")
    private @Nullable FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptions value_cloudwatchLoggingOptions;
    private boolean unknown_cloudwatchLoggingOptions;
    public @Nullable FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptions cloudwatchLoggingOptions() {
        if (!unknown_cloudwatchLoggingOptions) return value_cloudwatchLoggingOptions;
        throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamOpensearchserverlessConfiguration.cloudwatchLoggingOptions' is not present");
    }

    /**
     * The endpoint to use when communicating with the collection in the Serverless offering for Amazon OpenSearch Service.
     * 
     */
    @PolicyResourceProperty(name="collectionEndpoint", flag="unknown_collectionEndpoint")
    private String value_collectionEndpoint;
    private boolean unknown_collectionEndpoint;
    public String collectionEndpoint() {
        if (!unknown_collectionEndpoint) return value_collectionEndpoint;
        throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamOpensearchserverlessConfiguration.collectionEndpoint' is not present");
    }

    /**
     * The Serverless offering for Amazon OpenSearch Service index name.
     * 
     */
    @PolicyResourceProperty(name="indexName", flag="unknown_indexName")
    private String value_indexName;
    private boolean unknown_indexName;
    public String indexName() {
        if (!unknown_indexName) return value_indexName;
        throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamOpensearchserverlessConfiguration.indexName' is not present");
    }

    /**
     * The data processing configuration.  See `processing_configuration` block below for details.
     * 
     */
    @PolicyResourceProperty(name="processingConfiguration", flag="unknown_processingConfiguration")
    private @Nullable FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfiguration value_processingConfiguration;
    private boolean unknown_processingConfiguration;
    public @Nullable FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfiguration processingConfiguration() {
        if (!unknown_processingConfiguration) return value_processingConfiguration;
        throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamOpensearchserverlessConfiguration.processingConfiguration' is not present");
    }

    /**
     * After an initial failure to deliver to the Serverless offering for Amazon OpenSearch Service, the total amount of time, in seconds between 0 to 7200, during which Kinesis Data Firehose retries delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
     * 
     */
    @PolicyResourceProperty(name="retryDuration", flag="unknown_retryDuration")
    private @Nullable Integer value_retryDuration;
    private boolean unknown_retryDuration;
    public @Nullable Integer retryDuration() {
        if (!unknown_retryDuration) return value_retryDuration;
        throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamOpensearchserverlessConfiguration.retryDuration' is not present");
    }

    /**
     * The Amazon Resource Name (ARN) of the IAM role to be assumed by Kinesis Data Firehose for calling the Serverless offering for Amazon OpenSearch Service Configuration API and for indexing documents.  The pattern needs to be `arn:.*`.
     * 
     */
    @PolicyResourceProperty(name="roleArn", flag="unknown_roleArn")
    private String value_roleArn;
    private boolean unknown_roleArn;
    public String roleArn() {
        if (!unknown_roleArn) return value_roleArn;
        throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamOpensearchserverlessConfiguration.roleArn' is not present");
    }

    /**
     * Defines how documents should be delivered to Amazon S3.  Valid values are `FailedDocumentsOnly` and `AllDocuments`.  Default value is `FailedDocumentsOnly`.
     * 
     */
    @PolicyResourceProperty(name="s3BackupMode", flag="unknown_s3BackupMode")
    private @Nullable String value_s3BackupMode;
    private boolean unknown_s3BackupMode;
    public @Nullable String s3BackupMode() {
        if (!unknown_s3BackupMode) return value_s3BackupMode;
        throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamOpensearchserverlessConfiguration.s3BackupMode' is not present");
    }

    /**
     * The S3 Configuration. See `s3_configuration` block below for details.
     * 
     */
    @PolicyResourceProperty(name="s3Configuration", flag="unknown_s3Configuration")
    private FirehoseDeliveryStreamOpensearchserverlessConfigurationS3Configuration value_s3Configuration;
    private boolean unknown_s3Configuration;
    public FirehoseDeliveryStreamOpensearchserverlessConfigurationS3Configuration s3Configuration() {
        if (!unknown_s3Configuration) return value_s3Configuration;
        throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamOpensearchserverlessConfiguration.s3Configuration' is not present");
    }

    /**
     * The VPC configuration for the delivery stream to connect to OpenSearch Serverless associated with the VPC. See `vpc_config` block below for details.
     * 
     */
    @PolicyResourceProperty(name="vpcConfig", flag="unknown_vpcConfig")
    private @Nullable FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfig value_vpcConfig;
    private boolean unknown_vpcConfig;
    public @Nullable FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfig vpcConfig() {
        if (!unknown_vpcConfig) return value_vpcConfig;
        throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamOpensearchserverlessConfiguration.vpcConfig' is not present");
    }

}
