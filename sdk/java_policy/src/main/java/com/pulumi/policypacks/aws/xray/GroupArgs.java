// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.xray;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.xray.inputs.GroupInsightsConfigurationArgs;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:xray/group:Group")
public final class GroupArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The filter expression defining criteria by which to group traces. more info can be found in official [docs](https://docs.aws.amazon.com/xray/latest/devguide/xray-console-filters.html).
     * 
     */
    @PolicyResourceProperty(name="filterExpression", flag="unknown_filterExpression")
    private String value_filterExpression;
    private boolean unknown_filterExpression;
    public String filterExpression() {
        if (!unknown_filterExpression) return value_filterExpression;
        throw new UndeferrableValueException("Value 'GroupArgs.filterExpression' is not present");
    }

    /**
     * The name of the group.
     * 
     */
    @PolicyResourceProperty(name="groupName", flag="unknown_groupName")
    private String value_groupName;
    private boolean unknown_groupName;
    public String groupName() {
        if (!unknown_groupName) return value_groupName;
        throw new UndeferrableValueException("Value 'GroupArgs.groupName' is not present");
    }

    /**
     * Configuration options for enabling insights.
     * 
     */
    @PolicyResourceProperty(name="insightsConfiguration", flag="unknown_insightsConfiguration")
    private GroupInsightsConfigurationArgs value_insightsConfiguration;
    private boolean unknown_insightsConfiguration;
    public GroupInsightsConfigurationArgs insightsConfiguration() {
        if (!unknown_insightsConfiguration) return value_insightsConfiguration;
        throw new UndeferrableValueException("Value 'GroupArgs.insightsConfiguration' is not present");
    }

    /**
     * Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'GroupArgs.tags' is not present");
    }

}
