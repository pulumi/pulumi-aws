// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.rds;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.rds.enums.InstanceType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:rds/clusterInstance:ClusterInstance")
public final class ClusterInstanceArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Specifies whether any database modifications are applied immediately, or during the next maintenance window. Default is`false`.
     * 
     */
    private UndeferrableValue<Boolean> applyImmediately;

    public Boolean applyImmediately() {
        if (applyImmediately == null) return null;
        return applyImmediately.getValue("ClusterInstanceArgs.applyImmediately");
    }

    /**
     * Indicates that minor engine upgrades will be applied automatically to the DB instance during the maintenance window. Default `true`.
     * 
     */
    private UndeferrableValue<Boolean> autoMinorVersionUpgrade;

    public Boolean autoMinorVersionUpgrade() {
        if (autoMinorVersionUpgrade == null) return null;
        return autoMinorVersionUpgrade.getValue("ClusterInstanceArgs.autoMinorVersionUpgrade");
    }

    /**
     * EC2 Availability Zone that the DB instance is created in. See [docs](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBInstance.html) about the details.
     * 
     */
    private UndeferrableValue<String> availabilityZone;

    public String availabilityZone() {
        if (availabilityZone == null) return null;
        return availabilityZone.getValue("ClusterInstanceArgs.availabilityZone");
    }

    /**
     * Identifier of the CA certificate for the DB instance.
     * 
     */
    private UndeferrableValue<String> caCertIdentifier;

    public String caCertIdentifier() {
        if (caCertIdentifier == null) return null;
        return caCertIdentifier.getValue("ClusterInstanceArgs.caCertIdentifier");
    }

    /**
     * Identifier of the `aws.rds.Cluster` in which to launch this instance.
     * 
     */
    private UndeferrableValue<String> clusterIdentifier;

    public String clusterIdentifier() {
        if (clusterIdentifier == null) return null;
        return clusterIdentifier.getValue("ClusterInstanceArgs.clusterIdentifier");
    }

    /**
     * Indicates whether to copy all of the user-defined tags from the DB instance to snapshots of the DB instance. Default `false`.
     * 
     */
    private UndeferrableValue<Boolean> copyTagsToSnapshot;

    public Boolean copyTagsToSnapshot() {
        if (copyTagsToSnapshot == null) return null;
        return copyTagsToSnapshot.getValue("ClusterInstanceArgs.copyTagsToSnapshot");
    }

    /**
     * Instance profile associated with the underlying Amazon EC2 instance of an RDS Custom DB instance.
     * 
     */
    private UndeferrableValue<String> customIamInstanceProfile;

    public String customIamInstanceProfile() {
        if (customIamInstanceProfile == null) return null;
        return customIamInstanceProfile.getValue("ClusterInstanceArgs.customIamInstanceProfile");
    }

    /**
     * Name of the DB parameter group to associate with this instance.
     * 
     */
    private UndeferrableValue<String> dbParameterGroupName;

    public String dbParameterGroupName() {
        if (dbParameterGroupName == null) return null;
        return dbParameterGroupName.getValue("ClusterInstanceArgs.dbParameterGroupName");
    }

    /**
     * Specifies the DB subnet group to associate with this DB instance. The default behavior varies depending on whether `db_subnet_group_name` is specified. Please refer to official [AWS documentation](https://docs.aws.amazon.com/cli/latest/reference/rds/create-db-instance.html) to understand how `db_subnet_group_name` and `publicly_accessible` parameters affect DB instance behaviour. **NOTE:** This must match the `db_subnet_group_name` of the attached `aws.rds.Cluster`.
     * 
     */
    private UndeferrableValue<String> dbSubnetGroupName;

    public String dbSubnetGroupName() {
        if (dbSubnetGroupName == null) return null;
        return dbSubnetGroupName.getValue("ClusterInstanceArgs.dbSubnetGroupName");
    }

    /**
     * Name of the database engine to be used for the RDS cluster instance.
     * Valid Values: `aurora-mysql`, `aurora-postgresql`, `mysql`, `postgres`.(Note that `mysql` and `postgres` are Multi-AZ RDS clusters).
     * 
     */
    private UndeferrableValue<String> engine;

    public String engine() {
        if (engine == null) return null;
        return engine.getValue("ClusterInstanceArgs.engine");
    }

    /**
     * Database engine version. Please note that to upgrade the `engine_version` of the instance, it must be done on the `aws.rds.Cluster` `engine_version`. Trying to upgrade in `aws_cluster_instance` will not update the `engine_version`.
     * 
     */
    private UndeferrableValue<String> engineVersion;

    public String engineVersion() {
        if (engineVersion == null) return null;
        return engineVersion.getValue("ClusterInstanceArgs.engineVersion");
    }

    /**
     * Forces an instance to be destroyed when a part of a read replica cluster. **Note:** will promote the read replica to a standalone cluster before instance deletion.
     * 
     */
    private UndeferrableValue<Boolean> forceDestroy;

    public Boolean forceDestroy() {
        if (forceDestroy == null) return null;
        return forceDestroy.getValue("ClusterInstanceArgs.forceDestroy");
    }

    /**
     * Identifier for the RDS instance, if omitted, Pulumi will assign a random, unique identifier.
     * 
     */
    private UndeferrableValue<String> identifier;

    public String identifier() {
        if (identifier == null) return null;
        return identifier.getValue("ClusterInstanceArgs.identifier");
    }

    /**
     * Creates a unique identifier beginning with the specified prefix. Conflicts with `identifier`.
     * 
     */
    private UndeferrableValue<String> identifierPrefix;

    public String identifierPrefix() {
        if (identifierPrefix == null) return null;
        return identifierPrefix.getValue("ClusterInstanceArgs.identifierPrefix");
    }

    /**
     * Instance class to use. For details on CPU and memory, see [Scaling Aurora DB Instances](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Aurora.Managing.html). Aurora uses `db.*` instance classes/types. Please see [AWS Documentation](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html) for currently available instance classes and complete details. For Aurora Serverless v2 use `db.serverless`.
     * 
     */
    private UndeferrableValue<String> instanceClass;

    public String instanceClass() {
        if (instanceClass == null) return null;
        return instanceClass.getValue("ClusterInstanceArgs.instanceClass");
    }

    /**
     * Interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0. Valid Values: 0, 1, 5, 10, 15, 30, 60.
     * 
     */
    private UndeferrableValue<Integer> monitoringInterval;

    public Integer monitoringInterval() {
        if (monitoringInterval == null) return null;
        return monitoringInterval.getValue("ClusterInstanceArgs.monitoringInterval");
    }

    /**
     * ARN for the IAM role that permits RDS to send enhanced monitoring metrics to CloudWatch Logs. You can find more information on the [AWS Documentation](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.html) what IAM permissions are needed to allow Enhanced Monitoring for RDS Instances.
     * 
     */
    private UndeferrableValue<String> monitoringRoleArn;

    public String monitoringRoleArn() {
        if (monitoringRoleArn == null) return null;
        return monitoringRoleArn.getValue("ClusterInstanceArgs.monitoringRoleArn");
    }

    /**
     * Specifies whether Performance Insights is enabled or not. **NOTE:** When Performance Insights is configured at the cluster level through `aws.rds.Cluster`, this argument cannot be set to a value that conflicts with the cluster&#39;s configuration.
     * 
     */
    private UndeferrableValue<Boolean> performanceInsightsEnabled;

    public Boolean performanceInsightsEnabled() {
        if (performanceInsightsEnabled == null) return null;
        return performanceInsightsEnabled.getValue("ClusterInstanceArgs.performanceInsightsEnabled");
    }

    /**
     * ARN for the KMS key to encrypt Performance Insights data. When specifying `performance_insights_kms_key_id`, `performance_insights_enabled` needs to be set to true.
     * 
     */
    private UndeferrableValue<String> performanceInsightsKmsKeyId;

    public String performanceInsightsKmsKeyId() {
        if (performanceInsightsKmsKeyId == null) return null;
        return performanceInsightsKmsKeyId.getValue("ClusterInstanceArgs.performanceInsightsKmsKeyId");
    }

    /**
     * Amount of time in days to retain Performance Insights data. Valid values are `7`, `731` (2 years) or a multiple of `31`. When specifying `performance_insights_retention_period`, `performance_insights_enabled` needs to be set to true. Defaults to &#39;7&#39;.
     * 
     */
    private UndeferrableValue<Integer> performanceInsightsRetentionPeriod;

    public Integer performanceInsightsRetentionPeriod() {
        if (performanceInsightsRetentionPeriod == null) return null;
        return performanceInsightsRetentionPeriod.getValue("ClusterInstanceArgs.performanceInsightsRetentionPeriod");
    }

    /**
     * Daily time range during which automated backups are created if automated backups are enabled. Eg: &#34;04:00-09:00&#34;. **NOTE:** If `preferred_backup_window` is set at the cluster level, this argument **must** be omitted.
     * 
     */
    private UndeferrableValue<String> preferredBackupWindow;

    public String preferredBackupWindow() {
        if (preferredBackupWindow == null) return null;
        return preferredBackupWindow.getValue("ClusterInstanceArgs.preferredBackupWindow");
    }

    /**
     * Window to perform maintenance in. Syntax: &#34;ddd:hh24:mi-ddd:hh24:mi&#34;. Eg: &#34;Mon:00:00-Mon:03:00&#34;.
     * 
     */
    private UndeferrableValue<String> preferredMaintenanceWindow;

    public String preferredMaintenanceWindow() {
        if (preferredMaintenanceWindow == null) return null;
        return preferredMaintenanceWindow.getValue("ClusterInstanceArgs.preferredMaintenanceWindow");
    }

    /**
     * Default 0. Failover Priority setting on instance level. The reader who has lower tier has higher priority to get promoted to writer.
     * 
     */
    private UndeferrableValue<Integer> promotionTier;

    public Integer promotionTier() {
        if (promotionTier == null) return null;
        return promotionTier.getValue("ClusterInstanceArgs.promotionTier");
    }

    /**
     * Bool to control if instance is publicly accessible. Default `false`. See the documentation on [Creating DB Instances](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBInstance.html) for more details on controlling this property.
     * 
     */
    private UndeferrableValue<Boolean> publiclyAccessible;

    public Boolean publiclyAccessible() {
        if (publiclyAccessible == null) return null;
        return publiclyAccessible.getValue("ClusterInstanceArgs.publiclyAccessible");
    }

    /**
     * Map of tags to assign to the instance. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("ClusterInstanceArgs.tags");
    }

}
