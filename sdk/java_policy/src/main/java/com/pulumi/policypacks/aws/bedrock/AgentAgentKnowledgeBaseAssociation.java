// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.bedrock;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.bedrock.outputs.AgentAgentKnowledgeBaseAssociationTimeouts;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:bedrock/agentAgentKnowledgeBaseAssociation:AgentAgentKnowledgeBaseAssociation")
public final class AgentAgentKnowledgeBaseAssociation extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Unique identifier of the agent with which you want to associate the knowledge base.
     * 
     */
    @PolicyResourceProperty(name="agentId", flag="unknown_agentId")
    private String value_agentId;
    private boolean unknown_agentId;
    public String agentId() {
        if (!unknown_agentId) return value_agentId;
        throw new UndeferrableValueException("Value 'AgentAgentKnowledgeBaseAssociation.agentId' is not present");
    }

    /**
     * Version of the agent with which you want to associate the knowledge base. Valid values: `DRAFT`.
     * 
     */
    @PolicyResourceProperty(name="agentVersion", flag="unknown_agentVersion")
    private String value_agentVersion;
    private boolean unknown_agentVersion;
    public String agentVersion() {
        if (!unknown_agentVersion) return value_agentVersion;
        throw new UndeferrableValueException("Value 'AgentAgentKnowledgeBaseAssociation.agentVersion' is not present");
    }

    /**
     * Description of what the agent should use the knowledge base for.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private String value_description;
    private boolean unknown_description;
    public String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'AgentAgentKnowledgeBaseAssociation.description' is not present");
    }

    /**
     * Unique identifier of the knowledge base to associate with the agent.
     * 
     */
    @PolicyResourceProperty(name="knowledgeBaseId", flag="unknown_knowledgeBaseId")
    private String value_knowledgeBaseId;
    private boolean unknown_knowledgeBaseId;
    public String knowledgeBaseId() {
        if (!unknown_knowledgeBaseId) return value_knowledgeBaseId;
        throw new UndeferrableValueException("Value 'AgentAgentKnowledgeBaseAssociation.knowledgeBaseId' is not present");
    }

    /**
     * Whether to use the knowledge base when sending an [InvokeAgent](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html) request. Valid values: `ENABLED`, `DISABLED`.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="knowledgeBaseState", flag="unknown_knowledgeBaseState")
    private String value_knowledgeBaseState;
    private boolean unknown_knowledgeBaseState;
    public String knowledgeBaseState() {
        if (!unknown_knowledgeBaseState) return value_knowledgeBaseState;
        throw new UndeferrableValueException("Value 'AgentAgentKnowledgeBaseAssociation.knowledgeBaseState' is not present");
    }

    @PolicyResourceProperty(name="timeouts", flag="unknown_timeouts")
    private @Nullable AgentAgentKnowledgeBaseAssociationTimeouts value_timeouts;
    private boolean unknown_timeouts;
    public @Nullable AgentAgentKnowledgeBaseAssociationTimeouts timeouts() {
        if (!unknown_timeouts) return value_timeouts;
        throw new UndeferrableValueException("Value 'AgentAgentKnowledgeBaseAssociation.timeouts' is not present");
    }

}
