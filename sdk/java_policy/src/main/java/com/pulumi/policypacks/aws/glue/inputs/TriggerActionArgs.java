// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.glue.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.glue.inputs.TriggerActionNotificationPropertyArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


public final class TriggerActionArgs {

    /**
     * Arguments to be passed to the job. You can specify arguments here that your own job-execution script consumes, as well as arguments that AWS Glue itself consumes.
     * 
     */
    @PolicyResourceProperty(name="arguments", flag="unknown_arguments")
    private Map<String,String> value_arguments;
    private boolean unknown_arguments;
    public Map<String,String> arguments() {
        if (!unknown_arguments) return value_arguments;
        throw new UndeferrableValueException("Value 'TriggerActionArgs.arguments' is not present");
    }

    /**
     * The name of the crawler to be executed. Conflicts with `job_name`.
     * 
     */
    @PolicyResourceProperty(name="crawlerName", flag="unknown_crawlerName")
    private String value_crawlerName;
    private boolean unknown_crawlerName;
    public String crawlerName() {
        if (!unknown_crawlerName) return value_crawlerName;
        throw new UndeferrableValueException("Value 'TriggerActionArgs.crawlerName' is not present");
    }

    /**
     * The name of a job to be executed. Conflicts with `crawler_name`.
     * 
     */
    @PolicyResourceProperty(name="jobName", flag="unknown_jobName")
    private String value_jobName;
    private boolean unknown_jobName;
    public String jobName() {
        if (!unknown_jobName) return value_jobName;
        throw new UndeferrableValueException("Value 'TriggerActionArgs.jobName' is not present");
    }

    /**
     * Specifies configuration properties of a job run notification. See Notification Property details below.
     * 
     */
    @PolicyResourceProperty(name="notificationProperty", flag="unknown_notificationProperty")
    private TriggerActionNotificationPropertyArgs value_notificationProperty;
    private boolean unknown_notificationProperty;
    public TriggerActionNotificationPropertyArgs notificationProperty() {
        if (!unknown_notificationProperty) return value_notificationProperty;
        throw new UndeferrableValueException("Value 'TriggerActionArgs.notificationProperty' is not present");
    }

    /**
     * The name of the Security Configuration structure to be used with this action.
     * 
     */
    @PolicyResourceProperty(name="securityConfiguration", flag="unknown_securityConfiguration")
    private String value_securityConfiguration;
    private boolean unknown_securityConfiguration;
    public String securityConfiguration() {
        if (!unknown_securityConfiguration) return value_securityConfiguration;
        throw new UndeferrableValueException("Value 'TriggerActionArgs.securityConfiguration' is not present");
    }

    /**
     * The job run timeout in minutes. It overrides the timeout value of the job.
     * 
     */
    @PolicyResourceProperty(name="timeout", flag="unknown_timeout")
    private Integer value_timeout;
    private boolean unknown_timeout;
    public Integer timeout() {
        if (!unknown_timeout) return value_timeout;
        throw new UndeferrableValueException("Value 'TriggerActionArgs.timeout' is not present");
    }

}
