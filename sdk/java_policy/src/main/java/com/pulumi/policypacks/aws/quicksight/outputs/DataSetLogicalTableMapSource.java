// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.quicksight.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.quicksight.outputs.DataSetLogicalTableMapSourceJoinInstruction;
import java.lang.String;
import javax.annotation.Nullable;


public final class DataSetLogicalTableMapSource {

    /**
     * ARN of the parent data set.
     * 
     */
    @PolicyResourceProperty(name="dataSetArn", flag="unknown_dataSetArn")
    private @Nullable String value_dataSetArn;
    private boolean unknown_dataSetArn;
    public @Nullable String dataSetArn() {
        if (!unknown_dataSetArn) return value_dataSetArn;
        throw new UndeferrableValueException("Value 'DataSetLogicalTableMapSource.dataSetArn' is not present");
    }

    /**
     * Specifies the result of a join of two logical tables. See join_instruction.
     * 
     */
    @PolicyResourceProperty(name="joinInstruction", flag="unknown_joinInstruction")
    private @Nullable DataSetLogicalTableMapSourceJoinInstruction value_joinInstruction;
    private boolean unknown_joinInstruction;
    public @Nullable DataSetLogicalTableMapSourceJoinInstruction joinInstruction() {
        if (!unknown_joinInstruction) return value_joinInstruction;
        throw new UndeferrableValueException("Value 'DataSetLogicalTableMapSource.joinInstruction' is not present");
    }

    /**
     * Physical table ID.
     * 
     */
    @PolicyResourceProperty(name="physicalTableId", flag="unknown_physicalTableId")
    private @Nullable String value_physicalTableId;
    private boolean unknown_physicalTableId;
    public @Nullable String physicalTableId() {
        if (!unknown_physicalTableId) return value_physicalTableId;
        throw new UndeferrableValueException("Value 'DataSetLogicalTableMapSource.physicalTableId' is not present");
    }

}
