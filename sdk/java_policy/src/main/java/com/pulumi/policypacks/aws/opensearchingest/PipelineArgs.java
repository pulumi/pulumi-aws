// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.opensearchingest;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.opensearchingest.inputs.PipelineBufferOptionsArgs;
import com.pulumi.policypacks.aws.opensearchingest.inputs.PipelineEncryptionAtRestOptionsArgs;
import com.pulumi.policypacks.aws.opensearchingest.inputs.PipelineLogPublishingOptionsArgs;
import com.pulumi.policypacks.aws.opensearchingest.inputs.PipelineTimeoutsArgs;
import com.pulumi.policypacks.aws.opensearchingest.inputs.PipelineVpcOptionsArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:opensearchingest/pipeline:Pipeline")
public final class PipelineArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Key-value pairs to configure persistent buffering for the pipeline. See `buffer_options` below.
     * 
     */
    private UndeferrableValue<PipelineBufferOptionsArgs> bufferOptions;

    public PipelineBufferOptionsArgs bufferOptions() {
        if (bufferOptions == null) return null;
        return bufferOptions.getValue("PipelineArgs.bufferOptions");
    }

    /**
     * Key-value pairs to configure encryption for data that is written to a persistent buffer. See `encryption_at_rest_options` below.
     * 
     */
    private UndeferrableValue<PipelineEncryptionAtRestOptionsArgs> encryptionAtRestOptions;

    public PipelineEncryptionAtRestOptionsArgs encryptionAtRestOptions() {
        if (encryptionAtRestOptions == null) return null;
        return encryptionAtRestOptions.getValue("PipelineArgs.encryptionAtRestOptions");
    }

    /**
     * Key-value pairs to configure log publishing. See `log_publishing_options` below.
     * 
     */
    private UndeferrableValue<PipelineLogPublishingOptionsArgs> logPublishingOptions;

    public PipelineLogPublishingOptionsArgs logPublishingOptions() {
        if (logPublishingOptions == null) return null;
        return logPublishingOptions.getValue("PipelineArgs.logPublishingOptions");
    }

    /**
     * The maximum pipeline capacity, in Ingestion Compute Units (ICUs).
     * 
     */
    private UndeferrableValue<Integer> maxUnits;

    public Integer maxUnits() {
        if (maxUnits == null) return null;
        return maxUnits.getValue("PipelineArgs.maxUnits");
    }

    /**
     * The minimum pipeline capacity, in Ingestion Compute Units (ICUs).
     * 
     */
    private UndeferrableValue<Integer> minUnits;

    public Integer minUnits() {
        if (minUnits == null) return null;
        return minUnits.getValue("PipelineArgs.minUnits");
    }

    /**
     * The pipeline configuration in YAML format. This argument accepts the pipeline configuration as a string or within a .yaml file. If you provide the configuration as a string, each new line must be escaped with \n.
     * 
     */
    private UndeferrableValue<String> pipelineConfigurationBody;

    public String pipelineConfigurationBody() {
        if (pipelineConfigurationBody == null) return null;
        return pipelineConfigurationBody.getValue("PipelineArgs.pipelineConfigurationBody");
    }

    /**
     * The name of the OpenSearch Ingestion pipeline to create. Pipeline names are unique across the pipelines owned by an account within an AWS Region.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> pipelineName;

    public String pipelineName() {
        if (pipelineName == null) return null;
        return pipelineName.getValue("PipelineArgs.pipelineName");
    }

    /**
     * A map of tags to assign to the pipeline. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("PipelineArgs.tags");
    }

    private UndeferrableValue<PipelineTimeoutsArgs> timeouts;

    public PipelineTimeoutsArgs timeouts() {
        if (timeouts == null) return null;
        return timeouts.getValue("PipelineArgs.timeouts");
    }

    /**
     * Container for the values required to configure VPC access for the pipeline. If you don&#39;t specify these values, OpenSearch Ingestion creates the pipeline with a public endpoint. See `vpc_options` below.
     * 
     */
    private UndeferrableValue<PipelineVpcOptionsArgs> vpcOptions;

    public PipelineVpcOptionsArgs vpcOptions() {
        if (vpcOptions == null) return null;
        return vpcOptions.getValue("PipelineArgs.vpcOptions");
    }

}
