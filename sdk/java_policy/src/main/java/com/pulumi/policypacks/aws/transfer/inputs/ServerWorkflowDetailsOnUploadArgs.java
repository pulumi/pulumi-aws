// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.transfer.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.String;


public final class ServerWorkflowDetailsOnUploadArgs {

    /**
     * Includes the necessary permissions for S3, EFS, and Lambda operations that Transfer can assume, so that all workflow steps can operate on the required resources.
     * 
     */
    @PolicyResourceProperty(name="executionRole", flag="unknown_executionRole")
    private String value_executionRole;
    private boolean unknown_executionRole;
    public String executionRole() {
        if (!unknown_executionRole) return value_executionRole;
        throw new UndeferrableValueException("Value 'ServerWorkflowDetailsOnUploadArgs.executionRole' is not present");
    }

    /**
     * A unique identifier for the workflow.
     * 
     */
    @PolicyResourceProperty(name="workflowId", flag="unknown_workflowId")
    private String value_workflowId;
    private boolean unknown_workflowId;
    public String workflowId() {
        if (!unknown_workflowId) return value_workflowId;
        throw new UndeferrableValueException("Value 'ServerWorkflowDetailsOnUploadArgs.workflowId' is not present");
    }

}
