// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ecs.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.ecs.outputs.ServiceServiceConnectConfigurationServiceClientAlias;
import com.pulumi.policypacks.aws.ecs.outputs.ServiceServiceConnectConfigurationServiceTimeout;
import com.pulumi.policypacks.aws.ecs.outputs.ServiceServiceConnectConfigurationServiceTls;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class ServiceServiceConnectConfigurationService {

    /**
     * List of client aliases for this Service Connect service. You use these to assign names that can be used by client applications. The maximum number of client aliases that you can have in this list is 1. See below.
     * 
     */
    private @Nullable UndeferrableValue<List<ServiceServiceConnectConfigurationServiceClientAlias>> clientAlias;

    public @Nullable List<ServiceServiceConnectConfigurationServiceClientAlias> clientAlias() {
        if (clientAlias == null) return null;
        return clientAlias.getValue("ServiceServiceConnectConfigurationService.clientAlias");
    }

    /**
     * Name of the new AWS Cloud Map service that Amazon ECS creates for this Amazon ECS service.
     * 
     */
    private @Nullable UndeferrableValue<String> discoveryName;

    public @Nullable String discoveryName() {
        if (discoveryName == null) return null;
        return discoveryName.getValue("ServiceServiceConnectConfigurationService.discoveryName");
    }

    /**
     * Port number for the Service Connect proxy to listen on.
     * 
     */
    private @Nullable UndeferrableValue<Integer> ingressPortOverride;

    public @Nullable Integer ingressPortOverride() {
        if (ingressPortOverride == null) return null;
        return ingressPortOverride.getValue("ServiceServiceConnectConfigurationService.ingressPortOverride");
    }

    /**
     * Name of one of the `portMappings` from all the containers in the task definition of this Amazon ECS service.
     * 
     */
    private UndeferrableValue<String> portName;

    public String portName() {
        if (portName == null) return null;
        return portName.getValue("ServiceServiceConnectConfigurationService.portName");
    }

    /**
     * Configuration timeouts for Service Connect
     * 
     */
    private @Nullable UndeferrableValue<ServiceServiceConnectConfigurationServiceTimeout> timeout;

    public @Nullable ServiceServiceConnectConfigurationServiceTimeout timeout() {
        if (timeout == null) return null;
        return timeout.getValue("ServiceServiceConnectConfigurationService.timeout");
    }

    /**
     * Configuration for enabling Transport Layer Security (TLS)
     * 
     */
    private @Nullable UndeferrableValue<ServiceServiceConnectConfigurationServiceTls> tls;

    public @Nullable ServiceServiceConnectConfigurationServiceTls tls() {
        if (tls == null) return null;
        return tls.getValue("ServiceServiceConnectConfigurationService.tls");
    }

}
