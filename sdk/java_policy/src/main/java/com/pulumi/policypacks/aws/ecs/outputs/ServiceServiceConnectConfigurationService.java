// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ecs.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.ecs.outputs.ServiceServiceConnectConfigurationServiceClientAlias;
import com.pulumi.policypacks.aws.ecs.outputs.ServiceServiceConnectConfigurationServiceTimeout;
import com.pulumi.policypacks.aws.ecs.outputs.ServiceServiceConnectConfigurationServiceTls;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class ServiceServiceConnectConfigurationService {

    /**
     * List of client aliases for this Service Connect service. You use these to assign names that can be used by client applications. The maximum number of client aliases that you can have in this list is 1. See below.
     * 
     */
    @PolicyResourceProperty(name="clientAlias", flag="unknown_clientAlias")
    private @Nullable List<ServiceServiceConnectConfigurationServiceClientAlias> value_clientAlias;
    private boolean unknown_clientAlias;
    public @Nullable List<ServiceServiceConnectConfigurationServiceClientAlias> clientAlias() {
        if (!unknown_clientAlias) return value_clientAlias;
        throw new UndeferrableValueException("Value 'ServiceServiceConnectConfigurationService.clientAlias' is not present");
    }

    /**
     * Name of the new AWS Cloud Map service that Amazon ECS creates for this Amazon ECS service.
     * 
     */
    @PolicyResourceProperty(name="discoveryName", flag="unknown_discoveryName")
    private @Nullable String value_discoveryName;
    private boolean unknown_discoveryName;
    public @Nullable String discoveryName() {
        if (!unknown_discoveryName) return value_discoveryName;
        throw new UndeferrableValueException("Value 'ServiceServiceConnectConfigurationService.discoveryName' is not present");
    }

    /**
     * Port number for the Service Connect proxy to listen on.
     * 
     */
    @PolicyResourceProperty(name="ingressPortOverride", flag="unknown_ingressPortOverride")
    private @Nullable Integer value_ingressPortOverride;
    private boolean unknown_ingressPortOverride;
    public @Nullable Integer ingressPortOverride() {
        if (!unknown_ingressPortOverride) return value_ingressPortOverride;
        throw new UndeferrableValueException("Value 'ServiceServiceConnectConfigurationService.ingressPortOverride' is not present");
    }

    /**
     * Name of one of the `portMappings` from all the containers in the task definition of this Amazon ECS service.
     * 
     */
    @PolicyResourceProperty(name="portName", flag="unknown_portName")
    private String value_portName;
    private boolean unknown_portName;
    public String portName() {
        if (!unknown_portName) return value_portName;
        throw new UndeferrableValueException("Value 'ServiceServiceConnectConfigurationService.portName' is not present");
    }

    /**
     * Configuration timeouts for Service Connect
     * 
     */
    @PolicyResourceProperty(name="timeout", flag="unknown_timeout")
    private @Nullable ServiceServiceConnectConfigurationServiceTimeout value_timeout;
    private boolean unknown_timeout;
    public @Nullable ServiceServiceConnectConfigurationServiceTimeout timeout() {
        if (!unknown_timeout) return value_timeout;
        throw new UndeferrableValueException("Value 'ServiceServiceConnectConfigurationService.timeout' is not present");
    }

    /**
     * Configuration for enabling Transport Layer Security (TLS)
     * 
     */
    @PolicyResourceProperty(name="tls", flag="unknown_tls")
    private @Nullable ServiceServiceConnectConfigurationServiceTls value_tls;
    private boolean unknown_tls;
    public @Nullable ServiceServiceConnectConfigurationServiceTls tls() {
        if (!unknown_tls) return value_tls;
        throw new UndeferrableValueException("Value 'ServiceServiceConnectConfigurationService.tls' is not present");
    }

}
