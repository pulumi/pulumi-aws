// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.codepipeline.inputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.codepipeline.inputs.PipelineStageActionArgs;
import com.pulumi.policypacks.aws.codepipeline.inputs.PipelineStageBeforeEntryArgs;
import com.pulumi.policypacks.aws.codepipeline.inputs.PipelineStageOnFailureArgs;
import com.pulumi.policypacks.aws.codepipeline.inputs.PipelineStageOnSuccessArgs;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class PipelineStageArgs {

    /**
     * The action(s) to include in the stage. Defined as an `action` block below
     * 
     */
    private UndeferrableValue<List<PipelineStageActionArgs>> actions;

    public List<PipelineStageActionArgs> actions() {
        if (actions == null) return null;
        return actions.getValue("PipelineStageArgs.actions");
    }

    /**
     * The method to use when a stage allows entry. For example, configuring this field for conditions will allow entry to the stage when the conditions are met.
     * 
     */
    private UndeferrableValue<PipelineStageBeforeEntryArgs> beforeEntry;

    public PipelineStageBeforeEntryArgs beforeEntry() {
        if (beforeEntry == null) return null;
        return beforeEntry.getValue("PipelineStageArgs.beforeEntry");
    }

    /**
     * The name of the stage.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("PipelineStageArgs.name");
    }

    /**
     * The method to use when a stage has not completed successfully. For example, configuring this field for rollback will roll back a failed stage automatically to the last successful pipeline execution in the stage.
     * 
     */
    private UndeferrableValue<PipelineStageOnFailureArgs> onFailure;

    public PipelineStageOnFailureArgs onFailure() {
        if (onFailure == null) return null;
        return onFailure.getValue("PipelineStageArgs.onFailure");
    }

    /**
     * The method to use when a stage has succeeded. For example, configuring this field for conditions will allow the stage to succeed when the conditions are met.
     * 
     */
    private UndeferrableValue<PipelineStageOnSuccessArgs> onSuccess;

    public PipelineStageOnSuccessArgs onSuccess() {
        if (onSuccess == null) return null;
        return onSuccess.getValue("PipelineStageArgs.onSuccess");
    }

}
