// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.apigateway;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.apigateway.outputs.StageAccessLogSettings;
import com.pulumi.policypacks.aws.apigateway.outputs.StageCanarySettings;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:apigateway/stage:Stage")
public final class Stage extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Enables access logs for the API stage. See Access Log Settings below.
     * 
     */
    @PolicyResourceProperty(name="accessLogSettings", flag="unknown_accessLogSettings")
    private @Nullable StageAccessLogSettings value_accessLogSettings;
    private boolean unknown_accessLogSettings;
    public @Nullable StageAccessLogSettings accessLogSettings() {
        if (!unknown_accessLogSettings) return value_accessLogSettings;
        throw new UndeferrableValueException("Value 'Stage.accessLogSettings' is not present");
    }

    /**
     * ARN
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'Stage.arn' is not present");
    }

    /**
     * Whether a cache cluster is enabled for the stage
     * 
     */
    @PolicyResourceProperty(name="cacheClusterEnabled", flag="unknown_cacheClusterEnabled")
    private @Nullable Boolean value_cacheClusterEnabled;
    private boolean unknown_cacheClusterEnabled;
    public @Nullable Boolean cacheClusterEnabled() {
        if (!unknown_cacheClusterEnabled) return value_cacheClusterEnabled;
        throw new UndeferrableValueException("Value 'Stage.cacheClusterEnabled' is not present");
    }

    /**
     * Size of the cache cluster for the stage, if enabled. Allowed values include `0.5`, `1.6`, `6.1`, `13.5`, `28.4`, `58.2`, `118` and `237`.
     * 
     */
    @PolicyResourceProperty(name="cacheClusterSize", flag="unknown_cacheClusterSize")
    private @Nullable String value_cacheClusterSize;
    private boolean unknown_cacheClusterSize;
    public @Nullable String cacheClusterSize() {
        if (!unknown_cacheClusterSize) return value_cacheClusterSize;
        throw new UndeferrableValueException("Value 'Stage.cacheClusterSize' is not present");
    }

    /**
     * Configuration settings of a canary deployment. See Canary Settings below.
     * 
     */
    @PolicyResourceProperty(name="canarySettings", flag="unknown_canarySettings")
    private @Nullable StageCanarySettings value_canarySettings;
    private boolean unknown_canarySettings;
    public @Nullable StageCanarySettings canarySettings() {
        if (!unknown_canarySettings) return value_canarySettings;
        throw new UndeferrableValueException("Value 'Stage.canarySettings' is not present");
    }

    /**
     * Identifier of a client certificate for the stage.
     * 
     */
    @PolicyResourceProperty(name="clientCertificateId", flag="unknown_clientCertificateId")
    private @Nullable String value_clientCertificateId;
    private boolean unknown_clientCertificateId;
    public @Nullable String clientCertificateId() {
        if (!unknown_clientCertificateId) return value_clientCertificateId;
        throw new UndeferrableValueException("Value 'Stage.clientCertificateId' is not present");
    }

    /**
     * ID of the deployment that the stage points to
     * 
     */
    @PolicyResourceProperty(name="deployment", flag="unknown_deployment")
    private String value_deployment;
    private boolean unknown_deployment;
    public String deployment() {
        if (!unknown_deployment) return value_deployment;
        throw new UndeferrableValueException("Value 'Stage.deployment' is not present");
    }

    /**
     * Description of the stage.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private @Nullable String value_description;
    private boolean unknown_description;
    public @Nullable String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'Stage.description' is not present");
    }

    /**
     * Version of the associated API documentation
     * 
     */
    @PolicyResourceProperty(name="documentationVersion", flag="unknown_documentationVersion")
    private @Nullable String value_documentationVersion;
    private boolean unknown_documentationVersion;
    public @Nullable String documentationVersion() {
        if (!unknown_documentationVersion) return value_documentationVersion;
        throw new UndeferrableValueException("Value 'Stage.documentationVersion' is not present");
    }

    /**
     * Execution ARN to be used in `lambda_permission`&#39;s `source_arn`
     * when allowing API Gateway to invoke a Lambda function,
     * e.g., `arn:aws:execute-api:eu-west-2:123456789012:z4675bid1j/prod`
     * 
     */
    @PolicyResourceProperty(name="executionArn", flag="unknown_executionArn")
    private String value_executionArn;
    private boolean unknown_executionArn;
    public String executionArn() {
        if (!unknown_executionArn) return value_executionArn;
        throw new UndeferrableValueException("Value 'Stage.executionArn' is not present");
    }

    /**
     * URL to invoke the API pointing to the stage,
     * e.g., `https://z4675bid1j.execute-api.eu-west-2.amazonaws.com/prod`
     * 
     */
    @PolicyResourceProperty(name="invokeUrl", flag="unknown_invokeUrl")
    private String value_invokeUrl;
    private boolean unknown_invokeUrl;
    public String invokeUrl() {
        if (!unknown_invokeUrl) return value_invokeUrl;
        throw new UndeferrableValueException("Value 'Stage.invokeUrl' is not present");
    }

    /**
     * ID of the associated REST API
     * 
     */
    @PolicyResourceProperty(name="restApi", flag="unknown_restApi")
    private String value_restApi;
    private boolean unknown_restApi;
    public String restApi() {
        if (!unknown_restApi) return value_restApi;
        throw new UndeferrableValueException("Value 'Stage.restApi' is not present");
    }

    /**
     * Name of the stage
     * 
     */
    @PolicyResourceProperty(name="stageName", flag="unknown_stageName")
    private String value_stageName;
    private boolean unknown_stageName;
    public String stageName() {
        if (!unknown_stageName) return value_stageName;
        throw new UndeferrableValueException("Value 'Stage.stageName' is not present");
    }

    /**
     * Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'Stage.tags' is not present");
    }

    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'Stage.tagsAll' is not present");
    }

    /**
     * Map that defines the stage variables
     * 
     */
    @PolicyResourceProperty(name="variables", flag="unknown_variables")
    private @Nullable Map<String,String> value_variables;
    private boolean unknown_variables;
    public @Nullable Map<String,String> variables() {
        if (!unknown_variables) return value_variables;
        throw new UndeferrableValueException("Value 'Stage.variables' is not present");
    }

    /**
     * ARN of the WebAcl associated with the Stage.
     * 
     */
    @PolicyResourceProperty(name="webAclArn", flag="unknown_webAclArn")
    private String value_webAclArn;
    private boolean unknown_webAclArn;
    public String webAclArn() {
        if (!unknown_webAclArn) return value_webAclArn;
        throw new UndeferrableValueException("Value 'Stage.webAclArn' is not present");
    }

    /**
     * Whether active tracing with X-ray is enabled. Defaults to `false`.
     * 
     */
    @PolicyResourceProperty(name="xrayTracingEnabled", flag="unknown_xrayTracingEnabled")
    private @Nullable Boolean value_xrayTracingEnabled;
    private boolean unknown_xrayTracingEnabled;
    public @Nullable Boolean xrayTracingEnabled() {
        if (!unknown_xrayTracingEnabled) return value_xrayTracingEnabled;
        throw new UndeferrableValueException("Value 'Stage.xrayTracingEnabled' is not present");
    }

}
