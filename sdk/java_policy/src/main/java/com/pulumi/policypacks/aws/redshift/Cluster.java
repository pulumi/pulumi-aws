// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.redshift;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.redshift.ClusterClusterNode;
import com.pulumi.policypacks.aws.redshift.ClusterLogging;
import com.pulumi.policypacks.aws.redshift.ClusterSnapshotCopy;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;


@PolicyResourceType(type="aws:redshift/cluster:Cluster")
public final class Cluster extends com.pulumi.resources.PolicyResource {

    /**
     * If true , major version upgrades can be applied during the maintenance window to the Amazon Redshift engine that is running on the cluster. Default is `true`.
     * 
     */
    public Boolean allowVersionUpgrade;



    /**
     * Specifies whether any cluster modifications are applied immediately, or during the next maintenance window. Default is `false`.
     * 
     */
    public Boolean applyImmediately;



    /**
     * The value represents how the cluster is configured to use AQUA (Advanced Query Accelerator) after the cluster is restored.
     * No longer supported by the AWS API.
     * Always returns `auto`.
     * 
     * @deprecated
     * aqua_configuration_status is deprecated. This parameter is no longer supported by the AWS API. It will be removed in the next major version of the provider.
     * 
     */
    @Deprecated /* aqua_configuration_status is deprecated. This parameter is no longer supported by the AWS API. It will be removed in the next major version of the provider. */
    public String aquaConfigurationStatus;



    /**
     * Amazon Resource Name (ARN) of cluster
     * 
     */
    public String arn;



    /**
     * The number of days that automated snapshots are retained. If the value is 0, automated snapshots are disabled. Even if automated snapshots are disabled, you can still create manual snapshots when you want with create-cluster-snapshot. Default is 1.
     * 
     */
    public Integer automatedSnapshotRetentionPeriod;



    /**
     * The EC2 Availability Zone (AZ) in which you want Amazon Redshift to provision the cluster. For example, if you have several EC2 instances running in a specific Availability Zone, then you might want the cluster to be provisioned in the same zone in order to decrease network latency. Can only be changed if `availability_zone_relocation_enabled` is `true`.
     * 
     */
    public String availabilityZone;



    /**
     * If true, the cluster can be relocated to another availabity zone, either automatically by AWS or when requested. Default is `false`. Available for use on clusters from the RA3 instance family.
     * 
     */
    public Boolean availabilityZoneRelocationEnabled;



    /**
     * The Cluster Identifier. Must be a lower case string.
     * 
     */
    public String clusterIdentifier;



    /**
     * The namespace Amazon Resource Name (ARN) of the cluster
     * 
     */
    public String clusterNamespaceArn;



    /**
     * The nodes in the cluster. Cluster node blocks are documented below
     * 
     */
    public List<ClusterClusterNode> clusterNodes;



    /**
     * The name of the parameter group to be associated with this cluster.
     * 
     */
    public String clusterParameterGroupName;



    /**
     * The public key for the cluster
     * 
     */
    public String clusterPublicKey;



    /**
     * The specific revision number of the database in the cluster
     * 
     */
    public String clusterRevisionNumber;



    /**
     * The name of a cluster subnet group to be associated with this cluster. If this parameter is not provided the resulting cluster will be deployed outside virtual private cloud (VPC).
     * 
     */
    public String clusterSubnetGroupName;



    /**
     * The cluster type to use. Either `single-node` or `multi-node`.
     * 
     */
    public String clusterType;



    /**
     * The version of the Amazon Redshift engine software that you want to deploy on the cluster.
     * The version selected runs on all the nodes in the cluster.
     * 
     */
    public String clusterVersion;



    /**
     * The name of the first database to be created when the cluster is created.
     * If you do not provide a name, Amazon Redshift will create a default database called `dev`.
     * 
     */
    public String databaseName;



    /**
     * The Amazon Resource Name (ARN) for the IAM role that was set as default for the cluster when the cluster was created.
     * 
     */
    public String defaultIamRoleArn;



    /**
     * The DNS name of the cluster
     * 
     */
    public String dnsName;



    /**
     * The Elastic IP (EIP) address for the cluster.
     * 
     */
    public String elasticIp;



    /**
     * If true , the data in the cluster is encrypted at rest.
     * 
     */
    public Boolean encrypted;



    /**
     * The connection endpoint
     * 
     */
    public String endpoint;



    /**
     * If true , enhanced VPC routing is enabled.
     * 
     */
    public Boolean enhancedVpcRouting;



    /**
     * The identifier of the final snapshot that is to be created immediately before deleting the cluster. If this parameter is provided, `skip_final_snapshot` must be false.
     * 
     */
    public String finalSnapshotIdentifier;



    /**
     * A list of IAM Role ARNs to associate with the cluster. A Maximum of 10 can be associated to the cluster at any time.
     * 
     */
    public List<String> iamRoles;



    /**
     * The ARN for the KMS encryption key. When specifying `kms_key_id`, `encrypted` needs to be set to true.
     * 
     */
    public String kmsKeyId;



    /**
     * Logging, documented below.
     * 
     * @deprecated
     * logging is deprecated. Use the aws.redshift.Logging resource instead. This argument will be removed in a future major version.
     * 
     */
    @Deprecated /* logging is deprecated. Use the aws.redshift.Logging resource instead. This argument will be removed in a future major version. */
    public ClusterLogging logging;



    /**
     * The name of the maintenance track for the restored cluster. When you take a snapshot, the snapshot inherits the MaintenanceTrack value from the cluster. The snapshot might be on a different track than the cluster that was the source for the snapshot. For example, suppose that you take a snapshot of  a cluster that is on the current track and then change the cluster to be on the trailing track. In this case, the snapshot and the source cluster are on different tracks. Default value is `current`.
     * 
     */
    public String maintenanceTrackName;



    /**
     * Whether to use AWS SecretsManager to manage the cluster admin credentials.
     * Conflicts with `master_password` and `master_password_wo`.
     * One of `master_password` or `manage_master_password` is required unless `snapshot_identifier` is provided.
     * 
     */
    public Boolean manageMasterPassword;



    /**
     * The default number of days to retain a manual snapshot. If the value is -1, the snapshot is retained indefinitely. This setting doesn&#39;t change the retention period of existing snapshots. Valid values are between `-1` and `3653`. Default value is `-1`.
     * 
     */
    public Integer manualSnapshotRetentionPeriod;



    /**
     * Password for the master DB user.
     * Conflicts with `manage_master_password` and `master_password_wo`.
     * One of `master_password`, `master_password_wo` or `manage_master_password` is required unless `snapshot_identifier` is provided.
     * Note that this may show up in logs, and it will be stored in the state file.
     * Password must contain at least 8 characters and contain at least one uppercase letter, one lowercase letter, and one number.
     * 
     */
    public String masterPassword;



    /**
     * ARN of the cluster admin credentials secret
     * 
     */
    public String masterPasswordSecretArn;



    /**
     * ID of the KMS key used to encrypt the cluster admin credentials secret.
     * 
     */
    public String masterPasswordSecretKmsKeyId;



    /**
     * Username for the master DB user.
     * 
     */
    public String masterUsername;



    /**
     * Specifies if the Redshift cluster is multi-AZ.
     * 
     */
    public Boolean multiAz;



    /**
     * The node type to be provisioned for the cluster.
     * 
     */
    public String nodeType;



    /**
     * The number of compute nodes in the cluster. This parameter is required when the ClusterType parameter is specified as multi-node. Default is 1.
     * 
     */
    public Integer numberOfNodes;



    /**
     * The AWS customer account used to create or copy the snapshot. Required if you are restoring a snapshot you do not own, optional if you own the snapshot.
     * 
     */
    public String ownerAccount;



    /**
     * The port number on which the cluster accepts incoming connections. Valid values are between `1115` and `65535`.
     * The cluster is accessible only via the JDBC and ODBC connection strings.
     * Part of the connection string requires the port on which the cluster will listen for incoming connections.
     * Default port is `5439`.
     * 
     */
    public Integer port;



    /**
     * The weekly time range (in UTC) during which automated cluster maintenance can occur.
     * Format: ddd:hh24:mi-ddd:hh24:mi
     * 
     */
    public String preferredMaintenanceWindow;



    /**
     * If true, the cluster can be accessed from a public network. Default is `true`.
     * 
     */
    public Boolean publiclyAccessible;



    /**
     * Determines whether a final snapshot of the cluster is created before Amazon Redshift deletes the cluster. If true , a final cluster snapshot is not created. If false , a final cluster snapshot is created before the cluster is deleted. Default is false.
     * 
     */
    public Boolean skipFinalSnapshot;



    /**
     * The ARN of the snapshot from which to create the new cluster. Conflicts with `snapshot_identifier`.
     * 
     */
    public String snapshotArn;



    /**
     * The name of the cluster the source snapshot was created from.
     * 
     */
    public String snapshotClusterIdentifier;



    /**
     * Configuration of automatic copy of snapshots from one region to another. Documented below.
     * 
     * @deprecated
     * snapshot_copy is deprecated. Use the aws.redshift.SnapshotCopy resource instead. This argument will be removed in a future major version.
     * 
     */
    @Deprecated /* snapshot_copy is deprecated. Use the aws.redshift.SnapshotCopy resource instead. This argument will be removed in a future major version. */
    public ClusterSnapshotCopy snapshotCopy;



    /**
     * The name of the snapshot from which to create the new cluster.  Conflicts with `snapshot_arn`.
     * 
     */
    public String snapshotIdentifier;



    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



    /**
     * A list of Virtual Private Cloud (VPC) security groups to be associated with the cluster.
     * 
     */
    public List<String> vpcSecurityGroupIds;



}
