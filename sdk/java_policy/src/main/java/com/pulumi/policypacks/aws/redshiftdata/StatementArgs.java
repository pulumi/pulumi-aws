// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.redshiftdata;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.redshiftdata.inputs.StatementParameterArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:redshiftdata/statement:Statement")
public final class StatementArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The cluster identifier. This parameter is required when connecting to a cluster and authenticating using either Secrets Manager or temporary credentials.
     * 
     */
    private UndeferrableValue<String> clusterIdentifier;

    public String clusterIdentifier() {
        if (clusterIdentifier == null) return null;
        return clusterIdentifier.getValue("StatementArgs.clusterIdentifier");
    }

    /**
     * The name of the database.
     * 
     */
    private UndeferrableValue<String> database;

    public String database() {
        if (database == null) return null;
        return database.getValue("StatementArgs.database");
    }

    /**
     * The database user name.
     * 
     */
    private UndeferrableValue<String> dbUser;

    public String dbUser() {
        if (dbUser == null) return null;
        return dbUser.getValue("StatementArgs.dbUser");
    }

    private UndeferrableValue<List<StatementParameterArgs>> parameters;

    public List<StatementParameterArgs> parameters() {
        if (parameters == null) return null;
        return parameters.getValue("StatementArgs.parameters");
    }

    /**
     * The name or ARN of the secret that enables access to the database.
     * 
     */
    private UndeferrableValue<String> secretArn;

    public String secretArn() {
        if (secretArn == null) return null;
        return secretArn.getValue("StatementArgs.secretArn");
    }

    /**
     * The SQL statement text to run.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> sql;

    public String sql() {
        if (sql == null) return null;
        return sql.getValue("StatementArgs.sql");
    }

    /**
     * The name of the SQL statement. You can name the SQL statement when you create it to identify the query.
     * 
     */
    private UndeferrableValue<String> statementName;

    public String statementName() {
        if (statementName == null) return null;
        return statementName.getValue("StatementArgs.statementName");
    }

    /**
     * A value that indicates whether to send an event to the Amazon EventBridge event bus after the SQL statement runs.
     * 
     */
    private UndeferrableValue<Boolean> withEvent;

    public Boolean withEvent() {
        if (withEvent == null) return null;
        return withEvent.getValue("StatementArgs.withEvent");
    }

    /**
     * The serverless workgroup name. This parameter is required when connecting to a serverless workgroup and authenticating using either Secrets Manager or temporary credentials.
     * 
     */
    private UndeferrableValue<String> workgroupName;

    public String workgroupName() {
        if (workgroupName == null) return null;
        return workgroupName.getValue("StatementArgs.workgroupName");
    }

}
