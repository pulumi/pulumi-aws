// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.wafv2;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.wafv2.inputs.WebAclAssociationConfigArgs;
import com.pulumi.policypacks.aws.wafv2.inputs.WebAclCaptchaConfigArgs;
import com.pulumi.policypacks.aws.wafv2.inputs.WebAclChallengeConfigArgs;
import com.pulumi.policypacks.aws.wafv2.inputs.WebAclCustomResponseBodyArgs;
import com.pulumi.policypacks.aws.wafv2.inputs.WebAclDefaultActionArgs;
import com.pulumi.policypacks.aws.wafv2.inputs.WebAclRuleArgs;
import com.pulumi.policypacks.aws.wafv2.inputs.WebAclVisibilityConfigArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:wafv2/webAcl:WebAcl")
public final class WebAclArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Specifies custom configurations for the associations between the web ACL and protected resources. See `association_config` below for details.
     * 
     */
    private UndeferrableValue<WebAclAssociationConfigArgs> associationConfig;

    public WebAclAssociationConfigArgs associationConfig() {
        if (associationConfig == null) return null;
        return associationConfig.getValue("WebAclArgs.associationConfig");
    }

    /**
     * Specifies how AWS WAF should handle CAPTCHA evaluations on the ACL level (used by [AWS Bot Control](https://docs.aws.amazon.com/waf/latest/developerguide/aws-managed-rule-groups-bot.html)). See `captcha_config` below for details.
     * 
     */
    private UndeferrableValue<WebAclCaptchaConfigArgs> captchaConfig;

    public WebAclCaptchaConfigArgs captchaConfig() {
        if (captchaConfig == null) return null;
        return captchaConfig.getValue("WebAclArgs.captchaConfig");
    }

    /**
     * Specifies how AWS WAF should handle Challenge evaluations on the ACL level (used by [AWS Bot Control](https://docs.aws.amazon.com/waf/latest/developerguide/aws-managed-rule-groups-bot.html)). See `challenge_config` below for details.
     * 
     */
    private UndeferrableValue<WebAclChallengeConfigArgs> challengeConfig;

    public WebAclChallengeConfigArgs challengeConfig() {
        if (challengeConfig == null) return null;
        return challengeConfig.getValue("WebAclArgs.challengeConfig");
    }

    /**
     * Defines custom response bodies that can be referenced by `custom_response` actions. See `custom_response_body` below for details.
     * 
     */
    private UndeferrableValue<List<WebAclCustomResponseBodyArgs>> customResponseBodies;

    public List<WebAclCustomResponseBodyArgs> customResponseBodies() {
        if (customResponseBodies == null) return null;
        return customResponseBodies.getValue("WebAclArgs.customResponseBodies");
    }

    /**
     * Action to perform if none of the `rules` contained in the WebACL match. See `default_action` below for details.
     * 
     */
    private UndeferrableValue<WebAclDefaultActionArgs> defaultAction;

    public WebAclDefaultActionArgs defaultAction() {
        if (defaultAction == null) return null;
        return defaultAction.getValue("WebAclArgs.defaultAction");
    }

    /**
     * Friendly description of the WebACL.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("WebAclArgs.description");
    }

    /**
     * Friendly name of the WebACL. If omitted, the provider will assign a random, unique name. Conflicts with `name_prefix`.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("WebAclArgs.name");
    }

    /**
     * Creates a unique name beginning with the specified prefix. Conflicts with `name`.
     * 
     */
    private UndeferrableValue<String> namePrefix;

    public String namePrefix() {
        if (namePrefix == null) return null;
        return namePrefix.getValue("WebAclArgs.namePrefix");
    }

    /**
     * Raw JSON string to allow more than three nested statements. Conflicts with `rule` attribute. This is for advanced use cases where more than 3 levels of nested statements are required. **There is no drift detection at this time**. If you use this attribute instead of `rule`, you will be foregoing drift detection. Additionally, importing an existing web ACL into a configuration with `rule_json` set will result in a one time in-place update as the remote rule configuration is initially written to the `rule` attribute. See the AWS [documentation](https://docs.aws.amazon.com/waf/latest/APIReference/API_CreateWebACL.html) for the JSON structure.
     * 
     */
    private UndeferrableValue<String> ruleJson;

    public String ruleJson() {
        if (ruleJson == null) return null;
        return ruleJson.getValue("WebAclArgs.ruleJson");
    }

    /**
     * Rule blocks used to identify the web requests that you want to `allow`, `block`, or `count`. See `rule` below for details.
     * 
     */
    private UndeferrableValue<List<WebAclRuleArgs>> rules;

    public List<WebAclRuleArgs> rules() {
        if (rules == null) return null;
        return rules.getValue("WebAclArgs.rules");
    }

    /**
     * Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are `CLOUDFRONT` or `REGIONAL`. To work with CloudFront, you must also specify the region `us-east-1` (N. Virginia) on the AWS provider.
     * 
     */
    private UndeferrableValue<String> scope;

    public String scope() {
        if (scope == null) return null;
        return scope.getValue("WebAclArgs.scope");
    }

    /**
     * Map of key-value pairs to associate with the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("WebAclArgs.tags");
    }

    /**
     * Specifies the domains that AWS WAF should accept in a web request token. This enables the use of tokens across multiple protected websites. When AWS WAF provides a token, it uses the domain of the AWS resource that the web ACL is protecting. If you don&#39;t specify a list of token domains, AWS WAF accepts tokens only for the domain of the protected resource. With a token domain list, AWS WAF accepts the resource&#39;s host domain plus all domains in the token domain list, including their prefixed subdomains.
     * 
     */
    private UndeferrableValue<List<String>> tokenDomains;

    public List<String> tokenDomains() {
        if (tokenDomains == null) return null;
        return tokenDomains.getValue("WebAclArgs.tokenDomains");
    }

    /**
     * Defines and enables Amazon CloudWatch metrics and web request sample collection. See `visibility_config` below for details.
     * 
     */
    private UndeferrableValue<WebAclVisibilityConfigArgs> visibilityConfig;

    public WebAclVisibilityConfigArgs visibilityConfig() {
        if (visibilityConfig == null) return null;
        return visibilityConfig.getValue("WebAclArgs.visibilityConfig");
    }

}
