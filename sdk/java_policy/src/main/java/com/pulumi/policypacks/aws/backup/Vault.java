// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.backup;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:backup/vault:Vault")
public final class Vault extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The ARN of the vault.
     * 
     */
    private UndeferrableValue<String> arn;

    public String arn() {
        if (arn == null) return null;
        return arn.getValue("Vault.arn");
    }

    /**
     * A boolean that indicates that all recovery points stored in the vault are deleted so that the vault can be destroyed without error.
     * 
     */
    private @Nullable UndeferrableValue<Boolean> forceDestroy;

    public @Nullable Boolean forceDestroy() {
        if (forceDestroy == null) return null;
        return forceDestroy.getValue("Vault.forceDestroy");
    }

    /**
     * The server-side encryption key that is used to protect your backups.
     * 
     */
    private UndeferrableValue<String> kmsKeyArn;

    public String kmsKeyArn() {
        if (kmsKeyArn == null) return null;
        return kmsKeyArn.getValue("Vault.kmsKeyArn");
    }

    /**
     * Name of the backup vault to create.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("Vault.name");
    }

    /**
     * The number of recovery points that are stored in a backup vault.
     * 
     */
    private UndeferrableValue<Integer> recoveryPoints;

    public Integer recoveryPoints() {
        if (recoveryPoints == null) return null;
        return recoveryPoints.getValue("Vault.recoveryPoints");
    }

    /**
     * Metadata that you can assign to help organize the resources that you create. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private @Nullable UndeferrableValue<Map<String,String>> tags;

    public @Nullable Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("Vault.tags");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    private UndeferrableValue<Map<String,String>> tagsAll;

    public Map<String,String> tagsAll() {
        if (tagsAll == null) return null;
        return tagsAll.getValue("Vault.tagsAll");
    }

}
