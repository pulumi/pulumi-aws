// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.ec2.outputs.FleetOnDemandOptionsCapacityReservationOptions;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class FleetOnDemandOptions {

    /**
     * The order of the launch template overrides to use in fulfilling On-Demand capacity. Valid values: `lowestPrice`, `prioritized`. Default: `lowestPrice`.
     * 
     */
    private @Nullable UndeferrableValue<String> allocationStrategy;

    public @Nullable String allocationStrategy() {
        if (allocationStrategy == null) return null;
        return allocationStrategy.getValue("FleetOnDemandOptions.allocationStrategy");
    }

    /**
     * The strategy for using unused Capacity Reservations for fulfilling On-Demand capacity. Supported only for fleets of type `instant`.
     * 
     */
    private @Nullable UndeferrableValue<FleetOnDemandOptionsCapacityReservationOptions> capacityReservationOptions;

    public @Nullable FleetOnDemandOptionsCapacityReservationOptions capacityReservationOptions() {
        if (capacityReservationOptions == null) return null;
        return capacityReservationOptions.getValue("FleetOnDemandOptions.capacityReservationOptions");
    }

    /**
     * The maximum amount per hour for On-Demand Instances that you&#39;re willing to pay.
     * 
     */
    private @Nullable UndeferrableValue<String> maxTotalPrice;

    public @Nullable String maxTotalPrice() {
        if (maxTotalPrice == null) return null;
        return maxTotalPrice.getValue("FleetOnDemandOptions.maxTotalPrice");
    }

    /**
     * The minimum target capacity for On-Demand Instances in the fleet. If the minimum target capacity is not reached, the fleet launches no instances. Supported only for fleets of type `instant`.
     * If you specify `min_target_capacity`, at least one of the following must be specified: `single_availability_zone` or `single_instance_type`.
     * 
     */
    private @Nullable UndeferrableValue<Integer> minTargetCapacity;

    public @Nullable Integer minTargetCapacity() {
        if (minTargetCapacity == null) return null;
        return minTargetCapacity.getValue("FleetOnDemandOptions.minTargetCapacity");
    }

    /**
     * Indicates that the fleet launches all On-Demand Instances into a single Availability Zone. Supported only for fleets of type `instant`.
     * 
     */
    private @Nullable UndeferrableValue<Boolean> singleAvailabilityZone;

    public @Nullable Boolean singleAvailabilityZone() {
        if (singleAvailabilityZone == null) return null;
        return singleAvailabilityZone.getValue("FleetOnDemandOptions.singleAvailabilityZone");
    }

    /**
     * Indicates that the fleet uses a single instance type to launch all On-Demand Instances in the fleet. Supported only for fleets of type `instant`.
     * 
     */
    private @Nullable UndeferrableValue<Boolean> singleInstanceType;

    public @Nullable Boolean singleInstanceType() {
        if (singleInstanceType == null) return null;
        return singleInstanceType.getValue("FleetOnDemandOptions.singleInstanceType");
    }

}
