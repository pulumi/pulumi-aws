// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.lakeformation;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:lakeformation/resource:Resource")
public final class ResourceArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Amazon Resource Name (ARN) of the resource.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> arn;

    public String arn() {
        if (arn == null) return null;
        return arn.getValue("ResourceArgs.arn");
    }

    /**
     * Flag to enable AWS LakeFormation hybrid access permission mode.
     * 
     * &gt; **NOTE:** AWS does not support registering an S3 location with an IAM role and subsequently updating the S3 location registration to a service-linked role.
     * 
     */
    private UndeferrableValue<Boolean> hybridAccessEnabled;

    public Boolean hybridAccessEnabled() {
        if (hybridAccessEnabled == null) return null;
        return hybridAccessEnabled.getValue("ResourceArgs.hybridAccessEnabled");
    }

    /**
     * Role that has read/write access to the resource.
     * 
     */
    private UndeferrableValue<String> roleArn;

    public String roleArn() {
        if (roleArn == null) return null;
        return roleArn.getValue("ResourceArgs.roleArn");
    }

    /**
     * Designates an AWS Identity and Access Management (IAM) service-linked role by registering this role with the Data Catalog.
     * 
     */
    private UndeferrableValue<Boolean> useServiceLinkedRole;

    public Boolean useServiceLinkedRole() {
        if (useServiceLinkedRole == null) return null;
        return useServiceLinkedRole.getValue("ResourceArgs.useServiceLinkedRole");
    }

    private UndeferrableValue<Boolean> withFederation;

    public Boolean withFederation() {
        if (withFederation == null) return null;
        return withFederation.getValue("ResourceArgs.withFederation");
    }

}
