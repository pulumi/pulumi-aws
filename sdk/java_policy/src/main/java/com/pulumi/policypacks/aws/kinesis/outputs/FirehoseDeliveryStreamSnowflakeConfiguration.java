// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.kinesis.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.kinesis.outputs.FirehoseDeliveryStreamSnowflakeConfigurationCloudwatchLoggingOptions;
import com.pulumi.policypacks.aws.kinesis.outputs.FirehoseDeliveryStreamSnowflakeConfigurationProcessingConfiguration;
import com.pulumi.policypacks.aws.kinesis.outputs.FirehoseDeliveryStreamSnowflakeConfigurationS3Configuration;
import com.pulumi.policypacks.aws.kinesis.outputs.FirehoseDeliveryStreamSnowflakeConfigurationSecretsManagerConfiguration;
import com.pulumi.policypacks.aws.kinesis.outputs.FirehoseDeliveryStreamSnowflakeConfigurationSnowflakeRoleConfiguration;
import com.pulumi.policypacks.aws.kinesis.outputs.FirehoseDeliveryStreamSnowflakeConfigurationSnowflakeVpcConfiguration;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class FirehoseDeliveryStreamSnowflakeConfiguration {

    /**
     * The URL of the Snowflake account. Format: https://[account_identifier].snowflakecomputing.com.
     * 
     */
    @PolicyResourceProperty(name="accountUrl", flag="unknown_accountUrl")
    private String value_accountUrl;
    private boolean unknown_accountUrl;
    public String accountUrl() {
        if (!unknown_accountUrl) return value_accountUrl;
        throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamSnowflakeConfiguration.accountUrl' is not present");
    }

    /**
     * Buffer incoming data for the specified period of time, in seconds between 0 to 900, before delivering it to the destination.  The default value is 0s.
     * 
     */
    @PolicyResourceProperty(name="bufferingInterval", flag="unknown_bufferingInterval")
    private @Nullable Integer value_bufferingInterval;
    private boolean unknown_bufferingInterval;
    public @Nullable Integer bufferingInterval() {
        if (!unknown_bufferingInterval) return value_bufferingInterval;
        throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamSnowflakeConfiguration.bufferingInterval' is not present");
    }

    /**
     * Buffer incoming data to the specified size, in MBs between 1 to 128, before delivering it to the destination.  The default value is 1MB.
     * 
     */
    @PolicyResourceProperty(name="bufferingSize", flag="unknown_bufferingSize")
    private @Nullable Integer value_bufferingSize;
    private boolean unknown_bufferingSize;
    public @Nullable Integer bufferingSize() {
        if (!unknown_bufferingSize) return value_bufferingSize;
        throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamSnowflakeConfiguration.bufferingSize' is not present");
    }

    /**
     * The CloudWatch Logging Options for the delivery stream. See `cloudwatch_logging_options` block below for details.
     * 
     */
    @PolicyResourceProperty(name="cloudwatchLoggingOptions", flag="unknown_cloudwatchLoggingOptions")
    private @Nullable FirehoseDeliveryStreamSnowflakeConfigurationCloudwatchLoggingOptions value_cloudwatchLoggingOptions;
    private boolean unknown_cloudwatchLoggingOptions;
    public @Nullable FirehoseDeliveryStreamSnowflakeConfigurationCloudwatchLoggingOptions cloudwatchLoggingOptions() {
        if (!unknown_cloudwatchLoggingOptions) return value_cloudwatchLoggingOptions;
        throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamSnowflakeConfiguration.cloudwatchLoggingOptions' is not present");
    }

    /**
     * The name of the content column.
     * 
     */
    @PolicyResourceProperty(name="contentColumnName", flag="unknown_contentColumnName")
    private @Nullable String value_contentColumnName;
    private boolean unknown_contentColumnName;
    public @Nullable String contentColumnName() {
        if (!unknown_contentColumnName) return value_contentColumnName;
        throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamSnowflakeConfiguration.contentColumnName' is not present");
    }

    /**
     * The data loading option.
     * 
     */
    @PolicyResourceProperty(name="dataLoadingOption", flag="unknown_dataLoadingOption")
    private @Nullable String value_dataLoadingOption;
    private boolean unknown_dataLoadingOption;
    public @Nullable String dataLoadingOption() {
        if (!unknown_dataLoadingOption) return value_dataLoadingOption;
        throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamSnowflakeConfiguration.dataLoadingOption' is not present");
    }

    /**
     * The Snowflake database name.
     * 
     */
    @PolicyResourceProperty(name="database", flag="unknown_database")
    private String value_database;
    private boolean unknown_database;
    public String database() {
        if (!unknown_database) return value_database;
        throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamSnowflakeConfiguration.database' is not present");
    }

    /**
     * The passphrase for the private key.
     * 
     */
    @PolicyResourceProperty(name="keyPassphrase", flag="unknown_keyPassphrase")
    private @Nullable String value_keyPassphrase;
    private boolean unknown_keyPassphrase;
    public @Nullable String keyPassphrase() {
        if (!unknown_keyPassphrase) return value_keyPassphrase;
        throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamSnowflakeConfiguration.keyPassphrase' is not present");
    }

    /**
     * The name of the metadata column.
     * 
     */
    @PolicyResourceProperty(name="metadataColumnName", flag="unknown_metadataColumnName")
    private @Nullable String value_metadataColumnName;
    private boolean unknown_metadataColumnName;
    public @Nullable String metadataColumnName() {
        if (!unknown_metadataColumnName) return value_metadataColumnName;
        throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamSnowflakeConfiguration.metadataColumnName' is not present");
    }

    /**
     * The private key for authentication. This value is required if `secrets_manager_configuration` is not provided.
     * 
     */
    @PolicyResourceProperty(name="privateKey", flag="unknown_privateKey")
    private @Nullable String value_privateKey;
    private boolean unknown_privateKey;
    public @Nullable String privateKey() {
        if (!unknown_privateKey) return value_privateKey;
        throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamSnowflakeConfiguration.privateKey' is not present");
    }

    /**
     * The processing configuration. See `processing_configuration` block below for details.
     * 
     */
    @PolicyResourceProperty(name="processingConfiguration", flag="unknown_processingConfiguration")
    private @Nullable FirehoseDeliveryStreamSnowflakeConfigurationProcessingConfiguration value_processingConfiguration;
    private boolean unknown_processingConfiguration;
    public @Nullable FirehoseDeliveryStreamSnowflakeConfigurationProcessingConfiguration processingConfiguration() {
        if (!unknown_processingConfiguration) return value_processingConfiguration;
        throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamSnowflakeConfiguration.processingConfiguration' is not present");
    }

    /**
     * After an initial failure to deliver to Snowflake, the total amount of time, in seconds between 0 to 7200, during which Firehose re-attempts delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 60s.  There will be no retry if the value is 0.
     * 
     */
    @PolicyResourceProperty(name="retryDuration", flag="unknown_retryDuration")
    private @Nullable Integer value_retryDuration;
    private boolean unknown_retryDuration;
    public @Nullable Integer retryDuration() {
        if (!unknown_retryDuration) return value_retryDuration;
        throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamSnowflakeConfiguration.retryDuration' is not present");
    }

    /**
     * The ARN of the IAM role.
     * 
     */
    @PolicyResourceProperty(name="roleArn", flag="unknown_roleArn")
    private String value_roleArn;
    private boolean unknown_roleArn;
    public String roleArn() {
        if (!unknown_roleArn) return value_roleArn;
        throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamSnowflakeConfiguration.roleArn' is not present");
    }

    /**
     * The S3 backup mode.
     * 
     */
    @PolicyResourceProperty(name="s3BackupMode", flag="unknown_s3BackupMode")
    private @Nullable String value_s3BackupMode;
    private boolean unknown_s3BackupMode;
    public @Nullable String s3BackupMode() {
        if (!unknown_s3BackupMode) return value_s3BackupMode;
        throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamSnowflakeConfiguration.s3BackupMode' is not present");
    }

    /**
     * The S3 configuration. See `s3_configuration` block below for details.
     * 
     */
    @PolicyResourceProperty(name="s3Configuration", flag="unknown_s3Configuration")
    private FirehoseDeliveryStreamSnowflakeConfigurationS3Configuration value_s3Configuration;
    private boolean unknown_s3Configuration;
    public FirehoseDeliveryStreamSnowflakeConfigurationS3Configuration s3Configuration() {
        if (!unknown_s3Configuration) return value_s3Configuration;
        throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamSnowflakeConfiguration.s3Configuration' is not present");
    }

    /**
     * The Snowflake schema name.
     * 
     */
    @PolicyResourceProperty(name="schema", flag="unknown_schema")
    private String value_schema;
    private boolean unknown_schema;
    public String schema() {
        if (!unknown_schema) return value_schema;
        throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamSnowflakeConfiguration.schema' is not present");
    }

    /**
     * The Secrets Manager configuration. See `secrets_manager_configuration` block below for details. This value is required if `user` and `private_key` are not provided.
     * 
     */
    @PolicyResourceProperty(name="secretsManagerConfiguration", flag="unknown_secretsManagerConfiguration")
    private @Nullable FirehoseDeliveryStreamSnowflakeConfigurationSecretsManagerConfiguration value_secretsManagerConfiguration;
    private boolean unknown_secretsManagerConfiguration;
    public @Nullable FirehoseDeliveryStreamSnowflakeConfigurationSecretsManagerConfiguration secretsManagerConfiguration() {
        if (!unknown_secretsManagerConfiguration) return value_secretsManagerConfiguration;
        throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamSnowflakeConfiguration.secretsManagerConfiguration' is not present");
    }

    /**
     * The configuration for Snowflake role.
     * 
     */
    @PolicyResourceProperty(name="snowflakeRoleConfiguration", flag="unknown_snowflakeRoleConfiguration")
    private @Nullable FirehoseDeliveryStreamSnowflakeConfigurationSnowflakeRoleConfiguration value_snowflakeRoleConfiguration;
    private boolean unknown_snowflakeRoleConfiguration;
    public @Nullable FirehoseDeliveryStreamSnowflakeConfigurationSnowflakeRoleConfiguration snowflakeRoleConfiguration() {
        if (!unknown_snowflakeRoleConfiguration) return value_snowflakeRoleConfiguration;
        throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamSnowflakeConfiguration.snowflakeRoleConfiguration' is not present");
    }

    /**
     * The VPC configuration for Snowflake.
     * 
     */
    @PolicyResourceProperty(name="snowflakeVpcConfiguration", flag="unknown_snowflakeVpcConfiguration")
    private @Nullable FirehoseDeliveryStreamSnowflakeConfigurationSnowflakeVpcConfiguration value_snowflakeVpcConfiguration;
    private boolean unknown_snowflakeVpcConfiguration;
    public @Nullable FirehoseDeliveryStreamSnowflakeConfigurationSnowflakeVpcConfiguration snowflakeVpcConfiguration() {
        if (!unknown_snowflakeVpcConfiguration) return value_snowflakeVpcConfiguration;
        throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamSnowflakeConfiguration.snowflakeVpcConfiguration' is not present");
    }

    /**
     * The Snowflake table name.
     * 
     */
    @PolicyResourceProperty(name="table", flag="unknown_table")
    private String value_table;
    private boolean unknown_table;
    public String table() {
        if (!unknown_table) return value_table;
        throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamSnowflakeConfiguration.table' is not present");
    }

    /**
     * The user for authentication. This value is required if `secrets_manager_configuration` is not provided.
     * 
     */
    @PolicyResourceProperty(name="user", flag="unknown_user")
    private @Nullable String value_user;
    private boolean unknown_user;
    public @Nullable String user() {
        if (!unknown_user) return value_user;
        throw new UndeferrableValueException("Value 'FirehoseDeliveryStreamSnowflakeConfiguration.user' is not present");
    }

}
