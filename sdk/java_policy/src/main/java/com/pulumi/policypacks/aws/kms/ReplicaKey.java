// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.kms;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:kms/replicaKey:ReplicaKey")
public final class ReplicaKey extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The Amazon Resource Name (ARN) of the replica key. The key ARNs of related multi-Region keys differ only in the Region value.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'ReplicaKey.arn' is not present");
    }

    /**
     * A flag to indicate whether to bypass the key policy lockout safety check.
     * Setting this value to true increases the risk that the KMS key becomes unmanageable. Do not set this value to true indiscriminately.
     * For more information, refer to the scenario in the [Default Key Policy](https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default-allow-root-enable-iam) section in the _AWS Key Management Service Developer Guide_.
     * The default value is `false`.
     * 
     */
    @PolicyResourceProperty(name="bypassPolicyLockoutSafetyCheck", flag="unknown_bypassPolicyLockoutSafetyCheck")
    private @Nullable Boolean value_bypassPolicyLockoutSafetyCheck;
    private boolean unknown_bypassPolicyLockoutSafetyCheck;
    public @Nullable Boolean bypassPolicyLockoutSafetyCheck() {
        if (!unknown_bypassPolicyLockoutSafetyCheck) return value_bypassPolicyLockoutSafetyCheck;
        throw new UndeferrableValueException("Value 'ReplicaKey.bypassPolicyLockoutSafetyCheck' is not present");
    }

    /**
     * The waiting period, specified in number of days. After the waiting period ends, AWS KMS deletes the KMS key.
     * If you specify a value, it must be between `7` and `30`, inclusive. If you do not specify a value, it defaults to `30`.
     * 
     */
    @PolicyResourceProperty(name="deletionWindowInDays", flag="unknown_deletionWindowInDays")
    private @Nullable Integer value_deletionWindowInDays;
    private boolean unknown_deletionWindowInDays;
    public @Nullable Integer deletionWindowInDays() {
        if (!unknown_deletionWindowInDays) return value_deletionWindowInDays;
        throw new UndeferrableValueException("Value 'ReplicaKey.deletionWindowInDays' is not present");
    }

    /**
     * A description of the KMS key.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private @Nullable String value_description;
    private boolean unknown_description;
    public @Nullable String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'ReplicaKey.description' is not present");
    }

    /**
     * Specifies whether the replica key is enabled. Disabled KMS keys cannot be used in cryptographic operations. The default value is `true`.
     * 
     */
    @PolicyResourceProperty(name="enabled", flag="unknown_enabled")
    private @Nullable Boolean value_enabled;
    private boolean unknown_enabled;
    public @Nullable Boolean enabled() {
        if (!unknown_enabled) return value_enabled;
        throw new UndeferrableValueException("Value 'ReplicaKey.enabled' is not present");
    }

    /**
     * The key ID of the replica key. Related multi-Region keys have the same key ID.
     * 
     */
    @PolicyResourceProperty(name="keyId", flag="unknown_keyId")
    private String value_keyId;
    private boolean unknown_keyId;
    public String keyId() {
        if (!unknown_keyId) return value_keyId;
        throw new UndeferrableValueException("Value 'ReplicaKey.keyId' is not present");
    }

    /**
     * A Boolean value that specifies whether key rotation is enabled. This is a shared property of multi-Region keys.
     * 
     */
    @PolicyResourceProperty(name="keyRotationEnabled", flag="unknown_keyRotationEnabled")
    private Boolean value_keyRotationEnabled;
    private boolean unknown_keyRotationEnabled;
    public Boolean keyRotationEnabled() {
        if (!unknown_keyRotationEnabled) return value_keyRotationEnabled;
        throw new UndeferrableValueException("Value 'ReplicaKey.keyRotationEnabled' is not present");
    }

    /**
     * The type of key material in the KMS key. This is a shared property of multi-Region keys.
     * 
     */
    @PolicyResourceProperty(name="keySpec", flag="unknown_keySpec")
    private String value_keySpec;
    private boolean unknown_keySpec;
    public String keySpec() {
        if (!unknown_keySpec) return value_keySpec;
        throw new UndeferrableValueException("Value 'ReplicaKey.keySpec' is not present");
    }

    /**
     * The [cryptographic operations](https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations) for which you can use the KMS key. This is a shared property of multi-Region keys.
     * 
     */
    @PolicyResourceProperty(name="keyUsage", flag="unknown_keyUsage")
    private String value_keyUsage;
    private boolean unknown_keyUsage;
    public String keyUsage() {
        if (!unknown_keyUsage) return value_keyUsage;
        throw new UndeferrableValueException("Value 'ReplicaKey.keyUsage' is not present");
    }

    /**
     * The key policy to attach to the KMS key. If you do not specify a key policy, AWS KMS attaches the [default key policy](https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default) to the KMS key.
     * 
     */
    @PolicyResourceProperty(name="policy", flag="unknown_policy")
    private String value_policy;
    private boolean unknown_policy;
    public String policy() {
        if (!unknown_policy) return value_policy;
        throw new UndeferrableValueException("Value 'ReplicaKey.policy' is not present");
    }

    /**
     * The ARN of the multi-Region primary key to replicate. The primary key must be in a different AWS Region of the same AWS Partition. You can create only one replica of a given primary key in each AWS Region.
     * 
     */
    @PolicyResourceProperty(name="primaryKeyArn", flag="unknown_primaryKeyArn")
    private String value_primaryKeyArn;
    private boolean unknown_primaryKeyArn;
    public String primaryKeyArn() {
        if (!unknown_primaryKeyArn) return value_primaryKeyArn;
        throw new UndeferrableValueException("Value 'ReplicaKey.primaryKeyArn' is not present");
    }

    /**
     * A map of tags to assign to the replica key. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'ReplicaKey.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'ReplicaKey.tagsAll' is not present");
    }

}
