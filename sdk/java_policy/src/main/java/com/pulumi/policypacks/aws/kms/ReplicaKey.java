// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.kms;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:kms/replicaKey:ReplicaKey")
public final class ReplicaKey extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The Amazon Resource Name (ARN) of the replica key. The key ARNs of related multi-Region keys differ only in the Region value.
     * 
     */
    private UndeferrableValue<String> arn;

    public String arn() {
        if (arn == null) return null;
        return arn.getValue("ReplicaKey.arn");
    }

    /**
     * A flag to indicate whether to bypass the key policy lockout safety check.
     * Setting this value to true increases the risk that the KMS key becomes unmanageable. Do not set this value to true indiscriminately.
     * For more information, refer to the scenario in the [Default Key Policy](https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default-allow-root-enable-iam) section in the _AWS Key Management Service Developer Guide_.
     * The default value is `false`.
     * 
     */
    private @Nullable UndeferrableValue<Boolean> bypassPolicyLockoutSafetyCheck;

    public @Nullable Boolean bypassPolicyLockoutSafetyCheck() {
        if (bypassPolicyLockoutSafetyCheck == null) return null;
        return bypassPolicyLockoutSafetyCheck.getValue("ReplicaKey.bypassPolicyLockoutSafetyCheck");
    }

    /**
     * The waiting period, specified in number of days. After the waiting period ends, AWS KMS deletes the KMS key.
     * If you specify a value, it must be between `7` and `30`, inclusive. If you do not specify a value, it defaults to `30`.
     * 
     */
    private @Nullable UndeferrableValue<Integer> deletionWindowInDays;

    public @Nullable Integer deletionWindowInDays() {
        if (deletionWindowInDays == null) return null;
        return deletionWindowInDays.getValue("ReplicaKey.deletionWindowInDays");
    }

    /**
     * A description of the KMS key.
     * 
     */
    private @Nullable UndeferrableValue<String> description;

    public @Nullable String description() {
        if (description == null) return null;
        return description.getValue("ReplicaKey.description");
    }

    /**
     * Specifies whether the replica key is enabled. Disabled KMS keys cannot be used in cryptographic operations. The default value is `true`.
     * 
     */
    private @Nullable UndeferrableValue<Boolean> enabled;

    public @Nullable Boolean enabled() {
        if (enabled == null) return null;
        return enabled.getValue("ReplicaKey.enabled");
    }

    /**
     * The key ID of the replica key. Related multi-Region keys have the same key ID.
     * 
     */
    private UndeferrableValue<String> keyId;

    public String keyId() {
        if (keyId == null) return null;
        return keyId.getValue("ReplicaKey.keyId");
    }

    /**
     * A Boolean value that specifies whether key rotation is enabled. This is a shared property of multi-Region keys.
     * 
     */
    private UndeferrableValue<Boolean> keyRotationEnabled;

    public Boolean keyRotationEnabled() {
        if (keyRotationEnabled == null) return null;
        return keyRotationEnabled.getValue("ReplicaKey.keyRotationEnabled");
    }

    /**
     * The type of key material in the KMS key. This is a shared property of multi-Region keys.
     * 
     */
    private UndeferrableValue<String> keySpec;

    public String keySpec() {
        if (keySpec == null) return null;
        return keySpec.getValue("ReplicaKey.keySpec");
    }

    /**
     * The [cryptographic operations](https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#cryptographic-operations) for which you can use the KMS key. This is a shared property of multi-Region keys.
     * 
     */
    private UndeferrableValue<String> keyUsage;

    public String keyUsage() {
        if (keyUsage == null) return null;
        return keyUsage.getValue("ReplicaKey.keyUsage");
    }

    /**
     * The key policy to attach to the KMS key. If you do not specify a key policy, AWS KMS attaches the [default key policy](https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default) to the KMS key.
     * 
     */
    private UndeferrableValue<String> policy;

    public String policy() {
        if (policy == null) return null;
        return policy.getValue("ReplicaKey.policy");
    }

    /**
     * The ARN of the multi-Region primary key to replicate. The primary key must be in a different AWS Region of the same AWS Partition. You can create only one replica of a given primary key in each AWS Region.
     * 
     */
    private UndeferrableValue<String> primaryKeyArn;

    public String primaryKeyArn() {
        if (primaryKeyArn == null) return null;
        return primaryKeyArn.getValue("ReplicaKey.primaryKeyArn");
    }

    /**
     * A map of tags to assign to the replica key. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private @Nullable UndeferrableValue<Map<String,String>> tags;

    public @Nullable Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("ReplicaKey.tags");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    private UndeferrableValue<Map<String,String>> tagsAll;

    public Map<String,String> tagsAll() {
        if (tagsAll == null) return null;
        return tagsAll.getValue("ReplicaKey.tagsAll");
    }

}
