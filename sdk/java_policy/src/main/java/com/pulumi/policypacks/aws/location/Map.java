// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.location;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.location.outputs.MapConfiguration;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:location/map:Map")
public final class Map extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Configuration block with the map style selected from an available data provider. Detailed below.
     * 
     */
    private UndeferrableValue<MapConfiguration> configuration;

    public MapConfiguration configuration() {
        if (configuration == null) return null;
        return configuration.getValue("Map.configuration");
    }

    /**
     * The timestamp for when the map resource was created in ISO 8601 format.
     * 
     */
    private UndeferrableValue<String> createTime;

    public String createTime() {
        if (createTime == null) return null;
        return createTime.getValue("Map.createTime");
    }

    /**
     * An optional description for the map resource.
     * 
     */
    private @Nullable UndeferrableValue<String> description;

    public @Nullable String description() {
        if (description == null) return null;
        return description.getValue("Map.description");
    }

    /**
     * The Amazon Resource Name (ARN) for the map resource. Used to specify a resource across all AWS.
     * 
     */
    private UndeferrableValue<String> mapArn;

    public String mapArn() {
        if (mapArn == null) return null;
        return mapArn.getValue("Map.mapArn");
    }

    /**
     * The name for the map resource.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> mapName;

    public String mapName() {
        if (mapName == null) return null;
        return mapName.getValue("Map.mapName");
    }

    /**
     * Key-value tags for the map. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private @Nullable UndeferrableValue<java.util.Map<String,String>> tags;

    public @Nullable java.util.Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("Map.tags");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    private UndeferrableValue<java.util.Map<String,String>> tagsAll;

    public java.util.Map<String,String> tagsAll() {
        if (tagsAll == null) return null;
        return tagsAll.getValue("Map.tagsAll");
    }

    /**
     * The timestamp for when the map resource was last updated in ISO 8601 format.
     * 
     */
    private UndeferrableValue<String> updateTime;

    public String updateTime() {
        if (updateTime == null) return null;
        return updateTime.getValue("Map.updateTime");
    }

}
