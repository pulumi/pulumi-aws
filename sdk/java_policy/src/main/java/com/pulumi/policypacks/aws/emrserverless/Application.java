// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.emrserverless;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.emrserverless.ApplicationAutoStartConfiguration;
import com.pulumi.policypacks.aws.emrserverless.ApplicationAutoStopConfiguration;
import com.pulumi.policypacks.aws.emrserverless.ApplicationImageConfiguration;
import com.pulumi.policypacks.aws.emrserverless.ApplicationInitialCapacity;
import com.pulumi.policypacks.aws.emrserverless.ApplicationInteractiveConfiguration;
import com.pulumi.policypacks.aws.emrserverless.ApplicationMaximumCapacity;
import com.pulumi.policypacks.aws.emrserverless.ApplicationNetworkConfiguration;
import java.lang.String;
import java.util.List;
import java.util.Map;


@PolicyResourceType(type="aws:emrserverless/application:Application")
public final class Application extends com.pulumi.resources.PolicyResource {

    /**
     * The CPU architecture of an application. Valid values are `ARM64` or `X86_64`. Default value is `X86_64`.
     * 
     */
    public String architecture;



    /**
     * ARN of the cluster.
     * 
     */
    public String arn;



    /**
     * The configuration for an application to automatically start on job submission.
     * 
     */
    public ApplicationAutoStartConfiguration autoStartConfiguration;



    /**
     * The configuration for an application to automatically stop after a certain amount of time being idle.
     * 
     */
    public ApplicationAutoStopConfiguration autoStopConfiguration;



    /**
     * The image configuration applied to all worker types.
     * 
     */
    public ApplicationImageConfiguration imageConfiguration;



    /**
     * The capacity to initialize when the application is created.
     * 
     */
    public List<ApplicationInitialCapacity> initialCapacities;



    /**
     * Enables the interactive use cases to use when running an application.
     * 
     */
    public ApplicationInteractiveConfiguration interactiveConfiguration;



    /**
     * The maximum capacity to allocate when the application is created. This is cumulative across all workers at any given point in time, not just when an application is created. No new resources will be created once any one of the defined limits is hit.
     * 
     */
    public ApplicationMaximumCapacity maximumCapacity;



    /**
     * The name of the application.
     * 
     */
    public String name;



    /**
     * The network configuration for customer VPC connectivity.
     * 
     */
    public ApplicationNetworkConfiguration networkConfiguration;



    /**
     * The EMR release version associated with the application.
     * 
     */
    public String releaseLabel;



    /**
     * Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



    /**
     * The type of application you want to start, such as `spark` or `hive`.
     * 
     */
    public String type;



}
