// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.datazone;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:datazone/environmentBlueprintConfiguration:EnvironmentBlueprintConfiguration")
public final class EnvironmentBlueprintConfiguration extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * ID of the Domain.
     * 
     */
    @PolicyResourceProperty(name="domainId", flag="unknown_domainId")
    private String value_domainId;
    private boolean unknown_domainId;
    public String domainId() {
        if (!unknown_domainId) return value_domainId;
        throw new UndeferrableValueException("Value 'EnvironmentBlueprintConfiguration.domainId' is not present");
    }

    /**
     * Regions in which the blueprint is enabled
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="enabledRegions", flag="unknown_enabledRegions")
    private List<String> value_enabledRegions;
    private boolean unknown_enabledRegions;
    public List<String> enabledRegions() {
        if (!unknown_enabledRegions) return value_enabledRegions;
        throw new UndeferrableValueException("Value 'EnvironmentBlueprintConfiguration.enabledRegions' is not present");
    }

    /**
     * ID of the Environment Blueprint
     * 
     */
    @PolicyResourceProperty(name="environmentBlueprintId", flag="unknown_environmentBlueprintId")
    private String value_environmentBlueprintId;
    private boolean unknown_environmentBlueprintId;
    public String environmentBlueprintId() {
        if (!unknown_environmentBlueprintId) return value_environmentBlueprintId;
        throw new UndeferrableValueException("Value 'EnvironmentBlueprintConfiguration.environmentBlueprintId' is not present");
    }

    /**
     * ARN of the manage access role with which this blueprint is created.
     * 
     */
    @PolicyResourceProperty(name="manageAccessRoleArn", flag="unknown_manageAccessRoleArn")
    private @Nullable String value_manageAccessRoleArn;
    private boolean unknown_manageAccessRoleArn;
    public @Nullable String manageAccessRoleArn() {
        if (!unknown_manageAccessRoleArn) return value_manageAccessRoleArn;
        throw new UndeferrableValueException("Value 'EnvironmentBlueprintConfiguration.manageAccessRoleArn' is not present");
    }

    /**
     * ARN of the provisioning role with which this blueprint is created.
     * 
     */
    @PolicyResourceProperty(name="provisioningRoleArn", flag="unknown_provisioningRoleArn")
    private @Nullable String value_provisioningRoleArn;
    private boolean unknown_provisioningRoleArn;
    public @Nullable String provisioningRoleArn() {
        if (!unknown_provisioningRoleArn) return value_provisioningRoleArn;
        throw new UndeferrableValueException("Value 'EnvironmentBlueprintConfiguration.provisioningRoleArn' is not present");
    }

    /**
     * Parameters for each region in which the blueprint is enabled
     * 
     */
    @PolicyResourceProperty(name="regionalParameters", flag="unknown_regionalParameters")
    private @Nullable Map<String,Map<String,String>> value_regionalParameters;
    private boolean unknown_regionalParameters;
    public @Nullable Map<String,Map<String,String>> regionalParameters() {
        if (!unknown_regionalParameters) return value_regionalParameters;
        throw new UndeferrableValueException("Value 'EnvironmentBlueprintConfiguration.regionalParameters' is not present");
    }

}
