// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.cloudhsmv2;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:cloudhsmv2/cluster:Cluster")
public final class ClusterArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The type of HSM module in the cluster. Currently, `hsm1.medium` and `hsm2m.medium` are supported.
     * 
     */
    private UndeferrableValue<String> hsmType;

    public String hsmType() {
        if (hsmType == null) return null;
        return hsmType.getValue("ClusterArgs.hsmType");
    }

    /**
     * The mode to use in the cluster. The allowed values are `FIPS` and `NON_FIPS`. This field is required if `hsm_type` is `hsm2m.medium`.
     * 
     */
    private UndeferrableValue<String> mode;

    public String mode() {
        if (mode == null) return null;
        return mode.getValue("ClusterArgs.mode");
    }

    /**
     * ID of Cloud HSM v2 cluster backup to be restored.
     * 
     */
    private UndeferrableValue<String> sourceBackupIdentifier;

    public String sourceBackupIdentifier() {
        if (sourceBackupIdentifier == null) return null;
        return sourceBackupIdentifier.getValue("ClusterArgs.sourceBackupIdentifier");
    }

    /**
     * The IDs of subnets in which cluster will operate.
     * 
     */
    private UndeferrableValue<List<String>> subnetIds;

    public List<String> subnetIds() {
        if (subnetIds == null) return null;
        return subnetIds.getValue("ClusterArgs.subnetIds");
    }

    /**
     * A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("ClusterArgs.tags");
    }

}
