// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.lakeformation;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.lakeformation.inputs.ResourceLfTagDatabaseArgs;
import com.pulumi.policypacks.aws.lakeformation.inputs.ResourceLfTagLfTagArgs;
import com.pulumi.policypacks.aws.lakeformation.inputs.ResourceLfTagTableArgs;
import com.pulumi.policypacks.aws.lakeformation.inputs.ResourceLfTagTableWithColumnsArgs;
import com.pulumi.policypacks.aws.lakeformation.inputs.ResourceLfTagTimeoutsArgs;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:lakeformation/resourceLfTag:ResourceLfTag")
public final class ResourceLfTagArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment.
     * 
     */
    private UndeferrableValue<String> catalogId;

    public String catalogId() {
        if (catalogId == null) return null;
        return catalogId.getValue("ResourceLfTagArgs.catalogId");
    }

    /**
     * Configuration block for a database resource. See Database for more details.
     * 
     */
    private UndeferrableValue<ResourceLfTagDatabaseArgs> database;

    public ResourceLfTagDatabaseArgs database() {
        if (database == null) return null;
        return database.getValue("ResourceLfTagArgs.database");
    }

    /**
     * Set of LF-tags to attach to the resource. See LF Tag for more details.
     * 
     * Exactly one of the following is required:
     * 
     */
    private UndeferrableValue<ResourceLfTagLfTagArgs> lfTag;

    public ResourceLfTagLfTagArgs lfTag() {
        if (lfTag == null) return null;
        return lfTag.getValue("ResourceLfTagArgs.lfTag");
    }

    /**
     * Configuration block for a table resource. See Table for more details.
     * 
     */
    private UndeferrableValue<ResourceLfTagTableArgs> table;

    public ResourceLfTagTableArgs table() {
        if (table == null) return null;
        return table.getValue("ResourceLfTagArgs.table");
    }

    /**
     * Configuration block for a table with columns resource. See Table With Columns for more details.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<ResourceLfTagTableWithColumnsArgs> tableWithColumns;

    public ResourceLfTagTableWithColumnsArgs tableWithColumns() {
        if (tableWithColumns == null) return null;
        return tableWithColumns.getValue("ResourceLfTagArgs.tableWithColumns");
    }

    private UndeferrableValue<ResourceLfTagTimeoutsArgs> timeouts;

    public ResourceLfTagTimeoutsArgs timeouts() {
        if (timeouts == null) return null;
        return timeouts.getValue("ResourceLfTagArgs.timeouts");
    }

}
