// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.athena;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.athena.outputs.CapacityReservationTimeouts;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:athena/capacityReservation:CapacityReservation")
public final class CapacityReservation extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Number of data processing units currently allocated.
     * 
     */
    @PolicyResourceProperty(name="allocatedDpus", flag="unknown_allocatedDpus")
    private Integer value_allocatedDpus;
    private boolean unknown_allocatedDpus;
    public Integer allocatedDpus() {
        if (!unknown_allocatedDpus) return value_allocatedDpus;
        throw new UndeferrableValueException("Value 'CapacityReservation.allocatedDpus' is not present");
    }

    /**
     * ARN of the Capacity Reservation.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'CapacityReservation.arn' is not present");
    }

    /**
     * Name of the capacity reservation.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'CapacityReservation.name' is not present");
    }

    /**
     * Status of the capacity reservation.
     * 
     */
    @PolicyResourceProperty(name="status", flag="unknown_status")
    private String value_status;
    private boolean unknown_status;
    public String status() {
        if (!unknown_status) return value_status;
        throw new UndeferrableValueException("Value 'CapacityReservation.status' is not present");
    }

    /**
     * Map of tags assigned to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'CapacityReservation.tags' is not present");
    }

    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'CapacityReservation.tagsAll' is not present");
    }

    /**
     * Number of data processing units requested. Must be at least `24` units.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="targetDpus", flag="unknown_targetDpus")
    private Integer value_targetDpus;
    private boolean unknown_targetDpus;
    public Integer targetDpus() {
        if (!unknown_targetDpus) return value_targetDpus;
        throw new UndeferrableValueException("Value 'CapacityReservation.targetDpus' is not present");
    }

    @PolicyResourceProperty(name="timeouts", flag="unknown_timeouts")
    private @Nullable CapacityReservationTimeouts value_timeouts;
    private boolean unknown_timeouts;
    public @Nullable CapacityReservationTimeouts timeouts() {
        if (!unknown_timeouts) return value_timeouts;
        throw new UndeferrableValueException("Value 'CapacityReservation.timeouts' is not present");
    }

}
