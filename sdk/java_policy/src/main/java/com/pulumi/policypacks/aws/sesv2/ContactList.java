// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.sesv2;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.sesv2.outputs.ContactListTopic;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:sesv2/contactList:ContactList")
public final class ContactList extends com.pulumi.resources.PolicyResourceOutput {

    private UndeferrableValue<String> arn;

    public String arn() {
        if (arn == null) return null;
        return arn.getValue("ContactList.arn");
    }

    /**
     * Name of the contact list.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> contactListName;

    public String contactListName() {
        if (contactListName == null) return null;
        return contactListName.getValue("ContactList.contactListName");
    }

    /**
     * Timestamp noting when the contact list was created in ISO 8601 format.
     * 
     */
    private UndeferrableValue<String> createdTimestamp;

    public String createdTimestamp() {
        if (createdTimestamp == null) return null;
        return createdTimestamp.getValue("ContactList.createdTimestamp");
    }

    /**
     * Description of what the contact list is about.
     * 
     */
    private @Nullable UndeferrableValue<String> description;

    public @Nullable String description() {
        if (description == null) return null;
        return description.getValue("ContactList.description");
    }

    /**
     * Timestamp noting the last time the contact list was updated in ISO 8601 format.
     * 
     */
    private UndeferrableValue<String> lastUpdatedTimestamp;

    public String lastUpdatedTimestamp() {
        if (lastUpdatedTimestamp == null) return null;
        return lastUpdatedTimestamp.getValue("ContactList.lastUpdatedTimestamp");
    }

    /**
     * Key-value map of resource tags for the contact list. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private @Nullable UndeferrableValue<Map<String,String>> tags;

    public @Nullable Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("ContactList.tags");
    }

    /**
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    private UndeferrableValue<Map<String,String>> tagsAll;

    public Map<String,String> tagsAll() {
        if (tagsAll == null) return null;
        return tagsAll.getValue("ContactList.tagsAll");
    }

    /**
     * Configuration block(s) with topic for the contact list. Detailed below.
     * 
     */
    private @Nullable UndeferrableValue<List<ContactListTopic>> topics;

    public @Nullable List<ContactListTopic> topics() {
        if (topics == null) return null;
        return topics.getValue("ContactList.topics");
    }

}
