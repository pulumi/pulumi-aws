// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class FleetTargetCapacitySpecificationArgs {

    /**
     * Default target capacity type. Valid values: `on-demand`, `spot`.
     * 
     */
    @PolicyResourceProperty(name="defaultTargetCapacityType", flag="unknown_defaultTargetCapacityType")
    private String value_defaultTargetCapacityType;
    private boolean unknown_defaultTargetCapacityType;
    public String defaultTargetCapacityType() {
        if (!unknown_defaultTargetCapacityType) return value_defaultTargetCapacityType;
        throw new UndeferrableValueException("Value 'FleetTargetCapacitySpecificationArgs.defaultTargetCapacityType' is not present");
    }

    /**
     * The number of On-Demand units to request.
     * 
     */
    @PolicyResourceProperty(name="onDemandTargetCapacity", flag="unknown_onDemandTargetCapacity")
    private Integer value_onDemandTargetCapacity;
    private boolean unknown_onDemandTargetCapacity;
    public Integer onDemandTargetCapacity() {
        if (!unknown_onDemandTargetCapacity) return value_onDemandTargetCapacity;
        throw new UndeferrableValueException("Value 'FleetTargetCapacitySpecificationArgs.onDemandTargetCapacity' is not present");
    }

    /**
     * The number of Spot units to request.
     * 
     */
    @PolicyResourceProperty(name="spotTargetCapacity", flag="unknown_spotTargetCapacity")
    private Integer value_spotTargetCapacity;
    private boolean unknown_spotTargetCapacity;
    public Integer spotTargetCapacity() {
        if (!unknown_spotTargetCapacity) return value_spotTargetCapacity;
        throw new UndeferrableValueException("Value 'FleetTargetCapacitySpecificationArgs.spotTargetCapacity' is not present");
    }

    /**
     * The unit for the target capacity.
     * If you specify `target_capacity_unit_type`, `instance_requirements` must be specified.
     * 
     */
    @PolicyResourceProperty(name="targetCapacityUnitType", flag="unknown_targetCapacityUnitType")
    private String value_targetCapacityUnitType;
    private boolean unknown_targetCapacityUnitType;
    public String targetCapacityUnitType() {
        if (!unknown_targetCapacityUnitType) return value_targetCapacityUnitType;
        throw new UndeferrableValueException("Value 'FleetTargetCapacitySpecificationArgs.targetCapacityUnitType' is not present");
    }

    /**
     * The number of units to request, filled using `default_target_capacity_type`.
     * 
     */
    @PolicyResourceProperty(name="totalTargetCapacity", flag="unknown_totalTargetCapacity")
    private Integer value_totalTargetCapacity;
    private boolean unknown_totalTargetCapacity;
    public Integer totalTargetCapacity() {
        if (!unknown_totalTargetCapacity) return value_totalTargetCapacity;
        throw new UndeferrableValueException("Value 'FleetTargetCapacitySpecificationArgs.totalTargetCapacity' is not present");
    }

}
