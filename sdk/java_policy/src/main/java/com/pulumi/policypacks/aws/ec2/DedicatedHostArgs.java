// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ec2/dedicatedHost:DedicatedHost")
public final class DedicatedHostArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The ID of the Outpost hardware asset on which to allocate the Dedicated Hosts. This parameter is supported only if you specify OutpostArn. If you are allocating the Dedicated Hosts in a Region, omit this parameter.
     * 
     */
    private UndeferrableValue<String> assetId;

    public String assetId() {
        if (assetId == null) return null;
        return assetId.getValue("DedicatedHostArgs.assetId");
    }

    /**
     * Indicates whether the host accepts any untargeted instance launches that match its instance type configuration, or if it only accepts Host tenancy instance launches that specify its unique host ID. Valid values: `on`, `off`. Default: `on`.
     * 
     */
    private UndeferrableValue<String> autoPlacement;

    public String autoPlacement() {
        if (autoPlacement == null) return null;
        return autoPlacement.getValue("DedicatedHostArgs.autoPlacement");
    }

    /**
     * The Availability Zone in which to allocate the Dedicated Host.
     * 
     */
    private UndeferrableValue<String> availabilityZone;

    public String availabilityZone() {
        if (availabilityZone == null) return null;
        return availabilityZone.getValue("DedicatedHostArgs.availabilityZone");
    }

    /**
     * Indicates whether to enable or disable host recovery for the Dedicated Host. Valid values: `on`, `off`. Default: `off`.
     * 
     */
    private UndeferrableValue<String> hostRecovery;

    public String hostRecovery() {
        if (hostRecovery == null) return null;
        return hostRecovery.getValue("DedicatedHostArgs.hostRecovery");
    }

    /**
     * Specifies the instance family to be supported by the Dedicated Hosts. If you specify an instance family, the Dedicated Hosts support multiple instance types within that instance family. Exactly one of `instance_family` or `instance_type` must be specified.
     * 
     */
    private UndeferrableValue<String> instanceFamily;

    public String instanceFamily() {
        if (instanceFamily == null) return null;
        return instanceFamily.getValue("DedicatedHostArgs.instanceFamily");
    }

    /**
     * Specifies the instance type to be supported by the Dedicated Hosts. If you specify an instance type, the Dedicated Hosts support instances of the specified instance type only. Exactly one of `instance_family` or `instance_type` must be specified.
     * 
     */
    private UndeferrableValue<String> instanceType;

    public String instanceType() {
        if (instanceType == null) return null;
        return instanceType.getValue("DedicatedHostArgs.instanceType");
    }

    /**
     * The Amazon Resource Name (ARN) of the AWS Outpost on which to allocate the Dedicated Host.
     * 
     */
    private UndeferrableValue<String> outpostArn;

    public String outpostArn() {
        if (outpostArn == null) return null;
        return outpostArn.getValue("DedicatedHostArgs.outpostArn");
    }

    /**
     * Map of tags to assign to this resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("DedicatedHostArgs.tags");
    }

}
