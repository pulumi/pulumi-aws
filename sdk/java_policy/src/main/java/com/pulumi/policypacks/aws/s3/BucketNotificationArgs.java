// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.s3;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.s3.inputs.BucketNotificationLambdaFunctionArgs;
import com.pulumi.policypacks.aws.s3.inputs.BucketNotificationQueueArgs;
import com.pulumi.policypacks.aws.s3.inputs.BucketNotificationTopicArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:s3/bucketNotification:BucketNotification")
public final class BucketNotificationArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Name of the bucket for notification configuration.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> bucket;

    public String bucket() {
        if (bucket == null) return null;
        return bucket.getValue("BucketNotificationArgs.bucket");
    }

    /**
     * Whether to enable Amazon EventBridge notifications. Defaults to `false`.
     * 
     */
    private UndeferrableValue<Boolean> eventbridge;

    public Boolean eventbridge() {
        if (eventbridge == null) return null;
        return eventbridge.getValue("BucketNotificationArgs.eventbridge");
    }

    /**
     * Used to configure notifications to a Lambda Function. See below.
     * 
     */
    private UndeferrableValue<List<BucketNotificationLambdaFunctionArgs>> lambdaFunctions;

    public List<BucketNotificationLambdaFunctionArgs> lambdaFunctions() {
        if (lambdaFunctions == null) return null;
        return lambdaFunctions.getValue("BucketNotificationArgs.lambdaFunctions");
    }

    /**
     * Notification configuration to SQS Queue. See below.
     * 
     */
    private UndeferrableValue<List<BucketNotificationQueueArgs>> queues;

    public List<BucketNotificationQueueArgs> queues() {
        if (queues == null) return null;
        return queues.getValue("BucketNotificationArgs.queues");
    }

    /**
     * Notification configuration to SNS Topic. See below.
     * 
     */
    private UndeferrableValue<List<BucketNotificationTopicArgs>> topics;

    public List<BucketNotificationTopicArgs> topics() {
        if (topics == null) return null;
        return topics.getValue("BucketNotificationArgs.topics");
    }

}
