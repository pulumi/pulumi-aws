// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appmesh.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.appmesh.inputs.VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArgs;
import com.pulumi.policypacks.aws.appmesh.inputs.VirtualNodeSpecListenerOutlierDetectionIntervalArgs;
import java.lang.Integer;


public final class VirtualNodeSpecListenerOutlierDetectionArgs {

    /**
     * Base amount of time for which a host is ejected.
     * 
     */
    @PolicyResourceProperty(name="baseEjectionDuration", flag="unknown_baseEjectionDuration")
    private VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArgs value_baseEjectionDuration;
    private boolean unknown_baseEjectionDuration;
    public VirtualNodeSpecListenerOutlierDetectionBaseEjectionDurationArgs baseEjectionDuration() {
        if (!unknown_baseEjectionDuration) return value_baseEjectionDuration;
        throw new UndeferrableValueException("Value 'VirtualNodeSpecListenerOutlierDetectionArgs.baseEjectionDuration' is not present");
    }

    /**
     * Time interval between ejection sweep analysis.
     * 
     */
    @PolicyResourceProperty(name="interval", flag="unknown_interval")
    private VirtualNodeSpecListenerOutlierDetectionIntervalArgs value_interval;
    private boolean unknown_interval;
    public VirtualNodeSpecListenerOutlierDetectionIntervalArgs interval() {
        if (!unknown_interval) return value_interval;
        throw new UndeferrableValueException("Value 'VirtualNodeSpecListenerOutlierDetectionArgs.interval' is not present");
    }

    /**
     * Maximum percentage of hosts in load balancing pool for upstream service that can be ejected. Will eject at least one host regardless of the value.
     * Minimum value of `0`. Maximum value of `100`.
     * 
     */
    @PolicyResourceProperty(name="maxEjectionPercent", flag="unknown_maxEjectionPercent")
    private Integer value_maxEjectionPercent;
    private boolean unknown_maxEjectionPercent;
    public Integer maxEjectionPercent() {
        if (!unknown_maxEjectionPercent) return value_maxEjectionPercent;
        throw new UndeferrableValueException("Value 'VirtualNodeSpecListenerOutlierDetectionArgs.maxEjectionPercent' is not present");
    }

    /**
     * Number of consecutive `5xx` errors required for ejection. Minimum value of `1`.
     * 
     */
    @PolicyResourceProperty(name="maxServerErrors", flag="unknown_maxServerErrors")
    private Integer value_maxServerErrors;
    private boolean unknown_maxServerErrors;
    public Integer maxServerErrors() {
        if (!unknown_maxServerErrors) return value_maxServerErrors;
        throw new UndeferrableValueException("Value 'VirtualNodeSpecListenerOutlierDetectionArgs.maxServerErrors' is not present");
    }

}
