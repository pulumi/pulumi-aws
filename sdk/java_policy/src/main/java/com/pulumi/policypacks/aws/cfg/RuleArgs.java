// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.cfg;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.cfg.inputs.RuleEvaluationModeArgs;
import com.pulumi.policypacks.aws.cfg.inputs.RuleScopeArgs;
import com.pulumi.policypacks.aws.cfg.inputs.RuleSourceArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:cfg/rule:Rule")
public final class RuleArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Description of the rule
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("RuleArgs.description");
    }

    /**
     * The modes the Config rule can be evaluated in. See Evaluation Mode for more details.
     * 
     */
    private UndeferrableValue<List<RuleEvaluationModeArgs>> evaluationModes;

    public List<RuleEvaluationModeArgs> evaluationModes() {
        if (evaluationModes == null) return null;
        return evaluationModes.getValue("RuleArgs.evaluationModes");
    }

    /**
     * A string in JSON format that is passed to the AWS Config rule Lambda function.
     * 
     */
    private UndeferrableValue<String> inputParameters;

    public String inputParameters() {
        if (inputParameters == null) return null;
        return inputParameters.getValue("RuleArgs.inputParameters");
    }

    /**
     * The maximum frequency with which AWS Config runs evaluations for a rule.
     * 
     */
    private UndeferrableValue<String> maximumExecutionFrequency;

    public String maximumExecutionFrequency() {
        if (maximumExecutionFrequency == null) return null;
        return maximumExecutionFrequency.getValue("RuleArgs.maximumExecutionFrequency");
    }

    /**
     * The name of the rule
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("RuleArgs.name");
    }

    /**
     * Scope defines which resources can trigger an evaluation for the rule. See Scope Below.
     * 
     */
    private UndeferrableValue<RuleScopeArgs> scope;

    public RuleScopeArgs scope() {
        if (scope == null) return null;
        return scope.getValue("RuleArgs.scope");
    }

    /**
     * Source specifies the rule owner, the rule identifier, and the notifications that cause the function to evaluate your AWS resources. See Source Below.
     * 
     */
    private UndeferrableValue<RuleSourceArgs> source;

    public RuleSourceArgs source() {
        if (source == null) return null;
        return source.getValue("RuleArgs.source");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("RuleArgs.tags");
    }

}
