// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.pinpoint;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.pinpoint.inputs.Smsvoicev2PhoneNumberTimeoutsArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:pinpoint/smsvoicev2PhoneNumber:Smsvoicev2PhoneNumber")
public final class Smsvoicev2PhoneNumberArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * By default this is set to `false`. When set to true the phone number can’t be deleted.
     * 
     */
    @PolicyResourceProperty(name="deletionProtectionEnabled", flag="unknown_deletionProtectionEnabled")
    private Boolean value_deletionProtectionEnabled;
    private boolean unknown_deletionProtectionEnabled;
    public Boolean deletionProtectionEnabled() {
        if (!unknown_deletionProtectionEnabled) return value_deletionProtectionEnabled;
        throw new UndeferrableValueException("Value 'Smsvoicev2PhoneNumberArgs.deletionProtectionEnabled' is not present");
    }

    /**
     * The two-character code, in ISO 3166-1 alpha-2 format, for the country or region.
     * 
     */
    @PolicyResourceProperty(name="isoCountryCode", flag="unknown_isoCountryCode")
    private String value_isoCountryCode;
    private boolean unknown_isoCountryCode;
    public String isoCountryCode() {
        if (!unknown_isoCountryCode) return value_isoCountryCode;
        throw new UndeferrableValueException("Value 'Smsvoicev2PhoneNumberArgs.isoCountryCode' is not present");
    }

    /**
     * The type of message. Valid values are `TRANSACTIONAL` for messages that are critical or time-sensitive and `PROMOTIONAL` for messages that aren’t critical or time-sensitive.
     * 
     */
    @PolicyResourceProperty(name="messageType", flag="unknown_messageType")
    private String value_messageType;
    private boolean unknown_messageType;
    public String messageType() {
        if (!unknown_messageType) return value_messageType;
        throw new UndeferrableValueException("Value 'Smsvoicev2PhoneNumberArgs.messageType' is not present");
    }

    /**
     * Describes if the origination identity can be used for text messages, voice calls or both. valid values are `SMS` and `VOICE`.
     * 
     */
    @PolicyResourceProperty(name="numberCapabilities", flag="unknown_numberCapabilities")
    private List<String> value_numberCapabilities;
    private boolean unknown_numberCapabilities;
    public List<String> numberCapabilities() {
        if (!unknown_numberCapabilities) return value_numberCapabilities;
        throw new UndeferrableValueException("Value 'Smsvoicev2PhoneNumberArgs.numberCapabilities' is not present");
    }

    /**
     * The type of phone number to request. Possible values are `LONG_CODE`, `TOLL_FREE`, `TEN_DLC`, or `SIMULATOR`.
     * 
     */
    @PolicyResourceProperty(name="numberType", flag="unknown_numberType")
    private String value_numberType;
    private boolean unknown_numberType;
    public String numberType() {
        if (!unknown_numberType) return value_numberType;
        throw new UndeferrableValueException("Value 'Smsvoicev2PhoneNumberArgs.numberType' is not present");
    }

    /**
     * The name of the opt-out list to associate with the phone number.
     * 
     */
    @PolicyResourceProperty(name="optOutListName", flag="unknown_optOutListName")
    private String value_optOutListName;
    private boolean unknown_optOutListName;
    public String optOutListName() {
        if (!unknown_optOutListName) return value_optOutListName;
        throw new UndeferrableValueException("Value 'Smsvoicev2PhoneNumberArgs.optOutListName' is not present");
    }

    /**
     * Use this field to attach your phone number for an external registration process.
     * 
     */
    @PolicyResourceProperty(name="registrationId", flag="unknown_registrationId")
    private String value_registrationId;
    private boolean unknown_registrationId;
    public String registrationId() {
        if (!unknown_registrationId) return value_registrationId;
        throw new UndeferrableValueException("Value 'Smsvoicev2PhoneNumberArgs.registrationId' is not present");
    }

    /**
     * When set to `false` an end recipient sends a message that begins with HELP or STOP to one of your dedicated numbers, AWS End User Messaging SMS and Voice automatically replies with a customizable message and adds the end recipient to the opt-out list. When set to true you’re responsible for responding to HELP and STOP requests. You’re also responsible for tracking and honoring opt-out request.
     * 
     */
    @PolicyResourceProperty(name="selfManagedOptOutsEnabled", flag="unknown_selfManagedOptOutsEnabled")
    private Boolean value_selfManagedOptOutsEnabled;
    private boolean unknown_selfManagedOptOutsEnabled;
    public Boolean selfManagedOptOutsEnabled() {
        if (!unknown_selfManagedOptOutsEnabled) return value_selfManagedOptOutsEnabled;
        throw new UndeferrableValueException("Value 'Smsvoicev2PhoneNumberArgs.selfManagedOptOutsEnabled' is not present");
    }

    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'Smsvoicev2PhoneNumberArgs.tags' is not present");
    }

    @PolicyResourceProperty(name="timeouts", flag="unknown_timeouts")
    private Smsvoicev2PhoneNumberTimeoutsArgs value_timeouts;
    private boolean unknown_timeouts;
    public Smsvoicev2PhoneNumberTimeoutsArgs timeouts() {
        if (!unknown_timeouts) return value_timeouts;
        throw new UndeferrableValueException("Value 'Smsvoicev2PhoneNumberArgs.timeouts' is not present");
    }

    /**
     * The Amazon Resource Name (ARN) of the two way channel.
     * 
     */
    @PolicyResourceProperty(name="twoWayChannelArn", flag="unknown_twoWayChannelArn")
    private String value_twoWayChannelArn;
    private boolean unknown_twoWayChannelArn;
    public String twoWayChannelArn() {
        if (!unknown_twoWayChannelArn) return value_twoWayChannelArn;
        throw new UndeferrableValueException("Value 'Smsvoicev2PhoneNumberArgs.twoWayChannelArn' is not present");
    }

    /**
     * By default this is set to `false`. When set to `true` you can receive incoming text messages from your end recipients.
     * 
     */
    @PolicyResourceProperty(name="twoWayChannelEnabled", flag="unknown_twoWayChannelEnabled")
    private Boolean value_twoWayChannelEnabled;
    private boolean unknown_twoWayChannelEnabled;
    public Boolean twoWayChannelEnabled() {
        if (!unknown_twoWayChannelEnabled) return value_twoWayChannelEnabled;
        throw new UndeferrableValueException("Value 'Smsvoicev2PhoneNumberArgs.twoWayChannelEnabled' is not present");
    }

}
