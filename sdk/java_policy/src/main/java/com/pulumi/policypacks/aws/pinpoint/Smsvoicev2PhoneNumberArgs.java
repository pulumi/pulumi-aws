// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.pinpoint;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.pinpoint.inputs.Smsvoicev2PhoneNumberTimeoutsArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:pinpoint/smsvoicev2PhoneNumber:Smsvoicev2PhoneNumber")
public final class Smsvoicev2PhoneNumberArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * By default this is set to `false`. When set to true the phone number can’t be deleted.
     * 
     */
    private UndeferrableValue<Boolean> deletionProtectionEnabled;

    public Boolean deletionProtectionEnabled() {
        if (deletionProtectionEnabled == null) return null;
        return deletionProtectionEnabled.getValue("Smsvoicev2PhoneNumberArgs.deletionProtectionEnabled");
    }

    /**
     * The two-character code, in ISO 3166-1 alpha-2 format, for the country or region.
     * 
     */
    private UndeferrableValue<String> isoCountryCode;

    public String isoCountryCode() {
        if (isoCountryCode == null) return null;
        return isoCountryCode.getValue("Smsvoicev2PhoneNumberArgs.isoCountryCode");
    }

    /**
     * The type of message. Valid values are `TRANSACTIONAL` for messages that are critical or time-sensitive and `PROMOTIONAL` for messages that aren’t critical or time-sensitive.
     * 
     */
    private UndeferrableValue<String> messageType;

    public String messageType() {
        if (messageType == null) return null;
        return messageType.getValue("Smsvoicev2PhoneNumberArgs.messageType");
    }

    /**
     * Describes if the origination identity can be used for text messages, voice calls or both. valid values are `SMS` and `VOICE`.
     * 
     */
    private UndeferrableValue<List<String>> numberCapabilities;

    public List<String> numberCapabilities() {
        if (numberCapabilities == null) return null;
        return numberCapabilities.getValue("Smsvoicev2PhoneNumberArgs.numberCapabilities");
    }

    /**
     * The type of phone number to request. Possible values are `LONG_CODE`, `TOLL_FREE`, `TEN_DLC`, or `SIMULATOR`.
     * 
     */
    private UndeferrableValue<String> numberType;

    public String numberType() {
        if (numberType == null) return null;
        return numberType.getValue("Smsvoicev2PhoneNumberArgs.numberType");
    }

    /**
     * The name of the opt-out list to associate with the phone number.
     * 
     */
    private UndeferrableValue<String> optOutListName;

    public String optOutListName() {
        if (optOutListName == null) return null;
        return optOutListName.getValue("Smsvoicev2PhoneNumberArgs.optOutListName");
    }

    /**
     * Use this field to attach your phone number for an external registration process.
     * 
     */
    private UndeferrableValue<String> registrationId;

    public String registrationId() {
        if (registrationId == null) return null;
        return registrationId.getValue("Smsvoicev2PhoneNumberArgs.registrationId");
    }

    /**
     * When set to `false` an end recipient sends a message that begins with HELP or STOP to one of your dedicated numbers, AWS End User Messaging SMS and Voice automatically replies with a customizable message and adds the end recipient to the opt-out list. When set to true you’re responsible for responding to HELP and STOP requests. You’re also responsible for tracking and honoring opt-out request.
     * 
     */
    private UndeferrableValue<Boolean> selfManagedOptOutsEnabled;

    public Boolean selfManagedOptOutsEnabled() {
        if (selfManagedOptOutsEnabled == null) return null;
        return selfManagedOptOutsEnabled.getValue("Smsvoicev2PhoneNumberArgs.selfManagedOptOutsEnabled");
    }

    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("Smsvoicev2PhoneNumberArgs.tags");
    }

    private UndeferrableValue<Smsvoicev2PhoneNumberTimeoutsArgs> timeouts;

    public Smsvoicev2PhoneNumberTimeoutsArgs timeouts() {
        if (timeouts == null) return null;
        return timeouts.getValue("Smsvoicev2PhoneNumberArgs.timeouts");
    }

    /**
     * The Amazon Resource Name (ARN) of the two way channel.
     * 
     */
    private UndeferrableValue<String> twoWayChannelArn;

    public String twoWayChannelArn() {
        if (twoWayChannelArn == null) return null;
        return twoWayChannelArn.getValue("Smsvoicev2PhoneNumberArgs.twoWayChannelArn");
    }

    /**
     * By default this is set to `false`. When set to `true` you can receive incoming text messages from your end recipients.
     * 
     */
    private UndeferrableValue<Boolean> twoWayChannelEnabled;

    public Boolean twoWayChannelEnabled() {
        if (twoWayChannelEnabled == null) return null;
        return twoWayChannelEnabled.getValue("Smsvoicev2PhoneNumberArgs.twoWayChannelEnabled");
    }

}
