// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.lakeformation.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class PermissionsTableWithColumnsArgs {

    /**
     * Identifier for the Data Catalog. By default, it is the account ID of the caller.
     * 
     */
    @PolicyResourceProperty(name="catalogId", flag="unknown_catalogId")
    private String value_catalogId;
    private boolean unknown_catalogId;
    public String catalogId() {
        if (!unknown_catalogId) return value_catalogId;
        throw new UndeferrableValueException("Value 'PermissionsTableWithColumnsArgs.catalogId' is not present");
    }

    /**
     * Set of column names for the table.
     * 
     */
    @PolicyResourceProperty(name="columnNames", flag="unknown_columnNames")
    private List<String> value_columnNames;
    private boolean unknown_columnNames;
    public List<String> columnNames() {
        if (!unknown_columnNames) return value_columnNames;
        throw new UndeferrableValueException("Value 'PermissionsTableWithColumnsArgs.columnNames' is not present");
    }

    /**
     * Name of the database for the table with columns resource. Unique to the Data Catalog.
     * 
     */
    @PolicyResourceProperty(name="databaseName", flag="unknown_databaseName")
    private String value_databaseName;
    private boolean unknown_databaseName;
    public String databaseName() {
        if (!unknown_databaseName) return value_databaseName;
        throw new UndeferrableValueException("Value 'PermissionsTableWithColumnsArgs.databaseName' is not present");
    }

    /**
     * Set of column names for the table to exclude. If `excluded_column_names` is included, `wildcard` must be set to `true` to avoid the provider reporting a difference.
     * 
     */
    @PolicyResourceProperty(name="excludedColumnNames", flag="unknown_excludedColumnNames")
    private List<String> value_excludedColumnNames;
    private boolean unknown_excludedColumnNames;
    public List<String> excludedColumnNames() {
        if (!unknown_excludedColumnNames) return value_excludedColumnNames;
        throw new UndeferrableValueException("Value 'PermissionsTableWithColumnsArgs.excludedColumnNames' is not present");
    }

    /**
     * Name of the table resource.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'PermissionsTableWithColumnsArgs.name' is not present");
    }

    /**
     * Whether to use a column wildcard. If `excluded_column_names` is included, `wildcard` must be set to `true` to avoid the provider reporting a difference.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="wildcard", flag="unknown_wildcard")
    private Boolean value_wildcard;
    private boolean unknown_wildcard;
    public Boolean wildcard() {
        if (!unknown_wildcard) return value_wildcard;
        throw new UndeferrableValueException("Value 'PermissionsTableWithColumnsArgs.wildcard' is not present");
    }

}
