// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.macie2;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:macie2/member:Member")
public final class MemberArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The AWS account ID for the account.
     * 
     */
    @PolicyResourceProperty(name="accountId", flag="unknown_accountId")
    private String value_accountId;
    private boolean unknown_accountId;
    public String accountId() {
        if (!unknown_accountId) return value_accountId;
        throw new UndeferrableValueException("Value 'MemberArgs.accountId' is not present");
    }

    /**
     * The email address for the account.
     * 
     */
    @PolicyResourceProperty(name="email", flag="unknown_email")
    private String value_email;
    private boolean unknown_email;
    public String email() {
        if (!unknown_email) return value_email;
        throw new UndeferrableValueException("Value 'MemberArgs.email' is not present");
    }

    /**
     * Specifies whether to send an email notification to the root user of each account that the invitation will be sent to. This notification is in addition to an alert that the root user receives in AWS Personal Health Dashboard. To send an email notification to the root user of each account, set this value to `true`.
     * 
     */
    @PolicyResourceProperty(name="invitationDisableEmailNotification", flag="unknown_invitationDisableEmailNotification")
    private Boolean value_invitationDisableEmailNotification;
    private boolean unknown_invitationDisableEmailNotification;
    public Boolean invitationDisableEmailNotification() {
        if (!unknown_invitationDisableEmailNotification) return value_invitationDisableEmailNotification;
        throw new UndeferrableValueException("Value 'MemberArgs.invitationDisableEmailNotification' is not present");
    }

    /**
     * A custom message to include in the invitation. Amazon Macie adds this message to the standard content that it sends for an invitation.
     * 
     */
    @PolicyResourceProperty(name="invitationMessage", flag="unknown_invitationMessage")
    private String value_invitationMessage;
    private boolean unknown_invitationMessage;
    public String invitationMessage() {
        if (!unknown_invitationMessage) return value_invitationMessage;
        throw new UndeferrableValueException("Value 'MemberArgs.invitationMessage' is not present");
    }

    /**
     * Send an invitation to a member
     * 
     */
    @PolicyResourceProperty(name="invite", flag="unknown_invite")
    private Boolean value_invite;
    private boolean unknown_invite;
    public Boolean invite() {
        if (!unknown_invite) return value_invite;
        throw new UndeferrableValueException("Value 'MemberArgs.invite' is not present");
    }

    /**
     * Specifies the status for the account. To enable Amazon Macie and start all Macie activities for the account, set this value to `ENABLED`. Valid values are `ENABLED` or `PAUSED`.
     * 
     */
    @PolicyResourceProperty(name="status", flag="unknown_status")
    private String value_status;
    private boolean unknown_status;
    public String status() {
        if (!unknown_status) return value_status;
        throw new UndeferrableValueException("Value 'MemberArgs.status' is not present");
    }

    /**
     * Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'MemberArgs.tags' is not present");
    }

}
