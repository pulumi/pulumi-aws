// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.codebuild;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.codebuild.inputs.ProjectArtifactsArgs;
import com.pulumi.policypacks.aws.codebuild.inputs.ProjectBuildBatchConfigArgs;
import com.pulumi.policypacks.aws.codebuild.inputs.ProjectCacheArgs;
import com.pulumi.policypacks.aws.codebuild.inputs.ProjectEnvironmentArgs;
import com.pulumi.policypacks.aws.codebuild.inputs.ProjectFileSystemLocationArgs;
import com.pulumi.policypacks.aws.codebuild.inputs.ProjectLogsConfigArgs;
import com.pulumi.policypacks.aws.codebuild.inputs.ProjectSecondaryArtifactArgs;
import com.pulumi.policypacks.aws.codebuild.inputs.ProjectSecondarySourceArgs;
import com.pulumi.policypacks.aws.codebuild.inputs.ProjectSecondarySourceVersionArgs;
import com.pulumi.policypacks.aws.codebuild.inputs.ProjectSourceArgs;
import com.pulumi.policypacks.aws.codebuild.inputs.ProjectVpcConfigArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:codebuild/project:Project")
public final class ProjectArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Configuration block. Detailed below.
     * 
     */
    private UndeferrableValue<ProjectArtifactsArgs> artifacts;

    public ProjectArtifactsArgs artifacts() {
        if (artifacts == null) return null;
        return artifacts.getValue("ProjectArgs.artifacts");
    }

    /**
     * Generates a publicly-accessible URL for the projects build badge. Available as
     * `badge_url` attribute when enabled.
     * 
     */
    private UndeferrableValue<Boolean> badgeEnabled;

    public Boolean badgeEnabled() {
        if (badgeEnabled == null) return null;
        return badgeEnabled.getValue("ProjectArgs.badgeEnabled");
    }

    /**
     * Defines the batch build options for the project.
     * 
     */
    private UndeferrableValue<ProjectBuildBatchConfigArgs> buildBatchConfig;

    public ProjectBuildBatchConfigArgs buildBatchConfig() {
        if (buildBatchConfig == null) return null;
        return buildBatchConfig.getValue("ProjectArgs.buildBatchConfig");
    }

    /**
     * Number of minutes, from 5 to 2160 (36 hours), for AWS CodeBuild to wait until timing out
     * any related build that does not get marked as completed. The default is 60 minutes. The `build_timeout` property is
     * not available on the `Lambda` compute type.
     * 
     */
    private UndeferrableValue<Integer> buildTimeout;

    public Integer buildTimeout() {
        if (buildTimeout == null) return null;
        return buildTimeout.getValue("ProjectArgs.buildTimeout");
    }

    /**
     * Configuration block. Detailed below.
     * 
     */
    private UndeferrableValue<ProjectCacheArgs> cache;

    public ProjectCacheArgs cache() {
        if (cache == null) return null;
        return cache.getValue("ProjectArgs.cache");
    }

    /**
     * Specify a maximum number of concurrent builds for the project. The value
     * specified must be greater than 0 and less than the account concurrent running builds limit.
     * 
     */
    private UndeferrableValue<Integer> concurrentBuildLimit;

    public Integer concurrentBuildLimit() {
        if (concurrentBuildLimit == null) return null;
        return concurrentBuildLimit.getValue("ProjectArgs.concurrentBuildLimit");
    }

    /**
     * Short description of the project.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("ProjectArgs.description");
    }

    /**
     * AWS Key Management Service (AWS KMS) customer master key (CMK) to be used for encrypting
     * the build project&#39;s build output artifacts.
     * 
     */
    private UndeferrableValue<String> encryptionKey;

    public String encryptionKey() {
        if (encryptionKey == null) return null;
        return encryptionKey.getValue("ProjectArgs.encryptionKey");
    }

    /**
     * Configuration block. Detailed below.
     * 
     */
    private UndeferrableValue<ProjectEnvironmentArgs> environment;

    public ProjectEnvironmentArgs environment() {
        if (environment == null) return null;
        return environment.getValue("ProjectArgs.environment");
    }

    /**
     * A set of file system locations to mount inside the build. File system locations
     * are documented below.
     * 
     */
    private UndeferrableValue<List<ProjectFileSystemLocationArgs>> fileSystemLocations;

    public List<ProjectFileSystemLocationArgs> fileSystemLocations() {
        if (fileSystemLocations == null) return null;
        return fileSystemLocations.getValue("ProjectArgs.fileSystemLocations");
    }

    /**
     * Configuration block. Detailed below.
     * 
     */
    private UndeferrableValue<ProjectLogsConfigArgs> logsConfig;

    public ProjectLogsConfigArgs logsConfig() {
        if (logsConfig == null) return null;
        return logsConfig.getValue("ProjectArgs.logsConfig");
    }

    /**
     * Project&#39;s name.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("ProjectArgs.name");
    }

    /**
     * Specifies the visibility of the project&#39;s builds. Possible values are: `PUBLIC_READ`
     * and `PRIVATE`. Default value is `PRIVATE`.
     * 
     */
    private UndeferrableValue<String> projectVisibility;

    public String projectVisibility() {
        if (projectVisibility == null) return null;
        return projectVisibility.getValue("ProjectArgs.projectVisibility");
    }

    /**
     * Number of minutes, from 5 to 480 (8 hours), a build is allowed to be queued before it
     * times out. The default is 8 hours. The `queued_timeout` property is not available on the `Lambda` compute type.
     * 
     */
    private UndeferrableValue<Integer> queuedTimeout;

    public Integer queuedTimeout() {
        if (queuedTimeout == null) return null;
        return queuedTimeout.getValue("ProjectArgs.queuedTimeout");
    }

    /**
     * The ARN of the IAM role that enables CodeBuild to access the CloudWatch Logs and
     * Amazon S3 artifacts for the project&#39;s builds in order to display them publicly. Only applicable if
     * `project_visibility` is `PUBLIC_READ`.
     * 
     */
    private UndeferrableValue<String> resourceAccessRole;

    public String resourceAccessRole() {
        if (resourceAccessRole == null) return null;
        return resourceAccessRole.getValue("ProjectArgs.resourceAccessRole");
    }

    /**
     * Configuration block. Detailed below.
     * 
     */
    private UndeferrableValue<List<ProjectSecondaryArtifactArgs>> secondaryArtifacts;

    public List<ProjectSecondaryArtifactArgs> secondaryArtifacts() {
        if (secondaryArtifacts == null) return null;
        return secondaryArtifacts.getValue("ProjectArgs.secondaryArtifacts");
    }

    /**
     * Configuration block. Detailed below.
     * 
     */
    private UndeferrableValue<List<ProjectSecondarySourceVersionArgs>> secondarySourceVersions;

    public List<ProjectSecondarySourceVersionArgs> secondarySourceVersions() {
        if (secondarySourceVersions == null) return null;
        return secondarySourceVersions.getValue("ProjectArgs.secondarySourceVersions");
    }

    /**
     * Configuration block. Detailed below.
     * 
     */
    private UndeferrableValue<List<ProjectSecondarySourceArgs>> secondarySources;

    public List<ProjectSecondarySourceArgs> secondarySources() {
        if (secondarySources == null) return null;
        return secondarySources.getValue("ProjectArgs.secondarySources");
    }

    /**
     * Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that
     * enables AWS CodeBuild to interact with dependent AWS services on behalf of the AWS account.
     * 
     */
    private UndeferrableValue<String> serviceRole;

    public String serviceRole() {
        if (serviceRole == null) return null;
        return serviceRole.getValue("ProjectArgs.serviceRole");
    }

    /**
     * Configuration block. Detailed below.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<ProjectSourceArgs> source;

    public ProjectSourceArgs source() {
        if (source == null) return null;
        return source.getValue("ProjectArgs.source");
    }

    /**
     * Version of the build input to be built for this project. If not specified, the latest
     * version is used.
     * 
     */
    private UndeferrableValue<String> sourceVersion;

    public String sourceVersion() {
        if (sourceVersion == null) return null;
        return sourceVersion.getValue("ProjectArgs.sourceVersion");
    }

    /**
     * Map of tags to assign to the resource. If configured with a provider
     * `default_tags` configuration block
     * present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("ProjectArgs.tags");
    }

    /**
     * Configuration block. Detailed below.
     * 
     */
    private UndeferrableValue<ProjectVpcConfigArgs> vpcConfig;

    public ProjectVpcConfigArgs vpcConfig() {
        if (vpcConfig == null) return null;
        return vpcConfig.getValue("ProjectArgs.vpcConfig");
    }

}
