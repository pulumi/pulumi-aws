// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.codebuild;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.codebuild.inputs.ProjectArtifactsArgs;
import com.pulumi.policypacks.aws.codebuild.inputs.ProjectBuildBatchConfigArgs;
import com.pulumi.policypacks.aws.codebuild.inputs.ProjectCacheArgs;
import com.pulumi.policypacks.aws.codebuild.inputs.ProjectEnvironmentArgs;
import com.pulumi.policypacks.aws.codebuild.inputs.ProjectFileSystemLocationArgs;
import com.pulumi.policypacks.aws.codebuild.inputs.ProjectLogsConfigArgs;
import com.pulumi.policypacks.aws.codebuild.inputs.ProjectSecondaryArtifactArgs;
import com.pulumi.policypacks.aws.codebuild.inputs.ProjectSecondarySourceArgs;
import com.pulumi.policypacks.aws.codebuild.inputs.ProjectSecondarySourceVersionArgs;
import com.pulumi.policypacks.aws.codebuild.inputs.ProjectSourceArgs;
import com.pulumi.policypacks.aws.codebuild.inputs.ProjectVpcConfigArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:codebuild/project:Project")
public final class ProjectArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Configuration block. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="artifacts", flag="unknown_artifacts")
    private ProjectArtifactsArgs value_artifacts;
    private boolean unknown_artifacts;
    public ProjectArtifactsArgs artifacts() {
        if (!unknown_artifacts) return value_artifacts;
        throw new UndeferrableValueException("Value 'ProjectArgs.artifacts' is not present");
    }

    /**
     * Generates a publicly-accessible URL for the projects build badge. Available as
     * `badge_url` attribute when enabled.
     * 
     */
    @PolicyResourceProperty(name="badgeEnabled", flag="unknown_badgeEnabled")
    private Boolean value_badgeEnabled;
    private boolean unknown_badgeEnabled;
    public Boolean badgeEnabled() {
        if (!unknown_badgeEnabled) return value_badgeEnabled;
        throw new UndeferrableValueException("Value 'ProjectArgs.badgeEnabled' is not present");
    }

    /**
     * Defines the batch build options for the project.
     * 
     */
    @PolicyResourceProperty(name="buildBatchConfig", flag="unknown_buildBatchConfig")
    private ProjectBuildBatchConfigArgs value_buildBatchConfig;
    private boolean unknown_buildBatchConfig;
    public ProjectBuildBatchConfigArgs buildBatchConfig() {
        if (!unknown_buildBatchConfig) return value_buildBatchConfig;
        throw new UndeferrableValueException("Value 'ProjectArgs.buildBatchConfig' is not present");
    }

    /**
     * Number of minutes, from 5 to 2160 (36 hours), for AWS CodeBuild to wait until timing out
     * any related build that does not get marked as completed. The default is 60 minutes. The `build_timeout` property is
     * not available on the `Lambda` compute type.
     * 
     */
    @PolicyResourceProperty(name="buildTimeout", flag="unknown_buildTimeout")
    private Integer value_buildTimeout;
    private boolean unknown_buildTimeout;
    public Integer buildTimeout() {
        if (!unknown_buildTimeout) return value_buildTimeout;
        throw new UndeferrableValueException("Value 'ProjectArgs.buildTimeout' is not present");
    }

    /**
     * Configuration block. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="cache", flag="unknown_cache")
    private ProjectCacheArgs value_cache;
    private boolean unknown_cache;
    public ProjectCacheArgs cache() {
        if (!unknown_cache) return value_cache;
        throw new UndeferrableValueException("Value 'ProjectArgs.cache' is not present");
    }

    /**
     * Specify a maximum number of concurrent builds for the project. The value
     * specified must be greater than 0 and less than the account concurrent running builds limit.
     * 
     */
    @PolicyResourceProperty(name="concurrentBuildLimit", flag="unknown_concurrentBuildLimit")
    private Integer value_concurrentBuildLimit;
    private boolean unknown_concurrentBuildLimit;
    public Integer concurrentBuildLimit() {
        if (!unknown_concurrentBuildLimit) return value_concurrentBuildLimit;
        throw new UndeferrableValueException("Value 'ProjectArgs.concurrentBuildLimit' is not present");
    }

    /**
     * Short description of the project.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private String value_description;
    private boolean unknown_description;
    public String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'ProjectArgs.description' is not present");
    }

    /**
     * AWS Key Management Service (AWS KMS) customer master key (CMK) to be used for encrypting
     * the build project&#39;s build output artifacts.
     * 
     */
    @PolicyResourceProperty(name="encryptionKey", flag="unknown_encryptionKey")
    private String value_encryptionKey;
    private boolean unknown_encryptionKey;
    public String encryptionKey() {
        if (!unknown_encryptionKey) return value_encryptionKey;
        throw new UndeferrableValueException("Value 'ProjectArgs.encryptionKey' is not present");
    }

    /**
     * Configuration block. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="environment", flag="unknown_environment")
    private ProjectEnvironmentArgs value_environment;
    private boolean unknown_environment;
    public ProjectEnvironmentArgs environment() {
        if (!unknown_environment) return value_environment;
        throw new UndeferrableValueException("Value 'ProjectArgs.environment' is not present");
    }

    /**
     * A set of file system locations to mount inside the build. File system locations
     * are documented below.
     * 
     */
    @PolicyResourceProperty(name="fileSystemLocations", flag="unknown_fileSystemLocations")
    private List<ProjectFileSystemLocationArgs> value_fileSystemLocations;
    private boolean unknown_fileSystemLocations;
    public List<ProjectFileSystemLocationArgs> fileSystemLocations() {
        if (!unknown_fileSystemLocations) return value_fileSystemLocations;
        throw new UndeferrableValueException("Value 'ProjectArgs.fileSystemLocations' is not present");
    }

    /**
     * Configuration block. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="logsConfig", flag="unknown_logsConfig")
    private ProjectLogsConfigArgs value_logsConfig;
    private boolean unknown_logsConfig;
    public ProjectLogsConfigArgs logsConfig() {
        if (!unknown_logsConfig) return value_logsConfig;
        throw new UndeferrableValueException("Value 'ProjectArgs.logsConfig' is not present");
    }

    /**
     * Project&#39;s name.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'ProjectArgs.name' is not present");
    }

    /**
     * Specifies the visibility of the project&#39;s builds. Possible values are: `PUBLIC_READ`
     * and `PRIVATE`. Default value is `PRIVATE`.
     * 
     */
    @PolicyResourceProperty(name="projectVisibility", flag="unknown_projectVisibility")
    private String value_projectVisibility;
    private boolean unknown_projectVisibility;
    public String projectVisibility() {
        if (!unknown_projectVisibility) return value_projectVisibility;
        throw new UndeferrableValueException("Value 'ProjectArgs.projectVisibility' is not present");
    }

    /**
     * Number of minutes, from 5 to 480 (8 hours), a build is allowed to be queued before it
     * times out. The default is 8 hours. The `queued_timeout` property is not available on the `Lambda` compute type.
     * 
     */
    @PolicyResourceProperty(name="queuedTimeout", flag="unknown_queuedTimeout")
    private Integer value_queuedTimeout;
    private boolean unknown_queuedTimeout;
    public Integer queuedTimeout() {
        if (!unknown_queuedTimeout) return value_queuedTimeout;
        throw new UndeferrableValueException("Value 'ProjectArgs.queuedTimeout' is not present");
    }

    /**
     * The ARN of the IAM role that enables CodeBuild to access the CloudWatch Logs and
     * Amazon S3 artifacts for the project&#39;s builds in order to display them publicly. Only applicable if
     * `project_visibility` is `PUBLIC_READ`.
     * 
     */
    @PolicyResourceProperty(name="resourceAccessRole", flag="unknown_resourceAccessRole")
    private String value_resourceAccessRole;
    private boolean unknown_resourceAccessRole;
    public String resourceAccessRole() {
        if (!unknown_resourceAccessRole) return value_resourceAccessRole;
        throw new UndeferrableValueException("Value 'ProjectArgs.resourceAccessRole' is not present");
    }

    /**
     * Configuration block. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="secondaryArtifacts", flag="unknown_secondaryArtifacts")
    private List<ProjectSecondaryArtifactArgs> value_secondaryArtifacts;
    private boolean unknown_secondaryArtifacts;
    public List<ProjectSecondaryArtifactArgs> secondaryArtifacts() {
        if (!unknown_secondaryArtifacts) return value_secondaryArtifacts;
        throw new UndeferrableValueException("Value 'ProjectArgs.secondaryArtifacts' is not present");
    }

    /**
     * Configuration block. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="secondarySourceVersions", flag="unknown_secondarySourceVersions")
    private List<ProjectSecondarySourceVersionArgs> value_secondarySourceVersions;
    private boolean unknown_secondarySourceVersions;
    public List<ProjectSecondarySourceVersionArgs> secondarySourceVersions() {
        if (!unknown_secondarySourceVersions) return value_secondarySourceVersions;
        throw new UndeferrableValueException("Value 'ProjectArgs.secondarySourceVersions' is not present");
    }

    /**
     * Configuration block. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="secondarySources", flag="unknown_secondarySources")
    private List<ProjectSecondarySourceArgs> value_secondarySources;
    private boolean unknown_secondarySources;
    public List<ProjectSecondarySourceArgs> secondarySources() {
        if (!unknown_secondarySources) return value_secondarySources;
        throw new UndeferrableValueException("Value 'ProjectArgs.secondarySources' is not present");
    }

    /**
     * Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that
     * enables AWS CodeBuild to interact with dependent AWS services on behalf of the AWS account.
     * 
     */
    @PolicyResourceProperty(name="serviceRole", flag="unknown_serviceRole")
    private String value_serviceRole;
    private boolean unknown_serviceRole;
    public String serviceRole() {
        if (!unknown_serviceRole) return value_serviceRole;
        throw new UndeferrableValueException("Value 'ProjectArgs.serviceRole' is not present");
    }

    /**
     * Configuration block. Detailed below.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="source", flag="unknown_source")
    private ProjectSourceArgs value_source;
    private boolean unknown_source;
    public ProjectSourceArgs source() {
        if (!unknown_source) return value_source;
        throw new UndeferrableValueException("Value 'ProjectArgs.source' is not present");
    }

    /**
     * Version of the build input to be built for this project. If not specified, the latest
     * version is used.
     * 
     */
    @PolicyResourceProperty(name="sourceVersion", flag="unknown_sourceVersion")
    private String value_sourceVersion;
    private boolean unknown_sourceVersion;
    public String sourceVersion() {
        if (!unknown_sourceVersion) return value_sourceVersion;
        throw new UndeferrableValueException("Value 'ProjectArgs.sourceVersion' is not present");
    }

    /**
     * Map of tags to assign to the resource. If configured with a provider
     * `default_tags` configuration block
     * present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'ProjectArgs.tags' is not present");
    }

    /**
     * Configuration block. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="vpcConfig", flag="unknown_vpcConfig")
    private ProjectVpcConfigArgs value_vpcConfig;
    private boolean unknown_vpcConfig;
    public ProjectVpcConfigArgs vpcConfig() {
        if (!unknown_vpcConfig) return value_vpcConfig;
        throw new UndeferrableValueException("Value 'ProjectArgs.vpcConfig' is not present");
    }

}
