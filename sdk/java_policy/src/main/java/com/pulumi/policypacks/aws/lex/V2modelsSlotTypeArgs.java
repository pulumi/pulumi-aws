// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.lex;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.lex.inputs.V2modelsSlotTypeCompositeSlotTypeSettingArgs;
import com.pulumi.policypacks.aws.lex.inputs.V2modelsSlotTypeExternalSourceSettingArgs;
import com.pulumi.policypacks.aws.lex.inputs.V2modelsSlotTypeSlotTypeValuesArgs;
import com.pulumi.policypacks.aws.lex.inputs.V2modelsSlotTypeTimeoutsArgs;
import com.pulumi.policypacks.aws.lex.inputs.V2modelsSlotTypeValueSelectionSettingArgs;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:lex/v2modelsSlotType:V2modelsSlotType")
public final class V2modelsSlotTypeArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Identifier of the bot associated with this slot type.
     * 
     */
    @PolicyResourceProperty(name="botId", flag="unknown_botId")
    private String value_botId;
    private boolean unknown_botId;
    public String botId() {
        if (!unknown_botId) return value_botId;
        throw new UndeferrableValueException("Value 'V2modelsSlotTypeArgs.botId' is not present");
    }

    /**
     * Version of the bot associated with this slot type.
     * 
     */
    @PolicyResourceProperty(name="botVersion", flag="unknown_botVersion")
    private String value_botVersion;
    private boolean unknown_botVersion;
    public String botVersion() {
        if (!unknown_botVersion) return value_botVersion;
        throw new UndeferrableValueException("Value 'V2modelsSlotTypeArgs.botVersion' is not present");
    }

    /**
     * Specifications for a composite slot type.
     * See `composite_slot_type_setting` argument reference below.
     * 
     */
    @PolicyResourceProperty(name="compositeSlotTypeSetting", flag="unknown_compositeSlotTypeSetting")
    private V2modelsSlotTypeCompositeSlotTypeSettingArgs value_compositeSlotTypeSetting;
    private boolean unknown_compositeSlotTypeSetting;
    public V2modelsSlotTypeCompositeSlotTypeSettingArgs compositeSlotTypeSetting() {
        if (!unknown_compositeSlotTypeSetting) return value_compositeSlotTypeSetting;
        throw new UndeferrableValueException("Value 'V2modelsSlotTypeArgs.compositeSlotTypeSetting' is not present");
    }

    /**
     * Description of the slot type.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private String value_description;
    private boolean unknown_description;
    public String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'V2modelsSlotTypeArgs.description' is not present");
    }

    /**
     * Type of external information used to create the slot type.
     * See `external_source_setting` argument reference below.
     * 
     */
    @PolicyResourceProperty(name="externalSourceSetting", flag="unknown_externalSourceSetting")
    private V2modelsSlotTypeExternalSourceSettingArgs value_externalSourceSetting;
    private boolean unknown_externalSourceSetting;
    public V2modelsSlotTypeExternalSourceSettingArgs externalSourceSetting() {
        if (!unknown_externalSourceSetting) return value_externalSourceSetting;
        throw new UndeferrableValueException("Value 'V2modelsSlotTypeArgs.externalSourceSetting' is not present");
    }

    /**
     * Identifier of the language and locale where this slot type is used.
     * All of the bots, slot types, and slots used by the intent must have the same locale.
     * 
     */
    @PolicyResourceProperty(name="localeId", flag="unknown_localeId")
    private String value_localeId;
    private boolean unknown_localeId;
    public String localeId() {
        if (!unknown_localeId) return value_localeId;
        throw new UndeferrableValueException("Value 'V2modelsSlotTypeArgs.localeId' is not present");
    }

    /**
     * Name of the slot type.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'V2modelsSlotTypeArgs.name' is not present");
    }

    /**
     * Built-in slot type used as a parent of this slot type.
     * When you define a parent slot type, the new slot type has the configuration of the parent slot type.
     * Only `AMAZON.AlphaNumeric` is supported.
     * 
     */
    @PolicyResourceProperty(name="parentSlotTypeSignature", flag="unknown_parentSlotTypeSignature")
    private String value_parentSlotTypeSignature;
    private boolean unknown_parentSlotTypeSignature;
    public String parentSlotTypeSignature() {
        if (!unknown_parentSlotTypeSignature) return value_parentSlotTypeSignature;
        throw new UndeferrableValueException("Value 'V2modelsSlotTypeArgs.parentSlotTypeSignature' is not present");
    }

    /**
     * List of SlotTypeValue objects that defines the values that the slot type can take.
     * Each value can have a list of synonyms, additional values that help train the machine learning model about the values that it resolves for a slot.
     * See `slot_type_values` argument reference below.
     * 
     */
    @PolicyResourceProperty(name="slotTypeValues", flag="unknown_slotTypeValues")
    private V2modelsSlotTypeSlotTypeValuesArgs value_slotTypeValues;
    private boolean unknown_slotTypeValues;
    public V2modelsSlotTypeSlotTypeValuesArgs slotTypeValues() {
        if (!unknown_slotTypeValues) return value_slotTypeValues;
        throw new UndeferrableValueException("Value 'V2modelsSlotTypeArgs.slotTypeValues' is not present");
    }

    @PolicyResourceProperty(name="timeouts", flag="unknown_timeouts")
    private V2modelsSlotTypeTimeoutsArgs value_timeouts;
    private boolean unknown_timeouts;
    public V2modelsSlotTypeTimeoutsArgs timeouts() {
        if (!unknown_timeouts) return value_timeouts;
        throw new UndeferrableValueException("Value 'V2modelsSlotTypeArgs.timeouts' is not present");
    }

    /**
     * Determines the strategy that Amazon Lex uses to select a value from the list of possible values.
     * See `value_selection_setting` argument reference below.
     * 
     */
    @PolicyResourceProperty(name="valueSelectionSetting", flag="unknown_valueSelectionSetting")
    private V2modelsSlotTypeValueSelectionSettingArgs value_valueSelectionSetting;
    private boolean unknown_valueSelectionSetting;
    public V2modelsSlotTypeValueSelectionSettingArgs valueSelectionSetting() {
        if (!unknown_valueSelectionSetting) return value_valueSelectionSetting;
        throw new UndeferrableValueException("Value 'V2modelsSlotTypeArgs.valueSelectionSetting' is not present");
    }

}
