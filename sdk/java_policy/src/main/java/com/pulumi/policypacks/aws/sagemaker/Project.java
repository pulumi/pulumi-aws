// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.sagemaker;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.sagemaker.outputs.ProjectServiceCatalogProvisioningDetails;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:sagemaker/project:Project")
public final class Project extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The Amazon Resource Name (ARN) assigned by AWS to this Project.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'Project.arn' is not present");
    }

    /**
     * A description for the project.
     * 
     */
    @PolicyResourceProperty(name="projectDescription", flag="unknown_projectDescription")
    private @Nullable String value_projectDescription;
    private boolean unknown_projectDescription;
    public @Nullable String projectDescription() {
        if (!unknown_projectDescription) return value_projectDescription;
        throw new UndeferrableValueException("Value 'Project.projectDescription' is not present");
    }

    /**
     * The ID of the project.
     * 
     */
    @PolicyResourceProperty(name="projectId", flag="unknown_projectId")
    private String value_projectId;
    private boolean unknown_projectId;
    public String projectId() {
        if (!unknown_projectId) return value_projectId;
        throw new UndeferrableValueException("Value 'Project.projectId' is not present");
    }

    /**
     * The name of the Project.
     * 
     */
    @PolicyResourceProperty(name="projectName", flag="unknown_projectName")
    private String value_projectName;
    private boolean unknown_projectName;
    public String projectName() {
        if (!unknown_projectName) return value_projectName;
        throw new UndeferrableValueException("Value 'Project.projectName' is not present");
    }

    /**
     * The product ID and provisioning artifact ID to provision a service catalog. See Service Catalog Provisioning Details below.
     * 
     */
    @PolicyResourceProperty(name="serviceCatalogProvisioningDetails", flag="unknown_serviceCatalogProvisioningDetails")
    private ProjectServiceCatalogProvisioningDetails value_serviceCatalogProvisioningDetails;
    private boolean unknown_serviceCatalogProvisioningDetails;
    public ProjectServiceCatalogProvisioningDetails serviceCatalogProvisioningDetails() {
        if (!unknown_serviceCatalogProvisioningDetails) return value_serviceCatalogProvisioningDetails;
        throw new UndeferrableValueException("Value 'Project.serviceCatalogProvisioningDetails' is not present");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'Project.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'Project.tagsAll' is not present");
    }

}
