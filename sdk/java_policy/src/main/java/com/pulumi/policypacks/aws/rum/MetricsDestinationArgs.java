// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.rum;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:rum/metricsDestination:MetricsDestination")
public final class MetricsDestinationArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The name of the CloudWatch RUM app monitor that will send the metrics.
     * 
     */
    @PolicyResourceProperty(name="appMonitorName", flag="unknown_appMonitorName")
    private String value_appMonitorName;
    private boolean unknown_appMonitorName;
    public String appMonitorName() {
        if (!unknown_appMonitorName) return value_appMonitorName;
        throw new UndeferrableValueException("Value 'MetricsDestinationArgs.appMonitorName' is not present");
    }

    /**
     * Defines the destination to send the metrics to. Valid values are `CloudWatch` and `Evidently`. If you specify `Evidently`, you must also specify the ARN of the CloudWatchEvidently experiment that is to be the destination and an IAM role that has permission to write to the experiment.
     * 
     */
    @PolicyResourceProperty(name="destination", flag="unknown_destination")
    private String value_destination;
    private boolean unknown_destination;
    public String destination() {
        if (!unknown_destination) return value_destination;
        throw new UndeferrableValueException("Value 'MetricsDestinationArgs.destination' is not present");
    }

    /**
     * Use this parameter only if Destination is Evidently. This parameter specifies the ARN of the Evidently experiment that will receive the extended metrics.
     * 
     */
    @PolicyResourceProperty(name="destinationArn", flag="unknown_destinationArn")
    private String value_destinationArn;
    private boolean unknown_destinationArn;
    public String destinationArn() {
        if (!unknown_destinationArn) return value_destinationArn;
        throw new UndeferrableValueException("Value 'MetricsDestinationArgs.destinationArn' is not present");
    }

    /**
     * This parameter is required if Destination is Evidently. If Destination is CloudWatch, do not use this parameter.
     * 
     */
    @PolicyResourceProperty(name="iamRoleArn", flag="unknown_iamRoleArn")
    private String value_iamRoleArn;
    private boolean unknown_iamRoleArn;
    public String iamRoleArn() {
        if (!unknown_iamRoleArn) return value_iamRoleArn;
        throw new UndeferrableValueException("Value 'MetricsDestinationArgs.iamRoleArn' is not present");
    }

}
