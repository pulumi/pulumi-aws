// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.quicksight.outputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class DataSetPhysicalTableMapS3SourceUploadSettings {

    /**
     * Whether the file has a header row, or the files each have a header row.
     * 
     */
    private @Nullable UndeferrableValue<Boolean> containsHeader;

    public @Nullable Boolean containsHeader() {
        if (containsHeader == null) return null;
        return containsHeader.getValue("DataSetPhysicalTableMapS3SourceUploadSettings.containsHeader");
    }

    /**
     * Delimiter between values in the file.
     * 
     */
    private @Nullable UndeferrableValue<String> delimiter;

    public @Nullable String delimiter() {
        if (delimiter == null) return null;
        return delimiter.getValue("DataSetPhysicalTableMapS3SourceUploadSettings.delimiter");
    }

    /**
     * File format. Valid values are `CSV`, `TSV`, `CLF`, `ELF`, `XLSX`, and `JSON`.
     * 
     */
    private @Nullable UndeferrableValue<String> format;

    public @Nullable String format() {
        if (format == null) return null;
        return format.getValue("DataSetPhysicalTableMapS3SourceUploadSettings.format");
    }

    /**
     * A row number to start reading data from.
     * 
     */
    private @Nullable UndeferrableValue<Integer> startFromRow;

    public @Nullable Integer startFromRow() {
        if (startFromRow == null) return null;
        return startFromRow.getValue("DataSetPhysicalTableMapS3SourceUploadSettings.startFromRow");
    }

    /**
     * Text qualifier. Valid values are `DOUBLE_QUOTE` and `SINGLE_QUOTE`.
     * 
     */
    private @Nullable UndeferrableValue<String> textQualifier;

    public @Nullable String textQualifier() {
        if (textQualifier == null) return null;
        return textQualifier.getValue("DataSetPhysicalTableMapS3SourceUploadSettings.textQualifier");
    }

}
