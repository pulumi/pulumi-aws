// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appflow;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.appflow.inputs.FlowDestinationFlowConfigArgs;
import com.pulumi.policypacks.aws.appflow.inputs.FlowMetadataCatalogConfigArgs;
import com.pulumi.policypacks.aws.appflow.inputs.FlowSourceFlowConfigArgs;
import com.pulumi.policypacks.aws.appflow.inputs.FlowTaskArgs;
import com.pulumi.policypacks.aws.appflow.inputs.FlowTriggerConfigArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:appflow/flow:Flow")
public final class FlowArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Description of the flow you want to create.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private String value_description;
    private boolean unknown_description;
    public String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'FlowArgs.description' is not present");
    }

    /**
     * A Destination Flow Config that controls how Amazon AppFlow places data in the destination connector.
     * 
     */
    @PolicyResourceProperty(name="destinationFlowConfigs", flag="unknown_destinationFlowConfigs")
    private List<FlowDestinationFlowConfigArgs> value_destinationFlowConfigs;
    private boolean unknown_destinationFlowConfigs;
    public List<FlowDestinationFlowConfigArgs> destinationFlowConfigs() {
        if (!unknown_destinationFlowConfigs) return value_destinationFlowConfigs;
        throw new UndeferrableValueException("Value 'FlowArgs.destinationFlowConfigs' is not present");
    }

    /**
     * ARN (Amazon Resource Name) of the Key Management Service (KMS) key you provide for encryption. This is required if you do not want to use the Amazon AppFlow-managed KMS key. If you don&#39;t provide anything here, Amazon AppFlow uses the Amazon AppFlow-managed KMS key.
     * 
     */
    @PolicyResourceProperty(name="kmsArn", flag="unknown_kmsArn")
    private String value_kmsArn;
    private boolean unknown_kmsArn;
    public String kmsArn() {
        if (!unknown_kmsArn) return value_kmsArn;
        throw new UndeferrableValueException("Value 'FlowArgs.kmsArn' is not present");
    }

    /**
     * A Catalog that determines the configuration that Amazon AppFlow uses when it catalogs the data thatâ€™s transferred by the associated flow. When Amazon AppFlow catalogs the data from a flow, it stores metadata in a data catalog.
     * 
     */
    @PolicyResourceProperty(name="metadataCatalogConfig", flag="unknown_metadataCatalogConfig")
    private FlowMetadataCatalogConfigArgs value_metadataCatalogConfig;
    private boolean unknown_metadataCatalogConfig;
    public FlowMetadataCatalogConfigArgs metadataCatalogConfig() {
        if (!unknown_metadataCatalogConfig) return value_metadataCatalogConfig;
        throw new UndeferrableValueException("Value 'FlowArgs.metadataCatalogConfig' is not present");
    }

    /**
     * Name of the flow.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'FlowArgs.name' is not present");
    }

    /**
     * The Source Flow Config that controls how Amazon AppFlow retrieves data from the source connector.
     * 
     */
    @PolicyResourceProperty(name="sourceFlowConfig", flag="unknown_sourceFlowConfig")
    private FlowSourceFlowConfigArgs value_sourceFlowConfig;
    private boolean unknown_sourceFlowConfig;
    public FlowSourceFlowConfigArgs sourceFlowConfig() {
        if (!unknown_sourceFlowConfig) return value_sourceFlowConfig;
        throw new UndeferrableValueException("Value 'FlowArgs.sourceFlowConfig' is not present");
    }

    /**
     * Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'FlowArgs.tags' is not present");
    }

    /**
     * A Task that Amazon AppFlow performs while transferring the data in the flow run.
     * 
     */
    @PolicyResourceProperty(name="tasks", flag="unknown_tasks")
    private List<FlowTaskArgs> value_tasks;
    private boolean unknown_tasks;
    public List<FlowTaskArgs> tasks() {
        if (!unknown_tasks) return value_tasks;
        throw new UndeferrableValueException("Value 'FlowArgs.tasks' is not present");
    }

    /**
     * A Trigger that determine how and when the flow runs.
     * 
     */
    @PolicyResourceProperty(name="triggerConfig", flag="unknown_triggerConfig")
    private FlowTriggerConfigArgs value_triggerConfig;
    private boolean unknown_triggerConfig;
    public FlowTriggerConfigArgs triggerConfig() {
        if (!unknown_triggerConfig) return value_triggerConfig;
        throw new UndeferrableValueException("Value 'FlowArgs.triggerConfig' is not present");
    }

}
