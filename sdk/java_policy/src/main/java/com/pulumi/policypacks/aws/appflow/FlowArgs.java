// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appflow;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.appflow.inputs.FlowDestinationFlowConfigArgs;
import com.pulumi.policypacks.aws.appflow.inputs.FlowMetadataCatalogConfigArgs;
import com.pulumi.policypacks.aws.appflow.inputs.FlowSourceFlowConfigArgs;
import com.pulumi.policypacks.aws.appflow.inputs.FlowTaskArgs;
import com.pulumi.policypacks.aws.appflow.inputs.FlowTriggerConfigArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:appflow/flow:Flow")
public final class FlowArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Description of the flow you want to create.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("FlowArgs.description");
    }

    /**
     * A Destination Flow Config that controls how Amazon AppFlow places data in the destination connector.
     * 
     */
    private UndeferrableValue<List<FlowDestinationFlowConfigArgs>> destinationFlowConfigs;

    public List<FlowDestinationFlowConfigArgs> destinationFlowConfigs() {
        if (destinationFlowConfigs == null) return null;
        return destinationFlowConfigs.getValue("FlowArgs.destinationFlowConfigs");
    }

    /**
     * ARN (Amazon Resource Name) of the Key Management Service (KMS) key you provide for encryption. This is required if you do not want to use the Amazon AppFlow-managed KMS key. If you don&#39;t provide anything here, Amazon AppFlow uses the Amazon AppFlow-managed KMS key.
     * 
     */
    private UndeferrableValue<String> kmsArn;

    public String kmsArn() {
        if (kmsArn == null) return null;
        return kmsArn.getValue("FlowArgs.kmsArn");
    }

    /**
     * A Catalog that determines the configuration that Amazon AppFlow uses when it catalogs the data thatâ€™s transferred by the associated flow. When Amazon AppFlow catalogs the data from a flow, it stores metadata in a data catalog.
     * 
     */
    private UndeferrableValue<FlowMetadataCatalogConfigArgs> metadataCatalogConfig;

    public FlowMetadataCatalogConfigArgs metadataCatalogConfig() {
        if (metadataCatalogConfig == null) return null;
        return metadataCatalogConfig.getValue("FlowArgs.metadataCatalogConfig");
    }

    /**
     * Name of the flow.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("FlowArgs.name");
    }

    /**
     * The Source Flow Config that controls how Amazon AppFlow retrieves data from the source connector.
     * 
     */
    private UndeferrableValue<FlowSourceFlowConfigArgs> sourceFlowConfig;

    public FlowSourceFlowConfigArgs sourceFlowConfig() {
        if (sourceFlowConfig == null) return null;
        return sourceFlowConfig.getValue("FlowArgs.sourceFlowConfig");
    }

    /**
     * Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("FlowArgs.tags");
    }

    /**
     * A Task that Amazon AppFlow performs while transferring the data in the flow run.
     * 
     */
    private UndeferrableValue<List<FlowTaskArgs>> tasks;

    public List<FlowTaskArgs> tasks() {
        if (tasks == null) return null;
        return tasks.getValue("FlowArgs.tasks");
    }

    /**
     * A Trigger that determine how and when the flow runs.
     * 
     */
    private UndeferrableValue<FlowTriggerConfigArgs> triggerConfig;

    public FlowTriggerConfigArgs triggerConfig() {
        if (triggerConfig == null) return null;
        return triggerConfig.getValue("FlowArgs.triggerConfig");
    }

}
