// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.elasticache.inputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.elasticache.inputs.ServerlessCacheCacheUsageLimitsDataStorageArgs;
import com.pulumi.policypacks.aws.elasticache.inputs.ServerlessCacheCacheUsageLimitsEcpuPerSecondArgs;
import java.util.List;
import javax.annotation.Nullable;


public final class ServerlessCacheCacheUsageLimitsArgs {

    /**
     * The maximum data storage limit in the cache, expressed in Gigabytes. See `data_storage` Block for details.
     * 
     */
    private UndeferrableValue<ServerlessCacheCacheUsageLimitsDataStorageArgs> dataStorage;

    public ServerlessCacheCacheUsageLimitsDataStorageArgs dataStorage() {
        if (dataStorage == null) return null;
        return dataStorage.getValue("ServerlessCacheCacheUsageLimitsArgs.dataStorage");
    }

    /**
     * The configuration for the number of ElastiCache Processing Units (ECPU) the cache can consume per second. See `ecpu_per_second` Block for details.
     * 
     */
    private UndeferrableValue<List<ServerlessCacheCacheUsageLimitsEcpuPerSecondArgs>> ecpuPerSeconds;

    public List<ServerlessCacheCacheUsageLimitsEcpuPerSecondArgs> ecpuPerSeconds() {
        if (ecpuPerSeconds == null) return null;
        return ecpuPerSeconds.getValue("ServerlessCacheCacheUsageLimitsArgs.ecpuPerSeconds");
    }

}
