// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.cfg;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.cfg.inputs.DeliveryChannelSnapshotDeliveryPropertiesArgs;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:cfg/deliveryChannel:DeliveryChannel")
public final class DeliveryChannelArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The name of the delivery channel. Defaults to `default`. Changing it recreates the resource.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'DeliveryChannelArgs.name' is not present");
    }

    /**
     * The name of the S3 bucket used to store the configuration history.
     * 
     */
    @PolicyResourceProperty(name="s3BucketName", flag="unknown_s3BucketName")
    private String value_s3BucketName;
    private boolean unknown_s3BucketName;
    public String s3BucketName() {
        if (!unknown_s3BucketName) return value_s3BucketName;
        throw new UndeferrableValueException("Value 'DeliveryChannelArgs.s3BucketName' is not present");
    }

    /**
     * The prefix for the specified S3 bucket.
     * 
     */
    @PolicyResourceProperty(name="s3KeyPrefix", flag="unknown_s3KeyPrefix")
    private String value_s3KeyPrefix;
    private boolean unknown_s3KeyPrefix;
    public String s3KeyPrefix() {
        if (!unknown_s3KeyPrefix) return value_s3KeyPrefix;
        throw new UndeferrableValueException("Value 'DeliveryChannelArgs.s3KeyPrefix' is not present");
    }

    /**
     * The ARN of the AWS KMS key used to encrypt objects delivered by AWS Config. Must belong to the same Region as the destination S3 bucket.
     * 
     */
    @PolicyResourceProperty(name="s3KmsKeyArn", flag="unknown_s3KmsKeyArn")
    private String value_s3KmsKeyArn;
    private boolean unknown_s3KmsKeyArn;
    public String s3KmsKeyArn() {
        if (!unknown_s3KmsKeyArn) return value_s3KmsKeyArn;
        throw new UndeferrableValueException("Value 'DeliveryChannelArgs.s3KmsKeyArn' is not present");
    }

    /**
     * Options for how AWS Config delivers configuration snapshots. See below
     * 
     */
    @PolicyResourceProperty(name="snapshotDeliveryProperties", flag="unknown_snapshotDeliveryProperties")
    private DeliveryChannelSnapshotDeliveryPropertiesArgs value_snapshotDeliveryProperties;
    private boolean unknown_snapshotDeliveryProperties;
    public DeliveryChannelSnapshotDeliveryPropertiesArgs snapshotDeliveryProperties() {
        if (!unknown_snapshotDeliveryProperties) return value_snapshotDeliveryProperties;
        throw new UndeferrableValueException("Value 'DeliveryChannelArgs.snapshotDeliveryProperties' is not present");
    }

    /**
     * The ARN of the SNS topic that AWS Config delivers notifications to.
     * 
     */
    @PolicyResourceProperty(name="snsTopicArn", flag="unknown_snsTopicArn")
    private String value_snsTopicArn;
    private boolean unknown_snsTopicArn;
    public String snsTopicArn() {
        if (!unknown_snsTopicArn) return value_snsTopicArn;
        throw new UndeferrableValueException("Value 'DeliveryChannelArgs.snsTopicArn' is not present");
    }

}
