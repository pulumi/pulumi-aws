// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.medialive;

import com.pulumi.policypacks.aws.medialive.ChannelEncoderSettingsVideoDescriptionCodecSettingsH265SettingsColorSpaceSettings;
import com.pulumi.policypacks.aws.medialive.ChannelEncoderSettingsVideoDescriptionCodecSettingsH265SettingsFilterSettings;
import com.pulumi.policypacks.aws.medialive.ChannelEncoderSettingsVideoDescriptionCodecSettingsH265SettingsTimecodeBurninSettings;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;


public final class ChannelEncoderSettingsVideoDescriptionCodecSettingsH265Settings {

    /**
     * Enables or disables adaptive quantization.
     * 
     */
    public String adaptiveQuantization;



    /**
     * Indicates that AFD values will be written into the output stream.
     * 
     */
    public String afdSignaling;



    /**
     * Whether or not EML should insert an Alternative Transfer Function SEI message.
     * 
     */
    public String alternativeTransferFunction;



    /**
     * Average bitrate in bits/second.
     * 
     */
    public Integer bitrate;



    /**
     * Size of buffer in bits.
     * 
     */
    public Integer bufSize;



    /**
     * Includes color space metadata in the output.
     * 
     */
    public String colorMetadata;



    /**
     * Define the color metadata for the output. H265 Color Space Settings for more details.
     * 
     */
    public ChannelEncoderSettingsVideoDescriptionCodecSettingsH265SettingsColorSpaceSettings colorSpaceSettings;



    /**
     * Filters to apply to an encode. See H265 Filter Settings for more details.
     * 
     */
    public ChannelEncoderSettingsVideoDescriptionCodecSettingsH265SettingsFilterSettings filterSettings;



    /**
     * Four bit AFD value to write on all frames of video in the output stream.
     * 
     */
    public String fixedAfd;



    public String flickerAq;



    /**
     * Framerate denominator.
     * 
     */
    public Integer framerateDenominator;



    /**
     * Framerate numerator.
     * 
     */
    public Integer framerateNumerator;



    /**
     * Frequency of closed GOPs.
     * 
     */
    public Integer gopClosedCadence;



    /**
     * GOP size in units of either frames of seconds per `gop_size_units`.
     * 
     */
    public Double gopSize;



    /**
     * Indicates if the `gop_size` is specified in frames or seconds.
     * 
     */
    public String gopSizeUnits;



    /**
     * H265 level.
     * 
     */
    public String level;



    /**
     * Amount of lookahead.
     * 
     */
    public String lookAheadRateControl;



    /**
     * Set the maximum bitrate in order to accommodate expected spikes in the complexity of the video.
     * 
     */
    public Integer maxBitrate;



    /**
     * Min interval.
     * 
     */
    public Integer minIInterval;



    /**
     * Set the minimum QP.
     * 
     */
    public Integer minQp;



    /**
     * Enables or disables motion vector over picture boundaries.
     * 
     */
    public String mvOverPictureBoundaries;



    /**
     * Enables or disables the motion vector temporal predictor.
     * 
     */
    public String mvTemporalPredictor;



    /**
     * Pixel Aspect Ratio denominator.
     * 
     */
    public Integer parDenominator;



    /**
     * Pixel Aspect Ratio numerator.
     * 
     */
    public Integer parNumerator;



    /**
     * H265 profile.
     * 
     */
    public String profile;



    /**
     * Controls the target quality for the video encode.
     * 
     */
    public Integer qvbrQualityLevel;



    /**
     * Rate control mode.
     * 
     */
    public String rateControlMode;



    /**
     * Sets the scan type of the output.
     * 
     */
    public String scanType;



    /**
     * Scene change detection.
     * 
     */
    public String sceneChangeDetect;



    /**
     * Number of slices per picture.
     * 
     */
    public Integer slices;



    /**
     * Set the H265 tier in the output.
     * 
     */
    public String tier;



    /**
     * Sets the height of tiles.
     * 
     */
    public Integer tileHeight;



    /**
     * Enables or disables padding of tiles.
     * 
     */
    public String tilePadding;



    /**
     * Sets the width of tiles.
     * 
     */
    public Integer tileWidth;



    /**
     * Apply a burned in timecode. See H265 Timecode Burnin Settings for more details.
     * 
     */
    public ChannelEncoderSettingsVideoDescriptionCodecSettingsH265SettingsTimecodeBurninSettings timecodeBurninSettings;



    /**
     * Determines how timecodes should be inserted into the video elementary stream.
     * 
     */
    public String timecodeInsertion;



    /**
     * Sets the size of the treeblock.
     * 
     */
    public String treeblockSize;



}
