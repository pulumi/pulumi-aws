// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.lightsail.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


public final class ContainerServiceDeploymentVersionContainer {

    /**
     * The launch command for the container. A list of string.
     * 
     */
    @PolicyResourceProperty(name="commands", flag="unknown_commands")
    private @Nullable List<String> value_commands;
    private boolean unknown_commands;
    public @Nullable List<String> commands() {
        if (!unknown_commands) return value_commands;
        throw new UndeferrableValueException("Value 'ContainerServiceDeploymentVersionContainer.commands' is not present");
    }

    /**
     * The name for the container.
     * 
     */
    @PolicyResourceProperty(name="containerName", flag="unknown_containerName")
    private String value_containerName;
    private boolean unknown_containerName;
    public String containerName() {
        if (!unknown_containerName) return value_containerName;
        throw new UndeferrableValueException("Value 'ContainerServiceDeploymentVersionContainer.containerName' is not present");
    }

    /**
     * A key-value map of the environment variables of the container.
     * 
     */
    @PolicyResourceProperty(name="environment", flag="unknown_environment")
    private @Nullable Map<String,String> value_environment;
    private boolean unknown_environment;
    public @Nullable Map<String,String> environment() {
        if (!unknown_environment) return value_environment;
        throw new UndeferrableValueException("Value 'ContainerServiceDeploymentVersionContainer.environment' is not present");
    }

    /**
     * The name of the image used for the container. Container images sourced from your Lightsail container service, that are registered and stored on your service, start with a colon (`:`). For example, `:container-service-1.mystaticwebsite.1`. Container images sourced from a public registry like Docker Hub don&#39;t start with a colon. For example, `nginx:latest` or `nginx`.
     * 
     */
    @PolicyResourceProperty(name="image", flag="unknown_image")
    private String value_image;
    private boolean unknown_image;
    public String image() {
        if (!unknown_image) return value_image;
        throw new UndeferrableValueException("Value 'ContainerServiceDeploymentVersionContainer.image' is not present");
    }

    /**
     * A key-value map of the open firewall ports of the container. Valid values: `HTTP`, `HTTPS`, `TCP`, `UDP`.
     * 
     */
    @PolicyResourceProperty(name="ports", flag="unknown_ports")
    private @Nullable Map<String,String> value_ports;
    private boolean unknown_ports;
    public @Nullable Map<String,String> ports() {
        if (!unknown_ports) return value_ports;
        throw new UndeferrableValueException("Value 'ContainerServiceDeploymentVersionContainer.ports' is not present");
    }

}
