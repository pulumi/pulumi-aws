// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2transitgateway;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ec2transitgateway/transitGateway:TransitGateway")
public final class TransitGateway extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Private Autonomous System Number (ASN) for the Amazon side of a BGP session. The range is `64512` to `65534` for 16-bit ASNs and `4200000000` to `4294967294` for 32-bit ASNs. Default value: `64512`.
     * 
     * &gt; **NOTE:** Modifying `amazon_side_asn` on a Transit Gateway with active BGP sessions is [not allowed](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyTransitGatewayOptions.html). You must first delete all Transit Gateway attachments that have BGP configured prior to modifying `amazon_side_asn`.
     * 
     */
    @PolicyResourceProperty(name="amazonSideAsn", flag="unknown_amazonSideAsn")
    private @Nullable Integer value_amazonSideAsn;
    private boolean unknown_amazonSideAsn;
    public @Nullable Integer amazonSideAsn() {
        if (!unknown_amazonSideAsn) return value_amazonSideAsn;
        throw new UndeferrableValueException("Value 'TransitGateway.amazonSideAsn' is not present");
    }

    /**
     * EC2 Transit Gateway Amazon Resource Name (ARN)
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'TransitGateway.arn' is not present");
    }

    /**
     * Identifier of the default association route table
     * 
     */
    @PolicyResourceProperty(name="associationDefaultRouteTableId", flag="unknown_associationDefaultRouteTableId")
    private String value_associationDefaultRouteTableId;
    private boolean unknown_associationDefaultRouteTableId;
    public String associationDefaultRouteTableId() {
        if (!unknown_associationDefaultRouteTableId) return value_associationDefaultRouteTableId;
        throw new UndeferrableValueException("Value 'TransitGateway.associationDefaultRouteTableId' is not present");
    }

    /**
     * Whether resource attachment requests are automatically accepted. Valid values: `disable`, `enable`. Default value: `disable`.
     * 
     */
    @PolicyResourceProperty(name="autoAcceptSharedAttachments", flag="unknown_autoAcceptSharedAttachments")
    private @Nullable String value_autoAcceptSharedAttachments;
    private boolean unknown_autoAcceptSharedAttachments;
    public @Nullable String autoAcceptSharedAttachments() {
        if (!unknown_autoAcceptSharedAttachments) return value_autoAcceptSharedAttachments;
        throw new UndeferrableValueException("Value 'TransitGateway.autoAcceptSharedAttachments' is not present");
    }

    /**
     * Whether resource attachments are automatically associated with the default association route table. Valid values: `disable`, `enable`. Default value: `enable`.
     * 
     */
    @PolicyResourceProperty(name="defaultRouteTableAssociation", flag="unknown_defaultRouteTableAssociation")
    private @Nullable String value_defaultRouteTableAssociation;
    private boolean unknown_defaultRouteTableAssociation;
    public @Nullable String defaultRouteTableAssociation() {
        if (!unknown_defaultRouteTableAssociation) return value_defaultRouteTableAssociation;
        throw new UndeferrableValueException("Value 'TransitGateway.defaultRouteTableAssociation' is not present");
    }

    /**
     * Whether resource attachments automatically propagate routes to the default propagation route table. Valid values: `disable`, `enable`. Default value: `enable`.
     * 
     */
    @PolicyResourceProperty(name="defaultRouteTablePropagation", flag="unknown_defaultRouteTablePropagation")
    private @Nullable String value_defaultRouteTablePropagation;
    private boolean unknown_defaultRouteTablePropagation;
    public @Nullable String defaultRouteTablePropagation() {
        if (!unknown_defaultRouteTablePropagation) return value_defaultRouteTablePropagation;
        throw new UndeferrableValueException("Value 'TransitGateway.defaultRouteTablePropagation' is not present");
    }

    /**
     * Description of the EC2 Transit Gateway.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private @Nullable String value_description;
    private boolean unknown_description;
    public @Nullable String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'TransitGateway.description' is not present");
    }

    /**
     * Whether DNS support is enabled. Valid values: `disable`, `enable`. Default value: `enable`.
     * 
     */
    @PolicyResourceProperty(name="dnsSupport", flag="unknown_dnsSupport")
    private @Nullable String value_dnsSupport;
    private boolean unknown_dnsSupport;
    public @Nullable String dnsSupport() {
        if (!unknown_dnsSupport) return value_dnsSupport;
        throw new UndeferrableValueException("Value 'TransitGateway.dnsSupport' is not present");
    }

    /**
     * Whether Multicast support is enabled. Required to use `ec2_transit_gateway_multicast_domain`. Valid values: `disable`, `enable`. Default value: `disable`.
     * 
     */
    @PolicyResourceProperty(name="multicastSupport", flag="unknown_multicastSupport")
    private @Nullable String value_multicastSupport;
    private boolean unknown_multicastSupport;
    public @Nullable String multicastSupport() {
        if (!unknown_multicastSupport) return value_multicastSupport;
        throw new UndeferrableValueException("Value 'TransitGateway.multicastSupport' is not present");
    }

    /**
     * Identifier of the AWS account that owns the EC2 Transit Gateway
     * 
     */
    @PolicyResourceProperty(name="ownerId", flag="unknown_ownerId")
    private String value_ownerId;
    private boolean unknown_ownerId;
    public String ownerId() {
        if (!unknown_ownerId) return value_ownerId;
        throw new UndeferrableValueException("Value 'TransitGateway.ownerId' is not present");
    }

    /**
     * Identifier of the default propagation route table
     * 
     */
    @PolicyResourceProperty(name="propagationDefaultRouteTableId", flag="unknown_propagationDefaultRouteTableId")
    private String value_propagationDefaultRouteTableId;
    private boolean unknown_propagationDefaultRouteTableId;
    public String propagationDefaultRouteTableId() {
        if (!unknown_propagationDefaultRouteTableId) return value_propagationDefaultRouteTableId;
        throw new UndeferrableValueException("Value 'TransitGateway.propagationDefaultRouteTableId' is not present");
    }

    /**
     * Whether Security Group Referencing Support is enabled. Valid values: `disable`, `enable`. Default value: `disable`.
     * 
     */
    @PolicyResourceProperty(name="securityGroupReferencingSupport", flag="unknown_securityGroupReferencingSupport")
    private @Nullable String value_securityGroupReferencingSupport;
    private boolean unknown_securityGroupReferencingSupport;
    public @Nullable String securityGroupReferencingSupport() {
        if (!unknown_securityGroupReferencingSupport) return value_securityGroupReferencingSupport;
        throw new UndeferrableValueException("Value 'TransitGateway.securityGroupReferencingSupport' is not present");
    }

    /**
     * Key-value tags for the EC2 Transit Gateway. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'TransitGateway.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'TransitGateway.tagsAll' is not present");
    }

    /**
     * One or more IPv4 or IPv6 CIDR blocks for the transit gateway. Must be a size /24 CIDR block or larger for IPv4, or a size /64 CIDR block or larger for IPv6.
     * 
     */
    @PolicyResourceProperty(name="transitGatewayCidrBlocks", flag="unknown_transitGatewayCidrBlocks")
    private @Nullable List<String> value_transitGatewayCidrBlocks;
    private boolean unknown_transitGatewayCidrBlocks;
    public @Nullable List<String> transitGatewayCidrBlocks() {
        if (!unknown_transitGatewayCidrBlocks) return value_transitGatewayCidrBlocks;
        throw new UndeferrableValueException("Value 'TransitGateway.transitGatewayCidrBlocks' is not present");
    }

    /**
     * Whether VPN Equal Cost Multipath Protocol support is enabled. Valid values: `disable`, `enable`. Default value: `enable`.
     * 
     */
    @PolicyResourceProperty(name="vpnEcmpSupport", flag="unknown_vpnEcmpSupport")
    private @Nullable String value_vpnEcmpSupport;
    private boolean unknown_vpnEcmpSupport;
    public @Nullable String vpnEcmpSupport() {
        if (!unknown_vpnEcmpSupport) return value_vpnEcmpSupport;
        throw new UndeferrableValueException("Value 'TransitGateway.vpnEcmpSupport' is not present");
    }

}
