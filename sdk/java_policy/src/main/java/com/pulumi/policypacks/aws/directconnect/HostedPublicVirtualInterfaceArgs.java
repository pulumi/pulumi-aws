// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.directconnect;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:directconnect/hostedPublicVirtualInterface:HostedPublicVirtualInterface")
public final class HostedPublicVirtualInterfaceArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The address family for the BGP peer. ` ipv4  ` or `ipv6`.
     * 
     */
    @PolicyResourceProperty(name="addressFamily", flag="unknown_addressFamily")
    private String value_addressFamily;
    private boolean unknown_addressFamily;
    public String addressFamily() {
        if (!unknown_addressFamily) return value_addressFamily;
        throw new UndeferrableValueException("Value 'HostedPublicVirtualInterfaceArgs.addressFamily' is not present");
    }

    /**
     * The IPv4 CIDR address to use to send traffic to Amazon. Required for IPv4 BGP peers.
     * 
     */
    @PolicyResourceProperty(name="amazonAddress", flag="unknown_amazonAddress")
    private String value_amazonAddress;
    private boolean unknown_amazonAddress;
    public String amazonAddress() {
        if (!unknown_amazonAddress) return value_amazonAddress;
        throw new UndeferrableValueException("Value 'HostedPublicVirtualInterfaceArgs.amazonAddress' is not present");
    }

    /**
     * The autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.
     * 
     */
    @PolicyResourceProperty(name="bgpAsn", flag="unknown_bgpAsn")
    private Integer value_bgpAsn;
    private boolean unknown_bgpAsn;
    public Integer bgpAsn() {
        if (!unknown_bgpAsn) return value_bgpAsn;
        throw new UndeferrableValueException("Value 'HostedPublicVirtualInterfaceArgs.bgpAsn' is not present");
    }

    /**
     * The authentication key for BGP configuration.
     * 
     */
    @PolicyResourceProperty(name="bgpAuthKey", flag="unknown_bgpAuthKey")
    private String value_bgpAuthKey;
    private boolean unknown_bgpAuthKey;
    public String bgpAuthKey() {
        if (!unknown_bgpAuthKey) return value_bgpAuthKey;
        throw new UndeferrableValueException("Value 'HostedPublicVirtualInterfaceArgs.bgpAuthKey' is not present");
    }

    /**
     * The ID of the Direct Connect connection (or LAG) on which to create the virtual interface.
     * 
     */
    @PolicyResourceProperty(name="connectionId", flag="unknown_connectionId")
    private String value_connectionId;
    private boolean unknown_connectionId;
    public String connectionId() {
        if (!unknown_connectionId) return value_connectionId;
        throw new UndeferrableValueException("Value 'HostedPublicVirtualInterfaceArgs.connectionId' is not present");
    }

    /**
     * The IPv4 CIDR destination address to which Amazon should send traffic. Required for IPv4 BGP peers.
     * 
     */
    @PolicyResourceProperty(name="customerAddress", flag="unknown_customerAddress")
    private String value_customerAddress;
    private boolean unknown_customerAddress;
    public String customerAddress() {
        if (!unknown_customerAddress) return value_customerAddress;
        throw new UndeferrableValueException("Value 'HostedPublicVirtualInterfaceArgs.customerAddress' is not present");
    }

    /**
     * The name for the virtual interface.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'HostedPublicVirtualInterfaceArgs.name' is not present");
    }

    /**
     * The AWS account that will own the new virtual interface.
     * 
     */
    @PolicyResourceProperty(name="ownerAccountId", flag="unknown_ownerAccountId")
    private String value_ownerAccountId;
    private boolean unknown_ownerAccountId;
    public String ownerAccountId() {
        if (!unknown_ownerAccountId) return value_ownerAccountId;
        throw new UndeferrableValueException("Value 'HostedPublicVirtualInterfaceArgs.ownerAccountId' is not present");
    }

    /**
     * A list of routes to be advertised to the AWS network in this region.
     * 
     */
    @PolicyResourceProperty(name="routeFilterPrefixes", flag="unknown_routeFilterPrefixes")
    private List<String> value_routeFilterPrefixes;
    private boolean unknown_routeFilterPrefixes;
    public List<String> routeFilterPrefixes() {
        if (!unknown_routeFilterPrefixes) return value_routeFilterPrefixes;
        throw new UndeferrableValueException("Value 'HostedPublicVirtualInterfaceArgs.routeFilterPrefixes' is not present");
    }

    /**
     * The VLAN ID.
     * 
     */
    @PolicyResourceProperty(name="vlan", flag="unknown_vlan")
    private Integer value_vlan;
    private boolean unknown_vlan;
    public Integer vlan() {
        if (!unknown_vlan) return value_vlan;
        throw new UndeferrableValueException("Value 'HostedPublicVirtualInterfaceArgs.vlan' is not present");
    }

}
