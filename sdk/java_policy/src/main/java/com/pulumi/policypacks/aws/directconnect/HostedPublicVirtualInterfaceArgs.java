// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.directconnect;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:directconnect/hostedPublicVirtualInterface:HostedPublicVirtualInterface")
public final class HostedPublicVirtualInterfaceArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The address family for the BGP peer. ` ipv4  ` or `ipv6`.
     * 
     */
    private UndeferrableValue<String> addressFamily;

    public String addressFamily() {
        if (addressFamily == null) return null;
        return addressFamily.getValue("HostedPublicVirtualInterfaceArgs.addressFamily");
    }

    /**
     * The IPv4 CIDR address to use to send traffic to Amazon. Required for IPv4 BGP peers.
     * 
     */
    private UndeferrableValue<String> amazonAddress;

    public String amazonAddress() {
        if (amazonAddress == null) return null;
        return amazonAddress.getValue("HostedPublicVirtualInterfaceArgs.amazonAddress");
    }

    /**
     * The autonomous system (AS) number for Border Gateway Protocol (BGP) configuration.
     * 
     */
    private UndeferrableValue<Integer> bgpAsn;

    public Integer bgpAsn() {
        if (bgpAsn == null) return null;
        return bgpAsn.getValue("HostedPublicVirtualInterfaceArgs.bgpAsn");
    }

    /**
     * The authentication key for BGP configuration.
     * 
     */
    private UndeferrableValue<String> bgpAuthKey;

    public String bgpAuthKey() {
        if (bgpAuthKey == null) return null;
        return bgpAuthKey.getValue("HostedPublicVirtualInterfaceArgs.bgpAuthKey");
    }

    /**
     * The ID of the Direct Connect connection (or LAG) on which to create the virtual interface.
     * 
     */
    private UndeferrableValue<String> connectionId;

    public String connectionId() {
        if (connectionId == null) return null;
        return connectionId.getValue("HostedPublicVirtualInterfaceArgs.connectionId");
    }

    /**
     * The IPv4 CIDR destination address to which Amazon should send traffic. Required for IPv4 BGP peers.
     * 
     */
    private UndeferrableValue<String> customerAddress;

    public String customerAddress() {
        if (customerAddress == null) return null;
        return customerAddress.getValue("HostedPublicVirtualInterfaceArgs.customerAddress");
    }

    /**
     * The name for the virtual interface.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("HostedPublicVirtualInterfaceArgs.name");
    }

    /**
     * The AWS account that will own the new virtual interface.
     * 
     */
    private UndeferrableValue<String> ownerAccountId;

    public String ownerAccountId() {
        if (ownerAccountId == null) return null;
        return ownerAccountId.getValue("HostedPublicVirtualInterfaceArgs.ownerAccountId");
    }

    /**
     * A list of routes to be advertised to the AWS network in this region.
     * 
     */
    private UndeferrableValue<List<String>> routeFilterPrefixes;

    public List<String> routeFilterPrefixes() {
        if (routeFilterPrefixes == null) return null;
        return routeFilterPrefixes.getValue("HostedPublicVirtualInterfaceArgs.routeFilterPrefixes");
    }

    /**
     * The VLAN ID.
     * 
     */
    private UndeferrableValue<Integer> vlan;

    public Integer vlan() {
        if (vlan == null) return null;
        return vlan.getValue("HostedPublicVirtualInterfaceArgs.vlan");
    }

}
