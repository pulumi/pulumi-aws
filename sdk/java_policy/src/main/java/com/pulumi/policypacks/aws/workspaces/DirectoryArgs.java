// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.workspaces;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.workspaces.inputs.DirectorySamlPropertiesArgs;
import com.pulumi.policypacks.aws.workspaces.inputs.DirectorySelfServicePermissionsArgs;
import com.pulumi.policypacks.aws.workspaces.inputs.DirectoryWorkspaceAccessPropertiesArgs;
import com.pulumi.policypacks.aws.workspaces.inputs.DirectoryWorkspaceCreationPropertiesArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:workspaces/directory:Directory")
public final class DirectoryArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The directory identifier for registration in WorkSpaces service.
     * 
     */
    @PolicyResourceProperty(name="directoryId", flag="unknown_directoryId")
    private String value_directoryId;
    private boolean unknown_directoryId;
    public String directoryId() {
        if (!unknown_directoryId) return value_directoryId;
        throw new UndeferrableValueException("Value 'DirectoryArgs.directoryId' is not present");
    }

    /**
     * The identifiers of the IP access control groups associated with the directory.
     * 
     */
    @PolicyResourceProperty(name="ipGroupIds", flag="unknown_ipGroupIds")
    private List<String> value_ipGroupIds;
    private boolean unknown_ipGroupIds;
    public List<String> ipGroupIds() {
        if (!unknown_ipGroupIds) return value_ipGroupIds;
        throw new UndeferrableValueException("Value 'DirectoryArgs.ipGroupIds' is not present");
    }

    /**
     * Configuration of SAML authentication integration. Defined below.
     * 
     */
    @PolicyResourceProperty(name="samlProperties", flag="unknown_samlProperties")
    private DirectorySamlPropertiesArgs value_samlProperties;
    private boolean unknown_samlProperties;
    public DirectorySamlPropertiesArgs samlProperties() {
        if (!unknown_samlProperties) return value_samlProperties;
        throw new UndeferrableValueException("Value 'DirectoryArgs.samlProperties' is not present");
    }

    /**
     * Permissions to enable or disable self-service capabilities. Defined below.
     * 
     */
    @PolicyResourceProperty(name="selfServicePermissions", flag="unknown_selfServicePermissions")
    private DirectorySelfServicePermissionsArgs value_selfServicePermissions;
    private boolean unknown_selfServicePermissions;
    public DirectorySelfServicePermissionsArgs selfServicePermissions() {
        if (!unknown_selfServicePermissions) return value_selfServicePermissions;
        throw new UndeferrableValueException("Value 'DirectoryArgs.selfServicePermissions' is not present");
    }

    /**
     * The identifiers of the subnets where the directory resides.
     * 
     */
    @PolicyResourceProperty(name="subnetIds", flag="unknown_subnetIds")
    private List<String> value_subnetIds;
    private boolean unknown_subnetIds;
    public List<String> subnetIds() {
        if (!unknown_subnetIds) return value_subnetIds;
        throw new UndeferrableValueException("Value 'DirectoryArgs.subnetIds' is not present");
    }

    /**
     * A map of tags assigned to the WorkSpaces directory. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'DirectoryArgs.tags' is not present");
    }

    /**
     * Specifies which devices and operating systems users can use to access their WorkSpaces. Defined below.
     * 
     */
    @PolicyResourceProperty(name="workspaceAccessProperties", flag="unknown_workspaceAccessProperties")
    private DirectoryWorkspaceAccessPropertiesArgs value_workspaceAccessProperties;
    private boolean unknown_workspaceAccessProperties;
    public DirectoryWorkspaceAccessPropertiesArgs workspaceAccessProperties() {
        if (!unknown_workspaceAccessProperties) return value_workspaceAccessProperties;
        throw new UndeferrableValueException("Value 'DirectoryArgs.workspaceAccessProperties' is not present");
    }

    /**
     * Default properties that are used for creating WorkSpaces. Defined below.
     * 
     */
    @PolicyResourceProperty(name="workspaceCreationProperties", flag="unknown_workspaceCreationProperties")
    private DirectoryWorkspaceCreationPropertiesArgs value_workspaceCreationProperties;
    private boolean unknown_workspaceCreationProperties;
    public DirectoryWorkspaceCreationPropertiesArgs workspaceCreationProperties() {
        if (!unknown_workspaceCreationProperties) return value_workspaceCreationProperties;
        throw new UndeferrableValueException("Value 'DirectoryArgs.workspaceCreationProperties' is not present");
    }

}
