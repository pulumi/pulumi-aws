// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.sagemaker;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.sagemaker.inputs.FeatureGroupFeatureDefinitionArgs;
import com.pulumi.policypacks.aws.sagemaker.inputs.FeatureGroupOfflineStoreConfigArgs;
import com.pulumi.policypacks.aws.sagemaker.inputs.FeatureGroupOnlineStoreConfigArgs;
import com.pulumi.policypacks.aws.sagemaker.inputs.FeatureGroupThroughputConfigArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:sagemaker/featureGroup:FeatureGroup")
public final class FeatureGroupArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * A free-form description of a Feature Group.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("FeatureGroupArgs.description");
    }

    /**
     * The name of the feature that stores the EventTime of a Record in a Feature Group.
     * 
     */
    private UndeferrableValue<String> eventTimeFeatureName;

    public String eventTimeFeatureName() {
        if (eventTimeFeatureName == null) return null;
        return eventTimeFeatureName.getValue("FeatureGroupArgs.eventTimeFeatureName");
    }

    /**
     * A list of Feature names and types. See Feature Definition Below.
     * 
     */
    private UndeferrableValue<List<FeatureGroupFeatureDefinitionArgs>> featureDefinitions;

    public List<FeatureGroupFeatureDefinitionArgs> featureDefinitions() {
        if (featureDefinitions == null) return null;
        return featureDefinitions.getValue("FeatureGroupArgs.featureDefinitions");
    }

    /**
     * The name of the Feature Group. The name must be unique within an AWS Region in an AWS account.
     * 
     */
    private UndeferrableValue<String> featureGroupName;

    public String featureGroupName() {
        if (featureGroupName == null) return null;
        return featureGroupName.getValue("FeatureGroupArgs.featureGroupName");
    }

    /**
     * The Offline Feature Store Configuration. See Offline Store Config Below.
     * 
     */
    private UndeferrableValue<FeatureGroupOfflineStoreConfigArgs> offlineStoreConfig;

    public FeatureGroupOfflineStoreConfigArgs offlineStoreConfig() {
        if (offlineStoreConfig == null) return null;
        return offlineStoreConfig.getValue("FeatureGroupArgs.offlineStoreConfig");
    }

    /**
     * The Online Feature Store Configuration. See Online Store Config Below.
     * 
     */
    private UndeferrableValue<FeatureGroupOnlineStoreConfigArgs> onlineStoreConfig;

    public FeatureGroupOnlineStoreConfigArgs onlineStoreConfig() {
        if (onlineStoreConfig == null) return null;
        return onlineStoreConfig.getValue("FeatureGroupArgs.onlineStoreConfig");
    }

    /**
     * The name of the Feature whose value uniquely identifies a Record defined in the Feature Store. Only the latest record per identifier value will be stored in the Online Store.
     * 
     */
    private UndeferrableValue<String> recordIdentifierFeatureName;

    public String recordIdentifierFeatureName() {
        if (recordIdentifierFeatureName == null) return null;
        return recordIdentifierFeatureName.getValue("FeatureGroupArgs.recordIdentifierFeatureName");
    }

    /**
     * The Amazon Resource Name (ARN) of the IAM execution role used to persist data into the Offline Store if an `offline_store_config` is provided.
     * 
     */
    private UndeferrableValue<String> roleArn;

    public String roleArn() {
        if (roleArn == null) return null;
        return roleArn.getValue("FeatureGroupArgs.roleArn");
    }

    /**
     * Map of resource tags for the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("FeatureGroupArgs.tags");
    }

    private UndeferrableValue<FeatureGroupThroughputConfigArgs> throughputConfig;

    public FeatureGroupThroughputConfigArgs throughputConfig() {
        if (throughputConfig == null) return null;
        return throughputConfig.getValue("FeatureGroupArgs.throughputConfig");
    }

}
