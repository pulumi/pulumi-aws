// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.gamelift;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.gamelift.MatchmakingConfigurationGameProperty;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;


@PolicyResourceType(type="aws:gamelift/matchmakingConfiguration:MatchmakingConfiguration")
public final class MatchmakingConfiguration extends com.pulumi.resources.PolicyResource {

    /**
     * Specifies if the match that was created with this configuration must be accepted by matched players.
     * 
     */
    public Boolean acceptanceRequired;



    /**
     * The length of time (in seconds) to wait for players to accept a proposed match, if acceptance is required.
     * 
     */
    public Integer acceptanceTimeoutSeconds;



    /**
     * The number of player slots in a match to keep open for future players.
     * 
     */
    public Integer additionalPlayerCount;



    /**
     * Matchmaking Configuration ARN.
     * 
     */
    public String arn;



    /**
     * The method used to backfill game sessions that are created with this matchmaking configuration.
     * 
     */
    public String backfillMode;



    /**
     * The time when the Matchmaking Configuration was created.
     * 
     */
    public String creationTime;



    /**
     * Information to be added to all events related to this matchmaking configuration.
     * 
     */
    public String customEventData;



    /**
     * A human-readable description of the matchmaking configuration.
     * 
     */
    public String description;



    /**
     * Indicates whether this matchmaking configuration is being used with GameLift hosting or as a standalone matchmaking solution.
     * 
     */
    public String flexMatchMode;



    /**
     * One or more custom game properties. See below.
     * 
     */
    public List<MatchmakingConfigurationGameProperty> gameProperties;



    /**
     * A set of custom game session properties.
     * 
     */
    public String gameSessionData;



    /**
     * The ARNs of the GameLift game session queue resources.
     * 
     */
    public List<String> gameSessionQueueArns;



    /**
     * Name of the matchmaking configuration
     * 
     */
    public String name;



    /**
     * An SNS topic ARN that is set up to receive matchmaking notifications.
     * 
     */
    public String notificationTarget;



    /**
     * The maximum duration, in seconds, that a matchmaking ticket can remain in process before timing out.
     * 
     */
    public Integer requestTimeoutSeconds;



    public String ruleSetArn;



    /**
     * A rule set names for the matchmaking rule set to use with this configuration.
     * 
     */
    public String ruleSetName;



    /**
     * Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



}
