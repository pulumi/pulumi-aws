// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.lakeformation;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.lakeformation.inputs.DataLakeSettingsCreateDatabaseDefaultPermissionArgs;
import com.pulumi.policypacks.aws.lakeformation.inputs.DataLakeSettingsCreateTableDefaultPermissionArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:lakeformation/dataLakeSettings:DataLakeSettings")
public final class DataLakeSettingsArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Set of ARNs of AWS Lake Formation principals (IAM users or roles).
     * 
     */
    private UndeferrableValue<List<String>> admins;

    public List<String> admins() {
        if (admins == null) return null;
        return admins.getValue("DataLakeSettingsArgs.admins");
    }

    /**
     * Whether to allow Amazon EMR clusters to access data managed by Lake Formation.
     * 
     */
    private UndeferrableValue<Boolean> allowExternalDataFiltering;

    public Boolean allowExternalDataFiltering() {
        if (allowExternalDataFiltering == null) return null;
        return allowExternalDataFiltering.getValue("DataLakeSettingsArgs.allowExternalDataFiltering");
    }

    /**
     * Whether to allow a third-party query engine to get data access credentials without session tags when a caller has full data access permissions.
     * 
     */
    private UndeferrableValue<Boolean> allowFullTableExternalDataAccess;

    public Boolean allowFullTableExternalDataAccess() {
        if (allowFullTableExternalDataAccess == null) return null;
        return allowFullTableExternalDataAccess.getValue("DataLakeSettingsArgs.allowFullTableExternalDataAccess");
    }

    /**
     * Lake Formation relies on a privileged process secured by Amazon EMR or the third party integrator to tag the user&#39;s role while assuming it.
     * 
     */
    private UndeferrableValue<List<String>> authorizedSessionTagValueLists;

    public List<String> authorizedSessionTagValueLists() {
        if (authorizedSessionTagValueLists == null) return null;
        return authorizedSessionTagValueLists.getValue("DataLakeSettingsArgs.authorizedSessionTagValueLists");
    }

    /**
     * Identifier for the Data Catalog. By default, the account ID.
     * 
     */
    private UndeferrableValue<String> catalogId;

    public String catalogId() {
        if (catalogId == null) return null;
        return catalogId.getValue("DataLakeSettingsArgs.catalogId");
    }

    /**
     * Up to three configuration blocks of principal permissions for default create database permissions. Detailed below.
     * 
     */
    private UndeferrableValue<List<DataLakeSettingsCreateDatabaseDefaultPermissionArgs>> createDatabaseDefaultPermissions;

    public List<DataLakeSettingsCreateDatabaseDefaultPermissionArgs> createDatabaseDefaultPermissions() {
        if (createDatabaseDefaultPermissions == null) return null;
        return createDatabaseDefaultPermissions.getValue("DataLakeSettingsArgs.createDatabaseDefaultPermissions");
    }

    /**
     * Up to three configuration blocks of principal permissions for default create table permissions. Detailed below.
     * 
     */
    private UndeferrableValue<List<DataLakeSettingsCreateTableDefaultPermissionArgs>> createTableDefaultPermissions;

    public List<DataLakeSettingsCreateTableDefaultPermissionArgs> createTableDefaultPermissions() {
        if (createTableDefaultPermissions == null) return null;
        return createTableDefaultPermissions.getValue("DataLakeSettingsArgs.createTableDefaultPermissions");
    }

    /**
     * A list of the account IDs of Amazon Web Services accounts with Amazon EMR clusters that are to perform data filtering.
     * 
     */
    private UndeferrableValue<List<String>> externalDataFilteringAllowLists;

    public List<String> externalDataFilteringAllowLists() {
        if (externalDataFilteringAllowLists == null) return null;
        return externalDataFilteringAllowLists.getValue("DataLakeSettingsArgs.externalDataFilteringAllowLists");
    }

    /**
     * Key-value map of additional configuration. Valid values for the `CROSS_ACCOUNT_VERSION` key are `&#34;1&#34;`, `&#34;2&#34;`, `&#34;3&#34;`, or `&#34;4&#34;`. `SET_CONTEXT` is also returned with a value of `TRUE`. In a fresh account, prior to configuring, `CROSS_ACCOUNT_VERSION` is `&#34;1&#34;`. Destroying this resource sets the `CROSS_ACCOUNT_VERSION` to `&#34;1&#34;`.
     * 
     */
    private UndeferrableValue<Map<String,String>> parameters;

    public Map<String,String> parameters() {
        if (parameters == null) return null;
        return parameters.getValue("DataLakeSettingsArgs.parameters");
    }

    /**
     * Set of ARNs of AWS Lake Formation principals (IAM users or roles) with only view access to the resources.
     * 
     */
    private UndeferrableValue<List<String>> readOnlyAdmins;

    public List<String> readOnlyAdmins() {
        if (readOnlyAdmins == null) return null;
        return readOnlyAdmins.getValue("DataLakeSettingsArgs.readOnlyAdmins");
    }

    /**
     * List of the resource-owning account IDs that the caller&#39;s account can use to share their user access details (user ARNs).
     * 
     * &gt; **NOTE:** Although optional, not including `admins`, `create_database_default_permissions`, `create_table_default_permissions`, `parameters`, and/or `trusted_resource_owners` results in the setting being cleared.
     * 
     */
    private UndeferrableValue<List<String>> trustedResourceOwners;

    public List<String> trustedResourceOwners() {
        if (trustedResourceOwners == null) return null;
        return trustedResourceOwners.getValue("DataLakeSettingsArgs.trustedResourceOwners");
    }

}
