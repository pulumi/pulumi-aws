// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.pipes;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.pipes.outputs.PipeEnrichmentParameters;
import com.pulumi.policypacks.aws.pipes.outputs.PipeLogConfiguration;
import com.pulumi.policypacks.aws.pipes.outputs.PipeSourceParameters;
import com.pulumi.policypacks.aws.pipes.outputs.PipeTargetParameters;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:pipes/pipe:Pipe")
public final class Pipe extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * ARN of this pipe.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'Pipe.arn' is not present");
    }

    /**
     * A description of the pipe. At most 512 characters.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private @Nullable String value_description;
    private boolean unknown_description;
    public @Nullable String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'Pipe.description' is not present");
    }

    /**
     * The state the pipe should be in. One of: `RUNNING`, `STOPPED`.
     * 
     */
    @PolicyResourceProperty(name="desiredState", flag="unknown_desiredState")
    private @Nullable String value_desiredState;
    private boolean unknown_desiredState;
    public @Nullable String desiredState() {
        if (!unknown_desiredState) return value_desiredState;
        throw new UndeferrableValueException("Value 'Pipe.desiredState' is not present");
    }

    /**
     * Enrichment resource of the pipe (typically an ARN). Read more about enrichment in the [User Guide](https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-pipes.html#pipes-enrichment).
     * 
     */
    @PolicyResourceProperty(name="enrichment", flag="unknown_enrichment")
    private @Nullable String value_enrichment;
    private boolean unknown_enrichment;
    public @Nullable String enrichment() {
        if (!unknown_enrichment) return value_enrichment;
        throw new UndeferrableValueException("Value 'Pipe.enrichment' is not present");
    }

    /**
     * Parameters to configure enrichment for your pipe. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="enrichmentParameters", flag="unknown_enrichmentParameters")
    private @Nullable PipeEnrichmentParameters value_enrichmentParameters;
    private boolean unknown_enrichmentParameters;
    public @Nullable PipeEnrichmentParameters enrichmentParameters() {
        if (!unknown_enrichmentParameters) return value_enrichmentParameters;
        throw new UndeferrableValueException("Value 'Pipe.enrichmentParameters' is not present");
    }

    /**
     * Identifier of the AWS KMS customer managed key for EventBridge to use, if you choose to use a customer managed key to encrypt pipe data. The identifier can be the key Amazon Resource Name (ARN), KeyId, key alias, or key alias ARN. If not set, EventBridge uses an AWS owned key to encrypt pipe data.
     * 
     */
    @PolicyResourceProperty(name="kmsKeyIdentifier", flag="unknown_kmsKeyIdentifier")
    private @Nullable String value_kmsKeyIdentifier;
    private boolean unknown_kmsKeyIdentifier;
    public @Nullable String kmsKeyIdentifier() {
        if (!unknown_kmsKeyIdentifier) return value_kmsKeyIdentifier;
        throw new UndeferrableValueException("Value 'Pipe.kmsKeyIdentifier' is not present");
    }

    /**
     * Logging configuration settings for the pipe. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="logConfiguration", flag="unknown_logConfiguration")
    private @Nullable PipeLogConfiguration value_logConfiguration;
    private boolean unknown_logConfiguration;
    public @Nullable PipeLogConfiguration logConfiguration() {
        if (!unknown_logConfiguration) return value_logConfiguration;
        throw new UndeferrableValueException("Value 'Pipe.logConfiguration' is not present");
    }

    /**
     * Name of the pipe. If omitted, the provider will assign a random, unique name. Conflicts with `name_prefix`.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'Pipe.name' is not present");
    }

    /**
     * Creates a unique name beginning with the specified prefix. Conflicts with `name`.
     * 
     */
    @PolicyResourceProperty(name="namePrefix", flag="unknown_namePrefix")
    private String value_namePrefix;
    private boolean unknown_namePrefix;
    public String namePrefix() {
        if (!unknown_namePrefix) return value_namePrefix;
        throw new UndeferrableValueException("Value 'Pipe.namePrefix' is not present");
    }

    /**
     * ARN of the role that allows the pipe to send data to the target.
     * 
     */
    @PolicyResourceProperty(name="roleArn", flag="unknown_roleArn")
    private String value_roleArn;
    private boolean unknown_roleArn;
    public String roleArn() {
        if (!unknown_roleArn) return value_roleArn;
        throw new UndeferrableValueException("Value 'Pipe.roleArn' is not present");
    }

    /**
     * Source resource of the pipe. This field typically requires an ARN (Amazon Resource Name). However, when using a self-managed Kafka cluster, you should use a different format. Instead of an ARN, use &#39;smk://&#39; followed by the bootstrap server&#39;s address.
     * 
     */
    @PolicyResourceProperty(name="source", flag="unknown_source")
    private String value_source;
    private boolean unknown_source;
    public String source() {
        if (!unknown_source) return value_source;
        throw new UndeferrableValueException("Value 'Pipe.source' is not present");
    }

    /**
     * Parameters to configure a source for the pipe. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="sourceParameters", flag="unknown_sourceParameters")
    private PipeSourceParameters value_sourceParameters;
    private boolean unknown_sourceParameters;
    public PipeSourceParameters sourceParameters() {
        if (!unknown_sourceParameters) return value_sourceParameters;
        throw new UndeferrableValueException("Value 'Pipe.sourceParameters' is not present");
    }

    /**
     * Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'Pipe.tags' is not present");
    }

    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'Pipe.tagsAll' is not present");
    }

    /**
     * Target resource of the pipe (typically an ARN).
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="target", flag="unknown_target")
    private String value_target;
    private boolean unknown_target;
    public String target() {
        if (!unknown_target) return value_target;
        throw new UndeferrableValueException("Value 'Pipe.target' is not present");
    }

    /**
     * Parameters to configure a target for your pipe. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="targetParameters", flag="unknown_targetParameters")
    private @Nullable PipeTargetParameters value_targetParameters;
    private boolean unknown_targetParameters;
    public @Nullable PipeTargetParameters targetParameters() {
        if (!unknown_targetParameters) return value_targetParameters;
        throw new UndeferrableValueException("Value 'Pipe.targetParameters' is not present");
    }

}
