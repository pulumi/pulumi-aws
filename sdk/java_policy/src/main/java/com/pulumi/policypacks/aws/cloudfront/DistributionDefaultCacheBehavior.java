// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.cloudfront;

import com.pulumi.policypacks.aws.cloudfront.DistributionDefaultCacheBehaviorForwardedValues;
import com.pulumi.policypacks.aws.cloudfront.DistributionDefaultCacheBehaviorFunctionAssociation;
import com.pulumi.policypacks.aws.cloudfront.DistributionDefaultCacheBehaviorGrpcConfig;
import com.pulumi.policypacks.aws.cloudfront.DistributionDefaultCacheBehaviorLambdaFunctionAssociation;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;


public final class DistributionDefaultCacheBehavior {

    /**
     * Controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin.
     * 
     */
    public List<String> allowedMethods;



    /**
     * Unique identifier of the cache policy that is attached to the cache behavior. If configuring the `default_cache_behavior` either `cache_policy_id` or `forwarded_values` must be set.
     * 
     */
    public String cachePolicyId;



    /**
     * Controls whether CloudFront caches the response to requests using the specified HTTP methods.
     * 
     */
    public List<String> cachedMethods;



    /**
     * Whether you want CloudFront to automatically compress content for web requests that include `Accept-Encoding: gzip` in the request header (default: `false`).
     * 
     */
    public Boolean compress;



    /**
     * Default amount of time (in seconds) that an object is in a CloudFront cache before CloudFront forwards another request in the absence of an `Cache-Control max-age` or `Expires` header. The TTL defined in Cache Policy overrides this configuration.
     * 
     */
    public Integer defaultTtl;



    /**
     * Field level encryption configuration ID.
     * 
     */
    public String fieldLevelEncryptionId;



    /**
     * The forwarded values configuration that specifies how CloudFront handles query strings, cookies and headers (maximum one).
     * 
     */
    public DistributionDefaultCacheBehaviorForwardedValues forwardedValues;



    /**
     * A config block that triggers a cloudfront function with specific actions (maximum 2).
     * 
     */
    public List<DistributionDefaultCacheBehaviorFunctionAssociation> functionAssociations;



    /**
     * A config block that sets the grpc config.
     * 
     */
    public DistributionDefaultCacheBehaviorGrpcConfig grpcConfig;



    /**
     * A config block that triggers a lambda function with specific actions (maximum 4).
     * 
     */
    public List<DistributionDefaultCacheBehaviorLambdaFunctionAssociation> lambdaFunctionAssociations;



    /**
     * Maximum amount of time (in seconds) that an object is in a CloudFront cache before CloudFront forwards another request to your origin to determine whether the object has been updated. Only effective in the presence of `Cache-Control max-age`, `Cache-Control s-maxage`, and `Expires` headers. The TTL defined in Cache Policy overrides this configuration.
     * 
     */
    public Integer maxTtl;



    /**
     * Minimum amount of time that you want objects to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated. Defaults to 0 seconds. The TTL defined in Cache Policy overrides this configuration.
     * 
     */
    public Integer minTtl;



    /**
     * Unique identifier of the origin request policy that is attached to the behavior.
     * 
     */
    public String originRequestPolicyId;



    /**
     * ARN of the real-time log configuration that is attached to this cache behavior.
     * 
     */
    public String realtimeLogConfigArn;



    /**
     * Identifier for a response headers policy.
     * 
     */
    public String responseHeadersPolicyId;



    /**
     * Indicates whether you want to distribute media files in Microsoft Smooth Streaming format using the origin that is associated with this cache behavior.
     * 
     */
    public Boolean smoothStreaming;



    /**
     * Value of ID for the origin that you want CloudFront to route requests to when a request matches the path pattern either for a cache behavior or for the default cache behavior.
     * 
     */
    public String targetOriginId;



    /**
     * List of nested attributes for active trusted key groups, if the distribution is set up to serve private content with signed URLs.
     * 
     */
    public List<String> trustedKeyGroups;



    /**
     * List of nested attributes for active trusted signers, if the distribution is set up to serve private content with signed URLs.
     * 
     */
    public List<String> trustedSigners;



    /**
     * Use this element to specify the protocol that users can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern. One of `allow-all`, `https-only`, or `redirect-to-https`.
     * 
     */
    public String viewerProtocolPolicy;



}
