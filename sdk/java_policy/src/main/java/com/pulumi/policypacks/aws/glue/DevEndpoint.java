// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.glue;

import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;


@PolicyResourceType(type="aws:glue/devEndpoint:DevEndpoint")
public final class DevEndpoint extends com.pulumi.resources.PolicyResource {

    /**
     * A map of arguments used to configure the endpoint.
     * 
     */
    public Map<String,String> arguments;



    /**
     * The ARN of the endpoint.
     * 
     */
    public String arn;



    /**
     * The AWS availability zone where this endpoint is located.
     * 
     */
    public String availabilityZone;



    /**
     * Path to one or more Java Jars in an S3 bucket that should be loaded in this endpoint.
     * 
     */
    public String extraJarsS3Path;



    /**
     * Path(s) to one or more Python libraries in an S3 bucket that should be loaded in this endpoint. Multiple values must be complete paths separated by a comma.
     * 
     */
    public String extraPythonLibsS3Path;



    /**
     * The reason for a current failure in this endpoint.
     * 
     */
    public String failureReason;



    /**
     * Specifies the versions of Python and Apache Spark to use. Defaults to AWS Glue version 0.9.
     * 
     */
    public String glueVersion;



    /**
     * The name of this endpoint. It must be unique in your account.
     * 
     */
    public String name;



    /**
     * The number of AWS Glue Data Processing Units (DPUs) to allocate to this endpoint. Conflicts with `worker_type`.
     * 
     */
    public Integer numberOfNodes;



    /**
     * The number of workers of a defined worker type that are allocated to this endpoint. This field is available only when you choose worker type G.1X or G.2X.
     * 
     */
    public Integer numberOfWorkers;



    /**
     * A private IP address to access the endpoint within a VPC, if this endpoint is created within one.
     * 
     */
    public String privateAddress;



    /**
     * The public IP address used by this endpoint. The PublicAddress field is present only when you create a non-VPC endpoint.
     * 
     */
    public String publicAddress;



    /**
     * The public key to be used by this endpoint for authentication.
     * 
     */
    public String publicKey;



    /**
     * A list of public keys to be used by this endpoint for authentication.
     * 
     */
    public List<String> publicKeys;



    /**
     * The IAM role for this endpoint.
     * 
     */
    public String roleArn;



    /**
     * The name of the Security Configuration structure to be used with this endpoint.
     * 
     */
    public String securityConfiguration;



    /**
     * Security group IDs for the security groups to be used by this endpoint.
     * 
     */
    public List<String> securityGroupIds;



    /**
     * The current status of this endpoint.
     * 
     */
    public String status;



    /**
     * The subnet ID for the new endpoint to use.
     * 
     */
    public String subnetId;



    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



    /**
     * he ID of the VPC used by this endpoint.
     * 
     */
    public String vpcId;



    /**
     * The type of predefined worker that is allocated to this endpoint. Accepts a value of Standard, G.1X, or G.2X.
     * 
     */
    public String workerType;



    /**
     * The YARN endpoint address used by this endpoint.
     * 
     */
    public String yarnEndpointAddress;



    /**
     * The Apache Zeppelin port for the remote Apache Spark interpreter.
     * 
     */
    public Integer zeppelinRemoteSparkInterpreterPort;



}
