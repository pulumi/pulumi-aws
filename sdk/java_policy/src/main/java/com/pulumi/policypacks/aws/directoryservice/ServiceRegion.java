// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.directoryservice;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.directoryservice.outputs.ServiceRegionVpcSettings;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:directoryservice/serviceRegion:ServiceRegion")
public final class ServiceRegion extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The number of domain controllers desired in the replicated directory. Minimum value of `2`.
     * 
     */
    @PolicyResourceProperty(name="desiredNumberOfDomainControllers", flag="unknown_desiredNumberOfDomainControllers")
    private Integer value_desiredNumberOfDomainControllers;
    private boolean unknown_desiredNumberOfDomainControllers;
    public Integer desiredNumberOfDomainControllers() {
        if (!unknown_desiredNumberOfDomainControllers) return value_desiredNumberOfDomainControllers;
        throw new UndeferrableValueException("Value 'ServiceRegion.desiredNumberOfDomainControllers' is not present");
    }

    /**
     * The identifier of the directory to which you want to add Region replication.
     * 
     */
    @PolicyResourceProperty(name="directoryId", flag="unknown_directoryId")
    private String value_directoryId;
    private boolean unknown_directoryId;
    public String directoryId() {
        if (!unknown_directoryId) return value_directoryId;
        throw new UndeferrableValueException("Value 'ServiceRegion.directoryId' is not present");
    }

    /**
     * The name of the Region where you want to add domain controllers for replication.
     * 
     */
    @PolicyResourceProperty(name="regionName", flag="unknown_regionName")
    private String value_regionName;
    private boolean unknown_regionName;
    public String regionName() {
        if (!unknown_regionName) return value_regionName;
        throw new UndeferrableValueException("Value 'ServiceRegion.regionName' is not present");
    }

    /**
     * Map of tags to assign to this resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'ServiceRegion.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'ServiceRegion.tagsAll' is not present");
    }

    /**
     * VPC information in the replicated Region. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="vpcSettings", flag="unknown_vpcSettings")
    private ServiceRegionVpcSettings value_vpcSettings;
    private boolean unknown_vpcSettings;
    public ServiceRegionVpcSettings vpcSettings() {
        if (!unknown_vpcSettings) return value_vpcSettings;
        throw new UndeferrableValueException("Value 'ServiceRegion.vpcSettings' is not present");
    }

}
