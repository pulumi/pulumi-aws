// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.lambda.inputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.Integer;
import javax.annotation.Nullable;


public final class EventSourceMappingScalingConfigArgs {

    /**
     * Limits the number of concurrent instances that the Amazon SQS event source can invoke. Must be greater than or equal to `2`. See [Configuring maximum concurrency for Amazon SQS event sources](https://docs.aws.amazon.com/lambda/latest/dg/with-sqs.html#events-sqs-max-concurrency). You need to raise a [Service Quota Ticket](https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html) to increase the concurrency beyond 1000.
     * 
     */
    private UndeferrableValue<Integer> maximumConcurrency;

    public Integer maximumConcurrency() {
        if (maximumConcurrency == null) return null;
        return maximumConcurrency.getValue("EventSourceMappingScalingConfigArgs.maximumConcurrency");
    }

}
