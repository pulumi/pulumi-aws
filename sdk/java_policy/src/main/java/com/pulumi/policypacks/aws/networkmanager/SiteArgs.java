// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.networkmanager;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.networkmanager.inputs.SiteLocationArgs;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:networkmanager/site:Site")
public final class SiteArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Description of the Site.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private String value_description;
    private boolean unknown_description;
    public String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'SiteArgs.description' is not present");
    }

    /**
     * The ID of the Global Network to create the site in.
     * 
     */
    @PolicyResourceProperty(name="globalNetworkId", flag="unknown_globalNetworkId")
    private String value_globalNetworkId;
    private boolean unknown_globalNetworkId;
    public String globalNetworkId() {
        if (!unknown_globalNetworkId) return value_globalNetworkId;
        throw new UndeferrableValueException("Value 'SiteArgs.globalNetworkId' is not present");
    }

    /**
     * The site location as documented below.
     * 
     */
    @PolicyResourceProperty(name="location", flag="unknown_location")
    private SiteLocationArgs value_location;
    private boolean unknown_location;
    public SiteLocationArgs location() {
        if (!unknown_location) return value_location;
        throw new UndeferrableValueException("Value 'SiteArgs.location' is not present");
    }

    /**
     * Key-value tags for the Site. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'SiteArgs.tags' is not present");
    }

}
