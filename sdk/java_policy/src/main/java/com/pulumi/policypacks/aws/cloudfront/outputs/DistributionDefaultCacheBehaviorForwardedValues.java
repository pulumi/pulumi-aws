// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.cloudfront.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.cloudfront.outputs.DistributionDefaultCacheBehaviorForwardedValuesCookies;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class DistributionDefaultCacheBehaviorForwardedValues {

    /**
     * The forwarded values cookies that specifies how CloudFront handles cookies (maximum one).
     * 
     */
    @PolicyResourceProperty(name="cookies", flag="unknown_cookies")
    private DistributionDefaultCacheBehaviorForwardedValuesCookies value_cookies;
    private boolean unknown_cookies;
    public DistributionDefaultCacheBehaviorForwardedValuesCookies cookies() {
        if (!unknown_cookies) return value_cookies;
        throw new UndeferrableValueException("Value 'DistributionDefaultCacheBehaviorForwardedValues.cookies' is not present");
    }

    /**
     * Headers, if any, that you want CloudFront to vary upon for this cache behavior. Specify `*` to include all headers.
     * 
     */
    @PolicyResourceProperty(name="headers", flag="unknown_headers")
    private @Nullable List<String> value_headers;
    private boolean unknown_headers;
    public @Nullable List<String> headers() {
        if (!unknown_headers) return value_headers;
        throw new UndeferrableValueException("Value 'DistributionDefaultCacheBehaviorForwardedValues.headers' is not present");
    }

    /**
     * Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior.
     * 
     */
    @PolicyResourceProperty(name="queryString", flag="unknown_queryString")
    private Boolean value_queryString;
    private boolean unknown_queryString;
    public Boolean queryString() {
        if (!unknown_queryString) return value_queryString;
        throw new UndeferrableValueException("Value 'DistributionDefaultCacheBehaviorForwardedValues.queryString' is not present");
    }

    /**
     * When specified, along with a value of `true` for `query_string`, all query strings are forwarded, however only the query string keys listed in this argument are cached. When omitted with a value of `true` for `query_string`, all query string keys are cached.
     * 
     */
    @PolicyResourceProperty(name="queryStringCacheKeys", flag="unknown_queryStringCacheKeys")
    private @Nullable List<String> value_queryStringCacheKeys;
    private boolean unknown_queryStringCacheKeys;
    public @Nullable List<String> queryStringCacheKeys() {
        if (!unknown_queryStringCacheKeys) return value_queryStringCacheKeys;
        throw new UndeferrableValueException("Value 'DistributionDefaultCacheBehaviorForwardedValues.queryStringCacheKeys' is not present");
    }

}
