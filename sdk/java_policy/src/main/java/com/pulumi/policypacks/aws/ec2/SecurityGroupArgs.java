// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.ec2.inputs.SecurityGroupEgressArgs;
import com.pulumi.policypacks.aws.ec2.inputs.SecurityGroupIngressArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ec2/securityGroup:SecurityGroup")
public final class SecurityGroupArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Security group description. Defaults to `Managed by Pulumi`. Cannot be `&#34;&#34;`. **NOTE**: This field maps to the AWS `GroupDescription` attribute, for which there is no Update API. If you&#39;d like to classify your security groups in a way that can be updated, use `tags`.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("SecurityGroupArgs.description");
    }

    /**
     * Configuration block for egress rules. Can be specified multiple times for each egress rule. Each egress block supports fields documented below. This argument is processed in attribute-as-blocks mode.
     * 
     */
    private UndeferrableValue<List<SecurityGroupEgressArgs>> egress;

    public List<SecurityGroupEgressArgs> egress() {
        if (egress == null) return null;
        return egress.getValue("SecurityGroupArgs.egress");
    }

    /**
     * Configuration block for ingress rules. Can be specified multiple times for each ingress rule. Each ingress block supports fields documented below. This argument is processed in attribute-as-blocks mode.
     * 
     */
    private UndeferrableValue<List<SecurityGroupIngressArgs>> ingress;

    public List<SecurityGroupIngressArgs> ingress() {
        if (ingress == null) return null;
        return ingress.getValue("SecurityGroupArgs.ingress");
    }

    /**
     * Name of the security group. If omitted, the provider will assign a random, unique name.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("SecurityGroupArgs.name");
    }

    /**
     * Creates a unique name beginning with the specified prefix. Conflicts with `name`.
     * 
     */
    private UndeferrableValue<String> namePrefix;

    public String namePrefix() {
        if (namePrefix == null) return null;
        return namePrefix.getValue("SecurityGroupArgs.namePrefix");
    }

    /**
     * Instruct the provider to revoke all of the Security Groups attached ingress and egress rules before deleting the rule itself. This is normally not needed, however certain AWS services such as Elastic Map Reduce may automatically add required rules to security groups used with the service, and those rules may contain a cyclic dependency that prevent the security groups from being destroyed without removing the dependency first. Default `false`.
     * 
     */
    private UndeferrableValue<Boolean> revokeRulesOnDelete;

    public Boolean revokeRulesOnDelete() {
        if (revokeRulesOnDelete == null) return null;
        return revokeRulesOnDelete.getValue("SecurityGroupArgs.revokeRulesOnDelete");
    }

    /**
     * Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("SecurityGroupArgs.tags");
    }

    /**
     * VPC ID. Defaults to the region&#39;s default VPC.
     * 
     */
    private UndeferrableValue<String> vpcId;

    public String vpcId() {
        if (vpcId == null) return null;
        return vpcId.getValue("SecurityGroupArgs.vpcId");
    }

}
