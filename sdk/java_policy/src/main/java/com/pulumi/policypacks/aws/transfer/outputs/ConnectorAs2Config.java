// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.transfer.outputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.String;
import javax.annotation.Nullable;


public final class ConnectorAs2Config {

    /**
     * Specifies weather AS2 file is compressed. The valud values are ZLIB and  DISABLED.
     * 
     */
    private UndeferrableValue<String> compression;

    public String compression() {
        if (compression == null) return null;
        return compression.getValue("ConnectorAs2Config.compression");
    }

    /**
     * The algorithm that is used to encrypt the file. The valid values are AES128_CBC | AES192_CBC | AES256_CBC | NONE.
     * 
     */
    private UndeferrableValue<String> encryptionAlgorithm;

    public String encryptionAlgorithm() {
        if (encryptionAlgorithm == null) return null;
        return encryptionAlgorithm.getValue("ConnectorAs2Config.encryptionAlgorithm");
    }

    /**
     * The unique identifier for the AS2 local profile.
     * 
     */
    private UndeferrableValue<String> localProfileId;

    public String localProfileId() {
        if (localProfileId == null) return null;
        return localProfileId.getValue("ConnectorAs2Config.localProfileId");
    }

    /**
     * Used for outbound requests to determine if a partner response for transfers is synchronous or asynchronous. The valid values are SYNC and NONE.
     * 
     */
    private UndeferrableValue<String> mdnResponse;

    public String mdnResponse() {
        if (mdnResponse == null) return null;
        return mdnResponse.getValue("ConnectorAs2Config.mdnResponse");
    }

    /**
     * The signing algorithm for the Mdn response. The valid values are SHA256 | SHA384 | SHA512 | SHA1 | NONE | DEFAULT.
     * 
     */
    private @Nullable UndeferrableValue<String> mdnSigningAlgorithm;

    public @Nullable String mdnSigningAlgorithm() {
        if (mdnSigningAlgorithm == null) return null;
        return mdnSigningAlgorithm.getValue("ConnectorAs2Config.mdnSigningAlgorithm");
    }

    /**
     * Used as the subject HTTP header attribute in AS2 messages that are being sent with the connector.
     * 
     */
    private @Nullable UndeferrableValue<String> messageSubject;

    public @Nullable String messageSubject() {
        if (messageSubject == null) return null;
        return messageSubject.getValue("ConnectorAs2Config.messageSubject");
    }

    /**
     * The unique identifier for the AS2 partner profile.
     * 
     */
    private UndeferrableValue<String> partnerProfileId;

    public String partnerProfileId() {
        if (partnerProfileId == null) return null;
        return partnerProfileId.getValue("ConnectorAs2Config.partnerProfileId");
    }

    /**
     * The algorithm that is used to sign AS2 messages sent with the connector. The valid values are SHA256 | SHA384 | SHA512 | SHA1 | NONE .
     * 
     */
    private UndeferrableValue<String> signingAlgorithm;

    public String signingAlgorithm() {
        if (signingAlgorithm == null) return null;
        return signingAlgorithm.getValue("ConnectorAs2Config.signingAlgorithm");
    }

}
