// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.connect.outputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.String;
import javax.annotation.Nullable;


public final class UserIdentityInfo {

    /**
     * The email address. If you are using SAML for identity management and include this parameter, an error is returned. Note that updates to the `email` is supported. From the [UpdateUserIdentityInfo API documentation](https://docs.aws.amazon.com/connect/latest/APIReference/API_UpdateUserIdentityInfo.html) it is strongly recommended to limit who has the ability to invoke `UpdateUserIdentityInfo`. Someone with that ability can change the login credentials of other users by changing their email address. This poses a security risk to your organization. They can change the email address of a user to the attacker&#39;s email address, and then reset the password through email. For more information, see [Best Practices for Security Profiles](https://docs.aws.amazon.com/connect/latest/adminguide/security-profile-best-practices.html) in the Amazon Connect Administrator Guide.
     * 
     */
    private @Nullable UndeferrableValue<String> email;

    public @Nullable String email() {
        if (email == null) return null;
        return email.getValue("UserIdentityInfo.email");
    }

    /**
     * The first name. This is required if you are using Amazon Connect or SAML for identity management. Minimum length of 1. Maximum length of 100.
     * 
     */
    private @Nullable UndeferrableValue<String> firstName;

    public @Nullable String firstName() {
        if (firstName == null) return null;
        return firstName.getValue("UserIdentityInfo.firstName");
    }

    /**
     * The last name. This is required if you are using Amazon Connect or SAML for identity management. Minimum length of 1. Maximum length of 100.
     * 
     */
    private @Nullable UndeferrableValue<String> lastName;

    public @Nullable String lastName() {
        if (lastName == null) return null;
        return lastName.getValue("UserIdentityInfo.lastName");
    }

    /**
     * The secondary email address. If present, email notifications will be sent to this email address instead of the primary one.
     * 
     */
    private @Nullable UndeferrableValue<String> secondaryEmail;

    public @Nullable String secondaryEmail() {
        if (secondaryEmail == null) return null;
        return secondaryEmail.getValue("UserIdentityInfo.secondaryEmail");
    }

}
