// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.keyspaces;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.keyspaces.outputs.TableCapacitySpecification;
import com.pulumi.policypacks.aws.keyspaces.outputs.TableClientSideTimestamps;
import com.pulumi.policypacks.aws.keyspaces.outputs.TableComment;
import com.pulumi.policypacks.aws.keyspaces.outputs.TableEncryptionSpecification;
import com.pulumi.policypacks.aws.keyspaces.outputs.TablePointInTimeRecovery;
import com.pulumi.policypacks.aws.keyspaces.outputs.TableSchemaDefinition;
import com.pulumi.policypacks.aws.keyspaces.outputs.TableTtl;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:keyspaces/table:Table")
public final class Table extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The ARN of the table.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'Table.arn' is not present");
    }

    /**
     * Specifies the read/write throughput capacity mode for the table.
     * 
     */
    @PolicyResourceProperty(name="capacitySpecification", flag="unknown_capacitySpecification")
    private TableCapacitySpecification value_capacitySpecification;
    private boolean unknown_capacitySpecification;
    public TableCapacitySpecification capacitySpecification() {
        if (!unknown_capacitySpecification) return value_capacitySpecification;
        throw new UndeferrableValueException("Value 'Table.capacitySpecification' is not present");
    }

    /**
     * Enables client-side timestamps for the table. By default, the setting is disabled.
     * 
     */
    @PolicyResourceProperty(name="clientSideTimestamps", flag="unknown_clientSideTimestamps")
    private @Nullable TableClientSideTimestamps value_clientSideTimestamps;
    private boolean unknown_clientSideTimestamps;
    public @Nullable TableClientSideTimestamps clientSideTimestamps() {
        if (!unknown_clientSideTimestamps) return value_clientSideTimestamps;
        throw new UndeferrableValueException("Value 'Table.clientSideTimestamps' is not present");
    }

    /**
     * A description of the table.
     * 
     */
    @PolicyResourceProperty(name="comment", flag="unknown_comment")
    private TableComment value_comment;
    private boolean unknown_comment;
    public TableComment comment() {
        if (!unknown_comment) return value_comment;
        throw new UndeferrableValueException("Value 'Table.comment' is not present");
    }

    /**
     * The default Time to Live setting in seconds for the table. More information can be found in the [Developer Guide](https://docs.aws.amazon.com/keyspaces/latest/devguide/TTL-how-it-works.html#ttl-howitworks_default_ttl).
     * 
     */
    @PolicyResourceProperty(name="defaultTimeToLive", flag="unknown_defaultTimeToLive")
    private @Nullable Integer value_defaultTimeToLive;
    private boolean unknown_defaultTimeToLive;
    public @Nullable Integer defaultTimeToLive() {
        if (!unknown_defaultTimeToLive) return value_defaultTimeToLive;
        throw new UndeferrableValueException("Value 'Table.defaultTimeToLive' is not present");
    }

    /**
     * Specifies how the encryption key for encryption at rest is managed for the table. More information can be found in the [Developer Guide](https://docs.aws.amazon.com/keyspaces/latest/devguide/EncryptionAtRest.html).
     * 
     */
    @PolicyResourceProperty(name="encryptionSpecification", flag="unknown_encryptionSpecification")
    private TableEncryptionSpecification value_encryptionSpecification;
    private boolean unknown_encryptionSpecification;
    public TableEncryptionSpecification encryptionSpecification() {
        if (!unknown_encryptionSpecification) return value_encryptionSpecification;
        throw new UndeferrableValueException("Value 'Table.encryptionSpecification' is not present");
    }

    /**
     * The name of the keyspace that the table is going to be created in.
     * 
     */
    @PolicyResourceProperty(name="keyspaceName", flag="unknown_keyspaceName")
    private String value_keyspaceName;
    private boolean unknown_keyspaceName;
    public String keyspaceName() {
        if (!unknown_keyspaceName) return value_keyspaceName;
        throw new UndeferrableValueException("Value 'Table.keyspaceName' is not present");
    }

    /**
     * Specifies if point-in-time recovery is enabled or disabled for the table. More information can be found in the [Developer Guide](https://docs.aws.amazon.com/keyspaces/latest/devguide/PointInTimeRecovery.html).
     * 
     */
    @PolicyResourceProperty(name="pointInTimeRecovery", flag="unknown_pointInTimeRecovery")
    private TablePointInTimeRecovery value_pointInTimeRecovery;
    private boolean unknown_pointInTimeRecovery;
    public TablePointInTimeRecovery pointInTimeRecovery() {
        if (!unknown_pointInTimeRecovery) return value_pointInTimeRecovery;
        throw new UndeferrableValueException("Value 'Table.pointInTimeRecovery' is not present");
    }

    /**
     * Describes the schema of the table.
     * 
     */
    @PolicyResourceProperty(name="schemaDefinition", flag="unknown_schemaDefinition")
    private TableSchemaDefinition value_schemaDefinition;
    private boolean unknown_schemaDefinition;
    public TableSchemaDefinition schemaDefinition() {
        if (!unknown_schemaDefinition) return value_schemaDefinition;
        throw new UndeferrableValueException("Value 'Table.schemaDefinition' is not present");
    }

    /**
     * The name of the table.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="tableName", flag="unknown_tableName")
    private String value_tableName;
    private boolean unknown_tableName;
    public String tableName() {
        if (!unknown_tableName) return value_tableName;
        throw new UndeferrableValueException("Value 'Table.tableName' is not present");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'Table.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'Table.tagsAll' is not present");
    }

    /**
     * Enables Time to Live custom settings for the table. More information can be found in the [Developer Guide](https://docs.aws.amazon.com/keyspaces/latest/devguide/TTL.html).
     * 
     */
    @PolicyResourceProperty(name="ttl", flag="unknown_ttl")
    private @Nullable TableTtl value_ttl;
    private boolean unknown_ttl;
    public @Nullable TableTtl ttl() {
        if (!unknown_ttl) return value_ttl;
        throw new UndeferrableValueException("Value 'Table.ttl' is not present");
    }

}
