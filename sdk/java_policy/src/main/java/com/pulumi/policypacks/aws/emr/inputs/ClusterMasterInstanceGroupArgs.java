// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.emr.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.emr.inputs.ClusterMasterInstanceGroupEbsConfigArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class ClusterMasterInstanceGroupArgs {

    /**
     * Bid price for each EC2 instance in the instance group, expressed in USD. By setting this attribute, the instance group is being declared as a Spot Instance, and will implicitly create a Spot request. Leave this blank to use On-Demand Instances.
     * 
     */
    @PolicyResourceProperty(name="bidPrice", flag="unknown_bidPrice")
    private String value_bidPrice;
    private boolean unknown_bidPrice;
    public String bidPrice() {
        if (!unknown_bidPrice) return value_bidPrice;
        throw new UndeferrableValueException("Value 'ClusterMasterInstanceGroupArgs.bidPrice' is not present");
    }

    /**
     * Configuration block(s) for EBS volumes attached to each instance in the instance group. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="ebsConfigs", flag="unknown_ebsConfigs")
    private List<ClusterMasterInstanceGroupEbsConfigArgs> value_ebsConfigs;
    private boolean unknown_ebsConfigs;
    public List<ClusterMasterInstanceGroupEbsConfigArgs> ebsConfigs() {
        if (!unknown_ebsConfigs) return value_ebsConfigs;
        throw new UndeferrableValueException("Value 'ClusterMasterInstanceGroupArgs.ebsConfigs' is not present");
    }

    /**
     * Master node type Instance Group ID, if using Instance Group for this node type.
     * 
     */
    @PolicyResourceProperty(name="id", flag="unknown_id")
    private String value_id;
    private boolean unknown_id;
    public String id() {
        if (!unknown_id) return value_id;
        throw new UndeferrableValueException("Value 'ClusterMasterInstanceGroupArgs.id' is not present");
    }

    /**
     * Target number of instances for the instance group. Must be 1 or 3. Defaults to 1. Launching with multiple master nodes is only supported in EMR version 5.23.0+, and requires this resource&#39;s `core_instance_group` to be configured. Public (Internet accessible) instances must be created in VPC subnets that have map public IP on launch enabled. Termination protection is automatically enabled when launched with multiple master nodes and this provider must have the `termination_protection = false` configuration applied before destroying this resource.
     * 
     */
    @PolicyResourceProperty(name="instanceCount", flag="unknown_instanceCount")
    private Integer value_instanceCount;
    private boolean unknown_instanceCount;
    public Integer instanceCount() {
        if (!unknown_instanceCount) return value_instanceCount;
        throw new UndeferrableValueException("Value 'ClusterMasterInstanceGroupArgs.instanceCount' is not present");
    }

    /**
     * EC2 instance type for all instances in the instance group.
     * 
     */
    @PolicyResourceProperty(name="instanceType", flag="unknown_instanceType")
    private String value_instanceType;
    private boolean unknown_instanceType;
    public String instanceType() {
        if (!unknown_instanceType) return value_instanceType;
        throw new UndeferrableValueException("Value 'ClusterMasterInstanceGroupArgs.instanceType' is not present");
    }

    /**
     * Friendly name given to the instance group.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'ClusterMasterInstanceGroupArgs.name' is not present");
    }

}
