// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.medialive.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.medialive.inputs.ChannelEncoderSettingsCaptionDescriptionDestinationSettingsArgs;
import java.lang.String;
import javax.annotation.Nullable;


public final class ChannelEncoderSettingsCaptionDescriptionArgs {

    /**
     * Indicates whether the caption track implements accessibility features such as written descriptions of spoken dialog, music, and sounds.
     * 
     */
    @PolicyResourceProperty(name="accessibility", flag="unknown_accessibility")
    private String value_accessibility;
    private boolean unknown_accessibility;
    public String accessibility() {
        if (!unknown_accessibility) return value_accessibility;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsCaptionDescriptionArgs.accessibility' is not present");
    }

    /**
     * Specifies which input caption selector to use as a caption source when generating output captions. This field should match a captionSelector name.
     * 
     */
    @PolicyResourceProperty(name="captionSelectorName", flag="unknown_captionSelectorName")
    private String value_captionSelectorName;
    private boolean unknown_captionSelectorName;
    public String captionSelectorName() {
        if (!unknown_captionSelectorName) return value_captionSelectorName;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsCaptionDescriptionArgs.captionSelectorName' is not present");
    }

    /**
     * Additional settings for captions destination that depend on the destination type. See Destination Settings for more details.
     * 
     */
    @PolicyResourceProperty(name="destinationSettings", flag="unknown_destinationSettings")
    private ChannelEncoderSettingsCaptionDescriptionDestinationSettingsArgs value_destinationSettings;
    private boolean unknown_destinationSettings;
    public ChannelEncoderSettingsCaptionDescriptionDestinationSettingsArgs destinationSettings() {
        if (!unknown_destinationSettings) return value_destinationSettings;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsCaptionDescriptionArgs.destinationSettings' is not present");
    }

    /**
     * ISO 639-2 three-digit code.
     * 
     */
    @PolicyResourceProperty(name="languageCode", flag="unknown_languageCode")
    private String value_languageCode;
    private boolean unknown_languageCode;
    public String languageCode() {
        if (!unknown_languageCode) return value_languageCode;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsCaptionDescriptionArgs.languageCode' is not present");
    }

    /**
     * Human readable information to indicate captions available for players (eg. English, or Spanish).
     * 
     */
    @PolicyResourceProperty(name="languageDescription", flag="unknown_languageDescription")
    private String value_languageDescription;
    private boolean unknown_languageDescription;
    public String languageDescription() {
        if (!unknown_languageDescription) return value_languageDescription;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsCaptionDescriptionArgs.languageDescription' is not present");
    }

    /**
     * Name of the caption description. Used to associate a caption description with an output. Names must be unique within an event.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsCaptionDescriptionArgs.name' is not present");
    }

}
