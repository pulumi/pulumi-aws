// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.apprunner;

import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;


@PolicyResourceType(type="aws:apprunner/autoScalingConfigurationVersion:AutoScalingConfigurationVersion")
public final class AutoScalingConfigurationVersion extends com.pulumi.resources.PolicyResource {

    /**
     * ARN of this auto scaling configuration version.
     * 
     */
    public String arn;



    /**
     * Name of the auto scaling configuration.
     * 
     */
    public String autoScalingConfigurationName;



    /**
     * The revision of this auto scaling configuration.
     * 
     */
    public Integer autoScalingConfigurationRevision;



    public Boolean hasAssociatedService;



    public Boolean isDefault;



    /**
     * Whether the auto scaling configuration has the highest `auto_scaling_configuration_revision` among all configurations that share the same `auto_scaling_configuration_name`.
     * 
     */
    public Boolean latest;



    /**
     * Maximal number of concurrent requests that you want an instance to process. When the number of concurrent requests goes over this limit, App Runner scales up your service.
     * 
     */
    public Integer maxConcurrency;



    /**
     * Maximal number of instances that App Runner provisions for your service.
     * 
     */
    public Integer maxSize;



    /**
     * Minimal number of instances that App Runner provisions for your service.
     * 
     */
    public Integer minSize;



    /**
     * Current state of the auto scaling configuration. An INACTIVE configuration revision has been deleted and can&#39;t be used. It is permanently removed some time after deletion.
     * 
     */
    public String status;



    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



}
