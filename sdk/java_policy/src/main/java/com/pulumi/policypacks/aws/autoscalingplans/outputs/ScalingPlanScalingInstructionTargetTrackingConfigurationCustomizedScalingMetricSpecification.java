// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.autoscalingplans.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


public final class ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecification {

    /**
     * Dimensions of the metric.
     * 
     */
    @PolicyResourceProperty(name="dimensions", flag="unknown_dimensions")
    private @Nullable Map<String,String> value_dimensions;
    private boolean unknown_dimensions;
    public @Nullable Map<String,String> dimensions() {
        if (!unknown_dimensions) return value_dimensions;
        throw new UndeferrableValueException("Value 'ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecification.dimensions' is not present");
    }

    /**
     * Name of the metric.
     * 
     */
    @PolicyResourceProperty(name="metricName", flag="unknown_metricName")
    private String value_metricName;
    private boolean unknown_metricName;
    public String metricName() {
        if (!unknown_metricName) return value_metricName;
        throw new UndeferrableValueException("Value 'ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecification.metricName' is not present");
    }

    /**
     * Namespace of the metric.
     * 
     */
    @PolicyResourceProperty(name="namespace", flag="unknown_namespace")
    private String value_namespace;
    private boolean unknown_namespace;
    public String namespace() {
        if (!unknown_namespace) return value_namespace;
        throw new UndeferrableValueException("Value 'ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecification.namespace' is not present");
    }

    /**
     * Statistic of the metric. Valid values: `Average`, `Maximum`, `Minimum`, `SampleCount`, `Sum`.
     * 
     */
    @PolicyResourceProperty(name="statistic", flag="unknown_statistic")
    private String value_statistic;
    private boolean unknown_statistic;
    public String statistic() {
        if (!unknown_statistic) return value_statistic;
        throw new UndeferrableValueException("Value 'ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecification.statistic' is not present");
    }

    /**
     * Unit of the metric.
     * 
     */
    @PolicyResourceProperty(name="unit", flag="unknown_unit")
    private @Nullable String value_unit;
    private boolean unknown_unit;
    public @Nullable String unit() {
        if (!unknown_unit) return value_unit;
        throw new UndeferrableValueException("Value 'ScalingPlanScalingInstructionTargetTrackingConfigurationCustomizedScalingMetricSpecification.unit' is not present");
    }

}
