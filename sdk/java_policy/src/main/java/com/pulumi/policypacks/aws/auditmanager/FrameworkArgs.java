// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.auditmanager;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.auditmanager.inputs.FrameworkControlSetArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:auditmanager/framework:Framework")
public final class FrameworkArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Compliance type that the new custom framework supports, such as `CIS` or `HIPAA`.
     * 
     */
    private UndeferrableValue<String> complianceType;

    public String complianceType() {
        if (complianceType == null) return null;
        return complianceType.getValue("FrameworkArgs.complianceType");
    }

    /**
     * Configuration block(s) for the control sets that are associated with the framework. See `control_sets` Block below for details.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<List<FrameworkControlSetArgs>> controlSets;

    public List<FrameworkControlSetArgs> controlSets() {
        if (controlSets == null) return null;
        return controlSets.getValue("FrameworkArgs.controlSets");
    }

    /**
     * Description of the framework.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("FrameworkArgs.description");
    }

    /**
     * Name of the framework.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("FrameworkArgs.name");
    }

    /**
     * A map of tags to assign to the framework. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("FrameworkArgs.tags");
    }

}
