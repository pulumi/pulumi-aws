// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.msk;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.msk.outputs.ServerlessClusterClientAuthentication;
import com.pulumi.policypacks.aws.msk.outputs.ServerlessClusterVpcConfig;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:msk/serverlessCluster:ServerlessCluster")
public final class ServerlessCluster extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The ARN of the serverless cluster.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'ServerlessCluster.arn' is not present");
    }

    /**
     * Specifies client authentication information for the serverless cluster. See below.
     * 
     */
    @PolicyResourceProperty(name="clientAuthentication", flag="unknown_clientAuthentication")
    private ServerlessClusterClientAuthentication value_clientAuthentication;
    private boolean unknown_clientAuthentication;
    public ServerlessClusterClientAuthentication clientAuthentication() {
        if (!unknown_clientAuthentication) return value_clientAuthentication;
        throw new UndeferrableValueException("Value 'ServerlessCluster.clientAuthentication' is not present");
    }

    /**
     * The name of the serverless cluster.
     * 
     */
    @PolicyResourceProperty(name="clusterName", flag="unknown_clusterName")
    private String value_clusterName;
    private boolean unknown_clusterName;
    public String clusterName() {
        if (!unknown_clusterName) return value_clusterName;
        throw new UndeferrableValueException("Value 'ServerlessCluster.clusterName' is not present");
    }

    /**
     * UUID of the serverless cluster, for use in IAM policies.
     * 
     */
    @PolicyResourceProperty(name="clusterUuid", flag="unknown_clusterUuid")
    private String value_clusterUuid;
    private boolean unknown_clusterUuid;
    public String clusterUuid() {
        if (!unknown_clusterUuid) return value_clusterUuid;
        throw new UndeferrableValueException("Value 'ServerlessCluster.clusterUuid' is not present");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'ServerlessCluster.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'ServerlessCluster.tagsAll' is not present");
    }

    /**
     * VPC configuration information. See below.
     * 
     */
    @PolicyResourceProperty(name="vpcConfigs", flag="unknown_vpcConfigs")
    private List<ServerlessClusterVpcConfig> value_vpcConfigs;
    private boolean unknown_vpcConfigs;
    public List<ServerlessClusterVpcConfig> vpcConfigs() {
        if (!unknown_vpcConfigs) return value_vpcConfigs;
        throw new UndeferrableValueException("Value 'ServerlessCluster.vpcConfigs' is not present");
    }

}
