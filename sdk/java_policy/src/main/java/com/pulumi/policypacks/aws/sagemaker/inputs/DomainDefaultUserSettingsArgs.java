// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.sagemaker.inputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.sagemaker.inputs.DomainDefaultUserSettingsCanvasAppSettingsArgs;
import com.pulumi.policypacks.aws.sagemaker.inputs.DomainDefaultUserSettingsCodeEditorAppSettingsArgs;
import com.pulumi.policypacks.aws.sagemaker.inputs.DomainDefaultUserSettingsCustomFileSystemConfigArgs;
import com.pulumi.policypacks.aws.sagemaker.inputs.DomainDefaultUserSettingsCustomPosixUserConfigArgs;
import com.pulumi.policypacks.aws.sagemaker.inputs.DomainDefaultUserSettingsJupyterLabAppSettingsArgs;
import com.pulumi.policypacks.aws.sagemaker.inputs.DomainDefaultUserSettingsJupyterServerAppSettingsArgs;
import com.pulumi.policypacks.aws.sagemaker.inputs.DomainDefaultUserSettingsKernelGatewayAppSettingsArgs;
import com.pulumi.policypacks.aws.sagemaker.inputs.DomainDefaultUserSettingsRSessionAppSettingsArgs;
import com.pulumi.policypacks.aws.sagemaker.inputs.DomainDefaultUserSettingsRStudioServerProAppSettingsArgs;
import com.pulumi.policypacks.aws.sagemaker.inputs.DomainDefaultUserSettingsSharingSettingsArgs;
import com.pulumi.policypacks.aws.sagemaker.inputs.DomainDefaultUserSettingsSpaceStorageSettingsArgs;
import com.pulumi.policypacks.aws.sagemaker.inputs.DomainDefaultUserSettingsStudioWebPortalSettingsArgs;
import com.pulumi.policypacks.aws.sagemaker.inputs.DomainDefaultUserSettingsTensorBoardAppSettingsArgs;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class DomainDefaultUserSettingsArgs {

    /**
     * Indicates whether auto-mounting of an EFS volume is supported for the user profile. The `DefaultAsDomain` value is only supported for user profiles. Do not use the `DefaultAsDomain` value when setting this parameter for a domain. Valid values are: `Enabled`, `Disabled`, and `DefaultAsDomain`.
     * 
     */
    private UndeferrableValue<String> autoMountHomeEfs;

    public String autoMountHomeEfs() {
        if (autoMountHomeEfs == null) return null;
        return autoMountHomeEfs.getValue("DomainDefaultUserSettingsArgs.autoMountHomeEfs");
    }

    /**
     * The Canvas app settings. See `canvas_app_settings` Block below.
     * 
     */
    private UndeferrableValue<DomainDefaultUserSettingsCanvasAppSettingsArgs> canvasAppSettings;

    public DomainDefaultUserSettingsCanvasAppSettingsArgs canvasAppSettings() {
        if (canvasAppSettings == null) return null;
        return canvasAppSettings.getValue("DomainDefaultUserSettingsArgs.canvasAppSettings");
    }

    /**
     * The Code Editor application settings. See `code_editor_app_settings` Block below.
     * 
     */
    private UndeferrableValue<DomainDefaultUserSettingsCodeEditorAppSettingsArgs> codeEditorAppSettings;

    public DomainDefaultUserSettingsCodeEditorAppSettingsArgs codeEditorAppSettings() {
        if (codeEditorAppSettings == null) return null;
        return codeEditorAppSettings.getValue("DomainDefaultUserSettingsArgs.codeEditorAppSettings");
    }

    /**
     * The settings for assigning a custom file system to a user profile. Permitted users can access this file system in Amazon SageMaker AI Studio. See `custom_file_system_config` Block below.
     * 
     */
    private UndeferrableValue<List<DomainDefaultUserSettingsCustomFileSystemConfigArgs>> customFileSystemConfigs;

    public List<DomainDefaultUserSettingsCustomFileSystemConfigArgs> customFileSystemConfigs() {
        if (customFileSystemConfigs == null) return null;
        return customFileSystemConfigs.getValue("DomainDefaultUserSettingsArgs.customFileSystemConfigs");
    }

    /**
     * Details about the POSIX identity that is used for file system operations. See `custom_posix_user_config` Block below.
     * 
     */
    private UndeferrableValue<DomainDefaultUserSettingsCustomPosixUserConfigArgs> customPosixUserConfig;

    public DomainDefaultUserSettingsCustomPosixUserConfigArgs customPosixUserConfig() {
        if (customPosixUserConfig == null) return null;
        return customPosixUserConfig.getValue("DomainDefaultUserSettingsArgs.customPosixUserConfig");
    }

    /**
     * The default experience that the user is directed to when accessing the domain. The supported values are: `studio::`: Indicates that Studio is the default experience. This value can only be passed if StudioWebPortal is set to ENABLED. `app:JupyterServer:`: Indicates that Studio Classic is the default experience.
     * 
     */
    private UndeferrableValue<String> defaultLandingUri;

    public String defaultLandingUri() {
        if (defaultLandingUri == null) return null;
        return defaultLandingUri.getValue("DomainDefaultUserSettingsArgs.defaultLandingUri");
    }

    /**
     * The execution role ARN for the user.
     * 
     */
    private UndeferrableValue<String> executionRole;

    public String executionRole() {
        if (executionRole == null) return null;
        return executionRole.getValue("DomainDefaultUserSettingsArgs.executionRole");
    }

    /**
     * The settings for the JupyterLab application. See `jupyter_lab_app_settings` Block below.
     * 
     */
    private UndeferrableValue<DomainDefaultUserSettingsJupyterLabAppSettingsArgs> jupyterLabAppSettings;

    public DomainDefaultUserSettingsJupyterLabAppSettingsArgs jupyterLabAppSettings() {
        if (jupyterLabAppSettings == null) return null;
        return jupyterLabAppSettings.getValue("DomainDefaultUserSettingsArgs.jupyterLabAppSettings");
    }

    /**
     * The Jupyter server&#39;s app settings. See `jupyter_server_app_settings` Block below.
     * 
     */
    private UndeferrableValue<DomainDefaultUserSettingsJupyterServerAppSettingsArgs> jupyterServerAppSettings;

    public DomainDefaultUserSettingsJupyterServerAppSettingsArgs jupyterServerAppSettings() {
        if (jupyterServerAppSettings == null) return null;
        return jupyterServerAppSettings.getValue("DomainDefaultUserSettingsArgs.jupyterServerAppSettings");
    }

    /**
     * The kernel gateway app settings. See `kernel_gateway_app_settings` Block below.
     * 
     */
    private UndeferrableValue<DomainDefaultUserSettingsKernelGatewayAppSettingsArgs> kernelGatewayAppSettings;

    public DomainDefaultUserSettingsKernelGatewayAppSettingsArgs kernelGatewayAppSettings() {
        if (kernelGatewayAppSettings == null) return null;
        return kernelGatewayAppSettings.getValue("DomainDefaultUserSettingsArgs.kernelGatewayAppSettings");
    }

    /**
     * The RSession app settings. See `r_session_app_settings` Block below.
     * 
     */
    private UndeferrableValue<DomainDefaultUserSettingsRSessionAppSettingsArgs> rSessionAppSettings;

    public DomainDefaultUserSettingsRSessionAppSettingsArgs rSessionAppSettings() {
        if (rSessionAppSettings == null) return null;
        return rSessionAppSettings.getValue("DomainDefaultUserSettingsArgs.rSessionAppSettings");
    }

    /**
     * A collection of settings that configure user interaction with the RStudioServerPro app. See `r_studio_server_pro_app_settings` Block below.
     * 
     */
    private UndeferrableValue<DomainDefaultUserSettingsRStudioServerProAppSettingsArgs> rStudioServerProAppSettings;

    public DomainDefaultUserSettingsRStudioServerProAppSettingsArgs rStudioServerProAppSettings() {
        if (rStudioServerProAppSettings == null) return null;
        return rStudioServerProAppSettings.getValue("DomainDefaultUserSettingsArgs.rStudioServerProAppSettings");
    }

    /**
     * A list of security group IDs that will be attached to the user.
     * 
     */
    private UndeferrableValue<List<String>> securityGroups;

    public List<String> securityGroups() {
        if (securityGroups == null) return null;
        return securityGroups.getValue("DomainDefaultUserSettingsArgs.securityGroups");
    }

    /**
     * The sharing settings. See `sharing_settings` Block below.
     * 
     */
    private UndeferrableValue<DomainDefaultUserSettingsSharingSettingsArgs> sharingSettings;

    public DomainDefaultUserSettingsSharingSettingsArgs sharingSettings() {
        if (sharingSettings == null) return null;
        return sharingSettings.getValue("DomainDefaultUserSettingsArgs.sharingSettings");
    }

    /**
     * The storage settings for a private space. See `space_storage_settings` Block below.
     * 
     */
    private UndeferrableValue<DomainDefaultUserSettingsSpaceStorageSettingsArgs> spaceStorageSettings;

    public DomainDefaultUserSettingsSpaceStorageSettingsArgs spaceStorageSettings() {
        if (spaceStorageSettings == null) return null;
        return spaceStorageSettings.getValue("DomainDefaultUserSettingsArgs.spaceStorageSettings");
    }

    /**
     * Whether the user can access Studio. If this value is set to `DISABLED`, the user cannot access Studio, even if that is the default experience for the domain. Valid values are `ENABLED` and `DISABLED`.
     * 
     */
    private UndeferrableValue<String> studioWebPortal;

    public String studioWebPortal() {
        if (studioWebPortal == null) return null;
        return studioWebPortal.getValue("DomainDefaultUserSettingsArgs.studioWebPortal");
    }

    /**
     * The Studio Web Portal settings. See `studio_web_portal_settings` Block below.
     * 
     */
    private UndeferrableValue<DomainDefaultUserSettingsStudioWebPortalSettingsArgs> studioWebPortalSettings;

    public DomainDefaultUserSettingsStudioWebPortalSettingsArgs studioWebPortalSettings() {
        if (studioWebPortalSettings == null) return null;
        return studioWebPortalSettings.getValue("DomainDefaultUserSettingsArgs.studioWebPortalSettings");
    }

    /**
     * The TensorBoard app settings. See `tensor_board_app_settings` Block below.
     * 
     */
    private UndeferrableValue<DomainDefaultUserSettingsTensorBoardAppSettingsArgs> tensorBoardAppSettings;

    public DomainDefaultUserSettingsTensorBoardAppSettingsArgs tensorBoardAppSettings() {
        if (tensorBoardAppSettings == null) return null;
        return tensorBoardAppSettings.getValue("DomainDefaultUserSettingsArgs.tensorBoardAppSettings");
    }

}
