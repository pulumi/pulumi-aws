// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.wafv2;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.wafv2.inputs.RuleGroupCustomResponseBodyArgs;
import com.pulumi.policypacks.aws.wafv2.inputs.RuleGroupRuleArgs;
import com.pulumi.policypacks.aws.wafv2.inputs.RuleGroupVisibilityConfigArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:wafv2/ruleGroup:RuleGroup")
public final class RuleGroupArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The web ACL capacity units (WCUs) required for this rule group. See [here](https://docs.aws.amazon.com/waf/latest/APIReference/API_CreateRuleGroup.html#API_CreateRuleGroup_RequestSyntax) for general information and [here](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statements-list.html) for capacity specific information.
     * 
     */
    private UndeferrableValue<Integer> capacity;

    public Integer capacity() {
        if (capacity == null) return null;
        return capacity.getValue("RuleGroupArgs.capacity");
    }

    /**
     * Defines custom response bodies that can be referenced by `custom_response` actions. See Custom Response Body below for details.
     * 
     */
    private UndeferrableValue<List<RuleGroupCustomResponseBodyArgs>> customResponseBodies;

    public List<RuleGroupCustomResponseBodyArgs> customResponseBodies() {
        if (customResponseBodies == null) return null;
        return customResponseBodies.getValue("RuleGroupArgs.customResponseBodies");
    }

    /**
     * A friendly description of the rule group.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("RuleGroupArgs.description");
    }

    /**
     * A friendly name of the rule group.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("RuleGroupArgs.name");
    }

    /**
     * Creates a unique name beginning with the specified prefix. Conflicts with `name`.
     * 
     */
    private UndeferrableValue<String> namePrefix;

    public String namePrefix() {
        if (namePrefix == null) return null;
        return namePrefix.getValue("RuleGroupArgs.namePrefix");
    }

    /**
     * The rule blocks used to identify the web requests that you want to `allow`, `block`, or `count`. See Rules below for details.
     * 
     */
    private UndeferrableValue<List<RuleGroupRuleArgs>> rules;

    public List<RuleGroupRuleArgs> rules() {
        if (rules == null) return null;
        return rules.getValue("RuleGroupArgs.rules");
    }

    /**
     * Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are `CLOUDFRONT` or `REGIONAL`. To work with CloudFront, you must also specify the region `us-east-1` (N. Virginia) on the AWS provider.
     * 
     */
    private UndeferrableValue<String> scope;

    public String scope() {
        if (scope == null) return null;
        return scope.getValue("RuleGroupArgs.scope");
    }

    /**
     * An array of key:value pairs to associate with the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("RuleGroupArgs.tags");
    }

    /**
     * Defines and enables Amazon CloudWatch metrics and web request sample collection. See Visibility Configuration below for details.
     * 
     */
    private UndeferrableValue<RuleGroupVisibilityConfigArgs> visibilityConfig;

    public RuleGroupVisibilityConfigArgs visibilityConfig() {
        if (visibilityConfig == null) return null;
        return visibilityConfig.getValue("RuleGroupArgs.visibilityConfig");
    }

}
