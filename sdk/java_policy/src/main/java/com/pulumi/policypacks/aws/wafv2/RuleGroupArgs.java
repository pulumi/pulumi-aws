// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.wafv2;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.wafv2.inputs.RuleGroupCustomResponseBodyArgs;
import com.pulumi.policypacks.aws.wafv2.inputs.RuleGroupRuleArgs;
import com.pulumi.policypacks.aws.wafv2.inputs.RuleGroupVisibilityConfigArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:wafv2/ruleGroup:RuleGroup")
public final class RuleGroupArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The web ACL capacity units (WCUs) required for this rule group. See [here](https://docs.aws.amazon.com/waf/latest/APIReference/API_CreateRuleGroup.html#API_CreateRuleGroup_RequestSyntax) for general information and [here](https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statements-list.html) for capacity specific information.
     * 
     */
    @PolicyResourceProperty(name="capacity", flag="unknown_capacity")
    private Integer value_capacity;
    private boolean unknown_capacity;
    public Integer capacity() {
        if (!unknown_capacity) return value_capacity;
        throw new UndeferrableValueException("Value 'RuleGroupArgs.capacity' is not present");
    }

    /**
     * Defines custom response bodies that can be referenced by `custom_response` actions. See Custom Response Body below for details.
     * 
     */
    @PolicyResourceProperty(name="customResponseBodies", flag="unknown_customResponseBodies")
    private List<RuleGroupCustomResponseBodyArgs> value_customResponseBodies;
    private boolean unknown_customResponseBodies;
    public List<RuleGroupCustomResponseBodyArgs> customResponseBodies() {
        if (!unknown_customResponseBodies) return value_customResponseBodies;
        throw new UndeferrableValueException("Value 'RuleGroupArgs.customResponseBodies' is not present");
    }

    /**
     * A friendly description of the rule group.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private String value_description;
    private boolean unknown_description;
    public String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'RuleGroupArgs.description' is not present");
    }

    /**
     * A friendly name of the rule group.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'RuleGroupArgs.name' is not present");
    }

    /**
     * Creates a unique name beginning with the specified prefix. Conflicts with `name`.
     * 
     */
    @PolicyResourceProperty(name="namePrefix", flag="unknown_namePrefix")
    private String value_namePrefix;
    private boolean unknown_namePrefix;
    public String namePrefix() {
        if (!unknown_namePrefix) return value_namePrefix;
        throw new UndeferrableValueException("Value 'RuleGroupArgs.namePrefix' is not present");
    }

    /**
     * The rule blocks used to identify the web requests that you want to `allow`, `block`, or `count`. See Rules below for details.
     * 
     */
    @PolicyResourceProperty(name="rules", flag="unknown_rules")
    private List<RuleGroupRuleArgs> value_rules;
    private boolean unknown_rules;
    public List<RuleGroupRuleArgs> rules() {
        if (!unknown_rules) return value_rules;
        throw new UndeferrableValueException("Value 'RuleGroupArgs.rules' is not present");
    }

    /**
     * Specifies whether this is for an AWS CloudFront distribution or for a regional application. Valid values are `CLOUDFRONT` or `REGIONAL`. To work with CloudFront, you must also specify the region `us-east-1` (N. Virginia) on the AWS provider.
     * 
     */
    @PolicyResourceProperty(name="scope", flag="unknown_scope")
    private String value_scope;
    private boolean unknown_scope;
    public String scope() {
        if (!unknown_scope) return value_scope;
        throw new UndeferrableValueException("Value 'RuleGroupArgs.scope' is not present");
    }

    /**
     * An array of key:value pairs to associate with the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'RuleGroupArgs.tags' is not present");
    }

    /**
     * Defines and enables Amazon CloudWatch metrics and web request sample collection. See Visibility Configuration below for details.
     * 
     */
    @PolicyResourceProperty(name="visibilityConfig", flag="unknown_visibilityConfig")
    private RuleGroupVisibilityConfigArgs value_visibilityConfig;
    private boolean unknown_visibilityConfig;
    public RuleGroupVisibilityConfigArgs visibilityConfig() {
        if (!unknown_visibilityConfig) return value_visibilityConfig;
        throw new UndeferrableValueException("Value 'RuleGroupArgs.visibilityConfig' is not present");
    }

}
