// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appmesh.inputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.appmesh.inputs.RouteSpecGrpcRouteArgs;
import com.pulumi.policypacks.aws.appmesh.inputs.RouteSpecHttp2RouteArgs;
import com.pulumi.policypacks.aws.appmesh.inputs.RouteSpecHttpRouteArgs;
import com.pulumi.policypacks.aws.appmesh.inputs.RouteSpecTcpRouteArgs;
import java.lang.Integer;
import javax.annotation.Nullable;


public final class RouteSpecArgs {

    /**
     * GRPC routing information for the route.
     * 
     */
    private UndeferrableValue<RouteSpecGrpcRouteArgs> grpcRoute;

    public RouteSpecGrpcRouteArgs grpcRoute() {
        if (grpcRoute == null) return null;
        return grpcRoute.getValue("RouteSpecArgs.grpcRoute");
    }

    /**
     * HTTP/2 routing information for the route.
     * 
     */
    private UndeferrableValue<RouteSpecHttp2RouteArgs> http2Route;

    public RouteSpecHttp2RouteArgs http2Route() {
        if (http2Route == null) return null;
        return http2Route.getValue("RouteSpecArgs.http2Route");
    }

    /**
     * HTTP routing information for the route.
     * 
     */
    private UndeferrableValue<RouteSpecHttpRouteArgs> httpRoute;

    public RouteSpecHttpRouteArgs httpRoute() {
        if (httpRoute == null) return null;
        return httpRoute.getValue("RouteSpecArgs.httpRoute");
    }

    /**
     * Priority for the route, between `0` and `1000`.
     * Routes are matched based on the specified value, where `0` is the highest priority.
     * 
     */
    private UndeferrableValue<Integer> priority;

    public Integer priority() {
        if (priority == null) return null;
        return priority.getValue("RouteSpecArgs.priority");
    }

    /**
     * TCP routing information for the route.
     * 
     */
    private UndeferrableValue<RouteSpecTcpRouteArgs> tcpRoute;

    public RouteSpecTcpRouteArgs tcpRoute() {
        if (tcpRoute == null) return null;
        return tcpRoute.getValue("RouteSpecArgs.tcpRoute");
    }

}
