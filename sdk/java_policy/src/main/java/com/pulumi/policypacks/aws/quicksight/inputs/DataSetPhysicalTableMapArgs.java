// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.quicksight.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.quicksight.inputs.DataSetPhysicalTableMapCustomSqlArgs;
import com.pulumi.policypacks.aws.quicksight.inputs.DataSetPhysicalTableMapRelationalTableArgs;
import com.pulumi.policypacks.aws.quicksight.inputs.DataSetPhysicalTableMapS3SourceArgs;
import java.lang.String;
import javax.annotation.Nullable;


public final class DataSetPhysicalTableMapArgs {

    /**
     * A physical table type built from the results of the custom SQL query. See custom_sql.
     * 
     */
    @PolicyResourceProperty(name="customSql", flag="unknown_customSql")
    private DataSetPhysicalTableMapCustomSqlArgs value_customSql;
    private boolean unknown_customSql;
    public DataSetPhysicalTableMapCustomSqlArgs customSql() {
        if (!unknown_customSql) return value_customSql;
        throw new UndeferrableValueException("Value 'DataSetPhysicalTableMapArgs.customSql' is not present");
    }

    /**
     * Key of the physical table map.
     * 
     */
    @PolicyResourceProperty(name="physicalTableMapId", flag="unknown_physicalTableMapId")
    private String value_physicalTableMapId;
    private boolean unknown_physicalTableMapId;
    public String physicalTableMapId() {
        if (!unknown_physicalTableMapId) return value_physicalTableMapId;
        throw new UndeferrableValueException("Value 'DataSetPhysicalTableMapArgs.physicalTableMapId' is not present");
    }

    /**
     * A physical table type for relational data sources. See relational_table.
     * 
     */
    @PolicyResourceProperty(name="relationalTable", flag="unknown_relationalTable")
    private DataSetPhysicalTableMapRelationalTableArgs value_relationalTable;
    private boolean unknown_relationalTable;
    public DataSetPhysicalTableMapRelationalTableArgs relationalTable() {
        if (!unknown_relationalTable) return value_relationalTable;
        throw new UndeferrableValueException("Value 'DataSetPhysicalTableMapArgs.relationalTable' is not present");
    }

    /**
     * A physical table type for as S3 data source. See s3_source.
     * 
     */
    @PolicyResourceProperty(name="s3Source", flag="unknown_s3Source")
    private DataSetPhysicalTableMapS3SourceArgs value_s3Source;
    private boolean unknown_s3Source;
    public DataSetPhysicalTableMapS3SourceArgs s3Source() {
        if (!unknown_s3Source) return value_s3Source;
        throw new UndeferrableValueException("Value 'DataSetPhysicalTableMapArgs.s3Source' is not present");
    }

}
