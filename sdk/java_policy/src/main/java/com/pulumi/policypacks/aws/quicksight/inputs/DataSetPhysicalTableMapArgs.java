// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.quicksight.inputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.quicksight.inputs.DataSetPhysicalTableMapCustomSqlArgs;
import com.pulumi.policypacks.aws.quicksight.inputs.DataSetPhysicalTableMapRelationalTableArgs;
import com.pulumi.policypacks.aws.quicksight.inputs.DataSetPhysicalTableMapS3SourceArgs;
import java.lang.String;
import javax.annotation.Nullable;


public final class DataSetPhysicalTableMapArgs {

    /**
     * A physical table type built from the results of the custom SQL query. See custom_sql.
     * 
     */
    private UndeferrableValue<DataSetPhysicalTableMapCustomSqlArgs> customSql;

    public DataSetPhysicalTableMapCustomSqlArgs customSql() {
        if (customSql == null) return null;
        return customSql.getValue("DataSetPhysicalTableMapArgs.customSql");
    }

    /**
     * Key of the physical table map.
     * 
     */
    private UndeferrableValue<String> physicalTableMapId;

    public String physicalTableMapId() {
        if (physicalTableMapId == null) return null;
        return physicalTableMapId.getValue("DataSetPhysicalTableMapArgs.physicalTableMapId");
    }

    /**
     * A physical table type for relational data sources. See relational_table.
     * 
     */
    private UndeferrableValue<DataSetPhysicalTableMapRelationalTableArgs> relationalTable;

    public DataSetPhysicalTableMapRelationalTableArgs relationalTable() {
        if (relationalTable == null) return null;
        return relationalTable.getValue("DataSetPhysicalTableMapArgs.relationalTable");
    }

    /**
     * A physical table type for as S3 data source. See s3_source.
     * 
     */
    private UndeferrableValue<DataSetPhysicalTableMapS3SourceArgs> s3Source;

    public DataSetPhysicalTableMapS3SourceArgs s3Source() {
        if (s3Source == null) return null;
        return s3Source.getValue("DataSetPhysicalTableMapArgs.s3Source");
    }

}
