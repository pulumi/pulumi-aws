// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.kinesisanalyticsv2.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.kinesisanalyticsv2.outputs.ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfiguration;
import com.pulumi.policypacks.aws.kinesisanalyticsv2.outputs.ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfiguration;
import com.pulumi.policypacks.aws.kinesisanalyticsv2.outputs.ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfiguration;
import javax.annotation.Nullable;


public final class ApplicationApplicationConfigurationFlinkApplicationConfiguration {

    /**
     * Describes an application&#39;s checkpointing configuration.
     * 
     */
    @PolicyResourceProperty(name="checkpointConfiguration", flag="unknown_checkpointConfiguration")
    private @Nullable ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfiguration value_checkpointConfiguration;
    private boolean unknown_checkpointConfiguration;
    public @Nullable ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfiguration checkpointConfiguration() {
        if (!unknown_checkpointConfiguration) return value_checkpointConfiguration;
        throw new UndeferrableValueException("Value 'ApplicationApplicationConfigurationFlinkApplicationConfiguration.checkpointConfiguration' is not present");
    }

    /**
     * Describes configuration parameters for CloudWatch logging for an application.
     * 
     */
    @PolicyResourceProperty(name="monitoringConfiguration", flag="unknown_monitoringConfiguration")
    private @Nullable ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfiguration value_monitoringConfiguration;
    private boolean unknown_monitoringConfiguration;
    public @Nullable ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfiguration monitoringConfiguration() {
        if (!unknown_monitoringConfiguration) return value_monitoringConfiguration;
        throw new UndeferrableValueException("Value 'ApplicationApplicationConfigurationFlinkApplicationConfiguration.monitoringConfiguration' is not present");
    }

    /**
     * Describes parameters for how an application executes multiple tasks simultaneously.
     * 
     */
    @PolicyResourceProperty(name="parallelismConfiguration", flag="unknown_parallelismConfiguration")
    private @Nullable ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfiguration value_parallelismConfiguration;
    private boolean unknown_parallelismConfiguration;
    public @Nullable ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfiguration parallelismConfiguration() {
        if (!unknown_parallelismConfiguration) return value_parallelismConfiguration;
        throw new UndeferrableValueException("Value 'ApplicationApplicationConfigurationFlinkApplicationConfiguration.parallelismConfiguration' is not present");
    }

}
