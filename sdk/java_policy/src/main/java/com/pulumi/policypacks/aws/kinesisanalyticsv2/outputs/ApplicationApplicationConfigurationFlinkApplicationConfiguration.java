// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.kinesisanalyticsv2.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.kinesisanalyticsv2.outputs.ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfiguration;
import com.pulumi.policypacks.aws.kinesisanalyticsv2.outputs.ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfiguration;
import com.pulumi.policypacks.aws.kinesisanalyticsv2.outputs.ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfiguration;
import javax.annotation.Nullable;


public final class ApplicationApplicationConfigurationFlinkApplicationConfiguration {

    /**
     * Describes an application&#39;s checkpointing configuration.
     * 
     */
    private @Nullable UndeferrableValue<ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfiguration> checkpointConfiguration;

    public @Nullable ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfiguration checkpointConfiguration() {
        if (checkpointConfiguration == null) return null;
        return checkpointConfiguration.getValue("ApplicationApplicationConfigurationFlinkApplicationConfiguration.checkpointConfiguration");
    }

    /**
     * Describes configuration parameters for CloudWatch logging for an application.
     * 
     */
    private @Nullable UndeferrableValue<ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfiguration> monitoringConfiguration;

    public @Nullable ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfiguration monitoringConfiguration() {
        if (monitoringConfiguration == null) return null;
        return monitoringConfiguration.getValue("ApplicationApplicationConfigurationFlinkApplicationConfiguration.monitoringConfiguration");
    }

    /**
     * Describes parameters for how an application executes multiple tasks simultaneously.
     * 
     */
    private @Nullable UndeferrableValue<ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfiguration> parallelismConfiguration;

    public @Nullable ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfiguration parallelismConfiguration() {
        if (parallelismConfiguration == null) return null;
        return parallelismConfiguration.getValue("ApplicationApplicationConfigurationFlinkApplicationConfiguration.parallelismConfiguration");
    }

}
