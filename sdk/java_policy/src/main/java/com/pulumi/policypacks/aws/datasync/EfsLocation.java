// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.datasync;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.datasync.outputs.EfsLocationEc2Config;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:datasync/efsLocation:EfsLocation")
public final class EfsLocation extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Specifies the Amazon Resource Name (ARN) of the access point that DataSync uses to access the Amazon EFS file system.
     * 
     */
    @PolicyResourceProperty(name="accessPointArn", flag="unknown_accessPointArn")
    private @Nullable String value_accessPointArn;
    private boolean unknown_accessPointArn;
    public @Nullable String accessPointArn() {
        if (!unknown_accessPointArn) return value_accessPointArn;
        throw new UndeferrableValueException("Value 'EfsLocation.accessPointArn' is not present");
    }

    /**
     * Amazon Resource Name (ARN) of the DataSync Location.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'EfsLocation.arn' is not present");
    }

    /**
     * Configuration block containing EC2 configurations for connecting to the EFS File System.
     * 
     */
    @PolicyResourceProperty(name="ec2Config", flag="unknown_ec2Config")
    private EfsLocationEc2Config value_ec2Config;
    private boolean unknown_ec2Config;
    public EfsLocationEc2Config ec2Config() {
        if (!unknown_ec2Config) return value_ec2Config;
        throw new UndeferrableValueException("Value 'EfsLocation.ec2Config' is not present");
    }

    /**
     * Amazon Resource Name (ARN) of EFS File System.
     * 
     */
    @PolicyResourceProperty(name="efsFileSystemArn", flag="unknown_efsFileSystemArn")
    private String value_efsFileSystemArn;
    private boolean unknown_efsFileSystemArn;
    public String efsFileSystemArn() {
        if (!unknown_efsFileSystemArn) return value_efsFileSystemArn;
        throw new UndeferrableValueException("Value 'EfsLocation.efsFileSystemArn' is not present");
    }

    /**
     * Specifies an Identity and Access Management (IAM) role that DataSync assumes when mounting the Amazon EFS file system.
     * 
     */
    @PolicyResourceProperty(name="fileSystemAccessRoleArn", flag="unknown_fileSystemAccessRoleArn")
    private @Nullable String value_fileSystemAccessRoleArn;
    private boolean unknown_fileSystemAccessRoleArn;
    public @Nullable String fileSystemAccessRoleArn() {
        if (!unknown_fileSystemAccessRoleArn) return value_fileSystemAccessRoleArn;
        throw new UndeferrableValueException("Value 'EfsLocation.fileSystemAccessRoleArn' is not present");
    }

    /**
     * Specifies whether you want DataSync to use TLS encryption when transferring data to or from your Amazon EFS file system. Valid values are `NONE` and `TLS1_2`.
     * 
     */
    @PolicyResourceProperty(name="inTransitEncryption", flag="unknown_inTransitEncryption")
    private @Nullable String value_inTransitEncryption;
    private boolean unknown_inTransitEncryption;
    public @Nullable String inTransitEncryption() {
        if (!unknown_inTransitEncryption) return value_inTransitEncryption;
        throw new UndeferrableValueException("Value 'EfsLocation.inTransitEncryption' is not present");
    }

    /**
     * Subdirectory to perform actions as source or destination. Default `/`.
     * 
     */
    @PolicyResourceProperty(name="subdirectory", flag="unknown_subdirectory")
    private @Nullable String value_subdirectory;
    private boolean unknown_subdirectory;
    public @Nullable String subdirectory() {
        if (!unknown_subdirectory) return value_subdirectory;
        throw new UndeferrableValueException("Value 'EfsLocation.subdirectory' is not present");
    }

    /**
     * Key-value pairs of resource tags to assign to the DataSync Location. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'EfsLocation.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'EfsLocation.tagsAll' is not present");
    }

    @PolicyResourceProperty(name="uri", flag="unknown_uri")
    private String value_uri;
    private boolean unknown_uri;
    public String uri() {
        if (!unknown_uri) return value_uri;
        throw new UndeferrableValueException("Value 'EfsLocation.uri' is not present");
    }

}
