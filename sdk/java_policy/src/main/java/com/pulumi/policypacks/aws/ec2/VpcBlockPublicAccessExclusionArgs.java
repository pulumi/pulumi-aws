// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.ec2.inputs.VpcBlockPublicAccessExclusionTimeoutsArgs;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ec2/vpcBlockPublicAccessExclusion:VpcBlockPublicAccessExclusion")
public final class VpcBlockPublicAccessExclusionArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Mode of exclusion from Block Public Access. The allowed values are `allow-egress` and `allow-bidirectional`.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="internetGatewayExclusionMode", flag="unknown_internetGatewayExclusionMode")
    private String value_internetGatewayExclusionMode;
    private boolean unknown_internetGatewayExclusionMode;
    public String internetGatewayExclusionMode() {
        if (!unknown_internetGatewayExclusionMode) return value_internetGatewayExclusionMode;
        throw new UndeferrableValueException("Value 'VpcBlockPublicAccessExclusionArgs.internetGatewayExclusionMode' is not present");
    }

    /**
     * Id of the subnet to which this exclusion applies. Either this or the vpc_id needs to be provided.
     * 
     */
    @PolicyResourceProperty(name="subnetId", flag="unknown_subnetId")
    private String value_subnetId;
    private boolean unknown_subnetId;
    public String subnetId() {
        if (!unknown_subnetId) return value_subnetId;
        throw new UndeferrableValueException("Value 'VpcBlockPublicAccessExclusionArgs.subnetId' is not present");
    }

    /**
     * A map of tags to assign to the exclusion. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'VpcBlockPublicAccessExclusionArgs.tags' is not present");
    }

    @PolicyResourceProperty(name="timeouts", flag="unknown_timeouts")
    private VpcBlockPublicAccessExclusionTimeoutsArgs value_timeouts;
    private boolean unknown_timeouts;
    public VpcBlockPublicAccessExclusionTimeoutsArgs timeouts() {
        if (!unknown_timeouts) return value_timeouts;
        throw new UndeferrableValueException("Value 'VpcBlockPublicAccessExclusionArgs.timeouts' is not present");
    }

    /**
     * Id of the VPC to which this exclusion applies. Either this or the subnet_id needs to be provided.
     * 
     */
    @PolicyResourceProperty(name="vpcId", flag="unknown_vpcId")
    private String value_vpcId;
    private boolean unknown_vpcId;
    public String vpcId() {
        if (!unknown_vpcId) return value_vpcId;
        throw new UndeferrableValueException("Value 'VpcBlockPublicAccessExclusionArgs.vpcId' is not present");
    }

}
