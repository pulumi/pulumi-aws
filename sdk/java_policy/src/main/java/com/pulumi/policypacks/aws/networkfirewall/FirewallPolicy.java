// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.networkfirewall;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.networkfirewall.outputs.FirewallPolicyEncryptionConfiguration;
import com.pulumi.policypacks.aws.networkfirewall.outputs.FirewallPolicyFirewallPolicy;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:networkfirewall/firewallPolicy:FirewallPolicy")
public final class FirewallPolicy extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The Amazon Resource Name (ARN) that identifies the firewall policy.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'FirewallPolicy.arn' is not present");
    }

    /**
     * A friendly description of the firewall policy.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private @Nullable String value_description;
    private boolean unknown_description;
    public @Nullable String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'FirewallPolicy.description' is not present");
    }

    /**
     * KMS encryption configuration settings. See Encryption Configuration below for details.
     * 
     */
    @PolicyResourceProperty(name="encryptionConfiguration", flag="unknown_encryptionConfiguration")
    private @Nullable FirewallPolicyEncryptionConfiguration value_encryptionConfiguration;
    private boolean unknown_encryptionConfiguration;
    public @Nullable FirewallPolicyEncryptionConfiguration encryptionConfiguration() {
        if (!unknown_encryptionConfiguration) return value_encryptionConfiguration;
        throw new UndeferrableValueException("Value 'FirewallPolicy.encryptionConfiguration' is not present");
    }

    /**
     * A configuration block describing the rule groups and policy actions to use in the firewall policy. See Firewall Policy below for details.
     * 
     */
    @PolicyResourceProperty(name="firewallPolicy", flag="unknown_firewallPolicy")
    private FirewallPolicyFirewallPolicy value_firewallPolicy;
    private boolean unknown_firewallPolicy;
    public FirewallPolicyFirewallPolicy firewallPolicy() {
        if (!unknown_firewallPolicy) return value_firewallPolicy;
        throw new UndeferrableValueException("Value 'FirewallPolicy.firewallPolicy' is not present");
    }

    /**
     * A friendly name of the firewall policy.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'FirewallPolicy.name' is not present");
    }

    /**
     * Map of resource tags to associate with the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'FirewallPolicy.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'FirewallPolicy.tagsAll' is not present");
    }

    /**
     * A string token used when updating a firewall policy.
     * 
     */
    @PolicyResourceProperty(name="updateToken", flag="unknown_updateToken")
    private String value_updateToken;
    private boolean unknown_updateToken;
    public String updateToken() {
        if (!unknown_updateToken) return value_updateToken;
        throw new UndeferrableValueException("Value 'FirewallPolicy.updateToken' is not present");
    }

}
