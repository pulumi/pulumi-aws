// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.iot.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;


public final class TopicRuleErrorActionFirehose {

    /**
     * The payload that contains a JSON array of records will be sent to Kinesis Firehose via a batch call.
     * 
     */
    @PolicyResourceProperty(name="batchMode", flag="unknown_batchMode")
    private @Nullable Boolean value_batchMode;
    private boolean unknown_batchMode;
    public @Nullable Boolean batchMode() {
        if (!unknown_batchMode) return value_batchMode;
        throw new UndeferrableValueException("Value 'TopicRuleErrorActionFirehose.batchMode' is not present");
    }

    /**
     * The delivery stream name.
     * 
     */
    @PolicyResourceProperty(name="deliveryStreamName", flag="unknown_deliveryStreamName")
    private String value_deliveryStreamName;
    private boolean unknown_deliveryStreamName;
    public String deliveryStreamName() {
        if (!unknown_deliveryStreamName) return value_deliveryStreamName;
        throw new UndeferrableValueException("Value 'TopicRuleErrorActionFirehose.deliveryStreamName' is not present");
    }

    /**
     * The IAM role ARN that grants access to the Amazon Kinesis Firehose stream.
     * 
     */
    @PolicyResourceProperty(name="roleArn", flag="unknown_roleArn")
    private String value_roleArn;
    private boolean unknown_roleArn;
    public String roleArn() {
        if (!unknown_roleArn) return value_roleArn;
        throw new UndeferrableValueException("Value 'TopicRuleErrorActionFirehose.roleArn' is not present");
    }

    /**
     * A character separator that is used to separate records written to the Firehose stream. Valid values are: &#39;\n&#39; (newline), &#39;\t&#39; (tab), &#39;\r\n&#39; (Windows newline), &#39;,&#39; (comma).
     * 
     */
    @PolicyResourceProperty(name="separator", flag="unknown_separator")
    private @Nullable String value_separator;
    private boolean unknown_separator;
    public @Nullable String separator() {
        if (!unknown_separator) return value_separator;
        throw new UndeferrableValueException("Value 'TopicRuleErrorActionFirehose.separator' is not present");
    }

}
