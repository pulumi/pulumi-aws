// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.codepipeline.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.codepipeline.outputs.PipelineStageAction;
import com.pulumi.policypacks.aws.codepipeline.outputs.PipelineStageBeforeEntry;
import com.pulumi.policypacks.aws.codepipeline.outputs.PipelineStageOnFailure;
import com.pulumi.policypacks.aws.codepipeline.outputs.PipelineStageOnSuccess;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class PipelineStage {

    /**
     * The action(s) to include in the stage. Defined as an `action` block below
     * 
     */
    @PolicyResourceProperty(name="actions", flag="unknown_actions")
    private List<PipelineStageAction> value_actions;
    private boolean unknown_actions;
    public List<PipelineStageAction> actions() {
        if (!unknown_actions) return value_actions;
        throw new UndeferrableValueException("Value 'PipelineStage.actions' is not present");
    }

    /**
     * The method to use when a stage allows entry. For example, configuring this field for conditions will allow entry to the stage when the conditions are met.
     * 
     */
    @PolicyResourceProperty(name="beforeEntry", flag="unknown_beforeEntry")
    private @Nullable PipelineStageBeforeEntry value_beforeEntry;
    private boolean unknown_beforeEntry;
    public @Nullable PipelineStageBeforeEntry beforeEntry() {
        if (!unknown_beforeEntry) return value_beforeEntry;
        throw new UndeferrableValueException("Value 'PipelineStage.beforeEntry' is not present");
    }

    /**
     * The name of the stage.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'PipelineStage.name' is not present");
    }

    /**
     * The method to use when a stage has not completed successfully. For example, configuring this field for rollback will roll back a failed stage automatically to the last successful pipeline execution in the stage.
     * 
     */
    @PolicyResourceProperty(name="onFailure", flag="unknown_onFailure")
    private @Nullable PipelineStageOnFailure value_onFailure;
    private boolean unknown_onFailure;
    public @Nullable PipelineStageOnFailure onFailure() {
        if (!unknown_onFailure) return value_onFailure;
        throw new UndeferrableValueException("Value 'PipelineStage.onFailure' is not present");
    }

    /**
     * The method to use when a stage has succeeded. For example, configuring this field for conditions will allow the stage to succeed when the conditions are met.
     * 
     */
    @PolicyResourceProperty(name="onSuccess", flag="unknown_onSuccess")
    private @Nullable PipelineStageOnSuccess value_onSuccess;
    private boolean unknown_onSuccess;
    public @Nullable PipelineStageOnSuccess onSuccess() {
        if (!unknown_onSuccess) return value_onSuccess;
        throw new UndeferrableValueException("Value 'PipelineStage.onSuccess' is not present");
    }

}
