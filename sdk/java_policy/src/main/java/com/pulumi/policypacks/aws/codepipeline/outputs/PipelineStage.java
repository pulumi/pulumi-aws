// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.codepipeline.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.codepipeline.outputs.PipelineStageAction;
import com.pulumi.policypacks.aws.codepipeline.outputs.PipelineStageBeforeEntry;
import com.pulumi.policypacks.aws.codepipeline.outputs.PipelineStageOnFailure;
import com.pulumi.policypacks.aws.codepipeline.outputs.PipelineStageOnSuccess;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class PipelineStage {

    /**
     * The action(s) to include in the stage. Defined as an `action` block below
     * 
     */
    private UndeferrableValue<List<PipelineStageAction>> actions;

    public List<PipelineStageAction> actions() {
        if (actions == null) return null;
        return actions.getValue("PipelineStage.actions");
    }

    /**
     * The method to use when a stage allows entry. For example, configuring this field for conditions will allow entry to the stage when the conditions are met.
     * 
     */
    private @Nullable UndeferrableValue<PipelineStageBeforeEntry> beforeEntry;

    public @Nullable PipelineStageBeforeEntry beforeEntry() {
        if (beforeEntry == null) return null;
        return beforeEntry.getValue("PipelineStage.beforeEntry");
    }

    /**
     * The name of the stage.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("PipelineStage.name");
    }

    /**
     * The method to use when a stage has not completed successfully. For example, configuring this field for rollback will roll back a failed stage automatically to the last successful pipeline execution in the stage.
     * 
     */
    private @Nullable UndeferrableValue<PipelineStageOnFailure> onFailure;

    public @Nullable PipelineStageOnFailure onFailure() {
        if (onFailure == null) return null;
        return onFailure.getValue("PipelineStage.onFailure");
    }

    /**
     * The method to use when a stage has succeeded. For example, configuring this field for conditions will allow the stage to succeed when the conditions are met.
     * 
     */
    private @Nullable UndeferrableValue<PipelineStageOnSuccess> onSuccess;

    public @Nullable PipelineStageOnSuccess onSuccess() {
        if (onSuccess == null) return null;
        return onSuccess.getValue("PipelineStage.onSuccess");
    }

}
