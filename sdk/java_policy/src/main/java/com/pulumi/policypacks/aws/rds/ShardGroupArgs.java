// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.rds;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.rds.inputs.ShardGroupTimeoutsArgs;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:rds/shardGroup:ShardGroup")
public final class ShardGroupArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Specifies whether to create standby DB shard groups for the DB shard group. Valid values are:
     * 
     */
    private UndeferrableValue<Integer> computeRedundancy;

    public Integer computeRedundancy() {
        if (computeRedundancy == null) return null;
        return computeRedundancy.getValue("ShardGroupArgs.computeRedundancy");
    }

    /**
     * The name of the primary DB cluster for the DB shard group.
     * 
     */
    private UndeferrableValue<String> dbClusterIdentifier;

    public String dbClusterIdentifier() {
        if (dbClusterIdentifier == null) return null;
        return dbClusterIdentifier.getValue("ShardGroupArgs.dbClusterIdentifier");
    }

    /**
     * The name of the DB shard group.
     * 
     */
    private UndeferrableValue<String> dbShardGroupIdentifier;

    public String dbShardGroupIdentifier() {
        if (dbShardGroupIdentifier == null) return null;
        return dbShardGroupIdentifier.getValue("ShardGroupArgs.dbShardGroupIdentifier");
    }

    /**
     * The maximum capacity of the DB shard group in Aurora capacity units (ACUs).
     * 
     */
    private UndeferrableValue<Double> maxAcu;

    public Double maxAcu() {
        if (maxAcu == null) return null;
        return maxAcu.getValue("ShardGroupArgs.maxAcu");
    }

    /**
     * The minimum capacity of the DB shard group in Aurora capacity units (ACUs).
     * 
     */
    private UndeferrableValue<Double> minAcu;

    public Double minAcu() {
        if (minAcu == null) return null;
        return minAcu.getValue("ShardGroupArgs.minAcu");
    }

    /**
     * Indicates whether the DB shard group is publicly accessible.
     * 
     */
    private UndeferrableValue<Boolean> publiclyAccessible;

    public Boolean publiclyAccessible() {
        if (publiclyAccessible == null) return null;
        return publiclyAccessible.getValue("ShardGroupArgs.publiclyAccessible");
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("ShardGroupArgs.tags");
    }

    private UndeferrableValue<ShardGroupTimeoutsArgs> timeouts;

    public ShardGroupTimeoutsArgs timeouts() {
        if (timeouts == null) return null;
        return timeouts.getValue("ShardGroupArgs.timeouts");
    }

}
