// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.codepipeline.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.codepipeline.outputs.PipelineTriggerGitConfigurationPullRequest;
import com.pulumi.policypacks.aws.codepipeline.outputs.PipelineTriggerGitConfigurationPush;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class PipelineTriggerGitConfiguration {

    /**
     * The field where the repository event that will start the pipeline is specified as pull requests. A `pull_request` block is documented below.
     * 
     */
    private @Nullable UndeferrableValue<List<PipelineTriggerGitConfigurationPullRequest>> pullRequests;

    public @Nullable List<PipelineTriggerGitConfigurationPullRequest> pullRequests() {
        if (pullRequests == null) return null;
        return pullRequests.getValue("PipelineTriggerGitConfiguration.pullRequests");
    }

    /**
     * The field where the repository event that will start the pipeline, such as pushing Git tags, is specified with details. A `push` block is documented below.
     * 
     */
    private @Nullable UndeferrableValue<List<PipelineTriggerGitConfigurationPush>> pushes;

    public @Nullable List<PipelineTriggerGitConfigurationPush> pushes() {
        if (pushes == null) return null;
        return pushes.getValue("PipelineTriggerGitConfiguration.pushes");
    }

    /**
     * The name of the pipeline source action where the trigger configuration, such as Git tags, is specified. The trigger configuration will start the pipeline upon the specified change only.
     * 
     */
    private UndeferrableValue<String> sourceActionName;

    public String sourceActionName() {
        if (sourceActionName == null) return null;
        return sourceActionName.getValue("PipelineTriggerGitConfiguration.sourceActionName");
    }

}
