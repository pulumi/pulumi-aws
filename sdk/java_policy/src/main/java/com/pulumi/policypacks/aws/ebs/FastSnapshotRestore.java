// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ebs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.ebs.outputs.FastSnapshotRestoreTimeouts;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ebs/fastSnapshotRestore:FastSnapshotRestore")
public final class FastSnapshotRestore extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Availability zone in which to enable fast snapshot restores.
     * 
     */
    @PolicyResourceProperty(name="availabilityZone", flag="unknown_availabilityZone")
    private String value_availabilityZone;
    private boolean unknown_availabilityZone;
    public String availabilityZone() {
        if (!unknown_availabilityZone) return value_availabilityZone;
        throw new UndeferrableValueException("Value 'FastSnapshotRestore.availabilityZone' is not present");
    }

    /**
     * ID of the snapshot.
     * 
     */
    @PolicyResourceProperty(name="snapshotId", flag="unknown_snapshotId")
    private String value_snapshotId;
    private boolean unknown_snapshotId;
    public String snapshotId() {
        if (!unknown_snapshotId) return value_snapshotId;
        throw new UndeferrableValueException("Value 'FastSnapshotRestore.snapshotId' is not present");
    }

    /**
     * State of fast snapshot restores. Valid values are `enabling`, `optimizing`, `enabled`, `disabling`, `disabled`.
     * 
     */
    @PolicyResourceProperty(name="state", flag="unknown_state")
    private String value_state;
    private boolean unknown_state;
    public String state() {
        if (!unknown_state) return value_state;
        throw new UndeferrableValueException("Value 'FastSnapshotRestore.state' is not present");
    }

    @PolicyResourceProperty(name="timeouts", flag="unknown_timeouts")
    private @Nullable FastSnapshotRestoreTimeouts value_timeouts;
    private boolean unknown_timeouts;
    public @Nullable FastSnapshotRestoreTimeouts timeouts() {
        if (!unknown_timeouts) return value_timeouts;
        throw new UndeferrableValueException("Value 'FastSnapshotRestore.timeouts' is not present");
    }

}
