// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.redshiftserverless;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;


@PolicyResourceType(type="aws:redshiftserverless/customDomainAssociation:CustomDomainAssociation")
public final class CustomDomainAssociation extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * ARN of the certificate for the custom domain association.
     * 
     */
    @PolicyResourceProperty(name="customDomainCertificateArn", flag="unknown_customDomainCertificateArn")
    private String value_customDomainCertificateArn;
    private boolean unknown_customDomainCertificateArn;
    public String customDomainCertificateArn() {
        if (!unknown_customDomainCertificateArn) return value_customDomainCertificateArn;
        throw new UndeferrableValueException("Value 'CustomDomainAssociation.customDomainCertificateArn' is not present");
    }

    /**
     * Expiration time for the certificate.
     * 
     */
    @PolicyResourceProperty(name="customDomainCertificateExpiryTime", flag="unknown_customDomainCertificateExpiryTime")
    private String value_customDomainCertificateExpiryTime;
    private boolean unknown_customDomainCertificateExpiryTime;
    public String customDomainCertificateExpiryTime() {
        if (!unknown_customDomainCertificateExpiryTime) return value_customDomainCertificateExpiryTime;
        throw new UndeferrableValueException("Value 'CustomDomainAssociation.customDomainCertificateExpiryTime' is not present");
    }

    /**
     * Custom domain to associate with the workgroup.
     * 
     */
    @PolicyResourceProperty(name="customDomainName", flag="unknown_customDomainName")
    private String value_customDomainName;
    private boolean unknown_customDomainName;
    public String customDomainName() {
        if (!unknown_customDomainName) return value_customDomainName;
        throw new UndeferrableValueException("Value 'CustomDomainAssociation.customDomainName' is not present");
    }

    /**
     * Name of the workgroup.
     * 
     */
    @PolicyResourceProperty(name="workgroupName", flag="unknown_workgroupName")
    private String value_workgroupName;
    private boolean unknown_workgroupName;
    public String workgroupName() {
        if (!unknown_workgroupName) return value_workgroupName;
        throw new UndeferrableValueException("Value 'CustomDomainAssociation.workgroupName' is not present");
    }

}
