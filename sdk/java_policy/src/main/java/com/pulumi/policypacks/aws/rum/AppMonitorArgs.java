// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.rum;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.rum.inputs.AppMonitorAppMonitorConfigurationArgs;
import com.pulumi.policypacks.aws.rum.inputs.AppMonitorCustomEventsArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:rum/appMonitor:AppMonitor")
public final class AppMonitorArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * configuration data for the app monitor. See app_monitor_configuration below.
     * 
     */
    private UndeferrableValue<AppMonitorAppMonitorConfigurationArgs> appMonitorConfiguration;

    public AppMonitorAppMonitorConfigurationArgs appMonitorConfiguration() {
        if (appMonitorConfiguration == null) return null;
        return appMonitorConfiguration.getValue("AppMonitorArgs.appMonitorConfiguration");
    }

    /**
     * Specifies whether this app monitor allows the web client to define and send custom events. If you omit this parameter, custom events are `DISABLED`. See custom_events below.
     * 
     */
    private UndeferrableValue<AppMonitorCustomEventsArgs> customEvents;

    public AppMonitorCustomEventsArgs customEvents() {
        if (customEvents == null) return null;
        return customEvents.getValue("AppMonitorArgs.customEvents");
    }

    /**
     * Data collected by RUM is kept by RUM for 30 days and then deleted. This parameter  specifies whether RUM sends a copy of this telemetry data to Amazon CloudWatch Logs in your account. This enables you to keep the telemetry data for more than 30 days, but it does incur Amazon CloudWatch Logs charges. Default value is `false`.
     * 
     */
    private UndeferrableValue<Boolean> cwLogEnabled;

    public Boolean cwLogEnabled() {
        if (cwLogEnabled == null) return null;
        return cwLogEnabled.getValue("AppMonitorArgs.cwLogEnabled");
    }

    /**
     * The top-level internet domain name for which your application has administrative authority.
     * 
     */
    private UndeferrableValue<String> domain;

    public String domain() {
        if (domain == null) return null;
        return domain.getValue("AppMonitorArgs.domain");
    }

    /**
     * The name of the log stream.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("AppMonitorArgs.name");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("AppMonitorArgs.tags");
    }

}
