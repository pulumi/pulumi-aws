// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.datasync;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.datasync.outputs.FsxOpenZfsFileSystemProtocol;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:datasync/fsxOpenZfsFileSystem:FsxOpenZfsFileSystem")
public final class FsxOpenZfsFileSystem extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Amazon Resource Name (ARN) of the DataSync Location.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'FsxOpenZfsFileSystem.arn' is not present");
    }

    /**
     * The time that the FSx for openzfs location was created.
     * 
     */
    @PolicyResourceProperty(name="creationTime", flag="unknown_creationTime")
    private String value_creationTime;
    private boolean unknown_creationTime;
    public String creationTime() {
        if (!unknown_creationTime) return value_creationTime;
        throw new UndeferrableValueException("Value 'FsxOpenZfsFileSystem.creationTime' is not present");
    }

    /**
     * The Amazon Resource Name (ARN) for the FSx for OpenZfs file system.
     * 
     */
    @PolicyResourceProperty(name="fsxFilesystemArn", flag="unknown_fsxFilesystemArn")
    private String value_fsxFilesystemArn;
    private boolean unknown_fsxFilesystemArn;
    public String fsxFilesystemArn() {
        if (!unknown_fsxFilesystemArn) return value_fsxFilesystemArn;
        throw new UndeferrableValueException("Value 'FsxOpenZfsFileSystem.fsxFilesystemArn' is not present");
    }

    /**
     * The type of protocol that DataSync uses to access your file system. See below.
     * 
     */
    @PolicyResourceProperty(name="protocol", flag="unknown_protocol")
    private FsxOpenZfsFileSystemProtocol value_protocol;
    private boolean unknown_protocol;
    public FsxOpenZfsFileSystemProtocol protocol() {
        if (!unknown_protocol) return value_protocol;
        throw new UndeferrableValueException("Value 'FsxOpenZfsFileSystem.protocol' is not present");
    }

    /**
     * The Amazon Resource Names (ARNs) of the security groups that are to use to configure the FSx for openzfs file system.
     * 
     */
    @PolicyResourceProperty(name="securityGroupArns", flag="unknown_securityGroupArns")
    private List<String> value_securityGroupArns;
    private boolean unknown_securityGroupArns;
    public List<String> securityGroupArns() {
        if (!unknown_securityGroupArns) return value_securityGroupArns;
        throw new UndeferrableValueException("Value 'FsxOpenZfsFileSystem.securityGroupArns' is not present");
    }

    /**
     * Subdirectory to perform actions as source or destination. Must start with `/fsx`.
     * 
     */
    @PolicyResourceProperty(name="subdirectory", flag="unknown_subdirectory")
    private String value_subdirectory;
    private boolean unknown_subdirectory;
    public String subdirectory() {
        if (!unknown_subdirectory) return value_subdirectory;
        throw new UndeferrableValueException("Value 'FsxOpenZfsFileSystem.subdirectory' is not present");
    }

    /**
     * Key-value pairs of resource tags to assign to the DataSync Location. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'FsxOpenZfsFileSystem.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'FsxOpenZfsFileSystem.tagsAll' is not present");
    }

    /**
     * The URL of the FSx for openzfs location that was described.
     * 
     */
    @PolicyResourceProperty(name="uri", flag="unknown_uri")
    private String value_uri;
    private boolean unknown_uri;
    public String uri() {
        if (!unknown_uri) return value_uri;
        throw new UndeferrableValueException("Value 'FsxOpenZfsFileSystem.uri' is not present");
    }

}
