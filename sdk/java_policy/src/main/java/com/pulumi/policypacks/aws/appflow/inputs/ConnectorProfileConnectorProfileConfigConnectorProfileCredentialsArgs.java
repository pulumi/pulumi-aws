// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appflow.inputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskArgs;
import javax.annotation.Nullable;


public final class ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs {

    /**
     * The connector-specific credentials required when using Amplitude. See Amplitude Connector Profile Credentials for more details.
     * 
     */
    private UndeferrableValue<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeArgs> amplitude;

    public ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeArgs amplitude() {
        if (amplitude == null) return null;
        return amplitude.getValue("ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs.amplitude");
    }

    /**
     * The connector-specific profile credentials required when using the custom connector. See Custom Connector Profile Credentials for more details.
     * 
     */
    private UndeferrableValue<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorArgs> customConnector;

    public ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorArgs customConnector() {
        if (customConnector == null) return null;
        return customConnector.getValue("ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs.customConnector");
    }

    /**
     * Connector-specific credentials required when using Datadog. See Datadog Connector Profile Credentials for more details.
     * 
     */
    private UndeferrableValue<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogArgs> datadog;

    public ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogArgs datadog() {
        if (datadog == null) return null;
        return datadog.getValue("ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs.datadog");
    }

    /**
     * The connector-specific credentials required when using Dynatrace. See Dynatrace Connector Profile Credentials for more details.
     * 
     */
    private UndeferrableValue<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceArgs> dynatrace;

    public ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceArgs dynatrace() {
        if (dynatrace == null) return null;
        return dynatrace.getValue("ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs.dynatrace");
    }

    /**
     * The connector-specific credentials required when using Google Analytics. See Google Analytics Connector Profile Credentials for more details.
     * 
     */
    private UndeferrableValue<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsArgs> googleAnalytics;

    public ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsArgs googleAnalytics() {
        if (googleAnalytics == null) return null;
        return googleAnalytics.getValue("ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs.googleAnalytics");
    }

    /**
     * The connector-specific credentials required when using Amazon Honeycode. See Honeycode Connector Profile Credentials for more details.
     * 
     */
    private UndeferrableValue<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeArgs> honeycode;

    public ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeArgs honeycode() {
        if (honeycode == null) return null;
        return honeycode.getValue("ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs.honeycode");
    }

    /**
     * The connector-specific credentials required when using Infor Nexus. See Infor Nexus Connector Profile Credentials for more details.
     * 
     */
    private UndeferrableValue<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusArgs> inforNexus;

    public ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusArgs inforNexus() {
        if (inforNexus == null) return null;
        return inforNexus.getValue("ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs.inforNexus");
    }

    /**
     * Connector-specific credentials required when using Marketo. See Marketo Connector Profile Credentials for more details.
     * 
     */
    private UndeferrableValue<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoArgs> marketo;

    public ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoArgs marketo() {
        if (marketo == null) return null;
        return marketo.getValue("ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs.marketo");
    }

    /**
     * Connector-specific credentials required when using Amazon Redshift. See Redshift Connector Profile Credentials for more details.
     * 
     */
    private UndeferrableValue<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftArgs> redshift;

    public ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftArgs redshift() {
        if (redshift == null) return null;
        return redshift.getValue("ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs.redshift");
    }

    /**
     * The connector-specific credentials required when using Salesforce. See Salesforce Connector Profile Credentials for more details.
     * 
     */
    private UndeferrableValue<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceArgs> salesforce;

    public ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceArgs salesforce() {
        if (salesforce == null) return null;
        return salesforce.getValue("ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs.salesforce");
    }

    /**
     * The connector-specific credentials required when using SAPOData. See SAPOData Connector Profile Credentials for more details.
     * 
     */
    private UndeferrableValue<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataArgs> sapoData;

    public ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataArgs sapoData() {
        if (sapoData == null) return null;
        return sapoData.getValue("ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs.sapoData");
    }

    /**
     * The connector-specific credentials required when using ServiceNow. See ServiceNow Connector Profile Credentials for more details.
     * 
     */
    private UndeferrableValue<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowArgs> serviceNow;

    public ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowArgs serviceNow() {
        if (serviceNow == null) return null;
        return serviceNow.getValue("ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs.serviceNow");
    }

    /**
     * Connector-specific credentials required when using Singular. See Singular Connector Profile Credentials for more details.
     * 
     */
    private UndeferrableValue<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularArgs> singular;

    public ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularArgs singular() {
        if (singular == null) return null;
        return singular.getValue("ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs.singular");
    }

    /**
     * Connector-specific credentials required when using Slack. See Slack Connector Profile Credentials for more details.
     * 
     */
    private UndeferrableValue<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackArgs> slack;

    public ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackArgs slack() {
        if (slack == null) return null;
        return slack.getValue("ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs.slack");
    }

    /**
     * The connector-specific credentials required when using Snowflake. See Snowflake Connector Profile Credentials for more details.
     * 
     */
    private UndeferrableValue<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeArgs> snowflake;

    public ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeArgs snowflake() {
        if (snowflake == null) return null;
        return snowflake.getValue("ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs.snowflake");
    }

    /**
     * The connector-specific credentials required when using Trend Micro. See Trend Micro Connector Profile Credentials for more details.
     * 
     */
    private UndeferrableValue<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroArgs> trendmicro;

    public ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroArgs trendmicro() {
        if (trendmicro == null) return null;
        return trendmicro.getValue("ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs.trendmicro");
    }

    /**
     * Connector-specific credentials required when using Veeva. See Veeva Connector Profile Credentials for more details.
     * 
     */
    private UndeferrableValue<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaArgs> veeva;

    public ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaArgs veeva() {
        if (veeva == null) return null;
        return veeva.getValue("ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs.veeva");
    }

    /**
     * Connector-specific credentials required when using Zendesk. See Zendesk Connector Profile Credentials for more details.
     * 
     */
    private UndeferrableValue<ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskArgs> zendesk;

    public ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskArgs zendesk() {
        if (zendesk == null) return null;
        return zendesk.getValue("ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs.zendesk");
    }

}
