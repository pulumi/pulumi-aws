// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appflow.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaArgs;
import com.pulumi.policypacks.aws.appflow.inputs.ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskArgs;
import javax.annotation.Nullable;


public final class ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs {

    /**
     * The connector-specific credentials required when using Amplitude. See Amplitude Connector Profile Credentials for more details.
     * 
     */
    @PolicyResourceProperty(name="amplitude", flag="unknown_amplitude")
    private ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeArgs value_amplitude;
    private boolean unknown_amplitude;
    public ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsAmplitudeArgs amplitude() {
        if (!unknown_amplitude) return value_amplitude;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs.amplitude' is not present");
    }

    /**
     * The connector-specific profile credentials required when using the custom connector. See Custom Connector Profile Credentials for more details.
     * 
     */
    @PolicyResourceProperty(name="customConnector", flag="unknown_customConnector")
    private ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorArgs value_customConnector;
    private boolean unknown_customConnector;
    public ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsCustomConnectorArgs customConnector() {
        if (!unknown_customConnector) return value_customConnector;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs.customConnector' is not present");
    }

    /**
     * Connector-specific credentials required when using Datadog. See Datadog Connector Profile Credentials for more details.
     * 
     */
    @PolicyResourceProperty(name="datadog", flag="unknown_datadog")
    private ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogArgs value_datadog;
    private boolean unknown_datadog;
    public ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDatadogArgs datadog() {
        if (!unknown_datadog) return value_datadog;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs.datadog' is not present");
    }

    /**
     * The connector-specific credentials required when using Dynatrace. See Dynatrace Connector Profile Credentials for more details.
     * 
     */
    @PolicyResourceProperty(name="dynatrace", flag="unknown_dynatrace")
    private ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceArgs value_dynatrace;
    private boolean unknown_dynatrace;
    public ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsDynatraceArgs dynatrace() {
        if (!unknown_dynatrace) return value_dynatrace;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs.dynatrace' is not present");
    }

    /**
     * The connector-specific credentials required when using Google Analytics. See Google Analytics Connector Profile Credentials for more details.
     * 
     */
    @PolicyResourceProperty(name="googleAnalytics", flag="unknown_googleAnalytics")
    private ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsArgs value_googleAnalytics;
    private boolean unknown_googleAnalytics;
    public ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsGoogleAnalyticsArgs googleAnalytics() {
        if (!unknown_googleAnalytics) return value_googleAnalytics;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs.googleAnalytics' is not present");
    }

    /**
     * The connector-specific credentials required when using Amazon Honeycode. See Honeycode Connector Profile Credentials for more details.
     * 
     */
    @PolicyResourceProperty(name="honeycode", flag="unknown_honeycode")
    private ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeArgs value_honeycode;
    private boolean unknown_honeycode;
    public ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsHoneycodeArgs honeycode() {
        if (!unknown_honeycode) return value_honeycode;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs.honeycode' is not present");
    }

    /**
     * The connector-specific credentials required when using Infor Nexus. See Infor Nexus Connector Profile Credentials for more details.
     * 
     */
    @PolicyResourceProperty(name="inforNexus", flag="unknown_inforNexus")
    private ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusArgs value_inforNexus;
    private boolean unknown_inforNexus;
    public ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsInforNexusArgs inforNexus() {
        if (!unknown_inforNexus) return value_inforNexus;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs.inforNexus' is not present");
    }

    /**
     * Connector-specific credentials required when using Marketo. See Marketo Connector Profile Credentials for more details.
     * 
     */
    @PolicyResourceProperty(name="marketo", flag="unknown_marketo")
    private ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoArgs value_marketo;
    private boolean unknown_marketo;
    public ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsMarketoArgs marketo() {
        if (!unknown_marketo) return value_marketo;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs.marketo' is not present");
    }

    /**
     * Connector-specific credentials required when using Amazon Redshift. See Redshift Connector Profile Credentials for more details.
     * 
     */
    @PolicyResourceProperty(name="redshift", flag="unknown_redshift")
    private ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftArgs value_redshift;
    private boolean unknown_redshift;
    public ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsRedshiftArgs redshift() {
        if (!unknown_redshift) return value_redshift;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs.redshift' is not present");
    }

    /**
     * The connector-specific credentials required when using Salesforce. See Salesforce Connector Profile Credentials for more details.
     * 
     */
    @PolicyResourceProperty(name="salesforce", flag="unknown_salesforce")
    private ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceArgs value_salesforce;
    private boolean unknown_salesforce;
    public ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSalesforceArgs salesforce() {
        if (!unknown_salesforce) return value_salesforce;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs.salesforce' is not present");
    }

    /**
     * The connector-specific credentials required when using SAPOData. See SAPOData Connector Profile Credentials for more details.
     * 
     */
    @PolicyResourceProperty(name="sapoData", flag="unknown_sapoData")
    private ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataArgs value_sapoData;
    private boolean unknown_sapoData;
    public ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSapoDataArgs sapoData() {
        if (!unknown_sapoData) return value_sapoData;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs.sapoData' is not present");
    }

    /**
     * The connector-specific credentials required when using ServiceNow. See ServiceNow Connector Profile Credentials for more details.
     * 
     */
    @PolicyResourceProperty(name="serviceNow", flag="unknown_serviceNow")
    private ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowArgs value_serviceNow;
    private boolean unknown_serviceNow;
    public ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsServiceNowArgs serviceNow() {
        if (!unknown_serviceNow) return value_serviceNow;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs.serviceNow' is not present");
    }

    /**
     * Connector-specific credentials required when using Singular. See Singular Connector Profile Credentials for more details.
     * 
     */
    @PolicyResourceProperty(name="singular", flag="unknown_singular")
    private ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularArgs value_singular;
    private boolean unknown_singular;
    public ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSingularArgs singular() {
        if (!unknown_singular) return value_singular;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs.singular' is not present");
    }

    /**
     * Connector-specific credentials required when using Slack. See Slack Connector Profile Credentials for more details.
     * 
     */
    @PolicyResourceProperty(name="slack", flag="unknown_slack")
    private ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackArgs value_slack;
    private boolean unknown_slack;
    public ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSlackArgs slack() {
        if (!unknown_slack) return value_slack;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs.slack' is not present");
    }

    /**
     * The connector-specific credentials required when using Snowflake. See Snowflake Connector Profile Credentials for more details.
     * 
     */
    @PolicyResourceProperty(name="snowflake", flag="unknown_snowflake")
    private ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeArgs value_snowflake;
    private boolean unknown_snowflake;
    public ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsSnowflakeArgs snowflake() {
        if (!unknown_snowflake) return value_snowflake;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs.snowflake' is not present");
    }

    /**
     * The connector-specific credentials required when using Trend Micro. See Trend Micro Connector Profile Credentials for more details.
     * 
     */
    @PolicyResourceProperty(name="trendmicro", flag="unknown_trendmicro")
    private ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroArgs value_trendmicro;
    private boolean unknown_trendmicro;
    public ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsTrendmicroArgs trendmicro() {
        if (!unknown_trendmicro) return value_trendmicro;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs.trendmicro' is not present");
    }

    /**
     * Connector-specific credentials required when using Veeva. See Veeva Connector Profile Credentials for more details.
     * 
     */
    @PolicyResourceProperty(name="veeva", flag="unknown_veeva")
    private ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaArgs value_veeva;
    private boolean unknown_veeva;
    public ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsVeevaArgs veeva() {
        if (!unknown_veeva) return value_veeva;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs.veeva' is not present");
    }

    /**
     * Connector-specific credentials required when using Zendesk. See Zendesk Connector Profile Credentials for more details.
     * 
     */
    @PolicyResourceProperty(name="zendesk", flag="unknown_zendesk")
    private ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskArgs value_zendesk;
    private boolean unknown_zendesk;
    public ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsZendeskArgs zendesk() {
        if (!unknown_zendesk) return value_zendesk;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfileCredentialsArgs.zendesk' is not present");
    }

}
