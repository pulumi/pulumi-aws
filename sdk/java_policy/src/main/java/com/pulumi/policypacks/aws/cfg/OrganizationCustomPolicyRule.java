// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.cfg;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:cfg/organizationCustomPolicyRule:OrganizationCustomPolicyRule")
public final class OrganizationCustomPolicyRule extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Amazon Resource Name (ARN) of the rule
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'OrganizationCustomPolicyRule.arn' is not present");
    }

    /**
     * List of AWS account identifiers to exclude from the rule
     * 
     */
    @PolicyResourceProperty(name="debugLogDeliveryAccounts", flag="unknown_debugLogDeliveryAccounts")
    private @Nullable List<String> value_debugLogDeliveryAccounts;
    private boolean unknown_debugLogDeliveryAccounts;
    public @Nullable List<String> debugLogDeliveryAccounts() {
        if (!unknown_debugLogDeliveryAccounts) return value_debugLogDeliveryAccounts;
        throw new UndeferrableValueException("Value 'OrganizationCustomPolicyRule.debugLogDeliveryAccounts' is not present");
    }

    /**
     * Description of the rule
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private @Nullable String value_description;
    private boolean unknown_description;
    public @Nullable String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'OrganizationCustomPolicyRule.description' is not present");
    }

    /**
     * List of AWS account identifiers to exclude from the rule
     * 
     */
    @PolicyResourceProperty(name="excludedAccounts", flag="unknown_excludedAccounts")
    private @Nullable List<String> value_excludedAccounts;
    private boolean unknown_excludedAccounts;
    public @Nullable List<String> excludedAccounts() {
        if (!unknown_excludedAccounts) return value_excludedAccounts;
        throw new UndeferrableValueException("Value 'OrganizationCustomPolicyRule.excludedAccounts' is not present");
    }

    /**
     * A string in JSON format that is passed to the AWS Config Rule Lambda Function
     * 
     */
    @PolicyResourceProperty(name="inputParameters", flag="unknown_inputParameters")
    private @Nullable String value_inputParameters;
    private boolean unknown_inputParameters;
    public @Nullable String inputParameters() {
        if (!unknown_inputParameters) return value_inputParameters;
        throw new UndeferrableValueException("Value 'OrganizationCustomPolicyRule.inputParameters' is not present");
    }

    /**
     * Maximum frequency with which AWS Config runs evaluations for a rule, if the rule is triggered at a periodic frequency. Defaults to `TwentyFour_Hours` for periodic frequency triggered rules. Valid values: `One_Hour`, `Three_Hours`, `Six_Hours`, `Twelve_Hours`, or `TwentyFour_Hours`.
     * 
     */
    @PolicyResourceProperty(name="maximumExecutionFrequency", flag="unknown_maximumExecutionFrequency")
    private @Nullable String value_maximumExecutionFrequency;
    private boolean unknown_maximumExecutionFrequency;
    public @Nullable String maximumExecutionFrequency() {
        if (!unknown_maximumExecutionFrequency) return value_maximumExecutionFrequency;
        throw new UndeferrableValueException("Value 'OrganizationCustomPolicyRule.maximumExecutionFrequency' is not present");
    }

    /**
     * name of the rule
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'OrganizationCustomPolicyRule.name' is not present");
    }

    /**
     * runtime system for your organization AWS Config Custom Policy rules
     * 
     */
    @PolicyResourceProperty(name="policyRuntime", flag="unknown_policyRuntime")
    private String value_policyRuntime;
    private boolean unknown_policyRuntime;
    public String policyRuntime() {
        if (!unknown_policyRuntime) return value_policyRuntime;
        throw new UndeferrableValueException("Value 'OrganizationCustomPolicyRule.policyRuntime' is not present");
    }

    /**
     * policy definition containing the logic for your organization AWS Config Custom Policy rule
     * 
     */
    @PolicyResourceProperty(name="policyText", flag="unknown_policyText")
    private String value_policyText;
    private boolean unknown_policyText;
    public String policyText() {
        if (!unknown_policyText) return value_policyText;
        throw new UndeferrableValueException("Value 'OrganizationCustomPolicyRule.policyText' is not present");
    }

    /**
     * Identifier of the AWS resource to evaluate
     * 
     */
    @PolicyResourceProperty(name="resourceIdScope", flag="unknown_resourceIdScope")
    private @Nullable String value_resourceIdScope;
    private boolean unknown_resourceIdScope;
    public @Nullable String resourceIdScope() {
        if (!unknown_resourceIdScope) return value_resourceIdScope;
        throw new UndeferrableValueException("Value 'OrganizationCustomPolicyRule.resourceIdScope' is not present");
    }

    /**
     * List of types of AWS resources to evaluate
     * 
     */
    @PolicyResourceProperty(name="resourceTypesScopes", flag="unknown_resourceTypesScopes")
    private @Nullable List<String> value_resourceTypesScopes;
    private boolean unknown_resourceTypesScopes;
    public @Nullable List<String> resourceTypesScopes() {
        if (!unknown_resourceTypesScopes) return value_resourceTypesScopes;
        throw new UndeferrableValueException("Value 'OrganizationCustomPolicyRule.resourceTypesScopes' is not present");
    }

    /**
     * Tag key of AWS resources to evaluate
     * 
     */
    @PolicyResourceProperty(name="tagKeyScope", flag="unknown_tagKeyScope")
    private @Nullable String value_tagKeyScope;
    private boolean unknown_tagKeyScope;
    public @Nullable String tagKeyScope() {
        if (!unknown_tagKeyScope) return value_tagKeyScope;
        throw new UndeferrableValueException("Value 'OrganizationCustomPolicyRule.tagKeyScope' is not present");
    }

    /**
     * Tag value of AWS resources to evaluate
     * 
     */
    @PolicyResourceProperty(name="tagValueScope", flag="unknown_tagValueScope")
    private @Nullable String value_tagValueScope;
    private boolean unknown_tagValueScope;
    public @Nullable String tagValueScope() {
        if (!unknown_tagValueScope) return value_tagValueScope;
        throw new UndeferrableValueException("Value 'OrganizationCustomPolicyRule.tagValueScope' is not present");
    }

    /**
     * List of notification types that trigger AWS Config to run an evaluation for the rule. Valid values: `ConfigurationItemChangeNotification`, `OversizedConfigurationItemChangeNotification`
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="triggerTypes", flag="unknown_triggerTypes")
    private List<String> value_triggerTypes;
    private boolean unknown_triggerTypes;
    public List<String> triggerTypes() {
        if (!unknown_triggerTypes) return value_triggerTypes;
        throw new UndeferrableValueException("Value 'OrganizationCustomPolicyRule.triggerTypes' is not present");
    }

}
