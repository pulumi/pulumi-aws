// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.route53;

import com.pulumi.policypacks.aws.route53.RecordsExclusiveResourceRecordSetAliasTarget;
import com.pulumi.policypacks.aws.route53.RecordsExclusiveResourceRecordSetCidrRoutingConfig;
import com.pulumi.policypacks.aws.route53.RecordsExclusiveResourceRecordSetGeolocation;
import com.pulumi.policypacks.aws.route53.RecordsExclusiveResourceRecordSetGeoproximityLocation;
import com.pulumi.policypacks.aws.route53.RecordsExclusiveResourceRecordSetResourceRecord;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;


public final class RecordsExclusiveResourceRecordSet {

    /**
     * Alias target block.
     * See `alias_target` below.
     * 
     */
    public RecordsExclusiveResourceRecordSetAliasTarget aliasTarget;



    public RecordsExclusiveResourceRecordSetCidrRoutingConfig cidrRoutingConfig;



    /**
     * Type of failover resource record.
     * Valid values are `PRIMARY` and `SECONDARY`.
     * See the [AWS documentation on DNS failover](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html) for additional details.
     * 
     */
    public String failover;



    /**
     * Geolocation block to control how Amazon Route 53 responds to DNS queries based on the geographic origin of the query.
     * See `geolocation` below.
     * 
     */
    public RecordsExclusiveResourceRecordSetGeolocation geolocation;



    /**
     * Geoproximity location block.
     * See `geoproximity_location` below.
     * 
     */
    public RecordsExclusiveResourceRecordSetGeoproximityLocation geoproximityLocation;



    /**
     * Health check the record should be associated with.
     * 
     */
    public String healthCheckId;



    public Boolean multiValueAnswer;



    /**
     * Name of the record.
     * 
     */
    public String name;



    /**
     * AWS region of the resource this record set refers to.
     * Must be a valid AWS region name.
     * See the [AWS documentation](http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-policy.html#routing-policy-latency) on latency based routing for additional details.
     * 
     */
    public String region;



    /**
     * Information about the resource records to act upon.
     * See `resource_records` below.
     * 
     */
    public List<RecordsExclusiveResourceRecordSetResourceRecord> resourceRecords;



    /**
     * An identifier that differentiates among multiple resource record sets that have the same combination of name and type.
     * Required if using `cidr_routing_config`, `failover`, `geolocation`,`geoproximity_location`, `multivalue_answer`, `region`, or `weight`.
     * 
     */
    public String setIdentifier;



    public String trafficPolicyInstanceId;



    /**
     * Resource record cache time to live (TTL), in seconds.
     * 
     */
    public Integer ttl;



    /**
     * Record type.
     * Valid values are `A`, `AAAA`, `CAA`, `CNAME`, `DS`, `MX`, `NAPTR`, `NS`, `PTR`, `SOA`, `SPF`, `SRV`, `TXT`, `TLSA`, `SSHFP`, `SVCB`, and `HTTPS`.
     * 
     * The following arguments are optional:
     * 
     * &gt; Exactly one of `resource_records` or `alias_target` must be specified.
     * 
     */
    public String type;



    /**
     * Among resource record sets that have the same combination of DNS name and type, a value that determines the proportion of DNS queries that Amazon Route 53 responds to using the current resource record set.
     * 
     */
    public Integer weight;



}
