// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.ec2.VpcPeeringConnectionAccepter;
import com.pulumi.policypacks.aws.ec2.VpcPeeringConnectionRequester;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;


@PolicyResourceType(type="aws:ec2/vpcPeeringConnection:VpcPeeringConnection")
public final class VpcPeeringConnection extends com.pulumi.resources.PolicyResource {

    /**
     * The status of the VPC Peering Connection request.
     * 
     */
    public String acceptStatus;



    /**
     * An optional configuration block that allows for [VPC Peering Connection](https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html) options to be set for the VPC that accepts
     * the peering connection (a maximum of one).
     * 
     */
    public VpcPeeringConnectionAccepter accepter;



    /**
     * Accept the peering (both VPCs need to be in the same AWS account and region).
     * 
     */
    public Boolean autoAccept;



    /**
     * The AWS account ID of the target peer VPC.
     * Defaults to the account ID the [AWS provider][1] is currently connected to, so must be managed if connecting cross-account.
     * 
     */
    public String peerOwnerId;



    /**
     * The region of the accepter VPC of the VPC Peering Connection. `auto_accept` must be `false`,
     * and use the `aws.ec2.VpcPeeringConnectionAccepter` to manage the accepter side.
     * 
     */
    public String peerRegion;



    /**
     * The ID of the target VPC with which you are creating the VPC Peering Connection.
     * 
     */
    public String peerVpcId;



    /**
     * A optional configuration block that allows for [VPC Peering Connection](https://docs.aws.amazon.com/vpc/latest/peering/what-is-vpc-peering.html) options to be set for the VPC that requests
     * the peering connection (a maximum of one).
     * 
     */
    public VpcPeeringConnectionRequester requester;



    /**
     * A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



    /**
     * The ID of the requester VPC.
     * 
     */
    public String vpcId;



}
