// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.gamelift;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.gamelift.inputs.FleetCertificateConfigurationArgs;
import com.pulumi.policypacks.aws.gamelift.inputs.FleetEc2InboundPermissionArgs;
import com.pulumi.policypacks.aws.gamelift.inputs.FleetResourceCreationLimitPolicyArgs;
import com.pulumi.policypacks.aws.gamelift.inputs.FleetRuntimeConfigurationArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:gamelift/fleet:Fleet")
public final class FleetArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * ID of the GameLift Build to be deployed on the fleet.
     * 
     */
    private UndeferrableValue<String> buildId;

    public String buildId() {
        if (buildId == null) return null;
        return buildId.getValue("FleetArgs.buildId");
    }

    /**
     * Prompts GameLift to generate a TLS/SSL certificate for the fleet. See certificate_configuration.
     * 
     */
    private UndeferrableValue<FleetCertificateConfigurationArgs> certificateConfiguration;

    public FleetCertificateConfigurationArgs certificateConfiguration() {
        if (certificateConfiguration == null) return null;
        return certificateConfiguration.getValue("FleetArgs.certificateConfiguration");
    }

    /**
     * Human-readable description of the fleet.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("FleetArgs.description");
    }

    /**
     * Range of IP addresses and port settings that permit inbound traffic to access server processes running on the fleet. See below.
     * 
     */
    private UndeferrableValue<List<FleetEc2InboundPermissionArgs>> ec2InboundPermissions;

    public List<FleetEc2InboundPermissionArgs> ec2InboundPermissions() {
        if (ec2InboundPermissions == null) return null;
        return ec2InboundPermissions.getValue("FleetArgs.ec2InboundPermissions");
    }

    /**
     * Name of an EC2 instance typeE.g., `t2.micro`
     * 
     */
    private UndeferrableValue<String> ec2InstanceType;

    public String ec2InstanceType() {
        if (ec2InstanceType == null) return null;
        return ec2InstanceType.getValue("FleetArgs.ec2InstanceType");
    }

    /**
     * Type of fleet. This value must be `ON_DEMAND` or `SPOT`. Defaults to `ON_DEMAND`.
     * 
     */
    private UndeferrableValue<String> fleetType;

    public String fleetType() {
        if (fleetType == null) return null;
        return fleetType.getValue("FleetArgs.fleetType");
    }

    /**
     * ARN of an IAM role that instances in the fleet can assume.
     * 
     */
    private UndeferrableValue<String> instanceRoleArn;

    public String instanceRoleArn() {
        if (instanceRoleArn == null) return null;
        return instanceRoleArn.getValue("FleetArgs.instanceRoleArn");
    }

    /**
     * List of names of metric groups to add this fleet to. A metric group tracks metrics across all fleets in the group. Defaults to `default`.
     * 
     */
    private UndeferrableValue<List<String>> metricGroups;

    public List<String> metricGroups() {
        if (metricGroups == null) return null;
        return metricGroups.getValue("FleetArgs.metricGroups");
    }

    /**
     * The name of the fleet.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("FleetArgs.name");
    }

    /**
     * Game session protection policy to apply to all instances in this fleetE.g., `FullProtection`. Defaults to `NoProtection`.
     * 
     */
    private UndeferrableValue<String> newGameSessionProtectionPolicy;

    public String newGameSessionProtectionPolicy() {
        if (newGameSessionProtectionPolicy == null) return null;
        return newGameSessionProtectionPolicy.getValue("FleetArgs.newGameSessionProtectionPolicy");
    }

    /**
     * Policy that limits the number of game sessions an individual player can create over a span of time for this fleet. See below.
     * 
     */
    private UndeferrableValue<FleetResourceCreationLimitPolicyArgs> resourceCreationLimitPolicy;

    public FleetResourceCreationLimitPolicyArgs resourceCreationLimitPolicy() {
        if (resourceCreationLimitPolicy == null) return null;
        return resourceCreationLimitPolicy.getValue("FleetArgs.resourceCreationLimitPolicy");
    }

    /**
     * Instructions for launching server processes on each instance in the fleet. See below.
     * 
     */
    private UndeferrableValue<FleetRuntimeConfigurationArgs> runtimeConfiguration;

    public FleetRuntimeConfigurationArgs runtimeConfiguration() {
        if (runtimeConfiguration == null) return null;
        return runtimeConfiguration.getValue("FleetArgs.runtimeConfiguration");
    }

    /**
     * ID of the GameLift Script to be deployed on the fleet.
     * 
     */
    private UndeferrableValue<String> scriptId;

    public String scriptId() {
        if (scriptId == null) return null;
        return scriptId.getValue("FleetArgs.scriptId");
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("FleetArgs.tags");
    }

}
