// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.eks.inputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


public final class IdentityProviderConfigOidcArgs {

    /**
     * Client ID for the OpenID Connect identity provider.
     * 
     */
    private UndeferrableValue<String> clientId;

    public String clientId() {
        if (clientId == null) return null;
        return clientId.getValue("IdentityProviderConfigOidcArgs.clientId");
    }

    /**
     * The JWT claim that the provider will use to return groups.
     * 
     */
    private UndeferrableValue<String> groupsClaim;

    public String groupsClaim() {
        if (groupsClaim == null) return null;
        return groupsClaim.getValue("IdentityProviderConfigOidcArgs.groupsClaim");
    }

    /**
     * A prefix that is prepended to group claims e.g., `oidc:`.
     * 
     */
    private UndeferrableValue<String> groupsPrefix;

    public String groupsPrefix() {
        if (groupsPrefix == null) return null;
        return groupsPrefix.getValue("IdentityProviderConfigOidcArgs.groupsPrefix");
    }

    /**
     * The name of the identity provider config.
     * 
     */
    private UndeferrableValue<String> identityProviderConfigName;

    public String identityProviderConfigName() {
        if (identityProviderConfigName == null) return null;
        return identityProviderConfigName.getValue("IdentityProviderConfigOidcArgs.identityProviderConfigName");
    }

    /**
     * Issuer URL for the OpenID Connect identity provider.
     * 
     */
    private UndeferrableValue<String> issuerUrl;

    public String issuerUrl() {
        if (issuerUrl == null) return null;
        return issuerUrl.getValue("IdentityProviderConfigOidcArgs.issuerUrl");
    }

    /**
     * The key value pairs that describe required claims in the identity token.
     * 
     */
    private UndeferrableValue<Map<String,String>> requiredClaims;

    public Map<String,String> requiredClaims() {
        if (requiredClaims == null) return null;
        return requiredClaims.getValue("IdentityProviderConfigOidcArgs.requiredClaims");
    }

    /**
     * The JWT claim that the provider will use as the username.
     * 
     */
    private UndeferrableValue<String> usernameClaim;

    public String usernameClaim() {
        if (usernameClaim == null) return null;
        return usernameClaim.getValue("IdentityProviderConfigOidcArgs.usernameClaim");
    }

    /**
     * A prefix that is prepended to username claims.
     * 
     */
    private UndeferrableValue<String> usernamePrefix;

    public String usernamePrefix() {
        if (usernamePrefix == null) return null;
        return usernamePrefix.getValue("IdentityProviderConfigOidcArgs.usernamePrefix");
    }

}
