// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.sqs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:sqs/queue:Queue")
public final class Queue extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * ARN of the SQS queue.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'Queue.arn' is not present");
    }

    /**
     * Enables content-based deduplication for FIFO queues. For more information, see the [related documentation](http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/FIFO-queues.html#FIFO-queues-exactly-once-processing).
     * 
     */
    @PolicyResourceProperty(name="contentBasedDeduplication", flag="unknown_contentBasedDeduplication")
    private @Nullable Boolean value_contentBasedDeduplication;
    private boolean unknown_contentBasedDeduplication;
    public @Nullable Boolean contentBasedDeduplication() {
        if (!unknown_contentBasedDeduplication) return value_contentBasedDeduplication;
        throw new UndeferrableValueException("Value 'Queue.contentBasedDeduplication' is not present");
    }

    /**
     * Specifies whether message deduplication occurs at the message group or queue level. Valid values are `messageGroup` and `queue` (default).
     * 
     */
    @PolicyResourceProperty(name="deduplicationScope", flag="unknown_deduplicationScope")
    private String value_deduplicationScope;
    private boolean unknown_deduplicationScope;
    public String deduplicationScope() {
        if (!unknown_deduplicationScope) return value_deduplicationScope;
        throw new UndeferrableValueException("Value 'Queue.deduplicationScope' is not present");
    }

    /**
     * Time in seconds that the delivery of all messages in the queue will be delayed. An integer from 0 to 900 (15 minutes). The default for this attribute is 0 seconds.
     * 
     */
    @PolicyResourceProperty(name="delaySeconds", flag="unknown_delaySeconds")
    private @Nullable Integer value_delaySeconds;
    private boolean unknown_delaySeconds;
    public @Nullable Integer delaySeconds() {
        if (!unknown_delaySeconds) return value_delaySeconds;
        throw new UndeferrableValueException("Value 'Queue.delaySeconds' is not present");
    }

    /**
     * Boolean designating a FIFO queue. If not set, it defaults to `false` making it standard.
     * 
     */
    @PolicyResourceProperty(name="fifoQueue", flag="unknown_fifoQueue")
    private @Nullable Boolean value_fifoQueue;
    private boolean unknown_fifoQueue;
    public @Nullable Boolean fifoQueue() {
        if (!unknown_fifoQueue) return value_fifoQueue;
        throw new UndeferrableValueException("Value 'Queue.fifoQueue' is not present");
    }

    /**
     * Specifies whether the FIFO queue throughput quota applies to the entire queue or per message group. Valid values are `perQueue` (default) and `perMessageGroupId`.
     * 
     */
    @PolicyResourceProperty(name="fifoThroughputLimit", flag="unknown_fifoThroughputLimit")
    private String value_fifoThroughputLimit;
    private boolean unknown_fifoThroughputLimit;
    public String fifoThroughputLimit() {
        if (!unknown_fifoThroughputLimit) return value_fifoThroughputLimit;
        throw new UndeferrableValueException("Value 'Queue.fifoThroughputLimit' is not present");
    }

    /**
     * Length of time, in seconds, for which Amazon SQS can reuse a data key to encrypt or decrypt messages before calling AWS KMS again. An integer representing seconds, between 60 seconds (1 minute) and 86,400 seconds (24 hours). The default is 300 (5 minutes).
     * 
     */
    @PolicyResourceProperty(name="kmsDataKeyReusePeriodSeconds", flag="unknown_kmsDataKeyReusePeriodSeconds")
    private Integer value_kmsDataKeyReusePeriodSeconds;
    private boolean unknown_kmsDataKeyReusePeriodSeconds;
    public Integer kmsDataKeyReusePeriodSeconds() {
        if (!unknown_kmsDataKeyReusePeriodSeconds) return value_kmsDataKeyReusePeriodSeconds;
        throw new UndeferrableValueException("Value 'Queue.kmsDataKeyReusePeriodSeconds' is not present");
    }

    /**
     * ID of an AWS-managed customer master key (CMK) for Amazon SQS or a custom CMK. For more information, see [Key Terms](http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-server-side-encryption.html#sqs-sse-key-terms).
     * 
     */
    @PolicyResourceProperty(name="kmsMasterKeyId", flag="unknown_kmsMasterKeyId")
    private @Nullable String value_kmsMasterKeyId;
    private boolean unknown_kmsMasterKeyId;
    public @Nullable String kmsMasterKeyId() {
        if (!unknown_kmsMasterKeyId) return value_kmsMasterKeyId;
        throw new UndeferrableValueException("Value 'Queue.kmsMasterKeyId' is not present");
    }

    /**
     * Limit of how many bytes a message can contain before Amazon SQS rejects it. An integer from 1024 bytes (1 KiB) up to 262144 bytes (256 KiB). The default for this attribute is 262144 (256 KiB).
     * 
     */
    @PolicyResourceProperty(name="maxMessageSize", flag="unknown_maxMessageSize")
    private @Nullable Integer value_maxMessageSize;
    private boolean unknown_maxMessageSize;
    public @Nullable Integer maxMessageSize() {
        if (!unknown_maxMessageSize) return value_maxMessageSize;
        throw new UndeferrableValueException("Value 'Queue.maxMessageSize' is not present");
    }

    /**
     * Number of seconds Amazon SQS retains a message. Integer representing seconds, from 60 (1 minute) to 1209600 (14 days). The default for this attribute is 345600 (4 days).
     * 
     */
    @PolicyResourceProperty(name="messageRetentionSeconds", flag="unknown_messageRetentionSeconds")
    private @Nullable Integer value_messageRetentionSeconds;
    private boolean unknown_messageRetentionSeconds;
    public @Nullable Integer messageRetentionSeconds() {
        if (!unknown_messageRetentionSeconds) return value_messageRetentionSeconds;
        throw new UndeferrableValueException("Value 'Queue.messageRetentionSeconds' is not present");
    }

    /**
     * Name of the queue. Queue names must be made up of only uppercase and lowercase ASCII letters, numbers, underscores, and hyphens, and must be between 1 and 80 characters long. For a FIFO (first-in-first-out) queue, the name must end with the `.fifo` suffix. If omitted, the provider will assign a random, unique name. Conflicts with `name_prefix`.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'Queue.name' is not present");
    }

    /**
     * Creates a unique name beginning with the specified prefix. Conflicts with `name`.
     * 
     */
    @PolicyResourceProperty(name="namePrefix", flag="unknown_namePrefix")
    private String value_namePrefix;
    private boolean unknown_namePrefix;
    public String namePrefix() {
        if (!unknown_namePrefix) return value_namePrefix;
        throw new UndeferrableValueException("Value 'Queue.namePrefix' is not present");
    }

    /**
     * JSON policy for the SQS queue. For more information about building AWS IAM policy documents see the AWS IAM Policy Document Guide. The provider will only perform drift detection of its value when present in a configuration. It is preferred to use the `aws.sqs.QueuePolicy` resource instead.
     * 
     */
    @PolicyResourceProperty(name="policy", flag="unknown_policy")
    private String value_policy;
    private boolean unknown_policy;
    public String policy() {
        if (!unknown_policy) return value_policy;
        throw new UndeferrableValueException("Value 'Queue.policy' is not present");
    }

    /**
     * Time for which a ReceiveMessage call will wait for a message to arrive (long polling) before returning. An integer from 0 to 20 (seconds). The default for this attribute is 0, meaning that the call will return immediately.
     * 
     */
    @PolicyResourceProperty(name="receiveWaitTimeSeconds", flag="unknown_receiveWaitTimeSeconds")
    private @Nullable Integer value_receiveWaitTimeSeconds;
    private boolean unknown_receiveWaitTimeSeconds;
    public @Nullable Integer receiveWaitTimeSeconds() {
        if (!unknown_receiveWaitTimeSeconds) return value_receiveWaitTimeSeconds;
        throw new UndeferrableValueException("Value 'Queue.receiveWaitTimeSeconds' is not present");
    }

    /**
     * JSON policy to set up the Dead Letter Queue redrive permission, see [AWS docs](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/SQSDeadLetterQueue.html). The provider will only perform drift detection of its value when present in a configuration. It is preferred to use the `aws.sqs.RedriveAllowPolicy` resource instead.
     * 
     */
    @PolicyResourceProperty(name="redriveAllowPolicy", flag="unknown_redriveAllowPolicy")
    private String value_redriveAllowPolicy;
    private boolean unknown_redriveAllowPolicy;
    public String redriveAllowPolicy() {
        if (!unknown_redriveAllowPolicy) return value_redriveAllowPolicy;
        throw new UndeferrableValueException("Value 'Queue.redriveAllowPolicy' is not present");
    }

    /**
     * JSON policy to set up the Dead Letter Queue, see [AWS docs](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/SQSDeadLetterQueue.html). The provider will only perform drift detection of its value when present in a configuration. It is preferred to use the `aws.sqs.RedrivePolicy` resource instead. **Note:** when specifying `maxReceiveCount`, you must specify it as an integer (`5`), and not a string (`&#34;5&#34;`).
     * 
     */
    @PolicyResourceProperty(name="redrivePolicy", flag="unknown_redrivePolicy")
    private String value_redrivePolicy;
    private boolean unknown_redrivePolicy;
    public String redrivePolicy() {
        if (!unknown_redrivePolicy) return value_redrivePolicy;
        throw new UndeferrableValueException("Value 'Queue.redrivePolicy' is not present");
    }

    /**
     * Boolean to enable server-side encryption (SSE) of message content with SQS-owned encryption keys. See [Encryption at rest](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-server-side-encryption.html). The provider will only perform drift detection of its value when present in a configuration.
     * 
     */
    @PolicyResourceProperty(name="sqsManagedSseEnabled", flag="unknown_sqsManagedSseEnabled")
    private Boolean value_sqsManagedSseEnabled;
    private boolean unknown_sqsManagedSseEnabled;
    public Boolean sqsManagedSseEnabled() {
        if (!unknown_sqsManagedSseEnabled) return value_sqsManagedSseEnabled;
        throw new UndeferrableValueException("Value 'Queue.sqsManagedSseEnabled' is not present");
    }

    /**
     * Map of tags to assign to the queue. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'Queue.tags' is not present");
    }

    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'Queue.tagsAll' is not present");
    }

    /**
     * Same as `id`: The URL for the created Amazon SQS queue.
     * 
     */
    @PolicyResourceProperty(name="url", flag="unknown_url")
    private String value_url;
    private boolean unknown_url;
    public String url() {
        if (!unknown_url) return value_url;
        throw new UndeferrableValueException("Value 'Queue.url' is not present");
    }

    /**
     * Visibility timeout for the queue. An integer from 0 to 43200 (12 hours). The default for this attribute is 30. For more information about visibility timeout, see [AWS docs](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/AboutVT.html).
     * 
     */
    @PolicyResourceProperty(name="visibilityTimeoutSeconds", flag="unknown_visibilityTimeoutSeconds")
    private @Nullable Integer value_visibilityTimeoutSeconds;
    private boolean unknown_visibilityTimeoutSeconds;
    public @Nullable Integer visibilityTimeoutSeconds() {
        if (!unknown_visibilityTimeoutSeconds) return value_visibilityTimeoutSeconds;
        throw new UndeferrableValueException("Value 'Queue.visibilityTimeoutSeconds' is not present");
    }

}
