// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.redshift;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:redshift/endpointAuthorization:EndpointAuthorization")
public final class EndpointAuthorizationArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The Amazon Web Services account ID to grant access to.
     * 
     */
    @PolicyResourceProperty(name="account", flag="unknown_account")
    private String value_account;
    private boolean unknown_account;
    public String account() {
        if (!unknown_account) return value_account;
        throw new UndeferrableValueException("Value 'EndpointAuthorizationArgs.account' is not present");
    }

    /**
     * The cluster identifier of the cluster to grant access to.
     * 
     */
    @PolicyResourceProperty(name="clusterIdentifier", flag="unknown_clusterIdentifier")
    private String value_clusterIdentifier;
    private boolean unknown_clusterIdentifier;
    public String clusterIdentifier() {
        if (!unknown_clusterIdentifier) return value_clusterIdentifier;
        throw new UndeferrableValueException("Value 'EndpointAuthorizationArgs.clusterIdentifier' is not present");
    }

    /**
     * Indicates whether to force the revoke action. If true, the Redshift-managed VPC endpoints associated with the endpoint authorization are also deleted. Default value is `false`.
     * 
     */
    @PolicyResourceProperty(name="forceDelete", flag="unknown_forceDelete")
    private Boolean value_forceDelete;
    private boolean unknown_forceDelete;
    public Boolean forceDelete() {
        if (!unknown_forceDelete) return value_forceDelete;
        throw new UndeferrableValueException("Value 'EndpointAuthorizationArgs.forceDelete' is not present");
    }

    /**
     * The virtual private cloud (VPC) identifiers to grant access to. If none are specified all VPCs in shared account are allowed.
     * 
     */
    @PolicyResourceProperty(name="vpcIds", flag="unknown_vpcIds")
    private List<String> value_vpcIds;
    private boolean unknown_vpcIds;
    public List<String> vpcIds() {
        if (!unknown_vpcIds) return value_vpcIds;
        throw new UndeferrableValueException("Value 'EndpointAuthorizationArgs.vpcIds' is not present");
    }

}
