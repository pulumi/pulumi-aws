// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appautoscaling.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.Boolean;
import javax.annotation.Nullable;


public final class TargetSuspendedStateArgs {

    /**
     * Whether scale in by a target tracking scaling policy or a step scaling policy is suspended. Default is `false`.
     * 
     */
    @PolicyResourceProperty(name="dynamicScalingInSuspended", flag="unknown_dynamicScalingInSuspended")
    private Boolean value_dynamicScalingInSuspended;
    private boolean unknown_dynamicScalingInSuspended;
    public Boolean dynamicScalingInSuspended() {
        if (!unknown_dynamicScalingInSuspended) return value_dynamicScalingInSuspended;
        throw new UndeferrableValueException("Value 'TargetSuspendedStateArgs.dynamicScalingInSuspended' is not present");
    }

    /**
     * Whether scale out by a target tracking scaling policy or a step scaling policy is suspended. Default is `false`.
     * 
     */
    @PolicyResourceProperty(name="dynamicScalingOutSuspended", flag="unknown_dynamicScalingOutSuspended")
    private Boolean value_dynamicScalingOutSuspended;
    private boolean unknown_dynamicScalingOutSuspended;
    public Boolean dynamicScalingOutSuspended() {
        if (!unknown_dynamicScalingOutSuspended) return value_dynamicScalingOutSuspended;
        throw new UndeferrableValueException("Value 'TargetSuspendedStateArgs.dynamicScalingOutSuspended' is not present");
    }

    /**
     * Whether scheduled scaling is suspended. Default is `false`.
     * 
     */
    @PolicyResourceProperty(name="scheduledScalingSuspended", flag="unknown_scheduledScalingSuspended")
    private Boolean value_scheduledScalingSuspended;
    private boolean unknown_scheduledScalingSuspended;
    public Boolean scheduledScalingSuspended() {
        if (!unknown_scheduledScalingSuspended) return value_scheduledScalingSuspended;
        throw new UndeferrableValueException("Value 'TargetSuspendedStateArgs.scheduledScalingSuspended' is not present");
    }

}
