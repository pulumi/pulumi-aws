// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.memorydb;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:memorydb/acl:Acl")
public final class Acl extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The ARN of the ACL.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'Acl.arn' is not present");
    }

    /**
     * The minimum engine version supported by the ACL.
     * 
     */
    @PolicyResourceProperty(name="minimumEngineVersion", flag="unknown_minimumEngineVersion")
    private String value_minimumEngineVersion;
    private boolean unknown_minimumEngineVersion;
    public String minimumEngineVersion() {
        if (!unknown_minimumEngineVersion) return value_minimumEngineVersion;
        throw new UndeferrableValueException("Value 'Acl.minimumEngineVersion' is not present");
    }

    /**
     * Name of the ACL. If omitted, the provider will assign a random, unique name. Conflicts with `name_prefix`.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'Acl.name' is not present");
    }

    /**
     * Creates a unique name beginning with the specified prefix. Conflicts with `name`.
     * 
     */
    @PolicyResourceProperty(name="namePrefix", flag="unknown_namePrefix")
    private String value_namePrefix;
    private boolean unknown_namePrefix;
    public String namePrefix() {
        if (!unknown_namePrefix) return value_namePrefix;
        throw new UndeferrableValueException("Value 'Acl.namePrefix' is not present");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'Acl.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'Acl.tagsAll' is not present");
    }

    /**
     * Set of MemoryDB user names to be included in this ACL.
     * 
     */
    @PolicyResourceProperty(name="userNames", flag="unknown_userNames")
    private @Nullable List<String> value_userNames;
    private boolean unknown_userNames;
    public @Nullable List<String> userNames() {
        if (!unknown_userNames) return value_userNames;
        throw new UndeferrableValueException("Value 'Acl.userNames' is not present");
    }

}
