// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.pipes.inputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.pipes.inputs.PipeSourceParametersActivemqBrokerParametersCredentialsArgs;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class PipeSourceParametersActivemqBrokerParametersArgs {

    /**
     * The maximum number of records to include in each batch. Maximum value of 10000.
     * 
     */
    private UndeferrableValue<Integer> batchSize;

    public Integer batchSize() {
        if (batchSize == null) return null;
        return batchSize.getValue("PipeSourceParametersActivemqBrokerParametersArgs.batchSize");
    }

    /**
     * The credentials needed to access the resource. Detailed below.
     * 
     */
    private UndeferrableValue<PipeSourceParametersActivemqBrokerParametersCredentialsArgs> credentials;

    public PipeSourceParametersActivemqBrokerParametersCredentialsArgs credentials() {
        if (credentials == null) return null;
        return credentials.getValue("PipeSourceParametersActivemqBrokerParametersArgs.credentials");
    }

    /**
     * The maximum length of a time to wait for events. Maximum value of 300.
     * 
     */
    private UndeferrableValue<Integer> maximumBatchingWindowInSeconds;

    public Integer maximumBatchingWindowInSeconds() {
        if (maximumBatchingWindowInSeconds == null) return null;
        return maximumBatchingWindowInSeconds.getValue("PipeSourceParametersActivemqBrokerParametersArgs.maximumBatchingWindowInSeconds");
    }

    /**
     * The name of the destination queue to consume. Maximum length of 1000.
     * 
     */
    private UndeferrableValue<String> queueName;

    public String queueName() {
        if (queueName == null) return null;
        return queueName.getValue("PipeSourceParametersActivemqBrokerParametersArgs.queueName");
    }

}
