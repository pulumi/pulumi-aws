// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appflow.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.appflow.outputs.ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthProperties;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoData {

    /**
     * The location of the SAPOData resource.
     * 
     */
    private UndeferrableValue<String> applicationHostUrl;

    public String applicationHostUrl() {
        if (applicationHostUrl == null) return null;
        return applicationHostUrl.getValue("ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoData.applicationHostUrl");
    }

    /**
     * The application path to catalog service.
     * 
     */
    private UndeferrableValue<String> applicationServicePath;

    public String applicationServicePath() {
        if (applicationServicePath == null) return null;
        return applicationServicePath.getValue("ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoData.applicationServicePath");
    }

    /**
     * The client number for the client creating the connection.
     * 
     */
    private UndeferrableValue<String> clientNumber;

    public String clientNumber() {
        if (clientNumber == null) return null;
        return clientNumber.getValue("ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoData.clientNumber");
    }

    /**
     * The logon language of SAPOData instance.
     * 
     */
    private @Nullable UndeferrableValue<String> logonLanguage;

    public @Nullable String logonLanguage() {
        if (logonLanguage == null) return null;
        return logonLanguage.getValue("ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoData.logonLanguage");
    }

    /**
     * The SAPOData OAuth properties required for OAuth type authentication.
     * 
     */
    private @Nullable UndeferrableValue<ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthProperties> oauthProperties;

    public @Nullable ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoDataOauthProperties oauthProperties() {
        if (oauthProperties == null) return null;
        return oauthProperties.getValue("ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoData.oauthProperties");
    }

    /**
     * The port number of the SAPOData instance.
     * 
     */
    private UndeferrableValue<Integer> portNumber;

    public Integer portNumber() {
        if (portNumber == null) return null;
        return portNumber.getValue("ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoData.portNumber");
    }

    private @Nullable UndeferrableValue<String> privateLinkServiceName;

    public @Nullable String privateLinkServiceName() {
        if (privateLinkServiceName == null) return null;
        return privateLinkServiceName.getValue("ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesSapoData.privateLinkServiceName");
    }

}
