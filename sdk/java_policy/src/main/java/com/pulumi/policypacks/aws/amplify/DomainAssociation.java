// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.amplify;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.amplify.DomainAssociationCertificateSettings;
import com.pulumi.policypacks.aws.amplify.DomainAssociationSubDomain;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;


@PolicyResourceType(type="aws:amplify/domainAssociation:DomainAssociation")
public final class DomainAssociation extends com.pulumi.resources.PolicyResource {

    /**
     * Unique ID for an Amplify app.
     * 
     */
    public String appId;



    /**
     * ARN for the domain association.
     * 
     */
    public String arn;



    /**
     * The type of SSL/TLS certificate to use for your custom domain. If you don&#39;t specify a certificate type, Amplify uses the default certificate that it provisions and manages for you.
     * 
     */
    public DomainAssociationCertificateSettings certificateSettings;



    /**
     * DNS records for certificate verification in a space-delimited format (`&lt;record&gt; CNAME &lt;target&gt;`).
     * 
     */
    public String certificateVerificationDnsRecord;



    /**
     * Domain name for the domain association.
     * 
     */
    public String domainName;



    /**
     * Enables the automated creation of subdomains for branches.
     * 
     */
    public Boolean enableAutoSubDomain;



    /**
     * Setting for the subdomain. Documented below.
     * 
     */
    public List<DomainAssociationSubDomain> subDomains;



    /**
     * If enabled, the resource will wait for the domain association status to change to `PENDING_DEPLOYMENT` or `AVAILABLE`. Setting this to `false` will skip the process. Default: `true`.
     * 
     */
    public Boolean waitForVerification;



}
