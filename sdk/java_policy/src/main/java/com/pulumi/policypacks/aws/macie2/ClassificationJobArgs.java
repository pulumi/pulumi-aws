// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.macie2;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.macie2.inputs.ClassificationJobS3JobDefinitionArgs;
import com.pulumi.policypacks.aws.macie2.inputs.ClassificationJobScheduleFrequencyArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:macie2/classificationJob:ClassificationJob")
public final class ClassificationJobArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The custom data identifiers to use for data analysis and classification.
     * 
     */
    @PolicyResourceProperty(name="customDataIdentifierIds", flag="unknown_customDataIdentifierIds")
    private List<String> value_customDataIdentifierIds;
    private boolean unknown_customDataIdentifierIds;
    public List<String> customDataIdentifierIds() {
        if (!unknown_customDataIdentifierIds) return value_customDataIdentifierIds;
        throw new UndeferrableValueException("Value 'ClassificationJobArgs.customDataIdentifierIds' is not present");
    }

    /**
     * A custom description of the job. The description can contain as many as 200 characters.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private String value_description;
    private boolean unknown_description;
    public String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'ClassificationJobArgs.description' is not present");
    }

    /**
     * Specifies whether to analyze all existing, eligible objects immediately after the job is created.
     * 
     */
    @PolicyResourceProperty(name="initialRun", flag="unknown_initialRun")
    private Boolean value_initialRun;
    private boolean unknown_initialRun;
    public Boolean initialRun() {
        if (!unknown_initialRun) return value_initialRun;
        throw new UndeferrableValueException("Value 'ClassificationJobArgs.initialRun' is not present");
    }

    /**
     * The status for the job. Valid values are: `CANCELLED`, `RUNNING` and `USER_PAUSED`
     * 
     */
    @PolicyResourceProperty(name="jobStatus", flag="unknown_jobStatus")
    private String value_jobStatus;
    private boolean unknown_jobStatus;
    public String jobStatus() {
        if (!unknown_jobStatus) return value_jobStatus;
        throw new UndeferrableValueException("Value 'ClassificationJobArgs.jobStatus' is not present");
    }

    /**
     * The schedule for running the job. Valid values are: `ONE_TIME` - Run the job only once. If you specify this value, don&#39;t specify a value for the `schedule_frequency` property. `SCHEDULED` - Run the job on a daily, weekly, or monthly basis. If you specify this value, use the `schedule_frequency` property to define the recurrence pattern for the job.
     * 
     */
    @PolicyResourceProperty(name="jobType", flag="unknown_jobType")
    private String value_jobType;
    private boolean unknown_jobType;
    public String jobType() {
        if (!unknown_jobType) return value_jobType;
        throw new UndeferrableValueException("Value 'ClassificationJobArgs.jobType' is not present");
    }

    /**
     * A custom name for the job. The name can contain as many as 500 characters. If omitted, the provider will assign a random, unique name. Conflicts with `name_prefix`.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'ClassificationJobArgs.name' is not present");
    }

    /**
     * Creates a unique name beginning with the specified prefix. Conflicts with `name`.
     * 
     */
    @PolicyResourceProperty(name="namePrefix", flag="unknown_namePrefix")
    private String value_namePrefix;
    private boolean unknown_namePrefix;
    public String namePrefix() {
        if (!unknown_namePrefix) return value_namePrefix;
        throw new UndeferrableValueException("Value 'ClassificationJobArgs.namePrefix' is not present");
    }

    /**
     * The S3 buckets that contain the objects to analyze, and the scope of that analysis. (documented below)
     * 
     */
    @PolicyResourceProperty(name="s3JobDefinition", flag="unknown_s3JobDefinition")
    private ClassificationJobS3JobDefinitionArgs value_s3JobDefinition;
    private boolean unknown_s3JobDefinition;
    public ClassificationJobS3JobDefinitionArgs s3JobDefinition() {
        if (!unknown_s3JobDefinition) return value_s3JobDefinition;
        throw new UndeferrableValueException("Value 'ClassificationJobArgs.s3JobDefinition' is not present");
    }

    /**
     * The sampling depth, as a percentage, to apply when processing objects. This value determines the percentage of eligible objects that the job analyzes. If this value is less than 100, Amazon Macie selects the objects to analyze at random, up to the specified percentage, and analyzes all the data in those objects.
     * 
     */
    @PolicyResourceProperty(name="samplingPercentage", flag="unknown_samplingPercentage")
    private Integer value_samplingPercentage;
    private boolean unknown_samplingPercentage;
    public Integer samplingPercentage() {
        if (!unknown_samplingPercentage) return value_samplingPercentage;
        throw new UndeferrableValueException("Value 'ClassificationJobArgs.samplingPercentage' is not present");
    }

    /**
     * The recurrence pattern for running the job. To run the job only once, don&#39;t specify a value for this property and set the value for the `job_type` property to `ONE_TIME`. (documented below)
     * 
     */
    @PolicyResourceProperty(name="scheduleFrequency", flag="unknown_scheduleFrequency")
    private ClassificationJobScheduleFrequencyArgs value_scheduleFrequency;
    private boolean unknown_scheduleFrequency;
    public ClassificationJobScheduleFrequencyArgs scheduleFrequency() {
        if (!unknown_scheduleFrequency) return value_scheduleFrequency;
        throw new UndeferrableValueException("Value 'ClassificationJobArgs.scheduleFrequency' is not present");
    }

    /**
     * Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'ClassificationJobArgs.tags' is not present");
    }

}
