// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.sagemaker.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.String;
import javax.annotation.Nullable;


public final class DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3Output {

    /**
     * The local path to the Amazon S3 storage location where Amazon SageMaker AI saves the results of a monitoring job. LocalPath is an absolute path for the output data. Defaults to `/opt/ml/processing/output`.
     * 
     */
    @PolicyResourceProperty(name="localPath", flag="unknown_localPath")
    private @Nullable String value_localPath;
    private boolean unknown_localPath;
    public @Nullable String localPath() {
        if (!unknown_localPath) return value_localPath;
        throw new UndeferrableValueException("Value 'DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3Output.localPath' is not present");
    }

    /**
     * Whether to upload the results of the monitoring job continuously or after the job completes. Valid values are `Continuous` or `EndOfJob`
     * 
     */
    @PolicyResourceProperty(name="s3UploadMode", flag="unknown_s3UploadMode")
    private @Nullable String value_s3UploadMode;
    private boolean unknown_s3UploadMode;
    public @Nullable String s3UploadMode() {
        if (!unknown_s3UploadMode) return value_s3UploadMode;
        throw new UndeferrableValueException("Value 'DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3Output.s3UploadMode' is not present");
    }

    /**
     * A URI that identifies the Amazon S3 storage location where Amazon SageMaker AI saves the results of a monitoring job.
     * 
     */
    @PolicyResourceProperty(name="s3Uri", flag="unknown_s3Uri")
    private String value_s3Uri;
    private boolean unknown_s3Uri;
    public String s3Uri() {
        if (!unknown_s3Uri) return value_s3Uri;
        throw new UndeferrableValueException("Value 'DataQualityJobDefinitionDataQualityJobOutputConfigMonitoringOutputsS3Output.s3Uri' is not present");
    }

}
