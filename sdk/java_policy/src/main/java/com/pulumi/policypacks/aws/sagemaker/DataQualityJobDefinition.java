// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.sagemaker;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.sagemaker.outputs.DataQualityJobDefinitionDataQualityAppSpecification;
import com.pulumi.policypacks.aws.sagemaker.outputs.DataQualityJobDefinitionDataQualityBaselineConfig;
import com.pulumi.policypacks.aws.sagemaker.outputs.DataQualityJobDefinitionDataQualityJobInput;
import com.pulumi.policypacks.aws.sagemaker.outputs.DataQualityJobDefinitionDataQualityJobOutputConfig;
import com.pulumi.policypacks.aws.sagemaker.outputs.DataQualityJobDefinitionJobResources;
import com.pulumi.policypacks.aws.sagemaker.outputs.DataQualityJobDefinitionNetworkConfig;
import com.pulumi.policypacks.aws.sagemaker.outputs.DataQualityJobDefinitionStoppingCondition;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:sagemaker/dataQualityJobDefinition:DataQualityJobDefinition")
public final class DataQualityJobDefinition extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The Amazon Resource Name (ARN) assigned by AWS to this data quality job definition.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'DataQualityJobDefinition.arn' is not present");
    }

    /**
     * Specifies the container that runs the monitoring job. Fields are documented below.
     * 
     */
    @PolicyResourceProperty(name="dataQualityAppSpecification", flag="unknown_dataQualityAppSpecification")
    private DataQualityJobDefinitionDataQualityAppSpecification value_dataQualityAppSpecification;
    private boolean unknown_dataQualityAppSpecification;
    public DataQualityJobDefinitionDataQualityAppSpecification dataQualityAppSpecification() {
        if (!unknown_dataQualityAppSpecification) return value_dataQualityAppSpecification;
        throw new UndeferrableValueException("Value 'DataQualityJobDefinition.dataQualityAppSpecification' is not present");
    }

    /**
     * Configures the constraints and baselines for the monitoring job. Fields are documented below.
     * 
     */
    @PolicyResourceProperty(name="dataQualityBaselineConfig", flag="unknown_dataQualityBaselineConfig")
    private @Nullable DataQualityJobDefinitionDataQualityBaselineConfig value_dataQualityBaselineConfig;
    private boolean unknown_dataQualityBaselineConfig;
    public @Nullable DataQualityJobDefinitionDataQualityBaselineConfig dataQualityBaselineConfig() {
        if (!unknown_dataQualityBaselineConfig) return value_dataQualityBaselineConfig;
        throw new UndeferrableValueException("Value 'DataQualityJobDefinition.dataQualityBaselineConfig' is not present");
    }

    /**
     * A list of inputs for the monitoring job. Fields are documented below.
     * 
     */
    @PolicyResourceProperty(name="dataQualityJobInput", flag="unknown_dataQualityJobInput")
    private DataQualityJobDefinitionDataQualityJobInput value_dataQualityJobInput;
    private boolean unknown_dataQualityJobInput;
    public DataQualityJobDefinitionDataQualityJobInput dataQualityJobInput() {
        if (!unknown_dataQualityJobInput) return value_dataQualityJobInput;
        throw new UndeferrableValueException("Value 'DataQualityJobDefinition.dataQualityJobInput' is not present");
    }

    /**
     * The output configuration for monitoring jobs. Fields are documented below.
     * 
     */
    @PolicyResourceProperty(name="dataQualityJobOutputConfig", flag="unknown_dataQualityJobOutputConfig")
    private DataQualityJobDefinitionDataQualityJobOutputConfig value_dataQualityJobOutputConfig;
    private boolean unknown_dataQualityJobOutputConfig;
    public DataQualityJobDefinitionDataQualityJobOutputConfig dataQualityJobOutputConfig() {
        if (!unknown_dataQualityJobOutputConfig) return value_dataQualityJobOutputConfig;
        throw new UndeferrableValueException("Value 'DataQualityJobDefinition.dataQualityJobOutputConfig' is not present");
    }

    /**
     * Identifies the resources to deploy for a monitoring job. Fields are documented below.
     * 
     */
    @PolicyResourceProperty(name="jobResources", flag="unknown_jobResources")
    private DataQualityJobDefinitionJobResources value_jobResources;
    private boolean unknown_jobResources;
    public DataQualityJobDefinitionJobResources jobResources() {
        if (!unknown_jobResources) return value_jobResources;
        throw new UndeferrableValueException("Value 'DataQualityJobDefinition.jobResources' is not present");
    }

    /**
     * The name of the data quality job definition. If omitted, the provider will assign a random, unique name.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'DataQualityJobDefinition.name' is not present");
    }

    /**
     * Specifies networking configuration for the monitoring job. Fields are documented below.
     * 
     */
    @PolicyResourceProperty(name="networkConfig", flag="unknown_networkConfig")
    private @Nullable DataQualityJobDefinitionNetworkConfig value_networkConfig;
    private boolean unknown_networkConfig;
    public @Nullable DataQualityJobDefinitionNetworkConfig networkConfig() {
        if (!unknown_networkConfig) return value_networkConfig;
        throw new UndeferrableValueException("Value 'DataQualityJobDefinition.networkConfig' is not present");
    }

    /**
     * The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker AI can assume to perform tasks on your behalf.
     * 
     */
    @PolicyResourceProperty(name="roleArn", flag="unknown_roleArn")
    private String value_roleArn;
    private boolean unknown_roleArn;
    public String roleArn() {
        if (!unknown_roleArn) return value_roleArn;
        throw new UndeferrableValueException("Value 'DataQualityJobDefinition.roleArn' is not present");
    }

    /**
     * A time limit for how long the monitoring job is allowed to run before stopping. Fields are documented below.
     * 
     */
    @PolicyResourceProperty(name="stoppingCondition", flag="unknown_stoppingCondition")
    private DataQualityJobDefinitionStoppingCondition value_stoppingCondition;
    private boolean unknown_stoppingCondition;
    public DataQualityJobDefinitionStoppingCondition stoppingCondition() {
        if (!unknown_stoppingCondition) return value_stoppingCondition;
        throw new UndeferrableValueException("Value 'DataQualityJobDefinition.stoppingCondition' is not present");
    }

    /**
     * A mapping of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'DataQualityJobDefinition.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'DataQualityJobDefinition.tagsAll' is not present");
    }

}
