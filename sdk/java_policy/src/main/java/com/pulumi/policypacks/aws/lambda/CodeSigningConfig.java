// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.lambda;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.lambda.CodeSigningConfigAllowedPublishers;
import com.pulumi.policypacks.aws.lambda.CodeSigningConfigPolicies;
import java.lang.String;
import java.util.Map;


@PolicyResourceType(type="aws:lambda/codeSigningConfig:CodeSigningConfig")
public final class CodeSigningConfig extends com.pulumi.resources.PolicyResource {

    /**
     * A configuration block of allowed publishers as signing profiles for this code signing configuration. Detailed below.
     * 
     */
    public CodeSigningConfigAllowedPublishers allowedPublishers;



    /**
     * The Amazon Resource Name (ARN) of the code signing configuration.
     * 
     */
    public String arn;



    /**
     * Unique identifier for the code signing configuration.
     * 
     */
    public String configId;



    /**
     * Descriptive name for this code signing configuration.
     * 
     */
    public String description;



    /**
     * The date and time that the code signing configuration was last modified.
     * 
     */
    public String lastModified;



    /**
     * A configuration block of code signing policies that define the actions to take if the validation checks fail. Detailed below.
     * 
     */
    public CodeSigningConfigPolicies policies;



    /**
     * Map of tags to assign to the object. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



}
