// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.mskconnect.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.mskconnect.outputs.ConnectorCapacityAutoscalingScaleInPolicy;
import com.pulumi.policypacks.aws.mskconnect.outputs.ConnectorCapacityAutoscalingScaleOutPolicy;
import java.lang.Integer;
import javax.annotation.Nullable;


public final class ConnectorCapacityAutoscaling {

    /**
     * The maximum number of workers allocated to the connector.
     * 
     */
    private UndeferrableValue<Integer> maxWorkerCount;

    public Integer maxWorkerCount() {
        if (maxWorkerCount == null) return null;
        return maxWorkerCount.getValue("ConnectorCapacityAutoscaling.maxWorkerCount");
    }

    /**
     * The number of microcontroller units (MCUs) allocated to each connector worker. Valid values: `1`, `2`, `4`, `8`. The default value is `1`.
     * 
     */
    private @Nullable UndeferrableValue<Integer> mcuCount;

    public @Nullable Integer mcuCount() {
        if (mcuCount == null) return null;
        return mcuCount.getValue("ConnectorCapacityAutoscaling.mcuCount");
    }

    /**
     * The minimum number of workers allocated to the connector.
     * 
     */
    private UndeferrableValue<Integer> minWorkerCount;

    public Integer minWorkerCount() {
        if (minWorkerCount == null) return null;
        return minWorkerCount.getValue("ConnectorCapacityAutoscaling.minWorkerCount");
    }

    /**
     * The scale-in policy for the connector. See `scale_in_policy` Block for details.
     * 
     */
    private @Nullable UndeferrableValue<ConnectorCapacityAutoscalingScaleInPolicy> scaleInPolicy;

    public @Nullable ConnectorCapacityAutoscalingScaleInPolicy scaleInPolicy() {
        if (scaleInPolicy == null) return null;
        return scaleInPolicy.getValue("ConnectorCapacityAutoscaling.scaleInPolicy");
    }

    /**
     * The scale-out policy for the connector. See `scale_out_policy` Block for details.
     * 
     */
    private @Nullable UndeferrableValue<ConnectorCapacityAutoscalingScaleOutPolicy> scaleOutPolicy;

    public @Nullable ConnectorCapacityAutoscalingScaleOutPolicy scaleOutPolicy() {
        if (scaleOutPolicy == null) return null;
        return scaleOutPolicy.getValue("ConnectorCapacityAutoscaling.scaleOutPolicy");
    }

}
