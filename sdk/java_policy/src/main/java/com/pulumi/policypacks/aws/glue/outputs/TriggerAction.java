// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.glue.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.glue.outputs.TriggerActionNotificationProperty;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


public final class TriggerAction {

    /**
     * Arguments to be passed to the job. You can specify arguments here that your own job-execution script consumes, as well as arguments that AWS Glue itself consumes.
     * 
     */
    private @Nullable UndeferrableValue<Map<String,String>> arguments;

    public @Nullable Map<String,String> arguments() {
        if (arguments == null) return null;
        return arguments.getValue("TriggerAction.arguments");
    }

    /**
     * The name of the crawler to be executed. Conflicts with `job_name`.
     * 
     */
    private @Nullable UndeferrableValue<String> crawlerName;

    public @Nullable String crawlerName() {
        if (crawlerName == null) return null;
        return crawlerName.getValue("TriggerAction.crawlerName");
    }

    /**
     * The name of a job to be executed. Conflicts with `crawler_name`.
     * 
     */
    private @Nullable UndeferrableValue<String> jobName;

    public @Nullable String jobName() {
        if (jobName == null) return null;
        return jobName.getValue("TriggerAction.jobName");
    }

    /**
     * Specifies configuration properties of a job run notification. See Notification Property details below.
     * 
     */
    private @Nullable UndeferrableValue<TriggerActionNotificationProperty> notificationProperty;

    public @Nullable TriggerActionNotificationProperty notificationProperty() {
        if (notificationProperty == null) return null;
        return notificationProperty.getValue("TriggerAction.notificationProperty");
    }

    /**
     * The name of the Security Configuration structure to be used with this action.
     * 
     */
    private @Nullable UndeferrableValue<String> securityConfiguration;

    public @Nullable String securityConfiguration() {
        if (securityConfiguration == null) return null;
        return securityConfiguration.getValue("TriggerAction.securityConfiguration");
    }

    /**
     * The job run timeout in minutes. It overrides the timeout value of the job.
     * 
     */
    private @Nullable UndeferrableValue<Integer> timeout;

    public @Nullable Integer timeout() {
        if (timeout == null) return null;
        return timeout.getValue("TriggerAction.timeout");
    }

}
