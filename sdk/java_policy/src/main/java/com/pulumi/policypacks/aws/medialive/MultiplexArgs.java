// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.medialive;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.medialive.inputs.MultiplexMultiplexSettingsArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:medialive/multiplex:Multiplex")
public final class MultiplexArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * A list of availability zones. You must specify exactly two.
     * 
     */
    private UndeferrableValue<List<String>> availabilityZones;

    public List<String> availabilityZones() {
        if (availabilityZones == null) return null;
        return availabilityZones.getValue("MultiplexArgs.availabilityZones");
    }

    /**
     * Multiplex settings. See Multiplex Settings for more details.
     * 
     */
    private UndeferrableValue<MultiplexMultiplexSettingsArgs> multiplexSettings;

    public MultiplexMultiplexSettingsArgs multiplexSettings() {
        if (multiplexSettings == null) return null;
        return multiplexSettings.getValue("MultiplexArgs.multiplexSettings");
    }

    /**
     * name of Multiplex.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("MultiplexArgs.name");
    }

    /**
     * Whether to start the Multiplex. Defaults to `false`.
     * 
     */
    private UndeferrableValue<Boolean> startMultiplex;

    public Boolean startMultiplex() {
        if (startMultiplex == null) return null;
        return startMultiplex.getValue("MultiplexArgs.startMultiplex");
    }

    /**
     * A map of tags to assign to the Multiplex. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("MultiplexArgs.tags");
    }

}
