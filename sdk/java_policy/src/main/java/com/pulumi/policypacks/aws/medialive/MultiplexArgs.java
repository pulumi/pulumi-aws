// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.medialive;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.medialive.inputs.MultiplexMultiplexSettingsArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:medialive/multiplex:Multiplex")
public final class MultiplexArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * A list of availability zones. You must specify exactly two.
     * 
     */
    @PolicyResourceProperty(name="availabilityZones", flag="unknown_availabilityZones")
    private List<String> value_availabilityZones;
    private boolean unknown_availabilityZones;
    public List<String> availabilityZones() {
        if (!unknown_availabilityZones) return value_availabilityZones;
        throw new UndeferrableValueException("Value 'MultiplexArgs.availabilityZones' is not present");
    }

    /**
     * Multiplex settings. See Multiplex Settings for more details.
     * 
     */
    @PolicyResourceProperty(name="multiplexSettings", flag="unknown_multiplexSettings")
    private MultiplexMultiplexSettingsArgs value_multiplexSettings;
    private boolean unknown_multiplexSettings;
    public MultiplexMultiplexSettingsArgs multiplexSettings() {
        if (!unknown_multiplexSettings) return value_multiplexSettings;
        throw new UndeferrableValueException("Value 'MultiplexArgs.multiplexSettings' is not present");
    }

    /**
     * name of Multiplex.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'MultiplexArgs.name' is not present");
    }

    /**
     * Whether to start the Multiplex. Defaults to `false`.
     * 
     */
    @PolicyResourceProperty(name="startMultiplex", flag="unknown_startMultiplex")
    private Boolean value_startMultiplex;
    private boolean unknown_startMultiplex;
    public Boolean startMultiplex() {
        if (!unknown_startMultiplex) return value_startMultiplex;
        throw new UndeferrableValueException("Value 'MultiplexArgs.startMultiplex' is not present");
    }

    /**
     * A map of tags to assign to the Multiplex. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'MultiplexArgs.tags' is not present");
    }

}
