// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.s3.inputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.s3.inputs.BucketV2LifecycleRuleExpirationArgs;
import com.pulumi.policypacks.aws.s3.inputs.BucketV2LifecycleRuleNoncurrentVersionExpirationArgs;
import com.pulumi.policypacks.aws.s3.inputs.BucketV2LifecycleRuleNoncurrentVersionTransitionArgs;
import com.pulumi.policypacks.aws.s3.inputs.BucketV2LifecycleRuleTransitionArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


public final class BucketV2LifecycleRuleArgs {

    /**
     * Specifies the number of days after initiating a multipart upload when the multipart upload must be completed.
     * 
     */
    private UndeferrableValue<Integer> abortIncompleteMultipartUploadDays;

    public Integer abortIncompleteMultipartUploadDays() {
        if (abortIncompleteMultipartUploadDays == null) return null;
        return abortIncompleteMultipartUploadDays.getValue("BucketV2LifecycleRuleArgs.abortIncompleteMultipartUploadDays");
    }

    /**
     * Specifies lifecycle rule status.
     * 
     */
    private UndeferrableValue<Boolean> enabled;

    public Boolean enabled() {
        if (enabled == null) return null;
        return enabled.getValue("BucketV2LifecycleRuleArgs.enabled");
    }

    /**
     * Specifies a period in the object&#39;s expire. See Expiration below for details.
     * 
     */
    private UndeferrableValue<List<BucketV2LifecycleRuleExpirationArgs>> expirations;

    public List<BucketV2LifecycleRuleExpirationArgs> expirations() {
        if (expirations == null) return null;
        return expirations.getValue("BucketV2LifecycleRuleArgs.expirations");
    }

    /**
     * Unique identifier for the rule. Must be less than or equal to 255 characters in length.
     * 
     */
    private UndeferrableValue<String> id;

    public String id() {
        if (id == null) return null;
        return id.getValue("BucketV2LifecycleRuleArgs.id");
    }

    /**
     * Specifies when noncurrent object versions expire. See Noncurrent Version Expiration below for details.
     * 
     */
    private UndeferrableValue<List<BucketV2LifecycleRuleNoncurrentVersionExpirationArgs>> noncurrentVersionExpirations;

    public List<BucketV2LifecycleRuleNoncurrentVersionExpirationArgs> noncurrentVersionExpirations() {
        if (noncurrentVersionExpirations == null) return null;
        return noncurrentVersionExpirations.getValue("BucketV2LifecycleRuleArgs.noncurrentVersionExpirations");
    }

    /**
     * Specifies when noncurrent object versions transitions. See Noncurrent Version Transition below for details.
     * 
     */
    private UndeferrableValue<List<BucketV2LifecycleRuleNoncurrentVersionTransitionArgs>> noncurrentVersionTransitions;

    public List<BucketV2LifecycleRuleNoncurrentVersionTransitionArgs> noncurrentVersionTransitions() {
        if (noncurrentVersionTransitions == null) return null;
        return noncurrentVersionTransitions.getValue("BucketV2LifecycleRuleArgs.noncurrentVersionTransitions");
    }

    /**
     * Object key prefix identifying one or more objects to which the rule applies.
     * 
     */
    private UndeferrableValue<String> prefix;

    public String prefix() {
        if (prefix == null) return null;
        return prefix.getValue("BucketV2LifecycleRuleArgs.prefix");
    }

    /**
     * Specifies object tags key and value.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("BucketV2LifecycleRuleArgs.tags");
    }

    /**
     * Specifies a period in the object&#39;s transitions. See Transition below for details.
     * 
     */
    private UndeferrableValue<List<BucketV2LifecycleRuleTransitionArgs>> transitions;

    public List<BucketV2LifecycleRuleTransitionArgs> transitions() {
        if (transitions == null) return null;
        return transitions.getValue("BucketV2LifecycleRuleArgs.transitions");
    }

}
