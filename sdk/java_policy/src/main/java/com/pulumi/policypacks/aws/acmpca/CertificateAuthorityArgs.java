// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.acmpca;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.acmpca.inputs.CertificateAuthorityCertificateAuthorityConfigurationArgs;
import com.pulumi.policypacks.aws.acmpca.inputs.CertificateAuthorityRevocationConfigurationArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:acmpca/certificateAuthority:CertificateAuthority")
public final class CertificateAuthorityArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Nested argument containing algorithms and certificate subject information. Defined below.
     * 
     */
    private UndeferrableValue<CertificateAuthorityCertificateAuthorityConfigurationArgs> certificateAuthorityConfiguration;

    public CertificateAuthorityCertificateAuthorityConfigurationArgs certificateAuthorityConfiguration() {
        if (certificateAuthorityConfiguration == null) return null;
        return certificateAuthorityConfiguration.getValue("CertificateAuthorityArgs.certificateAuthorityConfiguration");
    }

    /**
     * Whether the certificate authority is enabled or disabled. Defaults to `true`. Can only be disabled if the CA is in an `ACTIVE` state.
     * 
     */
    private UndeferrableValue<Boolean> enabled;

    public Boolean enabled() {
        if (enabled == null) return null;
        return enabled.getValue("CertificateAuthorityArgs.enabled");
    }

    /**
     * Cryptographic key management compliance standard used for handling CA keys. Defaults to `FIPS_140_2_LEVEL_3_OR_HIGHER`. Valid values: `FIPS_140_2_LEVEL_3_OR_HIGHER` and `FIPS_140_2_LEVEL_2_OR_HIGHER`. Supported standard for each region can be found in the [Storage and security compliance of AWS Private CA private keys Documentation](https://docs.aws.amazon.com/privateca/latest/userguide/data-protection.html#private-keys).
     * 
     */
    private UndeferrableValue<String> keyStorageSecurityStandard;

    public String keyStorageSecurityStandard() {
        if (keyStorageSecurityStandard == null) return null;
        return keyStorageSecurityStandard.getValue("CertificateAuthorityArgs.keyStorageSecurityStandard");
    }

    /**
     * Number of days to make a CA restorable after it has been deleted, must be between 7 to 30 days, with default to 30 days.
     * 
     */
    private UndeferrableValue<Integer> permanentDeletionTimeInDays;

    public Integer permanentDeletionTimeInDays() {
        if (permanentDeletionTimeInDays == null) return null;
        return permanentDeletionTimeInDays.getValue("CertificateAuthorityArgs.permanentDeletionTimeInDays");
    }

    /**
     * Nested argument containing revocation configuration. Defined below.
     * 
     */
    private UndeferrableValue<CertificateAuthorityRevocationConfigurationArgs> revocationConfiguration;

    public CertificateAuthorityRevocationConfigurationArgs revocationConfiguration() {
        if (revocationConfiguration == null) return null;
        return revocationConfiguration.getValue("CertificateAuthorityArgs.revocationConfiguration");
    }

    /**
     * Key-value map of user-defined tags that are attached to the certificate authority. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("CertificateAuthorityArgs.tags");
    }

    /**
     * Type of the certificate authority. Defaults to `SUBORDINATE`. Valid values: `ROOT` and `SUBORDINATE`.
     * 
     */
    private UndeferrableValue<String> type;

    public String type() {
        if (type == null) return null;
        return type.getValue("CertificateAuthorityArgs.type");
    }

    /**
     * Specifies whether the CA issues general-purpose certificates that typically require a revocation mechanism, or short-lived certificates that may optionally omit revocation because they expire quickly. Short-lived certificate validity is limited to seven days. Defaults to `GENERAL_PURPOSE`. Valid values: `GENERAL_PURPOSE` and `SHORT_LIVED_CERTIFICATE`.
     * 
     */
    private UndeferrableValue<String> usageMode;

    public String usageMode() {
        if (usageMode == null) return null;
        return usageMode.getValue("CertificateAuthorityArgs.usageMode");
    }

}
