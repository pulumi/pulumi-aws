// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.ec2.inputs.FleetLaunchTemplateConfigOverrideInstanceRequirementsArgs;
import java.lang.Double;
import java.lang.String;
import javax.annotation.Nullable;


public final class FleetLaunchTemplateConfigOverrideArgs {

    /**
     * Availability Zone in which to launch the instances.
     * 
     */
    @PolicyResourceProperty(name="availabilityZone", flag="unknown_availabilityZone")
    private String value_availabilityZone;
    private boolean unknown_availabilityZone;
    public String availabilityZone() {
        if (!unknown_availabilityZone) return value_availabilityZone;
        throw new UndeferrableValueException("Value 'FleetLaunchTemplateConfigOverrideArgs.availabilityZone' is not present");
    }

    /**
     * Override the instance type in the Launch Template with instance types that satisfy the requirements.
     * 
     */
    @PolicyResourceProperty(name="instanceRequirements", flag="unknown_instanceRequirements")
    private FleetLaunchTemplateConfigOverrideInstanceRequirementsArgs value_instanceRequirements;
    private boolean unknown_instanceRequirements;
    public FleetLaunchTemplateConfigOverrideInstanceRequirementsArgs instanceRequirements() {
        if (!unknown_instanceRequirements) return value_instanceRequirements;
        throw new UndeferrableValueException("Value 'FleetLaunchTemplateConfigOverrideArgs.instanceRequirements' is not present");
    }

    /**
     * Instance type.
     * 
     */
    @PolicyResourceProperty(name="instanceType", flag="unknown_instanceType")
    private String value_instanceType;
    private boolean unknown_instanceType;
    public String instanceType() {
        if (!unknown_instanceType) return value_instanceType;
        throw new UndeferrableValueException("Value 'FleetLaunchTemplateConfigOverrideArgs.instanceType' is not present");
    }

    /**
     * Maximum price per unit hour that you are willing to pay for a Spot Instance.
     * 
     */
    @PolicyResourceProperty(name="maxPrice", flag="unknown_maxPrice")
    private String value_maxPrice;
    private boolean unknown_maxPrice;
    public String maxPrice() {
        if (!unknown_maxPrice) return value_maxPrice;
        throw new UndeferrableValueException("Value 'FleetLaunchTemplateConfigOverrideArgs.maxPrice' is not present");
    }

    /**
     * Priority for the launch template override. If `on_demand_options` `allocation_strategy` is set to `prioritized`, EC2 Fleet uses priority to determine which launch template override to use first in fulfilling On-Demand capacity. The highest priority is launched first. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority. Valid values are whole numbers starting at 0.
     * 
     */
    @PolicyResourceProperty(name="priority", flag="unknown_priority")
    private Double value_priority;
    private boolean unknown_priority;
    public Double priority() {
        if (!unknown_priority) return value_priority;
        throw new UndeferrableValueException("Value 'FleetLaunchTemplateConfigOverrideArgs.priority' is not present");
    }

    /**
     * ID of the subnet in which to launch the instances.
     * 
     */
    @PolicyResourceProperty(name="subnetId", flag="unknown_subnetId")
    private String value_subnetId;
    private boolean unknown_subnetId;
    public String subnetId() {
        if (!unknown_subnetId) return value_subnetId;
        throw new UndeferrableValueException("Value 'FleetLaunchTemplateConfigOverrideArgs.subnetId' is not present");
    }

    /**
     * Number of units provided by the specified instance type.
     * 
     */
    @PolicyResourceProperty(name="weightedCapacity", flag="unknown_weightedCapacity")
    private Double value_weightedCapacity;
    private boolean unknown_weightedCapacity;
    public Double weightedCapacity() {
        if (!unknown_weightedCapacity) return value_weightedCapacity;
        throw new UndeferrableValueException("Value 'FleetLaunchTemplateConfigOverrideArgs.weightedCapacity' is not present");
    }

}
