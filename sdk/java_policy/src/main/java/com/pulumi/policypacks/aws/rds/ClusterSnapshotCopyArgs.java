// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.rds;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.rds.inputs.ClusterSnapshotCopyTimeoutsArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:rds/clusterSnapshotCopy:ClusterSnapshotCopy")
public final class ClusterSnapshotCopyArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Whether to copy existing tags. Defaults to `false`.
     * 
     */
    private UndeferrableValue<Boolean> copyTags;

    public Boolean copyTags() {
        if (copyTags == null) return null;
        return copyTags.getValue("ClusterSnapshotCopyArgs.copyTags");
    }

    /**
     * The Destination region to place snapshot copy.
     * 
     */
    private UndeferrableValue<String> destinationRegion;

    public String destinationRegion() {
        if (destinationRegion == null) return null;
        return destinationRegion.getValue("ClusterSnapshotCopyArgs.destinationRegion");
    }

    /**
     * KMS key ID.
     * 
     */
    private UndeferrableValue<String> kmsKeyId;

    public String kmsKeyId() {
        if (kmsKeyId == null) return null;
        return kmsKeyId.getValue("ClusterSnapshotCopyArgs.kmsKeyId");
    }

    /**
     * URL that contains a Signature Version 4 signed request.
     * 
     */
    private UndeferrableValue<String> presignedUrl;

    public String presignedUrl() {
        if (presignedUrl == null) return null;
        return presignedUrl.getValue("ClusterSnapshotCopyArgs.presignedUrl");
    }

    /**
     * List of AWS Account IDs to share the snapshot with. Use `all` to make the snapshot public.
     * 
     */
    private UndeferrableValue<List<String>> sharedAccounts;

    public List<String> sharedAccounts() {
        if (sharedAccounts == null) return null;
        return sharedAccounts.getValue("ClusterSnapshotCopyArgs.sharedAccounts");
    }

    /**
     * Identifier of the source snapshot.
     * 
     */
    private UndeferrableValue<String> sourceDbClusterSnapshotIdentifier;

    public String sourceDbClusterSnapshotIdentifier() {
        if (sourceDbClusterSnapshotIdentifier == null) return null;
        return sourceDbClusterSnapshotIdentifier.getValue("ClusterSnapshotCopyArgs.sourceDbClusterSnapshotIdentifier");
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("ClusterSnapshotCopyArgs.tags");
    }

    /**
     * Identifier for the snapshot.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> targetDbClusterSnapshotIdentifier;

    public String targetDbClusterSnapshotIdentifier() {
        if (targetDbClusterSnapshotIdentifier == null) return null;
        return targetDbClusterSnapshotIdentifier.getValue("ClusterSnapshotCopyArgs.targetDbClusterSnapshotIdentifier");
    }

    private UndeferrableValue<ClusterSnapshotCopyTimeoutsArgs> timeouts;

    public ClusterSnapshotCopyTimeoutsArgs timeouts() {
        if (timeouts == null) return null;
        return timeouts.getValue("ClusterSnapshotCopyArgs.timeouts");
    }

}
