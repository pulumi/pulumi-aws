// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.eks;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.eks.inputs.AddonPodIdentityAssociationArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:eks/addon:Addon")
public final class AddonArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Name of the EKS add-on. The name must match one of
     * the names returned by [describe-addon-versions](https://docs.aws.amazon.com/cli/latest/reference/eks/describe-addon-versions.html).
     * 
     */
    @PolicyResourceProperty(name="addonName", flag="unknown_addonName")
    private String value_addonName;
    private boolean unknown_addonName;
    public String addonName() {
        if (!unknown_addonName) return value_addonName;
        throw new UndeferrableValueException("Value 'AddonArgs.addonName' is not present");
    }

    /**
     * The version of the EKS add-on. The version must
     * match one of the versions returned by [describe-addon-versions](https://docs.aws.amazon.com/cli/latest/reference/eks/describe-addon-versions.html).
     * 
     */
    @PolicyResourceProperty(name="addonVersion", flag="unknown_addonVersion")
    private String value_addonVersion;
    private boolean unknown_addonVersion;
    public String addonVersion() {
        if (!unknown_addonVersion) return value_addonVersion;
        throw new UndeferrableValueException("Value 'AddonArgs.addonVersion' is not present");
    }

    /**
     * Name of the EKS Cluster.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="clusterName", flag="unknown_clusterName")
    private String value_clusterName;
    private boolean unknown_clusterName;
    public String clusterName() {
        if (!unknown_clusterName) return value_clusterName;
        throw new UndeferrableValueException("Value 'AddonArgs.clusterName' is not present");
    }

    /**
     * custom configuration values for addons with single JSON string. This JSON string value must match the JSON schema derived from [describe-addon-configuration](https://docs.aws.amazon.com/cli/latest/reference/eks/describe-addon-configuration.html).
     * 
     */
    @PolicyResourceProperty(name="configurationValues", flag="unknown_configurationValues")
    private String value_configurationValues;
    private boolean unknown_configurationValues;
    public String configurationValues() {
        if (!unknown_configurationValues) return value_configurationValues;
        throw new UndeferrableValueException("Value 'AddonArgs.configurationValues' is not present");
    }

    /**
     * Configuration block with EKS Pod Identity association settings. See `pod_identity_association` below for details.
     * 
     */
    @PolicyResourceProperty(name="podIdentityAssociations", flag="unknown_podIdentityAssociations")
    private List<AddonPodIdentityAssociationArgs> value_podIdentityAssociations;
    private boolean unknown_podIdentityAssociations;
    public List<AddonPodIdentityAssociationArgs> podIdentityAssociations() {
        if (!unknown_podIdentityAssociations) return value_podIdentityAssociations;
        throw new UndeferrableValueException("Value 'AddonArgs.podIdentityAssociations' is not present");
    }

    /**
     * Indicates if you want to preserve the created resources when deleting the EKS add-on.
     * 
     */
    @PolicyResourceProperty(name="preserve", flag="unknown_preserve")
    private Boolean value_preserve;
    private boolean unknown_preserve;
    public Boolean preserve() {
        if (!unknown_preserve) return value_preserve;
        throw new UndeferrableValueException("Value 'AddonArgs.preserve' is not present");
    }

    /**
     * Define how to resolve parameter value conflicts when migrating an existing add-on to an Amazon EKS add-on or when applying version updates to the add-on. Valid values are `NONE`, `OVERWRITE` and `PRESERVE`. Note that `PRESERVE` is only valid on addon update, not for initial addon creation. If you need to set this to `PRESERVE`, use the `resolve_conflicts_on_create` and `resolve_conflicts_on_update` attributes instead. For more details check [UpdateAddon](https://docs.aws.amazon.com/eks/latest/APIReference/API_UpdateAddon.html) API Docs.
     * 
     * @deprecated
     * resolve_conflicts is deprecated. The resolve_conflicts attribute can&#39;t be set to &#34;PRESERVE&#34; on initial resource creation. Use resolve_conflicts_on_create and/or resolve_conflicts_on_update instead.
     * 
     */
    @Deprecated /* resolve_conflicts is deprecated. The resolve_conflicts attribute can't be set to ""PRESERVE"" on initial resource creation. Use resolve_conflicts_on_create and/or resolve_conflicts_on_update instead. */
    @PolicyResourceProperty(name="resolveConflicts", flag="unknown_resolveConflicts")
    private String value_resolveConflicts;
    private boolean unknown_resolveConflicts;
    public String resolveConflicts() {
        if (!unknown_resolveConflicts) return value_resolveConflicts;
        throw new UndeferrableValueException("Value 'AddonArgs.resolveConflicts' is not present");
    }

    /**
     * How to resolve field value conflicts when migrating a self-managed add-on to an Amazon EKS add-on. Valid values are `NONE` and `OVERWRITE`. For more details see the [CreateAddon](https://docs.aws.amazon.com/eks/latest/APIReference/API_CreateAddon.html) API Docs.
     * 
     */
    @PolicyResourceProperty(name="resolveConflictsOnCreate", flag="unknown_resolveConflictsOnCreate")
    private String value_resolveConflictsOnCreate;
    private boolean unknown_resolveConflictsOnCreate;
    public String resolveConflictsOnCreate() {
        if (!unknown_resolveConflictsOnCreate) return value_resolveConflictsOnCreate;
        throw new UndeferrableValueException("Value 'AddonArgs.resolveConflictsOnCreate' is not present");
    }

    /**
     * How to resolve field value conflicts for an Amazon EKS add-on if you&#39;ve changed a value from the Amazon EKS default value. Valid values are `NONE`, `OVERWRITE`, and `PRESERVE`. For more details see the [UpdateAddon](https://docs.aws.amazon.com/eks/latest/APIReference/API_UpdateAddon.html) API Docs.
     * 
     */
    @PolicyResourceProperty(name="resolveConflictsOnUpdate", flag="unknown_resolveConflictsOnUpdate")
    private String value_resolveConflictsOnUpdate;
    private boolean unknown_resolveConflictsOnUpdate;
    public String resolveConflictsOnUpdate() {
        if (!unknown_resolveConflictsOnUpdate) return value_resolveConflictsOnUpdate;
        throw new UndeferrableValueException("Value 'AddonArgs.resolveConflictsOnUpdate' is not present");
    }

    /**
     * The Amazon Resource Name (ARN) of an
     * existing IAM role to bind to the add-on&#39;s service account. The role must be
     * assigned the IAM permissions required by the add-on. If you don&#39;t specify
     * an existing IAM role, then the add-on uses the permissions assigned to the node
     * IAM role. For more information, see [Amazon EKS node IAM role](https://docs.aws.amazon.com/eks/latest/userguide/create-node-role.html)
     * in the Amazon EKS User Guide.
     * 
     * &gt; **Note:** To specify an existing IAM role, you must have an IAM OpenID Connect (OIDC)
     * provider created for your cluster. For more information, [see Enabling IAM roles
     * for service accounts on your cluster](https://docs.aws.amazon.com/eks/latest/userguide/enable-iam-roles-for-service-accounts.html)
     * in the Amazon EKS User Guide.
     * 
     */
    @PolicyResourceProperty(name="serviceAccountRoleArn", flag="unknown_serviceAccountRoleArn")
    private String value_serviceAccountRoleArn;
    private boolean unknown_serviceAccountRoleArn;
    public String serviceAccountRoleArn() {
        if (!unknown_serviceAccountRoleArn) return value_serviceAccountRoleArn;
        throw new UndeferrableValueException("Value 'AddonArgs.serviceAccountRoleArn' is not present");
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'AddonArgs.tags' is not present");
    }

}
