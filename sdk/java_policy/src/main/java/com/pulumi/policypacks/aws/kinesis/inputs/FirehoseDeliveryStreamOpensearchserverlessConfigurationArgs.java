// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.kinesis.inputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.kinesis.inputs.FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsArgs;
import com.pulumi.policypacks.aws.kinesis.inputs.FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationArgs;
import com.pulumi.policypacks.aws.kinesis.inputs.FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationArgs;
import com.pulumi.policypacks.aws.kinesis.inputs.FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigArgs;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class FirehoseDeliveryStreamOpensearchserverlessConfigurationArgs {

    /**
     * Buffer incoming data for the specified period of time, in seconds between 0 to 900, before delivering it to the destination.  The default value is 300s.
     * 
     */
    private UndeferrableValue<Integer> bufferingInterval;

    public Integer bufferingInterval() {
        if (bufferingInterval == null) return null;
        return bufferingInterval.getValue("FirehoseDeliveryStreamOpensearchserverlessConfigurationArgs.bufferingInterval");
    }

    /**
     * Buffer incoming data to the specified size, in MBs between 1 to 100, before delivering it to the destination.  The default value is 5MB.
     * 
     */
    private UndeferrableValue<Integer> bufferingSize;

    public Integer bufferingSize() {
        if (bufferingSize == null) return null;
        return bufferingSize.getValue("FirehoseDeliveryStreamOpensearchserverlessConfigurationArgs.bufferingSize");
    }

    /**
     * The CloudWatch Logging Options for the delivery stream. See `cloudwatch_logging_options` block below for details.
     * 
     */
    private UndeferrableValue<FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsArgs> cloudwatchLoggingOptions;

    public FirehoseDeliveryStreamOpensearchserverlessConfigurationCloudwatchLoggingOptionsArgs cloudwatchLoggingOptions() {
        if (cloudwatchLoggingOptions == null) return null;
        return cloudwatchLoggingOptions.getValue("FirehoseDeliveryStreamOpensearchserverlessConfigurationArgs.cloudwatchLoggingOptions");
    }

    /**
     * The endpoint to use when communicating with the collection in the Serverless offering for Amazon OpenSearch Service.
     * 
     */
    private UndeferrableValue<String> collectionEndpoint;

    public String collectionEndpoint() {
        if (collectionEndpoint == null) return null;
        return collectionEndpoint.getValue("FirehoseDeliveryStreamOpensearchserverlessConfigurationArgs.collectionEndpoint");
    }

    /**
     * The Serverless offering for Amazon OpenSearch Service index name.
     * 
     */
    private UndeferrableValue<String> indexName;

    public String indexName() {
        if (indexName == null) return null;
        return indexName.getValue("FirehoseDeliveryStreamOpensearchserverlessConfigurationArgs.indexName");
    }

    /**
     * The data processing configuration.  See `processing_configuration` block below for details.
     * 
     */
    private UndeferrableValue<FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationArgs> processingConfiguration;

    public FirehoseDeliveryStreamOpensearchserverlessConfigurationProcessingConfigurationArgs processingConfiguration() {
        if (processingConfiguration == null) return null;
        return processingConfiguration.getValue("FirehoseDeliveryStreamOpensearchserverlessConfigurationArgs.processingConfiguration");
    }

    /**
     * After an initial failure to deliver to the Serverless offering for Amazon OpenSearch Service, the total amount of time, in seconds between 0 to 7200, during which Kinesis Data Firehose retries delivery (including the first attempt).  After this time has elapsed, the failed documents are written to Amazon S3.  The default value is 300s.  There will be no retry if the value is 0.
     * 
     */
    private UndeferrableValue<Integer> retryDuration;

    public Integer retryDuration() {
        if (retryDuration == null) return null;
        return retryDuration.getValue("FirehoseDeliveryStreamOpensearchserverlessConfigurationArgs.retryDuration");
    }

    /**
     * The Amazon Resource Name (ARN) of the IAM role to be assumed by Kinesis Data Firehose for calling the Serverless offering for Amazon OpenSearch Service Configuration API and for indexing documents.  The pattern needs to be `arn:.*`.
     * 
     */
    private UndeferrableValue<String> roleArn;

    public String roleArn() {
        if (roleArn == null) return null;
        return roleArn.getValue("FirehoseDeliveryStreamOpensearchserverlessConfigurationArgs.roleArn");
    }

    /**
     * Defines how documents should be delivered to Amazon S3.  Valid values are `FailedDocumentsOnly` and `AllDocuments`.  Default value is `FailedDocumentsOnly`.
     * 
     */
    private UndeferrableValue<String> s3BackupMode;

    public String s3BackupMode() {
        if (s3BackupMode == null) return null;
        return s3BackupMode.getValue("FirehoseDeliveryStreamOpensearchserverlessConfigurationArgs.s3BackupMode");
    }

    /**
     * The S3 Configuration. See `s3_configuration` block below for details.
     * 
     */
    private UndeferrableValue<FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationArgs> s3Configuration;

    public FirehoseDeliveryStreamOpensearchserverlessConfigurationS3ConfigurationArgs s3Configuration() {
        if (s3Configuration == null) return null;
        return s3Configuration.getValue("FirehoseDeliveryStreamOpensearchserverlessConfigurationArgs.s3Configuration");
    }

    /**
     * The VPC configuration for the delivery stream to connect to OpenSearch Serverless associated with the VPC. See `vpc_config` block below for details.
     * 
     */
    private UndeferrableValue<FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigArgs> vpcConfig;

    public FirehoseDeliveryStreamOpensearchserverlessConfigurationVpcConfigArgs vpcConfig() {
        if (vpcConfig == null) return null;
        return vpcConfig.getValue("FirehoseDeliveryStreamOpensearchserverlessConfigurationArgs.vpcConfig");
    }

}
