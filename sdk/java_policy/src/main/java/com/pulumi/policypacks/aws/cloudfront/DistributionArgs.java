// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.cloudfront;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.cloudfront.inputs.DistributionCustomErrorResponseArgs;
import com.pulumi.policypacks.aws.cloudfront.inputs.DistributionDefaultCacheBehaviorArgs;
import com.pulumi.policypacks.aws.cloudfront.inputs.DistributionLoggingConfigArgs;
import com.pulumi.policypacks.aws.cloudfront.inputs.DistributionOrderedCacheBehaviorArgs;
import com.pulumi.policypacks.aws.cloudfront.inputs.DistributionOriginArgs;
import com.pulumi.policypacks.aws.cloudfront.inputs.DistributionOriginGroupArgs;
import com.pulumi.policypacks.aws.cloudfront.inputs.DistributionRestrictionsArgs;
import com.pulumi.policypacks.aws.cloudfront.inputs.DistributionViewerCertificateArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:cloudfront/distribution:Distribution")
public final class DistributionArgs extends com.pulumi.resources.PolicyResourceInput {

    private UndeferrableValue<List<String>> aliases;

    public List<String> aliases() {
        if (aliases == null) return null;
        return aliases.getValue("DistributionArgs.aliases");
    }

    private UndeferrableValue<String> comment;

    public String comment() {
        if (comment == null) return null;
        return comment.getValue("DistributionArgs.comment");
    }

    private UndeferrableValue<String> continuousDeploymentPolicyId;

    public String continuousDeploymentPolicyId() {
        if (continuousDeploymentPolicyId == null) return null;
        return continuousDeploymentPolicyId.getValue("DistributionArgs.continuousDeploymentPolicyId");
    }

    private UndeferrableValue<List<DistributionCustomErrorResponseArgs>> customErrorResponses;

    public List<DistributionCustomErrorResponseArgs> customErrorResponses() {
        if (customErrorResponses == null) return null;
        return customErrorResponses.getValue("DistributionArgs.customErrorResponses");
    }

    private UndeferrableValue<DistributionDefaultCacheBehaviorArgs> defaultCacheBehavior;

    public DistributionDefaultCacheBehaviorArgs defaultCacheBehavior() {
        if (defaultCacheBehavior == null) return null;
        return defaultCacheBehavior.getValue("DistributionArgs.defaultCacheBehavior");
    }

    private UndeferrableValue<String> defaultRootObject;

    public String defaultRootObject() {
        if (defaultRootObject == null) return null;
        return defaultRootObject.getValue("DistributionArgs.defaultRootObject");
    }

    /**
     * `true` if any of the AWS accounts listed as trusted signers have active CloudFront key pairs
     * 
     */
    private UndeferrableValue<Boolean> enabled;

    public Boolean enabled() {
        if (enabled == null) return null;
        return enabled.getValue("DistributionArgs.enabled");
    }

    private UndeferrableValue<String> httpVersion;

    public String httpVersion() {
        if (httpVersion == null) return null;
        return httpVersion.getValue("DistributionArgs.httpVersion");
    }

    private UndeferrableValue<Boolean> isIpv6Enabled;

    public Boolean isIpv6Enabled() {
        if (isIpv6Enabled == null) return null;
        return isIpv6Enabled.getValue("DistributionArgs.isIpv6Enabled");
    }

    private UndeferrableValue<DistributionLoggingConfigArgs> loggingConfig;

    public DistributionLoggingConfigArgs loggingConfig() {
        if (loggingConfig == null) return null;
        return loggingConfig.getValue("DistributionArgs.loggingConfig");
    }

    private UndeferrableValue<List<DistributionOrderedCacheBehaviorArgs>> orderedCacheBehaviors;

    public List<DistributionOrderedCacheBehaviorArgs> orderedCacheBehaviors() {
        if (orderedCacheBehaviors == null) return null;
        return orderedCacheBehaviors.getValue("DistributionArgs.orderedCacheBehaviors");
    }

    private UndeferrableValue<List<DistributionOriginGroupArgs>> originGroups;

    public List<DistributionOriginGroupArgs> originGroups() {
        if (originGroups == null) return null;
        return originGroups.getValue("DistributionArgs.originGroups");
    }

    private UndeferrableValue<List<DistributionOriginArgs>> origins;

    public List<DistributionOriginArgs> origins() {
        if (origins == null) return null;
        return origins.getValue("DistributionArgs.origins");
    }

    private UndeferrableValue<String> priceClass;

    public String priceClass() {
        if (priceClass == null) return null;
        return priceClass.getValue("DistributionArgs.priceClass");
    }

    private UndeferrableValue<DistributionRestrictionsArgs> restrictions;

    public DistributionRestrictionsArgs restrictions() {
        if (restrictions == null) return null;
        return restrictions.getValue("DistributionArgs.restrictions");
    }

    private UndeferrableValue<Boolean> retainOnDelete;

    public Boolean retainOnDelete() {
        if (retainOnDelete == null) return null;
        return retainOnDelete.getValue("DistributionArgs.retainOnDelete");
    }

    private UndeferrableValue<Boolean> staging;

    public Boolean staging() {
        if (staging == null) return null;
        return staging.getValue("DistributionArgs.staging");
    }

    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("DistributionArgs.tags");
    }

    private UndeferrableValue<DistributionViewerCertificateArgs> viewerCertificate;

    public DistributionViewerCertificateArgs viewerCertificate() {
        if (viewerCertificate == null) return null;
        return viewerCertificate.getValue("DistributionArgs.viewerCertificate");
    }

    private UndeferrableValue<Boolean> waitForDeployment;

    public Boolean waitForDeployment() {
        if (waitForDeployment == null) return null;
        return waitForDeployment.getValue("DistributionArgs.waitForDeployment");
    }

    private UndeferrableValue<String> webAclId;

    public String webAclId() {
        if (webAclId == null) return null;
        return webAclId.getValue("DistributionArgs.webAclId");
    }

}
