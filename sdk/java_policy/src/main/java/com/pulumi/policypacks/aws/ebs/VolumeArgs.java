// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ebs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ebs/volume:Volume")
public final class VolumeArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Availability zone where the EBS volume will exist.
     * 
     */
    private UndeferrableValue<String> availabilityZone;

    public String availabilityZone() {
        if (availabilityZone == null) return null;
        return availabilityZone.getValue("VolumeArgs.availabilityZone");
    }

    /**
     * If true, the disk will be encrypted.
     * 
     */
    private UndeferrableValue<Boolean> encrypted;

    public Boolean encrypted() {
        if (encrypted == null) return null;
        return encrypted.getValue("VolumeArgs.encrypted");
    }

    /**
     * If true, snapshot will be created before volume deletion. Any tags on the volume will be migrated to the snapshot. By default set to false
     * 
     */
    private UndeferrableValue<Boolean> finalSnapshot;

    public Boolean finalSnapshot() {
        if (finalSnapshot == null) return null;
        return finalSnapshot.getValue("VolumeArgs.finalSnapshot");
    }

    /**
     * Amount of IOPS to provision for the disk. Only valid for `type` of `io1`, `io2` or `gp3`.
     * 
     */
    private UndeferrableValue<Integer> iops;

    public Integer iops() {
        if (iops == null) return null;
        return iops.getValue("VolumeArgs.iops");
    }

    /**
     * ARN for the KMS encryption key. When specifying `kms_key_id`, `encrypted` needs to be set to true. Note: The provider must be running with credentials which have the `GenerateDataKeyWithoutPlaintext` permission on the specified KMS key as required by the [EBS KMS CMK volume provisioning process](https://docs.aws.amazon.com/kms/latest/developerguide/services-ebs.html#ebs-cmk) to prevent a volume from being created and almost immediately deleted.
     * 
     */
    private UndeferrableValue<String> kmsKeyId;

    public String kmsKeyId() {
        if (kmsKeyId == null) return null;
        return kmsKeyId.getValue("VolumeArgs.kmsKeyId");
    }

    /**
     * Specifies whether to enable Amazon EBS Multi-Attach. Multi-Attach is supported on `io1` and `io2` volumes.
     * 
     */
    private UndeferrableValue<Boolean> multiAttachEnabled;

    public Boolean multiAttachEnabled() {
        if (multiAttachEnabled == null) return null;
        return multiAttachEnabled.getValue("VolumeArgs.multiAttachEnabled");
    }

    /**
     * Amazon Resource Name (ARN) of the Outpost.
     * 
     */
    private UndeferrableValue<String> outpostArn;

    public String outpostArn() {
        if (outpostArn == null) return null;
        return outpostArn.getValue("VolumeArgs.outpostArn");
    }

    /**
     * Size of the drive in GiBs.
     * 
     */
    private UndeferrableValue<Integer> size;

    public Integer size() {
        if (size == null) return null;
        return size.getValue("VolumeArgs.size");
    }

    /**
     * A snapshot to base the EBS volume off of.
     * 
     */
    private UndeferrableValue<String> snapshotId;

    public String snapshotId() {
        if (snapshotId == null) return null;
        return snapshotId.getValue("VolumeArgs.snapshotId");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("VolumeArgs.tags");
    }

    /**
     * Throughput that the volume supports, in MiB/s. Only valid for `type` of `gp3`.
     * 
     */
    private UndeferrableValue<Integer> throughput;

    public Integer throughput() {
        if (throughput == null) return null;
        return throughput.getValue("VolumeArgs.throughput");
    }

    /**
     * Type of EBS volume. Can be `standard`, `gp2`, `gp3`, `io1`, `io2`, `sc1` or `st1` (Default: `gp2`).
     * 
     * &gt; **NOTE:** When changing the `size`, `iops` or `type` of an instance, there are [considerations](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/considerations.html) to be aware of.
     * 
     */
    private UndeferrableValue<String> type;

    public String type() {
        if (type == null) return null;
        return type.getValue("VolumeArgs.type");
    }

}
