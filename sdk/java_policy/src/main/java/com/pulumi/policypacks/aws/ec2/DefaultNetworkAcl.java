// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.ec2.outputs.DefaultNetworkAclEgress;
import com.pulumi.policypacks.aws.ec2.outputs.DefaultNetworkAclIngress;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ec2/defaultNetworkAcl:DefaultNetworkAcl")
public final class DefaultNetworkAcl extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * ARN of the Default Network ACL
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'DefaultNetworkAcl.arn' is not present");
    }

    /**
     * Network ACL ID to manage. This attribute is exported from `aws.ec2.Vpc`, or manually found via the AWS Console.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="defaultNetworkAclId", flag="unknown_defaultNetworkAclId")
    private String value_defaultNetworkAclId;
    private boolean unknown_defaultNetworkAclId;
    public String defaultNetworkAclId() {
        if (!unknown_defaultNetworkAclId) return value_defaultNetworkAclId;
        throw new UndeferrableValueException("Value 'DefaultNetworkAcl.defaultNetworkAclId' is not present");
    }

    /**
     * Configuration block for an egress rule. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="egress", flag="unknown_egress")
    private @Nullable List<DefaultNetworkAclEgress> value_egress;
    private boolean unknown_egress;
    public @Nullable List<DefaultNetworkAclEgress> egress() {
        if (!unknown_egress) return value_egress;
        throw new UndeferrableValueException("Value 'DefaultNetworkAcl.egress' is not present");
    }

    /**
     * Configuration block for an ingress rule. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="ingress", flag="unknown_ingress")
    private @Nullable List<DefaultNetworkAclIngress> value_ingress;
    private boolean unknown_ingress;
    public @Nullable List<DefaultNetworkAclIngress> ingress() {
        if (!unknown_ingress) return value_ingress;
        throw new UndeferrableValueException("Value 'DefaultNetworkAcl.ingress' is not present");
    }

    /**
     * ID of the AWS account that owns the Default Network ACL
     * 
     */
    @PolicyResourceProperty(name="ownerId", flag="unknown_ownerId")
    private String value_ownerId;
    private boolean unknown_ownerId;
    public String ownerId() {
        if (!unknown_ownerId) return value_ownerId;
        throw new UndeferrableValueException("Value 'DefaultNetworkAcl.ownerId' is not present");
    }

    /**
     * List of Subnet IDs to apply the ACL to. See the notes above on Managing Subnets in the Default Network ACL
     * 
     */
    @PolicyResourceProperty(name="subnetIds", flag="unknown_subnetIds")
    private @Nullable List<String> value_subnetIds;
    private boolean unknown_subnetIds;
    public @Nullable List<String> subnetIds() {
        if (!unknown_subnetIds) return value_subnetIds;
        throw new UndeferrableValueException("Value 'DefaultNetworkAcl.subnetIds' is not present");
    }

    /**
     * Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'DefaultNetworkAcl.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'DefaultNetworkAcl.tagsAll' is not present");
    }

    /**
     * ID of the associated VPC
     * 
     */
    @PolicyResourceProperty(name="vpcId", flag="unknown_vpcId")
    private String value_vpcId;
    private boolean unknown_vpcId;
    public String vpcId() {
        if (!unknown_vpcId) return value_vpcId;
        throw new UndeferrableValueException("Value 'DefaultNetworkAcl.vpcId' is not present");
    }

}
