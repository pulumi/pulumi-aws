// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.customerprofiles;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.customerprofiles.DomainMatching;
import com.pulumi.policypacks.aws.customerprofiles.DomainRuleBasedMatching;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;


@PolicyResourceType(type="aws:customerprofiles/domain:Domain")
public final class Domain extends com.pulumi.resources.PolicyResource {

    /**
     * The Amazon Resource Name (ARN) of the Customer Profiles Domain.
     * 
     */
    public String arn;



    /**
     * The URL of the SQS dead letter queue, which is used for reporting errors associated with ingesting data from third party applications.
     * 
     */
    public String deadLetterQueueUrl;



    /**
     * The default encryption key, which is an AWS managed key, is used when no specific type of encryption key is specified. It is used to encrypt all data before it is placed in permanent or semi-permanent storage.
     * 
     */
    public String defaultEncryptionKey;



    /**
     * The default number of days until the data within the domain expires.
     * 
     * The following arguments are optional:
     * 
     */
    public Integer defaultExpirationDays;



    /**
     * The name for your Customer Profile domain. It must be unique for your AWS account.
     * 
     */
    public String domainName;



    /**
     * A block that specifies the process of matching duplicate profiles. Documented below.
     * 
     */
    public DomainMatching matching;



    /**
     * A block that specifies the process of matching duplicate profiles using the Rule-Based matching. Documented below.
     * 
     */
    public DomainRuleBasedMatching ruleBasedMatching;



    /**
     * Tags to apply to the domain. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



}
