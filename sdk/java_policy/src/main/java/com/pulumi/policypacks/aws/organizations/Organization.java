// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.organizations;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.organizations.outputs.OrganizationAccount;
import com.pulumi.policypacks.aws.organizations.outputs.OrganizationNonMasterAccount;
import com.pulumi.policypacks.aws.organizations.outputs.OrganizationRoot;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:organizations/organization:Organization")
public final class Organization extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * List of organization accounts including the master account. For a list excluding the master account, see the `non_master_accounts` attribute. All elements have these attributes:
     * 
     */
    @PolicyResourceProperty(name="accounts", flag="unknown_accounts")
    private List<OrganizationAccount> value_accounts;
    private boolean unknown_accounts;
    public List<OrganizationAccount> accounts() {
        if (!unknown_accounts) return value_accounts;
        throw new UndeferrableValueException("Value 'Organization.accounts' is not present");
    }

    /**
     * ARN of the root
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'Organization.arn' is not present");
    }

    /**
     * List of AWS service principal names for which you want to enable integration with your organization. This is typically in the form of a URL, such as service-abbreviation.amazonaws.com. Organization must have `feature_set` set to `ALL`. Some services do not support enablement via this endpoint, see [warning in aws docs](https://docs.aws.amazon.com/organizations/latest/APIReference/API_EnableAWSServiceAccess.html).
     * 
     */
    @PolicyResourceProperty(name="awsServiceAccessPrincipals", flag="unknown_awsServiceAccessPrincipals")
    private @Nullable List<String> value_awsServiceAccessPrincipals;
    private boolean unknown_awsServiceAccessPrincipals;
    public @Nullable List<String> awsServiceAccessPrincipals() {
        if (!unknown_awsServiceAccessPrincipals) return value_awsServiceAccessPrincipals;
        throw new UndeferrableValueException("Value 'Organization.awsServiceAccessPrincipals' is not present");
    }

    /**
     * List of Organizations policy types to enable in the Organization Root. Organization must have `feature_set` set to `ALL`. For additional information about valid policy types (e.g., `AISERVICES_OPT_OUT_POLICY`, `BACKUP_POLICY`, `RESOURCE_CONTROL_POLICY`, `SERVICE_CONTROL_POLICY`, and `TAG_POLICY`), see the [AWS Organizations API Reference](https://docs.aws.amazon.com/organizations/latest/APIReference/API_EnablePolicyType.html).
     * 
     */
    @PolicyResourceProperty(name="enabledPolicyTypes", flag="unknown_enabledPolicyTypes")
    private @Nullable List<String> value_enabledPolicyTypes;
    private boolean unknown_enabledPolicyTypes;
    public @Nullable List<String> enabledPolicyTypes() {
        if (!unknown_enabledPolicyTypes) return value_enabledPolicyTypes;
        throw new UndeferrableValueException("Value 'Organization.enabledPolicyTypes' is not present");
    }

    /**
     * Specify &#34;ALL&#34; (default) or &#34;CONSOLIDATED_BILLING&#34;.
     * 
     */
    @PolicyResourceProperty(name="featureSet", flag="unknown_featureSet")
    private @Nullable String value_featureSet;
    private boolean unknown_featureSet;
    public @Nullable String featureSet() {
        if (!unknown_featureSet) return value_featureSet;
        throw new UndeferrableValueException("Value 'Organization.featureSet' is not present");
    }

    /**
     * ARN of the master account
     * 
     */
    @PolicyResourceProperty(name="masterAccountArn", flag="unknown_masterAccountArn")
    private String value_masterAccountArn;
    private boolean unknown_masterAccountArn;
    public String masterAccountArn() {
        if (!unknown_masterAccountArn) return value_masterAccountArn;
        throw new UndeferrableValueException("Value 'Organization.masterAccountArn' is not present");
    }

    /**
     * Email address of the master account
     * 
     */
    @PolicyResourceProperty(name="masterAccountEmail", flag="unknown_masterAccountEmail")
    private String value_masterAccountEmail;
    private boolean unknown_masterAccountEmail;
    public String masterAccountEmail() {
        if (!unknown_masterAccountEmail) return value_masterAccountEmail;
        throw new UndeferrableValueException("Value 'Organization.masterAccountEmail' is not present");
    }

    /**
     * Identifier of the master account
     * 
     */
    @PolicyResourceProperty(name="masterAccountId", flag="unknown_masterAccountId")
    private String value_masterAccountId;
    private boolean unknown_masterAccountId;
    public String masterAccountId() {
        if (!unknown_masterAccountId) return value_masterAccountId;
        throw new UndeferrableValueException("Value 'Organization.masterAccountId' is not present");
    }

    /**
     * Name of the master account
     * 
     */
    @PolicyResourceProperty(name="masterAccountName", flag="unknown_masterAccountName")
    private String value_masterAccountName;
    private boolean unknown_masterAccountName;
    public String masterAccountName() {
        if (!unknown_masterAccountName) return value_masterAccountName;
        throw new UndeferrableValueException("Value 'Organization.masterAccountName' is not present");
    }

    /**
     * List of organization accounts excluding the master account. For a list including the master account, see the `accounts` attribute. All elements have these attributes:
     * 
     */
    @PolicyResourceProperty(name="nonMasterAccounts", flag="unknown_nonMasterAccounts")
    private List<OrganizationNonMasterAccount> value_nonMasterAccounts;
    private boolean unknown_nonMasterAccounts;
    public List<OrganizationNonMasterAccount> nonMasterAccounts() {
        if (!unknown_nonMasterAccounts) return value_nonMasterAccounts;
        throw new UndeferrableValueException("Value 'Organization.nonMasterAccounts' is not present");
    }

    /**
     * List of organization roots. All elements have these attributes:
     * 
     */
    @PolicyResourceProperty(name="roots", flag="unknown_roots")
    private List<OrganizationRoot> value_roots;
    private boolean unknown_roots;
    public List<OrganizationRoot> roots() {
        if (!unknown_roots) return value_roots;
        throw new UndeferrableValueException("Value 'Organization.roots' is not present");
    }

}
