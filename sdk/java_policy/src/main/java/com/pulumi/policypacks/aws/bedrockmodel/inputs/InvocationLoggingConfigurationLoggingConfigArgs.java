// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.bedrockmodel.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.bedrockmodel.inputs.InvocationLoggingConfigurationLoggingConfigCloudwatchConfigArgs;
import com.pulumi.policypacks.aws.bedrockmodel.inputs.InvocationLoggingConfigurationLoggingConfigS3ConfigArgs;
import java.lang.Boolean;
import javax.annotation.Nullable;


public final class InvocationLoggingConfigurationLoggingConfigArgs {

    /**
     * CloudWatch logging configuration. See `cloudwatch_config` Block for details.
     * 
     */
    @PolicyResourceProperty(name="cloudwatchConfig", flag="unknown_cloudwatchConfig")
    private InvocationLoggingConfigurationLoggingConfigCloudwatchConfigArgs value_cloudwatchConfig;
    private boolean unknown_cloudwatchConfig;
    public InvocationLoggingConfigurationLoggingConfigCloudwatchConfigArgs cloudwatchConfig() {
        if (!unknown_cloudwatchConfig) return value_cloudwatchConfig;
        throw new UndeferrableValueException("Value 'InvocationLoggingConfigurationLoggingConfigArgs.cloudwatchConfig' is not present");
    }

    /**
     * Set to include embeddings data in the log delivery. Defaults to `true`.
     * 
     */
    @PolicyResourceProperty(name="embeddingDataDeliveryEnabled", flag="unknown_embeddingDataDeliveryEnabled")
    private Boolean value_embeddingDataDeliveryEnabled;
    private boolean unknown_embeddingDataDeliveryEnabled;
    public Boolean embeddingDataDeliveryEnabled() {
        if (!unknown_embeddingDataDeliveryEnabled) return value_embeddingDataDeliveryEnabled;
        throw new UndeferrableValueException("Value 'InvocationLoggingConfigurationLoggingConfigArgs.embeddingDataDeliveryEnabled' is not present");
    }

    /**
     * Set to include image data in the log delivery. Defaults to `true`.
     * 
     */
    @PolicyResourceProperty(name="imageDataDeliveryEnabled", flag="unknown_imageDataDeliveryEnabled")
    private Boolean value_imageDataDeliveryEnabled;
    private boolean unknown_imageDataDeliveryEnabled;
    public Boolean imageDataDeliveryEnabled() {
        if (!unknown_imageDataDeliveryEnabled) return value_imageDataDeliveryEnabled;
        throw new UndeferrableValueException("Value 'InvocationLoggingConfigurationLoggingConfigArgs.imageDataDeliveryEnabled' is not present");
    }

    /**
     * S3 configuration for storing log data. See `s3_config` Block for details.
     * 
     */
    @PolicyResourceProperty(name="s3Config", flag="unknown_s3Config")
    private InvocationLoggingConfigurationLoggingConfigS3ConfigArgs value_s3Config;
    private boolean unknown_s3Config;
    public InvocationLoggingConfigurationLoggingConfigS3ConfigArgs s3Config() {
        if (!unknown_s3Config) return value_s3Config;
        throw new UndeferrableValueException("Value 'InvocationLoggingConfigurationLoggingConfigArgs.s3Config' is not present");
    }

    /**
     * Set to include text data in the log delivery. Defaults to `true`.
     * 
     */
    @PolicyResourceProperty(name="textDataDeliveryEnabled", flag="unknown_textDataDeliveryEnabled")
    private Boolean value_textDataDeliveryEnabled;
    private boolean unknown_textDataDeliveryEnabled;
    public Boolean textDataDeliveryEnabled() {
        if (!unknown_textDataDeliveryEnabled) return value_textDataDeliveryEnabled;
        throw new UndeferrableValueException("Value 'InvocationLoggingConfigurationLoggingConfigArgs.textDataDeliveryEnabled' is not present");
    }

    /**
     * Set to include text data in the log delivery. Defaults to `true`.
     * 
     */
    @PolicyResourceProperty(name="videoDataDeliveryEnabled", flag="unknown_videoDataDeliveryEnabled")
    private Boolean value_videoDataDeliveryEnabled;
    private boolean unknown_videoDataDeliveryEnabled;
    public Boolean videoDataDeliveryEnabled() {
        if (!unknown_videoDataDeliveryEnabled) return value_videoDataDeliveryEnabled;
        throw new UndeferrableValueException("Value 'InvocationLoggingConfigurationLoggingConfigArgs.videoDataDeliveryEnabled' is not present");
    }

}
