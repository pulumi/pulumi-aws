// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.bedrockmodel.inputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.bedrockmodel.inputs.InvocationLoggingConfigurationLoggingConfigCloudwatchConfigArgs;
import com.pulumi.policypacks.aws.bedrockmodel.inputs.InvocationLoggingConfigurationLoggingConfigS3ConfigArgs;
import java.lang.Boolean;
import javax.annotation.Nullable;


public final class InvocationLoggingConfigurationLoggingConfigArgs {

    /**
     * CloudWatch logging configuration. See `cloudwatch_config` Block for details.
     * 
     */
    private UndeferrableValue<InvocationLoggingConfigurationLoggingConfigCloudwatchConfigArgs> cloudwatchConfig;

    public InvocationLoggingConfigurationLoggingConfigCloudwatchConfigArgs cloudwatchConfig() {
        if (cloudwatchConfig == null) return null;
        return cloudwatchConfig.getValue("InvocationLoggingConfigurationLoggingConfigArgs.cloudwatchConfig");
    }

    /**
     * Set to include embeddings data in the log delivery. Defaults to `true`.
     * 
     */
    private UndeferrableValue<Boolean> embeddingDataDeliveryEnabled;

    public Boolean embeddingDataDeliveryEnabled() {
        if (embeddingDataDeliveryEnabled == null) return null;
        return embeddingDataDeliveryEnabled.getValue("InvocationLoggingConfigurationLoggingConfigArgs.embeddingDataDeliveryEnabled");
    }

    /**
     * Set to include image data in the log delivery. Defaults to `true`.
     * 
     */
    private UndeferrableValue<Boolean> imageDataDeliveryEnabled;

    public Boolean imageDataDeliveryEnabled() {
        if (imageDataDeliveryEnabled == null) return null;
        return imageDataDeliveryEnabled.getValue("InvocationLoggingConfigurationLoggingConfigArgs.imageDataDeliveryEnabled");
    }

    /**
     * S3 configuration for storing log data. See `s3_config` Block for details.
     * 
     */
    private UndeferrableValue<InvocationLoggingConfigurationLoggingConfigS3ConfigArgs> s3Config;

    public InvocationLoggingConfigurationLoggingConfigS3ConfigArgs s3Config() {
        if (s3Config == null) return null;
        return s3Config.getValue("InvocationLoggingConfigurationLoggingConfigArgs.s3Config");
    }

    /**
     * Set to include text data in the log delivery. Defaults to `true`.
     * 
     */
    private UndeferrableValue<Boolean> textDataDeliveryEnabled;

    public Boolean textDataDeliveryEnabled() {
        if (textDataDeliveryEnabled == null) return null;
        return textDataDeliveryEnabled.getValue("InvocationLoggingConfigurationLoggingConfigArgs.textDataDeliveryEnabled");
    }

    /**
     * Set to include text data in the log delivery. Defaults to `true`.
     * 
     */
    private UndeferrableValue<Boolean> videoDataDeliveryEnabled;

    public Boolean videoDataDeliveryEnabled() {
        if (videoDataDeliveryEnabled == null) return null;
        return videoDataDeliveryEnabled.getValue("InvocationLoggingConfigurationLoggingConfigArgs.videoDataDeliveryEnabled");
    }

}
