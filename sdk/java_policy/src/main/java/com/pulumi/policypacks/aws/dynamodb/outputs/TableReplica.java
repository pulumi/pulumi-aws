// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.dynamodb.outputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;


public final class TableReplica {

    /**
     * ARN of the table
     * 
     */
    private @Nullable UndeferrableValue<String> arn;

    public @Nullable String arn() {
        if (arn == null) return null;
        return arn.getValue("TableReplica.arn");
    }

    /**
     * ARN of the CMK that should be used for the AWS KMS encryption.
     * This argument should only be used if the key is different from the default KMS-managed DynamoDB key, `alias/aws/dynamodb`.
     * **Note:** This attribute will _not_ be populated with the ARN of _default_ keys.
     * **Note:** Changing this value will recreate the replica.
     * 
     */
    private @Nullable UndeferrableValue<String> kmsKeyArn;

    public @Nullable String kmsKeyArn() {
        if (kmsKeyArn == null) return null;
        return kmsKeyArn.getValue("TableReplica.kmsKeyArn");
    }

    /**
     * Whether to enable Point In Time Recovery for the replica. Default is `false`.
     * 
     */
    private @Nullable UndeferrableValue<Boolean> pointInTimeRecovery;

    public @Nullable Boolean pointInTimeRecovery() {
        if (pointInTimeRecovery == null) return null;
        return pointInTimeRecovery.getValue("TableReplica.pointInTimeRecovery");
    }

    /**
     * Whether to propagate the global table&#39;s tags to a replica.
     * Default is `false`.
     * Changes to tags only move in one direction: from global (source) to replica.
     * Tag drift on a replica will not trigger an update.
     * Tag changes on the global table are propagated to replicas.
     * Changing from `true` to `false` on a subsequent `apply` leaves replica tags as-is and no longer manages them.
     * 
     */
    private @Nullable UndeferrableValue<Boolean> propagateTags;

    public @Nullable Boolean propagateTags() {
        if (propagateTags == null) return null;
        return propagateTags.getValue("TableReplica.propagateTags");
    }

    /**
     * Region name of the replica.
     * 
     */
    private UndeferrableValue<String> regionName;

    public String regionName() {
        if (regionName == null) return null;
        return regionName.getValue("TableReplica.regionName");
    }

    /**
     * ARN of the Table Stream. Only available when `stream_enabled = true`
     * 
     */
    private @Nullable UndeferrableValue<String> streamArn;

    public @Nullable String streamArn() {
        if (streamArn == null) return null;
        return streamArn.getValue("TableReplica.streamArn");
    }

    /**
     * Timestamp, in ISO 8601 format, for this stream. Note that this timestamp is not a unique identifier for the stream on its own. However, the combination of AWS customer ID, table name and this field is guaranteed to be unique. It can be used for creating CloudWatch Alarms. Only available when `stream_enabled = true`.
     * 
     */
    private @Nullable UndeferrableValue<String> streamLabel;

    public @Nullable String streamLabel() {
        if (streamLabel == null) return null;
        return streamLabel.getValue("TableReplica.streamLabel");
    }

}
