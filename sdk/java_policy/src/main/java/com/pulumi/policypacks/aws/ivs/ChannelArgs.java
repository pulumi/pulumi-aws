// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ivs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ivs/channel:Channel")
public final class ChannelArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * If `true`, channel is private (enabled for playback authorization).
     * 
     */
    private UndeferrableValue<Boolean> authorized;

    public Boolean authorized() {
        if (authorized == null) return null;
        return authorized.getValue("ChannelArgs.authorized");
    }

    /**
     * Channel latency mode. Valid values: `NORMAL`, `LOW`.
     * 
     */
    private UndeferrableValue<String> latencyMode;

    public String latencyMode() {
        if (latencyMode == null) return null;
        return latencyMode.getValue("ChannelArgs.latencyMode");
    }

    /**
     * Channel name.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("ChannelArgs.name");
    }

    /**
     * Recording configuration ARN.
     * 
     */
    private UndeferrableValue<String> recordingConfigurationArn;

    public String recordingConfigurationArn() {
        if (recordingConfigurationArn == null) return null;
        return recordingConfigurationArn.getValue("ChannelArgs.recordingConfigurationArn");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("ChannelArgs.tags");
    }

    /**
     * Channel type, which determines the allowable resolution and bitrate. Valid values: `STANDARD`, `BASIC`.
     * 
     */
    private UndeferrableValue<String> type;

    public String type() {
        if (type == null) return null;
        return type.getValue("ChannelArgs.type");
    }

}
