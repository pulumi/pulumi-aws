// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appfabric;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:appfabric/ingestion:Ingestion")
public final class IngestionArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Name of the application.
     * Refer to the AWS Documentation for the [list of valid values](https://docs.aws.amazon.com/appfabric/latest/api/API_CreateIngestion.html#appfabric-CreateIngestion-request-app)
     * 
     */
    @PolicyResourceProperty(name="app", flag="unknown_app")
    private String value_app;
    private boolean unknown_app;
    public String app() {
        if (!unknown_app) return value_app;
        throw new UndeferrableValueException("Value 'IngestionArgs.app' is not present");
    }

    /**
     * Amazon Resource Name (ARN) of the app bundle to use for the request.
     * 
     */
    @PolicyResourceProperty(name="appBundleArn", flag="unknown_appBundleArn")
    private String value_appBundleArn;
    private boolean unknown_appBundleArn;
    public String appBundleArn() {
        if (!unknown_appBundleArn) return value_appBundleArn;
        throw new UndeferrableValueException("Value 'IngestionArgs.appBundleArn' is not present");
    }

    /**
     * Ingestion type. Valid values are `auditLog`.
     * 
     */
    @PolicyResourceProperty(name="ingestionType", flag="unknown_ingestionType")
    private String value_ingestionType;
    private boolean unknown_ingestionType;
    public String ingestionType() {
        if (!unknown_ingestionType) return value_ingestionType;
        throw new UndeferrableValueException("Value 'IngestionArgs.ingestionType' is not present");
    }

    /**
     * Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'IngestionArgs.tags' is not present");
    }

    /**
     * ID of the application tenant.
     * 
     */
    @PolicyResourceProperty(name="tenantId", flag="unknown_tenantId")
    private String value_tenantId;
    private boolean unknown_tenantId;
    public String tenantId() {
        if (!unknown_tenantId) return value_tenantId;
        throw new UndeferrableValueException("Value 'IngestionArgs.tenantId' is not present");
    }

}
