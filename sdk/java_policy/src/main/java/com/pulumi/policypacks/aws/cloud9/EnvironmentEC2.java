// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.cloud9;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:cloud9/environmentEC2:EnvironmentEC2")
public final class EnvironmentEC2 extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The ARN of the environment.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'EnvironmentEC2.arn' is not present");
    }

    /**
     * The number of minutes until the running instance is shut down after the environment has last been used.
     * 
     */
    @PolicyResourceProperty(name="automaticStopTimeMinutes", flag="unknown_automaticStopTimeMinutes")
    private @Nullable Integer value_automaticStopTimeMinutes;
    private boolean unknown_automaticStopTimeMinutes;
    public @Nullable Integer automaticStopTimeMinutes() {
        if (!unknown_automaticStopTimeMinutes) return value_automaticStopTimeMinutes;
        throw new UndeferrableValueException("Value 'EnvironmentEC2.automaticStopTimeMinutes' is not present");
    }

    /**
     * The connection type used for connecting to an Amazon EC2 environment. Valid values are `CONNECT_SSH` and `CONNECT_SSM`. For more information please refer [AWS documentation for Cloud9](https://docs.aws.amazon.com/cloud9/latest/user-guide/ec2-ssm.html).
     * 
     */
    @PolicyResourceProperty(name="connectionType", flag="unknown_connectionType")
    private @Nullable String value_connectionType;
    private boolean unknown_connectionType;
    public @Nullable String connectionType() {
        if (!unknown_connectionType) return value_connectionType;
        throw new UndeferrableValueException("Value 'EnvironmentEC2.connectionType' is not present");
    }

    /**
     * The description of the environment.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private @Nullable String value_description;
    private boolean unknown_description;
    public @Nullable String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'EnvironmentEC2.description' is not present");
    }

    /**
     * The identifier for the Amazon Machine Image (AMI) that&#39;s used to create the EC2 instance. Valid values are
     * * `amazonlinux-2-x86_64`
     * * `amazonlinux-2023-x86_64`
     * * `ubuntu-18.04-x86_64`
     * * `ubuntu-22.04-x86_64`
     * * `resolve:ssm:/aws/service/cloud9/amis/amazonlinux-2-x86_64`
     * * `resolve:ssm:/aws/service/cloud9/amis/amazonlinux-2023-x86_64`
     * * `resolve:ssm:/aws/service/cloud9/amis/ubuntu-18.04-x86_64`
     * * `resolve:ssm:/aws/service/cloud9/amis/ubuntu-22.04-x86_64`
     * 
     */
    @PolicyResourceProperty(name="imageId", flag="unknown_imageId")
    private String value_imageId;
    private boolean unknown_imageId;
    public String imageId() {
        if (!unknown_imageId) return value_imageId;
        throw new UndeferrableValueException("Value 'EnvironmentEC2.imageId' is not present");
    }

    /**
     * The type of instance to connect to the environment, e.g., `t2.micro`.
     * 
     */
    @PolicyResourceProperty(name="instanceType", flag="unknown_instanceType")
    private String value_instanceType;
    private boolean unknown_instanceType;
    public String instanceType() {
        if (!unknown_instanceType) return value_instanceType;
        throw new UndeferrableValueException("Value 'EnvironmentEC2.instanceType' is not present");
    }

    /**
     * The name of the environment.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'EnvironmentEC2.name' is not present");
    }

    /**
     * The ARN of the environment owner. This can be ARN of any AWS IAM principal. Defaults to the environment&#39;s creator.
     * 
     */
    @PolicyResourceProperty(name="ownerArn", flag="unknown_ownerArn")
    private String value_ownerArn;
    private boolean unknown_ownerArn;
    public String ownerArn() {
        if (!unknown_ownerArn) return value_ownerArn;
        throw new UndeferrableValueException("Value 'EnvironmentEC2.ownerArn' is not present");
    }

    /**
     * The ID of the subnet in Amazon VPC that AWS Cloud9 will use to communicate with the Amazon EC2 instance.
     * 
     */
    @PolicyResourceProperty(name="subnetId", flag="unknown_subnetId")
    private @Nullable String value_subnetId;
    private boolean unknown_subnetId;
    public @Nullable String subnetId() {
        if (!unknown_subnetId) return value_subnetId;
        throw new UndeferrableValueException("Value 'EnvironmentEC2.subnetId' is not present");
    }

    /**
     * Key-value map of resource tags. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'EnvironmentEC2.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'EnvironmentEC2.tagsAll' is not present");
    }

    /**
     * The type of the environment (e.g., `ssh` or `ec2`).
     * 
     */
    @PolicyResourceProperty(name="type", flag="unknown_type")
    private String value_type;
    private boolean unknown_type;
    public String type() {
        if (!unknown_type) return value_type;
        throw new UndeferrableValueException("Value 'EnvironmentEC2.type' is not present");
    }

}
