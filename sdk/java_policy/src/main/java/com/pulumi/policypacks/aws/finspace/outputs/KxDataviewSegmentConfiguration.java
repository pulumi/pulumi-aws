// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.finspace.outputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class KxDataviewSegmentConfiguration {

    /**
     * The database path of the data that you want to place on each selected volume. Each segment must have a unique database path for each volume.
     * 
     */
    private UndeferrableValue<List<String>> dbPaths;

    public List<String> dbPaths() {
        if (dbPaths == null) return null;
        return dbPaths.getValue("KxDataviewSegmentConfiguration.dbPaths");
    }

    /**
     * Enables on-demand caching on the selected database path when a particular file or a column of the database is accessed. When on demand caching is **True**, dataviews perform minimal loading of files on the filesystem as needed. When it is set to **False**, everything is cached. The default value is **False**.
     * 
     */
    private @Nullable UndeferrableValue<Boolean> onDemand;

    public @Nullable Boolean onDemand() {
        if (onDemand == null) return null;
        return onDemand.getValue("KxDataviewSegmentConfiguration.onDemand");
    }

    /**
     * The name of the volume that you want to attach to a dataview. This volume must be in the same availability zone as the dataview that you are attaching to.
     * 
     */
    private UndeferrableValue<String> volumeName;

    public String volumeName() {
        if (volumeName == null) return null;
        return volumeName.getValue("KxDataviewSegmentConfiguration.volumeName");
    }

}
