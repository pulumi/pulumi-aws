// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.sagemaker;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.sagemaker.PipelineParallelismConfiguration;
import com.pulumi.policypacks.aws.sagemaker.PipelinePipelineDefinitionS3Location;
import java.lang.String;
import java.util.Map;


@PolicyResourceType(type="aws:sagemaker/pipeline:Pipeline")
public final class Pipeline extends com.pulumi.resources.PolicyResource {

    /**
     * The Amazon Resource Name (ARN) assigned by AWS to this Pipeline.
     * 
     */
    public String arn;



    /**
     * This is the configuration that controls the parallelism of the pipeline. If specified, it applies to all runs of this pipeline by default. see Parallelism Configuration details below.
     * 
     */
    public PipelineParallelismConfiguration parallelismConfiguration;



    /**
     * The [JSON pipeline definition](https://aws-sagemaker-mlops.github.io/sagemaker-model-building-pipeline-definition-JSON-schema/) of the pipeline.
     * 
     */
    public String pipelineDefinition;



    /**
     * The location of the pipeline definition stored in Amazon S3. If specified, SageMaker AI will retrieve the pipeline definition from this location. see Pipeline Definition S3 Location details below.
     * 
     */
    public PipelinePipelineDefinitionS3Location pipelineDefinitionS3Location;



    /**
     * A description of the pipeline.
     * 
     */
    public String pipelineDescription;



    /**
     * The display name of the pipeline.
     * 
     */
    public String pipelineDisplayName;



    /**
     * The name of the pipeline.
     * 
     */
    public String pipelineName;



    /**
     * The ARN of the IAM role the pipeline will execute as.
     * 
     */
    public String roleArn;



    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



}
