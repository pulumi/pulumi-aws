// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.sagemaker;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.sagemaker.outputs.PipelineParallelismConfiguration;
import com.pulumi.policypacks.aws.sagemaker.outputs.PipelinePipelineDefinitionS3Location;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:sagemaker/pipeline:Pipeline")
public final class Pipeline extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The Amazon Resource Name (ARN) assigned by AWS to this Pipeline.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'Pipeline.arn' is not present");
    }

    /**
     * This is the configuration that controls the parallelism of the pipeline. If specified, it applies to all runs of this pipeline by default. see Parallelism Configuration details below.
     * 
     */
    @PolicyResourceProperty(name="parallelismConfiguration", flag="unknown_parallelismConfiguration")
    private @Nullable PipelineParallelismConfiguration value_parallelismConfiguration;
    private boolean unknown_parallelismConfiguration;
    public @Nullable PipelineParallelismConfiguration parallelismConfiguration() {
        if (!unknown_parallelismConfiguration) return value_parallelismConfiguration;
        throw new UndeferrableValueException("Value 'Pipeline.parallelismConfiguration' is not present");
    }

    /**
     * The [JSON pipeline definition](https://aws-sagemaker-mlops.github.io/sagemaker-model-building-pipeline-definition-JSON-schema/) of the pipeline.
     * 
     */
    @PolicyResourceProperty(name="pipelineDefinition", flag="unknown_pipelineDefinition")
    private @Nullable String value_pipelineDefinition;
    private boolean unknown_pipelineDefinition;
    public @Nullable String pipelineDefinition() {
        if (!unknown_pipelineDefinition) return value_pipelineDefinition;
        throw new UndeferrableValueException("Value 'Pipeline.pipelineDefinition' is not present");
    }

    /**
     * The location of the pipeline definition stored in Amazon S3. If specified, SageMaker AI will retrieve the pipeline definition from this location. see Pipeline Definition S3 Location details below.
     * 
     */
    @PolicyResourceProperty(name="pipelineDefinitionS3Location", flag="unknown_pipelineDefinitionS3Location")
    private @Nullable PipelinePipelineDefinitionS3Location value_pipelineDefinitionS3Location;
    private boolean unknown_pipelineDefinitionS3Location;
    public @Nullable PipelinePipelineDefinitionS3Location pipelineDefinitionS3Location() {
        if (!unknown_pipelineDefinitionS3Location) return value_pipelineDefinitionS3Location;
        throw new UndeferrableValueException("Value 'Pipeline.pipelineDefinitionS3Location' is not present");
    }

    /**
     * A description of the pipeline.
     * 
     */
    @PolicyResourceProperty(name="pipelineDescription", flag="unknown_pipelineDescription")
    private @Nullable String value_pipelineDescription;
    private boolean unknown_pipelineDescription;
    public @Nullable String pipelineDescription() {
        if (!unknown_pipelineDescription) return value_pipelineDescription;
        throw new UndeferrableValueException("Value 'Pipeline.pipelineDescription' is not present");
    }

    /**
     * The display name of the pipeline.
     * 
     */
    @PolicyResourceProperty(name="pipelineDisplayName", flag="unknown_pipelineDisplayName")
    private String value_pipelineDisplayName;
    private boolean unknown_pipelineDisplayName;
    public String pipelineDisplayName() {
        if (!unknown_pipelineDisplayName) return value_pipelineDisplayName;
        throw new UndeferrableValueException("Value 'Pipeline.pipelineDisplayName' is not present");
    }

    /**
     * The name of the pipeline.
     * 
     */
    @PolicyResourceProperty(name="pipelineName", flag="unknown_pipelineName")
    private String value_pipelineName;
    private boolean unknown_pipelineName;
    public String pipelineName() {
        if (!unknown_pipelineName) return value_pipelineName;
        throw new UndeferrableValueException("Value 'Pipeline.pipelineName' is not present");
    }

    /**
     * The ARN of the IAM role the pipeline will execute as.
     * 
     */
    @PolicyResourceProperty(name="roleArn", flag="unknown_roleArn")
    private @Nullable String value_roleArn;
    private boolean unknown_roleArn;
    public @Nullable String roleArn() {
        if (!unknown_roleArn) return value_roleArn;
        throw new UndeferrableValueException("Value 'Pipeline.roleArn' is not present");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'Pipeline.tags' is not present");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'Pipeline.tagsAll' is not present");
    }

}
