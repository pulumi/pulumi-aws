// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.kinesisanalyticsv2.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfiguration {

    /**
     * Describes whether the Kinesis Data Analytics service can increase the parallelism of the application in response to increased throughput.
     * 
     */
    @PolicyResourceProperty(name="autoScalingEnabled", flag="unknown_autoScalingEnabled")
    private @Nullable Boolean value_autoScalingEnabled;
    private boolean unknown_autoScalingEnabled;
    public @Nullable Boolean autoScalingEnabled() {
        if (!unknown_autoScalingEnabled) return value_autoScalingEnabled;
        throw new UndeferrableValueException("Value 'ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfiguration.autoScalingEnabled' is not present");
    }

    /**
     * Describes whether the application uses the default parallelism for the Kinesis Data Analytics service. Valid values: `CUSTOM`, `DEFAULT`. Set this attribute to `CUSTOM` in order for any specified `auto_scaling_enabled`, `parallelism`, or `parallelism_per_kpu` attribute values to be effective.
     * 
     */
    @PolicyResourceProperty(name="configurationType", flag="unknown_configurationType")
    private String value_configurationType;
    private boolean unknown_configurationType;
    public String configurationType() {
        if (!unknown_configurationType) return value_configurationType;
        throw new UndeferrableValueException("Value 'ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfiguration.configurationType' is not present");
    }

    /**
     * Describes the initial number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform.
     * 
     */
    @PolicyResourceProperty(name="parallelism", flag="unknown_parallelism")
    private @Nullable Integer value_parallelism;
    private boolean unknown_parallelism;
    public @Nullable Integer parallelism() {
        if (!unknown_parallelism) return value_parallelism;
        throw new UndeferrableValueException("Value 'ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfiguration.parallelism' is not present");
    }

    /**
     * Describes the number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform per Kinesis Processing Unit (KPU) used by the application.
     * 
     */
    @PolicyResourceProperty(name="parallelismPerKpu", flag="unknown_parallelismPerKpu")
    private @Nullable Integer value_parallelismPerKpu;
    private boolean unknown_parallelismPerKpu;
    public @Nullable Integer parallelismPerKpu() {
        if (!unknown_parallelismPerKpu) return value_parallelismPerKpu;
        throw new UndeferrableValueException("Value 'ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfiguration.parallelismPerKpu' is not present");
    }

}
