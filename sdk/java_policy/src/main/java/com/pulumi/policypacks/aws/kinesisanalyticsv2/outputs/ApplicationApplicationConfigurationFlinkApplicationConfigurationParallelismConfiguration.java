// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.kinesisanalyticsv2.outputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfiguration {

    /**
     * Describes whether the Kinesis Data Analytics service can increase the parallelism of the application in response to increased throughput.
     * 
     */
    private @Nullable UndeferrableValue<Boolean> autoScalingEnabled;

    public @Nullable Boolean autoScalingEnabled() {
        if (autoScalingEnabled == null) return null;
        return autoScalingEnabled.getValue("ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfiguration.autoScalingEnabled");
    }

    /**
     * Describes whether the application uses the default parallelism for the Kinesis Data Analytics service. Valid values: `CUSTOM`, `DEFAULT`. Set this attribute to `CUSTOM` in order for any specified `auto_scaling_enabled`, `parallelism`, or `parallelism_per_kpu` attribute values to be effective.
     * 
     */
    private UndeferrableValue<String> configurationType;

    public String configurationType() {
        if (configurationType == null) return null;
        return configurationType.getValue("ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfiguration.configurationType");
    }

    /**
     * Describes the initial number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform.
     * 
     */
    private @Nullable UndeferrableValue<Integer> parallelism;

    public @Nullable Integer parallelism() {
        if (parallelism == null) return null;
        return parallelism.getValue("ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfiguration.parallelism");
    }

    /**
     * Describes the number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform per Kinesis Processing Unit (KPU) used by the application.
     * 
     */
    private @Nullable UndeferrableValue<Integer> parallelismPerKpu;

    public @Nullable Integer parallelismPerKpu() {
        if (parallelismPerKpu == null) return null;
        return parallelismPerKpu.getValue("ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfiguration.parallelismPerKpu");
    }

}
