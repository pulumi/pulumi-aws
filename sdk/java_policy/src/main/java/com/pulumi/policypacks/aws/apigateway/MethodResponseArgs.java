// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.apigateway;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:apigateway/methodResponse:MethodResponse")
public final class MethodResponseArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The HTTP verb of the method resource (`GET`, `POST`, `PUT`, `DELETE`, `HEAD`, `OPTIONS`, `ANY`).
     * 
     */
    @PolicyResourceProperty(name="httpMethod", flag="unknown_httpMethod")
    private String value_httpMethod;
    private boolean unknown_httpMethod;
    public String httpMethod() {
        if (!unknown_httpMethod) return value_httpMethod;
        throw new UndeferrableValueException("Value 'MethodResponseArgs.httpMethod' is not present");
    }

    /**
     * The Resource identifier for the method resource.
     * 
     */
    @PolicyResourceProperty(name="resourceId", flag="unknown_resourceId")
    private String value_resourceId;
    private boolean unknown_resourceId;
    public String resourceId() {
        if (!unknown_resourceId) return value_resourceId;
        throw new UndeferrableValueException("Value 'MethodResponseArgs.resourceId' is not present");
    }

    /**
     * A map specifying the model resources used for the response&#39;s content type. Response models are represented as a key/value map, with a content type as the key and a Model name as the value.
     * 
     */
    @PolicyResourceProperty(name="responseModels", flag="unknown_responseModels")
    private Map<String,String> value_responseModels;
    private boolean unknown_responseModels;
    public Map<String,String> responseModels() {
        if (!unknown_responseModels) return value_responseModels;
        throw new UndeferrableValueException("Value 'MethodResponseArgs.responseModels' is not present");
    }

    /**
     * A map specifying required or optional response parameters that API Gateway can send back to the caller. A key defines a method response header name and the associated value is a boolean flag indicating whether the method response parameter is required. The method response header names must match the pattern of `method.response.header.{name}`, where `name` is a valid and unique header name.
     * 
     * The response parameter names defined here are available in the integration response to be mapped from an integration response header expressed in `integration.response.header.{name}`, a static value enclosed within a pair of single quotes (e.g., &#39;`application/json&#39;`), or a JSON expression from the back-end response payload in the form of `integration.response.body.{JSON-expression}`, where `JSON-expression` is a valid JSON expression without the `$` prefix.)
     * 
     */
    @PolicyResourceProperty(name="responseParameters", flag="unknown_responseParameters")
    private Map<String,Boolean> value_responseParameters;
    private boolean unknown_responseParameters;
    public Map<String,Boolean> responseParameters() {
        if (!unknown_responseParameters) return value_responseParameters;
        throw new UndeferrableValueException("Value 'MethodResponseArgs.responseParameters' is not present");
    }

    /**
     * The string identifier of the associated REST API.
     * 
     */
    @PolicyResourceProperty(name="restApi", flag="unknown_restApi")
    private String value_restApi;
    private boolean unknown_restApi;
    public String restApi() {
        if (!unknown_restApi) return value_restApi;
        throw new UndeferrableValueException("Value 'MethodResponseArgs.restApi' is not present");
    }

    /**
     * The method response&#39;s status code.
     * 
     */
    @PolicyResourceProperty(name="statusCode", flag="unknown_statusCode")
    private String value_statusCode;
    private boolean unknown_statusCode;
    public String statusCode() {
        if (!unknown_statusCode) return value_statusCode;
        throw new UndeferrableValueException("Value 'MethodResponseArgs.statusCode' is not present");
    }

}
