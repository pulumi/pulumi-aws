// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.cloudformation;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.cloudformation.inputs.StackSetAutoDeploymentArgs;
import com.pulumi.policypacks.aws.cloudformation.inputs.StackSetManagedExecutionArgs;
import com.pulumi.policypacks.aws.cloudformation.inputs.StackSetOperationPreferencesArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:cloudformation/stackSet:StackSet")
public final class StackSetArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Amazon Resource Number (ARN) of the IAM Role in the administrator account. This must be defined when using the `SELF_MANAGED` permission model.
     * 
     */
    private UndeferrableValue<String> administrationRoleArn;

    public String administrationRoleArn() {
        if (administrationRoleArn == null) return null;
        return administrationRoleArn.getValue("StackSetArgs.administrationRoleArn");
    }

    /**
     * Configuration block containing the auto-deployment model for your StackSet. This can only be defined when using the `SERVICE_MANAGED` permission model.
     * 
     */
    private UndeferrableValue<StackSetAutoDeploymentArgs> autoDeployment;

    public StackSetAutoDeploymentArgs autoDeployment() {
        if (autoDeployment == null) return null;
        return autoDeployment.getValue("StackSetArgs.autoDeployment");
    }

    /**
     * Specifies whether you are acting as an account administrator in the organization&#39;s management account or as a delegated administrator in a member account. Valid values: `SELF` (default), `DELEGATED_ADMIN`.
     * 
     */
    private UndeferrableValue<String> callAs;

    public String callAs() {
        if (callAs == null) return null;
        return callAs.getValue("StackSetArgs.callAs");
    }

    /**
     * A list of capabilities. Valid values: `CAPABILITY_IAM`, `CAPABILITY_NAMED_IAM`, `CAPABILITY_AUTO_EXPAND`.
     * 
     */
    private UndeferrableValue<List<String>> capabilities;

    public List<String> capabilities() {
        if (capabilities == null) return null;
        return capabilities.getValue("StackSetArgs.capabilities");
    }

    /**
     * Description of the StackSet.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("StackSetArgs.description");
    }

    /**
     * Name of the IAM Role in all target accounts for StackSet operations. Defaults to `AWSCloudFormationStackSetExecutionRole` when using the `SELF_MANAGED` permission model. This should not be defined when using the `SERVICE_MANAGED` permission model.
     * 
     */
    private UndeferrableValue<String> executionRoleName;

    public String executionRoleName() {
        if (executionRoleName == null) return null;
        return executionRoleName.getValue("StackSetArgs.executionRoleName");
    }

    /**
     * Configuration block to allow StackSets to perform non-conflicting operations concurrently and queues conflicting operations.
     * 
     */
    private UndeferrableValue<StackSetManagedExecutionArgs> managedExecution;

    public StackSetManagedExecutionArgs managedExecution() {
        if (managedExecution == null) return null;
        return managedExecution.getValue("StackSetArgs.managedExecution");
    }

    /**
     * Name of the StackSet. The name must be unique in the region where you create your StackSet. The name can contain only alphanumeric characters (case-sensitive) and hyphens. It must start with an alphabetic character and cannot be longer than 128 characters.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("StackSetArgs.name");
    }

    /**
     * Preferences for how AWS CloudFormation performs a stack set update.
     * 
     */
    private UndeferrableValue<StackSetOperationPreferencesArgs> operationPreferences;

    public StackSetOperationPreferencesArgs operationPreferences() {
        if (operationPreferences == null) return null;
        return operationPreferences.getValue("StackSetArgs.operationPreferences");
    }

    /**
     * Key-value map of input parameters for the StackSet template. All template parameters, including those with a `Default`, must be configured or ignored with `lifecycle` configuration block `ignore_changes` argument. All `NoEcho` template parameters must be ignored with the `lifecycle` configuration block `ignore_changes` argument.
     * 
     */
    private UndeferrableValue<Map<String,String>> parameters;

    public Map<String,String> parameters() {
        if (parameters == null) return null;
        return parameters.getValue("StackSetArgs.parameters");
    }

    /**
     * Describes how the IAM roles required for your StackSet are created. Valid values: `SELF_MANAGED` (default), `SERVICE_MANAGED`.
     * 
     */
    private UndeferrableValue<String> permissionModel;

    public String permissionModel() {
        if (permissionModel == null) return null;
        return permissionModel.getValue("StackSetArgs.permissionModel");
    }

    /**
     * Key-value map of tags to associate with this StackSet and the Stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the Stacks. A maximum number of 50 tags can be specified. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("StackSetArgs.tags");
    }

    /**
     * String containing the CloudFormation template body. Maximum size: 51,200 bytes. Conflicts with `template_url`.
     * 
     */
    private UndeferrableValue<String> templateBody;

    public String templateBody() {
        if (templateBody == null) return null;
        return templateBody.getValue("StackSetArgs.templateBody");
    }

    /**
     * String containing the location of a file containing the CloudFormation template body. The URL must point to a template that is located in an Amazon S3 bucket. Maximum location file size: 460,800 bytes. Conflicts with `template_body`.
     * 
     */
    private UndeferrableValue<String> templateUrl;

    public String templateUrl() {
        if (templateUrl == null) return null;
        return templateUrl.getValue("StackSetArgs.templateUrl");
    }

}
