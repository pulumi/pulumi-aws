// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.cloudformation;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.cloudformation.inputs.StackSetAutoDeploymentArgs;
import com.pulumi.policypacks.aws.cloudformation.inputs.StackSetManagedExecutionArgs;
import com.pulumi.policypacks.aws.cloudformation.inputs.StackSetOperationPreferencesArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:cloudformation/stackSet:StackSet")
public final class StackSetArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Amazon Resource Number (ARN) of the IAM Role in the administrator account. This must be defined when using the `SELF_MANAGED` permission model.
     * 
     */
    @PolicyResourceProperty(name="administrationRoleArn", flag="unknown_administrationRoleArn")
    private String value_administrationRoleArn;
    private boolean unknown_administrationRoleArn;
    public String administrationRoleArn() {
        if (!unknown_administrationRoleArn) return value_administrationRoleArn;
        throw new UndeferrableValueException("Value 'StackSetArgs.administrationRoleArn' is not present");
    }

    /**
     * Configuration block containing the auto-deployment model for your StackSet. This can only be defined when using the `SERVICE_MANAGED` permission model.
     * 
     */
    @PolicyResourceProperty(name="autoDeployment", flag="unknown_autoDeployment")
    private StackSetAutoDeploymentArgs value_autoDeployment;
    private boolean unknown_autoDeployment;
    public StackSetAutoDeploymentArgs autoDeployment() {
        if (!unknown_autoDeployment) return value_autoDeployment;
        throw new UndeferrableValueException("Value 'StackSetArgs.autoDeployment' is not present");
    }

    /**
     * Specifies whether you are acting as an account administrator in the organization&#39;s management account or as a delegated administrator in a member account. Valid values: `SELF` (default), `DELEGATED_ADMIN`.
     * 
     */
    @PolicyResourceProperty(name="callAs", flag="unknown_callAs")
    private String value_callAs;
    private boolean unknown_callAs;
    public String callAs() {
        if (!unknown_callAs) return value_callAs;
        throw new UndeferrableValueException("Value 'StackSetArgs.callAs' is not present");
    }

    /**
     * A list of capabilities. Valid values: `CAPABILITY_IAM`, `CAPABILITY_NAMED_IAM`, `CAPABILITY_AUTO_EXPAND`.
     * 
     */
    @PolicyResourceProperty(name="capabilities", flag="unknown_capabilities")
    private List<String> value_capabilities;
    private boolean unknown_capabilities;
    public List<String> capabilities() {
        if (!unknown_capabilities) return value_capabilities;
        throw new UndeferrableValueException("Value 'StackSetArgs.capabilities' is not present");
    }

    /**
     * Description of the StackSet.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private String value_description;
    private boolean unknown_description;
    public String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'StackSetArgs.description' is not present");
    }

    /**
     * Name of the IAM Role in all target accounts for StackSet operations. Defaults to `AWSCloudFormationStackSetExecutionRole` when using the `SELF_MANAGED` permission model. This should not be defined when using the `SERVICE_MANAGED` permission model.
     * 
     */
    @PolicyResourceProperty(name="executionRoleName", flag="unknown_executionRoleName")
    private String value_executionRoleName;
    private boolean unknown_executionRoleName;
    public String executionRoleName() {
        if (!unknown_executionRoleName) return value_executionRoleName;
        throw new UndeferrableValueException("Value 'StackSetArgs.executionRoleName' is not present");
    }

    /**
     * Configuration block to allow StackSets to perform non-conflicting operations concurrently and queues conflicting operations.
     * 
     */
    @PolicyResourceProperty(name="managedExecution", flag="unknown_managedExecution")
    private StackSetManagedExecutionArgs value_managedExecution;
    private boolean unknown_managedExecution;
    public StackSetManagedExecutionArgs managedExecution() {
        if (!unknown_managedExecution) return value_managedExecution;
        throw new UndeferrableValueException("Value 'StackSetArgs.managedExecution' is not present");
    }

    /**
     * Name of the StackSet. The name must be unique in the region where you create your StackSet. The name can contain only alphanumeric characters (case-sensitive) and hyphens. It must start with an alphabetic character and cannot be longer than 128 characters.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'StackSetArgs.name' is not present");
    }

    /**
     * Preferences for how AWS CloudFormation performs a stack set update.
     * 
     */
    @PolicyResourceProperty(name="operationPreferences", flag="unknown_operationPreferences")
    private StackSetOperationPreferencesArgs value_operationPreferences;
    private boolean unknown_operationPreferences;
    public StackSetOperationPreferencesArgs operationPreferences() {
        if (!unknown_operationPreferences) return value_operationPreferences;
        throw new UndeferrableValueException("Value 'StackSetArgs.operationPreferences' is not present");
    }

    /**
     * Key-value map of input parameters for the StackSet template. All template parameters, including those with a `Default`, must be configured or ignored with `lifecycle` configuration block `ignore_changes` argument. All `NoEcho` template parameters must be ignored with the `lifecycle` configuration block `ignore_changes` argument.
     * 
     */
    @PolicyResourceProperty(name="parameters", flag="unknown_parameters")
    private Map<String,String> value_parameters;
    private boolean unknown_parameters;
    public Map<String,String> parameters() {
        if (!unknown_parameters) return value_parameters;
        throw new UndeferrableValueException("Value 'StackSetArgs.parameters' is not present");
    }

    /**
     * Describes how the IAM roles required for your StackSet are created. Valid values: `SELF_MANAGED` (default), `SERVICE_MANAGED`.
     * 
     */
    @PolicyResourceProperty(name="permissionModel", flag="unknown_permissionModel")
    private String value_permissionModel;
    private boolean unknown_permissionModel;
    public String permissionModel() {
        if (!unknown_permissionModel) return value_permissionModel;
        throw new UndeferrableValueException("Value 'StackSetArgs.permissionModel' is not present");
    }

    /**
     * Key-value map of tags to associate with this StackSet and the Stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the Stacks. A maximum number of 50 tags can be specified. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'StackSetArgs.tags' is not present");
    }

    /**
     * String containing the CloudFormation template body. Maximum size: 51,200 bytes. Conflicts with `template_url`.
     * 
     */
    @PolicyResourceProperty(name="templateBody", flag="unknown_templateBody")
    private String value_templateBody;
    private boolean unknown_templateBody;
    public String templateBody() {
        if (!unknown_templateBody) return value_templateBody;
        throw new UndeferrableValueException("Value 'StackSetArgs.templateBody' is not present");
    }

    /**
     * String containing the location of a file containing the CloudFormation template body. The URL must point to a template that is located in an Amazon S3 bucket. Maximum location file size: 460,800 bytes. Conflicts with `template_body`.
     * 
     */
    @PolicyResourceProperty(name="templateUrl", flag="unknown_templateUrl")
    private String value_templateUrl;
    private boolean unknown_templateUrl;
    public String templateUrl() {
        if (!unknown_templateUrl) return value_templateUrl;
        throw new UndeferrableValueException("Value 'StackSetArgs.templateUrl' is not present");
    }

}
