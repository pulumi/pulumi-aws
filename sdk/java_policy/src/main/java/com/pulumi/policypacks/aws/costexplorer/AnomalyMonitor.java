// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.costexplorer;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:costexplorer/anomalyMonitor:AnomalyMonitor")
public final class AnomalyMonitor extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * ARN of the anomaly monitor.
     * 
     */
    private UndeferrableValue<String> arn;

    public String arn() {
        if (arn == null) return null;
        return arn.getValue("AnomalyMonitor.arn");
    }

    /**
     * The dimensions to evaluate. Valid values: `SERVICE`.
     * 
     */
    private @Nullable UndeferrableValue<String> monitorDimension;

    public @Nullable String monitorDimension() {
        if (monitorDimension == null) return null;
        return monitorDimension.getValue("AnomalyMonitor.monitorDimension");
    }

    /**
     * A valid JSON representation for the [Expression](https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_Expression.html) object.
     * 
     */
    private @Nullable UndeferrableValue<String> monitorSpecification;

    public @Nullable String monitorSpecification() {
        if (monitorSpecification == null) return null;
        return monitorSpecification.getValue("AnomalyMonitor.monitorSpecification");
    }

    /**
     * The possible type values. Valid values: `DIMENSIONAL` | `CUSTOM`.
     * 
     */
    private UndeferrableValue<String> monitorType;

    public String monitorType() {
        if (monitorType == null) return null;
        return monitorType.getValue("AnomalyMonitor.monitorType");
    }

    /**
     * The name of the monitor.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("AnomalyMonitor.name");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private @Nullable UndeferrableValue<Map<String,String>> tags;

    public @Nullable Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("AnomalyMonitor.tags");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    private UndeferrableValue<Map<String,String>> tagsAll;

    public Map<String,String> tagsAll() {
        if (tagsAll == null) return null;
        return tagsAll.getValue("AnomalyMonitor.tagsAll");
    }

}
