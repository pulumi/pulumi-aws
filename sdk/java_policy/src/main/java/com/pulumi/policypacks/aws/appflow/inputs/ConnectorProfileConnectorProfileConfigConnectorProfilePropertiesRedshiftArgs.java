// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appflow.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.String;
import javax.annotation.Nullable;


public final class ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftArgs {

    @PolicyResourceProperty(name="bucketName", flag="unknown_bucketName")
    private String value_bucketName;
    private boolean unknown_bucketName;
    public String bucketName() {
        if (!unknown_bucketName) return value_bucketName;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftArgs.bucketName' is not present");
    }

    @PolicyResourceProperty(name="bucketPrefix", flag="unknown_bucketPrefix")
    private String value_bucketPrefix;
    private boolean unknown_bucketPrefix;
    public String bucketPrefix() {
        if (!unknown_bucketPrefix) return value_bucketPrefix;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftArgs.bucketPrefix' is not present");
    }

    /**
     * The unique ID that&#39;s assigned to an Amazon Redshift cluster.
     * 
     */
    @PolicyResourceProperty(name="clusterIdentifier", flag="unknown_clusterIdentifier")
    private String value_clusterIdentifier;
    private boolean unknown_clusterIdentifier;
    public String clusterIdentifier() {
        if (!unknown_clusterIdentifier) return value_clusterIdentifier;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftArgs.clusterIdentifier' is not present");
    }

    /**
     * ARN of the IAM role that permits AppFlow to access the database through Data API.
     * 
     */
    @PolicyResourceProperty(name="dataApiRoleArn", flag="unknown_dataApiRoleArn")
    private String value_dataApiRoleArn;
    private boolean unknown_dataApiRoleArn;
    public String dataApiRoleArn() {
        if (!unknown_dataApiRoleArn) return value_dataApiRoleArn;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftArgs.dataApiRoleArn' is not present");
    }

    /**
     * The name of an Amazon Redshift database.
     * 
     */
    @PolicyResourceProperty(name="databaseName", flag="unknown_databaseName")
    private String value_databaseName;
    private boolean unknown_databaseName;
    public String databaseName() {
        if (!unknown_databaseName) return value_databaseName;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftArgs.databaseName' is not present");
    }

    /**
     * The JDBC URL of the Amazon Redshift cluster.
     * 
     */
    @PolicyResourceProperty(name="databaseUrl", flag="unknown_databaseUrl")
    private String value_databaseUrl;
    private boolean unknown_databaseUrl;
    public String databaseUrl() {
        if (!unknown_databaseUrl) return value_databaseUrl;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftArgs.databaseUrl' is not present");
    }

    /**
     * ARN of the IAM role.
     * 
     */
    @PolicyResourceProperty(name="roleArn", flag="unknown_roleArn")
    private String value_roleArn;
    private boolean unknown_roleArn;
    public String roleArn() {
        if (!unknown_roleArn) return value_roleArn;
        throw new UndeferrableValueException("Value 'ConnectorProfileConnectorProfileConfigConnectorProfilePropertiesRedshiftArgs.roleArn' is not present");
    }

}
