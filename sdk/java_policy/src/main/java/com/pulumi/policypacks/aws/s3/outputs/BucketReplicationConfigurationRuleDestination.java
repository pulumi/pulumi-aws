// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.s3.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.s3.outputs.BucketReplicationConfigurationRuleDestinationAccessControlTranslation;
import com.pulumi.policypacks.aws.s3.outputs.BucketReplicationConfigurationRuleDestinationMetrics;
import com.pulumi.policypacks.aws.s3.outputs.BucketReplicationConfigurationRuleDestinationReplicationTime;
import java.lang.String;
import javax.annotation.Nullable;


public final class BucketReplicationConfigurationRuleDestination {

    /**
     * Specifies the overrides to use for object owners on replication. Must be used in conjunction with `account_id` owner override configuration.
     * 
     */
    private @Nullable UndeferrableValue<BucketReplicationConfigurationRuleDestinationAccessControlTranslation> accessControlTranslation;

    public @Nullable BucketReplicationConfigurationRuleDestinationAccessControlTranslation accessControlTranslation() {
        if (accessControlTranslation == null) return null;
        return accessControlTranslation.getValue("BucketReplicationConfigurationRuleDestination.accessControlTranslation");
    }

    /**
     * The Account ID to use for overriding the object owner on replication. Must be used in conjunction with `access_control_translation` override configuration.
     * 
     */
    private @Nullable UndeferrableValue<String> accountId;

    public @Nullable String accountId() {
        if (accountId == null) return null;
        return accountId.getValue("BucketReplicationConfigurationRuleDestination.accountId");
    }

    /**
     * The ARN of the S3 bucket where you want Amazon S3 to store replicas of the object identified by the rule.
     * 
     */
    private UndeferrableValue<String> bucket;

    public String bucket() {
        if (bucket == null) return null;
        return bucket.getValue("BucketReplicationConfigurationRuleDestination.bucket");
    }

    /**
     * Enables replication metrics (required for S3 RTC) (documented below).
     * 
     */
    private @Nullable UndeferrableValue<BucketReplicationConfigurationRuleDestinationMetrics> metrics;

    public @Nullable BucketReplicationConfigurationRuleDestinationMetrics metrics() {
        if (metrics == null) return null;
        return metrics.getValue("BucketReplicationConfigurationRuleDestination.metrics");
    }

    /**
     * Destination KMS encryption key ARN for SSE-KMS replication. Must be used in conjunction with
     * `sse_kms_encrypted_objects` source selection criteria.
     * 
     */
    private @Nullable UndeferrableValue<String> replicaKmsKeyId;

    public @Nullable String replicaKmsKeyId() {
        if (replicaKmsKeyId == null) return null;
        return replicaKmsKeyId.getValue("BucketReplicationConfigurationRuleDestination.replicaKmsKeyId");
    }

    /**
     * Enables S3 Replication Time Control (S3 RTC) (documented below).
     * 
     */
    private @Nullable UndeferrableValue<BucketReplicationConfigurationRuleDestinationReplicationTime> replicationTime;

    public @Nullable BucketReplicationConfigurationRuleDestinationReplicationTime replicationTime() {
        if (replicationTime == null) return null;
        return replicationTime.getValue("BucketReplicationConfigurationRuleDestination.replicationTime");
    }

    /**
     * The [storage class](https://docs.aws.amazon.com/AmazonS3/latest/API/API_Destination.html#AmazonS3-Type-Destination-StorageClass) used to store the object. By default, Amazon S3 uses the storage class of the source object to create the object replica.
     * 
     */
    private @Nullable UndeferrableValue<String> storageClass;

    public @Nullable String storageClass() {
        if (storageClass == null) return null;
        return storageClass.getValue("BucketReplicationConfigurationRuleDestination.storageClass");
    }

}
