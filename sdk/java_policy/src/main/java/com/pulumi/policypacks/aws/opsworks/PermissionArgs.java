// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.opsworks;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:opsworks/permission:Permission")
public final class PermissionArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Whether the user is allowed to use SSH to communicate with the instance
     * 
     */
    private UndeferrableValue<Boolean> allowSsh;

    public Boolean allowSsh() {
        if (allowSsh == null) return null;
        return allowSsh.getValue("PermissionArgs.allowSsh");
    }

    /**
     * Whether the user is allowed to use sudo to elevate privileges
     * 
     */
    private UndeferrableValue<Boolean> allowSudo;

    public Boolean allowSudo() {
        if (allowSudo == null) return null;
        return allowSudo.getValue("PermissionArgs.allowSudo");
    }

    /**
     * The users permission level. Mus be one of `deny`, `show`, `deploy`, `manage`, `iam_only`
     * 
     */
    private UndeferrableValue<String> level;

    public String level() {
        if (level == null) return null;
        return level.getValue("PermissionArgs.level");
    }

    /**
     * The stack to set the permissions for
     * 
     */
    private UndeferrableValue<String> stackId;

    public String stackId() {
        if (stackId == null) return null;
        return stackId.getValue("PermissionArgs.stackId");
    }

    /**
     * The user&#39;s IAM ARN to set permissions for
     * 
     */
    private UndeferrableValue<String> userArn;

    public String userArn() {
        if (userArn == null) return null;
        return userArn.getValue("PermissionArgs.userArn");
    }

}
