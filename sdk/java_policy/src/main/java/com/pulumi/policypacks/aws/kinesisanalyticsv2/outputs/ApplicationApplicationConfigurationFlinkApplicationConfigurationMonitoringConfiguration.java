// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.kinesisanalyticsv2.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.String;
import javax.annotation.Nullable;


public final class ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfiguration {

    /**
     * Describes whether to use the default CloudWatch logging configuration for an application. Valid values: `CUSTOM`, `DEFAULT`. Set this attribute to `CUSTOM` in order for any specified `log_level` or `metrics_level` attribute values to be effective.
     * 
     */
    @PolicyResourceProperty(name="configurationType", flag="unknown_configurationType")
    private String value_configurationType;
    private boolean unknown_configurationType;
    public String configurationType() {
        if (!unknown_configurationType) return value_configurationType;
        throw new UndeferrableValueException("Value 'ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfiguration.configurationType' is not present");
    }

    /**
     * Describes the verbosity of the CloudWatch Logs for an application. Valid values: `DEBUG`, `ERROR`, `INFO`, `WARN`.
     * 
     */
    @PolicyResourceProperty(name="logLevel", flag="unknown_logLevel")
    private @Nullable String value_logLevel;
    private boolean unknown_logLevel;
    public @Nullable String logLevel() {
        if (!unknown_logLevel) return value_logLevel;
        throw new UndeferrableValueException("Value 'ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfiguration.logLevel' is not present");
    }

    /**
     * Describes the granularity of the CloudWatch Logs for an application. Valid values: `APPLICATION`, `OPERATOR`, `PARALLELISM`, `TASK`.
     * 
     */
    @PolicyResourceProperty(name="metricsLevel", flag="unknown_metricsLevel")
    private @Nullable String value_metricsLevel;
    private boolean unknown_metricsLevel;
    public @Nullable String metricsLevel() {
        if (!unknown_metricsLevel) return value_metricsLevel;
        throw new UndeferrableValueException("Value 'ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfiguration.metricsLevel' is not present");
    }

}
