// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.cloudwatch.outputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;


public final class EventTargetRedshiftTarget {

    /**
     * The name of the database.
     * 
     */
    private UndeferrableValue<String> database;

    public String database() {
        if (database == null) return null;
        return database.getValue("EventTargetRedshiftTarget.database");
    }

    /**
     * The database user name.
     * 
     */
    private @Nullable UndeferrableValue<String> dbUser;

    public @Nullable String dbUser() {
        if (dbUser == null) return null;
        return dbUser.getValue("EventTargetRedshiftTarget.dbUser");
    }

    /**
     * The name or ARN of the secret that enables access to the database.
     * 
     */
    private @Nullable UndeferrableValue<String> secretsManagerArn;

    public @Nullable String secretsManagerArn() {
        if (secretsManagerArn == null) return null;
        return secretsManagerArn.getValue("EventTargetRedshiftTarget.secretsManagerArn");
    }

    /**
     * The SQL statement text to run.
     * 
     */
    private @Nullable UndeferrableValue<String> sql;

    public @Nullable String sql() {
        if (sql == null) return null;
        return sql.getValue("EventTargetRedshiftTarget.sql");
    }

    /**
     * The name of the SQL statement.
     * 
     */
    private @Nullable UndeferrableValue<String> statementName;

    public @Nullable String statementName() {
        if (statementName == null) return null;
        return statementName.getValue("EventTargetRedshiftTarget.statementName");
    }

    /**
     * Indicates whether to send an event back to EventBridge after the SQL statement runs.
     * 
     */
    private @Nullable UndeferrableValue<Boolean> withEvent;

    public @Nullable Boolean withEvent() {
        if (withEvent == null) return null;
        return withEvent.getValue("EventTargetRedshiftTarget.withEvent");
    }

}
