// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.servicecatalog;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:servicecatalog/appregistryAttributeGroup:AppregistryAttributeGroup")
public final class AppregistryAttributeGroupArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * A JSON string of nested key-value pairs that represents the attributes of the group.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="attributes", flag="unknown_attributes")
    private String value_attributes;
    private boolean unknown_attributes;
    public String attributes() {
        if (!unknown_attributes) return value_attributes;
        throw new UndeferrableValueException("Value 'AppregistryAttributeGroupArgs.attributes' is not present");
    }

    /**
     * Description of the Attribute Group.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private String value_description;
    private boolean unknown_description;
    public String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'AppregistryAttributeGroupArgs.description' is not present");
    }

    /**
     * Name of the Attribute Group.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'AppregistryAttributeGroupArgs.name' is not present");
    }

    /**
     * A map of tags assigned to the Attribute Group. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'AppregistryAttributeGroupArgs.tags' is not present");
    }

}
