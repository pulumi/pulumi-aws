// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.cloudformation;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.cloudformation.inputs.StackInstancesDeploymentTargetsArgs;
import com.pulumi.policypacks.aws.cloudformation.inputs.StackInstancesOperationPreferencesArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:cloudformation/stackInstances:StackInstances")
public final class StackInstancesArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Accounts where you want to create stack instances in the specified `regions`. You can specify either `accounts` or `deployment_targets`, but not both.
     * 
     */
    private UndeferrableValue<List<String>> accounts;

    public List<String> accounts() {
        if (accounts == null) return null;
        return accounts.getValue("StackInstancesArgs.accounts");
    }

    /**
     * Whether you are acting as an account administrator in the organization&#39;s management account or as a delegated administrator in a member account. Valid values: `SELF` (default), `DELEGATED_ADMIN`.
     * 
     */
    private UndeferrableValue<String> callAs;

    public String callAs() {
        if (callAs == null) return null;
        return callAs.getValue("StackInstancesArgs.callAs");
    }

    /**
     * AWS Organizations accounts for which to create stack instances in the `regions`. stack sets doesn&#39;t deploy stack instances to the organization management account, even if the organization management account is in your organization or in an OU in your organization. Drift detection is not possible for most of this argument. See deployment_targets below.
     * 
     */
    private UndeferrableValue<StackInstancesDeploymentTargetsArgs> deploymentTargets;

    public StackInstancesDeploymentTargetsArgs deploymentTargets() {
        if (deploymentTargets == null) return null;
        return deploymentTargets.getValue("StackInstancesArgs.deploymentTargets");
    }

    /**
     * Preferences for how AWS CloudFormation performs a stack set operation. See operation_preferences below.
     * 
     */
    private UndeferrableValue<StackInstancesOperationPreferencesArgs> operationPreferences;

    public StackInstancesOperationPreferencesArgs operationPreferences() {
        if (operationPreferences == null) return null;
        return operationPreferences.getValue("StackInstancesArgs.operationPreferences");
    }

    /**
     * Key-value map of input parameters to override from the stack set for these instances. This argument&#39;s drift detection is limited to the first account and region since each instance can have unique parameters.
     * 
     */
    private UndeferrableValue<Map<String,String>> parameterOverrides;

    public Map<String,String> parameterOverrides() {
        if (parameterOverrides == null) return null;
        return parameterOverrides.getValue("StackInstancesArgs.parameterOverrides");
    }

    /**
     * Regions where you want to create stack instances in the specified `accounts`.
     * 
     */
    private UndeferrableValue<List<String>> regions;

    public List<String> regions() {
        if (regions == null) return null;
        return regions.getValue("StackInstancesArgs.regions");
    }

    /**
     * Whether to remove the stack instances from the stack set, but not delete the stacks. You can&#39;t reassociate a retained stack or add an existing, saved stack to a new stack set. To retain the stack, ensure `retain_stacks = true` has been successfully applied _before_ an apply that would destroy the resource. Defaults to `false`.
     * 
     */
    private UndeferrableValue<Boolean> retainStacks;

    public Boolean retainStacks() {
        if (retainStacks == null) return null;
        return retainStacks.getValue("StackInstancesArgs.retainStacks");
    }

    /**
     * Name of the stack set.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> stackSetName;

    public String stackSetName() {
        if (stackSetName == null) return null;
        return stackSetName.getValue("StackInstancesArgs.stackSetName");
    }

}
