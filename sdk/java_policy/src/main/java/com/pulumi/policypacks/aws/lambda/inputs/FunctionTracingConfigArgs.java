// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.lambda.inputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.String;


public final class FunctionTracingConfigArgs {

    /**
     * Whether to sample and trace a subset of incoming requests with AWS X-Ray. Valid values are `PassThrough` and `Active`. If `PassThrough`, Lambda will only trace the request from an upstream service if it contains a tracing header with &#34;sampled=1&#34;. If `Active`, Lambda will respect any tracing header it receives from an upstream service. If no tracing header is received, Lambda will call X-Ray for a tracing decision.
     * 
     */
    @PolicyResourceProperty(name="mode", flag="unknown_mode")
    private String value_mode;
    private boolean unknown_mode;
    public String mode() {
        if (!unknown_mode) return value_mode;
        throw new UndeferrableValueException("Value 'FunctionTracingConfigArgs.mode' is not present");
    }

}
