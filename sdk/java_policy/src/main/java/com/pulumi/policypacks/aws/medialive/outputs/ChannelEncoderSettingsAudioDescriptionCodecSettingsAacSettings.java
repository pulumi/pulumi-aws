// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.medialive.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import java.lang.Double;
import java.lang.String;
import javax.annotation.Nullable;


public final class ChannelEncoderSettingsAudioDescriptionCodecSettingsAacSettings {

    /**
     * Average bitrate in bits/second.
     * 
     */
    @PolicyResourceProperty(name="bitrate", flag="unknown_bitrate")
    private @Nullable Double value_bitrate;
    private boolean unknown_bitrate;
    public @Nullable Double bitrate() {
        if (!unknown_bitrate) return value_bitrate;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsAudioDescriptionCodecSettingsAacSettings.bitrate' is not present");
    }

    /**
     * Mono, Stereo, or 5.1 channel layout.
     * 
     */
    @PolicyResourceProperty(name="codingMode", flag="unknown_codingMode")
    private @Nullable String value_codingMode;
    private boolean unknown_codingMode;
    public @Nullable String codingMode() {
        if (!unknown_codingMode) return value_codingMode;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsAudioDescriptionCodecSettingsAacSettings.codingMode' is not present");
    }

    /**
     * Set to &#34;broadcasterMixedAd&#34; when input contains pre-mixed main audio + AD (narration) as a stereo pair.
     * 
     */
    @PolicyResourceProperty(name="inputType", flag="unknown_inputType")
    private @Nullable String value_inputType;
    private boolean unknown_inputType;
    public @Nullable String inputType() {
        if (!unknown_inputType) return value_inputType;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsAudioDescriptionCodecSettingsAacSettings.inputType' is not present");
    }

    /**
     * AAC profile.
     * 
     */
    @PolicyResourceProperty(name="profile", flag="unknown_profile")
    private @Nullable String value_profile;
    private boolean unknown_profile;
    public @Nullable String profile() {
        if (!unknown_profile) return value_profile;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsAudioDescriptionCodecSettingsAacSettings.profile' is not present");
    }

    /**
     * The rate control mode.
     * 
     */
    @PolicyResourceProperty(name="rateControlMode", flag="unknown_rateControlMode")
    private @Nullable String value_rateControlMode;
    private boolean unknown_rateControlMode;
    public @Nullable String rateControlMode() {
        if (!unknown_rateControlMode) return value_rateControlMode;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsAudioDescriptionCodecSettingsAacSettings.rateControlMode' is not present");
    }

    /**
     * Sets LATM/LOAS AAC output for raw containers.
     * 
     */
    @PolicyResourceProperty(name="rawFormat", flag="unknown_rawFormat")
    private @Nullable String value_rawFormat;
    private boolean unknown_rawFormat;
    public @Nullable String rawFormat() {
        if (!unknown_rawFormat) return value_rawFormat;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsAudioDescriptionCodecSettingsAacSettings.rawFormat' is not present");
    }

    /**
     * Sample rate in Hz.
     * 
     */
    @PolicyResourceProperty(name="sampleRate", flag="unknown_sampleRate")
    private @Nullable Double value_sampleRate;
    private boolean unknown_sampleRate;
    public @Nullable Double sampleRate() {
        if (!unknown_sampleRate) return value_sampleRate;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsAudioDescriptionCodecSettingsAacSettings.sampleRate' is not present");
    }

    /**
     * Use MPEG-2 AAC audio instead of MPEG-4 AAC audio for raw or MPEG-2 Transport Stream containers.
     * 
     */
    @PolicyResourceProperty(name="spec", flag="unknown_spec")
    private @Nullable String value_spec;
    private boolean unknown_spec;
    public @Nullable String spec() {
        if (!unknown_spec) return value_spec;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsAudioDescriptionCodecSettingsAacSettings.spec' is not present");
    }

    /**
     * VBR Quality Level - Only used if rateControlMode is VBR.
     * 
     */
    @PolicyResourceProperty(name="vbrQuality", flag="unknown_vbrQuality")
    private @Nullable String value_vbrQuality;
    private boolean unknown_vbrQuality;
    public @Nullable String vbrQuality() {
        if (!unknown_vbrQuality) return value_vbrQuality;
        throw new UndeferrableValueException("Value 'ChannelEncoderSettingsAudioDescriptionCodecSettingsAacSettings.vbrQuality' is not present");
    }

}
