// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.backup;

import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.backup.FrameworkControl;
import java.lang.String;
import java.util.List;
import java.util.Map;


@PolicyResourceType(type="aws:backup/framework:Framework")
public final class Framework extends com.pulumi.resources.PolicyResource {

    /**
     * The ARN of the backup framework.
     * 
     */
    public String arn;



    /**
     * One or more control blocks that make up the framework. Each control in the list has a name, input parameters, and scope. Detailed below.
     * 
     */
    public List<FrameworkControl> controls;



    /**
     * The date and time that a framework is created, in Unix format and Coordinated Universal Time (UTC).
     * 
     */
    public String creationTime;



    /**
     * The deployment status of a framework. The statuses are: `CREATE_IN_PROGRESS` | `UPDATE_IN_PROGRESS` | `DELETE_IN_PROGRESS` | `COMPLETED` | `FAILED`.
     * 
     */
    public String deploymentStatus;



    /**
     * The description of the framework with a maximum of 1,024 characters
     * 
     */
    public String description;



    /**
     * The unique name of the framework. The name must be between 1 and 256 characters, starting with a letter, and consisting of letters, numbers, and underscores.
     * 
     */
    public String name;



    /**
     * A framework consists of one or more controls. Each control governs a resource, such as backup plans, backup selections, backup vaults, or recovery points. You can also turn AWS Config recording on or off for each resource. For more information refer to the [AWS documentation for Framework Status](https://docs.aws.amazon.com/aws-backup/latest/devguide/API_DescribeFramework.html#Backup-DescribeFramework-response-FrameworkStatus)
     * 
     */
    public String status;



    /**
     * Metadata that you can assign to help organize the frameworks you create. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    public Map<String,String> tags;



    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    public Map<String,String> tagsAll;



}
