// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appmesh.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.appmesh.outputs.VirtualNodeSpecBackend;
import com.pulumi.policypacks.aws.appmesh.outputs.VirtualNodeSpecBackendDefaults;
import com.pulumi.policypacks.aws.appmesh.outputs.VirtualNodeSpecListener;
import com.pulumi.policypacks.aws.appmesh.outputs.VirtualNodeSpecLogging;
import com.pulumi.policypacks.aws.appmesh.outputs.VirtualNodeSpecServiceDiscovery;
import java.util.List;
import javax.annotation.Nullable;


public final class VirtualNodeSpec {

    /**
     * Defaults for backends.
     * 
     */
    private @Nullable UndeferrableValue<VirtualNodeSpecBackendDefaults> backendDefaults;

    public @Nullable VirtualNodeSpecBackendDefaults backendDefaults() {
        if (backendDefaults == null) return null;
        return backendDefaults.getValue("VirtualNodeSpec.backendDefaults");
    }

    /**
     * Backends to which the virtual node is expected to send outbound traffic.
     * 
     */
    private @Nullable UndeferrableValue<List<VirtualNodeSpecBackend>> backends;

    public @Nullable List<VirtualNodeSpecBackend> backends() {
        if (backends == null) return null;
        return backends.getValue("VirtualNodeSpec.backends");
    }

    /**
     * Listeners from which the virtual node is expected to receive inbound traffic.
     * 
     */
    private @Nullable UndeferrableValue<List<VirtualNodeSpecListener>> listeners;

    public @Nullable List<VirtualNodeSpecListener> listeners() {
        if (listeners == null) return null;
        return listeners.getValue("VirtualNodeSpec.listeners");
    }

    /**
     * Inbound and outbound access logging information for the virtual node.
     * 
     */
    private @Nullable UndeferrableValue<VirtualNodeSpecLogging> logging;

    public @Nullable VirtualNodeSpecLogging logging() {
        if (logging == null) return null;
        return logging.getValue("VirtualNodeSpec.logging");
    }

    /**
     * Service discovery information for the virtual node.
     * 
     */
    private @Nullable UndeferrableValue<VirtualNodeSpecServiceDiscovery> serviceDiscovery;

    public @Nullable VirtualNodeSpecServiceDiscovery serviceDiscovery() {
        if (serviceDiscovery == null) return null;
        return serviceDiscovery.getValue("VirtualNodeSpec.serviceDiscovery");
    }

}
