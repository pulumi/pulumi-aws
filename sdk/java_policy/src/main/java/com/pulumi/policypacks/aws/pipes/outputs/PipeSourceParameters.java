// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.pipes.outputs;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.policypacks.aws.pipes.outputs.PipeSourceParametersActivemqBrokerParameters;
import com.pulumi.policypacks.aws.pipes.outputs.PipeSourceParametersDynamodbStreamParameters;
import com.pulumi.policypacks.aws.pipes.outputs.PipeSourceParametersFilterCriteria;
import com.pulumi.policypacks.aws.pipes.outputs.PipeSourceParametersKinesisStreamParameters;
import com.pulumi.policypacks.aws.pipes.outputs.PipeSourceParametersManagedStreamingKafkaParameters;
import com.pulumi.policypacks.aws.pipes.outputs.PipeSourceParametersRabbitmqBrokerParameters;
import com.pulumi.policypacks.aws.pipes.outputs.PipeSourceParametersSelfManagedKafkaParameters;
import com.pulumi.policypacks.aws.pipes.outputs.PipeSourceParametersSqsQueueParameters;
import javax.annotation.Nullable;


public final class PipeSourceParameters {

    /**
     * The parameters for using an Active MQ broker as a source. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="activemqBrokerParameters", flag="unknown_activemqBrokerParameters")
    private @Nullable PipeSourceParametersActivemqBrokerParameters value_activemqBrokerParameters;
    private boolean unknown_activemqBrokerParameters;
    public @Nullable PipeSourceParametersActivemqBrokerParameters activemqBrokerParameters() {
        if (!unknown_activemqBrokerParameters) return value_activemqBrokerParameters;
        throw new UndeferrableValueException("Value 'PipeSourceParameters.activemqBrokerParameters' is not present");
    }

    /**
     * The parameters for using a DynamoDB stream as a source.  Detailed below.
     * 
     */
    @PolicyResourceProperty(name="dynamodbStreamParameters", flag="unknown_dynamodbStreamParameters")
    private @Nullable PipeSourceParametersDynamodbStreamParameters value_dynamodbStreamParameters;
    private boolean unknown_dynamodbStreamParameters;
    public @Nullable PipeSourceParametersDynamodbStreamParameters dynamodbStreamParameters() {
        if (!unknown_dynamodbStreamParameters) return value_dynamodbStreamParameters;
        throw new UndeferrableValueException("Value 'PipeSourceParameters.dynamodbStreamParameters' is not present");
    }

    /**
     * The collection of event patterns used to [filter events](https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-pipes-event-filtering.html). Detailed below.
     * 
     */
    @PolicyResourceProperty(name="filterCriteria", flag="unknown_filterCriteria")
    private @Nullable PipeSourceParametersFilterCriteria value_filterCriteria;
    private boolean unknown_filterCriteria;
    public @Nullable PipeSourceParametersFilterCriteria filterCriteria() {
        if (!unknown_filterCriteria) return value_filterCriteria;
        throw new UndeferrableValueException("Value 'PipeSourceParameters.filterCriteria' is not present");
    }

    /**
     * The parameters for using a Kinesis stream as a source. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="kinesisStreamParameters", flag="unknown_kinesisStreamParameters")
    private @Nullable PipeSourceParametersKinesisStreamParameters value_kinesisStreamParameters;
    private boolean unknown_kinesisStreamParameters;
    public @Nullable PipeSourceParametersKinesisStreamParameters kinesisStreamParameters() {
        if (!unknown_kinesisStreamParameters) return value_kinesisStreamParameters;
        throw new UndeferrableValueException("Value 'PipeSourceParameters.kinesisStreamParameters' is not present");
    }

    /**
     * The parameters for using an MSK stream as a source. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="managedStreamingKafkaParameters", flag="unknown_managedStreamingKafkaParameters")
    private @Nullable PipeSourceParametersManagedStreamingKafkaParameters value_managedStreamingKafkaParameters;
    private boolean unknown_managedStreamingKafkaParameters;
    public @Nullable PipeSourceParametersManagedStreamingKafkaParameters managedStreamingKafkaParameters() {
        if (!unknown_managedStreamingKafkaParameters) return value_managedStreamingKafkaParameters;
        throw new UndeferrableValueException("Value 'PipeSourceParameters.managedStreamingKafkaParameters' is not present");
    }

    /**
     * The parameters for using a Rabbit MQ broker as a source. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="rabbitmqBrokerParameters", flag="unknown_rabbitmqBrokerParameters")
    private @Nullable PipeSourceParametersRabbitmqBrokerParameters value_rabbitmqBrokerParameters;
    private boolean unknown_rabbitmqBrokerParameters;
    public @Nullable PipeSourceParametersRabbitmqBrokerParameters rabbitmqBrokerParameters() {
        if (!unknown_rabbitmqBrokerParameters) return value_rabbitmqBrokerParameters;
        throw new UndeferrableValueException("Value 'PipeSourceParameters.rabbitmqBrokerParameters' is not present");
    }

    /**
     * The parameters for using a self-managed Apache Kafka stream as a source. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="selfManagedKafkaParameters", flag="unknown_selfManagedKafkaParameters")
    private @Nullable PipeSourceParametersSelfManagedKafkaParameters value_selfManagedKafkaParameters;
    private boolean unknown_selfManagedKafkaParameters;
    public @Nullable PipeSourceParametersSelfManagedKafkaParameters selfManagedKafkaParameters() {
        if (!unknown_selfManagedKafkaParameters) return value_selfManagedKafkaParameters;
        throw new UndeferrableValueException("Value 'PipeSourceParameters.selfManagedKafkaParameters' is not present");
    }

    /**
     * The parameters for using a Amazon SQS stream as a source. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="sqsQueueParameters", flag="unknown_sqsQueueParameters")
    private @Nullable PipeSourceParametersSqsQueueParameters value_sqsQueueParameters;
    private boolean unknown_sqsQueueParameters;
    public @Nullable PipeSourceParametersSqsQueueParameters sqsQueueParameters() {
        if (!unknown_sqsQueueParameters) return value_sqsQueueParameters;
        throw new UndeferrableValueException("Value 'PipeSourceParameters.sqsQueueParameters' is not present");
    }

}
