// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.connect;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.connect.outputs.PhoneNumberStatus;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:connect/phoneNumber:PhoneNumber")
public final class PhoneNumber extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The ARN of the phone number.
     * 
     */
    private UndeferrableValue<String> arn;

    public String arn() {
        if (arn == null) return null;
        return arn.getValue("PhoneNumber.arn");
    }

    /**
     * The ISO country code. For a list of Valid values, refer to [PhoneNumberCountryCode](https://docs.aws.amazon.com/connect/latest/APIReference/API_SearchAvailablePhoneNumbers.html#connect-SearchAvailablePhoneNumbers-request-PhoneNumberCountryCode).
     * 
     */
    private UndeferrableValue<String> countryCode;

    public String countryCode() {
        if (countryCode == null) return null;
        return countryCode.getValue("PhoneNumber.countryCode");
    }

    /**
     * The description of the phone number.
     * 
     */
    private @Nullable UndeferrableValue<String> description;

    public @Nullable String description() {
        if (description == null) return null;
        return description.getValue("PhoneNumber.description");
    }

    /**
     * The phone number. Phone numbers are formatted `[+] [country code] [subscriber number including area code]`.
     * 
     */
    private UndeferrableValue<String> phoneNumber;

    public String phoneNumber() {
        if (phoneNumber == null) return null;
        return phoneNumber.getValue("PhoneNumber.phoneNumber");
    }

    /**
     * The prefix of the phone number that is used to filter available phone numbers. If provided, it must contain `+` as part of the country code. Do not specify this argument when importing the resource.
     * 
     */
    private @Nullable UndeferrableValue<String> prefix;

    public @Nullable String prefix() {
        if (prefix == null) return null;
        return prefix.getValue("PhoneNumber.prefix");
    }

    /**
     * The status of the phone number. Valid Values: `CLAIMED` | `IN_PROGRESS` | `FAILED`.
     * 
     */
    private UndeferrableValue<List<PhoneNumberStatus>> statuses;

    public List<PhoneNumberStatus> statuses() {
        if (statuses == null) return null;
        return statuses.getValue("PhoneNumber.statuses");
    }

    /**
     * Tags to apply to the Phone Number. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private @Nullable UndeferrableValue<Map<String,String>> tags;

    public @Nullable Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("PhoneNumber.tags");
    }

    /**
     * A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    private UndeferrableValue<Map<String,String>> tagsAll;

    public Map<String,String> tagsAll() {
        if (tagsAll == null) return null;
        return tagsAll.getValue("PhoneNumber.tagsAll");
    }

    /**
     * The Amazon Resource Name (ARN) for Amazon Connect instances that phone numbers are claimed to.
     * 
     */
    private UndeferrableValue<String> targetArn;

    public String targetArn() {
        if (targetArn == null) return null;
        return targetArn.getValue("PhoneNumber.targetArn");
    }

    /**
     * The type of phone number. Valid Values: `TOLL_FREE` | `DID`.
     * 
     */
    private UndeferrableValue<String> type;

    public String type() {
        if (type == null) return null;
        return type.getValue("PhoneNumber.type");
    }

}
