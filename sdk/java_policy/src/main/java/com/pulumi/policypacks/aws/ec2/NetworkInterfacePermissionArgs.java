// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ec2;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.ec2.inputs.NetworkInterfacePermissionTimeoutsArgs;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:ec2/networkInterfacePermission:NetworkInterfacePermission")
public final class NetworkInterfacePermissionArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The Amazon Web Services account ID.
     * 
     */
    @PolicyResourceProperty(name="awsAccountId", flag="unknown_awsAccountId")
    private String value_awsAccountId;
    private boolean unknown_awsAccountId;
    public String awsAccountId() {
        if (!unknown_awsAccountId) return value_awsAccountId;
        throw new UndeferrableValueException("Value 'NetworkInterfacePermissionArgs.awsAccountId' is not present");
    }

    /**
     * The ID of the network interface.
     * 
     */
    @PolicyResourceProperty(name="networkInterfaceId", flag="unknown_networkInterfaceId")
    private String value_networkInterfaceId;
    private boolean unknown_networkInterfaceId;
    public String networkInterfaceId() {
        if (!unknown_networkInterfaceId) return value_networkInterfaceId;
        throw new UndeferrableValueException("Value 'NetworkInterfacePermissionArgs.networkInterfaceId' is not present");
    }

    /**
     * The type of permission to grant. Valid values are `INSTANCE-ATTACH` or `EIP-ASSOCIATE`.
     * 
     */
    @PolicyResourceProperty(name="permission", flag="unknown_permission")
    private String value_permission;
    private boolean unknown_permission;
    public String permission() {
        if (!unknown_permission) return value_permission;
        throw new UndeferrableValueException("Value 'NetworkInterfacePermissionArgs.permission' is not present");
    }

    @PolicyResourceProperty(name="timeouts", flag="unknown_timeouts")
    private NetworkInterfacePermissionTimeoutsArgs value_timeouts;
    private boolean unknown_timeouts;
    public NetworkInterfacePermissionTimeoutsArgs timeouts() {
        if (!unknown_timeouts) return value_timeouts;
        throw new UndeferrableValueException("Value 'NetworkInterfacePermissionArgs.timeouts' is not present");
    }

}
