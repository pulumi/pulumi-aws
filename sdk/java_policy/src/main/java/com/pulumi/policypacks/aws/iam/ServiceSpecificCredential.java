// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.iam;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:iam/serviceSpecificCredential:ServiceSpecificCredential")
public final class ServiceSpecificCredential extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The name of the AWS service that is to be associated with the credentials. The service you specify here is the only service that can be accessed using these credentials.
     * 
     */
    private UndeferrableValue<String> serviceName;

    public String serviceName() {
        if (serviceName == null) return null;
        return serviceName.getValue("ServiceSpecificCredential.serviceName");
    }

    /**
     * The generated password for the service-specific credential.
     * 
     */
    private UndeferrableValue<String> servicePassword;

    public String servicePassword() {
        if (servicePassword == null) return null;
        return servicePassword.getValue("ServiceSpecificCredential.servicePassword");
    }

    /**
     * The unique identifier for the service-specific credential.
     * 
     */
    private UndeferrableValue<String> serviceSpecificCredentialId;

    public String serviceSpecificCredentialId() {
        if (serviceSpecificCredentialId == null) return null;
        return serviceSpecificCredentialId.getValue("ServiceSpecificCredential.serviceSpecificCredentialId");
    }

    /**
     * The generated user name for the service-specific credential. This value is generated by combining the IAM user&#39;s name combined with the ID number of the AWS account, as in `jane-at-123456789012`, for example.
     * 
     */
    private UndeferrableValue<String> serviceUserName;

    public String serviceUserName() {
        if (serviceUserName == null) return null;
        return serviceUserName.getValue("ServiceSpecificCredential.serviceUserName");
    }

    /**
     * The status to be assigned to the service-specific credential. Valid values are `Active` and `Inactive`. Default value is `Active`.
     * 
     */
    private @Nullable UndeferrableValue<String> status;

    public @Nullable String status() {
        if (status == null) return null;
        return status.getValue("ServiceSpecificCredential.status");
    }

    /**
     * The name of the IAM user that is to be associated with the credentials. The new service-specific credentials have the same permissions as the associated user except that they can be used only to access the specified service.
     * 
     */
    private UndeferrableValue<String> userName;

    public String userName() {
        if (userName == null) return null;
        return userName.getValue("ServiceSpecificCredential.userName");
    }

}
