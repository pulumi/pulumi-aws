// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.iam;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import java.lang.String;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:iam/serviceSpecificCredential:ServiceSpecificCredential")
public final class ServiceSpecificCredential extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The name of the AWS service that is to be associated with the credentials. The service you specify here is the only service that can be accessed using these credentials.
     * 
     */
    @PolicyResourceProperty(name="serviceName", flag="unknown_serviceName")
    private String value_serviceName;
    private boolean unknown_serviceName;
    public String serviceName() {
        if (!unknown_serviceName) return value_serviceName;
        throw new UndeferrableValueException("Value 'ServiceSpecificCredential.serviceName' is not present");
    }

    /**
     * The generated password for the service-specific credential.
     * 
     */
    @PolicyResourceProperty(name="servicePassword", flag="unknown_servicePassword")
    private String value_servicePassword;
    private boolean unknown_servicePassword;
    public String servicePassword() {
        if (!unknown_servicePassword) return value_servicePassword;
        throw new UndeferrableValueException("Value 'ServiceSpecificCredential.servicePassword' is not present");
    }

    /**
     * The unique identifier for the service-specific credential.
     * 
     */
    @PolicyResourceProperty(name="serviceSpecificCredentialId", flag="unknown_serviceSpecificCredentialId")
    private String value_serviceSpecificCredentialId;
    private boolean unknown_serviceSpecificCredentialId;
    public String serviceSpecificCredentialId() {
        if (!unknown_serviceSpecificCredentialId) return value_serviceSpecificCredentialId;
        throw new UndeferrableValueException("Value 'ServiceSpecificCredential.serviceSpecificCredentialId' is not present");
    }

    /**
     * The generated user name for the service-specific credential. This value is generated by combining the IAM user&#39;s name combined with the ID number of the AWS account, as in `jane-at-123456789012`, for example.
     * 
     */
    @PolicyResourceProperty(name="serviceUserName", flag="unknown_serviceUserName")
    private String value_serviceUserName;
    private boolean unknown_serviceUserName;
    public String serviceUserName() {
        if (!unknown_serviceUserName) return value_serviceUserName;
        throw new UndeferrableValueException("Value 'ServiceSpecificCredential.serviceUserName' is not present");
    }

    /**
     * The status to be assigned to the service-specific credential. Valid values are `Active` and `Inactive`. Default value is `Active`.
     * 
     */
    @PolicyResourceProperty(name="status", flag="unknown_status")
    private @Nullable String value_status;
    private boolean unknown_status;
    public @Nullable String status() {
        if (!unknown_status) return value_status;
        throw new UndeferrableValueException("Value 'ServiceSpecificCredential.status' is not present");
    }

    /**
     * The name of the IAM user that is to be associated with the credentials. The new service-specific credentials have the same permissions as the associated user except that they can be used only to access the specified service.
     * 
     */
    @PolicyResourceProperty(name="userName", flag="unknown_userName")
    private String value_userName;
    private boolean unknown_userName;
    public String userName() {
        if (!unknown_userName) return value_userName;
        throw new UndeferrableValueException("Value 'ServiceSpecificCredential.userName' is not present");
    }

}
