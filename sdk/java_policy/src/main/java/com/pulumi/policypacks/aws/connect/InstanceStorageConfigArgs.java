// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.connect;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.connect.inputs.InstanceStorageConfigStorageConfigArgs;
import java.lang.String;


@PolicyResourceType(type="aws:connect/instanceStorageConfig:InstanceStorageConfig")
public final class InstanceStorageConfigArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * Specifies the identifier of the hosting Amazon Connect Instance.
     * 
     */
    @PolicyResourceProperty(name="instanceId", flag="unknown_instanceId")
    private String value_instanceId;
    private boolean unknown_instanceId;
    public String instanceId() {
        if (!unknown_instanceId) return value_instanceId;
        throw new UndeferrableValueException("Value 'InstanceStorageConfigArgs.instanceId' is not present");
    }

    /**
     * A valid resource type. Valid Values: `AGENT_EVENTS` | `ATTACHMENTS` | `CALL_RECORDINGS` | `CHAT_TRANSCRIPTS` | `CONTACT_EVALUATIONS` | `CONTACT_TRACE_RECORDS` | `EMAIL_MESSAGES` | `MEDIA_STREAMS` | `REAL_TIME_CONTACT_ANALYSIS_CHAT_SEGMENTS` | `REAL_TIME_CONTACT_ANALYSIS_SEGMENTS` | `REAL_TIME_CONTACT_ANALYSIS_VOICE_SEGMENTS` | `SCHEDULED_REPORTS` | `SCREEN_RECORDINGS`.
     * 
     */
    @PolicyResourceProperty(name="resourceType", flag="unknown_resourceType")
    private String value_resourceType;
    private boolean unknown_resourceType;
    public String resourceType() {
        if (!unknown_resourceType) return value_resourceType;
        throw new UndeferrableValueException("Value 'InstanceStorageConfigArgs.resourceType' is not present");
    }

    /**
     * Specifies the storage configuration options for the Connect Instance. Documented below.
     * 
     */
    @PolicyResourceProperty(name="storageConfig", flag="unknown_storageConfig")
    private InstanceStorageConfigStorageConfigArgs value_storageConfig;
    private boolean unknown_storageConfig;
    public InstanceStorageConfigStorageConfigArgs storageConfig() {
        if (!unknown_storageConfig) return value_storageConfig;
        throw new UndeferrableValueException("Value 'InstanceStorageConfigArgs.storageConfig' is not present");
    }

}
