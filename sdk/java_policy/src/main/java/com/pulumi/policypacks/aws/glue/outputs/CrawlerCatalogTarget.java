// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.glue.outputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class CrawlerCatalogTarget {

    /**
     * The name of the connection for an Amazon S3-backed Data Catalog table to be a target of the crawl when using a Catalog connection type paired with a `NETWORK` Connection type.
     * 
     */
    private @Nullable UndeferrableValue<String> connectionName;

    public @Nullable String connectionName() {
        if (connectionName == null) return null;
        return connectionName.getValue("CrawlerCatalogTarget.connectionName");
    }

    /**
     * The name of the Glue database to be synchronized.
     * 
     */
    private UndeferrableValue<String> databaseName;

    public String databaseName() {
        if (databaseName == null) return null;
        return databaseName.getValue("CrawlerCatalogTarget.databaseName");
    }

    /**
     * A valid Amazon SQS ARN.
     * 
     * &gt; **Note:** `deletion_behavior` of catalog target doesn&#39;t support `DEPRECATE_IN_DATABASE`.
     * 
     * &gt; **Note:** `configuration` for catalog target crawlers will have `{ ... &#34;Grouping&#34;: { &#34;TableGroupingPolicy&#34;: &#34;CombineCompatibleSchemas&#34;} }` by default.
     * 
     */
    private @Nullable UndeferrableValue<String> dlqEventQueueArn;

    public @Nullable String dlqEventQueueArn() {
        if (dlqEventQueueArn == null) return null;
        return dlqEventQueueArn.getValue("CrawlerCatalogTarget.dlqEventQueueArn");
    }

    /**
     * A valid Amazon SQS ARN.
     * 
     */
    private @Nullable UndeferrableValue<String> eventQueueArn;

    public @Nullable String eventQueueArn() {
        if (eventQueueArn == null) return null;
        return eventQueueArn.getValue("CrawlerCatalogTarget.eventQueueArn");
    }

    /**
     * A list of catalog tables to be synchronized.
     * 
     */
    private UndeferrableValue<List<String>> tables;

    public List<String> tables() {
        if (tables == null) return null;
        return tables.getValue("CrawlerCatalogTarget.tables");
    }

}
