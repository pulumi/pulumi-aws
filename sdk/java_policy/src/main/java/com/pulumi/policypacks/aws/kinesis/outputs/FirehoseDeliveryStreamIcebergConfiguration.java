// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.kinesis.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.kinesis.outputs.FirehoseDeliveryStreamIcebergConfigurationCloudwatchLoggingOptions;
import com.pulumi.policypacks.aws.kinesis.outputs.FirehoseDeliveryStreamIcebergConfigurationDestinationTableConfiguration;
import com.pulumi.policypacks.aws.kinesis.outputs.FirehoseDeliveryStreamIcebergConfigurationProcessingConfiguration;
import com.pulumi.policypacks.aws.kinesis.outputs.FirehoseDeliveryStreamIcebergConfigurationS3Configuration;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


public final class FirehoseDeliveryStreamIcebergConfiguration {

    /**
     * Buffer incoming data for the specified period of time, in seconds between 0 and 900, before delivering it to the destination. The default value is 300.
     * 
     */
    private @Nullable UndeferrableValue<Integer> bufferingInterval;

    public @Nullable Integer bufferingInterval() {
        if (bufferingInterval == null) return null;
        return bufferingInterval.getValue("FirehoseDeliveryStreamIcebergConfiguration.bufferingInterval");
    }

    /**
     * Buffer incoming data to the specified size, in MBs between 1 and 128, before delivering it to the destination. The default value is 5.
     * 
     */
    private @Nullable UndeferrableValue<Integer> bufferingSize;

    public @Nullable Integer bufferingSize() {
        if (bufferingSize == null) return null;
        return bufferingSize.getValue("FirehoseDeliveryStreamIcebergConfiguration.bufferingSize");
    }

    /**
     * Glue catalog ARN identifier of the destination Apache Iceberg Tables. You must specify the ARN in the format `arn:aws:glue:region:account-id:catalog`
     * 
     */
    private UndeferrableValue<String> catalogArn;

    public String catalogArn() {
        if (catalogArn == null) return null;
        return catalogArn.getValue("FirehoseDeliveryStreamIcebergConfiguration.catalogArn");
    }

    /**
     * The CloudWatch Logging Options for the delivery stream. See `cloudwatch_logging_options` block below for details.
     * 
     */
    private @Nullable UndeferrableValue<FirehoseDeliveryStreamIcebergConfigurationCloudwatchLoggingOptions> cloudwatchLoggingOptions;

    public @Nullable FirehoseDeliveryStreamIcebergConfigurationCloudwatchLoggingOptions cloudwatchLoggingOptions() {
        if (cloudwatchLoggingOptions == null) return null;
        return cloudwatchLoggingOptions.getValue("FirehoseDeliveryStreamIcebergConfiguration.cloudwatchLoggingOptions");
    }

    /**
     * Destination table configurations which Firehose uses to deliver data to Apache Iceberg Tables. Firehose will write data with insert if table specific configuration is not provided. See `destination_table_configuration` block below for details.
     * 
     */
    private @Nullable UndeferrableValue<List<FirehoseDeliveryStreamIcebergConfigurationDestinationTableConfiguration>> destinationTableConfigurations;

    public @Nullable List<FirehoseDeliveryStreamIcebergConfigurationDestinationTableConfiguration> destinationTableConfigurations() {
        if (destinationTableConfigurations == null) return null;
        return destinationTableConfigurations.getValue("FirehoseDeliveryStreamIcebergConfiguration.destinationTableConfigurations");
    }

    /**
     * The data processing configuration.  See `processing_configuration` block below for details.
     * 
     */
    private @Nullable UndeferrableValue<FirehoseDeliveryStreamIcebergConfigurationProcessingConfiguration> processingConfiguration;

    public @Nullable FirehoseDeliveryStreamIcebergConfigurationProcessingConfiguration processingConfiguration() {
        if (processingConfiguration == null) return null;
        return processingConfiguration.getValue("FirehoseDeliveryStreamIcebergConfiguration.processingConfiguration");
    }

    /**
     * The period of time, in seconds between 0 to 7200, during which Firehose retries to deliver data to the specified destination.
     * 
     */
    private @Nullable UndeferrableValue<Integer> retryDuration;

    public @Nullable Integer retryDuration() {
        if (retryDuration == null) return null;
        return retryDuration.getValue("FirehoseDeliveryStreamIcebergConfiguration.retryDuration");
    }

    /**
     * The ARN of the IAM role to be assumed by Firehose for calling Apache Iceberg Tables.
     * 
     */
    private UndeferrableValue<String> roleArn;

    public String roleArn() {
        if (roleArn == null) return null;
        return roleArn.getValue("FirehoseDeliveryStreamIcebergConfiguration.roleArn");
    }

    private @Nullable UndeferrableValue<String> s3BackupMode;

    public @Nullable String s3BackupMode() {
        if (s3BackupMode == null) return null;
        return s3BackupMode.getValue("FirehoseDeliveryStreamIcebergConfiguration.s3BackupMode");
    }

    /**
     * The S3 Configuration. See `s3_configuration` block below for details.
     * 
     */
    private UndeferrableValue<FirehoseDeliveryStreamIcebergConfigurationS3Configuration> s3Configuration;

    public FirehoseDeliveryStreamIcebergConfigurationS3Configuration s3Configuration() {
        if (s3Configuration == null) return null;
        return s3Configuration.getValue("FirehoseDeliveryStreamIcebergConfiguration.s3Configuration");
    }

}
