// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.msk;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.msk.inputs.ReplicatorKafkaClusterArgs;
import com.pulumi.policypacks.aws.msk.inputs.ReplicatorReplicationInfoListArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:msk/replicator:Replicator")
public final class ReplicatorArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * A summary description of the replicator.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("ReplicatorArgs.description");
    }

    /**
     * A list of Kafka clusters which are targets of the replicator.
     * 
     */
    private UndeferrableValue<List<ReplicatorKafkaClusterArgs>> kafkaClusters;

    public List<ReplicatorKafkaClusterArgs> kafkaClusters() {
        if (kafkaClusters == null) return null;
        return kafkaClusters.getValue("ReplicatorArgs.kafkaClusters");
    }

    /**
     * A list of replication configurations, where each configuration targets a given source cluster to target cluster replication flow.
     * 
     */
    private UndeferrableValue<ReplicatorReplicationInfoListArgs> replicationInfoList;

    public ReplicatorReplicationInfoListArgs replicationInfoList() {
        if (replicationInfoList == null) return null;
        return replicationInfoList.getValue("ReplicatorArgs.replicationInfoList");
    }

    /**
     * The name of the replicator.
     * 
     */
    private UndeferrableValue<String> replicatorName;

    public String replicatorName() {
        if (replicatorName == null) return null;
        return replicatorName.getValue("ReplicatorArgs.replicatorName");
    }

    /**
     * The ARN of the IAM role used by the replicator to access resources in the customer&#39;s account (e.g source and target clusters).
     * 
     */
    private UndeferrableValue<String> serviceExecutionRoleArn;

    public String serviceExecutionRoleArn() {
        if (serviceExecutionRoleArn == null) return null;
        return serviceExecutionRoleArn.getValue("ReplicatorArgs.serviceExecutionRoleArn");
    }

    /**
     * A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private UndeferrableValue<Map<String,String>> tags;

    public Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("ReplicatorArgs.tags");
    }

}
