// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.emrcontainers;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.emrcontainers.inputs.JobTemplateJobTemplateDataArgs;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:emrcontainers/jobTemplate:JobTemplate")
public final class JobTemplateArgs extends com.pulumi.resources.PolicyResourceInput {

    /**
     * The job template data which holds values of StartJobRun API request.
     * 
     */
    @PolicyResourceProperty(name="jobTemplateData", flag="unknown_jobTemplateData")
    private JobTemplateJobTemplateDataArgs value_jobTemplateData;
    private boolean unknown_jobTemplateData;
    public JobTemplateJobTemplateDataArgs jobTemplateData() {
        if (!unknown_jobTemplateData) return value_jobTemplateData;
        throw new UndeferrableValueException("Value 'JobTemplateArgs.jobTemplateData' is not present");
    }

    /**
     * The KMS key ARN used to encrypt the job template.
     * 
     */
    @PolicyResourceProperty(name="kmsKeyArn", flag="unknown_kmsKeyArn")
    private String value_kmsKeyArn;
    private boolean unknown_kmsKeyArn;
    public String kmsKeyArn() {
        if (!unknown_kmsKeyArn) return value_kmsKeyArn;
        throw new UndeferrableValueException("Value 'JobTemplateArgs.kmsKeyArn' is not present");
    }

    /**
     * The specified name of the job template.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'JobTemplateArgs.name' is not present");
    }

    /**
     * Key-value mapping of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private Map<String,String> value_tags;
    private boolean unknown_tags;
    public Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'JobTemplateArgs.tags' is not present");
    }

}
