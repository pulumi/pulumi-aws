// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.bedrock;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.bedrock.outputs.GuardrailContentPolicyConfig;
import com.pulumi.policypacks.aws.bedrock.outputs.GuardrailContextualGroundingPolicyConfig;
import com.pulumi.policypacks.aws.bedrock.outputs.GuardrailSensitiveInformationPolicyConfig;
import com.pulumi.policypacks.aws.bedrock.outputs.GuardrailTimeouts;
import com.pulumi.policypacks.aws.bedrock.outputs.GuardrailTopicPolicyConfig;
import com.pulumi.policypacks.aws.bedrock.outputs.GuardrailWordPolicyConfig;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:bedrock/guardrail:Guardrail")
public final class Guardrail extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Message to return when the guardrail blocks a prompt.
     * 
     */
    private UndeferrableValue<String> blockedInputMessaging;

    public String blockedInputMessaging() {
        if (blockedInputMessaging == null) return null;
        return blockedInputMessaging.getValue("Guardrail.blockedInputMessaging");
    }

    /**
     * Message to return when the guardrail blocks a model response.
     * 
     */
    private UndeferrableValue<String> blockedOutputsMessaging;

    public String blockedOutputsMessaging() {
        if (blockedOutputsMessaging == null) return null;
        return blockedOutputsMessaging.getValue("Guardrail.blockedOutputsMessaging");
    }

    /**
     * Content policy config for a guardrail. See Content Policy Config for more information.
     * 
     */
    private @Nullable UndeferrableValue<GuardrailContentPolicyConfig> contentPolicyConfig;

    public @Nullable GuardrailContentPolicyConfig contentPolicyConfig() {
        if (contentPolicyConfig == null) return null;
        return contentPolicyConfig.getValue("Guardrail.contentPolicyConfig");
    }

    /**
     * Contextual grounding policy config for a guardrail. See Contextual Grounding Policy Config for more information.
     * 
     */
    private @Nullable UndeferrableValue<GuardrailContextualGroundingPolicyConfig> contextualGroundingPolicyConfig;

    public @Nullable GuardrailContextualGroundingPolicyConfig contextualGroundingPolicyConfig() {
        if (contextualGroundingPolicyConfig == null) return null;
        return contextualGroundingPolicyConfig.getValue("Guardrail.contextualGroundingPolicyConfig");
    }

    /**
     * Unix epoch timestamp in seconds for when the Guardrail was created.
     * 
     */
    private UndeferrableValue<String> createdAt;

    public String createdAt() {
        if (createdAt == null) return null;
        return createdAt.getValue("Guardrail.createdAt");
    }

    /**
     * Description of the guardrail or its version.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("Guardrail.description");
    }

    /**
     * ARN of the Guardrail.
     * 
     */
    private UndeferrableValue<String> guardrailArn;

    public String guardrailArn() {
        if (guardrailArn == null) return null;
        return guardrailArn.getValue("Guardrail.guardrailArn");
    }

    /**
     * ID of the Guardrail.
     * 
     */
    private UndeferrableValue<String> guardrailId;

    public String guardrailId() {
        if (guardrailId == null) return null;
        return guardrailId.getValue("Guardrail.guardrailId");
    }

    /**
     * The KMS key with which the guardrail was encrypted at rest.
     * 
     */
    private @Nullable UndeferrableValue<String> kmsKeyArn;

    public @Nullable String kmsKeyArn() {
        if (kmsKeyArn == null) return null;
        return kmsKeyArn.getValue("Guardrail.kmsKeyArn");
    }

    /**
     * Name of the guardrail.
     * 
     * The following arguments are optional:
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("Guardrail.name");
    }

    /**
     * Sensitive information policy config for a guardrail. See Sensitive Information Policy Config for more information.
     * 
     */
    private @Nullable UndeferrableValue<GuardrailSensitiveInformationPolicyConfig> sensitiveInformationPolicyConfig;

    public @Nullable GuardrailSensitiveInformationPolicyConfig sensitiveInformationPolicyConfig() {
        if (sensitiveInformationPolicyConfig == null) return null;
        return sensitiveInformationPolicyConfig.getValue("Guardrail.sensitiveInformationPolicyConfig");
    }

    /**
     * Status of the Bedrock Guardrail. One of `READY`, `FAILED`.
     * 
     */
    private UndeferrableValue<String> status;

    public String status() {
        if (status == null) return null;
        return status.getValue("Guardrail.status");
    }

    /**
     * Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private @Nullable UndeferrableValue<Map<String,String>> tags;

    public @Nullable Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("Guardrail.tags");
    }

    /**
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    private UndeferrableValue<Map<String,String>> tagsAll;

    public Map<String,String> tagsAll() {
        if (tagsAll == null) return null;
        return tagsAll.getValue("Guardrail.tagsAll");
    }

    private @Nullable UndeferrableValue<GuardrailTimeouts> timeouts;

    public @Nullable GuardrailTimeouts timeouts() {
        if (timeouts == null) return null;
        return timeouts.getValue("Guardrail.timeouts");
    }

    /**
     * Topic policy config for a guardrail. See Topic Policy Config for more information.
     * 
     */
    private @Nullable UndeferrableValue<GuardrailTopicPolicyConfig> topicPolicyConfig;

    public @Nullable GuardrailTopicPolicyConfig topicPolicyConfig() {
        if (topicPolicyConfig == null) return null;
        return topicPolicyConfig.getValue("Guardrail.topicPolicyConfig");
    }

    /**
     * Version of the Guardrail.
     * 
     */
    private UndeferrableValue<String> version;

    public String version() {
        if (version == null) return null;
        return version.getValue("Guardrail.version");
    }

    /**
     * Word policy config for a guardrail. See Word Policy Config for more information.
     * 
     */
    private @Nullable UndeferrableValue<GuardrailWordPolicyConfig> wordPolicyConfig;

    public @Nullable GuardrailWordPolicyConfig wordPolicyConfig() {
        if (wordPolicyConfig == null) return null;
        return wordPolicyConfig.getValue("Guardrail.wordPolicyConfig");
    }

}
