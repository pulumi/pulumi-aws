// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.kinesis.outputs;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.policypacks.aws.kinesis.outputs.FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions;
import com.pulumi.policypacks.aws.kinesis.outputs.FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration;
import com.pulumi.policypacks.aws.kinesis.outputs.FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfiguration;
import com.pulumi.policypacks.aws.kinesis.outputs.FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration;
import com.pulumi.policypacks.aws.kinesis.outputs.FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;


public final class FirehoseDeliveryStreamExtendedS3Configuration {

    /**
     * The ARN of the S3 bucket
     * 
     */
    private UndeferrableValue<String> bucketArn;

    public String bucketArn() {
        if (bucketArn == null) return null;
        return bucketArn.getValue("FirehoseDeliveryStreamExtendedS3Configuration.bucketArn");
    }

    private @Nullable UndeferrableValue<Integer> bufferingInterval;

    public @Nullable Integer bufferingInterval() {
        if (bufferingInterval == null) return null;
        return bufferingInterval.getValue("FirehoseDeliveryStreamExtendedS3Configuration.bufferingInterval");
    }

    private @Nullable UndeferrableValue<Integer> bufferingSize;

    public @Nullable Integer bufferingSize() {
        if (bufferingSize == null) return null;
        return bufferingSize.getValue("FirehoseDeliveryStreamExtendedS3Configuration.bufferingSize");
    }

    private @Nullable UndeferrableValue<FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions> cloudwatchLoggingOptions;

    public @Nullable FirehoseDeliveryStreamExtendedS3ConfigurationCloudwatchLoggingOptions cloudwatchLoggingOptions() {
        if (cloudwatchLoggingOptions == null) return null;
        return cloudwatchLoggingOptions.getValue("FirehoseDeliveryStreamExtendedS3Configuration.cloudwatchLoggingOptions");
    }

    /**
     * The compression format. If no value is specified, the default is `UNCOMPRESSED`. Other supported values are `GZIP`, `ZIP`, `Snappy`, &amp; `HADOOP_SNAPPY`.
     * 
     */
    private @Nullable UndeferrableValue<String> compressionFormat;

    public @Nullable String compressionFormat() {
        if (compressionFormat == null) return null;
        return compressionFormat.getValue("FirehoseDeliveryStreamExtendedS3Configuration.compressionFormat");
    }

    /**
     * The time zone you prefer. Valid values are `UTC` or a non-3-letter IANA time zones (for example, `America/Los_Angeles`). Default value is `UTC`.
     * 
     */
    private @Nullable UndeferrableValue<String> customTimeZone;

    public @Nullable String customTimeZone() {
        if (customTimeZone == null) return null;
        return customTimeZone.getValue("FirehoseDeliveryStreamExtendedS3Configuration.customTimeZone");
    }

    /**
     * Nested argument for the serializer, deserializer, and schema for converting data from the JSON format to the Parquet or ORC format before writing it to Amazon S3. See `data_format_conversion_configuration` block below for details.
     * 
     */
    private @Nullable UndeferrableValue<FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration> dataFormatConversionConfiguration;

    public @Nullable FirehoseDeliveryStreamExtendedS3ConfigurationDataFormatConversionConfiguration dataFormatConversionConfiguration() {
        if (dataFormatConversionConfiguration == null) return null;
        return dataFormatConversionConfiguration.getValue("FirehoseDeliveryStreamExtendedS3Configuration.dataFormatConversionConfiguration");
    }

    /**
     * The configuration for dynamic partitioning. Required when using [dynamic partitioning](https://docs.aws.amazon.com/firehose/latest/dev/dynamic-partitioning.html). See `dynamic_partitioning_configuration` block below for details.
     * 
     */
    private @Nullable UndeferrableValue<FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfiguration> dynamicPartitioningConfiguration;

    public @Nullable FirehoseDeliveryStreamExtendedS3ConfigurationDynamicPartitioningConfiguration dynamicPartitioningConfiguration() {
        if (dynamicPartitioningConfiguration == null) return null;
        return dynamicPartitioningConfiguration.getValue("FirehoseDeliveryStreamExtendedS3Configuration.dynamicPartitioningConfiguration");
    }

    /**
     * Prefix added to failed records before writing them to S3. Not currently supported for `redshift` destination. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see [Custom Prefixes for Amazon S3 Objects](https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html).
     * 
     */
    private @Nullable UndeferrableValue<String> errorOutputPrefix;

    public @Nullable String errorOutputPrefix() {
        if (errorOutputPrefix == null) return null;
        return errorOutputPrefix.getValue("FirehoseDeliveryStreamExtendedS3Configuration.errorOutputPrefix");
    }

    /**
     * The file extension to override the default file extension (for example, `.json`).
     * 
     */
    private @Nullable UndeferrableValue<String> fileExtension;

    public @Nullable String fileExtension() {
        if (fileExtension == null) return null;
        return fileExtension.getValue("FirehoseDeliveryStreamExtendedS3Configuration.fileExtension");
    }

    /**
     * Specifies the KMS key ARN the stream will use to encrypt data. If not set, no encryption will
     * be used.
     * 
     */
    private @Nullable UndeferrableValue<String> kmsKeyArn;

    public @Nullable String kmsKeyArn() {
        if (kmsKeyArn == null) return null;
        return kmsKeyArn.getValue("FirehoseDeliveryStreamExtendedS3Configuration.kmsKeyArn");
    }

    /**
     * The &#34;YYYY/MM/DD/HH&#34; time format prefix is automatically used for delivered S3 files. You can specify an extra prefix to be added in front of the time format prefix. Note that if the prefix ends with a slash, it appears as a folder in the S3 bucket
     * 
     */
    private @Nullable UndeferrableValue<String> prefix;

    public @Nullable String prefix() {
        if (prefix == null) return null;
        return prefix.getValue("FirehoseDeliveryStreamExtendedS3Configuration.prefix");
    }

    /**
     * The data processing configuration.  See `processing_configuration` block below for details.
     * 
     */
    private @Nullable UndeferrableValue<FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration> processingConfiguration;

    public @Nullable FirehoseDeliveryStreamExtendedS3ConfigurationProcessingConfiguration processingConfiguration() {
        if (processingConfiguration == null) return null;
        return processingConfiguration.getValue("FirehoseDeliveryStreamExtendedS3Configuration.processingConfiguration");
    }

    private UndeferrableValue<String> roleArn;

    public String roleArn() {
        if (roleArn == null) return null;
        return roleArn.getValue("FirehoseDeliveryStreamExtendedS3Configuration.roleArn");
    }

    /**
     * The configuration for backup in Amazon S3. Required if `s3_backup_mode` is `Enabled`. Supports the same fields as `s3_configuration` object.
     * 
     */
    private @Nullable UndeferrableValue<FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration> s3BackupConfiguration;

    public @Nullable FirehoseDeliveryStreamExtendedS3ConfigurationS3BackupConfiguration s3BackupConfiguration() {
        if (s3BackupConfiguration == null) return null;
        return s3BackupConfiguration.getValue("FirehoseDeliveryStreamExtendedS3Configuration.s3BackupConfiguration");
    }

    /**
     * The Amazon S3 backup mode.  Valid values are `Disabled` and `Enabled`.  Default value is `Disabled`.
     * 
     */
    private @Nullable UndeferrableValue<String> s3BackupMode;

    public @Nullable String s3BackupMode() {
        if (s3BackupMode == null) return null;
        return s3BackupMode.getValue("FirehoseDeliveryStreamExtendedS3Configuration.s3BackupMode");
    }

}
