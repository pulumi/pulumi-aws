// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appconfig;

import com.pulumi.core.UndeferrableValue;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.appconfig.outputs.ExtensionActionPoint;
import com.pulumi.policypacks.aws.appconfig.outputs.ExtensionParameter;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:appconfig/extension:Extension")
public final class Extension extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The action points defined in the extension. Detailed below.
     * 
     */
    private UndeferrableValue<List<ExtensionActionPoint>> actionPoints;

    public List<ExtensionActionPoint> actionPoints() {
        if (actionPoints == null) return null;
        return actionPoints.getValue("Extension.actionPoints");
    }

    /**
     * ARN of the AppConfig Extension.
     * 
     */
    private UndeferrableValue<String> arn;

    public String arn() {
        if (arn == null) return null;
        return arn.getValue("Extension.arn");
    }

    /**
     * Information about the extension.
     * 
     */
    private UndeferrableValue<String> description;

    public String description() {
        if (description == null) return null;
        return description.getValue("Extension.description");
    }

    /**
     * A name for the extension. Each extension name in your account must be unique. Extension versions use the same name.
     * 
     */
    private UndeferrableValue<String> name;

    public String name() {
        if (name == null) return null;
        return name.getValue("Extension.name");
    }

    /**
     * The parameters accepted by the extension. You specify parameter values when you associate the extension to an AppConfig resource by using the CreateExtensionAssociation API action. For Lambda extension actions, these parameters are included in the Lambda request object. Detailed below.
     * 
     */
    private UndeferrableValue<List<ExtensionParameter>> parameters;

    public List<ExtensionParameter> parameters() {
        if (parameters == null) return null;
        return parameters.getValue("Extension.parameters");
    }

    /**
     * Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    private @Nullable UndeferrableValue<Map<String,String>> tags;

    public @Nullable Map<String,String> tags() {
        if (tags == null) return null;
        return tags.getValue("Extension.tags");
    }

    /**
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    private UndeferrableValue<Map<String,String>> tagsAll;

    public Map<String,String> tagsAll() {
        if (tagsAll == null) return null;
        return tagsAll.getValue("Extension.tagsAll");
    }

    /**
     * The version number for the extension.
     * 
     */
    private UndeferrableValue<Integer> version;

    public Integer version() {
        if (version == null) return null;
        return version.getValue("Extension.version");
    }

}
