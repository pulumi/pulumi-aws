// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.appconfig;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.appconfig.outputs.ExtensionActionPoint;
import com.pulumi.policypacks.aws.appconfig.outputs.ExtensionParameter;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:appconfig/extension:Extension")
public final class Extension extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * The action points defined in the extension. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="actionPoints", flag="unknown_actionPoints")
    private List<ExtensionActionPoint> value_actionPoints;
    private boolean unknown_actionPoints;
    public List<ExtensionActionPoint> actionPoints() {
        if (!unknown_actionPoints) return value_actionPoints;
        throw new UndeferrableValueException("Value 'Extension.actionPoints' is not present");
    }

    /**
     * ARN of the AppConfig Extension.
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'Extension.arn' is not present");
    }

    /**
     * Information about the extension.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private String value_description;
    private boolean unknown_description;
    public String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'Extension.description' is not present");
    }

    /**
     * A name for the extension. Each extension name in your account must be unique. Extension versions use the same name.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'Extension.name' is not present");
    }

    /**
     * The parameters accepted by the extension. You specify parameter values when you associate the extension to an AppConfig resource by using the CreateExtensionAssociation API action. For Lambda extension actions, these parameters are included in the Lambda request object. Detailed below.
     * 
     */
    @PolicyResourceProperty(name="parameters", flag="unknown_parameters")
    private List<ExtensionParameter> value_parameters;
    private boolean unknown_parameters;
    public List<ExtensionParameter> parameters() {
        if (!unknown_parameters) return value_parameters;
        throw new UndeferrableValueException("Value 'Extension.parameters' is not present");
    }

    /**
     * Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
     * 
     */
    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'Extension.tags' is not present");
    }

    /**
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'Extension.tagsAll' is not present");
    }

    /**
     * The version number for the extension.
     * 
     */
    @PolicyResourceProperty(name="version", flag="unknown_version")
    private Integer value_version;
    private boolean unknown_version;
    public Integer version() {
        if (!unknown_version) return value_version;
        throw new UndeferrableValueException("Value 'Extension.version' is not present");
    }

}
