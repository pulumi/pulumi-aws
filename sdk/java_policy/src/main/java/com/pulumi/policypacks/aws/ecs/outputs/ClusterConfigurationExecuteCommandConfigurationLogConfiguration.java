// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.ecs.outputs;

import com.pulumi.core.UndeferrableValue;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;


public final class ClusterConfigurationExecuteCommandConfigurationLogConfiguration {

    /**
     * Whether to enable encryption on the CloudWatch logs. If not specified, encryption will be disabled.
     * 
     */
    private @Nullable UndeferrableValue<Boolean> cloudWatchEncryptionEnabled;

    public @Nullable Boolean cloudWatchEncryptionEnabled() {
        if (cloudWatchEncryptionEnabled == null) return null;
        return cloudWatchEncryptionEnabled.getValue("ClusterConfigurationExecuteCommandConfigurationLogConfiguration.cloudWatchEncryptionEnabled");
    }

    /**
     * The name of the CloudWatch log group to send logs to.
     * 
     */
    private @Nullable UndeferrableValue<String> cloudWatchLogGroupName;

    public @Nullable String cloudWatchLogGroupName() {
        if (cloudWatchLogGroupName == null) return null;
        return cloudWatchLogGroupName.getValue("ClusterConfigurationExecuteCommandConfigurationLogConfiguration.cloudWatchLogGroupName");
    }

    /**
     * Whether to enable encryption on the logs sent to S3. If not specified, encryption will be disabled.
     * 
     */
    private @Nullable UndeferrableValue<Boolean> s3BucketEncryptionEnabled;

    public @Nullable Boolean s3BucketEncryptionEnabled() {
        if (s3BucketEncryptionEnabled == null) return null;
        return s3BucketEncryptionEnabled.getValue("ClusterConfigurationExecuteCommandConfigurationLogConfiguration.s3BucketEncryptionEnabled");
    }

    /**
     * Name of the S3 bucket to send logs to.
     * 
     */
    private @Nullable UndeferrableValue<String> s3BucketName;

    public @Nullable String s3BucketName() {
        if (s3BucketName == null) return null;
        return s3BucketName.getValue("ClusterConfigurationExecuteCommandConfigurationLogConfiguration.s3BucketName");
    }

    /**
     * Optional folder in the S3 bucket to place logs in.
     * 
     */
    private @Nullable UndeferrableValue<String> s3KeyPrefix;

    public @Nullable String s3KeyPrefix() {
        if (s3KeyPrefix == null) return null;
        return s3KeyPrefix.getValue("ClusterConfigurationExecuteCommandConfigurationLogConfiguration.s3KeyPrefix");
    }

}
