// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.datazone;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.datazone.outputs.ProjectFailureReason;
import com.pulumi.policypacks.aws.datazone.outputs.ProjectTimeouts;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:datazone/project:Project")
public final class Project extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Timestamp of when the project was made.
     * 
     */
    @PolicyResourceProperty(name="createdAt", flag="unknown_createdAt")
    private String value_createdAt;
    private boolean unknown_createdAt;
    public String createdAt() {
        if (!unknown_createdAt) return value_createdAt;
        throw new UndeferrableValueException("Value 'Project.createdAt' is not present");
    }

    /**
     * Creator of the project.
     * 
     */
    @PolicyResourceProperty(name="createdBy", flag="unknown_createdBy")
    private String value_createdBy;
    private boolean unknown_createdBy;
    public String createdBy() {
        if (!unknown_createdBy) return value_createdBy;
        throw new UndeferrableValueException("Value 'Project.createdBy' is not present");
    }

    /**
     * Description of project.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private @Nullable String value_description;
    private boolean unknown_description;
    public @Nullable String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'Project.description' is not present");
    }

    /**
     * Identifier of domain which the project is part of. Must follow the regex of `^dzd[-_][a-zA-Z0-9_-]{1,36}$`.
     * 
     */
    @PolicyResourceProperty(name="domainIdentifier", flag="unknown_domainIdentifier")
    private String value_domainIdentifier;
    private boolean unknown_domainIdentifier;
    public String domainIdentifier() {
        if (!unknown_domainIdentifier) return value_domainIdentifier;
        throw new UndeferrableValueException("Value 'Project.domainIdentifier' is not present");
    }

    /**
     * List of error messages if operation cannot be completed.
     * 
     */
    @PolicyResourceProperty(name="failureReasons", flag="unknown_failureReasons")
    private List<ProjectFailureReason> value_failureReasons;
    private boolean unknown_failureReasons;
    public List<ProjectFailureReason> failureReasons() {
        if (!unknown_failureReasons) return value_failureReasons;
        throw new UndeferrableValueException("Value 'Project.failureReasons' is not present");
    }

    /**
     * List of glossary terms that can be used in the project. The list cannot be empty or include over 20 values. Each value must follow the regex of `[a-zA-Z0-9_-]{1,36}$`.
     * 
     */
    @PolicyResourceProperty(name="glossaryTerms", flag="unknown_glossaryTerms")
    private @Nullable List<String> value_glossaryTerms;
    private boolean unknown_glossaryTerms;
    public @Nullable List<String> glossaryTerms() {
        if (!unknown_glossaryTerms) return value_glossaryTerms;
        throw new UndeferrableValueException("Value 'Project.glossaryTerms' is not present");
    }

    /**
     * Timestamp of when the project was last updated.
     * 
     */
    @PolicyResourceProperty(name="lastUpdatedAt", flag="unknown_lastUpdatedAt")
    private String value_lastUpdatedAt;
    private boolean unknown_lastUpdatedAt;
    public String lastUpdatedAt() {
        if (!unknown_lastUpdatedAt) return value_lastUpdatedAt;
        throw new UndeferrableValueException("Value 'Project.lastUpdatedAt' is not present");
    }

    /**
     * Name of the project. Must follow the regex of `^[\w -]+$`. and have a length of at most 64.
     * 
     * The following arguments are optional:
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'Project.name' is not present");
    }

    /**
     * Enum that conveys state of project. Can be `ACTIVE`, `DELETING`, or `DELETE_FAILED`.
     * 
     */
    @PolicyResourceProperty(name="projectStatus", flag="unknown_projectStatus")
    private String value_projectStatus;
    private boolean unknown_projectStatus;
    public String projectStatus() {
        if (!unknown_projectStatus) return value_projectStatus;
        throw new UndeferrableValueException("Value 'Project.projectStatus' is not present");
    }

    /**
     * Optional flag to delete all child entities within the project.
     * 
     */
    @PolicyResourceProperty(name="skipDeletionCheck", flag="unknown_skipDeletionCheck")
    private @Nullable Boolean value_skipDeletionCheck;
    private boolean unknown_skipDeletionCheck;
    public @Nullable Boolean skipDeletionCheck() {
        if (!unknown_skipDeletionCheck) return value_skipDeletionCheck;
        throw new UndeferrableValueException("Value 'Project.skipDeletionCheck' is not present");
    }

    @PolicyResourceProperty(name="timeouts", flag="unknown_timeouts")
    private @Nullable ProjectTimeouts value_timeouts;
    private boolean unknown_timeouts;
    public @Nullable ProjectTimeouts timeouts() {
        if (!unknown_timeouts) return value_timeouts;
        throw new UndeferrableValueException("Value 'Project.timeouts' is not present");
    }

}
