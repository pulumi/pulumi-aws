// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.policypacks.aws.apigateway;

import com.pulumi.core.UndeferrableValueException;
import com.pulumi.core.annotations.PolicyResourceProperty;
import com.pulumi.core.annotations.PolicyResourceType;
import com.pulumi.policypacks.aws.apigateway.outputs.UsagePlanApiStage;
import com.pulumi.policypacks.aws.apigateway.outputs.UsagePlanQuotaSettings;
import com.pulumi.policypacks.aws.apigateway.outputs.UsagePlanThrottleSettings;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;


@PolicyResourceType(type="aws:apigateway/usagePlan:UsagePlan")
public final class UsagePlan extends com.pulumi.resources.PolicyResourceOutput {

    /**
     * Associated API stages of the usage plan.
     * 
     */
    @PolicyResourceProperty(name="apiStages", flag="unknown_apiStages")
    private @Nullable List<UsagePlanApiStage> value_apiStages;
    private boolean unknown_apiStages;
    public @Nullable List<UsagePlanApiStage> apiStages() {
        if (!unknown_apiStages) return value_apiStages;
        throw new UndeferrableValueException("Value 'UsagePlan.apiStages' is not present");
    }

    /**
     * ARN
     * 
     */
    @PolicyResourceProperty(name="arn", flag="unknown_arn")
    private String value_arn;
    private boolean unknown_arn;
    public String arn() {
        if (!unknown_arn) return value_arn;
        throw new UndeferrableValueException("Value 'UsagePlan.arn' is not present");
    }

    /**
     * Description of a usage plan.
     * 
     */
    @PolicyResourceProperty(name="description", flag="unknown_description")
    private @Nullable String value_description;
    private boolean unknown_description;
    public @Nullable String description() {
        if (!unknown_description) return value_description;
        throw new UndeferrableValueException("Value 'UsagePlan.description' is not present");
    }

    /**
     * Name of the usage plan.
     * 
     */
    @PolicyResourceProperty(name="name", flag="unknown_name")
    private String value_name;
    private boolean unknown_name;
    public String name() {
        if (!unknown_name) return value_name;
        throw new UndeferrableValueException("Value 'UsagePlan.name' is not present");
    }

    /**
     * AWS Marketplace product identifier to associate with the usage plan as a SaaS product on AWS Marketplace.
     * 
     */
    @PolicyResourceProperty(name="productCode", flag="unknown_productCode")
    private @Nullable String value_productCode;
    private boolean unknown_productCode;
    public @Nullable String productCode() {
        if (!unknown_productCode) return value_productCode;
        throw new UndeferrableValueException("Value 'UsagePlan.productCode' is not present");
    }

    /**
     * Quota of the usage plan.
     * 
     */
    @PolicyResourceProperty(name="quotaSettings", flag="unknown_quotaSettings")
    private @Nullable UsagePlanQuotaSettings value_quotaSettings;
    private boolean unknown_quotaSettings;
    public @Nullable UsagePlanQuotaSettings quotaSettings() {
        if (!unknown_quotaSettings) return value_quotaSettings;
        throw new UndeferrableValueException("Value 'UsagePlan.quotaSettings' is not present");
    }

    @PolicyResourceProperty(name="tags", flag="unknown_tags")
    private @Nullable Map<String,String> value_tags;
    private boolean unknown_tags;
    public @Nullable Map<String,String> tags() {
        if (!unknown_tags) return value_tags;
        throw new UndeferrableValueException("Value 'UsagePlan.tags' is not present");
    }

    /**
     * Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
     * 
     * @deprecated
     * Please use `tags` instead.
     * 
     */
    @Deprecated /* Please use `tags` instead. */
    @PolicyResourceProperty(name="tagsAll", flag="unknown_tagsAll")
    private Map<String,String> value_tagsAll;
    private boolean unknown_tagsAll;
    public Map<String,String> tagsAll() {
        if (!unknown_tagsAll) return value_tagsAll;
        throw new UndeferrableValueException("Value 'UsagePlan.tagsAll' is not present");
    }

    /**
     * Throttling limits of the usage plan.
     * 
     */
    @PolicyResourceProperty(name="throttleSettings", flag="unknown_throttleSettings")
    private @Nullable UsagePlanThrottleSettings value_throttleSettings;
    private boolean unknown_throttleSettings;
    public @Nullable UsagePlanThrottleSettings throttleSettings() {
        if (!unknown_throttleSettings) return value_throttleSettings;
        throw new UndeferrableValueException("Value 'UsagePlan.throttleSettings' is not present");
    }

}
